; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?fixed_collision_count@@3HA			; fixed_collision_count
PUBLIC	?moving_collision_count@@3HA			; moving_collision_count
PUBLIC	?dynamics_collision_point_info@@3PAUDYNAMICS_COLLISION_POINT_TYPE@@A ; dynamics_collision_point_info
PUBLIC	??_C@_0CE@CCJBCAFA@DYNAMICS_COLLISION_POINT_MAIN_R@ ; `string'
PUBLIC	??_C@_0CE@LFAPNNGD@DYNAMICS_COLLISION_POINT_TAIL_R@ ; `string'
PUBLIC	??_C@_0CC@DCJOICBK@DYNAMICS_COLLISION_POINT_FUSELA@ ; `string'
PUBLIC	??_C@_0CC@JKEABBLK@DYNAMICS_COLLISION_POINT_NOSE_G@ ; `string'
PUBLIC	??_C@_0BP@GLKFMDJO@DYNAMICS_COLLISION_POINT_WHEEL@ ; `string'
PUBLIC	??_C@_0CC@JEFMCNKI@DYNAMICS_COLLISION_POINT_WING_T@ ; `string'
PUBLIC	??_C@_0CD@POJMFIEM@NUM_DYNAMICS_COLLISION_POINT_TY@ ; `string'
_BSS	SEGMENT
?fixed_collision_count@@3HA DD 01H DUP (?)		; fixed_collision_count
?moving_collision_count@@3HA DD 01H DUP (?)		; moving_collision_count
_BSS	ENDS
;	COMDAT ??_C@_0CD@POJMFIEM@NUM_DYNAMICS_COLLISION_POINT_TY@
CONST	SEGMENT
??_C@_0CD@POJMFIEM@NUM_DYNAMICS_COLLISION_POINT_TY@ DB 'NUM_DYNAMICS_COLL'
	DB	'ISION_POINT_TYPES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JEFMCNKI@DYNAMICS_COLLISION_POINT_WING_T@
CONST	SEGMENT
??_C@_0CC@JEFMCNKI@DYNAMICS_COLLISION_POINT_WING_T@ DB 'DYNAMICS_COLLISIO'
	DB	'N_POINT_WING_TIP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GLKFMDJO@DYNAMICS_COLLISION_POINT_WHEEL@
CONST	SEGMENT
??_C@_0BP@GLKFMDJO@DYNAMICS_COLLISION_POINT_WHEEL@ DB 'DYNAMICS_COLLISION'
	DB	'_POINT_WHEEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JKEABBLK@DYNAMICS_COLLISION_POINT_NOSE_G@
CONST	SEGMENT
??_C@_0CC@JKEABBLK@DYNAMICS_COLLISION_POINT_NOSE_G@ DB 'DYNAMICS_COLLISIO'
	DB	'N_POINT_NOSE_GUN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DCJOICBK@DYNAMICS_COLLISION_POINT_FUSELA@
CONST	SEGMENT
??_C@_0CC@DCJOICBK@DYNAMICS_COLLISION_POINT_FUSELA@ DB 'DYNAMICS_COLLISIO'
	DB	'N_POINT_FUSELAGE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LFAPNNGD@DYNAMICS_COLLISION_POINT_TAIL_R@
CONST	SEGMENT
??_C@_0CE@LFAPNNGD@DYNAMICS_COLLISION_POINT_TAIL_R@ DB 'DYNAMICS_COLLISIO'
	DB	'N_POINT_TAIL_ROTOR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CCJBCAFA@DYNAMICS_COLLISION_POINT_MAIN_R@
CONST	SEGMENT
??_C@_0CE@CCJBCAFA@DYNAMICS_COLLISION_POINT_MAIN_R@ DB 'DYNAMICS_COLLISIO'
	DB	'N_POINT_MAIN_ROTOR', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?dynamics_collision_point_info@@3PAUDYNAMICS_COLLISION_POINT_TYPE@@A DD FLAT:??_C@_0CE@CCJBCAFA@DYNAMICS_COLLISION_POINT_MAIN_R@ ; dynamics_collision_point_info
	DD	07H
	DD	01H
	DD	010002H
	DD	FLAT:??_C@_0CE@LFAPNNGD@DYNAMICS_COLLISION_POINT_TAIL_R@
	DD	08H
	DD	01H
	DD	0104H
	DD	FLAT:??_C@_0CC@DCJOICBK@DYNAMICS_COLLISION_POINT_FUSELA@
	DD	06H
	DD	00H
	DD	0df8H
	DD	FLAT:??_C@_0CC@JKEABBLK@DYNAMICS_COLLISION_POINT_NOSE_G@
	DD	012H
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BP@GLKFMDJO@DYNAMICS_COLLISION_POINT_WHEEL@
	DD	05H
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0CC@JEFMCNKI@DYNAMICS_COLLISION_POINT_WING_T@
	DD	09H
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0CD@POJMFIEM@NUM_DYNAMICS_COLLISION_POINT_TY@
	DD	01eH
	DD	00H
	DD	01H
_DATA	ENDS
PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_fabsf
PUBLIC	?abs@@YGMM@Z					; abs
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?initialise_dynamic_forces@@YGXXZ		; initialise_dynamic_forces
PUBLIC	?deinitialise_dynamic_forces@@YGXXZ		; deinitialise_dynamic_forces
PUBLIC	?update_collision_dynamics@@YGXXZ		; update_collision_dynamics
PUBLIC	?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z	; add_dynamic_force
PUBLIC	?update_dynamic_forces@@YGXXZ			; update_dynamic_forces
PUBLIC	?resolve_dynamic_forces@@YGXXZ			; resolve_dynamic_forces
PUBLIC	?draw_dynamic_forces@@YGXXZ			; draw_dynamic_forces
PUBLIC	?add_dynamic_explosion_force@@YGXPAUVEC3D@@M@Z	; add_dynamic_explosion_force
PUBLIC	?add_dynamic_weapon_launch_force@@YGXPAUVEC3D@@0MM@Z ; add_dynamic_weapon_launch_force
PUBLIC	?resolve_moments@@YGXMMMPAM00@Z			; resolve_moments
PUBLIC	?assess_landing@@YGXXZ				; assess_landing
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	?update_tree_collision_dynamics@@YGXXZ		; update_tree_collision_dynamics
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??resolve_dynamic_forces@@YGXXZ@4JA ; `resolve_dynamic_forces'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BF@FHEFHDHP@get_gunship_entity?$CI?$CJ@	; `string'
PUBLIC	?__LINE__Var@?0??draw_dynamic_forces@@YGXXZ@4JA	; `draw_dynamic_forces'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA ; `update_object_collision_dynamics'::`1'::__LINE__Var
PUBLIC	??_C@_0CH@JGFDFPLJ@CO_FORCE?3?5landed?5with?5undercarr@ ; `string'
PUBLIC	??_C@_0BL@IKICCKHB@CO_FORCE?3?5landing?5force?5?$CFf@ ; `string'
PUBLIC	??_C@_0BI@JPCNCGIK@CO_FORCE?3?5crash?5landing@	; `string'
PUBLIC	??_C@_0BI@KAFKPLHB@CO_FORCE?3?5heavy?5landing@	; `string'
PUBLIC	??_C@_0BF@IMDJDKAM@CO_FORCE?3?5ok?5landing@	; `string'
PUBLIC	??_C@_0BH@GDLACELG@CO_FORCE?3?5good?5landing@	; `string'
PUBLIC	??_C@_0BM@HDKAIPIP@CO_FORCE?3?5very?5good?5landing@ ; `string'
PUBLIC	??_C@_0BO@FJOHDAPF@DYNAMICS?3?5moving?5collision?5?$CFs@ ; `string'
PUBLIC	??_C@_0CN@HFNGLAHN@DYNAMICS?3?5possible?5tree?5collisi@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f947ae147ae147b
PUBLIC	__real@3fb0000000000000
PUBLIC	__real@3fb6571848000000
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fdeb851eb851eb8
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe6147ae147ae14
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@40800000
PUBLIC	__real@4090000000000000
PUBLIC	__real@40a00000
PUBLIC	__real@41200000
PUBLIC	__real@42480000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c000000000000000
PUBLIC	__real@c010000000000000
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_fabs:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_any_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_3d_vector_dot_product@@YGMPBUVEC3D@@0@Z:PROC ; get_3d_vector_dot_product
EXTRN	?invert_3d_vector@@YGXPAUVEC3D@@@Z:PROC		; invert_3d_vector
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_transpose_matrix3x3_vec3d
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_2d_range
EXTRN	?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_3d_range
EXTRN	?get_object_3d_radius@@YGMH@Z:PROC		; get_object_3d_radius
EXTRN	?get_terrain_3d_sector@@YGXMMPAH0@Z:PROC	; get_terrain_3d_sector
EXTRN	?get_terrain_3d_tree_sector_data@@YGHHHPAPAUTERRAIN_3D_TREE_DATA@@@Z:PROC ; get_terrain_3d_tree_sector_data
EXTRN	?get_terrain_3d_tree_scale@@YGMPAUTERRAIN_3D_TREE_DATA@@@Z:PROC ; get_terrain_3d_tree_scale
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_3d_terrain_point_data_normal@@YGPAUVEC3D@@PAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_normal
EXTRN	?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_elevation
EXTRN	?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_type
EXTRN	?bound_position_to_map_area@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_area
EXTRN	?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_volume
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?create_vectored_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@0HMM@Z:PROC ; create_vectored_debug_3d_object
EXTRN	?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z:PROC ; get_line_of_sight_collision_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?dynamics_damage_model@@YGXIH@Z:PROC		; dynamics_damage_model
EXTRN	?get_current_dynamics_fatal_damage@@YGHXZ:PROC	; get_current_dynamics_fatal_damage
EXTRN	?dynamics_takeoff@@YGXXZ:PROC			; dynamics_takeoff
EXTRN	?dynamics_land@@YGXXZ:PROC			; dynamics_land
EXTRN	?dynamics_kill_model@@YGXW4DYNAMICS_DESTROY_TYPES@@PAUENTITY@@@Z:PROC ; dynamics_kill_model
EXTRN	?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z:PROC ; get_terrain_type_class
EXTRN	?reset_undercarriage_world_position@@YGXXZ:PROC	; reset_undercarriage_world_position
EXTRN	?helicopter_has_undercarriage_modelling@@YGHXZ:PROC ; helicopter_has_undercarriage_modelling
EXTRN	?weight_on_wheels@@YGHXZ:PROC			; weight_on_wheels
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?terrain_3d_map_minimum_height@@3MA:DWORD	; terrain_3d_map_minimum_height
EXTRN	?terrain_3d_map_scaled_height_difference@@3MA:DWORD ; terrain_3d_map_scaled_height_difference
EXTRN	?command_line_dynamics_flight_model@@3HA:DWORD	; command_line_dynamics_flight_model
EXTRN	?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A:DWORD ; in_flight_game_mode
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	?water_offset@@3MA:DWORD			; water_offset
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c010000000000000
CONST	SEGMENT
__real@c010000000000000 DQ 0c010000000000000r	; -4
CONST	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4090000000000000
CONST	SEGMENT
__real@4090000000000000 DQ 04090000000000000r	; 1024
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe6147ae147ae14
CONST	SEGMENT
__real@3fe6147ae147ae14 DQ 03fe6147ae147ae14r	; 0.69
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fdeb851eb851eb8
CONST	SEGMENT
__real@3fdeb851eb851eb8 DQ 03fdeb851eb851eb8r	; 0.48
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fb6571848000000
CONST	SEGMENT
__real@3fb6571848000000 DQ 03fb6571848000000r	; 0.0872665
CONST	ENDS
;	COMDAT __real@3fb0000000000000
CONST	SEGMENT
__real@3fb0000000000000 DQ 03fb0000000000000r	; 0.0625
CONST	ENDS
;	COMDAT __real@3f947ae147ae147b
CONST	SEGMENT
__real@3f947ae147ae147b DQ 03f947ae147ae147br	; 0.02
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HFNGLAHN@DYNAMICS?3?5possible?5tree?5collisi@
CONST	SEGMENT
??_C@_0CN@HFNGLAHN@DYNAMICS?3?5possible?5tree?5collisi@ DB 'DYNAMICS: pos'
	DB	'sible tree collision %f, %f, %f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FJOHDAPF@DYNAMICS?3?5moving?5collision?5?$CFs@
CONST	SEGMENT
??_C@_0BO@FJOHDAPF@DYNAMICS?3?5moving?5collision?5?$CFs@ DB 'DYNAMICS: mo'
	DB	'ving collision %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HDKAIPIP@CO_FORCE?3?5very?5good?5landing@
CONST	SEGMENT
??_C@_0BM@HDKAIPIP@CO_FORCE?3?5very?5good?5landing@ DB 'CO_FORCE: very go'
	DB	'od landing', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDLACELG@CO_FORCE?3?5good?5landing@
CONST	SEGMENT
??_C@_0BH@GDLACELG@CO_FORCE?3?5good?5landing@ DB 'CO_FORCE: good landing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IMDJDKAM@CO_FORCE?3?5ok?5landing@
CONST	SEGMENT
??_C@_0BF@IMDJDKAM@CO_FORCE?3?5ok?5landing@ DB 'CO_FORCE: ok landing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KAFKPLHB@CO_FORCE?3?5heavy?5landing@
CONST	SEGMENT
??_C@_0BI@KAFKPLHB@CO_FORCE?3?5heavy?5landing@ DB 'CO_FORCE: heavy landin'
	DB	'g', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JPCNCGIK@CO_FORCE?3?5crash?5landing@
CONST	SEGMENT
??_C@_0BI@JPCNCGIK@CO_FORCE?3?5crash?5landing@ DB 'CO_FORCE: crash landin'
	DB	'g', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IKICCKHB@CO_FORCE?3?5landing?5force?5?$CFf@
CONST	SEGMENT
??_C@_0BL@IKICCKHB@CO_FORCE?3?5landing?5force?5?$CFf@ DB 'CO_FORCE: landi'
	DB	'ng force %f', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JGFDFPLJ@CO_FORCE?3?5landed?5with?5undercarr@
CONST	SEGMENT
??_C@_0CH@JGFDFPLJ@CO_FORCE?3?5landed?5with?5undercarr@ DB 'CO_FORCE: lan'
	DB	'ded with undercarriage up', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA DD 03baH ; `update_object_collision_dynamics'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??draw_dynamic_forces@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_dynamic_forces@@YGXXZ@4JA DD 02afH ; `draw_dynamic_forces'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BF@FHEFHDHP@get_gunship_entity?$CI?$CJ@
CONST	SEGMENT
??_C@_0BF@FHEFHDHP@get_gunship_entity?$CI?$CJ@ DB 'get_gunship_entity()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\dynamics\common\co_'
	DB	'force.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??resolve_dynamic_forces@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??resolve_dynamic_forces@@YGXXZ@4JA DD 015eH ; `resolve_dynamic_forces'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?update_tree_collision_dynamics@@YGXXZ
_TEXT	SEGMENT
_raw$ = -36						; size = 4
_vec$ = -32						; size = 12
_collision_vector$ = -20				; size = 12
_loop$ = -8						; size = 4
_collision$ = -4					; size = 4
?update_tree_collision_dynamics@@YGXXZ PROC		; update_tree_collision_dynamics, COMDAT

; 1216 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1217 : 
; 1218 : 	int
; 1219 : 		collision,
; 1220 : 		loop;
; 1221 : 
; 1222 : 	vec3d
; 1223 : 		collision_vector,
; 1224 : 		vec;
; 1225 : 
; 1226 : 	helicopter
; 1227 : 		*raw;
; 1228 : 
; 1229 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN8@update_tre

; 1230 : 	{
; 1231 : 
; 1232 : 		return;

  00012	e9 dd 04 00 00	 jmp	 $LN1@update_tre
$LN8@update_tre:

; 1233 : 	}
; 1234 : 
; 1235 : 	raw = (helicopter *) get_local_entity_data (get_gunship_entity ());

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d dc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1236 : 
; 1237 : 	collision = FALSE;

  00022	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _collision$[ebp], 0

; 1238 : 
; 1239 : 	if ((current_flight_dynamics->valid_last_frame_fixed_collision_points) || (current_flight_dynamics->valid_last_frame_moving_collision_points))

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002e	83 b8 c8 24 00
	00 00		 cmp	 DWORD PTR [eax+9416], 0
  00035	75 12		 jne	 SHORT $LN10@update_tre
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003c	83 b8 cc 24 00
	00 00		 cmp	 DWORD PTR [eax+9420], 0
  00043	0f 84 ab 04 00
	00		 je	 $LN6@update_tre
$LN10@update_tre:

; 1240 : 	{
; 1241 : 
; 1242 : 		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1243 : 		//
; 1244 : 		// detailed test
; 1245 : 		//
; 1246 : 		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1247 : 
; 1248 : 		loop = 0;

  00049	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0

; 1249 : 
; 1250 : 		//
; 1251 : 		// Fixed
; 1252 : 		//
; 1253 : 
; 1254 : 		//if (current_flight_dynamics->valid_last_frame_fixed_collision_points)
; 1255 : 		{
; 1256 : 
; 1257 : 			for (loop = 0; loop < current_flight_dynamics->number_of_fixed_collision_points; loop ++)

  00050	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00057	eb 09		 jmp	 SHORT $LN4@update_tre
$LN2@update_tre:
  00059	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0005c	83 c0 01	 add	 eax, 1
  0005f	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_tre:
  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0006a	3b 88 d8 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9432]
  00070	0f 8d 23 02 00
	00		 jge	 $LN3@update_tre

; 1258 : 			{
; 1259 : 
; 1260 : 				collision = get_radius_collision_tree (&current_flight_dynamics->fixed_collision_points [loop].world_point, 0.5, TRUE, &collision_vector, &current_flight_dynamics->fixed_collision_points [loop].face_normal);

  00076	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00079	c1 e0 06	 shl	 eax, 6
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00082	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00088	8d 44 02 04	 lea	 eax, DWORD PTR [edx+eax+4]
  0008c	50		 push	 eax
  0008d	8d 4d ec	 lea	 ecx, DWORD PTR _collision_vector$[ebp]
  00090	51		 push	 ecx
  00091	6a 01		 push	 1
  00093	51		 push	 ecx
  00094	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0009c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  000a4	c1 e2 06	 shl	 edx, 6
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ac	8b 88 b8 24 00
	00		 mov	 ecx, DWORD PTR [eax+9400]
  000b2	8d 54 11 10	 lea	 edx, DWORD PTR [ecx+edx+16]
  000b6	52		 push	 edx
  000b7	e8 00 00 00 00	 call	 ?get_radius_collision_tree@@YGHPAUVEC3D@@MH00@Z ; get_radius_collision_tree
  000bc	89 45 fc	 mov	 DWORD PTR _collision$[ebp], eax

; 1261 : 
; 1262 : 				if (collision)

  000bf	83 7d fc 00	 cmp	 DWORD PTR _collision$[ebp], 0
  000c3	0f 84 cb 01 00
	00		 je	 $LN11@update_tre

; 1263 : 				{
; 1264 : 
; 1265 : 					fixed_collision_count ++;

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fixed_collision_count@@3HA ; fixed_collision_count
  000ce	83 c0 01	 add	 eax, 1
  000d1	a3 00 00 00 00	 mov	 DWORD PTR ?fixed_collision_count@@3HA, eax ; fixed_collision_count

; 1266 : 
; 1267 : 					current_flight_dynamics->fixed_collision_points [loop].violated = TRUE;

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  000d9	c1 e0 06	 shl	 eax, 6
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000e2	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  000e8	b9 01 00 00 00	 mov	 ecx, 1
  000ed	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 1268 : 
; 1269 : 					current_flight_dynamics->world_motion_vector.x = 0.0;

  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f7	0f 57 c0	 xorps	 xmm0, xmm0
  000fa	f3 0f 11 80 3c
	1c 00 00	 movss	 DWORD PTR [eax+7228], xmm0

; 1270 : 					current_flight_dynamics->world_motion_vector.y = 0.0;

  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00107	0f 57 c0	 xorps	 xmm0, xmm0
  0010a	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0

; 1271 : 					current_flight_dynamics->world_motion_vector.z = 0.0;

  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00117	0f 57 c0	 xorps	 xmm0, xmm0
  0011a	f3 0f 11 80 44
	1c 00 00	 movss	 DWORD PTR [eax+7236], xmm0

; 1272 : 
; 1273 : 					current_flight_dynamics->model_acceleration_vector.x = 0.0;

  00122	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00127	0f 57 c0	 xorps	 xmm0, xmm0
  0012a	f3 0f 11 80 48
	1c 00 00	 movss	 DWORD PTR [eax+7240], xmm0

; 1274 : 					current_flight_dynamics->model_acceleration_vector.y = 0.0;

  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00137	0f 57 c0	 xorps	 xmm0, xmm0
  0013a	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 1275 : 					current_flight_dynamics->model_acceleration_vector.z = 0.0;

  00142	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00147	0f 57 c0	 xorps	 xmm0, xmm0
  0014a	f3 0f 11 80 50
	1c 00 00	 movss	 DWORD PTR [eax+7248], xmm0

; 1276 : 
; 1277 : 					vec.x = current_flight_dynamics->fixed_collision_points [loop].world_point.x - current_flight_dynamics->fixed_collision_points [loop].collision_point.x;

  00152	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00155	c1 e0 06	 shl	 eax, 6
  00158	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0015e	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00164	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00167	c1 e1 06	 shl	 ecx, 6
  0016a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00170	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  00176	f3 0f 10 44 02
	10		 movss	 xmm0, DWORD PTR [edx+eax+16]
  0017c	f3 0f 5c 44 0e
	28		 subss	 xmm0, DWORD PTR [esi+ecx+40]
  00182	f3 0f 11 45 e0	 movss	 DWORD PTR _vec$[ebp], xmm0

; 1278 : 					vec.y = current_flight_dynamics->fixed_collision_points [loop].world_point.y - current_flight_dynamics->fixed_collision_points [loop].collision_point.y;

  00187	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0018a	c1 e0 06	 shl	 eax, 6
  0018d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00193	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00199	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0019c	c1 e1 06	 shl	 ecx, 6
  0019f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a5	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  001ab	f3 0f 10 44 02
	14		 movss	 xmm0, DWORD PTR [edx+eax+20]
  001b1	f3 0f 5c 44 0e
	2c		 subss	 xmm0, DWORD PTR [esi+ecx+44]
  001b7	f3 0f 11 45 e4	 movss	 DWORD PTR _vec$[ebp+4], xmm0

; 1279 : 					vec.z = current_flight_dynamics->fixed_collision_points [loop].world_point.z - current_flight_dynamics->fixed_collision_points [loop].collision_point.z;

  001bc	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  001bf	c1 e0 06	 shl	 eax, 6
  001c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c8	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  001ce	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  001d1	c1 e1 06	 shl	 ecx, 6
  001d4	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001da	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  001e0	f3 0f 10 44 02
	18		 movss	 xmm0, DWORD PTR [edx+eax+24]
  001e6	f3 0f 5c 44 0e
	30		 subss	 xmm0, DWORD PTR [esi+ecx+48]
  001ec	f3 0f 11 45 e8	 movss	 DWORD PTR _vec$[ebp+8], xmm0

; 1280 : 
; 1281 : 					current_flight_dynamics->fixed_collision_points [loop].collision_point.x = current_flight_dynamics->fixed_collision_points [loop].world_point.x;

  001f1	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  001f4	c1 e0 06	 shl	 eax, 6
  001f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001fd	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00203	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00206	c1 e1 06	 shl	 ecx, 6
  00209	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0020f	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  00215	8b 54 02 10	 mov	 edx, DWORD PTR [edx+eax+16]
  00219	89 54 0e 28	 mov	 DWORD PTR [esi+ecx+40], edx

; 1282 : 					current_flight_dynamics->fixed_collision_points [loop].collision_point.y = current_flight_dynamics->fixed_collision_points [loop].world_point.y;

  0021d	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00220	c1 e0 06	 shl	 eax, 6
  00223	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00229	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0022f	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00232	c1 e1 06	 shl	 ecx, 6
  00235	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0023b	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  00241	8b 54 02 14	 mov	 edx, DWORD PTR [edx+eax+20]
  00245	89 54 0e 2c	 mov	 DWORD PTR [esi+ecx+44], edx

; 1283 : 					current_flight_dynamics->fixed_collision_points [loop].collision_point.z = current_flight_dynamics->fixed_collision_points [loop].world_point.z;

  00249	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0024c	c1 e0 06	 shl	 eax, 6
  0024f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00255	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0025b	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0025e	c1 e1 06	 shl	 ecx, 6
  00261	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00267	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  0026d	8b 54 02 18	 mov	 edx, DWORD PTR [edx+eax+24]
  00271	89 54 0e 30	 mov	 DWORD PTR [esi+ecx+48], edx

; 1284 : 
; 1285 : 					current_flight_dynamics->fixed_collision_points [loop].violation_distance = get_3d_vector_magnitude (&collision_vector);

  00275	8d 45 ec	 lea	 eax, DWORD PTR _collision_vector$[ebp]
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  0027e	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00281	c1 e1 06	 shl	 ecx, 6
  00284	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0028a	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  00290	d9 5c 08 38	 fstp	 DWORD PTR [eax+ecx+56]
$LN11@update_tre:

; 1286 : 
; 1287 : 					#if 0
; 1288 : 
; 1289 : 					debug_log ("DYNAMICS: violation dist %f, start %f, %f, %f, stop %f, %f, %f, collision %f, %f, %f, normal %f, %f, %f",
; 1290 : 									current_flight_dynamics->fixed_collision_points [loop].violation_distance,
; 1291 : 									current_flight_dynamics->fixed_collision_points [loop].world_point.x,
; 1292 : 									current_flight_dynamics->fixed_collision_points [loop].world_point.y,
; 1293 : 									current_flight_dynamics->fixed_collision_points [loop].world_point.z,
; 1294 : 									current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.x,
; 1295 : 									current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.y,
; 1296 : 									current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.z,
; 1297 : 									current_flight_dynamics->fixed_collision_points [loop].collision_point.x,
; 1298 : 									current_flight_dynamics->fixed_collision_points [loop].collision_point.y,
; 1299 : 									current_flight_dynamics->fixed_collision_points [loop].collision_point.z,
; 1300 : 									current_flight_dynamics->fixed_collision_points [loop].face_normal.x,
; 1301 : 									current_flight_dynamics->fixed_collision_points [loop].face_normal.y,
; 1302 : 									current_flight_dynamics->fixed_collision_points [loop].face_normal.z);
; 1303 : 
; 1304 : 					debug_filtered_log ("DYNAMICS: possible fixed point object collision");
; 1305 : 
; 1306 : 					//create_vectored_debug_3d_object (&current_flight_dynamics->fixed_collision_points [loop].world_point, &current_flight_dynamics->fixed_collision_points [loop].face_normal, OBJECT_3D_ARROW_FORCES, 10, 5.0);
; 1307 : 
; 1308 : 					#endif
; 1309 : 				}
; 1310 : 			}

  00294	e9 c0 fd ff ff	 jmp	 $LN2@update_tre
$LN3@update_tre:

; 1311 : 		}
; 1312 : 
; 1313 : 		//
; 1314 : 		// Moving
; 1315 : 		//
; 1316 : 
; 1317 : 		if (current_flight_dynamics->valid_last_frame_moving_collision_points)

  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0029e	83 b8 cc 24 00
	00 00		 cmp	 DWORD PTR [eax+9420], 0
  002a5	0f 84 49 02 00
	00		 je	 $LN6@update_tre

; 1318 : 		{
; 1319 : 
; 1320 : 			for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  002ab	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  002b2	eb 09		 jmp	 SHORT $LN7@update_tre
$LN5@update_tre:
  002b4	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  002b7	83 c0 01	 add	 eax, 1
  002ba	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_tre:
  002bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c2	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  002c5	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  002cb	0f 8d 23 02 00
	00		 jge	 $LN6@update_tre

; 1321 : 			{
; 1322 : 
; 1323 : 				collision = get_radius_collision_tree (&current_flight_dynamics->moving_collision_points [loop].world_point, 0.5, TRUE, &collision_vector, &current_flight_dynamics->moving_collision_points [loop].face_normal);

  002d1	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  002d4	c1 e0 06	 shl	 eax, 6
  002d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002dd	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  002e3	8d 44 02 04	 lea	 eax, DWORD PTR [edx+eax+4]
  002e7	50		 push	 eax
  002e8	8d 4d ec	 lea	 ecx, DWORD PTR _collision_vector$[ebp]
  002eb	51		 push	 ecx
  002ec	6a 01		 push	 1
  002ee	51		 push	 ecx
  002ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fc	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  002ff	c1 e2 06	 shl	 edx, 6
  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00307	8b 88 c0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9408]
  0030d	8d 54 11 10	 lea	 edx, DWORD PTR [ecx+edx+16]
  00311	52		 push	 edx
  00312	e8 00 00 00 00	 call	 ?get_radius_collision_tree@@YGHPAUVEC3D@@MH00@Z ; get_radius_collision_tree
  00317	89 45 fc	 mov	 DWORD PTR _collision$[ebp], eax

; 1324 : 
; 1325 : 				if (collision)

  0031a	83 7d fc 00	 cmp	 DWORD PTR _collision$[ebp], 0
  0031e	0f 84 cb 01 00
	00		 je	 $LN13@update_tre

; 1326 : 				{
; 1327 : 
; 1328 : 					moving_collision_count ++;

  00324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?moving_collision_count@@3HA ; moving_collision_count
  00329	83 c0 01	 add	 eax, 1
  0032c	a3 00 00 00 00	 mov	 DWORD PTR ?moving_collision_count@@3HA, eax ; moving_collision_count

; 1329 : 
; 1330 : 					current_flight_dynamics->moving_collision_points [loop].violated = TRUE;

  00331	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00334	c1 e0 06	 shl	 eax, 6
  00337	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0033d	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00343	b9 01 00 00 00	 mov	 ecx, 1
  00348	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 1331 : 
; 1332 : 					current_flight_dynamics->world_motion_vector.x = 0.0;

  0034d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00352	0f 57 c0	 xorps	 xmm0, xmm0
  00355	f3 0f 11 80 3c
	1c 00 00	 movss	 DWORD PTR [eax+7228], xmm0

; 1333 : 					current_flight_dynamics->world_motion_vector.y = 0.0;

  0035d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00362	0f 57 c0	 xorps	 xmm0, xmm0
  00365	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0

; 1334 : 					current_flight_dynamics->world_motion_vector.z = 0.0;

  0036d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00372	0f 57 c0	 xorps	 xmm0, xmm0
  00375	f3 0f 11 80 44
	1c 00 00	 movss	 DWORD PTR [eax+7236], xmm0

; 1335 : 
; 1336 : 					current_flight_dynamics->model_acceleration_vector.x = 0.0;

  0037d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00382	0f 57 c0	 xorps	 xmm0, xmm0
  00385	f3 0f 11 80 48
	1c 00 00	 movss	 DWORD PTR [eax+7240], xmm0

; 1337 : 					current_flight_dynamics->model_acceleration_vector.y = 0.0;

  0038d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00392	0f 57 c0	 xorps	 xmm0, xmm0
  00395	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 1338 : 					current_flight_dynamics->model_acceleration_vector.z = 0.0;

  0039d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003a2	0f 57 c0	 xorps	 xmm0, xmm0
  003a5	f3 0f 11 80 50
	1c 00 00	 movss	 DWORD PTR [eax+7248], xmm0

; 1339 : 
; 1340 : 					vec.x = current_flight_dynamics->moving_collision_points [loop].world_point.x - current_flight_dynamics->moving_collision_points [loop].collision_point.x;

  003ad	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  003b0	c1 e0 06	 shl	 eax, 6
  003b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003b9	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  003bf	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  003c2	c1 e1 06	 shl	 ecx, 6
  003c5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003cb	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  003d1	f3 0f 10 44 02
	10		 movss	 xmm0, DWORD PTR [edx+eax+16]
  003d7	f3 0f 5c 44 0e
	28		 subss	 xmm0, DWORD PTR [esi+ecx+40]
  003dd	f3 0f 11 45 e0	 movss	 DWORD PTR _vec$[ebp], xmm0

; 1341 : 					vec.y = current_flight_dynamics->moving_collision_points [loop].world_point.y - current_flight_dynamics->moving_collision_points [loop].collision_point.y;

  003e2	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  003e5	c1 e0 06	 shl	 eax, 6
  003e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003ee	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  003f4	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  003f7	c1 e1 06	 shl	 ecx, 6
  003fa	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00400	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00406	f3 0f 10 44 02
	14		 movss	 xmm0, DWORD PTR [edx+eax+20]
  0040c	f3 0f 5c 44 0e
	2c		 subss	 xmm0, DWORD PTR [esi+ecx+44]
  00412	f3 0f 11 45 e4	 movss	 DWORD PTR _vec$[ebp+4], xmm0

; 1342 : 					vec.z = current_flight_dynamics->moving_collision_points [loop].world_point.z - current_flight_dynamics->moving_collision_points [loop].collision_point.z;

  00417	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0041a	c1 e0 06	 shl	 eax, 6
  0041d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00423	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00429	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0042c	c1 e1 06	 shl	 ecx, 6
  0042f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00435	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  0043b	f3 0f 10 44 02
	18		 movss	 xmm0, DWORD PTR [edx+eax+24]
  00441	f3 0f 5c 44 0e
	30		 subss	 xmm0, DWORD PTR [esi+ecx+48]
  00447	f3 0f 11 45 e8	 movss	 DWORD PTR _vec$[ebp+8], xmm0

; 1343 : 
; 1344 : 					current_flight_dynamics->moving_collision_points [loop].collision_point.x = current_flight_dynamics->moving_collision_points [loop].world_point.x;

  0044c	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0044f	c1 e0 06	 shl	 eax, 6
  00452	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00458	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0045e	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00461	c1 e1 06	 shl	 ecx, 6
  00464	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0046a	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00470	8b 54 02 10	 mov	 edx, DWORD PTR [edx+eax+16]
  00474	89 54 0e 28	 mov	 DWORD PTR [esi+ecx+40], edx

; 1345 : 					current_flight_dynamics->moving_collision_points [loop].collision_point.y = current_flight_dynamics->moving_collision_points [loop].world_point.y;

  00478	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0047b	c1 e0 06	 shl	 eax, 6
  0047e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00484	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0048a	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0048d	c1 e1 06	 shl	 ecx, 6
  00490	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00496	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  0049c	8b 54 02 14	 mov	 edx, DWORD PTR [edx+eax+20]
  004a0	89 54 0e 2c	 mov	 DWORD PTR [esi+ecx+44], edx

; 1346 : 					current_flight_dynamics->moving_collision_points [loop].collision_point.z = current_flight_dynamics->moving_collision_points [loop].world_point.z;

  004a4	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  004a7	c1 e0 06	 shl	 eax, 6
  004aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004b0	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  004b6	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  004b9	c1 e1 06	 shl	 ecx, 6
  004bc	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004c2	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  004c8	8b 54 02 18	 mov	 edx, DWORD PTR [edx+eax+24]
  004cc	89 54 0e 30	 mov	 DWORD PTR [esi+ecx+48], edx

; 1347 : 
; 1348 : 					current_flight_dynamics->moving_collision_points [loop].violation_distance = get_3d_vector_magnitude (&collision_vector);

  004d0	8d 45 ec	 lea	 eax, DWORD PTR _collision_vector$[ebp]
  004d3	50		 push	 eax
  004d4	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  004d9	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  004dc	c1 e1 06	 shl	 ecx, 6
  004df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004e5	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  004eb	d9 5c 08 38	 fstp	 DWORD PTR [eax+ecx+56]
$LN13@update_tre:

; 1349 : 
; 1350 : 					#if 0
; 1351 : 
; 1352 : 					debug_log ("DYNAMICS: violation dist %f, start %f, %f, %f, stop %f, %f, %f, collision %f, %f, %f, normal %f, %f, %f",
; 1353 : 									current_flight_dynamics->moving_collision_points [loop].violation_distance,
; 1354 : 									current_flight_dynamics->moving_collision_points [loop].world_point.x,
; 1355 : 									current_flight_dynamics->moving_collision_points [loop].world_point.y,
; 1356 : 									current_flight_dynamics->moving_collision_points [loop].world_point.z,
; 1357 : 									current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.x,
; 1358 : 									current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.y,
; 1359 : 									current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.z,
; 1360 : 									current_flight_dynamics->moving_collision_points [loop].collision_point.x,
; 1361 : 									current_flight_dynamics->moving_collision_points [loop].collision_point.y,
; 1362 : 									current_flight_dynamics->moving_collision_points [loop].collision_point.z,
; 1363 : 									current_flight_dynamics->moving_collision_points [loop].face_normal.x,
; 1364 : 									current_flight_dynamics->moving_collision_points [loop].face_normal.y,
; 1365 : 									current_flight_dynamics->moving_collision_points [loop].face_normal.z);
; 1366 : 
; 1367 : 					debug_filtered_log ("DYNAMICS: possible moving point tree collision");
; 1368 : 
; 1369 : 					//create_vectored_debug_3d_object (&current_flight_dynamics->moving_collision_points [loop].world_point, &current_flight_dynamics->moving_collision_points [loop].face_normal, OBJECT_3D_ARROW_FORCES, 10, 5.0);
; 1370 : 
; 1371 : 					#endif
; 1372 : 				}
; 1373 : 			}

  004ef	e9 c0 fd ff ff	 jmp	 $LN5@update_tre
$LN6@update_tre:
$LN1@update_tre:

; 1374 : 		}
; 1375 : 	}
; 1376 : }

  004f4	5f		 pop	 edi
  004f5	5e		 pop	 esi
  004f6	5b		 pop	 ebx
  004f7	8b e5		 mov	 esp, ebp
  004f9	5d		 pop	 ebp
  004fa	c3		 ret	 0
?update_tree_collision_dynamics@@YGXXZ ENDP		; update_tree_collision_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?get_radius_collision_tree@@YGHPAUVEC3D@@MH00@Z
_TEXT	SEGMENT
tv218 = -132						; size = 8
_tree_position$ = -60					; size = 12
_vector$ = -48						; size = 12
_tree$ = -36						; size = 4
_z_sector_mid_point$ = -32				; size = 4
_x_sector_mid_point$ = -28				; size = 4
_height$ = -24						; size = 4
_sqr_range$ = -20					; size = 4
_tree_radius$ = -16					; size = 4
_z_sector$ = -12					; size = 4
_x_sector$ = -8						; size = 4
_num_trees$ = -4					; size = 4
_position$ = 8						; size = 4
_model_radius$ = 12					; size = 4
_ignore_forest_edge_trees$ = 16				; size = 4
_collision_vector$ = 20					; size = 4
_face_normal$ = 24					; size = 4
?get_radius_collision_tree@@YGHPAUVEC3D@@MH00@Z PROC	; get_radius_collision_tree, COMDAT

; 2254 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2255 : 
; 2256 : 	int
; 2257 : 		num_trees,
; 2258 : 		x_sector,
; 2259 : 		z_sector;
; 2260 : 
; 2261 : 	float
; 2262 : 		tree_radius,
; 2263 : 		sqr_range,
; 2264 : 		height,
; 2265 : 		x_sector_mid_point,
; 2266 : 		z_sector_mid_point;
; 2267 : 
; 2268 : 	terrain_3d_tree_data
; 2269 : 		*tree;
; 2270 : 
; 2271 : 	vec3d
; 2272 : 		vector,
; 2273 : 		tree_position;
; 2274 : 
; 2275 : 	tree_radius = 5.0,

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00014	f3 0f 11 45 f0	 movss	 DWORD PTR _tree_radius$[ebp], xmm0
  00019	8d 45 f4	 lea	 eax, DWORD PTR _z_sector$[ebp]
  0001c	50		 push	 eax
  0001d	8d 4d f8	 lea	 ecx, DWORD PTR _x_sector$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  00024	51		 push	 ecx
  00025	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0002a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002f	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00032	51		 push	 ecx
  00033	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	e8 00 00 00 00	 call	 ?get_terrain_3d_sector@@YGXMMPAH0@Z ; get_terrain_3d_sector

; 2276 : 
; 2277 : 	get_terrain_3d_sector (position->x, position->z, &x_sector, &z_sector);
; 2278 : 
; 2279 : 	num_trees = get_terrain_3d_tree_sector_data (x_sector, z_sector, &tree);

  00041	8d 45 dc	 lea	 eax, DWORD PTR _tree$[ebp]
  00044	50		 push	 eax
  00045	8b 4d f4	 mov	 ecx, DWORD PTR _z_sector$[ebp]
  00048	51		 push	 ecx
  00049	8b 55 f8	 mov	 edx, DWORD PTR _x_sector$[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?get_terrain_3d_tree_sector_data@@YGHHHPAPAUTERRAIN_3D_TREE_DATA@@@Z ; get_terrain_3d_tree_sector_data
  00052	89 45 fc	 mov	 DWORD PTR _num_trees$[ebp], eax

; 2280 : 
; 2281 : 	x_sector_mid_point = (x_sector * TERRAIN_3D_SECTOR_SIDE_LENGTH) + (TERRAIN_3D_SECTOR_SIDE_LENGTH * 0.5);

  00055	8b 45 f8	 mov	 eax, DWORD PTR _x_sector$[ebp]
  00058	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  0005b	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0005f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4090000000000000
  00067	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0006b	f3 0f 11 45 e4	 movss	 DWORD PTR _x_sector_mid_point$[ebp], xmm0

; 2282 : 	z_sector_mid_point = (z_sector * TERRAIN_3D_SECTOR_SIDE_LENGTH) + (TERRAIN_3D_SECTOR_SIDE_LENGTH * 0.5);

  00070	8b 45 f4	 mov	 eax, DWORD PTR _z_sector$[ebp]
  00073	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  00076	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0007a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4090000000000000
  00082	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00086	f3 0f 11 45 e0	 movss	 DWORD PTR _z_sector_mid_point$[ebp], xmm0
$LN2@get_radius:

; 2283 : 
; 2284 : 	while (num_trees)

  0008b	83 7d fc 00	 cmp	 DWORD PTR _num_trees$[ebp], 0
  0008f	0f 84 54 02 00
	00		 je	 $LN3@get_radius

; 2285 : 	{
; 2286 : 
; 2287 : 		height = get_terrain_3d_tree_scale (tree) * 0.75;

  00095	8b 45 dc	 mov	 eax, DWORD PTR _tree$[ebp]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ?get_terrain_3d_tree_scale@@YGMPAUTERRAIN_3D_TREE_DATA@@@Z ; get_terrain_3d_tree_scale
  0009e	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv218[ebp]
  000a4	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv218[ebp]
  000ac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe8000000000000
  000b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b8	f3 0f 11 45 e8	 movss	 DWORD PTR _height$[ebp], xmm0

; 2288 : 
; 2289 : 		if (current_flight_dynamics->radar_altitude.value < height)

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000c2	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _height$[ebp]
  000c7	0f 2f 80 44 24
	00 00		 comiss	 xmm0, DWORD PTR [eax+9284]
  000ce	0f 86 fe 01 00
	00		 jbe	 $LN7@get_radius

; 2290 : 		{
; 2291 : 
; 2292 : 			if (!(ignore_forest_edge_trees && (tree->type == 0)))

  000d4	83 7d 10 00	 cmp	 DWORD PTR _ignore_forest_edge_trees$[ebp], 0
  000d8	74 17		 je	 SHORT $LN6@get_radius
  000da	8b 45 dc	 mov	 eax, DWORD PTR _tree$[ebp]
  000dd	8a 48 07	 mov	 cl, BYTE PTR [eax+7]
  000e0	c0 e9 07	 shr	 cl, 7
  000e3	80 e1 01	 and	 cl, 1
  000e6	0f b6 d1	 movzx	 edx, cl
  000e9	85 d2		 test	 edx, edx
  000eb	0f 84 e1 01 00
	00		 je	 $LN7@get_radius
$LN6@get_radius:

; 2293 : 			{
; 2294 : 
; 2295 : 				tree_position.x = x_sector_mid_point + (tree->x * TERRAIN_3D_XZ_SCALE * 0.5);

  000f1	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _x_sector_mid_point$[ebp]
  000f6	8b 45 dc	 mov	 eax, DWORD PTR _tree$[ebp]
  000f9	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  000fc	f2 0f 2a c9	 cvtsi2sd xmm1, ecx
  00100	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fb0000000000000
  00108	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00110	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00114	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00118	f3 0f 11 45 c4	 movss	 DWORD PTR _tree_position$[ebp], xmm0

; 2296 : 				tree_position.y = (tree->y * terrain_3d_map_scaled_height_difference * 0.5) + terrain_3d_map_minimum_height;

  0011d	8b 45 dc	 mov	 eax, DWORD PTR _tree$[ebp]
  00120	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00124	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00128	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  00130	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00134	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0013c	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  00144	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00148	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014c	f3 0f 11 45 c8	 movss	 DWORD PTR _tree_position$[ebp+4], xmm0

; 2297 : 				tree_position.z = z_sector_mid_point + (tree->z * TERRAIN_3D_XZ_SCALE * 0.5);

  00151	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _z_sector_mid_point$[ebp]
  00156	8b 45 dc	 mov	 eax, DWORD PTR _tree$[ebp]
  00159	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  0015d	f2 0f 2a c9	 cvtsi2sd xmm1, ecx
  00161	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fb0000000000000
  00169	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00171	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00175	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00179	f3 0f 11 45 cc	 movss	 DWORD PTR _tree_position$[ebp+8], xmm0

; 2298 : 
; 2299 : 				sqr_range = get_sqr_2d_range (position, &tree_position);

  0017e	8d 45 c4	 lea	 eax, DWORD PTR _tree_position$[ebp]
  00181	50		 push	 eax
  00182	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00185	51		 push	 ecx
  00186	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  0018b	d9 5d ec	 fstp	 DWORD PTR _sqr_range$[ebp]

; 2300 : 
; 2301 : 				if (sqr_range < ((tree_radius + model_radius) * (tree_radius + model_radius)))

  0018e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _tree_radius$[ebp]
  00193	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _model_radius$[ebp]
  00198	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _tree_radius$[ebp]
  0019d	f3 0f 58 4d 0c	 addss	 xmm1, DWORD PTR _model_radius$[ebp]
  001a2	f3 0f 59 c1	 mulss	 xmm0, xmm1
  001a6	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _sqr_range$[ebp]
  001aa	0f 86 22 01 00
	00		 jbe	 $LN7@get_radius

; 2302 : 				{
; 2303 : 
; 2304 : 					vector.x = tree_position.x - position->x;

  001b0	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  001b3	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _tree_position$[ebp]
  001b8	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  001bc	f3 0f 11 45 d0	 movss	 DWORD PTR _vector$[ebp], xmm0

; 2305 : 					vector.y = tree_position.y - position->y;

  001c1	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  001c4	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _tree_position$[ebp+4]
  001c9	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  001ce	f3 0f 11 45 d4	 movss	 DWORD PTR _vector$[ebp+4], xmm0

; 2306 : 					vector.z = tree_position.z - position->z;

  001d3	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  001d6	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _tree_position$[ebp+8]
  001db	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  001e0	f3 0f 11 45 d8	 movss	 DWORD PTR _vector$[ebp+8], xmm0

; 2307 : 
; 2308 : 					normalise_any_3d_vector (&vector);

  001e5	8d 45 d0	 lea	 eax, DWORD PTR _vector$[ebp]
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  001ee	dd d8		 fstp	 ST(0)

; 2309 : 
; 2310 : 					face_normal->x = vector.x;

  001f0	8b 45 18	 mov	 eax, DWORD PTR _face_normal$[ebp]
  001f3	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _vector$[ebp]
  001f8	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 2311 : 					face_normal->y = vector.y;

  001fc	8b 45 18	 mov	 eax, DWORD PTR _face_normal$[ebp]
  001ff	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _vector$[ebp+4]
  00204	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2312 : 					face_normal->z = vector.z;

  00209	8b 45 18	 mov	 eax, DWORD PTR _face_normal$[ebp]
  0020c	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _vector$[ebp+8]
  00211	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2313 : 
; 2314 : 					vector.x *= tree_radius;

  00216	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _vector$[ebp]
  0021b	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _tree_radius$[ebp]
  00220	f3 0f 11 45 d0	 movss	 DWORD PTR _vector$[ebp], xmm0

; 2315 : 					vector.y *= tree_radius;

  00225	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _vector$[ebp+4]
  0022a	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _tree_radius$[ebp]
  0022f	f3 0f 11 45 d4	 movss	 DWORD PTR _vector$[ebp+4], xmm0

; 2316 : 					vector.z *= tree_radius;

  00234	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _vector$[ebp+8]
  00239	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _tree_radius$[ebp]
  0023e	f3 0f 11 45 d8	 movss	 DWORD PTR _vector$[ebp+8], xmm0

; 2317 : 
; 2318 : 					collision_vector->x = (tree_position.x - position->x) - vector.x;

  00243	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00246	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _tree_position$[ebp]
  0024b	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0024f	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _vector$[ebp]
  00254	8b 4d 14	 mov	 ecx, DWORD PTR _collision_vector$[ebp]
  00257	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2319 : 					collision_vector->y = (tree_position.y - position->y) - vector.y;

  0025b	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0025e	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _tree_position$[ebp+4]
  00263	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00268	f3 0f 5c 45 d4	 subss	 xmm0, DWORD PTR _vector$[ebp+4]
  0026d	8b 4d 14	 mov	 ecx, DWORD PTR _collision_vector$[ebp]
  00270	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 2320 : 					collision_vector->z = (tree_position.z - position->z) - vector.z;

  00275	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00278	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _tree_position$[ebp+8]
  0027d	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00282	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _vector$[ebp+8]
  00287	8b 4d 14	 mov	 ecx, DWORD PTR _collision_vector$[ebp]
  0028a	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2321 : 
; 2322 : 					debug_log ("DYNAMICS: possible tree collision %f, %f, %f", collision_vector->x, collision_vector->y, collision_vector->z);

  0028f	8b 45 14	 mov	 eax, DWORD PTR _collision_vector$[ebp]
  00292	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00297	83 ec 08	 sub	 esp, 8
  0029a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0029f	8b 4d 14	 mov	 ecx, DWORD PTR _collision_vector$[ebp]
  002a2	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  002a7	83 ec 08	 sub	 esp, 8
  002aa	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002af	8b 55 14	 mov	 edx, DWORD PTR _collision_vector$[ebp]
  002b2	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  002b6	83 ec 08	 sub	 esp, 8
  002b9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002be	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@HFNGLAHN@DYNAMICS?3?5possible?5tree?5collisi@
  002c3	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  002c8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2323 : 
; 2324 : 					return TRUE;

  002cb	b8 01 00 00 00	 mov	 eax, 1
  002d0	eb 19		 jmp	 SHORT $LN1@get_radius
$LN7@get_radius:

; 2325 : 				}
; 2326 : 			}
; 2327 : 		}
; 2328 : 
; 2329 : 		tree ++;

  002d2	8b 45 dc	 mov	 eax, DWORD PTR _tree$[ebp]
  002d5	83 c0 08	 add	 eax, 8
  002d8	89 45 dc	 mov	 DWORD PTR _tree$[ebp], eax

; 2330 : 
; 2331 : 		num_trees --;

  002db	8b 45 fc	 mov	 eax, DWORD PTR _num_trees$[ebp]
  002de	83 e8 01	 sub	 eax, 1
  002e1	89 45 fc	 mov	 DWORD PTR _num_trees$[ebp], eax

; 2332 : 	}

  002e4	e9 a2 fd ff ff	 jmp	 $LN2@get_radius
$LN3@get_radius:

; 2333 : 
; 2334 : 	return FALSE;

  002e9	33 c0		 xor	 eax, eax
$LN1@get_radius:

; 2335 : }

  002eb	5f		 pop	 edi
  002ec	5e		 pop	 esi
  002ed	5b		 pop	 ebx
  002ee	8b e5		 mov	 esp, ebp
  002f0	5d		 pop	 ebp
  002f1	c2 14 00	 ret	 20			; 00000014H
?get_radius_collision_tree@@YGHPAUVEC3D@@MH00@Z ENDP	; get_radius_collision_tree
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?dynamics_setup_moving_collision_points@@YGXXZ
_TEXT	SEGMENT
_loop$ = -4						; size = 4
?dynamics_setup_moving_collision_points@@YGXXZ PROC	; dynamics_setup_moving_collision_points, COMDAT

; 2217 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2218 : 
; 2219 : 	int
; 2220 : 		loop;
; 2221 : 
; 2222 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN5@dynamics_s

; 2223 : 	{
; 2224 : 
; 2225 : 		return;

  00012	e9 62 01 00 00	 jmp	 $LN1@dynamics_s
$LN5@dynamics_s:

; 2226 : 	}
; 2227 : 
; 2228 : 	//
; 2229 : 	// setup moving collision points (after fixed have been done so thay are rotated into correct position)
; 2230 : 	//
; 2231 : 
; 2232 : 	for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  00017	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0001e	eb 09		 jmp	 SHORT $LN4@dynamics_s
$LN2@dynamics_s:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00023	83 c0 01	 add	 eax, 1
  00026	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@dynamics_s:
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00031	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  00037	0f 8d 3c 01 00
	00		 jge	 $LN3@dynamics_s

; 2233 : 	{
; 2234 : 
; 2235 : 		multiply_matrix3x3_vec3d (&current_flight_dynamics->moving_collision_points [loop].world_point,

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00040	c1 e0 06	 shl	 eax, 6
  00043	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00049	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0004f	8d 44 02 1c	 lea	 eax, DWORD PTR [edx+eax+28]
  00053	50		 push	 eax
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005a	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00064	c1 e2 06	 shl	 edx, 6
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0006c	8b 88 c0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9408]
  00072	8d 54 11 10	 lea	 edx, DWORD PTR [ecx+edx+16]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 2236 : 											current_flight_dynamics->attitude,
; 2237 : 											&current_flight_dynamics->moving_collision_points [loop].model_point);
; 2238 : 
; 2239 : 		current_flight_dynamics->moving_collision_points [loop].world_point.x += current_flight_dynamics->position.x;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0007f	c1 e0 06	 shl	 eax, 6
  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00088	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0008e	f3 0f 5a 44 02
	10		 cvtss2sd xmm0, DWORD PTR [edx+eax+16]
  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00099	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000a4	c1 e1 06	 shl	 ecx, 6
  000a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ad	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  000b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b7	f3 0f 11 44 08
	10		 movss	 DWORD PTR [eax+ecx+16], xmm0

; 2240 : 		current_flight_dynamics->moving_collision_points [loop].world_point.y += current_flight_dynamics->position.y;

  000bd	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000c0	c1 e0 06	 shl	 eax, 6
  000c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000c9	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  000cf	f3 0f 5a 44 02
	14		 cvtss2sd xmm0, DWORD PTR [edx+eax+20]
  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000da	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000e5	c1 e1 06	 shl	 ecx, 6
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ee	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  000f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f8	f3 0f 11 44 08
	14		 movss	 DWORD PTR [eax+ecx+20], xmm0

; 2241 : 		current_flight_dynamics->moving_collision_points [loop].world_point.z += current_flight_dynamics->position.z;

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00101	c1 e0 06	 shl	 eax, 6
  00104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0010a	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00110	f3 0f 5a 44 02
	18		 cvtss2sd xmm0, DWORD PTR [edx+eax+24]
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011b	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  00123	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00126	c1 e1 06	 shl	 ecx, 6
  00129	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0012f	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00135	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00139	f3 0f 11 44 08
	18		 movss	 DWORD PTR [eax+ecx+24], xmm0

; 2242 : 
; 2243 : 		bound_position_to_map_area (&current_flight_dynamics->moving_collision_points [loop].world_point);

  0013f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00142	c1 e0 06	 shl	 eax, 6
  00145	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0014b	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00151	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  00155	50		 push	 eax
  00156	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 2244 : 
; 2245 : 		current_flight_dynamics->moving_collision_points [loop].violated = FALSE;

  0015b	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0015e	c1 e0 06	 shl	 eax, 6
  00161	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00167	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0016d	33 c9		 xor	 ecx, ecx
  0016f	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 2246 : 	}

  00174	e9 a7 fe ff ff	 jmp	 $LN2@dynamics_s
$LN3@dynamics_s:
$LN1@dynamics_s:

; 2247 : }

  00179	5f		 pop	 edi
  0017a	5e		 pop	 esi
  0017b	5b		 pop	 ebx
  0017c	8b e5		 mov	 esp, ebp
  0017e	5d		 pop	 ebp
  0017f	c3		 ret	 0
?dynamics_setup_moving_collision_points@@YGXXZ ENDP	; dynamics_setup_moving_collision_points
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?dynamics_setup_fixed_collision_points@@YGXXZ
_TEXT	SEGMENT
tv159 = -72						; size = 4
_loop$ = -4						; size = 4
?dynamics_setup_fixed_collision_points@@YGXXZ PROC	; dynamics_setup_fixed_collision_points, COMDAT

; 2140 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2141 : 
; 2142 : 	int
; 2143 : 		loop;
; 2144 : 
; 2145 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN7@dynamics_s

; 2146 : 	{
; 2147 : 
; 2148 : 		return;

  00012	e9 24 02 00 00	 jmp	 $LN1@dynamics_s
$LN7@dynamics_s:

; 2149 : 	}
; 2150 : 
; 2151 : 	//
; 2152 : 	// clear collisions
; 2153 : 	//
; 2154 : 
; 2155 : 	for (loop = 0; loop < current_flight_dynamics->number_of_fixed_collision_points; loop ++)

  00017	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0001e	eb 09		 jmp	 SHORT $LN4@dynamics_s
$LN2@dynamics_s:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00023	83 c0 01	 add	 eax, 1
  00026	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@dynamics_s:
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00031	3b 88 d8 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9432]
  00037	0f 8d fe 01 00
	00		 jge	 $LN3@dynamics_s

; 2156 : 	{
; 2157 : 
; 2158 : 		multiply_matrix3x3_vec3d (&current_flight_dynamics->fixed_collision_points [loop].world_point,

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00040	c1 e0 06	 shl	 eax, 6
  00043	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00049	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0004f	8d 44 02 1c	 lea	 eax, DWORD PTR [edx+eax+28]
  00053	50		 push	 eax
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005a	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00064	c1 e2 06	 shl	 edx, 6
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0006c	8b 88 b8 24 00
	00		 mov	 ecx, DWORD PTR [eax+9400]
  00072	8d 54 11 10	 lea	 edx, DWORD PTR [ecx+edx+16]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 2159 : 											current_flight_dynamics->attitude,
; 2160 : 											&current_flight_dynamics->fixed_collision_points [loop].model_point);
; 2161 : 
; 2162 : 		current_flight_dynamics->fixed_collision_points [loop].world_point.x += current_flight_dynamics->position.x;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0007f	c1 e0 06	 shl	 eax, 6
  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00088	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0008e	f3 0f 5a 44 02
	10		 cvtss2sd xmm0, DWORD PTR [edx+eax+16]
  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00099	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000a4	c1 e1 06	 shl	 ecx, 6
  000a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ad	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  000b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b7	f3 0f 11 44 08
	10		 movss	 DWORD PTR [eax+ecx+16], xmm0

; 2163 : 		current_flight_dynamics->fixed_collision_points [loop].world_point.y += current_flight_dynamics->position.y;

  000bd	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000c0	c1 e0 06	 shl	 eax, 6
  000c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000c9	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  000cf	f3 0f 5a 44 02
	14		 cvtss2sd xmm0, DWORD PTR [edx+eax+20]
  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000da	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000e5	c1 e1 06	 shl	 ecx, 6
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ee	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  000f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f8	f3 0f 11 44 08
	14		 movss	 DWORD PTR [eax+ecx+20], xmm0

; 2164 : 		current_flight_dynamics->fixed_collision_points [loop].world_point.z += current_flight_dynamics->position.z;

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00101	c1 e0 06	 shl	 eax, 6
  00104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0010a	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00110	f3 0f 5a 44 02
	18		 cvtss2sd xmm0, DWORD PTR [edx+eax+24]
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011b	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  00123	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00126	c1 e1 06	 shl	 ecx, 6
  00129	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0012f	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  00135	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00139	f3 0f 11 44 08
	18		 movss	 DWORD PTR [eax+ecx+24], xmm0

; 2165 : 
; 2166 : 		if (!helicopter_has_undercarriage_modelling())

  0013f	e8 00 00 00 00	 call	 ?helicopter_has_undercarriage_modelling@@YGHXZ ; helicopter_has_undercarriage_modelling
  00144	85 c0		 test	 eax, eax
  00146	0f 85 b5 00 00
	00		 jne	 $LN5@dynamics_s

; 2167 : 			// temp for undercarriage... lower collision points
; 2168 : 			switch (get_global_gunship_type ())

  0014c	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  00151	89 45 b8	 mov	 DWORD PTR tv159[ebp], eax
  00154	83 7d b8 02	 cmp	 DWORD PTR tv159[ebp], 2
  00158	74 0b		 je	 SHORT $LN9@dynamics_s
  0015a	83 7d b8 03	 cmp	 DWORD PTR tv159[ebp], 3
  0015e	74 54		 je	 SHORT $LN10@dynamics_s
  00160	e9 9c 00 00 00	 jmp	 $LN13@dynamics_s
$LN9@dynamics_s:

; 2169 : 			{
; 2170 : 
; 2171 : 				case GUNSHIP_TYPE_COMANCHE:
; 2172 : 				{
; 2173 : 
; 2174 : 					current_flight_dynamics->fixed_collision_points [loop].world_point.y -= 0.48 * get_current_flight_dynamics_undercarriage_state ();

  00165	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00168	c1 e0 06	 shl	 eax, 6
  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00171	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00177	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0017d	f3 0f 5a 81 64
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+7268]
  00185	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fdeb851eb851eb8
  0018d	f3 0f 5a 4c 02
	14		 cvtss2sd xmm1, DWORD PTR [edx+eax+20]
  00193	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00197	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  0019a	c1 e2 06	 shl	 edx, 6
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a2	8b 88 b8 24 00
	00		 mov	 ecx, DWORD PTR [eax+9400]
  001a8	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001ac	f3 0f 11 44 11
	14		 movss	 DWORD PTR [ecx+edx+20], xmm0

; 2175 : 
; 2176 : 					break;

  001b2	eb 4d		 jmp	 SHORT $LN5@dynamics_s
$LN10@dynamics_s:

; 2177 : 				}
; 2178 : 				case GUNSHIP_TYPE_HOKUM:
; 2179 : 				{
; 2180 : 
; 2181 : 					current_flight_dynamics->fixed_collision_points [loop].world_point.y -= 0.69 * get_current_flight_dynamics_undercarriage_state ();

  001b4	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  001b7	c1 e0 06	 shl	 eax, 6
  001ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c0	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  001c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001cc	f3 0f 5a 81 64
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+7268]
  001d4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe6147ae147ae14
  001dc	f3 0f 5a 4c 02
	14		 cvtss2sd xmm1, DWORD PTR [edx+eax+20]
  001e2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  001e6	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  001e9	c1 e2 06	 shl	 edx, 6
  001ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f1	8b 88 b8 24 00
	00		 mov	 ecx, DWORD PTR [eax+9400]
  001f7	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001fb	f3 0f 11 44 11
	14		 movss	 DWORD PTR [ecx+edx+20], xmm0
$LN13@dynamics_s:
$LN5@dynamics_s:

; 2182 : 
; 2183 : 					break;
; 2184 : 				}
; 2185 : 				case GUNSHIP_TYPE_APACHE:
; 2186 : 				{
; 2187 : 
; 2188 : 					//current_flight_dynamics->fixed_collision_points [loop].world_point.y -= 0.48 * get_current_flight_dynamics_undercarriage_state ();
; 2189 : 
; 2190 : 					break;
; 2191 : 				}
; 2192 : 				case GUNSHIP_TYPE_HAVOC:
; 2193 : 				{
; 2194 : 
; 2195 : 					//current_flight_dynamics->fixed_collision_points [loop].world_point.y -= 0.20 * get_current_flight_dynamics_undercarriage_state ();
; 2196 : 
; 2197 : 					break;
; 2198 : 				}
; 2199 : 				default:
; 2200 : 				{
; 2201 : 
; 2202 : 					break;
; 2203 : 				}
; 2204 : 			}
; 2205 : 
; 2206 : 		bound_position_to_map_area (&current_flight_dynamics->fixed_collision_points [loop].world_point);

  00201	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00204	c1 e0 06	 shl	 eax, 6
  00207	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0020d	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00213	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  00217	50		 push	 eax
  00218	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 2207 : 
; 2208 : 		current_flight_dynamics->fixed_collision_points [loop].violated = FALSE;

  0021d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00220	c1 e0 06	 shl	 eax, 6
  00223	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00229	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0022f	33 c9		 xor	 ecx, ecx
  00231	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 2209 : 	}

  00236	e9 e5 fd ff ff	 jmp	 $LN2@dynamics_s
$LN3@dynamics_s:
$LN1@dynamics_s:

; 2210 : }

  0023b	5f		 pop	 edi
  0023c	5e		 pop	 esi
  0023d	5b		 pop	 ebx
  0023e	8b e5		 mov	 esp, ebp
  00240	5d		 pop	 ebp
  00241	c3		 ret	 0
?dynamics_setup_fixed_collision_points@@YGXXZ ENDP	; dynamics_setup_fixed_collision_points
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?dynamics_service_moving_collision_violations@@YGXXZ
_TEXT	SEGMENT
tv345 = -116						; size = 4
tv323 = -116						; size = 4
tv301 = -116						; size = 4
tv397 = -112						; size = 4
tv395 = -112						; size = 4
tv393 = -112						; size = 4
tv240 = -112						; size = 4
tv339 = -108						; size = 4
tv317 = -108						; size = 4
tv295 = -108						; size = 4
tv233 = -108						; size = 4
_greatest_z_violation_distance$ = -40			; size = 4
_greatest_y_violation_distance$ = -36			; size = 4
_greatest_x_violation_distance$ = -32			; size = 4
_loop$ = -28						; size = 4
_greatest_z_violation_index$ = -24			; size = 4
_greatest_y_violation_index$ = -20			; size = 4
_greatest_x_violation_index$ = -16			; size = 4
_collision_movement$ = -12				; size = 12
?dynamics_service_moving_collision_violations@@YGXXZ PROC ; dynamics_service_moving_collision_violations, COMDAT

; 1997 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1998 : 
; 1999 : 	vec3d
; 2000 : 		collision_movement;
; 2001 : 
; 2002 : 	int
; 2003 : 		greatest_x_violation_index,
; 2004 : 		greatest_y_violation_index,
; 2005 : 		greatest_z_violation_index,
; 2006 : 		loop;
; 2007 : 
; 2008 : 	float
; 2009 : 		greatest_x_violation_distance,
; 2010 : 		greatest_y_violation_distance,
; 2011 : 		greatest_z_violation_distance;
; 2012 : 
; 2013 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN8@dynamics_s

; 2014 : 	{
; 2015 : 
; 2016 : 		return;

  00012	e9 63 04 00 00	 jmp	 $LN1@dynamics_s
$LN8@dynamics_s:

; 2017 : 	}
; 2018 : 
; 2019 : 	greatest_x_violation_index = -1;

  00017	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _greatest_x_violation_index$[ebp], -1

; 2020 : 	greatest_y_violation_index = -1;

  0001e	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _greatest_y_violation_index$[ebp], -1

; 2021 : 	greatest_z_violation_index = -1;

  00025	c7 45 e8 ff ff
	ff ff		 mov	 DWORD PTR _greatest_z_violation_index$[ebp], -1

; 2022 : 
; 2023 : 	greatest_x_violation_distance = 0.0;

  0002c	0f 57 c0	 xorps	 xmm0, xmm0
  0002f	f3 0f 11 45 e0	 movss	 DWORD PTR _greatest_x_violation_distance$[ebp], xmm0

; 2024 : 	greatest_y_violation_distance = 0.0;

  00034	0f 57 c0	 xorps	 xmm0, xmm0
  00037	f3 0f 11 45 dc	 movss	 DWORD PTR _greatest_y_violation_distance$[ebp], xmm0

; 2025 : 	greatest_z_violation_distance = 0.0;

  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	f3 0f 11 45 d8	 movss	 DWORD PTR _greatest_z_violation_distance$[ebp], xmm0

; 2026 : 
; 2027 : 	if (moving_collision_count)

  00044	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?moving_collision_count@@3HA, 0 ; moving_collision_count
  0004b	0f 84 2d 02 00
	00		 je	 $LN3@dynamics_s

; 2028 : 	{
; 2029 : 
; 2030 : 		for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  00051	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00058	eb 09		 jmp	 SHORT $LN4@dynamics_s
$LN2@dynamics_s:
  0005a	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  0005d	83 c0 01	 add	 eax, 1
  00060	89 45 e4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@dynamics_s:
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00068	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  0006b	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  00071	0f 8d 07 02 00
	00		 jge	 $LN3@dynamics_s

; 2031 : 		{
; 2032 : 
; 2033 : 			if (current_flight_dynamics->moving_collision_points [loop].violated)

  00077	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  0007a	c1 e0 06	 shl	 eax, 6
  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00083	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00089	0f b7 44 02 3c	 movzx	 eax, WORD PTR [edx+eax+60]
  0008e	85 c0		 test	 eax, eax
  00090	0f 84 e3 01 00
	00		 je	 $LN13@dynamics_s

; 2034 : 			{
; 2035 : 
; 2036 : 				//
; 2037 : 				// X violation distance
; 2038 : 				//
; 2039 : 
; 2040 : 				if (fabs (current_flight_dynamics->moving_collision_points [loop].violation_distance * current_flight_dynamics->moving_collision_points [loop].face_normal.x) > fabs (greatest_x_violation_distance))

  00096	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00099	c1 e0 06	 shl	 eax, 6
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a2	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  000a8	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  000ab	c1 e1 06	 shl	 ecx, 6
  000ae	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b4	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  000ba	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  000c0	f3 0f 59 44 0e
	04		 mulss	 xmm0, DWORD PTR [esi+ecx+4]
  000c6	51		 push	 ecx
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000d1	d9 5d 94	 fstp	 DWORD PTR tv295[ebp]
  000d4	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv295[ebp]
  000d9	51		 push	 ecx
  000da	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _greatest_x_violation_distance$[ebp]
  000df	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e4	f3 0f 11 45 90	 movss	 DWORD PTR tv393[ebp], xmm0
  000e9	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000ee	d9 5d 8c	 fstp	 DWORD PTR tv301[ebp]
  000f1	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv393[ebp]
  000f6	0f 2f 45 8c	 comiss	 xmm0, DWORD PTR tv301[ebp]
  000fa	76 3b		 jbe	 SHORT $LN11@dynamics_s

; 2041 : 				{
; 2042 : 
; 2043 : 					greatest_x_violation_distance = current_flight_dynamics->moving_collision_points [loop].violation_distance * current_flight_dynamics->moving_collision_points [loop].face_normal.x;

  000fc	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  000ff	c1 e0 06	 shl	 eax, 6
  00102	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00108	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0010e	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00111	c1 e1 06	 shl	 ecx, 6
  00114	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011a	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00120	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00126	f3 0f 59 44 0e
	04		 mulss	 xmm0, DWORD PTR [esi+ecx+4]
  0012c	f3 0f 11 45 e0	 movss	 DWORD PTR _greatest_x_violation_distance$[ebp], xmm0

; 2044 : 					greatest_x_violation_index = loop;

  00131	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00134	89 45 f0	 mov	 DWORD PTR _greatest_x_violation_index$[ebp], eax
$LN11@dynamics_s:

; 2045 : 				}
; 2046 : 
; 2047 : 				//
; 2048 : 				// Y violation distance
; 2049 : 				//
; 2050 : 
; 2051 : 				if (fabs (current_flight_dynamics->moving_collision_points [loop].violation_distance * current_flight_dynamics->moving_collision_points [loop].face_normal.y) > fabs (greatest_y_violation_distance))

  00137	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  0013a	c1 e0 06	 shl	 eax, 6
  0013d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00143	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00149	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  0014c	c1 e1 06	 shl	 ecx, 6
  0014f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00155	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  0015b	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00161	f3 0f 59 44 0e
	08		 mulss	 xmm0, DWORD PTR [esi+ecx+8]
  00167	51		 push	 ecx
  00168	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016d	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00172	d9 5d 94	 fstp	 DWORD PTR tv317[ebp]
  00175	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv317[ebp]
  0017a	51		 push	 ecx
  0017b	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _greatest_y_violation_distance$[ebp]
  00180	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00185	f3 0f 11 45 90	 movss	 DWORD PTR tv395[ebp], xmm0
  0018a	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0018f	d9 5d 8c	 fstp	 DWORD PTR tv323[ebp]
  00192	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv395[ebp]
  00197	0f 2f 45 8c	 comiss	 xmm0, DWORD PTR tv323[ebp]
  0019b	76 3b		 jbe	 SHORT $LN12@dynamics_s

; 2052 : 				{
; 2053 : 
; 2054 : 					greatest_y_violation_distance = current_flight_dynamics->moving_collision_points [loop].violation_distance * current_flight_dynamics->moving_collision_points [loop].face_normal.y;

  0019d	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  001a0	c1 e0 06	 shl	 eax, 6
  001a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a9	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  001b2	c1 e1 06	 shl	 ecx, 6
  001b5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001bb	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  001c1	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  001c7	f3 0f 59 44 0e
	08		 mulss	 xmm0, DWORD PTR [esi+ecx+8]
  001cd	f3 0f 11 45 dc	 movss	 DWORD PTR _greatest_y_violation_distance$[ebp], xmm0

; 2055 : 					greatest_y_violation_index = loop;

  001d2	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  001d5	89 45 ec	 mov	 DWORD PTR _greatest_y_violation_index$[ebp], eax
$LN12@dynamics_s:

; 2056 : 				}
; 2057 : 
; 2058 : 				//
; 2059 : 				// Z violation distance
; 2060 : 				//
; 2061 : 
; 2062 : 				if (fabs (current_flight_dynamics->moving_collision_points [loop].violation_distance * current_flight_dynamics->moving_collision_points [loop].face_normal.z) > fabs (greatest_z_violation_distance))

  001d8	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  001db	c1 e0 06	 shl	 eax, 6
  001de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e4	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  001ea	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  001ed	c1 e1 06	 shl	 ecx, 6
  001f0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f6	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  001fc	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00202	f3 0f 59 44 0e
	0c		 mulss	 xmm0, DWORD PTR [esi+ecx+12]
  00208	51		 push	 ecx
  00209	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00213	d9 5d 94	 fstp	 DWORD PTR tv339[ebp]
  00216	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv339[ebp]
  0021b	51		 push	 ecx
  0021c	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _greatest_z_violation_distance$[ebp]
  00221	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00226	f3 0f 11 45 90	 movss	 DWORD PTR tv397[ebp], xmm0
  0022b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00230	d9 5d 8c	 fstp	 DWORD PTR tv345[ebp]
  00233	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv397[ebp]
  00238	0f 2f 45 8c	 comiss	 xmm0, DWORD PTR tv345[ebp]
  0023c	76 3b		 jbe	 SHORT $LN13@dynamics_s

; 2063 : 				{
; 2064 : 
; 2065 : 					greatest_z_violation_distance = current_flight_dynamics->moving_collision_points [loop].violation_distance * current_flight_dynamics->moving_collision_points [loop].face_normal.z;

  0023e	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00241	c1 e0 06	 shl	 eax, 6
  00244	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0024a	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00250	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00253	c1 e1 06	 shl	 ecx, 6
  00256	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0025c	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00262	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00268	f3 0f 59 44 0e
	0c		 mulss	 xmm0, DWORD PTR [esi+ecx+12]
  0026e	f3 0f 11 45 d8	 movss	 DWORD PTR _greatest_z_violation_distance$[ebp], xmm0

; 2066 : 					greatest_z_violation_index = loop;

  00273	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00276	89 45 e8	 mov	 DWORD PTR _greatest_z_violation_index$[ebp], eax
$LN13@dynamics_s:

; 2067 : 				}
; 2068 : 			}
; 2069 : 		}

  00279	e9 dc fd ff ff	 jmp	 $LN2@dynamics_s
$LN3@dynamics_s:

; 2070 : 	}
; 2071 : 
; 2072 : 	//
; 2073 : 	// move model by greatest violation distance
; 2074 : 	//
; 2075 : 
; 2076 : 	collision_movement.x = 0.0;

  0027e	0f 57 c0	 xorps	 xmm0, xmm0
  00281	f3 0f 11 45 f4	 movss	 DWORD PTR _collision_movement$[ebp], xmm0

; 2077 : 	collision_movement.y = 0.0;

  00286	0f 57 c0	 xorps	 xmm0, xmm0
  00289	f3 0f 11 45 f8	 movss	 DWORD PTR _collision_movement$[ebp+4], xmm0

; 2078 : 	collision_movement.z = 0.0;

  0028e	0f 57 c0	 xorps	 xmm0, xmm0
  00291	f3 0f 11 45 fc	 movss	 DWORD PTR _collision_movement$[ebp+8], xmm0

; 2079 : 
; 2080 : 	if (greatest_x_violation_index != -1)

  00296	83 7d f0 ff	 cmp	 DWORD PTR _greatest_x_violation_index$[ebp], -1
  0029a	74 0a		 je	 SHORT $LN14@dynamics_s

; 2081 : 	{
; 2082 : 
; 2083 : 		collision_movement.x = greatest_x_violation_distance;

  0029c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _greatest_x_violation_distance$[ebp]
  002a1	f3 0f 11 45 f4	 movss	 DWORD PTR _collision_movement$[ebp], xmm0
$LN14@dynamics_s:

; 2084 : 	}
; 2085 : 
; 2086 : 	if (greatest_y_violation_index != -1)

  002a6	83 7d ec ff	 cmp	 DWORD PTR _greatest_y_violation_index$[ebp], -1
  002aa	74 0a		 je	 SHORT $LN15@dynamics_s

; 2087 : 	{
; 2088 : 
; 2089 : 		collision_movement.y = greatest_y_violation_distance;

  002ac	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _greatest_y_violation_distance$[ebp]
  002b1	f3 0f 11 45 f8	 movss	 DWORD PTR _collision_movement$[ebp+4], xmm0
$LN15@dynamics_s:

; 2090 : 	}
; 2091 : 
; 2092 : 	if (greatest_z_violation_index != -1)

  002b6	83 7d e8 ff	 cmp	 DWORD PTR _greatest_z_violation_index$[ebp], -1
  002ba	74 0a		 je	 SHORT $LN16@dynamics_s

; 2093 : 	{
; 2094 : 
; 2095 : 		collision_movement.z = greatest_z_violation_distance;

  002bc	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _greatest_z_violation_distance$[ebp]
  002c1	f3 0f 11 45 fc	 movss	 DWORD PTR _collision_movement$[ebp+8], xmm0
$LN16@dynamics_s:

; 2096 : 	}
; 2097 : 
; 2098 : 	bound_position_to_map_volume (&collision_movement);

  002c6	8d 45 f4	 lea	 eax, DWORD PTR _collision_movement$[ebp]
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 2099 : 
; 2100 : 	current_flight_dynamics->position.x += collision_movement.x;

  002cf	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _collision_movement$[ebp]
  002d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d9	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  002e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e7	f2 0f 11 81 ac
	00 00 00	 movsd	 QWORD PTR [ecx+172], xmm0

; 2101 : 	current_flight_dynamics->position.y += collision_movement.y;

  002ef	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _collision_movement$[ebp+4]
  002f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002f9	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  00301	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00307	f2 0f 11 81 b4
	00 00 00	 movsd	 QWORD PTR [ecx+180], xmm0

; 2102 : 	current_flight_dynamics->position.z += collision_movement.z;

  0030f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _collision_movement$[ebp+8]
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00319	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  00321	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00327	f2 0f 11 81 bc
	00 00 00	 movsd	 QWORD PTR [ecx+188], xmm0

; 2103 : 
; 2104 : 	if (moving_collision_count)

  0032f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?moving_collision_count@@3HA, 0 ; moving_collision_count
  00336	0f 84 3e 01 00
	00		 je	 $LN6@dynamics_s

; 2105 : 	{
; 2106 : 
; 2107 : 		for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  0033c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00343	eb 09		 jmp	 SHORT $LN7@dynamics_s
$LN5@dynamics_s:
  00345	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00348	83 c0 01	 add	 eax, 1
  0034b	89 45 e4	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@dynamics_s:
  0034e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00353	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00356	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  0035c	0f 8d 18 01 00
	00		 jge	 $LN6@dynamics_s

; 2108 : 		{
; 2109 : 
; 2110 : 			if (current_flight_dynamics->moving_collision_points [loop].violated)

  00362	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00365	c1 e0 06	 shl	 eax, 6
  00368	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0036e	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00374	0f b7 44 02 3c	 movzx	 eax, WORD PTR [edx+eax+60]
  00379	85 c0		 test	 eax, eax
  0037b	0f 84 f4 00 00
	00		 je	 $LN18@dynamics_s

; 2111 : 			{
; 2112 : 
; 2113 : 				debug_log ("DYNAMICS: moving collision %s", dynamics_collision_point_info [current_flight_dynamics->moving_collision_points [loop].collision_point_type].name);

  00381	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00384	c1 e0 06	 shl	 eax, 6
  00387	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0038d	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00393	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  00396	c1 e0 04	 shl	 eax, 4
  00399	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?dynamics_collision_point_info@@3PAUDYNAMICS_COLLISION_POINT_TYPE@@A[eax]
  0039f	51		 push	 ecx
  003a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@FJOHDAPF@DYNAMICS?3?5moving?5collision?5?$CFs@
  003a5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  003aa	83 c4 08	 add	 esp, 8

; 2114 : 
; 2115 : 				// DEBUG-------------------------------------
; 2116 : 				// ignore tail hitting carrier if landed....
; 2117 : 				if (current_flight_dynamics->moving_collision_points [loop].collision_point_type == DYNAMICS_COLLISION_POINT_TAIL_ROTOR)

  003ad	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  003b0	c1 e0 06	 shl	 eax, 6
  003b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003b9	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  003bf	83 3c 02 01	 cmp	 DWORD PTR [edx+eax], 1
  003c3	0f 85 86 00 00
	00		 jne	 $LN20@dynamics_s

; 2118 : 				{
; 2119 : 
; 2120 : 					if (!get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))

  003c9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  003d0	74 0c		 je	 SHORT $LN22@dynamics_s
  003d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d9	89 4d 94	 mov	 DWORD PTR tv233[ebp], ecx
  003dc	eb 1d		 jmp	 SHORT $LN23@dynamics_s
$LN22@dynamics_s:
  003de	68 48 08 00 00	 push	 2120			; 00000848H
  003e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003ee	52		 push	 edx
  003ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f4	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv233[ebp], 0
$LN23@dynamics_s:
  003fb	b8 01 00 00 00	 mov	 eax, 1
  00400	85 c0		 test	 eax, eax
  00402	74 09		 je	 SHORT $LN24@dynamics_s
  00404	c7 45 90 04 00
	00 00		 mov	 DWORD PTR tv240[ebp], 4
  0040b	eb 1d		 jmp	 SHORT $LN25@dynamics_s
$LN24@dynamics_s:
  0040d	68 48 08 00 00	 push	 2120			; 00000848H
  00412	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00417	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0041d	51		 push	 ecx
  0041e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00423	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv240[ebp], 0
$LN25@dynamics_s:
  0042a	6a 04		 push	 4
  0042c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00432	52		 push	 edx
  00433	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv233[ebp], 1116
  0043a	8b 4d 90	 mov	 ecx, DWORD PTR tv240[ebp]
  0043d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00444	ff d2		 call	 edx
  00446	85 c0		 test	 eax, eax
  00448	75 05		 jne	 SHORT $LN20@dynamics_s

; 2121 : 					{
; 2122 : 
; 2123 : 						continue;

  0044a	e9 f6 fe ff ff	 jmp	 $LN5@dynamics_s
$LN20@dynamics_s:

; 2124 : 					}
; 2125 : 				}
; 2126 : 				//
; 2127 : 				// DEBUG-------------------------------------
; 2128 : 
; 2129 : 				dynamics_damage_model (dynamics_collision_point_info [current_flight_dynamics->moving_collision_points [loop].collision_point_type].damage_type, TRUE);

  0044f	6a 01		 push	 1
  00451	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00454	c1 e0 06	 shl	 eax, 6
  00457	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0045d	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00463	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  00466	c1 e0 04	 shl	 eax, 4
  00469	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR ?dynamics_collision_point_info@@3PAUDYNAMICS_COLLISION_POINT_TYPE@@A[eax+12]
  0046f	51		 push	 ecx
  00470	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model
$LN18@dynamics_s:

; 2130 : 			}
; 2131 : 		}

  00475	e9 cb fe ff ff	 jmp	 $LN5@dynamics_s
$LN6@dynamics_s:
$LN1@dynamics_s:

; 2132 : 	}
; 2133 : }

  0047a	5f		 pop	 edi
  0047b	5e		 pop	 esi
  0047c	5b		 pop	 ebx
  0047d	8b e5		 mov	 esp, ebp
  0047f	5d		 pop	 ebp
  00480	c3		 ret	 0
?dynamics_service_moving_collision_violations@@YGXXZ ENDP ; dynamics_service_moving_collision_violations
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?dynamics_service_fixed_collision_violations@@YGXXZ
_TEXT	SEGMENT
tv326 = -124						; size = 4
tv304 = -124						; size = 4
tv282 = -124						; size = 4
tv372 = -120						; size = 4
tv370 = -120						; size = 4
tv368 = -120						; size = 4
tv216 = -120						; size = 4
tv320 = -116						; size = 4
tv298 = -116						; size = 4
tv276 = -116						; size = 4
tv229 = -116						; size = 4
tv209 = -116						; size = 4
_enemy_force$1 = -48					; size = 4
_force$2 = -44						; size = 4
_greatest_z_violation_distance$ = -40			; size = 4
_greatest_y_violation_distance$ = -36			; size = 4
_greatest_x_violation_distance$ = -32			; size = 4
_loop$ = -28						; size = 4
_greatest_z_violation_index$ = -24			; size = 4
_greatest_y_violation_index$ = -20			; size = 4
_greatest_x_violation_index$ = -16			; size = 4
_collision_movement$ = -12				; size = 12
?dynamics_service_fixed_collision_violations@@YGXXZ PROC ; dynamics_service_fixed_collision_violations, COMDAT

; 1861 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1862 : 	vec3d
; 1863 : 		collision_movement;
; 1864 : 
; 1865 : 	int
; 1866 : 		greatest_x_violation_index,
; 1867 : 		greatest_y_violation_index,
; 1868 : 		greatest_z_violation_index,
; 1869 : 		loop;
; 1870 : 
; 1871 : 	float
; 1872 : 		greatest_x_violation_distance,
; 1873 : 		greatest_y_violation_distance,
; 1874 : 		greatest_z_violation_distance;
; 1875 : 
; 1876 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN5@dynamics_s

; 1877 : 	{
; 1878 : 
; 1879 : 		return;

  00012	e9 0a 04 00 00	 jmp	 $LN1@dynamics_s
$LN5@dynamics_s:

; 1880 : 	}
; 1881 : 
; 1882 : 	greatest_x_violation_index = -1;

  00017	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _greatest_x_violation_index$[ebp], -1

; 1883 : 	greatest_y_violation_index = -1;

  0001e	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _greatest_y_violation_index$[ebp], -1

; 1884 : 	greatest_z_violation_index = -1;

  00025	c7 45 e8 ff ff
	ff ff		 mov	 DWORD PTR _greatest_z_violation_index$[ebp], -1

; 1885 : 
; 1886 : 	greatest_x_violation_distance = 0.0;

  0002c	0f 57 c0	 xorps	 xmm0, xmm0
  0002f	f3 0f 11 45 e0	 movss	 DWORD PTR _greatest_x_violation_distance$[ebp], xmm0

; 1887 : 	greatest_y_violation_distance = 0.0;

  00034	0f 57 c0	 xorps	 xmm0, xmm0
  00037	f3 0f 11 45 dc	 movss	 DWORD PTR _greatest_y_violation_distance$[ebp], xmm0

; 1888 : 	greatest_z_violation_distance = 0.0;

  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	f3 0f 11 45 d8	 movss	 DWORD PTR _greatest_z_violation_distance$[ebp], xmm0

; 1889 : 
; 1890 : 	if (fixed_collision_count)

  00044	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fixed_collision_count@@3HA, 0 ; fixed_collision_count
  0004b	0f 84 d0 03 00
	00		 je	 $LN14@dynamics_s

; 1891 : 	{
; 1892 : 
; 1893 : 		for (loop = 0; loop < current_flight_dynamics->number_of_fixed_collision_points; loop ++)

  00051	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00058	eb 09		 jmp	 SHORT $LN4@dynamics_s
$LN2@dynamics_s:
  0005a	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  0005d	83 c0 01	 add	 eax, 1
  00060	89 45 e4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@dynamics_s:
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00068	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  0006b	3b 88 d8 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9432]
  00071	0f 8d 07 02 00
	00		 jge	 $LN3@dynamics_s

; 1894 : 		{
; 1895 : 
; 1896 : 			if (current_flight_dynamics->fixed_collision_points [loop].violated)

  00077	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  0007a	c1 e0 06	 shl	 eax, 6
  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00083	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00089	0f b7 44 02 3c	 movzx	 eax, WORD PTR [edx+eax+60]
  0008e	85 c0		 test	 eax, eax
  00090	0f 84 e3 01 00
	00		 je	 $LN10@dynamics_s

; 1897 : 			{
; 1898 : 
; 1899 : 				//
; 1900 : 				// X violation distance
; 1901 : 				//
; 1902 : 
; 1903 : 				if (fabs (current_flight_dynamics->fixed_collision_points [loop].violation_distance * current_flight_dynamics->fixed_collision_points [loop].face_normal.x) > fabs (greatest_x_violation_distance))

  00096	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00099	c1 e0 06	 shl	 eax, 6
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a2	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  000a8	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  000ab	c1 e1 06	 shl	 ecx, 6
  000ae	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b4	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  000ba	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  000c0	f3 0f 59 44 0e
	04		 mulss	 xmm0, DWORD PTR [esi+ecx+4]
  000c6	51		 push	 ecx
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000d1	d9 5d 8c	 fstp	 DWORD PTR tv276[ebp]
  000d4	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv276[ebp]
  000d9	51		 push	 ecx
  000da	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _greatest_x_violation_distance$[ebp]
  000df	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e4	f3 0f 11 45 88	 movss	 DWORD PTR tv368[ebp], xmm0
  000e9	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000ee	d9 5d 84	 fstp	 DWORD PTR tv282[ebp]
  000f1	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv368[ebp]
  000f6	0f 2f 45 84	 comiss	 xmm0, DWORD PTR tv282[ebp]
  000fa	76 3b		 jbe	 SHORT $LN8@dynamics_s

; 1904 : 				{
; 1905 : 
; 1906 : 					greatest_x_violation_distance = current_flight_dynamics->fixed_collision_points [loop].violation_distance * current_flight_dynamics->fixed_collision_points [loop].face_normal.x;

  000fc	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  000ff	c1 e0 06	 shl	 eax, 6
  00102	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00108	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0010e	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00111	c1 e1 06	 shl	 ecx, 6
  00114	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011a	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  00120	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00126	f3 0f 59 44 0e
	04		 mulss	 xmm0, DWORD PTR [esi+ecx+4]
  0012c	f3 0f 11 45 e0	 movss	 DWORD PTR _greatest_x_violation_distance$[ebp], xmm0

; 1907 : 					greatest_x_violation_index = loop;

  00131	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00134	89 45 f0	 mov	 DWORD PTR _greatest_x_violation_index$[ebp], eax
$LN8@dynamics_s:

; 1908 : 				}
; 1909 : 
; 1910 : 				//
; 1911 : 				// Y violation distance
; 1912 : 				//
; 1913 : 
; 1914 : 				if (fabs (current_flight_dynamics->fixed_collision_points [loop].violation_distance * current_flight_dynamics->fixed_collision_points [loop].face_normal.y) > fabs (greatest_y_violation_distance))

  00137	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  0013a	c1 e0 06	 shl	 eax, 6
  0013d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00143	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00149	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  0014c	c1 e1 06	 shl	 ecx, 6
  0014f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00155	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  0015b	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00161	f3 0f 59 44 0e
	08		 mulss	 xmm0, DWORD PTR [esi+ecx+8]
  00167	51		 push	 ecx
  00168	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016d	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00172	d9 5d 8c	 fstp	 DWORD PTR tv298[ebp]
  00175	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv298[ebp]
  0017a	51		 push	 ecx
  0017b	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _greatest_y_violation_distance$[ebp]
  00180	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00185	f3 0f 11 45 88	 movss	 DWORD PTR tv370[ebp], xmm0
  0018a	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0018f	d9 5d 84	 fstp	 DWORD PTR tv304[ebp]
  00192	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv370[ebp]
  00197	0f 2f 45 84	 comiss	 xmm0, DWORD PTR tv304[ebp]
  0019b	76 3b		 jbe	 SHORT $LN9@dynamics_s

; 1915 : 				{
; 1916 : 
; 1917 : 					greatest_y_violation_distance = current_flight_dynamics->fixed_collision_points [loop].violation_distance * current_flight_dynamics->fixed_collision_points [loop].face_normal.y;

  0019d	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  001a0	c1 e0 06	 shl	 eax, 6
  001a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a9	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  001b2	c1 e1 06	 shl	 ecx, 6
  001b5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001bb	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  001c1	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  001c7	f3 0f 59 44 0e
	08		 mulss	 xmm0, DWORD PTR [esi+ecx+8]
  001cd	f3 0f 11 45 dc	 movss	 DWORD PTR _greatest_y_violation_distance$[ebp], xmm0

; 1918 : 					greatest_y_violation_index = loop;

  001d2	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  001d5	89 45 ec	 mov	 DWORD PTR _greatest_y_violation_index$[ebp], eax
$LN9@dynamics_s:

; 1919 : 				}
; 1920 : 
; 1921 : 				//
; 1922 : 				// Z violation distance
; 1923 : 				//
; 1924 : 
; 1925 : 				if (fabs (current_flight_dynamics->fixed_collision_points [loop].violation_distance * current_flight_dynamics->fixed_collision_points [loop].face_normal.z) > fabs (greatest_z_violation_distance))

  001d8	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  001db	c1 e0 06	 shl	 eax, 6
  001de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e4	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  001ea	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  001ed	c1 e1 06	 shl	 ecx, 6
  001f0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f6	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  001fc	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00202	f3 0f 59 44 0e
	0c		 mulss	 xmm0, DWORD PTR [esi+ecx+12]
  00208	51		 push	 ecx
  00209	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00213	d9 5d 8c	 fstp	 DWORD PTR tv320[ebp]
  00216	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv320[ebp]
  0021b	51		 push	 ecx
  0021c	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _greatest_z_violation_distance$[ebp]
  00221	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00226	f3 0f 11 45 88	 movss	 DWORD PTR tv372[ebp], xmm0
  0022b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00230	d9 5d 84	 fstp	 DWORD PTR tv326[ebp]
  00233	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv372[ebp]
  00238	0f 2f 45 84	 comiss	 xmm0, DWORD PTR tv326[ebp]
  0023c	76 3b		 jbe	 SHORT $LN10@dynamics_s

; 1926 : 				{
; 1927 : 
; 1928 : 					greatest_z_violation_distance = current_flight_dynamics->fixed_collision_points [loop].violation_distance * current_flight_dynamics->fixed_collision_points [loop].face_normal.z;

  0023e	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00241	c1 e0 06	 shl	 eax, 6
  00244	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0024a	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00250	8b 4d e4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00253	c1 e1 06	 shl	 ecx, 6
  00256	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0025c	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  00262	f3 0f 10 44 02
	38		 movss	 xmm0, DWORD PTR [edx+eax+56]
  00268	f3 0f 59 44 0e
	0c		 mulss	 xmm0, DWORD PTR [esi+ecx+12]
  0026e	f3 0f 11 45 d8	 movss	 DWORD PTR _greatest_z_violation_distance$[ebp], xmm0

; 1929 : 					greatest_z_violation_index = loop;

  00273	8b 45 e4	 mov	 eax, DWORD PTR _loop$[ebp]
  00276	89 45 e8	 mov	 DWORD PTR _greatest_z_violation_index$[ebp], eax
$LN10@dynamics_s:

; 1930 : 				}
; 1931 : 			}
; 1932 : 		}

  00279	e9 dc fd ff ff	 jmp	 $LN2@dynamics_s
$LN3@dynamics_s:

; 1933 : 
; 1934 : 		//
; 1935 : 		// move model by greatest violation distance
; 1936 : 		//
; 1937 : 
; 1938 : 		collision_movement.x = 0.0;

  0027e	0f 57 c0	 xorps	 xmm0, xmm0
  00281	f3 0f 11 45 f4	 movss	 DWORD PTR _collision_movement$[ebp], xmm0

; 1939 : 		collision_movement.y = 0.0;

  00286	0f 57 c0	 xorps	 xmm0, xmm0
  00289	f3 0f 11 45 f8	 movss	 DWORD PTR _collision_movement$[ebp+4], xmm0

; 1940 : 		collision_movement.z = 0.0;

  0028e	0f 57 c0	 xorps	 xmm0, xmm0
  00291	f3 0f 11 45 fc	 movss	 DWORD PTR _collision_movement$[ebp+8], xmm0

; 1941 : 
; 1942 : 		if (greatest_x_violation_index != -1)

  00296	83 7d f0 ff	 cmp	 DWORD PTR _greatest_x_violation_index$[ebp], -1
  0029a	74 0a		 je	 SHORT $LN11@dynamics_s

; 1943 : 		{
; 1944 : 
; 1945 : 			collision_movement.x = greatest_x_violation_distance;

  0029c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _greatest_x_violation_distance$[ebp]
  002a1	f3 0f 11 45 f4	 movss	 DWORD PTR _collision_movement$[ebp], xmm0
$LN11@dynamics_s:

; 1946 : 		}
; 1947 : 
; 1948 : 		if (greatest_y_violation_index != -1)

  002a6	83 7d ec ff	 cmp	 DWORD PTR _greatest_y_violation_index$[ebp], -1
  002aa	74 0a		 je	 SHORT $LN12@dynamics_s

; 1949 : 		{
; 1950 : 
; 1951 : 			collision_movement.y = greatest_y_violation_distance;

  002ac	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _greatest_y_violation_distance$[ebp]
  002b1	f3 0f 11 45 f8	 movss	 DWORD PTR _collision_movement$[ebp+4], xmm0
$LN12@dynamics_s:

; 1952 : 		}
; 1953 : 
; 1954 : 		if (greatest_z_violation_index != -1)

  002b6	83 7d e8 ff	 cmp	 DWORD PTR _greatest_z_violation_index$[ebp], -1
  002ba	74 0a		 je	 SHORT $LN13@dynamics_s

; 1955 : 		{
; 1956 : 
; 1957 : 			collision_movement.z = greatest_z_violation_distance;

  002bc	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _greatest_z_violation_distance$[ebp]
  002c1	f3 0f 11 45 fc	 movss	 DWORD PTR _collision_movement$[ebp+8], xmm0
$LN13@dynamics_s:

; 1958 : 		}
; 1959 : 
; 1960 : 		bound_position_to_map_volume (&collision_movement);

  002c6	8d 45 f4	 lea	 eax, DWORD PTR _collision_movement$[ebp]
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 1961 : 
; 1962 : 		current_flight_dynamics->position.x += collision_movement.x;

  002cf	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _collision_movement$[ebp]
  002d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d9	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  002e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e7	f2 0f 11 81 ac
	00 00 00	 movsd	 QWORD PTR [ecx+172], xmm0

; 1963 : 		current_flight_dynamics->position.y += collision_movement.y;

  002ef	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _collision_movement$[ebp+4]
  002f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002f9	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  00301	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00307	f2 0f 11 81 b4
	00 00 00	 movsd	 QWORD PTR [ecx+180], xmm0

; 1964 : 		current_flight_dynamics->position.z += collision_movement.z;

  0030f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _collision_movement$[ebp+8]
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00319	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  00321	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00327	f2 0f 11 81 bc
	00 00 00	 movsd	 QWORD PTR [ecx+188], xmm0

; 1965 : 
; 1966 : 		//debug_log ("DYNAMICS: fixed collision movement %f, %f, %f", collision_movement.x, collision_movement.y, collision_movement.z);
; 1967 : 
; 1968 : 		if ((get_local_entity_int_value (get_gunship_entity (), INT_TYPE_ALIVE)) && (get_current_dynamics_fatal_damage ()))

  0032f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00336	74 0c		 je	 SHORT $LN16@dynamics_s
  00338	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	89 4d 8c	 mov	 DWORD PTR tv209[ebp], ecx
  00342	eb 1d		 jmp	 SHORT $LN17@dynamics_s
$LN16@dynamics_s:
  00344	68 b0 07 00 00	 push	 1968			; 000007b0H
  00349	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00354	52		 push	 edx
  00355	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035a	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN17@dynamics_s:
  00361	b8 01 00 00 00	 mov	 eax, 1
  00366	85 c0		 test	 eax, eax
  00368	74 09		 je	 SHORT $LN18@dynamics_s
  0036a	c7 45 88 07 00
	00 00		 mov	 DWORD PTR tv216[ebp], 7
  00371	eb 1d		 jmp	 SHORT $LN19@dynamics_s
$LN18@dynamics_s:
  00373	68 b0 07 00 00	 push	 1968			; 000007b0H
  00378	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00383	51		 push	 ecx
  00384	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00389	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN19@dynamics_s:
  00390	6a 07		 push	 7
  00392	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00398	52		 push	 edx
  00399	69 45 8c 5c 04
	00 00		 imul	 eax, DWORD PTR tv209[ebp], 1116
  003a0	8b 4d 88	 mov	 ecx, DWORD PTR tv216[ebp]
  003a3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003aa	ff d2		 call	 edx
  003ac	85 c0		 test	 eax, eax
  003ae	74 71		 je	 SHORT $LN14@dynamics_s
  003b0	e8 00 00 00 00	 call	 ?get_current_dynamics_fatal_damage@@YGHXZ ; get_current_dynamics_fatal_damage
  003b5	85 c0		 test	 eax, eax
  003b7	74 68		 je	 SHORT $LN14@dynamics_s

; 1969 : 		{
; 1970 : 
; 1971 : 			entity
; 1972 : 				*force,
; 1973 : 				*enemy_force;
; 1974 : 
; 1975 : 			//
; 1976 : 			// Enter demo mode
; 1977 : 			//
; 1978 : 
; 1979 : 			force = get_local_force_entity (get_global_gunship_side ());

  003b9	a1 08 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  003be	50		 push	 eax
  003bf	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  003c4	89 45 d4	 mov	 DWORD PTR _force$2[ebp], eax

; 1980 : 
; 1981 : 			enemy_force = get_local_force_entity (get_enemy_side (get_global_gunship_side ()));

  003c7	83 3d 08 00 00
	00 01		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8, 1
  003ce	75 09		 jne	 SHORT $LN20@dynamics_s
  003d0	c7 45 8c 02 00
	00 00		 mov	 DWORD PTR tv229[ebp], 2
  003d7	eb 07		 jmp	 SHORT $LN21@dynamics_s
$LN20@dynamics_s:
  003d9	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR tv229[ebp], 1
$LN21@dynamics_s:
  003e0	8b 45 8c	 mov	 eax, DWORD PTR tv229[ebp]
  003e3	50		 push	 eax
  003e4	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  003e9	89 45 d0	 mov	 DWORD PTR _enemy_force$1[ebp], eax

; 1982 : 
; 1983 : 			notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, force, get_gunship_entity (), NULL);

  003ec	6a 00		 push	 0
  003ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003f3	50		 push	 eax
  003f4	8b 4d d4	 mov	 ecx, DWORD PTR _force$2[ebp]
  003f7	51		 push	 ecx
  003f8	6a 15		 push	 21			; 00000015H
  003fa	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  003ff	83 c4 10	 add	 esp, 16			; 00000010H

; 1984 : 
; 1985 : 			notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, enemy_force, get_gunship_entity (), NULL);

  00402	6a 00		 push	 0
  00404	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00409	50		 push	 eax
  0040a	8b 4d d0	 mov	 ecx, DWORD PTR _enemy_force$1[ebp]
  0040d	51		 push	 ecx
  0040e	6a 15		 push	 21			; 00000015H
  00410	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00415	83 c4 10	 add	 esp, 16			; 00000010H

; 1986 : 
; 1987 : 			dynamics_kill_model (DYNAMICS_DESTROY_CRASH_LANDED, NULL);

  00418	6a 00		 push	 0
  0041a	6a 01		 push	 1
  0041c	e8 00 00 00 00	 call	 ?dynamics_kill_model@@YGXW4DYNAMICS_DESTROY_TYPES@@PAUENTITY@@@Z ; dynamics_kill_model
$LN14@dynamics_s:
$LN1@dynamics_s:

; 1988 : 		}
; 1989 : 	}
; 1990 : }

  00421	5f		 pop	 edi
  00422	5e		 pop	 esi
  00423	5b		 pop	 ebx
  00424	8b e5		 mov	 esp, ebp
  00426	5d		 pop	 ebp
  00427	c3		 ret	 0
?dynamics_service_fixed_collision_violations@@YGXXZ ENDP ; dynamics_service_fixed_collision_violations
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?update_object_collision_dynamics@@YGXXZ
_TEXT	SEGMENT
tv851 = -172						; size = 8
tv797 = -172						; size = 8
tv759 = -172						; size = 8
tv338 = -172						; size = 4
tv313 = -172						; size = 4
tv281 = -172						; size = 4
tv259 = -172						; size = 4
tv240 = -172						; size = 4
tv221 = -172						; size = 4
tv202 = -172						; size = 4
tv182 = -172						; size = 4
tv85 = -172						; size = 4
tv330 = -168						; size = 4
tv305 = -168						; size = 4
tv273 = -168						; size = 4
tv252 = -168						; size = 4
tv233 = -168						; size = 4
tv214 = -168						; size = 4
tv195 = -168						; size = 4
tv174 = -168						; size = 4
tv167 = -168						; size = 4
tv77 = -168						; size = 4
$T1 = -164						; size = 4
$T2 = -160						; size = 4
$T3 = -156						; size = 4
$T4 = -152						; size = 4
_object_radius$5 = -84					; size = 4
_user_radius$6 = -80					; size = 4
_sqr_range$7 = -76					; size = 4
_detailed_test$8 = -72					; size = 4
_start_loop_z$9 = -68					; size = 4
_start_loop_x$10 = -64					; size = 4
_loop_z$11 = -60					; size = 4
_loop_x$12 = -56					; size = 4
_z$13 = -52						; size = 4
_x$14 = -48						; size = 4
_sector$15 = -44					; size = 4
_object$16 = -40					; size = 4
_raw$ = -36						; size = 4
_vec$ = -32						; size = 12
_position$ = -20					; size = 12
_collision_en$ = -8					; size = 4
_loop$ = -4						; size = 4
?update_object_collision_dynamics@@YGXXZ PROC		; update_object_collision_dynamics, COMDAT

; 954  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 955  : 
; 956  : 	int
; 957  : 		loop;
; 958  : 
; 959  : 	entity
; 960  : 		*collision_en;
; 961  : 
; 962  : 	vec3d
; 963  : 		position,
; 964  : 		vec;
; 965  : 
; 966  : 	helicopter
; 967  : 		*raw;
; 968  : 
; 969  : 	if (!get_gunship_entity ())

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	75 05		 jne	 SHORT $LN16@update_obj

; 970  : 	{
; 971  : 
; 972  : 		return;

  00015	e9 f1 0b 00 00	 jmp	 $LN1@update_obj
$LN16@update_obj:

; 973  : 	}
; 974  : 
; 975  : 	raw = (helicopter *) get_local_entity_data (get_gunship_entity ());

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00022	89 4d dc	 mov	 DWORD PTR _raw$[ebp], ecx

; 976  : 
; 977  : 	if ((current_flight_dynamics->valid_last_frame_fixed_collision_points) || (current_flight_dynamics->valid_last_frame_moving_collision_points))

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002a	83 b8 c8 24 00
	00 00		 cmp	 DWORD PTR [eax+9416], 0
  00031	75 12		 jne	 SHORT $LN18@update_obj
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00038	83 b8 cc 24 00
	00 00		 cmp	 DWORD PTR [eax+9420], 0
  0003f	0f 84 c6 0b 00
	00		 je	 $LN14@update_obj
$LN18@update_obj:

; 978  : 	{
; 979  : 
; 980  : 		entity
; 981  : 			*object,
; 982  : 			*sector;
; 983  : 
; 984  : 		int
; 985  : 			x,
; 986  : 			z,
; 987  : 			loop_x,
; 988  : 			loop_z,
; 989  : 			start_loop_x,
; 990  : 			start_loop_z,
; 991  : 			detailed_test;
; 992  : 
; 993  : 		float
; 994  : 			sqr_range,
; 995  : 			user_radius,
; 996  : 			object_radius;
; 997  : 
; 998  : 		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 999  : 		//
; 1000 : 		// Quick radius check once for the whole object
; 1001 : 		//
; 1002 : 		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1003 : 
; 1004 : 		detailed_test = FALSE;

  00045	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _detailed_test$8[ebp], 0

; 1005 : 
; 1006 : 		user_radius = get_object_3d_radius (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_OBJECT_3D_SHAPE));

  0004c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00053	74 0f		 je	 SHORT $LN31@update_obj
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv77[ebp], ecx
  00062	eb 24		 jmp	 SHORT $LN32@update_obj
$LN31@update_obj:
  00064	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  0006a	83 c2 34	 add	 edx, 52			; 00000034H
  0006d	52		 push	 edx
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007e	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv77[ebp], 0
$LN32@update_obj:
  00088	b9 01 00 00 00	 mov	 ecx, 1
  0008d	85 c9		 test	 ecx, ecx
  0008f	74 0c		 je	 SHORT $LN33@update_obj
  00091	c7 85 54 ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv85[ebp], 146 ; 00000092H
  0009b	eb 24		 jmp	 SHORT $LN34@update_obj
$LN33@update_obj:
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  000a3	83 c2 34	 add	 edx, 52			; 00000034H
  000a6	52		 push	 edx
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b7	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv85[ebp], 0
$LN34@update_obj:
  000c1	68 92 00 00 00	 push	 146			; 00000092H
  000c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000cc	51		 push	 ecx
  000cd	69 95 58 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv77[ebp], 1116
  000d7	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv85[ebp]
  000dd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e4	ff d1		 call	 ecx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ?get_object_3d_radius@@YGMH@Z ; get_object_3d_radius
  000ec	d9 5d b0	 fstp	 DWORD PTR _user_radius$6[ebp]

; 1007 : 
; 1008 : 		get_x_sector (x, current_flight_dynamics->position.x);

  000ef	8d 45 d0	 lea	 eax, DWORD PTR _x$14[ebp]
  000f2	50		 push	 eax
  000f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f9	f2 0f 10 81 ac
	00 00 00	 movsd	 xmm0, QWORD PTR [ecx+172]
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00110	8b 45 d0	 mov	 eax, DWORD PTR _x$14[ebp]
  00113	99		 cdq
  00114	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0011a	89 45 d0	 mov	 DWORD PTR _x$14[ebp], eax

; 1009 : 		get_z_sector (z, current_flight_dynamics->position.z);

  0011d	8d 45 cc	 lea	 eax, DWORD PTR _z$13[ebp]
  00120	50		 push	 eax
  00121	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00127	f2 0f 10 81 bc
	00 00 00	 movsd	 xmm0, QWORD PTR [ecx+188]
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0013e	8b 45 cc	 mov	 eax, DWORD PTR _z$13[ebp]
  00141	99		 cdq
  00142	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00148	89 45 cc	 mov	 DWORD PTR _z$13[ebp], eax

; 1010 : 
; 1011 : 		start_loop_x = max (x - 1, 0);

  0014b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp], 0
  00155	8b 45 d0	 mov	 eax, DWORD PTR _x$14[ebp]
  00158	83 e8 01	 sub	 eax, 1
  0015b	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00161	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00167	51		 push	 ecx
  00168	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  0016e	52		 push	 edx
  0016f	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	89 45 c0	 mov	 DWORD PTR _start_loop_x$10[ebp], eax

; 1012 : 
; 1013 : 		start_loop_z = max (z - 1, 0);

  00179	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  00183	8b 45 cc	 mov	 eax, DWORD PTR _z$13[ebp]
  00186	83 e8 01	 sub	 eax, 1
  00189	89 85 5c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0018f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00195	51		 push	 ecx
  00196	8d 95 5c ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  0019c	52		 push	 edx
  0019d	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  001a2	8b 00		 mov	 eax, DWORD PTR [eax]
  001a4	89 45 bc	 mov	 DWORD PTR _start_loop_z$9[ebp], eax

; 1014 : 
; 1015 : 		for (loop_x = start_loop_x; ((loop_x <= x + 1) && (loop_x < NUM_MAP_X_SECTORS)); loop_x ++)

  001a7	8b 45 c0	 mov	 eax, DWORD PTR _start_loop_x$10[ebp]
  001aa	89 45 c8	 mov	 DWORD PTR _loop_x$12[ebp], eax
  001ad	eb 09		 jmp	 SHORT $LN4@update_obj
$LN2@update_obj:
  001af	8b 45 c8	 mov	 eax, DWORD PTR _loop_x$12[ebp]
  001b2	83 c0 01	 add	 eax, 1
  001b5	89 45 c8	 mov	 DWORD PTR _loop_x$12[ebp], eax
$LN4@update_obj:
  001b8	8b 45 d0	 mov	 eax, DWORD PTR _x$14[ebp]
  001bb	83 c0 01	 add	 eax, 1
  001be	39 45 c8	 cmp	 DWORD PTR _loop_x$12[ebp], eax
  001c1	0f 8f c9 05 00
	00		 jg	 $LN3@update_obj
  001c7	8b 45 c8	 mov	 eax, DWORD PTR _loop_x$12[ebp]
  001ca	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  001d0	0f 8d ba 05 00
	00		 jge	 $LN3@update_obj

; 1016 : 		{
; 1017 : 
; 1018 : 			for (loop_z = start_loop_z; ((loop_z <= z + 1) && (loop_z < NUM_MAP_Z_SECTORS)); loop_z ++)

  001d6	8b 45 bc	 mov	 eax, DWORD PTR _start_loop_z$9[ebp]
  001d9	89 45 c4	 mov	 DWORD PTR _loop_z$11[ebp], eax
  001dc	eb 09		 jmp	 SHORT $LN7@update_obj
$LN5@update_obj:
  001de	8b 45 c4	 mov	 eax, DWORD PTR _loop_z$11[ebp]
  001e1	83 c0 01	 add	 eax, 1
  001e4	89 45 c4	 mov	 DWORD PTR _loop_z$11[ebp], eax
$LN7@update_obj:
  001e7	8b 45 cc	 mov	 eax, DWORD PTR _z$13[ebp]
  001ea	83 c0 01	 add	 eax, 1
  001ed	39 45 c4	 cmp	 DWORD PTR _loop_z$11[ebp], eax
  001f0	0f 8f 95 05 00
	00		 jg	 $LN6@update_obj
  001f6	8b 45 c4	 mov	 eax, DWORD PTR _loop_z$11[ebp]
  001f9	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  001ff	0f 8d 86 05 00
	00		 jge	 $LN6@update_obj

; 1019 : 			{
; 1020 : 
; 1021 : 				sector = get_local_raw_sector_entity (loop_x, loop_z);

  00205	8b 45 c4	 mov	 eax, DWORD PTR _loop_z$11[ebp]
  00208	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0020f	03 45 c8	 add	 eax, DWORD PTR _loop_x$12[ebp]
  00212	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00218	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  0021c	74 1d		 je	 SHORT $LN35@update_obj
  0021e	8b 55 c4	 mov	 edx, DWORD PTR _loop_z$11[ebp]
  00221	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00228	03 55 c8	 add	 edx, DWORD PTR _loop_x$12[ebp]
  0022b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00230	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00233	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv167[ebp], ecx
  00239	eb 24		 jmp	 SHORT $LN36@update_obj
$LN35@update_obj:
  0023b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  00241	83 c2 43	 add	 edx, 67			; 00000043H
  00244	52		 push	 edx
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0024f	50		 push	 eax
  00250	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00255	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv167[ebp], 0
$LN36@update_obj:
  0025f	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv167[ebp]
  00265	89 4d d4	 mov	 DWORD PTR _sector$15[ebp], ecx

; 1022 : 
; 1023 : 				object = get_local_entity_first_child (sector, LIST_TYPE_SECTOR);

  00268	83 7d d4 00	 cmp	 DWORD PTR _sector$15[ebp], 0
  0026c	74 0d		 je	 SHORT $LN37@update_obj
  0026e	8b 45 d4	 mov	 eax, DWORD PTR _sector$15[ebp]
  00271	8b 08		 mov	 ecx, DWORD PTR [eax]
  00273	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv174[ebp], ecx
  00279	eb 24		 jmp	 SHORT $LN38@update_obj
$LN37@update_obj:
  0027b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  00281	83 c2 45	 add	 edx, 69			; 00000045H
  00284	52		 push	 edx
  00285	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0028f	50		 push	 eax
  00290	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00295	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv174[ebp], 0
$LN38@update_obj:
  0029f	b9 01 00 00 00	 mov	 ecx, 1
  002a4	85 c9		 test	 ecx, ecx
  002a6	74 0c		 je	 SHORT $LN39@update_obj
  002a8	c7 85 54 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv182[ebp], 33 ; 00000021H
  002b2	eb 24		 jmp	 SHORT $LN40@update_obj
$LN39@update_obj:
  002b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  002ba	83 c2 45	 add	 edx, 69			; 00000045H
  002bd	52		 push	 edx
  002be	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002c8	50		 push	 eax
  002c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ce	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN40@update_obj:
  002d8	6a 21		 push	 33			; 00000021H
  002da	8b 4d d4	 mov	 ecx, DWORD PTR _sector$15[ebp]
  002dd	51		 push	 ecx
  002de	69 95 58 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv174[ebp], 180
  002e8	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv182[ebp]
  002ee	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002f5	ff d1		 call	 ecx
  002f7	89 45 d8	 mov	 DWORD PTR _object$16[ebp], eax
$LN8@update_obj:

; 1024 : 
; 1025 : 				while (object)

  002fa	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  002fe	0f 84 82 04 00
	00		 je	 $LN9@update_obj

; 1026 : 				{
; 1027 : 
; 1028 : 					if ((object != get_gunship_entity ()) &&

  00304	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  00307	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0030d	0f 84 dc 03 00
	00		 je	 $LN22@update_obj
  00313	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  00317	74 0d		 je	 SHORT $LN41@update_obj
  00319	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv195[ebp], ecx
  00324	eb 20		 jmp	 SHORT $LN42@update_obj
$LN41@update_obj:
  00326	68 05 04 00 00	 push	 1029			; 00000405H
  0032b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00330	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00336	52		 push	 edx
  00337	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033c	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN42@update_obj:
  00346	b8 01 00 00 00	 mov	 eax, 1
  0034b	85 c0		 test	 eax, eax
  0034d	74 0c		 je	 SHORT $LN43@update_obj
  0034f	c7 85 54 ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR tv202[ebp], 26 ; 0000001aH
  00359	eb 20		 jmp	 SHORT $LN44@update_obj
$LN43@update_obj:
  0035b	68 05 04 00 00	 push	 1029			; 00000405H
  00360	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00365	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0036b	51		 push	 ecx
  0036c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00371	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv202[ebp], 0
$LN44@update_obj:
  0037b	6a 1a		 push	 26			; 0000001aH
  0037d	8b 55 d8	 mov	 edx, DWORD PTR _object$16[ebp]
  00380	52		 push	 edx
  00381	69 85 58 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv195[ebp], 1116
  0038b	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv202[ebp]
  00391	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00398	ff d2		 call	 edx
  0039a	85 c0		 test	 eax, eax
  0039c	0f 85 8f 00 00
	00		 jne	 $LN20@update_obj
  003a2	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  003a6	74 0d		 je	 SHORT $LN45@update_obj
  003a8	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  003ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ad	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv214[ebp], ecx
  003b3	eb 20		 jmp	 SHORT $LN46@update_obj
$LN45@update_obj:
  003b5	68 06 04 00 00	 push	 1030			; 00000406H
  003ba	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  003bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003c5	52		 push	 edx
  003c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003cb	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN46@update_obj:
  003d5	b8 01 00 00 00	 mov	 eax, 1
  003da	85 c0		 test	 eax, eax
  003dc	74 0c		 je	 SHORT $LN47@update_obj
  003de	c7 85 54 ff ff
	ff 1b 00 00 00	 mov	 DWORD PTR tv221[ebp], 27 ; 0000001bH
  003e8	eb 20		 jmp	 SHORT $LN48@update_obj
$LN47@update_obj:
  003ea	68 06 04 00 00	 push	 1030			; 00000406H
  003ef	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003fa	51		 push	 ecx
  003fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00400	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv221[ebp], 0
$LN48@update_obj:
  0040a	6a 1b		 push	 27			; 0000001bH
  0040c	8b 55 d8	 mov	 edx, DWORD PTR _object$16[ebp]
  0040f	52		 push	 edx
  00410	69 85 58 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv214[ebp], 1116
  0041a	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv221[ebp]
  00420	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00427	ff d2		 call	 edx
  00429	85 c0		 test	 eax, eax
  0042b	0f 84 be 02 00
	00		 je	 $LN22@update_obj
$LN20@update_obj:

; 1029 : 						(get_local_entity_int_value (object, INT_TYPE_COLLISION_TEST_FIXED) ||
; 1030 : 						(get_local_entity_int_value (object, INT_TYPE_COLLISION_TEST_MOBILE))))
; 1031 : 					{
; 1032 : 
; 1033 : 						if ((get_local_entity_int_value (object, INT_TYPE_OBJECT_3D_SHAPE) != OBJECT_3D_FARP_MAT) &&

  00431	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  00435	74 0d		 je	 SHORT $LN49@update_obj
  00437	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  0043a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0043c	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv233[ebp], ecx
  00442	eb 20		 jmp	 SHORT $LN50@update_obj
$LN49@update_obj:
  00444	68 09 04 00 00	 push	 1033			; 00000409H
  00449	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045a	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv233[ebp], 0
$LN50@update_obj:
  00464	b8 01 00 00 00	 mov	 eax, 1
  00469	85 c0		 test	 eax, eax
  0046b	74 0c		 je	 SHORT $LN51@update_obj
  0046d	c7 85 54 ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv240[ebp], 146 ; 00000092H
  00477	eb 20		 jmp	 SHORT $LN52@update_obj
$LN51@update_obj:
  00479	68 09 04 00 00	 push	 1033			; 00000409H
  0047e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00483	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00489	51		 push	 ecx
  0048a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0048f	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv240[ebp], 0
$LN52@update_obj:
  00499	68 92 00 00 00	 push	 146			; 00000092H
  0049e	8b 55 d8	 mov	 edx, DWORD PTR _object$16[ebp]
  004a1	52		 push	 edx
  004a2	69 85 58 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv233[ebp], 1116
  004ac	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv240[ebp]
  004b2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004b9	ff d2		 call	 edx
  004bb	3d bb 00 00 00	 cmp	 eax, 187		; 000000bbH
  004c0	0f 84 29 02 00
	00		 je	 $LN22@update_obj
  004c6	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  004ca	74 0d		 je	 SHORT $LN53@update_obj
  004cc	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  004cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d1	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv252[ebp], ecx
  004d7	eb 20		 jmp	 SHORT $LN54@update_obj
$LN53@update_obj:
  004d9	68 0a 04 00 00	 push	 1034			; 0000040aH
  004de	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004e9	52		 push	 edx
  004ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ef	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv252[ebp], 0
$LN54@update_obj:
  004f9	b8 01 00 00 00	 mov	 eax, 1
  004fe	85 c0		 test	 eax, eax
  00500	74 0c		 je	 SHORT $LN55@update_obj
  00502	c7 85 54 ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv259[ebp], 146 ; 00000092H
  0050c	eb 20		 jmp	 SHORT $LN56@update_obj
$LN55@update_obj:
  0050e	68 0a 04 00 00	 push	 1034			; 0000040aH
  00513	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00518	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0051e	51		 push	 ecx
  0051f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00524	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN56@update_obj:
  0052e	68 92 00 00 00	 push	 146			; 00000092H
  00533	8b 55 d8	 mov	 edx, DWORD PTR _object$16[ebp]
  00536	52		 push	 edx
  00537	69 85 58 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv252[ebp], 1116
  00541	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv259[ebp]
  00547	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0054e	ff d2		 call	 edx
  00550	3d bc 00 00 00	 cmp	 eax, 188		; 000000bcH
  00555	0f 84 94 01 00
	00		 je	 $LN22@update_obj

; 1034 : 							(get_local_entity_int_value (object, INT_TYPE_OBJECT_3D_SHAPE) != OBJECT_3D_FARP_MAT_GREY))
; 1035 : 						{
; 1036 : 
; 1037 : 							object_radius = get_object_3d_radius (get_local_entity_int_value (object, INT_TYPE_OBJECT_3D_SHAPE));

  0055b	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  0055f	74 0d		 je	 SHORT $LN57@update_obj
  00561	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  00564	8b 08		 mov	 ecx, DWORD PTR [eax]
  00566	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv273[ebp], ecx
  0056c	eb 24		 jmp	 SHORT $LN58@update_obj
$LN57@update_obj:
  0056e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  00574	83 c2 53	 add	 edx, 83			; 00000053H
  00577	52		 push	 edx
  00578	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0057d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00582	50		 push	 eax
  00583	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00588	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv273[ebp], 0
$LN58@update_obj:
  00592	b9 01 00 00 00	 mov	 ecx, 1
  00597	85 c9		 test	 ecx, ecx
  00599	74 0c		 je	 SHORT $LN59@update_obj
  0059b	c7 85 54 ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv281[ebp], 146 ; 00000092H
  005a5	eb 24		 jmp	 SHORT $LN60@update_obj
$LN59@update_obj:
  005a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  005ad	83 c2 53	 add	 edx, 83			; 00000053H
  005b0	52		 push	 edx
  005b1	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005bb	50		 push	 eax
  005bc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c1	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], 0
$LN60@update_obj:
  005cb	68 92 00 00 00	 push	 146			; 00000092H
  005d0	8b 4d d8	 mov	 ecx, DWORD PTR _object$16[ebp]
  005d3	51		 push	 ecx
  005d4	69 95 58 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv273[ebp], 1116
  005de	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv281[ebp]
  005e4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  005eb	ff d1		 call	 ecx
  005ed	50		 push	 eax
  005ee	e8 00 00 00 00	 call	 ?get_object_3d_radius@@YGMH@Z ; get_object_3d_radius
  005f3	d9 5d ac	 fstp	 DWORD PTR _object_radius$5[ebp]

; 1038 : 
; 1039 : 							position.x = current_flight_dynamics->position.x;

  005f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005fb	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  00603	f3 0f 11 45 ec	 movss	 DWORD PTR _position$[ebp], xmm0

; 1040 : 							position.y = current_flight_dynamics->position.y;

  00608	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0060d	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  00615	f3 0f 11 45 f0	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1041 : 							position.z = current_flight_dynamics->position.z;

  0061a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0061f	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  00627	f3 0f 11 45 f4	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1042 : 
; 1043 : 							sqr_range = get_sqr_3d_range (get_local_entity_vec3d_ptr (object, VEC3D_TYPE_POSITION), &position);

  0062c	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  00630	74 0d		 je	 SHORT $LN61@update_obj
  00632	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  00635	8b 08		 mov	 ecx, DWORD PTR [eax]
  00637	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv305[ebp], ecx
  0063d	eb 24		 jmp	 SHORT $LN62@update_obj
$LN61@update_obj:
  0063f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  00645	83 c2 59	 add	 edx, 89			; 00000059H
  00648	52		 push	 edx
  00649	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0064e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00653	50		 push	 eax
  00654	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00659	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv305[ebp], 0
$LN62@update_obj:
  00663	b9 01 00 00 00	 mov	 ecx, 1
  00668	85 c9		 test	 ecx, ecx
  0066a	74 0c		 je	 SHORT $LN63@update_obj
  0066c	c7 85 54 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv313[ebp], 8
  00676	eb 24		 jmp	 SHORT $LN64@update_obj
$LN63@update_obj:
  00678	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  0067e	83 c2 59	 add	 edx, 89			; 00000059H
  00681	52		 push	 edx
  00682	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00687	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0068c	50		 push	 eax
  0068d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00692	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv313[ebp], 0
$LN64@update_obj:
  0069c	8d 4d ec	 lea	 ecx, DWORD PTR _position$[ebp]
  0069f	51		 push	 ecx
  006a0	6a 08		 push	 8
  006a2	8b 55 d8	 mov	 edx, DWORD PTR _object$16[ebp]
  006a5	52		 push	 edx
  006a6	6b 85 58 ff ff
	ff 60		 imul	 eax, DWORD PTR tv305[ebp], 96
  006ad	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv313[ebp]
  006b3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[eax+ecx*4]
  006ba	ff d2		 call	 edx
  006bc	50		 push	 eax
  006bd	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  006c2	d9 5d b4	 fstp	 DWORD PTR _sqr_range$7[ebp]

; 1044 : 
; 1045 : 							if (sqr_range < ((user_radius + object_radius) * (user_radius + object_radius)))

  006c5	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _user_radius$6[ebp]
  006ca	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _object_radius$5[ebp]
  006cf	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _user_radius$6[ebp]
  006d4	f3 0f 58 4d ac	 addss	 xmm1, DWORD PTR _object_radius$5[ebp]
  006d9	f3 0f 59 c1	 mulss	 xmm0, xmm1
  006dd	0f 2f 45 b4	 comiss	 xmm0, DWORD PTR _sqr_range$7[ebp]
  006e1	76 0c		 jbe	 SHORT $LN22@update_obj

; 1046 : 							{
; 1047 : 
; 1048 : 								detailed_test = TRUE;

  006e3	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR _detailed_test$8[ebp], 1

; 1049 : 
; 1050 : 								break;

  006ea	e9 97 00 00 00	 jmp	 $LN9@update_obj
$LN22@update_obj:

; 1051 : 							}
; 1052 : 						}
; 1053 : 					}
; 1054 : 
; 1055 : 					object = get_local_entity_child_succ (object, LIST_TYPE_SECTOR);

  006ef	83 7d d8 00	 cmp	 DWORD PTR _object$16[ebp], 0
  006f3	74 0d		 je	 SHORT $LN65@update_obj
  006f5	8b 45 d8	 mov	 eax, DWORD PTR _object$16[ebp]
  006f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  006fa	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv330[ebp], ecx
  00700	eb 24		 jmp	 SHORT $LN66@update_obj
$LN65@update_obj:
  00702	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  00708	83 c2 65	 add	 edx, 101		; 00000065H
  0070b	52		 push	 edx
  0070c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00711	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00716	50		 push	 eax
  00717	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0071c	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv330[ebp], 0
$LN66@update_obj:
  00726	b9 01 00 00 00	 mov	 ecx, 1
  0072b	85 c9		 test	 ecx, ecx
  0072d	74 0c		 je	 SHORT $LN67@update_obj
  0072f	c7 85 54 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv338[ebp], 33 ; 00000021H
  00739	eb 24		 jmp	 SHORT $LN68@update_obj
$LN67@update_obj:
  0073b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_object_collision_dynamics@@YGXXZ@4JA
  00741	83 c2 65	 add	 edx, 101		; 00000065H
  00744	52		 push	 edx
  00745	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0074a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0074f	50		 push	 eax
  00750	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00755	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv338[ebp], 0
$LN68@update_obj:
  0075f	6a 21		 push	 33			; 00000021H
  00761	8b 4d d8	 mov	 ecx, DWORD PTR _object$16[ebp]
  00764	51		 push	 ecx
  00765	69 95 58 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv330[ebp], 180
  0076f	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv338[ebp]
  00775	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0077c	ff d1		 call	 ecx
  0077e	89 45 d8	 mov	 DWORD PTR _object$16[ebp], eax

; 1056 : 				}

  00781	e9 74 fb ff ff	 jmp	 $LN8@update_obj
$LN9@update_obj:

; 1057 : 			}

  00786	e9 53 fa ff ff	 jmp	 $LN5@update_obj
$LN6@update_obj:

; 1058 : 		}

  0078b	e9 1f fa ff ff	 jmp	 $LN2@update_obj
$LN3@update_obj:

; 1059 : 
; 1060 : 		if (!detailed_test)

  00790	83 7d b8 00	 cmp	 DWORD PTR _detailed_test$8[ebp], 0
  00794	75 05		 jne	 SHORT $LN23@update_obj

; 1061 : 		{
; 1062 : 
; 1063 : 			return;

  00796	e9 70 04 00 00	 jmp	 $LN1@update_obj
$LN23@update_obj:

; 1064 : 		}
; 1065 : 
; 1066 : 		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1067 : 		//
; 1068 : 		// detailed test
; 1069 : 		//
; 1070 : 		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1071 : 
; 1072 : 		//
; 1073 : 		// Fixed
; 1074 : 		//
; 1075 : 
; 1076 : 		if (current_flight_dynamics->valid_last_frame_fixed_collision_points)

  0079b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007a0	83 b8 c8 24 00
	00 00		 cmp	 DWORD PTR [eax+9416], 0
  007a7	0f 84 48 02 00
	00		 je	 $LN11@update_obj

; 1077 : 		{
; 1078 : 
; 1079 : 			for (loop = 0; loop < current_flight_dynamics->number_of_fixed_collision_points; loop ++)

  007ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  007b4	eb 09		 jmp	 SHORT $LN12@update_obj
$LN10@update_obj:
  007b6	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  007b9	83 c0 01	 add	 eax, 1
  007bc	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN12@update_obj:
  007bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007c4	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  007c7	3b 88 d8 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9432]
  007cd	0f 8d 22 02 00
	00		 jge	 $LN11@update_obj

; 1080 : 			{
; 1081 : 
; 1082 : 				collision_en = get_line_of_sight_collision_entity (get_gunship_entity (),

  007d3	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  007d6	c1 e0 06	 shl	 eax, 6
  007d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007df	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  007e5	8d 44 02 04	 lea	 eax, DWORD PTR [edx+eax+4]
  007e9	50		 push	 eax
  007ea	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  007ed	c1 e1 06	 shl	 ecx, 6
  007f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007f6	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  007fc	8d 4c 08 28	 lea	 ecx, DWORD PTR [eax+ecx+40]
  00800	51		 push	 ecx
  00801	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00804	c1 e2 06	 shl	 edx, 6
  00807	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0080c	8b 88 bc 24 00
	00		 mov	 ecx, DWORD PTR [eax+9404]
  00812	8d 54 11 10	 lea	 edx, DWORD PTR [ecx+edx+16]
  00816	52		 push	 edx
  00817	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0081a	c1 e0 06	 shl	 eax, 6
  0081d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00823	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00829	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  0082d	50		 push	 eax
  0082e	6a 00		 push	 0
  00830	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00836	51		 push	 ecx
  00837	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  0083c	89 45 f8	 mov	 DWORD PTR _collision_en$[ebp], eax

; 1083 : 																					NULL,
; 1084 : 																					&current_flight_dynamics->fixed_collision_points [loop].world_point,
; 1085 : 																					&current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point,
; 1086 : 																					&current_flight_dynamics->fixed_collision_points [loop].collision_point,
; 1087 : 																					&current_flight_dynamics->fixed_collision_points [loop].face_normal);
; 1088 : 
; 1089 : 				if (collision_en)

  0083f	83 7d f8 00	 cmp	 DWORD PTR _collision_en$[ebp], 0
  00843	0f 84 a7 01 00
	00		 je	 $LN27@update_obj

; 1090 : 				{
; 1091 : 
; 1092 : 					if (get_3d_vector_dot_product (&current_flight_dynamics->fixed_collision_points [loop].face_normal, &current_flight_dynamics->world_acceleration_vector) > 0.0)

  00849	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0084e	05 54 1c 00 00	 add	 eax, 7252		; 00001c54H
  00853	50		 push	 eax
  00854	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00857	c1 e1 06	 shl	 ecx, 6
  0085a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00860	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  00866	8d 4c 08 04	 lea	 ecx, DWORD PTR [eax+ecx+4]
  0086a	51		 push	 ecx
  0086b	e8 00 00 00 00	 call	 ?get_3d_vector_dot_product@@YGMPBUVEC3D@@0@Z ; get_3d_vector_dot_product
  00870	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv759[ebp]
  00876	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv759[ebp]
  0087e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00886	76 05		 jbe	 SHORT $LN26@update_obj

; 1093 : 					{
; 1094 : 
; 1095 : 						//debug_log ("CO_FORCE: objects moving apart");
; 1096 : 					}
; 1097 : 					else

  00888	e9 63 01 00 00	 jmp	 $LN27@update_obj
$LN26@update_obj:

; 1098 : 					{
; 1099 : 
; 1100 : 						fixed_collision_count ++;

  0088d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fixed_collision_count@@3HA ; fixed_collision_count
  00892	83 c0 01	 add	 eax, 1
  00895	a3 00 00 00 00	 mov	 DWORD PTR ?fixed_collision_count@@3HA, eax ; fixed_collision_count

; 1101 : 
; 1102 : 						current_flight_dynamics->fixed_collision_points [loop].violated = TRUE;

  0089a	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0089d	c1 e0 06	 shl	 eax, 6
  008a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008a6	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  008ac	b9 01 00 00 00	 mov	 ecx, 1
  008b1	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 1103 : 
; 1104 : 						current_flight_dynamics->world_motion_vector.x = 0.0;

  008b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008bb	0f 57 c0	 xorps	 xmm0, xmm0
  008be	f3 0f 11 80 3c
	1c 00 00	 movss	 DWORD PTR [eax+7228], xmm0

; 1105 : 						current_flight_dynamics->world_motion_vector.y = 0.0;

  008c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008cb	0f 57 c0	 xorps	 xmm0, xmm0
  008ce	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0

; 1106 : 						current_flight_dynamics->world_motion_vector.z = 0.0;

  008d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008db	0f 57 c0	 xorps	 xmm0, xmm0
  008de	f3 0f 11 80 44
	1c 00 00	 movss	 DWORD PTR [eax+7236], xmm0

; 1107 : 
; 1108 : 						current_flight_dynamics->model_acceleration_vector.x = 0.0;

  008e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008eb	0f 57 c0	 xorps	 xmm0, xmm0
  008ee	f3 0f 11 80 48
	1c 00 00	 movss	 DWORD PTR [eax+7240], xmm0

; 1109 : 						current_flight_dynamics->model_acceleration_vector.y = 0.0;

  008f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008fb	0f 57 c0	 xorps	 xmm0, xmm0
  008fe	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 1110 : 						current_flight_dynamics->model_acceleration_vector.z = 0.0;

  00906	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0090b	0f 57 c0	 xorps	 xmm0, xmm0
  0090e	f3 0f 11 80 50
	1c 00 00	 movss	 DWORD PTR [eax+7248], xmm0

; 1111 : 
; 1112 : 						vec.x = current_flight_dynamics->fixed_collision_points [loop].world_point.x - current_flight_dynamics->fixed_collision_points [loop].collision_point.x;

  00916	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00919	c1 e0 06	 shl	 eax, 6
  0091c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00922	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00928	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0092b	c1 e1 06	 shl	 ecx, 6
  0092e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00934	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  0093a	f3 0f 10 44 02
	10		 movss	 xmm0, DWORD PTR [edx+eax+16]
  00940	f3 0f 5c 44 0e
	28		 subss	 xmm0, DWORD PTR [esi+ecx+40]
  00946	f3 0f 11 45 e0	 movss	 DWORD PTR _vec$[ebp], xmm0

; 1113 : 						vec.y = current_flight_dynamics->fixed_collision_points [loop].world_point.y - current_flight_dynamics->fixed_collision_points [loop].collision_point.y;

  0094b	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0094e	c1 e0 06	 shl	 eax, 6
  00951	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00957	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0095d	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00960	c1 e1 06	 shl	 ecx, 6
  00963	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00969	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  0096f	f3 0f 10 44 02
	14		 movss	 xmm0, DWORD PTR [edx+eax+20]
  00975	f3 0f 5c 44 0e
	2c		 subss	 xmm0, DWORD PTR [esi+ecx+44]
  0097b	f3 0f 11 45 e4	 movss	 DWORD PTR _vec$[ebp+4], xmm0

; 1114 : 						vec.z = current_flight_dynamics->fixed_collision_points [loop].world_point.z - current_flight_dynamics->fixed_collision_points [loop].collision_point.z;

  00980	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00983	c1 e0 06	 shl	 eax, 6
  00986	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0098c	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00992	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00995	c1 e1 06	 shl	 ecx, 6
  00998	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0099e	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  009a4	f3 0f 10 44 02
	18		 movss	 xmm0, DWORD PTR [edx+eax+24]
  009aa	f3 0f 5c 44 0e
	30		 subss	 xmm0, DWORD PTR [esi+ecx+48]
  009b0	f3 0f 11 45 e8	 movss	 DWORD PTR _vec$[ebp+8], xmm0

; 1115 : 
; 1116 : 						current_flight_dynamics->fixed_collision_points [loop].violation_distance = get_3d_vector_magnitude (&vec) + 0.02;

  009b5	8d 45 e0	 lea	 eax, DWORD PTR _vec$[ebp]
  009b8	50		 push	 eax
  009b9	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  009be	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv797[ebp]
  009c4	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv797[ebp]
  009cc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  009d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009d8	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  009db	c1 e1 06	 shl	 ecx, 6
  009de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  009e4	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  009ea	f3 0f 11 44 08
	38		 movss	 DWORD PTR [eax+ecx+56], xmm0
$LN27@update_obj:

; 1117 : 
; 1118 : 						#if 0
; 1119 : 
; 1120 : 						debug_log ("DYNAMICS: violation dist %f, start %f, %f, %f, stop %f, %f, %f, collision %f, %f, %f, normal %f, %f, %f",
; 1121 : 										current_flight_dynamics->fixed_collision_points [loop].violation_distance,
; 1122 : 										current_flight_dynamics->fixed_collision_points [loop].world_point.x,
; 1123 : 										current_flight_dynamics->fixed_collision_points [loop].world_point.y,
; 1124 : 										current_flight_dynamics->fixed_collision_points [loop].world_point.z,
; 1125 : 										current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.x,
; 1126 : 										current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.y,
; 1127 : 										current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.z,
; 1128 : 										current_flight_dynamics->fixed_collision_points [loop].collision_point.x,
; 1129 : 										current_flight_dynamics->fixed_collision_points [loop].collision_point.y,
; 1130 : 										current_flight_dynamics->fixed_collision_points [loop].collision_point.z,
; 1131 : 										current_flight_dynamics->fixed_collision_points [loop].face_normal.x,
; 1132 : 										current_flight_dynamics->fixed_collision_points [loop].face_normal.y,
; 1133 : 										current_flight_dynamics->fixed_collision_points [loop].face_normal.z);
; 1134 : 
; 1135 : 						debug_log ("DYNAMICS: possible object %s collision", get_local_entity_type_name (collision_en));
; 1136 : 
; 1137 : 						create_vectored_debug_3d_object (&current_flight_dynamics->fixed_collision_points [loop].world_point, &current_flight_dynamics->fixed_collision_points [loop].face_normal, OBJECT_3D_ARROW_FORCES, 10, 5.0);
; 1138 : 
; 1139 : 						#endif
; 1140 : 					}
; 1141 : 				}
; 1142 : 			}

  009f0	e9 c1 fd ff ff	 jmp	 $LN10@update_obj
$LN11@update_obj:

; 1143 : 		}
; 1144 : 
; 1145 : 		//
; 1146 : 		// Moving
; 1147 : 		//
; 1148 : 
; 1149 : 		if (current_flight_dynamics->valid_last_frame_moving_collision_points)

  009f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  009fa	83 b8 cc 24 00
	00 00		 cmp	 DWORD PTR [eax+9420], 0
  00a01	0f 84 04 02 00
	00		 je	 $LN14@update_obj

; 1150 : 		{
; 1151 : 
; 1152 : 			for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  00a07	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00a0e	eb 09		 jmp	 SHORT $LN15@update_obj
$LN13@update_obj:
  00a10	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00a13	83 c0 01	 add	 eax, 1
  00a16	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN15@update_obj:
  00a19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a1e	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00a21	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  00a27	0f 8d de 01 00
	00		 jge	 $LN14@update_obj

; 1153 : 			{
; 1154 : 
; 1155 : 				collision_en = get_line_of_sight_collision_entity (get_gunship_entity (),

  00a2d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00a30	c1 e0 06	 shl	 eax, 6
  00a33	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a39	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00a3f	8d 44 02 04	 lea	 eax, DWORD PTR [edx+eax+4]
  00a43	50		 push	 eax
  00a44	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00a47	c1 e1 06	 shl	 ecx, 6
  00a4a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a50	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00a56	8d 4c 08 28	 lea	 ecx, DWORD PTR [eax+ecx+40]
  00a5a	51		 push	 ecx
  00a5b	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00a5e	c1 e2 06	 shl	 edx, 6
  00a61	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a66	8b 88 c4 24 00
	00		 mov	 ecx, DWORD PTR [eax+9412]
  00a6c	8d 54 11 10	 lea	 edx, DWORD PTR [ecx+edx+16]
  00a70	52		 push	 edx
  00a71	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00a74	c1 e0 06	 shl	 eax, 6
  00a77	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a7d	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00a83	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  00a87	50		 push	 eax
  00a88	6a 00		 push	 0
  00a8a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00a90	51		 push	 ecx
  00a91	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  00a96	89 45 f8	 mov	 DWORD PTR _collision_en$[ebp], eax

; 1156 : 																					NULL,
; 1157 : 																					&current_flight_dynamics->moving_collision_points [loop].world_point,
; 1158 : 																					&current_flight_dynamics->last_frame_moving_collision_points [loop].world_point,
; 1159 : 																					&current_flight_dynamics->moving_collision_points [loop].collision_point,
; 1160 : 																					&current_flight_dynamics->moving_collision_points [loop].face_normal);
; 1161 : 
; 1162 : 				if (collision_en)

  00a99	83 7d f8 00	 cmp	 DWORD PTR _collision_en$[ebp], 0
  00a9d	0f 84 63 01 00
	00		 je	 $LN29@update_obj

; 1163 : 				{
; 1164 : 
; 1165 : 					moving_collision_count ++;

  00aa3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?moving_collision_count@@3HA ; moving_collision_count
  00aa8	83 c0 01	 add	 eax, 1
  00aab	a3 00 00 00 00	 mov	 DWORD PTR ?moving_collision_count@@3HA, eax ; moving_collision_count

; 1166 : 
; 1167 : 					current_flight_dynamics->moving_collision_points [loop].violated = TRUE;

  00ab0	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00ab3	c1 e0 06	 shl	 eax, 6
  00ab6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00abc	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00ac2	b9 01 00 00 00	 mov	 ecx, 1
  00ac7	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 1168 : 
; 1169 : 					current_flight_dynamics->world_motion_vector.x = 0.0;

  00acc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ad1	0f 57 c0	 xorps	 xmm0, xmm0
  00ad4	f3 0f 11 80 3c
	1c 00 00	 movss	 DWORD PTR [eax+7228], xmm0

; 1170 : 					current_flight_dynamics->world_motion_vector.y = 0.0;

  00adc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ae1	0f 57 c0	 xorps	 xmm0, xmm0
  00ae4	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0

; 1171 : 					current_flight_dynamics->world_motion_vector.z = 0.0;

  00aec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00af1	0f 57 c0	 xorps	 xmm0, xmm0
  00af4	f3 0f 11 80 44
	1c 00 00	 movss	 DWORD PTR [eax+7236], xmm0

; 1172 : 
; 1173 : 					current_flight_dynamics->model_acceleration_vector.x = 0.0;

  00afc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b01	0f 57 c0	 xorps	 xmm0, xmm0
  00b04	f3 0f 11 80 48
	1c 00 00	 movss	 DWORD PTR [eax+7240], xmm0

; 1174 : 					current_flight_dynamics->model_acceleration_vector.y = 0.0;

  00b0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b11	0f 57 c0	 xorps	 xmm0, xmm0
  00b14	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 1175 : 					current_flight_dynamics->model_acceleration_vector.z = 0.0;

  00b1c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b21	0f 57 c0	 xorps	 xmm0, xmm0
  00b24	f3 0f 11 80 50
	1c 00 00	 movss	 DWORD PTR [eax+7248], xmm0

; 1176 : 
; 1177 : 					vec.x = current_flight_dynamics->moving_collision_points [loop].world_point.x - current_flight_dynamics->moving_collision_points [loop].collision_point.x;

  00b2c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00b2f	c1 e0 06	 shl	 eax, 6
  00b32	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b38	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00b3e	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00b41	c1 e1 06	 shl	 ecx, 6
  00b44	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b4a	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00b50	f3 0f 10 44 02
	10		 movss	 xmm0, DWORD PTR [edx+eax+16]
  00b56	f3 0f 5c 44 0e
	28		 subss	 xmm0, DWORD PTR [esi+ecx+40]
  00b5c	f3 0f 11 45 e0	 movss	 DWORD PTR _vec$[ebp], xmm0

; 1178 : 					vec.y = current_flight_dynamics->moving_collision_points [loop].world_point.y - current_flight_dynamics->moving_collision_points [loop].collision_point.y;

  00b61	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00b64	c1 e0 06	 shl	 eax, 6
  00b67	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b6d	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00b73	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00b76	c1 e1 06	 shl	 ecx, 6
  00b79	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b7f	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00b85	f3 0f 10 44 02
	14		 movss	 xmm0, DWORD PTR [edx+eax+20]
  00b8b	f3 0f 5c 44 0e
	2c		 subss	 xmm0, DWORD PTR [esi+ecx+44]
  00b91	f3 0f 11 45 e4	 movss	 DWORD PTR _vec$[ebp+4], xmm0

; 1179 : 					vec.z = current_flight_dynamics->moving_collision_points [loop].world_point.z - current_flight_dynamics->moving_collision_points [loop].collision_point.z;

  00b96	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00b99	c1 e0 06	 shl	 eax, 6
  00b9c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ba2	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  00ba8	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00bab	c1 e1 06	 shl	 ecx, 6
  00bae	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00bb4	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  00bba	f3 0f 10 44 02
	18		 movss	 xmm0, DWORD PTR [edx+eax+24]
  00bc0	f3 0f 5c 44 0e
	30		 subss	 xmm0, DWORD PTR [esi+ecx+48]
  00bc6	f3 0f 11 45 e8	 movss	 DWORD PTR _vec$[ebp+8], xmm0

; 1180 : 
; 1181 : 					current_flight_dynamics->moving_collision_points [loop].violation_distance = get_3d_vector_magnitude (&vec) + 0.02;

  00bcb	8d 45 e0	 lea	 eax, DWORD PTR _vec$[ebp]
  00bce	50		 push	 eax
  00bcf	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00bd4	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv851[ebp]
  00bda	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv851[ebp]
  00be2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00bea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bee	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00bf1	c1 e1 06	 shl	 ecx, 6
  00bf4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00bfa	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00c00	f3 0f 11 44 08
	38		 movss	 DWORD PTR [eax+ecx+56], xmm0
$LN29@update_obj:

; 1182 : 
; 1183 : 					#if 0
; 1184 : 
; 1185 : 					debug_log ("DYNAMICS: possible object %s collision", get_local_entity_type_name (collision_en));
; 1186 : 
; 1187 : 					debug_log ("DYNAMICS: violation dist %f, start %f, %f, %f, stop %f, %f, %f, collision %f, %f, %f, normal %f, %f, %f",
; 1188 : 									current_flight_dynamics->moving_collision_points [loop].violation_distance,
; 1189 : 									current_flight_dynamics->moving_collision_points [loop].world_point.x,
; 1190 : 									current_flight_dynamics->moving_collision_points [loop].world_point.y,
; 1191 : 									current_flight_dynamics->moving_collision_points [loop].world_point.z,
; 1192 : 									current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.x,
; 1193 : 									current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.y,
; 1194 : 									current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.z,
; 1195 : 									current_flight_dynamics->moving_collision_points [loop].collision_point.x,
; 1196 : 									current_flight_dynamics->moving_collision_points [loop].collision_point.y,
; 1197 : 									current_flight_dynamics->moving_collision_points [loop].collision_point.z,
; 1198 : 									current_flight_dynamics->moving_collision_points [loop].face_normal.x,
; 1199 : 									current_flight_dynamics->moving_collision_points [loop].face_normal.y,
; 1200 : 									current_flight_dynamics->moving_collision_points [loop].face_normal.z);
; 1201 : 
; 1202 : 					create_vectored_debug_3d_object (&current_flight_dynamics->moving_collision_points [loop].world_point, &current_flight_dynamics->moving_collision_points [loop].face_normal, OBJECT_3D_ARROW_FORCES, 10, 5.0);
; 1203 : 
; 1204 : 					#endif
; 1205 : 				}
; 1206 : 			}

  00c06	e9 05 fe ff ff	 jmp	 $LN13@update_obj
$LN14@update_obj:
$LN1@update_obj:

; 1207 : 		}
; 1208 : 	}
; 1209 : }

  00c0b	5f		 pop	 edi
  00c0c	5e		 pop	 esi
  00c0d	5b		 pop	 ebx
  00c0e	8b e5		 mov	 esp, ebp
  00c10	5d		 pop	 ebp
  00c11	c3		 ret	 0
?update_object_collision_dynamics@@YGXXZ ENDP		; update_object_collision_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?update_moving_ground_collision_dynamics@@YGXXZ
_TEXT	SEGMENT
_raw$ = -8						; size = 4
_loop$ = -4						; size = 4
?update_moving_ground_collision_dynamics@@YGXXZ PROC	; update_moving_ground_collision_dynamics, COMDAT

; 1457 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1458 : 
; 1459 : 	int
; 1460 : 		loop;
; 1461 : 
; 1462 : 	helicopter
; 1463 : 		*raw;
; 1464 : 
; 1465 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN5@update_mov

; 1466 : 	{
; 1467 : 
; 1468 : 		return;

  00012	e9 ec 01 00 00	 jmp	 $LN1@update_mov
$LN5@update_mov:

; 1469 : 	}
; 1470 : 
; 1471 : 	raw = (helicopter *) get_local_entity_data (get_gunship_entity ());

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 1472 : 
; 1473 : 	//
; 1474 : 	// Check MOVING collision points with GROUND
; 1475 : 	//
; 1476 : 
; 1477 : 	for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  00022	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00029	eb 09		 jmp	 SHORT $LN4@update_mov
$LN2@update_mov:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0002e	83 c0 01	 add	 eax, 1
  00031	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_mov:
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0003c	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  00042	0f 8d bb 01 00
	00		 jge	 $LN3@update_mov

; 1478 : 	{
; 1479 : 
; 1480 : 		get_3d_terrain_point_data (current_flight_dynamics->moving_collision_points [loop].world_point.x, current_flight_dynamics->moving_collision_points [loop].world_point.z, &raw->ac.terrain_info);

  00048	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0004b	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00054	c1 e1 06	 shl	 ecx, 6
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005d	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00063	51		 push	 ecx
  00064	f3 0f 10 44 08
	18		 movss	 xmm0, DWORD PTR [eax+ecx+24]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00072	c1 e1 06	 shl	 ecx, 6
  00075	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0007b	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00081	51		 push	 ecx
  00082	f3 0f 10 44 08
	10		 movss	 xmm0, DWORD PTR [eax+ecx+16]
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00092	dd d8		 fstp	 ST(0)

; 1481 : 
; 1482 : 		current_flight_dynamics->moving_collision_points [loop].terrain_elevation = get_3d_terrain_point_data_elevation (&raw->ac.terrain_info);

  00094	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00097	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000a5	c1 e1 06	 shl	 ecx, 6
  000a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ae	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  000b4	d9 5c 08 34	 fstp	 DWORD PTR [eax+ecx+52]

; 1483 : 
; 1484 : 		if ((current_flight_dynamics->moving_collision_points [loop].terrain_elevation) > current_flight_dynamics->moving_collision_points [loop].world_point.y)

  000b8	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000bb	c1 e0 06	 shl	 eax, 6
  000be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000c4	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000cd	c1 e1 06	 shl	 ecx, 6
  000d0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000d6	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  000dc	f3 0f 10 44 02
	34		 movss	 xmm0, DWORD PTR [edx+eax+52]
  000e2	0f 2f 44 0e 14	 comiss	 xmm0, DWORD PTR [esi+ecx+20]
  000e7	0f 86 11 01 00
	00		 jbe	 $LN6@update_mov

; 1485 : 		{
; 1486 : 
; 1487 : 			moving_collision_count ++;

  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?moving_collision_count@@3HA ; moving_collision_count
  000f2	83 c0 01	 add	 eax, 1
  000f5	a3 00 00 00 00	 mov	 DWORD PTR ?moving_collision_count@@3HA, eax ; moving_collision_count

; 1488 : 
; 1489 : 			current_flight_dynamics->moving_collision_points [loop].violation_distance = fabs (current_flight_dynamics->moving_collision_points [loop].terrain_elevation - current_flight_dynamics->moving_collision_points [loop].world_point.y);

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000fd	c1 e0 06	 shl	 eax, 6
  00100	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00106	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0010f	c1 e1 06	 shl	 ecx, 6
  00112	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00118	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  0011e	f3 0f 10 44 02
	34		 movss	 xmm0, DWORD PTR [edx+eax+52]
  00124	f3 0f 5c 44 0e
	14		 subss	 xmm0, DWORD PTR [esi+ecx+20]
  0012a	51		 push	 ecx
  0012b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00130	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00135	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00138	c1 e2 06	 shl	 edx, 6
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00140	8b 88 c0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9408]
  00146	d9 5c 11 38	 fstp	 DWORD PTR [ecx+edx+56]

; 1490 : 
; 1491 : 			current_flight_dynamics->moving_collision_points [loop].violated = TRUE;

  0014a	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0014d	c1 e0 06	 shl	 eax, 6
  00150	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00156	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  0015c	b9 01 00 00 00	 mov	 ecx, 1
  00161	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 1492 : 
; 1493 : 			memcpy (&current_flight_dynamics->moving_collision_points [loop].face_normal, get_3d_terrain_point_data_normal (&raw->ac.terrain_info), sizeof (vec3d));

  00166	6a 0c		 push	 12			; 0000000cH
  00168	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0016b	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00170	50		 push	 eax
  00171	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_normal@@YGPAUVEC3D@@PAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_normal
  00176	50		 push	 eax
  00177	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0017a	c1 e1 06	 shl	 ecx, 6
  0017d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00183	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00189	8d 4c 08 04	 lea	 ecx, DWORD PTR [eax+ecx+4]
  0018d	51		 push	 ecx
  0018e	e8 00 00 00 00	 call	 _memcpy
  00193	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1494 : 
; 1495 : 			current_flight_dynamics->moving_collision_points [loop].collision_point = current_flight_dynamics->moving_collision_points [loop].world_point;

  00196	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00199	c1 e0 06	 shl	 eax, 6
  0019c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a2	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  001a8	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  001ac	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  001af	c1 e1 06	 shl	 ecx, 6
  001b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b8	8b 92 c0 24 00
	00		 mov	 edx, DWORD PTR [edx+9408]
  001be	8d 4c 0a 28	 lea	 ecx, DWORD PTR [edx+ecx+40]
  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	89 11		 mov	 DWORD PTR [ecx], edx
  001c6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001c9	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  001cc	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  001cf	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1496 : 
; 1497 : 			current_flight_dynamics->moving_collision_points [loop].collision_point.y = current_flight_dynamics->moving_collision_points [loop].terrain_elevation;

  001d2	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  001d5	c1 e0 06	 shl	 eax, 6
  001d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001de	8b 91 c0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9408]
  001e4	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  001e7	c1 e1 06	 shl	 ecx, 6
  001ea	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f0	8b b6 c0 24 00
	00		 mov	 esi, DWORD PTR [esi+9408]
  001f6	8b 54 02 34	 mov	 edx, DWORD PTR [edx+eax+52]
  001fa	89 54 0e 2c	 mov	 DWORD PTR [esi+ecx+44], edx
$LN6@update_mov:

; 1498 : 		}
; 1499 : 	}

  001fe	e9 28 fe ff ff	 jmp	 $LN2@update_mov
$LN3@update_mov:
$LN1@update_mov:

; 1500 : }

  00203	5f		 pop	 edi
  00204	5e		 pop	 esi
  00205	5b		 pop	 ebx
  00206	8b e5		 mov	 esp, ebp
  00208	5d		 pop	 ebp
  00209	c3		 ret	 0
?update_moving_ground_collision_dynamics@@YGXXZ ENDP	; update_moving_ground_collision_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?update_fixed_ground_collision_dynamics@@YGXXZ
_TEXT	SEGMENT
tv267 = -80						; size = 4
_loop$ = -12						; size = 4
_temp_water_offset$ = -8				; size = 4
_raw$ = -4						; size = 4
?update_fixed_ground_collision_dynamics@@YGXXZ PROC	; update_fixed_ground_collision_dynamics, COMDAT

; 1383 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1384 : 
; 1385 : 	helicopter
; 1386 : 		*raw;
; 1387 : 
; 1388 : 	float
; 1389 : 		temp_water_offset;
; 1390 : 
; 1391 : 	int
; 1392 : 		loop;
; 1393 : 
; 1394 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN5@update_fix

; 1395 : 	{
; 1396 : 
; 1397 : 		return;

  00012	e9 9c 02 00 00	 jmp	 $LN1@update_fix
$LN5@update_fix:

; 1398 : 	}
; 1399 : 
; 1400 : 	raw = (helicopter *) get_local_entity_data (get_gunship_entity ());

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1401 : 
; 1402 : 	//
; 1403 : 	// Check FIXED collision points with GROUND
; 1404 : 	//
; 1405 : 
; 1406 : 	for (loop = 0; loop < current_flight_dynamics->number_of_fixed_collision_points; loop ++)

  00022	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00029	eb 09		 jmp	 SHORT $LN4@update_fix
$LN2@update_fix:
  0002b	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  0002e	83 c0 01	 add	 eax, 1
  00031	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_fix:
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00039	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  0003c	3b 88 d8 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9432]
  00042	0f 8d 6b 02 00
	00		 jge	 $LN3@update_fix

; 1407 : 	{
; 1408 : 
; 1409 : 		get_3d_terrain_point_data (current_flight_dynamics->fixed_collision_points [loop].world_point.x, current_flight_dynamics->fixed_collision_points [loop].world_point.z, &raw->ac.terrain_info);

  00048	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004b	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00050	50		 push	 eax
  00051	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00054	c1 e1 06	 shl	 ecx, 6
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005d	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  00063	51		 push	 ecx
  00064	f3 0f 10 44 08
	18		 movss	 xmm0, DWORD PTR [eax+ecx+24]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00072	c1 e1 06	 shl	 ecx, 6
  00075	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0007b	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  00081	51		 push	 ecx
  00082	f3 0f 10 44 08
	10		 movss	 xmm0, DWORD PTR [eax+ecx+16]
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00092	dd d8		 fstp	 ST(0)

; 1410 : 
; 1411 : 		current_flight_dynamics->fixed_collision_points [loop].terrain_elevation = get_3d_terrain_point_data_elevation (&raw->ac.terrain_info);

  00094	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00097	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  000a5	c1 e1 06	 shl	 ecx, 6
  000a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ae	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  000b4	d9 5c 08 34	 fstp	 DWORD PTR [eax+ecx+52]

; 1412 : 
; 1413 : 		temp_water_offset = 0.0;

  000b8	0f 57 c0	 xorps	 xmm0, xmm0
  000bb	f3 0f 11 45 f8	 movss	 DWORD PTR _temp_water_offset$[ebp], xmm0

; 1414 : 
; 1415 : 		if (get_terrain_type_class (get_3d_terrain_point_data_type (&raw->ac.terrain_info)) != TERRAIN_CLASS_LAND)

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c3	05 54 01 00 00	 add	 eax, 340		; 00000154H
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  000d4	83 f8 03	 cmp	 eax, 3
  000d7	74 0d		 je	 SHORT $LN6@update_fix

; 1416 : 		{
; 1417 : 
; 1418 : 			temp_water_offset = water_offset;

  000d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?water_offset@@3MA
  000e1	f3 0f 11 45 f8	 movss	 DWORD PTR _temp_water_offset$[ebp], xmm0
$LN6@update_fix:

; 1419 : 		}
; 1420 : 
; 1421 : 		if (current_flight_dynamics->fixed_collision_points [loop].terrain_elevation + temp_water_offset > current_flight_dynamics->fixed_collision_points [loop].world_point.y)

  000e6	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  000e9	c1 e0 06	 shl	 eax, 6
  000ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f2	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  000f8	f3 0f 10 44 02
	34		 movss	 xmm0, DWORD PTR [edx+eax+52]
  000fe	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp_water_offset$[ebp]
  00103	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00106	c1 e0 06	 shl	 eax, 6
  00109	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0010f	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00115	0f 2f 44 02 14	 comiss	 xmm0, DWORD PTR [edx+eax+20]
  0011a	0f 86 8e 01 00
	00		 jbe	 $LN9@update_fix

; 1422 : 		{
; 1423 : 
; 1424 : 			fixed_collision_count ++;

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fixed_collision_count@@3HA ; fixed_collision_count
  00125	83 c0 01	 add	 eax, 1
  00128	a3 00 00 00 00	 mov	 DWORD PTR ?fixed_collision_count@@3HA, eax ; fixed_collision_count

; 1425 : 
; 1426 : 			current_flight_dynamics->fixed_collision_points [loop].violation_distance = fabs (current_flight_dynamics->fixed_collision_points [loop].terrain_elevation - current_flight_dynamics->fixed_collision_points [loop].world_point.y) + temp_water_offset;

  0012d	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00130	c1 e0 06	 shl	 eax, 6
  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00139	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0013f	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00142	c1 e1 06	 shl	 ecx, 6
  00145	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0014b	8b b6 b8 24 00
	00		 mov	 esi, DWORD PTR [esi+9400]
  00151	f3 0f 10 44 02
	34		 movss	 xmm0, DWORD PTR [edx+eax+52]
  00157	f3 0f 5c 44 0e
	14		 subss	 xmm0, DWORD PTR [esi+ecx+20]
  0015d	51		 push	 ecx
  0015e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00163	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00168	d9 5d b0	 fstp	 DWORD PTR tv267[ebp]
  0016b	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv267[ebp]
  00170	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp_water_offset$[ebp]
  00175	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  00178	c1 e2 06	 shl	 edx, 6
  0017b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00180	8b 88 b8 24 00
	00		 mov	 ecx, DWORD PTR [eax+9400]
  00186	f3 0f 11 44 11
	38		 movss	 DWORD PTR [ecx+edx+56], xmm0

; 1427 : 
; 1428 : 			current_flight_dynamics->fixed_collision_points [loop].violated = TRUE;

  0018c	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  0018f	c1 e0 06	 shl	 eax, 6
  00192	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00198	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0019e	b9 01 00 00 00	 mov	 ecx, 1
  001a3	66 89 4c 02 3c	 mov	 WORD PTR [edx+eax+60], cx

; 1429 : 
; 1430 : 			memcpy (&current_flight_dynamics->fixed_collision_points [loop].face_normal, get_3d_terrain_point_data_normal (&raw->ac.terrain_info), sizeof (vec3d));

  001a8	6a 0c		 push	 12			; 0000000cH
  001aa	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001ad	05 54 01 00 00	 add	 eax, 340		; 00000154H
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_normal@@YGPAUVEC3D@@PAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_normal
  001b8	50		 push	 eax
  001b9	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  001bc	c1 e1 06	 shl	 ecx, 6
  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c5	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  001cb	8d 4c 08 04	 lea	 ecx, DWORD PTR [eax+ecx+4]
  001cf	51		 push	 ecx
  001d0	e8 00 00 00 00	 call	 _memcpy
  001d5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1431 : 
; 1432 : 			current_flight_dynamics->fixed_collision_points [loop].collision_point = current_flight_dynamics->fixed_collision_points [loop].world_point;

  001d8	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  001db	c1 e0 06	 shl	 eax, 6
  001de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e4	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  001ea	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  001ee	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  001f1	c1 e1 06	 shl	 ecx, 6
  001f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001fa	8b 92 b8 24 00
	00		 mov	 edx, DWORD PTR [edx+9400]
  00200	8d 4c 0a 28	 lea	 ecx, DWORD PTR [edx+ecx+40]
  00204	8b 10		 mov	 edx, DWORD PTR [eax]
  00206	89 11		 mov	 DWORD PTR [ecx], edx
  00208	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0020b	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0020e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00211	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1433 : 			current_flight_dynamics->fixed_collision_points [loop].collision_point.y = current_flight_dynamics->fixed_collision_points [loop].terrain_elevation + temp_water_offset;

  00214	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00217	c1 e0 06	 shl	 eax, 6
  0021a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00220	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00226	f3 0f 10 44 02
	34		 movss	 xmm0, DWORD PTR [edx+eax+52]
  0022c	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp_water_offset$[ebp]
  00231	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00234	c1 e0 06	 shl	 eax, 6
  00237	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0023d	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00243	f3 0f 11 44 02
	2c		 movss	 DWORD PTR [edx+eax+44], xmm0

; 1434 : 
; 1435 : 			// if under water kill, something like water_offset - 0.5m
; 1436 : 			if (temp_water_offset != 0.0)

  00249	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _temp_water_offset$[ebp]
  0024e	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00256	9f		 lahf
  00257	f6 c4 44	 test	 ah, 68			; 00000044H
  0025a	7b 52		 jnp	 SHORT $LN9@update_fix

; 1437 : 			{
; 1438 : 
; 1439 : 				if (current_flight_dynamics->fixed_collision_points [loop].terrain_elevation + temp_water_offset + 0.5 > current_flight_dynamics->fixed_collision_points [loop].world_point.y)

  0025c	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  0025f	c1 e0 06	 shl	 eax, 6
  00262	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00268	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  0026e	f3 0f 10 44 02
	34		 movss	 xmm0, DWORD PTR [edx+eax+52]
  00274	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp_water_offset$[ebp]
  00279	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0027d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00285	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00288	c1 e0 06	 shl	 eax, 6
  0028b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00291	8b 91 b8 24 00
	00		 mov	 edx, DWORD PTR [ecx+9400]
  00297	f3 0f 5a 4c 02
	14		 cvtss2sd xmm1, DWORD PTR [edx+eax+20]
  0029d	66 0f 2f c1	 comisd	 xmm0, xmm1
  002a1	76 0b		 jbe	 SHORT $LN9@update_fix

; 1440 : 				{
; 1441 : 
; 1442 : 					dynamics_kill_model (DYNAMICS_DESTROY_WATER_CRASH, NULL);

  002a3	6a 00		 push	 0
  002a5	6a 02		 push	 2
  002a7	e8 00 00 00 00	 call	 ?dynamics_kill_model@@YGXW4DYNAMICS_DESTROY_TYPES@@PAUENTITY@@@Z ; dynamics_kill_model

; 1443 : 
; 1444 : 					break;

  002ac	eb 05		 jmp	 SHORT $LN3@update_fix
$LN9@update_fix:

; 1445 : 				}
; 1446 : 			}
; 1447 : 			//
; 1448 : 		}
; 1449 : 	}

  002ae	e9 78 fd ff ff	 jmp	 $LN2@update_fix
$LN3@update_fix:
$LN1@update_fix:

; 1450 : }

  002b3	5f		 pop	 edi
  002b4	5e		 pop	 esi
  002b5	5b		 pop	 ebx
  002b6	8b e5		 mov	 esp, ebp
  002b8	5d		 pop	 ebp
  002b9	c3		 ret	 0
?update_fixed_ground_collision_dynamics@@YGXXZ ENDP	; update_fixed_ground_collision_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?assess_landing@@YGXXZ
_TEXT	SEGMENT
tv216 = -88						; size = 8
tv210 = -88						; size = 8
tv174 = -88						; size = 4
tv186 = -84						; size = 4
tv167 = -84						; size = 4
_enemy_force$1 = -16					; size = 4
_force$2 = -12						; size = 4
_landing_assessment$ = -8				; size = 4
_fatal$ = -4						; size = 4
?assess_landing@@YGXXZ PROC				; assess_landing, COMDAT

; 1507 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1508 : 	int
; 1509 : 		fatal;
; 1510 : 
; 1511 : 	float
; 1512 : 		landing_assessment;
; 1513 : 
; 1514 : 	//
; 1515 : 	// Assess quality of landing
; 1516 : 	//
; 1517 : 
; 1518 : 	fatal = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _fatal$[ebp], 0

; 1519 : 
; 1520 : 	landing_assessment = current_flight_dynamics->world_motion_vector.y;

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00015	f3 0f 10 80 40
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7232]
  0001d	f3 0f 11 45 f8	 movss	 DWORD PTR _landing_assessment$[ebp], xmm0

; 1521 : 
; 1522 : 	// landed with undercarriage up
; 1523 : 	if (current_flight_dynamics->undercarriage_state.value != 1.0)

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00027	f3 0f 5a 80 64
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7268]
  0002f	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  00037	9f		 lahf
  00038	f6 c4 44	 test	 ah, 68			; 00000044H
  0003b	7b 5e		 jnp	 SHORT $LN2@assess_lan

; 1524 : 	{
; 1525 : 
; 1526 : 		dynamics_damage_model ( DYNAMICS_DAMAGE_LOW_HYDRAULICS |

  0003d	6a 01		 push	 1
  0003f	68 80 0f 00 00	 push	 3968			; 00000f80H
  00044	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1527 : 										DYNAMICS_DAMAGE_STABILISER |
; 1528 : 										DYNAMICS_DAMAGE_FUEL_LEAK |
; 1529 : 										DYNAMICS_DAMAGE_LOW_OIL_PRESSURE |
; 1530 : 										DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE,
; 1531 : 										TRUE);
; 1532 : 
; 1533 : 		fatal = get_current_dynamics_fatal_damage ();

  00049	e8 00 00 00 00	 call	 ?get_current_dynamics_fatal_damage@@YGHXZ ; get_current_dynamics_fatal_damage
  0004e	89 45 fc	 mov	 DWORD PTR _fatal$[ebp], eax

; 1534 : 
; 1535 : 		//#if DEBUG_DYNAMICS >= 2
; 1536 : 
; 1537 : 		debug_log ("CO_FORCE: landed with undercarriage up");

  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JGFDFPLJ@CO_FORCE?3?5landed?5with?5undercarr@
  00056	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0005b	83 c4 04	 add	 esp, 4

; 1538 : 
; 1539 : 		// be less forgiving about landing at speed with gear up
; 1540 : 		landing_assessment -= fabs (current_flight_dynamics->model_motion_vector.z / 3.0);

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00063	f3 0f 5a 80 38
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7224]
  0006b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4008000000000000
  00073	83 ec 08	 sub	 esp, 8
  00076	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0007b	e8 00 00 00 00	 call	 _fabs
  00080	83 c4 08	 add	 esp, 8
  00083	dd 5d a8	 fstp	 QWORD PTR tv210[ebp]
  00086	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _landing_assessment$[ebp]
  0008b	f2 0f 5c 45 a8	 subsd	 xmm0, QWORD PTR tv210[ebp]
  00090	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00094	f3 0f 11 45 f8	 movss	 DWORD PTR _landing_assessment$[ebp], xmm0

; 1541 : 
; 1542 : 		//#endif
; 1543 : 	}
; 1544 : 	else

  00099	eb 3b		 jmp	 SHORT $LN3@assess_lan
$LN2@assess_lan:

; 1545 : 		landing_assessment -= fabs (current_flight_dynamics->model_motion_vector.z / 10.0);

  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a0	f3 0f 5a 80 38
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7224]
  000a8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4024000000000000
  000b0	83 ec 08	 sub	 esp, 8
  000b3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b8	e8 00 00 00 00	 call	 _fabs
  000bd	83 c4 08	 add	 esp, 8
  000c0	dd 5d a8	 fstp	 QWORD PTR tv216[ebp]
  000c3	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _landing_assessment$[ebp]
  000c8	f2 0f 5c 45 a8	 subsd	 xmm0, QWORD PTR tv216[ebp]
  000cd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d1	f3 0f 11 45 f8	 movss	 DWORD PTR _landing_assessment$[ebp], xmm0
$LN3@assess_lan:

; 1546 : 	//
; 1547 : 
; 1548 : 	debug_log ("CO_FORCE: landing force %f", landing_assessment);

  000d6	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _landing_assessment$[ebp]
  000db	83 ec 08	 sub	 esp, 8
  000de	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@IKICCKHB@CO_FORCE?3?5landing?5force?5?$CFf@
  000e8	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1549 : 
; 1550 : 	if (landing_assessment < current_flight_dynamics->landing_quality.max)

  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f5	f3 0f 10 80 a8
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9128]
  000fd	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _landing_assessment$[ebp]
  00101	76 62		 jbe	 SHORT $LN4@assess_lan

; 1551 : 	{
; 1552 : 
; 1553 : 		dynamics_damage_model (DYNAMICS_DAMAGE_MAIN_ROTOR, FALSE);

  00103	6a 00		 push	 0
  00105	6a 02		 push	 2
  00107	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1554 : 		dynamics_damage_model (DYNAMICS_DAMAGE_TAIL_ROTOR, FALSE);

  0010c	6a 00		 push	 0
  0010e	6a 04		 push	 4
  00110	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1555 : 		dynamics_damage_model (DYNAMICS_DAMAGE_LEFT_ENGINE, FALSE);

  00115	6a 00		 push	 0
  00117	6a 08		 push	 8
  00119	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1556 : 		dynamics_damage_model (DYNAMICS_DAMAGE_RIGHT_ENGINE, FALSE);

  0011e	6a 00		 push	 0
  00120	6a 10		 push	 16			; 00000010H
  00122	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1557 : 		dynamics_damage_model (DYNAMICS_DAMAGE_FUEL_LEAK, FALSE);

  00127	6a 00		 push	 0
  00129	68 00 02 00 00	 push	 512			; 00000200H
  0012e	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1558 : 		dynamics_damage_model (DYNAMICS_DAMAGE_STABILISER, FALSE);

  00133	6a 00		 push	 0
  00135	68 00 01 00 00	 push	 256			; 00000100H
  0013a	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1559 : 		dynamics_damage_model (DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE, FALSE);

  0013f	6a 00		 push	 0
  00141	68 00 08 00 00	 push	 2048			; 00000800H
  00146	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1560 : 
; 1561 : 		fatal = get_current_dynamics_fatal_damage ();

  0014b	e8 00 00 00 00	 call	 ?get_current_dynamics_fatal_damage@@YGHXZ ; get_current_dynamics_fatal_damage
  00150	89 45 fc	 mov	 DWORD PTR _fatal$[ebp], eax

; 1562 : 
; 1563 : 		//#if DEBUG_DYNAMICS >= 2
; 1564 : 
; 1565 : 		debug_log ("CO_FORCE: crash landing");

  00153	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JPCNCGIK@CO_FORCE?3?5crash?5landing@
  00158	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0015d	83 c4 04	 add	 esp, 4
  00160	e9 87 00 00 00	 jmp	 $LN11@assess_lan
$LN4@assess_lan:

; 1566 : 
; 1567 : 		//#endif
; 1568 : 	}
; 1569 : 	else if (landing_assessment < current_flight_dynamics->landing_quality.value)

  00165	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0016a	f3 0f 10 80 9c
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9116]
  00172	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _landing_assessment$[ebp]
  00176	76 23		 jbe	 SHORT $LN6@assess_lan

; 1570 : 	{
; 1571 : 
; 1572 : 		dynamics_damage_model ( DYNAMICS_DAMAGE_MAIN_ROTOR |

  00178	6a 01		 push	 1
  0017a	68 fe 0f 01 00	 push	 69630			; 00010ffeH
  0017f	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 1573 : 								DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE |
; 1574 : 										DYNAMICS_DAMAGE_TAIL_ROTOR |
; 1575 : 										DYNAMICS_DAMAGE_LEFT_ENGINE |
; 1576 : 										DYNAMICS_DAMAGE_RIGHT_ENGINE |
; 1577 : 										DYNAMICS_DAMAGE_LEFT_ENGINE_FIRE |
; 1578 : 										DYNAMICS_DAMAGE_RIGHT_ENGINE_FIRE |
; 1579 : 										DYNAMICS_DAMAGE_LOW_HYDRAULICS |
; 1580 : 										DYNAMICS_DAMAGE_STABILISER |
; 1581 : 										DYNAMICS_DAMAGE_FUEL_LEAK |
; 1582 : 										DYNAMICS_DAMAGE_LOW_OIL_PRESSURE |
; 1583 : 										DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE,
; 1584 : 										TRUE);
; 1585 : 
; 1586 : 		fatal = get_current_dynamics_fatal_damage ();

  00184	e8 00 00 00 00	 call	 ?get_current_dynamics_fatal_damage@@YGHXZ ; get_current_dynamics_fatal_damage
  00189	89 45 fc	 mov	 DWORD PTR _fatal$[ebp], eax

; 1587 : 
; 1588 : 		//#if DEBUG_DYNAMICS >= 2
; 1589 : 
; 1590 : 		debug_log ("CO_FORCE: heavy landing");

  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KAFKPLHB@CO_FORCE?3?5heavy?5landing@
  00191	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00196	83 c4 04	 add	 esp, 4
  00199	eb 51		 jmp	 SHORT $LN11@assess_lan
$LN6@assess_lan:

; 1591 : 
; 1592 : 		//#endif
; 1593 : 	}
; 1594 : 	else if (landing_assessment < current_flight_dynamics->landing_quality.delta)

  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a0	f3 0f 10 80 a0
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9120]
  001a8	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _landing_assessment$[ebp]
  001ac	76 0f		 jbe	 SHORT $LN8@assess_lan

; 1595 : 	{
; 1596 : 
; 1597 : 		//#if DEBUG_DYNAMICS >= 2
; 1598 : 
; 1599 : 		debug_log ("CO_FORCE: ok landing");

  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IMDJDKAM@CO_FORCE?3?5ok?5landing@
  001b3	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001b8	83 c4 04	 add	 esp, 4
  001bb	eb 2f		 jmp	 SHORT $LN11@assess_lan
$LN8@assess_lan:

; 1600 : 
; 1601 : 		//#endif
; 1602 : 	}
; 1603 : 	else if (landing_assessment < current_flight_dynamics->landing_quality.min)

  001bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c2	f3 0f 10 80 a4
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9124]
  001ca	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _landing_assessment$[ebp]
  001ce	76 0f		 jbe	 SHORT $LN10@assess_lan

; 1604 : 	{
; 1605 : 
; 1606 : 		//#if DEBUG_DYNAMICS >= 2
; 1607 : 
; 1608 : 		debug_log ("CO_FORCE: good landing");

  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GDLACELG@CO_FORCE?3?5good?5landing@
  001d5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001da	83 c4 04	 add	 esp, 4

; 1609 : 
; 1610 : 		//#endif
; 1611 : 	}
; 1612 : 	else

  001dd	eb 0d		 jmp	 SHORT $LN11@assess_lan
$LN10@assess_lan:

; 1613 : 	{
; 1614 : 
; 1615 : 		//#if DEBUG_DYNAMICS >= 2
; 1616 : 
; 1617 : 		debug_log ("CO_FORCE: very good landing");

  001df	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HDKAIPIP@CO_FORCE?3?5very?5good?5landing@
  001e4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001e9	83 c4 04	 add	 esp, 4
$LN11@assess_lan:

; 1618 : 
; 1619 : 		//#endif
; 1620 : 	}
; 1621 : 
; 1622 : 	//
; 1623 : 	//
; 1624 : 	//
; 1625 : 
; 1626 : 	if ((get_local_entity_int_value (get_gunship_entity (), INT_TYPE_ALIVE)) && (fatal))

  001ec	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  001f3	74 0c		 je	 SHORT $LN15@assess_lan
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fc	89 4d ac	 mov	 DWORD PTR tv167[ebp], ecx
  001ff	eb 1d		 jmp	 SHORT $LN16@assess_lan
$LN15@assess_lan:
  00201	68 5a 06 00 00	 push	 1626			; 0000065aH
  00206	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00211	52		 push	 edx
  00212	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00217	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN16@assess_lan:
  0021e	b8 01 00 00 00	 mov	 eax, 1
  00223	85 c0		 test	 eax, eax
  00225	74 09		 je	 SHORT $LN17@assess_lan
  00227	c7 45 a8 07 00
	00 00		 mov	 DWORD PTR tv174[ebp], 7
  0022e	eb 1d		 jmp	 SHORT $LN18@assess_lan
$LN17@assess_lan:
  00230	68 5a 06 00 00	 push	 1626			; 0000065aH
  00235	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00240	51		 push	 ecx
  00241	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00246	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN18@assess_lan:
  0024d	6a 07		 push	 7
  0024f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00255	52		 push	 edx
  00256	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv167[ebp], 1116
  0025d	8b 4d a8	 mov	 ecx, DWORD PTR tv174[ebp]
  00260	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00267	ff d2		 call	 edx
  00269	85 c0		 test	 eax, eax
  0026b	74 70		 je	 SHORT $LN12@assess_lan
  0026d	83 7d fc 00	 cmp	 DWORD PTR _fatal$[ebp], 0
  00271	74 6a		 je	 SHORT $LN12@assess_lan

; 1627 : 	{
; 1628 : 
; 1629 : 		entity
; 1630 : 			*force,
; 1631 : 			*enemy_force;
; 1632 : 
; 1633 : 		//
; 1634 : 		// Enter demo mode
; 1635 : 		//
; 1636 : 
; 1637 : 		force = get_local_force_entity (get_global_gunship_side ());

  00273	a1 08 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  0027e	89 45 f4	 mov	 DWORD PTR _force$2[ebp], eax

; 1638 : 		enemy_force = get_local_force_entity (get_enemy_side (get_global_gunship_side ()));

  00281	83 3d 08 00 00
	00 01		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8, 1
  00288	75 09		 jne	 SHORT $LN19@assess_lan
  0028a	c7 45 ac 02 00
	00 00		 mov	 DWORD PTR tv186[ebp], 2
  00291	eb 07		 jmp	 SHORT $LN20@assess_lan
$LN19@assess_lan:
  00293	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv186[ebp], 1
$LN20@assess_lan:
  0029a	8b 45 ac	 mov	 eax, DWORD PTR tv186[ebp]
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  002a3	89 45 f0	 mov	 DWORD PTR _enemy_force$1[ebp], eax

; 1639 : 		notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, force, get_gunship_entity (), NULL);

  002a6	6a 00		 push	 0
  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002ad	50		 push	 eax
  002ae	8b 4d f4	 mov	 ecx, DWORD PTR _force$2[ebp]
  002b1	51		 push	 ecx
  002b2	6a 15		 push	 21			; 00000015H
  002b4	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  002b9	83 c4 10	 add	 esp, 16			; 00000010H

; 1640 : 		notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, enemy_force, get_gunship_entity (), NULL);

  002bc	6a 00		 push	 0
  002be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002c3	50		 push	 eax
  002c4	8b 4d f0	 mov	 ecx, DWORD PTR _enemy_force$1[ebp]
  002c7	51		 push	 ecx
  002c8	6a 15		 push	 21			; 00000015H
  002ca	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  002cf	83 c4 10	 add	 esp, 16			; 00000010H

; 1641 : 		dynamics_kill_model (DYNAMICS_DESTROY_CRASH_LANDED, NULL);

  002d2	6a 00		 push	 0
  002d4	6a 01		 push	 1
  002d6	e8 00 00 00 00	 call	 ?dynamics_kill_model@@YGXW4DYNAMICS_DESTROY_TYPES@@PAUENTITY@@@Z ; dynamics_kill_model

; 1642 : 	}
; 1643 : 	else

  002db	eb 05		 jmp	 SHORT $LN13@assess_lan
$LN12@assess_lan:

; 1644 : 	{
; 1645 : 		dynamics_land ();

  002dd	e8 00 00 00 00	 call	 ?dynamics_land@@YGXXZ	; dynamics_land
$LN13@assess_lan:

; 1646 : 	}
; 1647 : }

  002e2	5f		 pop	 edi
  002e3	5e		 pop	 esi
  002e4	5b		 pop	 ebx
  002e5	8b e5		 mov	 esp, ebp
  002e7	5d		 pop	 ebp
  002e8	c3		 ret	 0
?assess_landing@@YGXXZ ENDP				; assess_landing
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?resolve_moments@@YGXMMMPAM00@Z
_TEXT	SEGMENT
_position$ = -16					; size = 12
_index$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_x_axis_moment$ = 20					; size = 4
_y_axis_moment$ = 24					; size = 4
_z_axis_moment$ = 28					; size = 4
?resolve_moments@@YGXMMMPAM00@Z PROC			; resolve_moments, COMDAT

; 891  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 892  : 
; 893  : 	int
; 894  : 		index;
; 895  : 
; 896  : 	vec3d
; 897  : 		position;
; 898  : 
; 899  :    *x_axis_moment = 0.0;

  00009	8b 45 14	 mov	 eax, DWORD PTR _x_axis_moment$[ebp]
  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 900  :    *y_axis_moment = 0.0;

  00013	8b 45 18	 mov	 eax, DWORD PTR _y_axis_moment$[ebp]
  00016	0f 57 c0	 xorps	 xmm0, xmm0
  00019	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 901  :    *z_axis_moment = 0.0;

  0001d	8b 45 1c	 mov	 eax, DWORD PTR _z_axis_moment$[ebp]
  00020	0f 57 c0	 xorps	 xmm0, xmm0
  00023	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 902  : 
; 903  : 	for (index = 0; index < current_flight_dynamics->max_number_of_dynamic_forces; index ++)

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
  0002e	eb 09		 jmp	 SHORT $LN4@resolve_mo
$LN2@resolve_mo:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00033	83 c0 01	 add	 eax, 1
  00036	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax
$LN4@resolve_mo:
  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  00041	3b 88 d4 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9428]
  00047	0f 8d dc 01 00
	00		 jge	 $LN3@resolve_mo

; 904  :    {
; 905  : 
; 906  : 		if (current_flight_dynamics->dynamic_forces [index].valid)

  0004d	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00051	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00057	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0005d	0f b7 44 02 24	 movzx	 eax, WORD PTR [edx+eax+36]
  00062	85 c0		 test	 eax, eax
  00064	0f 84 ba 01 00
	00		 je	 $LN5@resolve_mo

; 907  : 		{
; 908  : 
; 909  : 			position.x = current_flight_dynamics->dynamic_forces [index].position.x + x;

  0006a	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0006e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00074	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0007a	f3 0f 10 44 02
	0c		 movss	 xmm0, DWORD PTR [edx+eax+12]
  00080	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _x$[ebp]
  00085	f3 0f 11 45 f0	 movss	 DWORD PTR _position$[ebp], xmm0

; 910  : 			position.y = current_flight_dynamics->dynamic_forces [index].position.y + y;

  0008a	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0008e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00094	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0009a	f3 0f 10 44 02
	10		 movss	 xmm0, DWORD PTR [edx+eax+16]
  000a0	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _y$[ebp]
  000a5	f3 0f 11 45 f4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 911  : 			position.z = current_flight_dynamics->dynamic_forces [index].position.z + z;

  000aa	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b4	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  000ba	f3 0f 10 44 02
	14		 movss	 xmm0, DWORD PTR [edx+eax+20]
  000c0	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _z$[ebp]
  000c5	f3 0f 11 45 f8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 912  : 
; 913  : 			#if 0
; 914  : 
; 915  : 			debug_log ("DYNAMICS:     %s F = %f, P = (%f, %f, %f), D = (%f, %f, %f), R = (%f, %f, %f)",
; 916  : 							current_flight_dynamics->dynamic_forces [index].name,
; 917  : 							current_flight_dynamics->dynamic_forces [index].linear_force,
; 918  : 							current_flight_dynamics->dynamic_forces [index].position.x, current_flight_dynamics->dynamic_forces [index].position.y, current_flight_dynamics->dynamic_forces [index].position.z,
; 919  : 							current_flight_dynamics->dynamic_forces [index].direction.x, current_flight_dynamics->dynamic_forces [index].direction.y, current_flight_dynamics->dynamic_forces [index].direction.z,
; 920  : 							(current_flight_dynamics->dynamic_forces [index].linear_force * position.z * current_flight_dynamics->dynamic_forces [index].direction.y) - (current_flight_dynamics->dynamic_forces [index].linear_force * position.y * current_flight_dynamics->dynamic_forces [index].direction.z),
; 921  : 							(current_flight_dynamics->dynamic_forces [index].linear_force * position.z * current_flight_dynamics->dynamic_forces [index].direction.x) - (current_flight_dynamics->dynamic_forces [index].linear_force * position.x * current_flight_dynamics->dynamic_forces [index].direction.z),
; 922  : 							(current_flight_dynamics->dynamic_forces [index].linear_force * position.x * current_flight_dynamics->dynamic_forces [index].direction.y) - (current_flight_dynamics->dynamic_forces [index].linear_force * position.y * current_flight_dynamics->dynamic_forces [index].direction.x));
; 923  : 
; 924  : 			#endif
; 925  : 
; 926  : 			*x_axis_moment += (current_flight_dynamics->dynamic_forces [index].linear_force * position.z * current_flight_dynamics->dynamic_forces [index].direction.y) - (current_flight_dynamics->dynamic_forces [index].linear_force * position.y * current_flight_dynamics->dynamic_forces [index].direction.z);

  000ca	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000d4	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  000da	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  000e0	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _position$[ebp+8]
  000e5	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ef	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  000f5	f3 0f 59 44 02
	04		 mulss	 xmm0, DWORD PTR [edx+eax+4]
  000fb	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  000ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00105	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0010b	f3 0f 10 4c 02
	1c		 movss	 xmm1, DWORD PTR [edx+eax+28]
  00111	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _position$[ebp+4]
  00116	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0011a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00120	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00126	f3 0f 59 4c 02
	08		 mulss	 xmm1, DWORD PTR [edx+eax+8]
  0012c	f3 0f 5c c1	 subss	 xmm0, xmm1
  00130	8b 45 14	 mov	 eax, DWORD PTR _x_axis_moment$[ebp]
  00133	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00137	8b 4d 14	 mov	 ecx, DWORD PTR _x_axis_moment$[ebp]
  0013a	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 927  : 			*y_axis_moment += (current_flight_dynamics->dynamic_forces [index].linear_force * position.z * current_flight_dynamics->dynamic_forces [index].direction.x) - (current_flight_dynamics->dynamic_forces [index].linear_force * position.x * current_flight_dynamics->dynamic_forces [index].direction.z);

  0013e	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00142	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00148	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0014e	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  00154	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _position$[ebp+8]
  00159	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0015d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00163	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00169	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  0016e	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00172	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00178	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0017e	f3 0f 10 4c 02
	1c		 movss	 xmm1, DWORD PTR [edx+eax+28]
  00184	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _position$[ebp]
  00189	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0018d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00193	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00199	f3 0f 59 4c 02
	08		 mulss	 xmm1, DWORD PTR [edx+eax+8]
  0019f	f3 0f 5c c1	 subss	 xmm0, xmm1
  001a3	8b 45 18	 mov	 eax, DWORD PTR _y_axis_moment$[ebp]
  001a6	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  001aa	8b 4d 18	 mov	 ecx, DWORD PTR _y_axis_moment$[ebp]
  001ad	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 928  : 			*z_axis_moment += (current_flight_dynamics->dynamic_forces [index].linear_force * position.x * current_flight_dynamics->dynamic_forces [index].direction.y) - (current_flight_dynamics->dynamic_forces [index].linear_force * position.y * current_flight_dynamics->dynamic_forces [index].direction.x);

  001b1	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  001b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001bb	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  001c1	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  001c7	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _position$[ebp]
  001cc	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  001d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001d6	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  001dc	f3 0f 59 44 02
	04		 mulss	 xmm0, DWORD PTR [edx+eax+4]
  001e2	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  001e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ec	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  001f2	f3 0f 10 4c 02
	1c		 movss	 xmm1, DWORD PTR [edx+eax+28]
  001f8	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _position$[ebp+4]
  001fd	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00201	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00207	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0020d	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00212	f3 0f 5c c1	 subss	 xmm0, xmm1
  00216	8b 45 1c	 mov	 eax, DWORD PTR _z_axis_moment$[ebp]
  00219	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0021d	8b 4d 1c	 mov	 ecx, DWORD PTR _z_axis_moment$[ebp]
  00220	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
$LN5@resolve_mo:

; 929  : 		}
; 930  :    }

  00224	e9 07 fe ff ff	 jmp	 $LN2@resolve_mo
$LN3@resolve_mo:

; 931  : /*
; 932  : 			//debug_log ("CO_FORCE: adding force to joystick");
; 933  : 	set_joystick_force_feedback_forces (current_flight_dynamics->input_data.cyclic_joystick_device_index,
; 934  : 													*z_axis_moment * -3000, *x_axis_moment * 3000);
; 935  : */
; 936  : 	//debug_log ("%f, %f", *x_axis_moment * 5000, *z_axis_moment * 5000);
; 937  : 
; 938  : 	#if 0
; 939  : 
; 940  : 	debug_log ("DYNAMICS: origin %f, %f, %f, resultant x = %f, y = %f, z = %f",
; 941  : 		x,
; 942  : 		y,
; 943  : 		z,
; 944  : 		*x_axis_moment, *y_axis_moment, *z_axis_moment);
; 945  : 
; 946  : 	#endif
; 947  : }

  00229	5f		 pop	 edi
  0022a	5e		 pop	 esi
  0022b	5b		 pop	 ebx
  0022c	8b e5		 mov	 esp, ebp
  0022e	5d		 pop	 ebp
  0022f	c2 18 00	 ret	 24			; 00000018H
?resolve_moments@@YGXMMMPAM00@Z ENDP			; resolve_moments
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?add_dynamic_weapon_launch_force@@YGXPAUVEC3D@@0MM@Z
_TEXT	SEGMENT
_direction$ = -24					; size = 12
_position$ = -12					; size = 12
_launch_position$ = 8					; size = 4
_launch_direction$ = 12					; size = 4
_force$ = 16						; size = 4
_duration$ = 20						; size = 4
?add_dynamic_weapon_launch_force@@YGXPAUVEC3D@@0MM@Z PROC ; add_dynamic_weapon_launch_force, COMDAT

; 856  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 857  : 
; 858  : 	vec3d
; 859  : 		position,
; 860  : 		direction;
; 861  : 
; 862  : 	position.x = launch_position->x - current_flight_dynamics->position.x;

  00009	8b 45 08	 mov	 eax, DWORD PTR _launch_position$[ebp]
  0000c	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00016	f2 0f 5c 81 ac
	00 00 00	 subsd	 xmm0, QWORD PTR [ecx+172]
  0001e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00022	f3 0f 11 45 f4	 movss	 DWORD PTR _position$[ebp], xmm0

; 863  : 	position.y = 0.0;

  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f3 0f 11 45 f8	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 864  : 	position.z = launch_position->z - current_flight_dynamics->position.z;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _launch_position$[ebp]
  00032	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003d	f2 0f 5c 81 bc
	00 00 00	 subsd	 xmm0, QWORD PTR [ecx+188]
  00045	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00049	f3 0f 11 45 fc	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 865  : 
; 866  : 	multiply_transpose_matrix3x3_vec3d (&direction, current_flight_dynamics->attitude, launch_direction);

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _launch_direction$[ebp]
  00051	50		 push	 eax
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00058	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0005e	51		 push	 ecx
  0005f	8d 55 e8	 lea	 edx, DWORD PTR _direction$[ebp]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 867  : 
; 868  : 	invert_3d_vector (&direction);

  00068	8d 45 e8	 lea	 eax, DWORD PTR _direction$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?invert_3d_vector@@YGXPAUVEC3D@@@Z ; invert_3d_vector

; 869  : 
; 870  : 	multiply_transpose_matrix3x3_vec3d (&position, current_flight_dynamics->attitude, &position);

  00071	8d 45 f4	 lea	 eax, DWORD PTR _position$[ebp]
  00074	50		 push	 eax
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0007b	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  00081	51		 push	 ecx
  00082	8d 55 f4	 lea	 edx, DWORD PTR _position$[ebp]
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 871  : 
; 872  : 	force /= (duration * MODEL_FRAME_RATE);

  0008b	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _duration$[ebp]
  00090	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42480000
  00098	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _force$[ebp]
  0009d	f3 0f 5e c8	 divss	 xmm1, xmm0
  000a1	f3 0f 11 4d 10	 movss	 DWORD PTR _force$[ebp], xmm1

; 873  : 
; 874  : 	//add_dynamic_force (force, duration, &position, &direction, FALSE);
; 875  : 
; 876  : 	#if DEBUG_MODULE
; 877  : 
; 878  : 	create_vectored_debug_3d_object (launch_position, &direction, OBJECT_3D_ARROW_FORCES, duration, 15.0);
; 879  : 
; 880  : 	debug_log ("DYNAMICS: launch force %f (range %f), position %f, %f, %f, direction %f, %f, %f",
; 881  : 					force, get_3d_vector_magnitude (&position), position.x, position.y, position.z, direction.x, direction.y, direction.z);
; 882  : 
; 883  : 	#endif
; 884  : }

  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 10 00	 ret	 16			; 00000010H
?add_dynamic_weapon_launch_force@@YGXPAUVEC3D@@0MM@Z ENDP ; add_dynamic_weapon_launch_force
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?add_dynamic_explosion_force@@YGXPAUVEC3D@@M@Z
_TEXT	SEGMENT
_explosion_position$ = 8				; size = 4
_force$ = 12						; size = 4
?add_dynamic_explosion_force@@YGXPAUVEC3D@@M@Z PROC	; add_dynamic_explosion_force, COMDAT

; 805  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 806  : /*
; 807  : 	vec3d
; 808  : 		position,
; 809  : 		direction;
; 810  : 
; 811  : 	position.x = explosion_position->x - current_flight_dynamics->position.x;
; 812  : 	position.y = explosion_position->y - current_flight_dynamics->position.y;
; 813  : 	position.z = explosion_position->z - current_flight_dynamics->position.z;
; 814  : 
; 815  : 	direction = position;
; 816  : 
; 817  : 	direction.y = 0.0;
; 818  : 
; 819  : 	invert_3d_vector (&direction);
; 820  : 
; 821  : 	normalise_any_3d_vector (&direction);
; 822  : 
; 823  : 	if (!check_zero_3d_vector (&direction))
; 824  : 	{
; 825  : 
; 826  : //		multiply_matrix3x3_vec3d (&direction, current_flight_dynamics->attitude, &direction);
; 827  : 		//multiply_transpose_matrix3x3_vec3d (&direction, current_flight_dynamics->attitude, &direction);
; 828  : 
; 829  : 		force = bound (force, 0.0, 40.0);
; 830  : 
; 831  : 		multiply_transpose_matrix3x3_vec3d (&position, current_flight_dynamics->attitude, &position);
; 832  : 
; 833  : 		//add_dynamic_force ("Explosion force", force, 0.0, &position, &direction, FALSE);
; 834  : 
; 835  : 		#if DEBUG_MODULE
; 836  : 
; 837  : 		debug_log ("DYNAMICS: explosion force %f (strength %f, range %f), position %f, %f, %f, direction %f, %f, %f",
; 838  : 						force, force, get_3d_vector_magnitude (&position), position.x, position.y, position.z, direction.x, direction.y, direction.z);
; 839  : 
; 840  : 		position.x += current_flight_dynamics->position.x;
; 841  : 		position.y += current_flight_dynamics->position.y;
; 842  : 		position.z += current_flight_dynamics->position.z;
; 843  : 
; 844  : 		create_vectored_debug_3d_object (&position, &direction, OBJECT_3D_ARROW_FORCES, 1.0, 15.0);
; 845  : 
; 846  : 		#endif
; 847  : 	}
; 848  : 	*/
; 849  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?add_dynamic_explosion_force@@YGXPAUVEC3D@@M@Z ENDP	; add_dynamic_explosion_force
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?draw_dynamic_forces@@YGXXZ
_TEXT	SEGMENT
tv262 = -160						; size = 8
tv232 = -160						; size = 8
tv202 = -160						; size = 8
tv399 = -152						; size = 8
tv368 = -152						; size = 8
tv263 = -152						; size = 8
tv233 = -152						; size = 8
tv203 = -152						; size = 8
tv128 = -148						; size = 4
_index$ = -80						; size = 4
_old_position$ = -76					; size = 12
_attitude$ = -64					; size = 36
_direction$ = -28					; size = 12
_pos$ = -16						; size = 12
_size$ = -4						; size = 4
?draw_dynamic_forces@@YGXXZ PROC			; draw_dynamic_forces, COMDAT

; 687  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 688  : 
; 689  : 	float
; 690  : 		size;
; 691  : 
; 692  : 	vec3d
; 693  : 		pos,
; 694  : 		direction;
; 695  : 
; 696  : 	matrix3x3
; 697  : 		attitude;
; 698  : 
; 699  : 	vec3d
; 700  : 		old_position;
; 701  : 
; 702  : 	int
; 703  : 		index;
; 704  : 
; 705  : 	if (!get_gunship_entity ())

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	75 05		 jne	 SHORT $LN5@draw_dynam

; 706  : 	{
; 707  : 		return;

  00015	e9 92 05 00 00	 jmp	 $LN1@draw_dynam
$LN5@draw_dynam:

; 708  : 	}
; 709  : 
; 710  : 	if (get_in_flight_game_mode () != IN_FLIGHT_GAME_MODE_SIMULATOR)

  0001a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 0 ; in_flight_game_mode
  00021	74 05		 je	 SHORT $LN6@draw_dynam

; 711  : 	{
; 712  : 		return;

  00023	e9 84 05 00 00	 jmp	 $LN1@draw_dynam
$LN6@draw_dynam:

; 713  : 	}
; 714  : 
; 715  : 	old_position.x = current_flight_dynamics->position.x - (current_flight_dynamics->world_motion_vector.x * get_delta_time ());

  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002d	f3 0f 10 80 3c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7228]
  00035	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0003d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00047	f2 0f 10 89 ac
	00 00 00	 movsd	 xmm1, QWORD PTR [ecx+172]
  0004f	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00053	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00057	f3 0f 11 45 b4	 movss	 DWORD PTR _old_position$[ebp], xmm0

; 716  : 	old_position.y = current_flight_dynamics->position.y - (current_flight_dynamics->world_motion_vector.y * get_delta_time ());

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00061	f3 0f 10 80 40
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7232]
  00069	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00071	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0007b	f2 0f 10 89 b4
	00 00 00	 movsd	 xmm1, QWORD PTR [ecx+180]
  00083	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00087	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0008b	f3 0f 11 45 b8	 movss	 DWORD PTR _old_position$[ebp+4], xmm0

; 717  : 	old_position.z = current_flight_dynamics->position.z - (current_flight_dynamics->world_motion_vector.z * get_delta_time ());

  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00095	f3 0f 10 80 44
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7236]
  0009d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000a5	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000af	f2 0f 10 89 bc
	00 00 00	 movsd	 xmm1, QWORD PTR [ecx+188]
  000b7	f2 0f 5c c8	 subsd	 xmm1, xmm0
  000bb	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000bf	f3 0f 11 45 bc	 movss	 DWORD PTR _old_position$[ebp+8], xmm0

; 718  : 
; 719  : 	get_local_entity_attitude_matrix (get_gunship_entity (), attitude);

  000c4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000cb	74 0f		 je	 SHORT $LN11@draw_dynam
  000cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000da	eb 24		 jmp	 SHORT $LN12@draw_dynam
$LN11@draw_dynam:
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_dynamic_forces@@YGXXZ@4JA
  000e2	83 c2 20	 add	 edx, 32			; 00000020H
  000e5	52		 push	 edx
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f6	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN12@draw_dynam:
  00100	8d 4d c0	 lea	 ecx, DWORD PTR _attitude$[ebp]
  00103	51		 push	 ecx
  00104	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0010a	52		 push	 edx
  0010b	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv128[ebp]
  00111	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00118	ff d1		 call	 ecx

; 720  : 
; 721  : 	for (index = 0; index < current_flight_dynamics->max_number_of_dynamic_forces; index ++)

  0011a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
  00121	eb 09		 jmp	 SHORT $LN4@draw_dynam
$LN2@draw_dynam:
  00123	8b 45 b0	 mov	 eax, DWORD PTR _index$[ebp]
  00126	83 c0 01	 add	 eax, 1
  00129	89 45 b0	 mov	 DWORD PTR _index$[ebp], eax
$LN4@draw_dynam:
  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00131	8b 4d b0	 mov	 ecx, DWORD PTR _index$[ebp]
  00134	3b 88 d4 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9428]
  0013a	0f 8d 00 02 00
	00		 jge	 $LN3@draw_dynam

; 722  : 	{
; 723  : 
; 724  : 		if (current_flight_dynamics->dynamic_forces [index].valid)

  00140	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00144	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0014a	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00150	0f b7 44 02 24	 movzx	 eax, WORD PTR [edx+eax+36]
  00155	85 c0		 test	 eax, eax
  00157	0f 84 de 01 00
	00		 je	 $LN7@draw_dynam

; 725  : 		{
; 726  : 
; 727  : 			multiply_matrix3x3_vec3d (&pos, attitude, &current_flight_dynamics->dynamic_forces [index].position);

  0015d	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00161	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00167	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0016d	8d 44 02 0c	 lea	 eax, DWORD PTR [edx+eax+12]
  00171	50		 push	 eax
  00172	8d 4d c0	 lea	 ecx, DWORD PTR _attitude$[ebp]
  00175	51		 push	 ecx
  00176	8d 55 f0	 lea	 edx, DWORD PTR _pos$[ebp]
  00179	52		 push	 edx
  0017a	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 728  : 
; 729  : 			direction = current_flight_dynamics->dynamic_forces [index].direction;

  0017f	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00183	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00189	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0018f	03 d0		 add	 edx, eax
  00191	8b 02		 mov	 eax, DWORD PTR [edx]
  00193	89 45 e4	 mov	 DWORD PTR _direction$[ebp], eax
  00196	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00199	89 4d e8	 mov	 DWORD PTR _direction$[ebp+4], ecx
  0019c	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0019f	89 55 ec	 mov	 DWORD PTR _direction$[ebp+8], edx

; 730  : 
; 731  : 			multiply_matrix3x3_vec3d (&direction, attitude, &direction);

  001a2	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  001a5	50		 push	 eax
  001a6	8d 4d c0	 lea	 ecx, DWORD PTR _attitude$[ebp]
  001a9	51		 push	 ecx
  001aa	8d 55 e4	 lea	 edx, DWORD PTR _direction$[ebp]
  001ad	52		 push	 edx
  001ae	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 732  : 
; 733  : 			pos.x += current_flight_dynamics->position.x;

  001b3	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001bd	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  001c5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c9	f3 0f 11 45 f0	 movss	 DWORD PTR _pos$[ebp], xmm0

; 734  : 			pos.y += current_flight_dynamics->position.y + 0.25;

  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001d3	f2 0f 10 80 b4
	00 00 00	 movsd	 xmm0, QWORD PTR [eax+180]
  001db	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  001e3	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _pos$[ebp+4]
  001e8	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001ec	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001f0	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 735  : 			pos.z += current_flight_dynamics->position.z;

  001f5	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+8]
  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ff	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  00207	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020b	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 736  : 
; 737  : 			current_flight_dynamics->dynamic_forces [index].linear_force *= 10;

  00210	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00214	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0021a	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00220	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  00226	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41200000
  0022e	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00232	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00238	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0023e	f3 0f 11 44 02
	1c		 movss	 DWORD PTR [edx+eax+28], xmm0

; 738  : 
; 739  : 			size = bound (current_flight_dynamics->dynamic_forces [index].linear_force * 0.25, -4.0, 4.0);

  00244	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00248	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0024e	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00254	f3 0f 5a 44 02
	1c		 cvtss2sd xmm0, DWORD PTR [edx+eax+28]
  0025a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00262	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c010000000000000
  0026a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0026e	76 12		 jbe	 SHORT $LN15@draw_dynam
  00270	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c010000000000000
  00278	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv203[ebp], xmm0
  00280	eb 70		 jmp	 SHORT $LN16@draw_dynam
$LN15@draw_dynam:
  00282	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00286	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0028c	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00292	f3 0f 5a 44 02
	1c		 cvtss2sd xmm0, DWORD PTR [edx+eax+28]
  00298	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd0000000000000
  002a0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4010000000000000
  002a8	76 12		 jbe	 SHORT $LN13@draw_dynam
  002aa	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4010000000000000
  002b2	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv202[ebp], xmm0
  002ba	eb 26		 jmp	 SHORT $LN14@draw_dynam
$LN13@draw_dynam:
  002bc	6b 45 b0 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  002c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c6	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  002cc	f3 0f 5a 44 02
	1c		 cvtss2sd xmm0, DWORD PTR [edx+eax+28]
  002d2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd0000000000000
  002da	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv202[ebp], xmm0
$LN14@draw_dynam:
  002e2	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv202[ebp]
  002ea	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv203[ebp], xmm0
$LN16@draw_dynam:
  002f2	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv203[ebp]
  002fa	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 740  : 
; 741  : 			pos.y += 2.0;

  002ff	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+4]
  00304	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  0030c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00310	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 742  : 
; 743  : 			create_vectored_debug_3d_object (&pos, &direction, OBJECT_3D_ARROW_FORCES, 0, size);

  00315	51		 push	 ecx
  00316	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _size$[ebp]
  0031b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00320	51		 push	 ecx
  00321	0f 57 c0	 xorps	 xmm0, xmm0
  00324	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00329	68 66 0a 00 00	 push	 2662			; 00000a66H
  0032e	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  00331	50		 push	 eax
  00332	8d 4d f0	 lea	 ecx, DWORD PTR _pos$[ebp]
  00335	51		 push	 ecx
  00336	e8 00 00 00 00	 call	 ?create_vectored_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@0HMM@Z ; create_vectored_debug_3d_object
$LN7@draw_dynam:

; 744  : 		}
; 745  : 	}

  0033b	e9 e3 fd ff ff	 jmp	 $LN2@draw_dynam
$LN3@draw_dynam:

; 746  : 
; 747  : 	// acceleration vector
; 748  : 
; 749  : 	direction = current_flight_dynamics->model_acceleration_vector;

  00340	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00345	05 48 1c 00 00	 add	 eax, 7240		; 00001c48H
  0034a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034c	89 4d e4	 mov	 DWORD PTR _direction$[ebp], ecx
  0034f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00352	89 55 e8	 mov	 DWORD PTR _direction$[ebp+4], edx
  00355	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00358	89 45 ec	 mov	 DWORD PTR _direction$[ebp+8], eax

; 750  : 
; 751  : 	if (!check_zero_3d_vector (&direction))

  0035b	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  0035e	50		 push	 eax
  0035f	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00364	dd 9d 68 ff ff
	ff		 fstp	 QWORD PTR tv368[ebp]
  0036a	f2 0f 10 85 68
	ff ff ff	 movsd	 xmm0, QWORD PTR tv368[ebp]
  00372	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0037a	9f		 lahf
  0037b	f6 c4 44	 test	 ah, 68			; 00000044H
  0037e	0f 8b f4 00 00
	00		 jnp	 $LN8@draw_dynam

; 752  : 	{
; 753  : 
; 754  : 		normalise_any_3d_vector (&direction);

  00384	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  00387	50		 push	 eax
  00388	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  0038d	dd d8		 fstp	 ST(0)

; 755  : 
; 756  : 		multiply_matrix3x3_vec3d (&direction, current_flight_dynamics->attitude, &direction);

  0038f	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  00392	50		 push	 eax
  00393	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00399	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0039f	51		 push	 ecx
  003a0	8d 55 e4	 lea	 edx, DWORD PTR _direction$[ebp]
  003a3	52		 push	 edx
  003a4	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 757  : 
; 758  : 		size = get_3d_vector_magnitude (&current_flight_dynamics->model_acceleration_vector);

  003a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003ae	05 48 1c 00 00	 add	 eax, 7240		; 00001c48H
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  003b9	d9 5d fc	 fstp	 DWORD PTR _size$[ebp]

; 759  : 
; 760  : 		size = bound (size, -4.0, 4.0);

  003bc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _size$[ebp]
  003c1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c010000000000000
  003c9	66 0f 2f c8	 comisd	 xmm1, xmm0
  003cd	76 12		 jbe	 SHORT $LN19@draw_dynam
  003cf	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c010000000000000
  003d7	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv233[ebp], xmm0
  003df	eb 3e		 jmp	 SHORT $LN20@draw_dynam
$LN19@draw_dynam:
  003e1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _size$[ebp]
  003e6	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4010000000000000
  003ee	76 12		 jbe	 SHORT $LN17@draw_dynam
  003f0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4010000000000000
  003f8	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv232[ebp], xmm0
  00400	eb 0d		 jmp	 SHORT $LN18@draw_dynam
$LN17@draw_dynam:
  00402	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _size$[ebp]
  00407	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv232[ebp], xmm0
$LN18@draw_dynam:
  0040f	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv232[ebp]
  00417	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv233[ebp], xmm0
$LN20@draw_dynam:
  0041f	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv233[ebp]
  00427	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 761  : 
; 762  : 		pos.x = current_flight_dynamics->position.x;

  0042c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00431	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  00439	f3 0f 11 45 f0	 movss	 DWORD PTR _pos$[ebp], xmm0

; 763  : 		pos.y = current_flight_dynamics->position.y;

  0043e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00443	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  0044b	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 764  : 		pos.z = current_flight_dynamics->position.z;

  00450	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00455	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  0045d	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 765  : 
; 766  : 		pos.y += 2.0;

  00462	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+4]
  00467	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  0046f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00473	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0
$LN8@draw_dynam:

; 767  : 
; 768  : //		create_vectored_debug_3d_object (&pos, &direction, OBJECT_3D_ARROW_FORCES, 0, size);
; 769  : 	}
; 770  : 
; 771  : 	// motion vector
; 772  : 
; 773  : 	direction = current_flight_dynamics->world_motion_vector;

  00478	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0047d	05 3c 1c 00 00	 add	 eax, 7228		; 00001c3cH
  00482	8b 08		 mov	 ecx, DWORD PTR [eax]
  00484	89 4d e4	 mov	 DWORD PTR _direction$[ebp], ecx
  00487	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0048a	89 55 e8	 mov	 DWORD PTR _direction$[ebp+4], edx
  0048d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00490	89 45 ec	 mov	 DWORD PTR _direction$[ebp+8], eax

; 774  : 
; 775  : 	if (!check_zero_3d_vector (&direction))

  00493	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  00496	50		 push	 eax
  00497	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  0049c	dd 9d 68 ff ff
	ff		 fstp	 QWORD PTR tv399[ebp]
  004a2	f2 0f 10 85 68
	ff ff ff	 movsd	 xmm0, QWORD PTR tv399[ebp]
  004aa	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  004b2	9f		 lahf
  004b3	f6 c4 44	 test	 ah, 68			; 00000044H
  004b6	0f 8b da 00 00
	00		 jnp	 $LN9@draw_dynam

; 776  : 	{
; 777  : 
; 778  : 		normalise_any_3d_vector (&direction);

  004bc	8d 45 e4	 lea	 eax, DWORD PTR _direction$[ebp]
  004bf	50		 push	 eax
  004c0	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  004c5	dd d8		 fstp	 ST(0)

; 779  : 
; 780  : 		size = get_3d_vector_magnitude (&current_flight_dynamics->world_motion_vector);

  004c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004cc	05 3c 1c 00 00	 add	 eax, 7228		; 00001c3cH
  004d1	50		 push	 eax
  004d2	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  004d7	d9 5d fc	 fstp	 DWORD PTR _size$[ebp]

; 781  : 
; 782  : 		size = bound (size, -4.0, 4.0);

  004da	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _size$[ebp]
  004df	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c010000000000000
  004e7	66 0f 2f c8	 comisd	 xmm1, xmm0
  004eb	76 12		 jbe	 SHORT $LN23@draw_dynam
  004ed	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c010000000000000
  004f5	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv263[ebp], xmm0
  004fd	eb 3e		 jmp	 SHORT $LN24@draw_dynam
$LN23@draw_dynam:
  004ff	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _size$[ebp]
  00504	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4010000000000000
  0050c	76 12		 jbe	 SHORT $LN21@draw_dynam
  0050e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4010000000000000
  00516	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv262[ebp], xmm0
  0051e	eb 0d		 jmp	 SHORT $LN22@draw_dynam
$LN21@draw_dynam:
  00520	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _size$[ebp]
  00525	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv262[ebp], xmm0
$LN22@draw_dynam:
  0052d	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv262[ebp]
  00535	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv263[ebp], xmm0
$LN24@draw_dynam:
  0053d	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv263[ebp]
  00545	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 783  : 
; 784  : 		pos.x = current_flight_dynamics->position.x;

  0054a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0054f	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  00557	f3 0f 11 45 f0	 movss	 DWORD PTR _pos$[ebp], xmm0

; 785  : 		pos.y = current_flight_dynamics->position.y;

  0055c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00561	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  00569	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 786  : 		pos.z = current_flight_dynamics->position.z;

  0056e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00573	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  0057b	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 787  : 
; 788  : 		pos.y += 2.0;

  00580	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+4]
  00585	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  0058d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00591	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0
$LN9@draw_dynam:

; 789  : 
; 790  : //		create_vectored_debug_3d_object (&pos, &direction, OBJECT_3D_ARROW_MOVEMENT, 0, size);
; 791  : 	}
; 792  : 
; 793  : 	// motion line
; 794  : 
; 795  : 	old_position.y += 2.0;

  00596	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _old_position$[ebp+4]
  0059b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  005a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a7	f3 0f 11 45 b8	 movss	 DWORD PTR _old_position$[ebp+4], xmm0
$LN1@draw_dynam:

; 796  : 
; 797  : //	create_debug_3d_line (&old_position, &pos, sys_col_yellow, 20.0);
; 798  : }

  005ac	5f		 pop	 edi
  005ad	5e		 pop	 esi
  005ae	5b		 pop	 ebx
  005af	8b e5		 mov	 esp, ebp
  005b1	5d		 pop	 ebp
  005b2	c3		 ret	 0
?draw_dynamic_forces@@YGXXZ ENDP			; draw_dynamic_forces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?resolve_dynamic_forces@@YGXXZ
_TEXT	SEGMENT
tv627 = -264						; size = 8
tv585 = -264						; size = 8
tv1071 = -256						; size = 8
tv797 = -256						; size = 4
tv628 = -256						; size = 8
tv586 = -256						; size = 8
tv790 = -252						; size = 4
tv434 = -252						; size = 4
tv75 = -252						; size = 4
$T1 = -248						; size = 4
_look_ahead_position$2 = -180				; size = 12
_delta_altitude$3 = -168				; size = 4
_look_ahead_distance$4 = -164				; size = 4
_i$5 = -160						; size = 4
_i$6 = -156						; size = 4
_pitch$ = -152						; size = 4
_heading$ = -148					; size = 4
_roll$ = -144						; size = 4
_result$ = -140						; size = 12
_test_point$ = -128					; size = 12
_resultant_z_axis$ = -116				; size = 4
_resultant_y_axis$ = -112				; size = 4
_resultant_x_axis$ = -108				; size = 4
_resultant_vertically$ = -104				; size = 4
_resultant_horizontally$ = -100				; size = 4
_resultant_laterally$ = -96				; size = 4
_moment_z$ = -92					; size = 4
_moment_y$ = -88					; size = 4
_moment_x$ = -84					; size = 4
_force$ = -80						; size = 4
_attitude$ = -76					; size = 36
_delta_attitude$ = -40					; size = 36
_index$ = -4						; size = 4
?resolve_dynamic_forces@@YGXXZ PROC			; resolve_dynamic_forces, COMDAT

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 351  : 
; 352  : 	int
; 353  : 		index;
; 354  : 
; 355  :    matrix3x3
; 356  :       delta_attitude,
; 357  :       attitude;
; 358  : 
; 359  :    float
; 360  :       force,
; 361  : 		moment_x,
; 362  : 		moment_y,
; 363  : 		moment_z,
; 364  :       resultant_laterally,
; 365  :       resultant_horizontally,
; 366  :       resultant_vertically,
; 367  :       resultant_x_axis,
; 368  :       resultant_y_axis,
; 369  :       resultant_z_axis;
; 370  : 
; 371  :    vec3d
; 372  : 		test_point,
; 373  : 		result;
; 374  : 
; 375  :    float
; 376  :       roll,
; 377  :       heading,
; 378  :       pitch;
; 379  : 
; 380  :    ASSERT(get_gunship_entity());

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	75 18		 jne	 SHORT $LN10@resolve_dy
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??resolve_dynamic_forces@@YGXXZ@4JA
  0001a	83 c0 1e	 add	 eax, 30			; 0000001eH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FHEFHDHP@get_gunship_entity?$CI?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@resolve_dy:

; 381  :    get_local_entity_attitude_matrix (get_gunship_entity (), attitude);

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00034	74 0f		 je	 SHORT $LN37@resolve_dy
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 8d 04 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00043	eb 24		 jmp	 SHORT $LN38@resolve_dy
$LN37@resolve_dy:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??resolve_dynamic_forces@@YGXXZ@4JA
  0004b	83 c2 1f	 add	 edx, 31			; 0000001fH
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN38@resolve_dy:
  00069	8d 4d b4	 lea	 ecx, DWORD PTR _attitude$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00073	52		 push	 edx
  00074	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR tv75[ebp]
  0007a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00081	ff d1		 call	 ecx

; 382  : 
; 383  :    // get heading, pitch, and roll
; 384  : 
; 385  :    heading = atan2 (attitude [2][0], attitude [2][2]);

  00083	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00088	d1 e0		 shl	 eax, 1
  0008a	8d 4c 05 b4	 lea	 ecx, DWORD PTR _attitude$[ebp+eax]
  0008e	ba 04 00 00 00	 mov	 edx, 4
  00093	d1 e2		 shl	 edx, 1
  00095	51		 push	 ecx
  00096	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0009b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a5	d1 e0		 shl	 eax, 1
  000a7	8d 4c 05 b4	 lea	 ecx, DWORD PTR _attitude$[ebp+eax]
  000ab	ba 04 00 00 00	 mov	 edx, 4
  000b0	6b c2 00	 imul	 eax, edx, 0
  000b3	51		 push	 ecx
  000b4	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  000b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000be	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  000c3	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR _heading$[ebp]

; 386  : 
; 387  :    pitch = asin (attitude [2][1]);

  000c9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ce	d1 e0		 shl	 eax, 1
  000d0	8d 4c 05 b4	 lea	 ecx, DWORD PTR _attitude$[ebp+eax]
  000d4	ba 04 00 00 00	 mov	 edx, 4
  000d9	c1 e2 00	 shl	 edx, 0
  000dc	51		 push	 ecx
  000dd	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  000e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e7	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  000ec	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR _pitch$[ebp]

; 388  : 
; 389  :    roll = atan2 (-attitude [0][1], attitude [1][1]);

  000f2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f7	c1 e0 00	 shl	 eax, 0
  000fa	8d 4c 05 b4	 lea	 ecx, DWORD PTR _attitude$[ebp+eax]
  000fe	ba 04 00 00 00	 mov	 edx, 4
  00103	c1 e2 00	 shl	 edx, 0
  00106	51		 push	 ecx
  00107	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0010c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00111	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00116	6b c8 00	 imul	 ecx, eax, 0
  00119	8d 54 0d b4	 lea	 edx, DWORD PTR _attitude$[ebp+ecx]
  0011d	b8 04 00 00 00	 mov	 eax, 4
  00122	c1 e0 00	 shl	 eax, 0
  00125	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0012a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00131	51		 push	 ecx
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0013c	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR _roll$[ebp]

; 390  : 
; 391  :    current_flight_dynamics->heading.value = heading;

  00142	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00147	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0014f	f3 0f 11 80 8c
	21 00 00	 movss	 DWORD PTR [eax+8588], xmm0

; 392  :    current_flight_dynamics->heading.delta = 0.0;;

  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0015c	0f 57 c0	 xorps	 xmm0, xmm0
  0015f	f3 0f 11 80 90
	21 00 00	 movss	 DWORD PTR [eax+8592], xmm0

; 393  : 
; 394  :    current_flight_dynamics->pitch.value = pitch;

  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0016c	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00174	f3 0f 11 80 5c
	21 00 00	 movss	 DWORD PTR [eax+8540], xmm0

; 395  :    current_flight_dynamics->pitch.delta = 0.0;;

  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00181	0f 57 c0	 xorps	 xmm0, xmm0
  00184	f3 0f 11 80 60
	21 00 00	 movss	 DWORD PTR [eax+8544], xmm0

; 396  : 
; 397  :    current_flight_dynamics->roll.value = roll;

  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00191	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _roll$[ebp]
  00199	f3 0f 11 80 74
	21 00 00	 movss	 DWORD PTR [eax+8564], xmm0

; 398  :    current_flight_dynamics->roll.delta = 0.0;;

  001a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a6	0f 57 c0	 xorps	 xmm0, xmm0
  001a9	f3 0f 11 80 78
	21 00 00	 movss	 DWORD PTR [eax+8568], xmm0

; 399  : 
; 400  :    ///////////////////////////////////////////////////////////////
; 401  :    // Calculate zero moment position
; 402  :    ///////////////////////////////////////////////////////////////
; 403  : 
; 404  : 	force = 0;

  001b1	0f 57 c0	 xorps	 xmm0, xmm0
  001b4	f3 0f 11 45 b0	 movss	 DWORD PTR _force$[ebp], xmm0

; 405  : 	moment_x = 0;

  001b9	0f 57 c0	 xorps	 xmm0, xmm0
  001bc	f3 0f 11 45 ac	 movss	 DWORD PTR _moment_x$[ebp], xmm0

; 406  : 	moment_y = 0;

  001c1	0f 57 c0	 xorps	 xmm0, xmm0
  001c4	f3 0f 11 45 a8	 movss	 DWORD PTR _moment_y$[ebp], xmm0

; 407  : 	moment_z = 0;

  001c9	0f 57 c0	 xorps	 xmm0, xmm0
  001cc	f3 0f 11 45 a4	 movss	 DWORD PTR _moment_z$[ebp], xmm0

; 408  : 
; 409  : 	for (index = 0; index < current_flight_dynamics->max_number_of_dynamic_forces; index ++)

  001d1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
  001d8	eb 09		 jmp	 SHORT $LN4@resolve_dy
$LN2@resolve_dy:
  001da	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  001dd	83 c0 01	 add	 eax, 1
  001e0	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax
$LN4@resolve_dy:
  001e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e8	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  001eb	3b 88 d4 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9428]
  001f1	0f 8d d0 01 00
	00		 jge	 $LN3@resolve_dy

; 410  : 	{
; 411  : 
; 412  : 		if (current_flight_dynamics->dynamic_forces [index].valid)

  001f7	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  001fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00201	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00207	0f b7 44 02 24	 movzx	 eax, WORD PTR [edx+eax+36]
  0020c	85 c0		 test	 eax, eax
  0020e	0f 84 ae 01 00
	00		 je	 $LN11@resolve_dy

; 413  : 		{
; 414  : 
; 415  : 			moment_x += (current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].position.z * current_flight_dynamics->dynamic_forces [index].direction.y) -

  00214	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00218	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0021e	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00224	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  00228	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0022e	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  00234	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  0023a	f3 0f 59 44 0e
	14		 mulss	 xmm0, DWORD PTR [esi+ecx+20]
  00240	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  00244	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00249	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  0024f	f3 0f 59 44 11
	04		 mulss	 xmm0, DWORD PTR [ecx+edx+4]
  00255	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  00259	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0025e	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  00264	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00268	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0026e	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  00274	f3 0f 10 4c 11
	1c		 movss	 xmm1, DWORD PTR [ecx+edx+28]
  0027a	f3 0f 59 4c 06
	10		 mulss	 xmm1, DWORD PTR [esi+eax+16]
  00280	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  00284	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0028a	8b 82 e0 24 00
	00		 mov	 eax, DWORD PTR [edx+9440]
  00290	f3 0f 59 4c 08
	08		 mulss	 xmm1, DWORD PTR [eax+ecx+8]
  00296	f3 0f 5c c1	 subss	 xmm0, xmm1
  0029a	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _moment_x$[ebp]
  0029f	f3 0f 11 45 ac	 movss	 DWORD PTR _moment_x$[ebp], xmm0

; 416  : 							(current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].position.y * current_flight_dynamics->dynamic_forces [index].direction.z);
; 417  : 
; 418  : 			moment_y += (current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].position.z * current_flight_dynamics->dynamic_forces [index].direction.x) -

  002a4	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  002a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ae	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  002b4	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  002b8	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002be	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  002c4	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  002ca	f3 0f 59 44 0e
	14		 mulss	 xmm0, DWORD PTR [esi+ecx+20]
  002d0	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  002d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d9	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  002df	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  002e4	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  002e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ed	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  002f3	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  002f7	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002fd	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  00303	f3 0f 10 4c 11
	1c		 movss	 xmm1, DWORD PTR [ecx+edx+28]
  00309	f3 0f 59 4c 06
	0c		 mulss	 xmm1, DWORD PTR [esi+eax+12]
  0030f	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  00313	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00319	8b 82 e0 24 00
	00		 mov	 eax, DWORD PTR [edx+9440]
  0031f	f3 0f 59 4c 08
	08		 mulss	 xmm1, DWORD PTR [eax+ecx+8]
  00325	f3 0f 5c c1	 subss	 xmm0, xmm1
  00329	f3 0f 58 45 a8	 addss	 xmm0, DWORD PTR _moment_y$[ebp]
  0032e	f3 0f 11 45 a8	 movss	 DWORD PTR _moment_y$[ebp], xmm0

; 419  : 							(current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].position.x * current_flight_dynamics->dynamic_forces [index].direction.z);
; 420  : 
; 421  : 			moment_z += (current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].position.x * current_flight_dynamics->dynamic_forces [index].direction.y) -

  00333	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00337	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0033d	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00343	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  00347	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0034d	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  00353	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  00359	f3 0f 59 44 0e
	0c		 mulss	 xmm0, DWORD PTR [esi+ecx+12]
  0035f	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  00363	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00368	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  0036e	f3 0f 59 44 11
	04		 mulss	 xmm0, DWORD PTR [ecx+edx+4]
  00374	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  00378	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0037d	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  00383	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00387	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0038d	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  00393	f3 0f 10 4c 11
	1c		 movss	 xmm1, DWORD PTR [ecx+edx+28]
  00399	f3 0f 59 4c 06
	10		 mulss	 xmm1, DWORD PTR [esi+eax+16]
  0039f	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  003a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003a9	8b 82 e0 24 00
	00		 mov	 eax, DWORD PTR [edx+9440]
  003af	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  003b4	f3 0f 5c c1	 subss	 xmm0, xmm1
  003b8	f3 0f 58 45 a4	 addss	 xmm0, DWORD PTR _moment_z$[ebp]
  003bd	f3 0f 11 45 a4	 movss	 DWORD PTR _moment_z$[ebp], xmm0
$LN11@resolve_dy:

; 422  : 							(current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].position.y * current_flight_dynamics->dynamic_forces [index].direction.x);
; 423  : 		}
; 424  : 	}

  003c2	e9 13 fe ff ff	 jmp	 $LN2@resolve_dy
$LN3@resolve_dy:

; 425  : 
; 426  : 	if (force)

  003c7	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _force$[ebp]
  003cc	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  003d3	9f		 lahf
  003d4	f6 c4 44	 test	 ah, 68			; 00000044H
  003d7	7b 47		 jnp	 SHORT $LN12@resolve_dy

; 427  : 	{
; 428  : 
; 429  : 		current_flight_dynamics->rotation_origin.x = moment_x / force;

  003d9	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _moment_x$[ebp]
  003de	f3 0f 5e 45 b0	 divss	 xmm0, DWORD PTR _force$[ebp]
  003e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003e8	f3 0f 11 80 c4
	00 00 00	 movss	 DWORD PTR [eax+196], xmm0

; 430  : 		current_flight_dynamics->rotation_origin.y = moment_y / force;

  003f0	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _moment_y$[ebp]
  003f5	f3 0f 5e 45 b0	 divss	 xmm0, DWORD PTR _force$[ebp]
  003fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003ff	f3 0f 11 80 c8
	00 00 00	 movss	 DWORD PTR [eax+200], xmm0

; 431  : 		current_flight_dynamics->rotation_origin.z = moment_z / force;

  00407	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _moment_z$[ebp]
  0040c	f3 0f 5e 45 b0	 divss	 xmm0, DWORD PTR _force$[ebp]
  00411	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00416	f3 0f 11 80 cc
	00 00 00	 movss	 DWORD PTR [eax+204], xmm0

; 432  : 	}
; 433  : 	else

  0041e	eb 30		 jmp	 SHORT $LN13@resolve_dy
$LN12@resolve_dy:

; 434  : 	{
; 435  : 
; 436  : 		current_flight_dynamics->rotation_origin.x = 0.0;

  00420	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00425	0f 57 c0	 xorps	 xmm0, xmm0
  00428	f3 0f 11 80 c4
	00 00 00	 movss	 DWORD PTR [eax+196], xmm0

; 437  : 		current_flight_dynamics->rotation_origin.y = 0.0;

  00430	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00435	0f 57 c0	 xorps	 xmm0, xmm0
  00438	f3 0f 11 80 c8
	00 00 00	 movss	 DWORD PTR [eax+200], xmm0

; 438  : 		current_flight_dynamics->rotation_origin.z = 0.0;

  00440	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00445	0f 57 c0	 xorps	 xmm0, xmm0
  00448	f3 0f 11 80 cc
	00 00 00	 movss	 DWORD PTR [eax+204], xmm0
$LN13@resolve_dy:

; 439  : 	}
; 440  : 
; 441  :    ////////////////////////////////////////////////////////////////////////
; 442  : 
; 443  : 	resolve_moments (current_flight_dynamics->rotation_origin.x, current_flight_dynamics->rotation_origin.y, current_flight_dynamics->rotation_origin.z, &resultant_x_axis, &resultant_y_axis, &resultant_z_axis);

  00450	8d 45 8c	 lea	 eax, DWORD PTR _resultant_z_axis$[ebp]
  00453	50		 push	 eax
  00454	8d 4d 90	 lea	 ecx, DWORD PTR _resultant_y_axis$[ebp]
  00457	51		 push	 ecx
  00458	8d 55 94	 lea	 edx, DWORD PTR _resultant_x_axis$[ebp]
  0045b	52		 push	 edx
  0045c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00461	51		 push	 ecx
  00462	f3 0f 10 80 cc
	00 00 00	 movss	 xmm0, DWORD PTR [eax+204]
  0046a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00475	51		 push	 ecx
  00476	f3 0f 10 81 c8
	00 00 00	 movss	 xmm0, DWORD PTR [ecx+200]
  0047e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00483	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00489	51		 push	 ecx
  0048a	f3 0f 10 82 c4
	00 00 00	 movss	 xmm0, DWORD PTR [edx+196]
  00492	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00497	e8 00 00 00 00	 call	 ?resolve_moments@@YGXMMMPAM00@Z ; resolve_moments

; 444  : 
; 445  :    ////////////////////////////////////////////////////////////////////////
; 446  : 
; 447  :    //
; 448  :    // Pitch: Resolve X Axis (clockwise)
; 449  :    //
; 450  : 
; 451  :    current_flight_dynamics->angular_pitch_acceleration.value = resultant_x_axis;

  0049c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004a1	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _resultant_x_axis$[ebp]
  004a6	f3 0f 11 80 24
	23 00 00	 movss	 DWORD PTR [eax+8996], xmm0

; 452  : 
; 453  :    current_flight_dynamics->angular_pitch_velocity.value += current_flight_dynamics->angular_pitch_acceleration.value * get_model_delta_time ();

  004ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004b9	f3 0f 10 80 24
	23 00 00	 movss	 xmm0, DWORD PTR [eax+8996]
  004c1	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  004c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004cf	f3 0f 58 82 6c
	23 00 00	 addss	 xmm0, DWORD PTR [edx+9068]
  004d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004dc	f3 0f 11 80 6c
	23 00 00	 movss	 DWORD PTR [eax+9068], xmm0

; 454  : 
; 455  :    current_flight_dynamics->pitch.delta = current_flight_dynamics->angular_pitch_velocity.value * get_model_delta_time ();

  004e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004ef	f3 0f 10 80 6c
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9068]
  004f7	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  004ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00505	f3 0f 11 82 60
	21 00 00	 movss	 DWORD PTR [edx+8544], xmm0

; 456  : 
; 457  :    ////////////////////////////////////////////////////////////////////////
; 458  : 
; 459  :    //
; 460  :    // Roll: Resolve Z Axis (clockwise)
; 461  :    //
; 462  : 
; 463  :    current_flight_dynamics->angular_roll_acceleration.value = resultant_z_axis;

  0050d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00512	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _resultant_z_axis$[ebp]
  00517	f3 0f 11 80 3c
	23 00 00	 movss	 DWORD PTR [eax+9020], xmm0

; 464  : 
; 465  :    current_flight_dynamics->angular_roll_velocity.value -= current_flight_dynamics->angular_roll_acceleration.value * get_model_delta_time ();

  0051f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00524	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0052a	f3 0f 10 80 3c
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9020]
  00532	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  0053a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00540	f3 0f 10 8a 84
	23 00 00	 movss	 xmm1, DWORD PTR [edx+9092]
  00548	f3 0f 5c c8	 subss	 xmm1, xmm0
  0054c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00551	f3 0f 11 88 84
	23 00 00	 movss	 DWORD PTR [eax+9092], xmm1

; 466  : 
; 467  :    current_flight_dynamics->roll.delta = current_flight_dynamics->angular_roll_velocity.value * get_model_delta_time ();

  00559	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0055e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00564	f3 0f 10 80 84
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9092]
  0056c	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  00574	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0057a	f3 0f 11 82 78
	21 00 00	 movss	 DWORD PTR [edx+8568], xmm0

; 468  : 
; 469  :    ////////////////////////////////////////////////////////////////////////
; 470  : 
; 471  :    //
; 472  :    // Heading: Resolve Y Axis (clockwise)
; 473  :    //
; 474  : 
; 475  : 	//if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))
; 476  : 	{
; 477  : 
; 478  : 		current_flight_dynamics->angular_heading_acceleration.value = resultant_y_axis;

  00582	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00587	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _resultant_y_axis$[ebp]
  0058c	f3 0f 11 80 0c
	23 00 00	 movss	 DWORD PTR [eax+8972], xmm0

; 479  : 
; 480  : 		current_flight_dynamics->angular_heading_velocity.value -= current_flight_dynamics->angular_heading_acceleration.value * get_model_delta_time ();

  00594	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00599	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0059f	f3 0f 10 80 0c
	23 00 00	 movss	 xmm0, DWORD PTR [eax+8972]
  005a7	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  005af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005b5	f3 0f 10 8a 54
	23 00 00	 movss	 xmm1, DWORD PTR [edx+9044]
  005bd	f3 0f 5c c8	 subss	 xmm1, xmm0
  005c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005c6	f3 0f 11 88 54
	23 00 00	 movss	 DWORD PTR [eax+9044], xmm1

; 481  : 
; 482  : 		current_flight_dynamics->heading.delta = current_flight_dynamics->angular_heading_velocity.value * get_model_delta_time ();

  005ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005d9	f3 0f 10 80 54
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9044]
  005e1	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  005e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005ef	f3 0f 11 82 90
	21 00 00	 movss	 DWORD PTR [edx+8592], xmm0

; 483  : 	}
; 484  : 
; 485  :    ////////////////////////////////////////////////////////////////////////
; 486  : 
; 487  :   	get_3d_transformation_matrix (delta_attitude, -current_flight_dynamics->heading.delta, current_flight_dynamics->pitch.delta, current_flight_dynamics->roll.delta);

  005f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005fc	51		 push	 ecx
  005fd	f3 0f 10 80 78
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8568]
  00605	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00610	51		 push	 ecx
  00611	f3 0f 10 81 60
	21 00 00	 movss	 xmm0, DWORD PTR [ecx+8544]
  00619	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00624	f3 0f 10 82 90
	21 00 00	 movss	 xmm0, DWORD PTR [edx+8592]
  0062c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00633	51		 push	 ecx
  00634	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00639	8d 45 d8	 lea	 eax, DWORD PTR _delta_attitude$[ebp]
  0063c	50		 push	 eax
  0063d	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 488  : 
; 489  : 	multiply_matrix3x3_vec3d (&test_point, current_flight_dynamics->attitude, &current_flight_dynamics->rotation_origin);

  00642	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00647	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  0064c	50		 push	 eax
  0064d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00653	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  00659	51		 push	 ecx
  0065a	8d 55 80	 lea	 edx, DWORD PTR _test_point$[ebp]
  0065d	52		 push	 edx
  0065e	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 490  : 
; 491  : 	multiply_matrix3x3_matrix3x3 (current_flight_dynamics->attitude, delta_attitude, attitude);

  00663	8d 45 b4	 lea	 eax, DWORD PTR _attitude$[ebp]
  00666	50		 push	 eax
  00667	8d 4d d8	 lea	 ecx, DWORD PTR _delta_attitude$[ebp]
  0066a	51		 push	 ecx
  0066b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00671	81 c2 d0 00 00
	00		 add	 edx, 208		; 000000d0H
  00677	52		 push	 edx
  00678	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 492  : 
; 493  : 	multiply_matrix3x3_vec3d (&result, current_flight_dynamics->attitude, &current_flight_dynamics->rotation_origin);

  0067d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00682	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  00687	50		 push	 eax
  00688	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0068e	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  00694	51		 push	 ecx
  00695	8d 95 74 ff ff
	ff		 lea	 edx, DWORD PTR _result$[ebp]
  0069b	52		 push	 edx
  0069c	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 494  : 
; 495  : 	result.x -= test_point.x;

  006a1	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _result$[ebp]
  006a9	f3 0f 5c 45 80	 subss	 xmm0, DWORD PTR _test_point$[ebp]
  006ae	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _result$[ebp], xmm0

; 496  : 	result.y -= test_point.y;

  006b6	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _result$[ebp+4]
  006be	f3 0f 5c 45 84	 subss	 xmm0, DWORD PTR _test_point$[ebp+4]
  006c3	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _result$[ebp+4], xmm0

; 497  : 	result.z -= test_point.z;

  006cb	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _result$[ebp+8]
  006d3	f3 0f 5c 45 88	 subss	 xmm0, DWORD PTR _test_point$[ebp+8]
  006d8	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _result$[ebp+8], xmm0

; 498  : 
; 499  : 	current_flight_dynamics->position.x -= result.x;

  006e0	f3 0f 5a 85 74
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _result$[ebp]
  006e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006ed	f2 0f 10 88 ac
	00 00 00	 movsd	 xmm1, QWORD PTR [eax+172]
  006f5	f2 0f 5c c8	 subsd	 xmm1, xmm0
  006f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006ff	f2 0f 11 89 ac
	00 00 00	 movsd	 QWORD PTR [ecx+172], xmm1

; 500  : 	current_flight_dynamics->position.y -= result.y;

  00707	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _result$[ebp+4]
  0070f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00714	f2 0f 10 88 b4
	00 00 00	 movsd	 xmm1, QWORD PTR [eax+180]
  0071c	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00720	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00726	f2 0f 11 89 b4
	00 00 00	 movsd	 QWORD PTR [ecx+180], xmm1

; 501  : 	current_flight_dynamics->position.z -= result.z;

  0072e	f3 0f 5a 85 7c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _result$[ebp+8]
  00736	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0073b	f2 0f 10 88 bc
	00 00 00	 movsd	 xmm1, QWORD PTR [eax+188]
  00743	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00747	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0074d	f2 0f 11 89 bc
	00 00 00	 movsd	 QWORD PTR [ecx+188], xmm1

; 502  : 
; 503  :    ///////////////////////////////////////////////////////////////
; 504  :    // Linear forces
; 505  :    ///////////////////////////////////////////////////////////////
; 506  : 
; 507  :    //
; 508  :    // Resolve acceleration Horizontally, Verically and Laterally
; 509  :    //
; 510  : 
; 511  :    resultant_vertically = 0.0;

  00755	0f 57 c0	 xorps	 xmm0, xmm0
  00758	f3 0f 11 45 98	 movss	 DWORD PTR _resultant_vertically$[ebp], xmm0

; 512  :    resultant_horizontally = 0.0;

  0075d	0f 57 c0	 xorps	 xmm0, xmm0
  00760	f3 0f 11 45 9c	 movss	 DWORD PTR _resultant_horizontally$[ebp], xmm0

; 513  :    resultant_laterally = 0.0;

  00765	0f 57 c0	 xorps	 xmm0, xmm0
  00768	f3 0f 11 45 a0	 movss	 DWORD PTR _resultant_laterally$[ebp], xmm0

; 514  : 
; 515  : 	for (index = 0; index < current_flight_dynamics->max_number_of_dynamic_forces; index ++)

  0076d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
  00774	eb 09		 jmp	 SHORT $LN7@resolve_dy
$LN5@resolve_dy:
  00776	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00779	83 c0 01	 add	 eax, 1
  0077c	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax
$LN7@resolve_dy:
  0077f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00784	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  00787	3b 88 d4 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9428]
  0078d	0f 8d c3 00 00
	00		 jge	 $LN6@resolve_dy

; 516  : 	{
; 517  : 
; 518  : 		if (current_flight_dynamics->dynamic_forces [index].valid)

  00793	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00797	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0079d	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  007a3	0f b7 44 02 24	 movzx	 eax, WORD PTR [edx+eax+36]
  007a8	85 c0		 test	 eax, eax
  007aa	0f 84 a1 00 00
	00		 je	 $LN14@resolve_dy

; 519  : 		{
; 520  : 
; 521  : 			resultant_vertically += (current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].direction.y);

  007b0	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  007b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007ba	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  007c0	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  007c4	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007ca	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  007d0	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  007d6	f3 0f 59 44 0e
	04		 mulss	 xmm0, DWORD PTR [esi+ecx+4]
  007dc	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR _resultant_vertically$[ebp]
  007e1	f3 0f 11 45 98	 movss	 DWORD PTR _resultant_vertically$[ebp], xmm0

; 522  : 
; 523  : 			resultant_horizontally += (current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].direction.z);

  007e6	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  007ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007f0	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  007f6	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  007fa	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00800	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  00806	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  0080c	f3 0f 59 44 0e
	08		 mulss	 xmm0, DWORD PTR [esi+ecx+8]
  00812	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _resultant_horizontally$[ebp]
  00817	f3 0f 11 45 9c	 movss	 DWORD PTR _resultant_horizontally$[ebp], xmm0

; 524  : 
; 525  : 			resultant_laterally += (current_flight_dynamics->dynamic_forces [index].linear_force * current_flight_dynamics->dynamic_forces [index].direction.x);

  0081c	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00820	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00826	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0082c	6b 4d fc 28	 imul	 ecx, DWORD PTR _index$[ebp], 40
  00830	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00836	8b b6 e0 24 00
	00		 mov	 esi, DWORD PTR [esi+9440]
  0083c	f3 0f 10 44 02
	1c		 movss	 xmm0, DWORD PTR [edx+eax+28]
  00842	f3 0f 59 04 0e	 mulss	 xmm0, DWORD PTR [esi+ecx]
  00847	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _resultant_laterally$[ebp]
  0084c	f3 0f 11 45 a0	 movss	 DWORD PTR _resultant_laterally$[ebp], xmm0
$LN14@resolve_dy:

; 526  : 		}
; 527  :    }

  00851	e9 20 ff ff ff	 jmp	 $LN5@resolve_dy
$LN6@resolve_dy:

; 528  : 
; 529  :    ///////////////////////////////////////////////////////////////
; 530  : 	// Auto hover calculations
; 531  :    ///////////////////////////////////////////////////////////////
; 532  : 	{
; 533  : 
; 534  : 		switch (current_flight_dynamics->auto_hover)

  00856	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0085b	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00861	c1 e9 07	 shr	 ecx, 7
  00864	83 e1 07	 and	 ecx, 7
  00867	89 8d 04 ff ff
	ff		 mov	 DWORD PTR tv434[ebp], ecx
  0086d	0f 86 ff 07 00
	00		 jbe	 $LN33@resolve_dy
  00873	83 bd 04 ff ff
	ff 02		 cmp	 DWORD PTR tv434[ebp], 2
  0087a	76 12		 jbe	 SHORT $LN15@resolve_dy
  0087c	83 bd 04 ff ff
	ff 03		 cmp	 DWORD PTR tv434[ebp], 3
  00883	0f 84 4f 05 00
	00		 je	 $LN30@resolve_dy
  00889	e9 e4 07 00 00	 jmp	 $LN33@resolve_dy
$LN15@resolve_dy:

; 535  : 		{
; 536  : 
; 537  : 			case HOVER_HOLD_NORMAL:
; 538  : 			case HOVER_HOLD_STABLE:
; 539  : 			{
; 540  : 
; 541  : 				float
; 542  : 					i = 4.0;

  0088e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  00896	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _i$6[ebp], xmm0

; 543  :         
; 544  : 				//
; 545  : 				// adjust collective accordingly
; 546  : 				//
; 547  :         
; 548  :         //ataribaby 4/1/2009 speedup Hover Hold altitude level
; 549  :         if(abs(current_flight_dynamics->velocity_y.value) > 2.0)

  0089e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008a3	51		 push	 ecx
  008a4	f3 0f 10 80 84
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8324]
  008ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b1	e8 00 00 00 00	 call	 ?abs@@YGMM@Z		; abs
  008b6	dd 9d 00 ff ff
	ff		 fstp	 QWORD PTR tv1071[ebp]
  008bc	f2 0f 10 85 00
	ff ff ff	 movsd	 xmm0, QWORD PTR tv1071[ebp]
  008c4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  008cc	0f 86 a3 01 00
	00		 jbe	 $LN16@resolve_dy

; 550  :         {
; 551  :           if (current_flight_dynamics->velocity_y.value < 0.0)

  008d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008d7	f3 0f 5a 80 84
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8324]
  008df	0f 57 c9	 xorps	 xmm1, xmm1
  008e2	66 0f 2f c8	 comisd	 xmm1, xmm0
  008e6	0f 86 bb 00 00
	00		 jbe	 $LN18@resolve_dy

; 552  :   				{
; 553  :   				  //ataribaby 4/1/2009 limit torque around 100%
; 554  :   				  if (current_flight_dynamics->world_acceleration_vector.y < 2.0 && current_flight_dynamics->combined_engine_torque.value <= 100.0)

  008ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008f1	f3 0f 5a 80 58
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7256]
  008f9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00901	66 0f 2f c8	 comisd	 xmm1, xmm0
  00905	76 5c		 jbe	 SHORT $LN20@resolve_dy
  00907	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0090c	f3 0f 5a 80 8c
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9356]
  00914	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  0091c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00920	72 41		 jb	 SHORT $LN20@resolve_dy

; 555  :               current_flight_dynamics->input_data.collective.value += i * get_delta_time() * 5.0;

  00922	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  0092a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00932	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00936	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0093e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00943	f3 0f 5a 88 a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7080]
  0094b	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0094f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00953	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00959	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0

; 556  :             else              

  00961	eb 3f		 jmp	 SHORT $LN21@resolve_dy
$LN20@resolve_dy:

; 557  :               current_flight_dynamics->input_data.collective.value -= i * get_delta_time() * 5.0;

  00963	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  0096b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00973	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00977	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0097f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00984	f3 0f 5a 88 a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7080]
  0098c	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00990	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00994	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0099a	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0
$LN21@resolve_dy:
  009a2	e9 c9 00 00 00	 jmp	 $LN24@resolve_dy
$LN18@resolve_dy:

; 558  :   				}
; 559  :   				else if (current_flight_dynamics->velocity_y.value > 0.0)

  009a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  009ac	f3 0f 5a 80 84
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8324]
  009b4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  009bc	0f 86 ae 00 00
	00		 jbe	 $LN24@resolve_dy

; 560  :   				{
; 561  :   				  //ataribaby 4/1/2009 limit torque around 100%
; 562  :   				  if (current_flight_dynamics->world_acceleration_vector.y > -2.0 || current_flight_dynamics->combined_engine_torque.value > 100.0)

  009c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  009c7	f3 0f 5a 80 58
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7256]
  009cf	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@c000000000000000
  009d7	77 17		 ja	 SHORT $LN25@resolve_dy
  009d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  009de	f3 0f 5a 80 8c
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9356]
  009e6	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  009ee	76 41		 jbe	 SHORT $LN23@resolve_dy
$LN25@resolve_dy:

; 563  :               current_flight_dynamics->input_data.collective.value -= i * get_delta_time() * 5.0;

  009f0	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  009f8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00a00	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a04	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00a0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a11	f3 0f 5a 88 a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7080]
  00a19	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00a1d	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00a21	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a27	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0

; 564  :             else

  00a2f	eb 3f		 jmp	 SHORT $LN24@resolve_dy
$LN23@resolve_dy:

; 565  :               current_flight_dynamics->input_data.collective.value += i * get_delta_time() * 5.0;              

  00a31	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  00a39	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00a41	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a45	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00a4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a52	f3 0f 5a 88 a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7080]
  00a5a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00a5e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00a62	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a68	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0
$LN24@resolve_dy:

; 566  :   				}
; 567  :         }
; 568  :         else

  00a70	e9 c6 00 00 00	 jmp	 $LN28@resolve_dy
$LN16@resolve_dy:

; 569  :         {
; 570  :   				if ((current_flight_dynamics->velocity_y.value < 0.0) && (resultant_vertically < 1.0) && current_flight_dynamics->combined_engine_torque.value <= 100.0)

  00a75	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a7a	f3 0f 5a 80 84
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8324]
  00a82	0f 57 c9	 xorps	 xmm1, xmm1
  00a85	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a89	76 5b		 jbe	 SHORT $LN26@resolve_dy
  00a8b	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _resultant_vertically$[ebp]
  00a90	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00a98	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a9c	76 48		 jbe	 SHORT $LN26@resolve_dy
  00a9e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00aa3	f3 0f 5a 80 8c
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9356]
  00aab	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00ab3	66 0f 2f c8	 comisd	 xmm1, xmm0
  00ab7	72 2d		 jb	 SHORT $LN26@resolve_dy

; 571  :   				{
; 572  :   					current_flight_dynamics->input_data.collective.value += i * get_delta_time();

  00ab9	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  00ac1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00ac9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ace	f3 0f 58 80 a8
	1b 00 00	 addss	 xmm0, DWORD PTR [eax+7080]
  00ad6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00adc	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0
  00ae4	eb 55		 jmp	 SHORT $LN28@resolve_dy
$LN26@resolve_dy:

; 573  :   				}
; 574  :   				else if ((current_flight_dynamics->velocity_y.value > 0.0) && (resultant_vertically > -1.0))

  00ae6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00aeb	f3 0f 5a 80 84
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8324]
  00af3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00afb	76 3e		 jbe	 SHORT $LN28@resolve_dy
  00afd	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _resultant_vertically$[ebp]
  00b02	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bff0000000000000
  00b0a	76 2f		 jbe	 SHORT $LN28@resolve_dy

; 575  :   				{
; 576  :   					current_flight_dynamics->input_data.collective.value -= i * get_delta_time();

  00b0c	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  00b14	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00b1c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b21	f3 0f 10 88 a8
	1b 00 00	 movss	 xmm1, DWORD PTR [eax+7080]
  00b29	f3 0f 5c c8	 subss	 xmm1, xmm0
  00b2d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b33	f3 0f 11 89 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm1
$LN28@resolve_dy:

; 577  :   				}
; 578  :         }
; 579  : 				//
; 580  : 				// wash velocity out to zero
; 581  : 				//
; 582  : 
; 583  : 
; 584  : 				// level out helicopter
; 585  : 				if (command_line_dynamics_flight_model >= 2)

  00b3b	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?command_line_dynamics_flight_model@@3HA, 2 ; command_line_dynamics_flight_model
  00b42	0f 8c f9 01 00
	00		 jl	 $LN29@resolve_dy

; 586  : 				{
; 587  : 					// level out pitch/yaw
; 588  : 					current_flight_dynamics->input_data.cyclic_x.value = bound(-current_flight_dynamics->roll.value / rad(10.0) * 100.0, current_flight_dynamics->input_data.cyclic_x.min, current_flight_dynamics->input_data.cyclic_x.max);

  00b48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b4d	f3 0f 10 80 74
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8564]
  00b55	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00b5c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00b60	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00b68	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00b70	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b76	f3 0f 5a 89 00
	01 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+256]
  00b7e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b82	76 1b		 jbe	 SHORT $LN41@resolve_dy
  00b84	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b8a	f3 0f 5a 82 00
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+256]
  00b92	f2 0f 11 85 00
	ff ff ff	 movsd	 QWORD PTR tv586[ebp], xmm0
  00b9a	e9 94 00 00 00	 jmp	 $LN42@resolve_dy
$LN41@resolve_dy:
  00b9f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ba4	f3 0f 10 80 74
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8564]
  00bac	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00bb3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00bb7	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00bbf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00bc7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00bcd	f3 0f 5a 89 04
	01 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+260]
  00bd5	66 0f 2f c1	 comisd	 xmm0, xmm1
  00bd9	76 18		 jbe	 SHORT $LN39@resolve_dy
  00bdb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00be1	f3 0f 5a 82 04
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+260]
  00be9	f2 0f 11 85 f8
	fe ff ff	 movsd	 QWORD PTR tv585[ebp], xmm0
  00bf1	eb 30		 jmp	 SHORT $LN40@resolve_dy
$LN39@resolve_dy:
  00bf3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00bf8	f3 0f 10 80 74
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8564]
  00c00	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00c07	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00c0b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00c13	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00c1b	f2 0f 11 85 f8
	fe ff ff	 movsd	 QWORD PTR tv585[ebp], xmm0
$LN40@resolve_dy:
  00c23	f2 0f 10 85 f8
	fe ff ff	 movsd	 xmm0, QWORD PTR tv585[ebp]
  00c2b	f2 0f 11 85 00
	ff ff ff	 movsd	 QWORD PTR tv586[ebp], xmm0
$LN42@resolve_dy:
  00c33	f2 0f 5a 85 00
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv586[ebp]
  00c3b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c41	f3 0f 11 81 f8
	00 00 00	 movss	 DWORD PTR [ecx+248], xmm0

; 589  : 					current_flight_dynamics->input_data.cyclic_y.value = bound((current_flight_dynamics->pitch.value - rad(5.0))/ rad(10.0) * 100.0, current_flight_dynamics->input_data.cyclic_y.min, current_flight_dynamics->input_data.cyclic_y.max);

  00c49	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c4e	f3 0f 5a 80 5c
	21 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8540]
  00c56	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb6571848000000
  00c5e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00c66	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00c6e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c74	f3 0f 5a 89 18
	01 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+280]
  00c7c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00c80	76 1b		 jbe	 SHORT $LN45@resolve_dy
  00c82	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c88	f3 0f 5a 82 18
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+280]
  00c90	f2 0f 11 85 00
	ff ff ff	 movsd	 QWORD PTR tv628[ebp], xmm0
  00c98	e9 8e 00 00 00	 jmp	 $LN46@resolve_dy
$LN45@resolve_dy:
  00c9d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ca2	f3 0f 5a 80 5c
	21 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8540]
  00caa	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb6571848000000
  00cb2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00cba	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00cc2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00cc8	f3 0f 5a 89 1c
	01 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+284]
  00cd0	66 0f 2f c1	 comisd	 xmm0, xmm1
  00cd4	76 18		 jbe	 SHORT $LN43@resolve_dy
  00cd6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00cdc	f3 0f 5a 82 1c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+284]
  00ce4	f2 0f 11 85 f8
	fe ff ff	 movsd	 QWORD PTR tv627[ebp], xmm0
  00cec	eb 2d		 jmp	 SHORT $LN44@resolve_dy
$LN43@resolve_dy:
  00cee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00cf3	f3 0f 5a 80 5c
	21 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8540]
  00cfb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb6571848000000
  00d03	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00d0b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00d13	f2 0f 11 85 f8
	fe ff ff	 movsd	 QWORD PTR tv627[ebp], xmm0
$LN44@resolve_dy:
  00d1b	f2 0f 10 85 f8
	fe ff ff	 movsd	 xmm0, QWORD PTR tv627[ebp]
  00d23	f2 0f 11 85 00
	ff ff ff	 movsd	 QWORD PTR tv628[ebp], xmm0
$LN46@resolve_dy:
  00d2b	f2 0f 5a 85 00
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv628[ebp]
  00d33	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d39	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0
$LN29@resolve_dy:

; 590  : 				}
; 591  : 
; 592  : 				current_flight_dynamics->model_acceleration_vector.x = -(10.0 * get_model_delta_time ()) * current_flight_dynamics->model_motion_vector.x;

  00d41	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d46	f3 0f 5a 80 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR [eax+144]
  00d4e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4024000000000000
  00d56	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  00d5d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d63	f3 0f 5a 89 30
	1c 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+7216]
  00d6b	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00d6f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d73	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d79	f3 0f 11 82 48
	1c 00 00	 movss	 DWORD PTR [edx+7240], xmm0

; 593  : 				current_flight_dynamics->model_acceleration_vector.y = resultant_vertically;

  00d81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d86	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _resultant_vertically$[ebp]
  00d8b	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 594  : 				current_flight_dynamics->model_acceleration_vector.z = -(10.0 * get_model_delta_time ()) * current_flight_dynamics->model_motion_vector.z;

  00d93	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d98	f3 0f 5a 80 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR [eax+144]
  00da0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4024000000000000
  00da8	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  00daf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00db5	f3 0f 5a 89 38
	1c 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+7224]
  00dbd	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00dc1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00dc5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00dcb	f3 0f 11 82 50
	1c 00 00	 movss	 DWORD PTR [edx+7248], xmm0

; 595  : 
; 596  : 				break;

  00dd3	e9 d0 02 00 00	 jmp	 $LN8@resolve_dy
$LN30@resolve_dy:

; 597  : 			}
; 598  : 			case HOVER_HOLD_ALTITUDE_LOCK:
; 599  : 			{
; 600  : 
; 601  : 				//
; 602  : 				// adjust collective accordingly
; 603  : 				//
; 604  : 
; 605  : 				float
; 606  : 					i = 4.0,

  00dd8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  00de0	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _i$5[ebp], xmm0

; 607  : 					look_ahead_distance,
; 608  : 					delta_altitude;
; 609  : 
; 610  : 				vec3d
; 611  : 					look_ahead_position;
; 612  : 
; 613  : 				look_ahead_distance = HELICOPTER_TERRAIN_FOLLOW_LOOKAHEAD_TIME * current_flight_dynamics->velocity_z.value;

  00de8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ded	f3 0f 5a 80 9c
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8348]
  00df5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00dfd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00e01	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _look_ahead_distance$4[ebp], xmm0

; 614  : 
; 615  : 				look_ahead_position.x = current_flight_dynamics->position.x;

  00e09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e0e	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  00e16	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _look_ahead_position$2[ebp], xmm0

; 616  : 				look_ahead_position.y = current_flight_dynamics->position.y;

  00e1e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e23	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  00e2b	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _look_ahead_position$2[ebp+4], xmm0

; 617  : 				look_ahead_position.z = current_flight_dynamics->position.z;

  00e33	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e38	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  00e40	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _look_ahead_position$2[ebp+8], xmm0

; 618  : 
; 619  : 				look_ahead_position.x += current_flight_dynamics->attitude [2][0] * look_ahead_distance;

  00e48	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e4d	d1 e0		 shl	 eax, 1
  00e4f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e55	8d 94 01 d0 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+208]
  00e5c	b8 04 00 00 00	 mov	 eax, 4
  00e61	6b c8 00	 imul	 ecx, eax, 0
  00e64	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00e69	f3 0f 59 85 5c
	ff ff ff	 mulss	 xmm0, DWORD PTR _look_ahead_distance$4[ebp]
  00e71	f3 0f 58 85 4c
	ff ff ff	 addss	 xmm0, DWORD PTR _look_ahead_position$2[ebp]
  00e79	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _look_ahead_position$2[ebp], xmm0

; 620  : 				look_ahead_position.z += current_flight_dynamics->attitude [2][2] * look_ahead_distance;

  00e81	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e86	d1 e0		 shl	 eax, 1
  00e88	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e8e	8d 94 01 d0 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+208]
  00e95	b8 04 00 00 00	 mov	 eax, 4
  00e9a	d1 e0		 shl	 eax, 1
  00e9c	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00ea1	f3 0f 59 85 5c
	ff ff ff	 mulss	 xmm0, DWORD PTR _look_ahead_distance$4[ebp]
  00ea9	f3 0f 58 85 54
	ff ff ff	 addss	 xmm0, DWORD PTR _look_ahead_position$2[ebp+8]
  00eb1	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _look_ahead_position$2[ebp+8], xmm0

; 621  : 
; 622  : 				look_ahead_position.y = get_3d_terrain_elevation (look_ahead_position.x, look_ahead_position.z);

  00eb9	6a 00		 push	 0
  00ebb	51		 push	 ecx
  00ebc	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _look_ahead_position$2[ebp+8]
  00ec4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ec9	51		 push	 ecx
  00eca	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _look_ahead_position$2[ebp]
  00ed2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ed7	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00edc	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR _look_ahead_position$2[ebp+4]

; 623  : 
; 624  : 				// take the highest point (either current_pos or look ahead point)
; 625  : 				look_ahead_position.y = max (look_ahead_position.y, current_flight_dynamics->altitude.min);

  00ee2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ee7	05 dc 21 00 00	 add	 eax, 8668		; 000021dcH
  00eec	50		 push	 eax
  00eed	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _look_ahead_position$2[ebp+4]
  00ef3	51		 push	 ecx
  00ef4	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00ef9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00efd	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _look_ahead_position$2[ebp+4], xmm0

; 626  : 
; 627  : 				// predicted altitude in 1 second
; 628  : 				delta_altitude = (current_flight_dynamics->altitude.value +

  00f05	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f0a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f10	f3 0f 10 80 40
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7232]
  00f18	f3 0f 58 81 58
	1c 00 00	 addss	 xmm0, DWORD PTR [ecx+7256]
  00f20	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f26	f3 0f 58 82 d4
	21 00 00	 addss	 xmm0, DWORD PTR [edx+8660]
  00f2e	f3 0f 5c 85 50
	ff ff ff	 subss	 xmm0, DWORD PTR _look_ahead_position$2[ebp+4]
  00f36	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _delta_altitude$3[ebp], xmm0

; 629  : 										(current_flight_dynamics->world_motion_vector.y + current_flight_dynamics->world_acceleration_vector.y)) -
; 630  : 										look_ahead_position.y;
; 631  : 
; 632  : 				// subtract altitude lock
; 633  : 				delta_altitude -= current_flight_dynamics->altitude.max;

  00f3e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f43	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_altitude$3[ebp]
  00f4b	f3 0f 5c 80 e0
	21 00 00	 subss	 xmm0, DWORD PTR [eax+8672]
  00f53	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _delta_altitude$3[ebp], xmm0

; 634  :         
; 635  :         //ataribaby 4/1/2009 limit torque around 100%
; 636  : 				if (delta_altitude < 0.0 && current_flight_dynamics->combined_engine_torque.value <= 100.0)

  00f5b	f3 0f 5a 85 58
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _delta_altitude$3[ebp]
  00f63	0f 57 c9	 xorps	 xmm1, xmm1
  00f66	66 0f 2f c8	 comisd	 xmm1, xmm0
  00f6a	0f 86 92 00 00
	00		 jbe	 $LN31@resolve_dy
  00f70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f75	f3 0f 5a 80 8c
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9356]
  00f7d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00f85	66 0f 2f c8	 comisd	 xmm1, xmm0
  00f89	72 77		 jb	 SHORT $LN31@resolve_dy

; 637  : 				{
; 638  : 
; 639  : 					i = min (i, -delta_altitude);

  00f8b	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_altitude$3[ebp]
  00f93	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00f9a	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00fa2	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00fa8	50		 push	 eax
  00fa9	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _i$5[ebp]
  00faf	51		 push	 ecx
  00fb0	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00fb5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00fb9	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _i$5[ebp], xmm0

; 640  : 
; 641  : 					current_flight_dynamics->input_data.collective.value += i * get_delta_time() * 5.0; //ataribaby 4/1/2009 speedup altitude level hold

  00fc1	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _i$5[ebp]
  00fc9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00fd1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00fd5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00fdd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00fe2	f3 0f 5a 88 a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7080]
  00fea	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00fee	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00ff2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ff8	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0
  01000	eb 70		 jmp	 SHORT $LN33@resolve_dy
$LN31@resolve_dy:

; 642  : 				}
; 643  : 				else if (delta_altitude > 0.0)

  01002	f3 0f 5a 85 58
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _delta_altitude$3[ebp]
  0100a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  01012	76 5e		 jbe	 SHORT $LN33@resolve_dy

; 644  : 				{
; 645  : 
; 646  : 					i = min (i, delta_altitude);

  01014	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _delta_altitude$3[ebp]
  0101a	50		 push	 eax
  0101b	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _i$5[ebp]
  01021	51		 push	 ecx
  01022	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  01027	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0102b	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _i$5[ebp], xmm0

; 647  : 
; 648  : 					current_flight_dynamics->input_data.collective.value -= i * get_delta_time() * 5.0; //ataribaby 4/1/2009 speedup altitude level hold

  01033	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _i$5[ebp]
  0103b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  01043	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  01047	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0104f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01054	f3 0f 5a 88 a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7080]
  0105c	f2 0f 5c c8	 subsd	 xmm1, xmm0
  01060	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  01064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0106a	f3 0f 11 81 a8
	1b 00 00	 movss	 DWORD PTR [ecx+7080], xmm0
$LN33@resolve_dy:

; 649  : 				}
; 650  : 
; 651  : 	  			// intentional follow through...
; 652  : 			}
; 653  : 
; 654  : 			case HOVER_HOLD_NONE:
; 655  : 			default:
; 656  : 			{
; 657  : 
; 658  : 				current_flight_dynamics->model_acceleration_vector.x = resultant_laterally;

  01072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01077	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _resultant_laterally$[ebp]
  0107c	f3 0f 11 80 48
	1c 00 00	 movss	 DWORD PTR [eax+7240], xmm0

; 659  : 				current_flight_dynamics->model_acceleration_vector.y = resultant_vertically;

  01084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01089	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _resultant_vertically$[ebp]
  0108e	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 660  : 				current_flight_dynamics->model_acceleration_vector.z = resultant_horizontally;

  01096	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0109b	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _resultant_horizontally$[ebp]
  010a0	f3 0f 11 80 50
	1c 00 00	 movss	 DWORD PTR [eax+7248], xmm0
$LN8@resolve_dy:

; 661  : 
; 662  : 				break;
; 663  : 			}
; 664  : 		}
; 665  : 	}
; 666  : 
; 667  : 	//debug_log ("current_flight_dynamics->model_acceleration_vector.y %f", current_flight_dynamics->model_acceleration_vector.y);
; 668  : 
; 669  : 	if (!get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))

  010a8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  010af	74 0f		 je	 SHORT $LN47@resolve_dy
  010b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  010b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  010b8	89 8d 04 ff ff
	ff		 mov	 DWORD PTR tv790[ebp], ecx
  010be	eb 20		 jmp	 SHORT $LN48@resolve_dy
$LN47@resolve_dy:
  010c0	68 9d 02 00 00	 push	 669			; 0000029dH
  010c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  010ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010d0	52		 push	 edx
  010d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010d6	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv790[ebp], 0
$LN48@resolve_dy:
  010e0	b8 01 00 00 00	 mov	 eax, 1
  010e5	85 c0		 test	 eax, eax
  010e7	74 0c		 je	 SHORT $LN49@resolve_dy
  010e9	c7 85 00 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv797[ebp], 4
  010f3	eb 20		 jmp	 SHORT $LN50@resolve_dy
$LN49@resolve_dy:
  010f5	68 9d 02 00 00	 push	 669			; 0000029dH
  010fa	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  010ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01105	51		 push	 ecx
  01106	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0110b	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv797[ebp], 0
$LN50@resolve_dy:
  01115	6a 04		 push	 4
  01117	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0111d	52		 push	 edx
  0111e	69 85 04 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv790[ebp], 1116
  01128	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR tv797[ebp]
  0112e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  01135	ff d2		 call	 edx

; 670  : 	{
; 671  : 
; 672  : 		//current_flight_dynamics->model_acceleration_vector.y = max (0.0, resultant_vertically);
; 673  : 	}
; 674  : 
; 675  :    ///////////////////////////////////////////////////////////////
; 676  : 
; 677  : 	//debug_log ("CO_FORCE: adding force to joystick");
; 678  : 	//set_joystick_force_feedback_forces (current_flight_dynamics->input_data.cyclic_joystick_device_index,
; 679  : 													//resultant_laterally * 1000.0, -resultant_horizontally * 1000.0);
; 680  : }

  01137	5f		 pop	 edi
  01138	5e		 pop	 esi
  01139	5b		 pop	 ebx
  0113a	8b e5		 mov	 esp, ebp
  0113c	5d		 pop	 ebp
  0113d	c3		 ret	 0
?resolve_dynamic_forces@@YGXXZ ENDP			; resolve_dynamic_forces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?update_dynamic_forces@@YGXXZ
_TEXT	SEGMENT
_index$ = -4						; size = 4
?update_dynamic_forces@@YGXXZ PROC			; update_dynamic_forces, COMDAT

; 281  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 282  : 	int
; 283  : 		index;
; 284  : 
; 285  : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN5@update_dyn

; 286  : 	{
; 287  : 		return;

  00012	e9 d1 00 00 00	 jmp	 $LN1@update_dyn
$LN5@update_dyn:

; 288  : 	}
; 289  : 
; 290  : 	//
; 291  : 	// destroy expired forces
; 292  : 	//
; 293  : 
; 294  : 	for (index = 0; index < current_flight_dynamics->max_number_of_dynamic_forces; index ++)

  00017	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
  0001e	eb 09		 jmp	 SHORT $LN4@update_dyn
$LN2@update_dyn:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00023	83 c0 01	 add	 eax, 1
  00026	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax
$LN4@update_dyn:
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  00031	3b 88 d4 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9428]
  00037	0f 8d ab 00 00
	00		 jge	 $LN3@update_dyn

; 295  : 	{
; 296  : 
; 297  : 		if (current_flight_dynamics->dynamic_forces [index].valid)

  0003d	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00047	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0004d	0f b7 44 02 24	 movzx	 eax, WORD PTR [edx+eax+36]
  00052	85 c0		 test	 eax, eax
  00054	0f 84 89 00 00
	00		 je	 $LN7@update_dyn

; 298  : 		{
; 299  : 
; 300  : 			current_flight_dynamics->dynamic_forces [index].duration -= get_model_delta_time ();

  0005a	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00064	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00070	f3 0f 10 44 02
	18		 movss	 xmm0, DWORD PTR [edx+eax+24]
  00076	f3 0f 5c 81 90
	00 00 00	 subss	 xmm0, DWORD PTR [ecx+144]
  0007e	6b 55 fc 28	 imul	 edx, DWORD PTR _index$[ebp], 40
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00087	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  0008d	f3 0f 11 44 11
	18		 movss	 DWORD PTR [ecx+edx+24], xmm0

; 301  : 
; 302  : 			if (current_flight_dynamics->dynamic_forces [index].duration <= 0.0)

  00093	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00097	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0009d	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  000a3	f3 0f 5a 44 02
	18		 cvtss2sd xmm0, DWORD PTR [edx+eax+24]
  000a9	0f 57 c9	 xorps	 xmm1, xmm1
  000ac	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b0	72 31		 jb	 SHORT $LN7@update_dyn

; 303  : 			{
; 304  : 
; 305  : 				current_flight_dynamics->dynamic_forces [index].valid = FALSE;

  000b2	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  000b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000bc	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  000c2	33 c9		 xor	 ecx, ecx
  000c4	66 89 4c 02 24	 mov	 WORD PTR [edx+eax+36], cx

; 306  : 
; 307  : 				current_flight_dynamics->number_of_dynamic_forces --;

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ce	8b 88 d0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9424]
  000d4	83 e9 01	 sub	 ecx, 1
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000dd	89 8a d0 24 00
	00		 mov	 DWORD PTR [edx+9424], ecx
$LN7@update_dyn:

; 308  : 
; 309  : 				#if DEBUG_MODULE
; 310  : 
; 311  : 				if (current_flight_dynamics->dynamic_forces [index].name)
; 312  : 				{
; 313  : 
; 314  : 					debug_log ("DYNAMICS: destroying dynamic force %s (index %d, count %d, max %d) %f at %f, %f, %f",
; 315  : 								current_flight_dynamics->dynamic_forces [index].name,
; 316  : 								index,
; 317  : 								current_flight_dynamics->number_of_dynamic_forces,
; 318  : 								current_flight_dynamics->max_number_of_dynamic_forces,
; 319  : 								current_flight_dynamics->dynamic_forces [index].linear_force,
; 320  : 								current_flight_dynamics->dynamic_forces [index].position.x,
; 321  : 								current_flight_dynamics->dynamic_forces [index].position.y,
; 322  : 								current_flight_dynamics->dynamic_forces [index].position.z);
; 323  : 
; 324  : 					free_mem (current_flight_dynamics->dynamic_forces [index].name);
; 325  : 				}
; 326  : 				else
; 327  : 				{
; 328  : 
; 329  : 					debug_log ("DYNAMICS: destroying dynamic force (index %d, count %d, max %d) %f at %f, %f, %f",
; 330  : 									index,
; 331  : 									current_flight_dynamics->number_of_dynamic_forces,
; 332  : 									current_flight_dynamics->max_number_of_dynamic_forces,
; 333  : 									current_flight_dynamics->dynamic_forces [index].linear_force,
; 334  : 									current_flight_dynamics->dynamic_forces [index].position.x,
; 335  : 									current_flight_dynamics->dynamic_forces [index].position.y,
; 336  : 									current_flight_dynamics->dynamic_forces [index].position.z);
; 337  : 
; 338  : 				}
; 339  : 				#endif
; 340  : 			}
; 341  : 		}
; 342  : 	}

  000e3	e9 38 ff ff ff	 jmp	 $LN2@update_dyn
$LN3@update_dyn:
$LN1@update_dyn:

; 343  : }

  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c3		 ret	 0
?update_dynamic_forces@@YGXXZ ENDP			; update_dynamic_forces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z
_TEXT	SEGMENT
_new_dynamic_forces$1 = -8				; size = 4
_index$ = -4						; size = 4
_name$ = 8						; size = 4
_force$ = 12						; size = 4
_duration$ = 16						; size = 4
_position$ = 20						; size = 4
_direction$ = 24					; size = 4
_debug$ = 28						; size = 4
?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z PROC		; add_dynamic_force, COMDAT

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 188  : 
; 189  : 	int
; 190  : 		index;
; 191  : 
; 192  : 	if (force == 0.0)

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _force$[ebp]
  0000e	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00016	9f		 lahf
  00017	f6 c4 44	 test	 ah, 68			; 00000044H
  0001a	7a 05		 jp	 SHORT $LN5@add_dynami

; 193  : 	{
; 194  : 
; 195  : 		return;

  0001c	e9 c7 01 00 00	 jmp	 $LN1@add_dynami
$LN5@add_dynami:

; 196  : 	}
; 197  : 
; 198  : 	if (current_flight_dynamics->number_of_dynamic_forces >= current_flight_dynamics->max_number_of_dynamic_forces)

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002c	8b 90 d0 24 00
	00		 mov	 edx, DWORD PTR [eax+9424]
  00032	3b 91 d4 24 00
	00		 cmp	 edx, DWORD PTR [ecx+9428]
  00038	0f 8c 92 00 00
	00		 jl	 $LN6@add_dynami

; 199  : 	{
; 200  : 
; 201  : 		dynamic_force_type
; 202  : 			*new_dynamic_forces;
; 203  : 
; 204  : 		#if DEBUG_MODULE
; 205  : 
; 206  : 		debug_log ("DYNAMICS: remallocing dynamic forces array to %d", current_flight_dynamics->max_number_of_dynamic_forces * 2);
; 207  : 
; 208  : 		#endif
; 209  : 
; 210  : 		new_dynamic_forces = (dynamic_force_type *) malloc_heap_mem (sizeof (dynamic_force_type) * current_flight_dynamics->max_number_of_dynamic_forces * 2);

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00043	6b 88 d4 24 00
	00 28		 imul	 ecx, DWORD PTR [eax+9428], 40
  0004a	d1 e1		 shl	 ecx, 1
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00052	89 45 f8	 mov	 DWORD PTR _new_dynamic_forces$1[ebp], eax

; 211  : 
; 212  : 		memset (new_dynamic_forces, 0, sizeof (dynamic_force_type) * current_flight_dynamics->max_number_of_dynamic_forces * 2);

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005a	6b 88 d4 24 00
	00 28		 imul	 ecx, DWORD PTR [eax+9428], 40
  00061	d1 e1		 shl	 ecx, 1
  00063	51		 push	 ecx
  00064	6a 00		 push	 0
  00066	8b 55 f8	 mov	 edx, DWORD PTR _new_dynamic_forces$1[ebp]
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 _memset
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 213  : 
; 214  : 		memcpy (new_dynamic_forces, current_flight_dynamics->dynamic_forces, sizeof (dynamic_force_type) * current_flight_dynamics->max_number_of_dynamic_forces);

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00077	6b 88 d4 24 00
	00 28		 imul	 ecx, DWORD PTR [eax+9428], 40
  0007e	51		 push	 ecx
  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00085	8b 82 e0 24 00
	00		 mov	 eax, DWORD PTR [edx+9440]
  0008b	50		 push	 eax
  0008c	8b 4d f8	 mov	 ecx, DWORD PTR _new_dynamic_forces$1[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 _memcpy
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 215  : 
; 216  : 		current_flight_dynamics->max_number_of_dynamic_forces *= 2;

  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0009d	8b 88 d4 24 00
	00		 mov	 ecx, DWORD PTR [eax+9428]
  000a3	d1 e1		 shl	 ecx, 1
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ab	89 8a d4 24 00
	00		 mov	 DWORD PTR [edx+9428], ecx

; 217  : 
; 218  : 		free_mem (current_flight_dynamics->dynamic_forces);

  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b6	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 219  : 
; 220  : 		current_flight_dynamics->dynamic_forces = new_dynamic_forces;

  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _new_dynamic_forces$1[ebp]
  000ca	89 88 e0 24 00
	00		 mov	 DWORD PTR [eax+9440], ecx
$LN6@add_dynami:

; 221  : 	}
; 222  : 
; 223  : 	for (index = 0; index < current_flight_dynamics->max_number_of_dynamic_forces; index ++)

  000d0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
  000d7	eb 09		 jmp	 SHORT $LN4@add_dynami
$LN2@add_dynami:
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  000dc	83 c0 01	 add	 eax, 1
  000df	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax
$LN4@add_dynami:
  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  000ea	3b 88 d4 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9428]
  000f0	0f 8d f2 00 00
	00		 jge	 $LN3@add_dynami

; 224  : 	{
; 225  : 
; 226  : 		if (!current_flight_dynamics->dynamic_forces [index].valid)

  000f6	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00100	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00106	0f b7 44 02 24	 movzx	 eax, WORD PTR [edx+eax+36]
  0010b	85 c0		 test	 eax, eax
  0010d	0f 85 d0 00 00
	00		 jne	 $LN7@add_dynami

; 227  : 		{
; 228  : 
; 229  : 			current_flight_dynamics->dynamic_forces [index].valid = TRUE;

  00113	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011d	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00123	b9 01 00 00 00	 mov	 ecx, 1
  00128	66 89 4c 02 24	 mov	 WORD PTR [edx+eax+36], cx

; 230  : 
; 231  : 			current_flight_dynamics->dynamic_forces [index].position = *position;

  0012d	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00131	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00137	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  0013d	8d 44 02 0c	 lea	 eax, DWORD PTR [edx+eax+12]
  00141	8b 4d 14	 mov	 ecx, DWORD PTR _position$[ebp]
  00144	8b 11		 mov	 edx, DWORD PTR [ecx]
  00146	89 10		 mov	 DWORD PTR [eax], edx
  00148	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0014b	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0014e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00151	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 232  : 
; 233  : 			current_flight_dynamics->dynamic_forces [index].direction = *direction;

  00154	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00158	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0015e	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00164	03 d0		 add	 edx, eax
  00166	8b 45 18	 mov	 eax, DWORD PTR _direction$[ebp]
  00169	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016b	89 0a		 mov	 DWORD PTR [edx], ecx
  0016d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00170	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00173	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00176	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 234  : 
; 235  : 			current_flight_dynamics->dynamic_forces [index].linear_force = force;

  00179	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  0017d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00183	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  00189	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _force$[ebp]
  0018e	f3 0f 11 44 02
	1c		 movss	 DWORD PTR [edx+eax+28], xmm0

; 236  : 
; 237  : 			current_flight_dynamics->dynamic_forces [index].duration = duration;

  00194	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0019e	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  001a4	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _duration$[ebp]
  001a9	f3 0f 11 44 02
	18		 movss	 DWORD PTR [edx+eax+24], xmm0

; 238  : 
; 239  : 			current_flight_dynamics->number_of_dynamic_forces ++;

  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b4	8b 88 d0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9424]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c3	89 8a d0 24 00
	00		 mov	 DWORD PTR [edx+9424], ecx

; 240  : 
; 241  : 			current_flight_dynamics->dynamic_forces [index].name = NULL;

  001c9	6b 45 fc 28	 imul	 eax, DWORD PTR _index$[ebp], 40
  001cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001d3	8b 91 e0 24 00
	00		 mov	 edx, DWORD PTR [ecx+9440]
  001d9	c7 44 02 20 00
	00 00 00	 mov	 DWORD PTR [edx+eax+32], 0

; 242  : 
; 243  : 			#if DEBUG_MODULE
; 244  : 
; 245  : 			//if ((get_current_dynamics_options (DYNAMICS_OPTIONS_DRAW_FLIGHT_PATH)) && (debug))
; 246  : 			if (debug)
; 247  : 			{
; 248  : 
; 249  : 				current_flight_dynamics->dynamic_forces [index].name = (char *) malloc_heap_mem (sizeof (char) * (strlen (name) + 1));
; 250  : 
; 251  : 				sprintf (current_flight_dynamics->dynamic_forces [index].name, "%s", name);
; 252  : 
; 253  : 				debug_log ("DYNAMICS: adding dynamic force %s (index %d, count %d, max %d) %f at %f, %f, %f (dir %f, %f, %f)",
; 254  : 								current_flight_dynamics->dynamic_forces [index].name,
; 255  : 								index,
; 256  : 								current_flight_dynamics->number_of_dynamic_forces,
; 257  : 								current_flight_dynamics->max_number_of_dynamic_forces,
; 258  : 								force,
; 259  : 								position->x, position->y, position->z,
; 260  : 								direction->x, direction->y, direction->z);
; 261  : 			}
; 262  : 
; 263  : /*
; 264  : 			//debug_log ("CO_FORCE: adding force to joystick");
; 265  : 			set_joystick_force_feedback_forces (current_flight_dynamics->input_data.cyclic_joystick_device_index,
; 266  : 															direction->x * force * 500,
; 267  : 															direction->z * force * 500);
; 268  : */
; 269  : 			#endif
; 270  : 
; 271  : 			break;

  001e1	eb 05		 jmp	 SHORT $LN3@add_dynami
$LN7@add_dynami:

; 272  : 		}
; 273  : 	}

  001e3	e9 f1 fe ff ff	 jmp	 $LN2@add_dynami
$LN3@add_dynami:
$LN1@add_dynami:

; 274  : }

  001e8	5f		 pop	 edi
  001e9	5e		 pop	 esi
  001ea	5b		 pop	 ebx
  001eb	8b e5		 mov	 esp, ebp
  001ed	5d		 pop	 ebp
  001ee	c2 18 00	 ret	 24			; 00000018H
?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ENDP		; add_dynamic_force
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?update_collision_dynamics@@YGXXZ
_TEXT	SEGMENT
tv292 = -80						; size = 4
tv264 = -80						; size = 4
tv285 = -76						; size = 4
tv257 = -76						; size = 4
_raw$ = -8						; size = 4
_loop$ = -4						; size = 4
?update_collision_dynamics@@YGXXZ PROC			; update_collision_dynamics, COMDAT

; 1650 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1651 : 
; 1652 : 	int
; 1653 : 		loop;
; 1654 : 
; 1655 : 	helicopter
; 1656 : 		*raw;
; 1657 : 
; 1658 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN8@update_col

; 1659 : 	{
; 1660 : 
; 1661 : 		return;

  00012	e9 ed 04 00 00	 jmp	 $LN1@update_col
$LN8@update_col:

; 1662 : 	}
; 1663 : 
; 1664 : 	raw = (helicopter *) get_local_entity_data (get_gunship_entity ());

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 1665 : 
; 1666 : 	fixed_collision_count = 0;

  00022	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fixed_collision_count@@3HA, 0 ; fixed_collision_count

; 1667 : 
; 1668 : 	moving_collision_count = 0;

  0002c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?moving_collision_count@@3HA, 0 ; moving_collision_count

; 1669 : 
; 1670 : 	///////////////////////////////////////////////////////////////////
; 1671 : 	//
; 1672 : 	// check for collision
; 1673 : 	//
; 1674 : 	///////////////////////////////////////////////////////////////////
; 1675 : 
; 1676 : 	dynamics_setup_fixed_collision_points ();

  00036	e8 00 00 00 00	 call	 ?dynamics_setup_fixed_collision_points@@YGXXZ ; dynamics_setup_fixed_collision_points

; 1677 : 	update_fixed_ground_collision_dynamics ();

  0003b	e8 00 00 00 00	 call	 ?update_fixed_ground_collision_dynamics@@YGXXZ ; update_fixed_ground_collision_dynamics

; 1678 : 	dynamics_service_fixed_collision_violations ();

  00040	e8 00 00 00 00	 call	 ?dynamics_service_fixed_collision_violations@@YGXXZ ; dynamics_service_fixed_collision_violations

; 1679 : 
; 1680 : 	/////////////////////////////////
; 1681 : 
; 1682 : 	dynamics_setup_moving_collision_points ();

  00045	e8 00 00 00 00	 call	 ?dynamics_setup_moving_collision_points@@YGXXZ ; dynamics_setup_moving_collision_points

; 1683 : 	update_moving_ground_collision_dynamics ();

  0004a	e8 00 00 00 00	 call	 ?update_moving_ground_collision_dynamics@@YGXXZ ; update_moving_ground_collision_dynamics

; 1684 : 	dynamics_service_moving_collision_violations ();

  0004f	e8 00 00 00 00	 call	 ?dynamics_service_moving_collision_violations@@YGXXZ ; dynamics_service_moving_collision_violations

; 1685 : 
; 1686 : 	/////////////////////////////////
; 1687 : 
; 1688 : 	dynamics_setup_fixed_collision_points ();

  00054	e8 00 00 00 00	 call	 ?dynamics_setup_fixed_collision_points@@YGXXZ ; dynamics_setup_fixed_collision_points

; 1689 : 	dynamics_setup_moving_collision_points ();

  00059	e8 00 00 00 00	 call	 ?dynamics_setup_moving_collision_points@@YGXXZ ; dynamics_setup_moving_collision_points

; 1690 : 
; 1691 : 	update_object_collision_dynamics ();

  0005e	e8 00 00 00 00	 call	 ?update_object_collision_dynamics@@YGXXZ ; update_object_collision_dynamics

; 1692 : 
; 1693 : 	dynamics_service_fixed_collision_violations ();

  00063	e8 00 00 00 00	 call	 ?dynamics_service_fixed_collision_violations@@YGXXZ ; dynamics_service_fixed_collision_violations

; 1694 : 	dynamics_service_moving_collision_violations ();

  00068	e8 00 00 00 00	 call	 ?dynamics_service_moving_collision_violations@@YGXXZ ; dynamics_service_moving_collision_violations

; 1695 : 
; 1696 : 	/////////////////////////////////
; 1697 : 
; 1698 : 	dynamics_setup_fixed_collision_points ();

  0006d	e8 00 00 00 00	 call	 ?dynamics_setup_fixed_collision_points@@YGXXZ ; dynamics_setup_fixed_collision_points

; 1699 : 	dynamics_setup_moving_collision_points ();

  00072	e8 00 00 00 00	 call	 ?dynamics_setup_moving_collision_points@@YGXXZ ; dynamics_setup_moving_collision_points

; 1700 : 
; 1701 : 	update_tree_collision_dynamics ();

  00077	e8 00 00 00 00	 call	 ?update_tree_collision_dynamics@@YGXXZ ; update_tree_collision_dynamics

; 1702 : 
; 1703 : 	dynamics_service_fixed_collision_violations ();

  0007c	e8 00 00 00 00	 call	 ?dynamics_service_fixed_collision_violations@@YGXXZ ; dynamics_service_fixed_collision_violations

; 1704 : 	dynamics_service_moving_collision_violations ();

  00081	e8 00 00 00 00	 call	 ?dynamics_service_moving_collision_violations@@YGXXZ ; dynamics_service_moving_collision_violations

; 1705 : 
; 1706 : 	///////////////////////////////////////////////////////////////////
; 1707 : 	//
; 1708 : 	// store this frames collision points with new position
; 1709 : 	//
; 1710 : 	///////////////////////////////////////////////////////////////////
; 1711 : 
; 1712 : 	if (!get_gunship_entity ())

  00086	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0008d	75 05		 jne	 SHORT $LN9@update_col

; 1713 : 	{
; 1714 : 
; 1715 : 		return;

  0008f	e9 70 04 00 00	 jmp	 $LN1@update_col
$LN9@update_col:

; 1716 : 	}
; 1717 : 
; 1718 : 	memcpy (current_flight_dynamics->last_frame_fixed_collision_points, current_flight_dynamics->fixed_collision_points, sizeof (dynamics_collision_type) * current_flight_dynamics->number_of_fixed_collision_points);

  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00099	8b 88 d8 24 00
	00		 mov	 ecx, DWORD PTR [eax+9432]
  0009f	c1 e1 06	 shl	 ecx, 6
  000a2	51		 push	 ecx
  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a9	8b 82 b8 24 00
	00		 mov	 eax, DWORD PTR [edx+9400]
  000af	50		 push	 eax
  000b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b6	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  000bc	52		 push	 edx
  000bd	e8 00 00 00 00	 call	 _memcpy
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1719 : 
; 1720 : 	for (loop = 0; loop < current_flight_dynamics->number_of_fixed_collision_points; loop ++)

  000c5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000cc	eb 09		 jmp	 SHORT $LN4@update_col
$LN2@update_col:
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000d1	83 c0 01	 add	 eax, 1
  000d4	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_col:
  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  000df	3b 88 d8 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9432]
  000e5	0f 8d 24 01 00
	00		 jge	 $LN3@update_col

; 1721 : 	{
; 1722 : 
; 1723 : 		multiply_matrix3x3_vec3d (&current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point,

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000ee	c1 e0 06	 shl	 eax, 6
  000f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f7	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  000fd	8d 44 02 1c	 lea	 eax, DWORD PTR [edx+eax+28]
  00101	50		 push	 eax
  00102	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00105	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  0010b	83 c2 14	 add	 edx, 20			; 00000014H
  0010e	52		 push	 edx
  0010f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00112	c1 e0 06	 shl	 eax, 6
  00115	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011b	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  00121	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1724 : 											raw->ac.inst3d->vp.attitude,
; 1725 : 											&current_flight_dynamics->last_frame_fixed_collision_points [loop].model_point);
; 1726 : 
; 1727 : 		current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.x += current_flight_dynamics->position.x;

  0012b	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0012e	c1 e0 06	 shl	 eax, 6
  00131	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00137	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  0013d	f3 0f 5a 44 02
	10		 cvtss2sd xmm0, DWORD PTR [edx+eax+16]
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00148	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  00150	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00153	c1 e1 06	 shl	 ecx, 6
  00156	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0015c	8b 82 bc 24 00
	00		 mov	 eax, DWORD PTR [edx+9404]
  00162	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00166	f3 0f 11 44 08
	10		 movss	 DWORD PTR [eax+ecx+16], xmm0

; 1728 : 		current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.y += current_flight_dynamics->position.y;

  0016c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0016f	c1 e0 06	 shl	 eax, 6
  00172	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00178	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  0017e	f3 0f 5a 44 02
	14		 cvtss2sd xmm0, DWORD PTR [edx+eax+20]
  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00189	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00194	c1 e1 06	 shl	 ecx, 6
  00197	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0019d	8b 82 bc 24 00
	00		 mov	 eax, DWORD PTR [edx+9404]
  001a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a7	f3 0f 11 44 08
	14		 movss	 DWORD PTR [eax+ecx+20], xmm0

; 1729 : 		current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point.z += current_flight_dynamics->position.z;

  001ad	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  001b0	c1 e0 06	 shl	 eax, 6
  001b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b9	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  001bf	f3 0f 5a 44 02
	18		 cvtss2sd xmm0, DWORD PTR [edx+eax+24]
  001c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ca	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  001d2	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  001d5	c1 e1 06	 shl	 ecx, 6
  001d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001de	8b 82 bc 24 00
	00		 mov	 eax, DWORD PTR [edx+9404]
  001e4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e8	f3 0f 11 44 08
	18		 movss	 DWORD PTR [eax+ecx+24], xmm0

; 1730 : 
; 1731 : 		bound_position_to_map_area (&current_flight_dynamics->last_frame_fixed_collision_points [loop].world_point);

  001ee	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  001f1	c1 e0 06	 shl	 eax, 6
  001f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001fa	8b 91 bc 24 00
	00		 mov	 edx, DWORD PTR [ecx+9404]
  00200	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 1732 : 	}

  0020a	e9 bf fe ff ff	 jmp	 $LN2@update_col
$LN3@update_col:

; 1733 : 
; 1734 : 	current_flight_dynamics->valid_last_frame_fixed_collision_points = TRUE;

  0020f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00214	c7 80 c8 24 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+9416], 1

; 1735 : 
; 1736 : 	//
; 1737 : 
; 1738 : 	memcpy (current_flight_dynamics->last_frame_moving_collision_points, current_flight_dynamics->moving_collision_points, sizeof (dynamics_collision_type) * current_flight_dynamics->number_of_moving_collision_points);

  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00223	8b 88 dc 24 00
	00		 mov	 ecx, DWORD PTR [eax+9436]
  00229	c1 e1 06	 shl	 ecx, 6
  0022c	51		 push	 ecx
  0022d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00233	8b 82 c0 24 00
	00		 mov	 eax, DWORD PTR [edx+9408]
  00239	50		 push	 eax
  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00240	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  00246	52		 push	 edx
  00247	e8 00 00 00 00	 call	 _memcpy
  0024c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1739 : 
; 1740 : 	for (loop = 0; loop < current_flight_dynamics->number_of_moving_collision_points; loop ++)

  0024f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00256	eb 09		 jmp	 SHORT $LN7@update_col
$LN5@update_col:
  00258	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0025b	83 c0 01	 add	 eax, 1
  0025e	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_col:
  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00269	3b 88 dc 24 00
	00		 cmp	 ecx, DWORD PTR [eax+9436]
  0026f	0f 8d 24 01 00
	00		 jge	 $LN6@update_col

; 1741 : 	{
; 1742 : 
; 1743 : 		multiply_matrix3x3_vec3d (&current_flight_dynamics->last_frame_moving_collision_points [loop].world_point,

  00275	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00278	c1 e0 06	 shl	 eax, 6
  0027b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00281	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  00287	8d 44 02 1c	 lea	 eax, DWORD PTR [edx+eax+28]
  0028b	50		 push	 eax
  0028c	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  0028f	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00295	83 c2 14	 add	 edx, 20			; 00000014H
  00298	52		 push	 edx
  00299	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0029c	c1 e0 06	 shl	 eax, 6
  0029f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002a5	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  002ab	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  002af	50		 push	 eax
  002b0	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1744 : 											raw->ac.inst3d->vp.attitude,
; 1745 : 											&current_flight_dynamics->last_frame_moving_collision_points [loop].model_point);
; 1746 : 
; 1747 : 		current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.x += current_flight_dynamics->position.x;

  002b5	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  002b8	c1 e0 06	 shl	 eax, 6
  002bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c1	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  002c7	f3 0f 5a 44 02
	10		 cvtss2sd xmm0, DWORD PTR [edx+eax+16]
  002cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d2	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  002da	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  002dd	c1 e1 06	 shl	 ecx, 6
  002e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e6	8b 82 c4 24 00
	00		 mov	 eax, DWORD PTR [edx+9412]
  002ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f0	f3 0f 11 44 08
	10		 movss	 DWORD PTR [eax+ecx+16], xmm0

; 1748 : 		current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.y += current_flight_dynamics->position.y;

  002f6	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  002f9	c1 e0 06	 shl	 eax, 6
  002fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00302	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  00308	f3 0f 5a 44 02
	14		 cvtss2sd xmm0, DWORD PTR [edx+eax+20]
  0030e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00313	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  0031b	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0031e	c1 e1 06	 shl	 ecx, 6
  00321	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00327	8b 82 c4 24 00
	00		 mov	 eax, DWORD PTR [edx+9412]
  0032d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00331	f3 0f 11 44 08
	14		 movss	 DWORD PTR [eax+ecx+20], xmm0

; 1749 : 		current_flight_dynamics->last_frame_moving_collision_points [loop].world_point.z += current_flight_dynamics->position.z;

  00337	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0033a	c1 e0 06	 shl	 eax, 6
  0033d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00343	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  00349	f3 0f 5a 44 02
	18		 cvtss2sd xmm0, DWORD PTR [edx+eax+24]
  0034f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00354	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  0035c	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0035f	c1 e1 06	 shl	 ecx, 6
  00362	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00368	8b 82 c4 24 00
	00		 mov	 eax, DWORD PTR [edx+9412]
  0036e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00372	f3 0f 11 44 08
	18		 movss	 DWORD PTR [eax+ecx+24], xmm0

; 1750 : 
; 1751 : 		bound_position_to_map_area (&current_flight_dynamics->last_frame_moving_collision_points [loop].world_point);

  00378	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0037b	c1 e0 06	 shl	 eax, 6
  0037e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00384	8b 91 c4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9412]
  0038a	8d 44 02 10	 lea	 eax, DWORD PTR [edx+eax+16]
  0038e	50		 push	 eax
  0038f	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 1752 : 	}

  00394	e9 bf fe ff ff	 jmp	 $LN5@update_col
$LN6@update_col:

; 1753 : 
; 1754 : 	current_flight_dynamics->valid_last_frame_moving_collision_points = TRUE;

  00399	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0039e	c7 80 cc 24 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+9420], 1

; 1755 : 
; 1756 : 	///////////////////////////////////////////////////////////////////
; 1757 : 	//
; 1758 : 	// landing stuff
; 1759 : 	//
; 1760 : 	///////////////////////////////////////////////////////////////////
; 1761 : 
; 1762 : 	if (fixed_collision_count == 0)

  003a8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fixed_collision_count@@3HA, 0 ; fixed_collision_count
  003af	0f 85 bb 00 00
	00		 jne	 $LN10@update_col

; 1763 : 	{
; 1764 : 		if (!get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))

  003b5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  003bc	74 0c		 je	 SHORT $LN19@update_col
  003be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c5	89 4d b4	 mov	 DWORD PTR tv257[ebp], ecx
  003c8	eb 1d		 jmp	 SHORT $LN20@update_col
$LN19@update_col:
  003ca	68 e4 06 00 00	 push	 1764			; 000006e4H
  003cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003da	52		 push	 edx
  003db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv257[ebp], 0
$LN20@update_col:
  003e7	b8 01 00 00 00	 mov	 eax, 1
  003ec	85 c0		 test	 eax, eax
  003ee	74 09		 je	 SHORT $LN21@update_col
  003f0	c7 45 b0 04 00
	00 00		 mov	 DWORD PTR tv264[ebp], 4
  003f7	eb 1d		 jmp	 SHORT $LN22@update_col
$LN21@update_col:
  003f9	68 e4 06 00 00	 push	 1764			; 000006e4H
  003fe	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00403	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00409	51		 push	 ecx
  0040a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN22@update_col:
  00416	6a 04		 push	 4
  00418	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0041e	52		 push	 edx
  0041f	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv257[ebp], 1116
  00426	8b 4d b0	 mov	 ecx, DWORD PTR tv264[ebp]
  00429	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00430	ff d2		 call	 edx
  00432	85 c0		 test	 eax, eax
  00434	75 27		 jne	 SHORT $LN12@update_col

; 1765 : 		{
; 1766 : 
; 1767 : 			if (current_flight_dynamics->world_motion_vector.y > 0.0  && !weight_on_wheels())

  00436	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0043b	f3 0f 5a 80 40
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7232]
  00443	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0044b	76 0e		 jbe	 SHORT $LN14@update_col
  0044d	e8 00 00 00 00	 call	 ?weight_on_wheels@@YGHXZ ; weight_on_wheels
  00452	85 c0		 test	 eax, eax
  00454	75 05		 jne	 SHORT $LN14@update_col

; 1768 : 			{
; 1769 : 
; 1770 : 				dynamics_takeoff ();

  00456	e8 00 00 00 00	 call	 ?dynamics_takeoff@@YGXXZ ; dynamics_takeoff
$LN14@update_col:

; 1771 : 			}
; 1772 : 		}

  0045b	eb 0e		 jmp	 SHORT $LN15@update_col
$LN12@update_col:

; 1773 : 		else if (weight_on_wheels())

  0045d	e8 00 00 00 00	 call	 ?weight_on_wheels@@YGHXZ ; weight_on_wheels
  00462	85 c0		 test	 eax, eax
  00464	74 05		 je	 SHORT $LN15@update_col

; 1774 : 			assess_landing();

  00466	e8 00 00 00 00	 call	 ?assess_landing@@YGXXZ	; assess_landing
$LN15@update_col:

; 1775 : 	}
; 1776 : 	else

  0046b	e9 94 00 00 00	 jmp	 $LN17@update_col
$LN10@update_col:

; 1777 : 	{
; 1778 : 		if (command_line_dynamics_flight_model >= 2)

  00470	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?command_line_dynamics_flight_model@@3HA, 2 ; command_line_dynamics_flight_model
  00477	7c 05		 jl	 SHORT $LN16@update_col

; 1779 : 			reset_undercarriage_world_position();

  00479	e8 00 00 00 00	 call	 ?reset_undercarriage_world_position@@YGXXZ ; reset_undercarriage_world_position
$LN16@update_col:

; 1780 : 
; 1781 : 		if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))

  0047e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00485	74 0c		 je	 SHORT $LN23@update_col
  00487	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0048c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048e	89 4d b4	 mov	 DWORD PTR tv285[ebp], ecx
  00491	eb 1d		 jmp	 SHORT $LN24@update_col
$LN23@update_col:
  00493	68 f5 06 00 00	 push	 1781			; 000006f5H
  00498	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004a3	52		 push	 edx
  004a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv285[ebp], 0
$LN24@update_col:
  004b0	b8 01 00 00 00	 mov	 eax, 1
  004b5	85 c0		 test	 eax, eax
  004b7	74 09		 je	 SHORT $LN25@update_col
  004b9	c7 45 b0 04 00
	00 00		 mov	 DWORD PTR tv292[ebp], 4
  004c0	eb 1d		 jmp	 SHORT $LN26@update_col
$LN25@update_col:
  004c2	68 f5 06 00 00	 push	 1781			; 000006f5H
  004c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@HDMHHGAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  004cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004d2	51		 push	 ecx
  004d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d8	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv292[ebp], 0
$LN26@update_col:
  004df	6a 04		 push	 4
  004e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004e7	52		 push	 edx
  004e8	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv285[ebp], 1116
  004ef	8b 4d b0	 mov	 ecx, DWORD PTR tv292[ebp]
  004f2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004f9	ff d2		 call	 edx
  004fb	85 c0		 test	 eax, eax
  004fd	74 05		 je	 SHORT $LN17@update_col

; 1782 : 			assess_landing();

  004ff	e8 00 00 00 00	 call	 ?assess_landing@@YGXXZ	; assess_landing
$LN17@update_col:
$LN1@update_col:

; 1783 : 	}
; 1784 : }

  00504	5f		 pop	 edi
  00505	5e		 pop	 esi
  00506	5b		 pop	 ebx
  00507	8b e5		 mov	 esp, ebp
  00509	5d		 pop	 ebp
  0050a	c3		 ret	 0
?update_collision_dynamics@@YGXXZ ENDP			; update_collision_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?deinitialise_dynamic_forces@@YGXXZ
_TEXT	SEGMENT
?deinitialise_dynamic_forces@@YGXXZ PROC		; deinitialise_dynamic_forces, COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 172  : 
; 173  : 	if (current_flight_dynamics->dynamic_forces)

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	83 b8 e0 24 00
	00 00		 cmp	 DWORD PTR [eax+9440], 0
  00015	74 20		 je	 SHORT $LN1@deinitiali

; 174  : 	{
; 175  : 
; 176  : 		free_mem (current_flight_dynamics->dynamic_forces);

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001c	8b 88 e0 24 00
	00		 mov	 ecx, DWORD PTR [eax+9440]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 177  : 
; 178  : 		current_flight_dynamics->dynamic_forces = NULL;

  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002d	c7 80 e0 24 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+9440], 0
$LN1@deinitiali:

; 179  : 	}
; 180  : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?deinitialise_dynamic_forces@@YGXXZ ENDP		; deinitialise_dynamic_forces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_force.c
;	COMDAT ?initialise_dynamic_forces@@YGXXZ
_TEXT	SEGMENT
?initialise_dynamic_forces@@YGXXZ PROC			; initialise_dynamic_forces, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 158  : 
; 159  :    current_flight_dynamics->max_number_of_dynamic_forces = NUMBER_OF_DYNAMIC_FORCES;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	c7 80 d4 24 00
	00 20 00 00 00	 mov	 DWORD PTR [eax+9428], 32 ; 00000020H

; 160  : 
; 161  : 	current_flight_dynamics->dynamic_forces = (dynamic_force_type *) malloc_heap_mem (sizeof (dynamic_force_type) * current_flight_dynamics->max_number_of_dynamic_forces);

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001d	6b 88 d4 24 00
	00 28		 imul	 ecx, DWORD PTR [eax+9428], 40
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0002a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00030	89 82 e0 24 00
	00		 mov	 DWORD PTR [edx+9440], eax

; 162  : 
; 163  : 	memset (current_flight_dynamics->dynamic_forces, 0, sizeof (dynamic_force_type) * current_flight_dynamics->max_number_of_dynamic_forces);

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003b	6b 88 d4 24 00
	00 28		 imul	 ecx, DWORD PTR [eax+9428], 40
  00042	51		 push	 ecx
  00043	6a 00		 push	 0
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0004b	8b 82 e0 24 00
	00		 mov	 eax, DWORD PTR [edx+9440]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 164  : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?initialise_dynamic_forces@@YGXXZ ENDP			; initialise_dynamic_forces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cstdlib
;	COMDAT ?abs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?abs@@YGMM@Z PROC					; abs, COMDAT

; 25   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 26   : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 27   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?abs@@YGMM@Z ENDP					; abs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
END
