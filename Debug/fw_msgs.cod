; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_acosf
PUBLIC	_fabsf
PUBLIC	?acos@@YGMM@Z					; acos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?overload_fixed_wing_message_responses@@YGXXZ	; overload_fixed_wing_message_responses
PUBLIC	?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_collision'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_waypoint_lift_off_reached'::`1'::__LINE__Var
PUBLIC	??_C@_0FP@PHFHIEC@get_local_entity_int_value?5?$CIrec@ ; `string'
PUBLIC	?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_waypoint_touch_down_reached'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_check_mobile_reached_guide'::`1'::__LINE__Var
PUBLIC	??_C@_06CGHJMPBJ@sender@			; `string'
PUBLIC	??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@ ; `string'
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@ ; `string'
PUBLIC	??_C@_0O@HEGILGAC@weapon_vector@		; `string'
PUBLIC	??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@	; `string'
PUBLIC	__real@3f800000
EXTRN	_acos:PROC
EXTRN	_fabs:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_perp_dist_of_point_from_line@@YGMPBUVEC3D@@00PAU1@@Z:PROC ; get_3d_perp_dist_of_point_from_line
EXTRN	?get_3d_unit_vector_dot_product@@YGMPBUVEC3D@@0@Z:PROC ; get_3d_unit_vector_dot_product
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?open_client_server_entity_airbrakes@@YGXPAUENTITY@@@Z:PROC ; open_client_server_entity_airbrakes
EXTRN	?open_client_server_entity_flaps@@YGXPAUENTITY@@@Z:PROC ; open_client_server_entity_flaps
EXTRN	?close_client_server_entity_flaps@@YGXPAUENTITY@@@Z:PROC ; close_client_server_entity_flaps
EXTRN	?damage_client_server_entity@@YGHPAUENTITY@@0M@Z:PROC ; damage_client_server_entity
EXTRN	?overload_aircraft_message_responses@@YGXW4ENTITY_TYPES@@@Z:PROC ; overload_aircraft_message_responses
EXTRN	?set_client_server_fixed_wing_afterburner_state@@YGXPAUENTITY@@H@Z:PROC ; set_client_server_fixed_wing_afterburner_state
EXTRN	?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z:PROC ; aircraft_critically_damaged
EXTRN	?play_aircraft_shot_at_speech@@YGXPAUENTITY@@0@Z:PROC ; play_aircraft_shot_at_speech
EXTRN	?play_aircraft_destroyed_speech@@YGXPAUENTITY@@0@Z:PROC ; play_aircraft_destroyed_speech
EXTRN	?credit_client_server_mobile_kill@@YGXPAUENTITY@@0@Z:PROC ; credit_client_server_mobile_kill
EXTRN	?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z:PROC ; clear_smoke_list_generator_lifetime
EXTRN	?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z:PROC ; create_client_server_sound_effect_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_valid
EXTRN	?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_value
EXTRN	?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z:PROC ; write_tacview_unit_event
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA:BYTE ; message_responses
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@
CONST	SEGMENT
??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@ DB 'weapon_to_target_vector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEGILGAC@weapon_vector@
CONST	SEGMENT
??_C@_0O@HEGILGAC@weapon_vector@ DB 'weapon_vector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@
CONST	SEGMENT
??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@ DB 'selected_'
	DB	'weapon != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
CONST	SEGMENT
??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@ DB 'get_local'
	DB	'_entity_type (sender) == ENTITY_TYPE_GUIDE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGHJMPBJ@sender@
CONST	SEGMENT
??_C@_06CGHJMPBJ@sender@ DB 'sender', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 018fH ; `response_to_check_mobile_reached_guide'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0145H ; `response_to_waypoint_touch_down_reached'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FP@PHFHIEC@get_local_entity_int_value?5?$CIrec@
CONST	SEGMENT
??_C@_0FP@PHFHIEC@get_local_entity_int_value?5?$CIrec@ DB 'get_local_enti'
	DB	'ty_int_value (receiver, INT_TYPE_OPERATIONAL_STATE) == OPERAT'
	DB	'IONAL_STATE_TAXIING', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0108H ; `response_to_waypoint_lift_off_reached'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwi'
	DB	'ng\fw_msgs.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 092H ; `response_to_collision'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
;	COMDAT ?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv462 = -128						; size = 4
tv389 = -128						; size = 4
tv364 = -128						; size = 4
tv343 = -128						; size = 4
tv320 = -128						; size = 4
tv287 = -128						; size = 4
tv242 = -128						; size = 4
tv224 = -128						; size = 4
tv204 = -128						; size = 4
tv175 = -128						; size = 4
tv155 = -128						; size = 4
tv130 = -128						; size = 4
tv611 = -124						; size = 4
tv607 = -124						; size = 4
tv544 = -124						; size = 4
tv468 = -124						; size = 4
tv381 = -124						; size = 4
tv356 = -124						; size = 4
tv336 = -124						; size = 4
tv312 = -124						; size = 4
tv279 = -124						; size = 4
tv235 = -124						; size = 4
tv216 = -124						; size = 4
tv196 = -124						; size = 4
tv167 = -124						; size = 4
tv147 = -124						; size = 4
tv91 = -124						; size = 4
tv75 = -124						; size = 4
_launch_angle_error$1 = -56				; size = 4
_weapon_to_target_vector$2 = -52			; size = 4
_weapon_vector$3 = -48					; size = 4
_selected_weapon$4 = -44				; size = 4
_mv$ = -40						; size = 4
_guide_pos$ = -36					; size = 12
_pos2$ = -24						; size = 12
_pos1$ = -12						; size = 4
_velocity$ = -8						; size = 4
_range$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_check_mobile_reached_guide, COMDAT

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 400  : 	float
; 401  : 		range,
; 402  : 		velocity;
; 403  : 
; 404  : 	vec3d
; 405  : 		*pos1,
; 406  : 		pos2,
; 407  : 		guide_pos,
; 408  : 		*mv;
; 409  : 
; 410  : 	ASSERT (sender);

  0000c	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@response_t
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00017	83 c0 0b	 add	 eax, 11			; 0000000bH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06CGHJMPBJ@sender@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@response_t:

; 411  : 
; 412  : 	ASSERT (get_local_entity_type (sender) == ENTITY_TYPE_GUIDE);

  0002a	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0002e	74 0a		 je	 SHORT $LN20@response_t
  00030	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d 84	 mov	 DWORD PTR tv75[ebp], ecx
  00038	eb 21		 jmp	 SHORT $LN21@response_t
$LN20@response_t:
  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00040	83 c2 0d	 add	 edx, 13			; 0000000dH
  00043	52		 push	 edx
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00054	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN21@response_t:
  0005b	83 7d 84 0d	 cmp	 DWORD PTR tv75[ebp], 13	; 0000000dH
  0005f	74 18		 je	 SHORT $LN3@response_t
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00066	83 c0 0d	 add	 eax, 13			; 0000000dH
  00069	50		 push	 eax
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@response_t:

; 413  : 
; 414  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00079	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00080	74 18		 je	 SHORT $LN4@response_t
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00087	83 c0 0f	 add	 eax, 15			; 0000000fH
  0008a	50		 push	 eax
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@response_t:

; 415  : 
; 416  : 	//
; 417  : 	// Check if landed
; 418  : 	//
; 419  : 
; 420  : 	if (get_local_entity_int_value (receiver, INT_TYPE_LANDED))

  0009a	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0009e	74 0a		 je	 SHORT $LN22@response_t
  000a0	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	89 4d 84	 mov	 DWORD PTR tv91[ebp], ecx
  000a8	eb 1d		 jmp	 SHORT $LN23@response_t
$LN22@response_t:
  000aa	68 a4 01 00 00	 push	 420			; 000001a4H
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ba	52		 push	 edx
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN23@response_t:
  000c7	b8 01 00 00 00	 mov	 eax, 1
  000cc	85 c0		 test	 eax, eax
  000ce	74 09		 je	 SHORT $LN24@response_t
  000d0	c7 45 80 73 00
	00 00		 mov	 DWORD PTR tv130[ebp], 115 ; 00000073H
  000d7	eb 1d		 jmp	 SHORT $LN25@response_t
$LN24@response_t:
  000d9	68 a4 01 00 00	 push	 420			; 000001a4H
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ef	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN25@response_t:
  000f6	6a 73		 push	 115			; 00000073H
  000f8	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  000fb	52		 push	 edx
  000fc	69 45 84 5c 04
	00 00		 imul	 eax, DWORD PTR tv91[ebp], 1116
  00103	8b 4d 80	 mov	 ecx, DWORD PTR tv130[ebp]
  00106	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0010d	ff d2		 call	 edx
  0010f	85 c0		 test	 eax, eax
  00111	74 07		 je	 SHORT $LN5@response_t

; 421  : 	{
; 422  : 		return FALSE;

  00113	33 c0		 xor	 eax, eax
  00115	e9 f9 06 00 00	 jmp	 $LN1@response_t
$LN5@response_t:

; 423  : 	}
; 424  : 
; 425  : 	//
; 426  : 	// check range to guide
; 427  : 	//
; 428  : 
; 429  : 	if (get_guide_criteria_valid (sender, GUIDE_CRITERIA_RADIUS))

  0011a	6a 00		 push	 0
  0011c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  00125	85 c0		 test	 eax, eax
  00127	0f 84 32 04 00
	00		 je	 $LN12@response_t

; 430  : 	{
; 431  : 		range = get_local_entity_float_value (receiver, FLOAT_TYPE_DISTANCE);

  0012d	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00131	74 0a		 je	 SHORT $LN26@response_t
  00133	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	89 4d 84	 mov	 DWORD PTR tv147[ebp], ecx
  0013b	eb 21		 jmp	 SHORT $LN27@response_t
$LN26@response_t:
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00143	83 c2 20	 add	 edx, 32			; 00000020H
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00157	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN27@response_t:
  0015e	b9 01 00 00 00	 mov	 ecx, 1
  00163	85 c9		 test	 ecx, ecx
  00165	74 09		 je	 SHORT $LN28@response_t
  00167	c7 45 80 1f 00
	00 00		 mov	 DWORD PTR tv155[ebp], 31 ; 0000001fH
  0016e	eb 21		 jmp	 SHORT $LN29@response_t
$LN28@response_t:
  00170	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00176	83 c2 20	 add	 edx, 32			; 00000020H
  00179	52		 push	 edx
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018a	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN29@response_t:
  00191	6a 1f		 push	 31			; 0000001fH
  00193	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00196	51		 push	 ecx
  00197	69 55 84 bc 02
	00 00		 imul	 edx, DWORD PTR tv147[ebp], 700
  0019e	8b 45 80	 mov	 eax, DWORD PTR tv155[ebp]
  001a1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001a8	ff d1		 call	 ecx
  001aa	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 432  : 
; 433  : 		velocity = get_local_entity_float_value (receiver, FLOAT_TYPE_VELOCITY);

  001ad	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  001b1	74 0a		 je	 SHORT $LN30@response_t
  001b3	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  001b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b8	89 4d 84	 mov	 DWORD PTR tv167[ebp], ecx
  001bb	eb 21		 jmp	 SHORT $LN31@response_t
$LN30@response_t:
  001bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001c3	83 c2 22	 add	 edx, 34			; 00000022H
  001c6	52		 push	 edx
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d7	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN31@response_t:
  001de	b9 01 00 00 00	 mov	 ecx, 1
  001e3	85 c9		 test	 ecx, ecx
  001e5	74 09		 je	 SHORT $LN32@response_t
  001e7	c7 45 80 93 00
	00 00		 mov	 DWORD PTR tv175[ebp], 147 ; 00000093H
  001ee	eb 21		 jmp	 SHORT $LN33@response_t
$LN32@response_t:
  001f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001f6	83 c2 22	 add	 edx, 34			; 00000022H
  001f9	52		 push	 edx
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020a	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN33@response_t:
  00211	68 93 00 00 00	 push	 147			; 00000093H
  00216	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00219	51		 push	 ecx
  0021a	69 55 84 bc 02
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 700
  00221	8b 45 80	 mov	 eax, DWORD PTR tv175[ebp]
  00224	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0022b	ff d1		 call	 ecx
  0022d	d9 5d f8	 fstp	 DWORD PTR _velocity$[ebp]

; 434  : 
; 435  : 		//
; 436  : 		// Early-out checks
; 437  : 		//
; 438  : 
; 439  : 		if ((range - velocity) > get_guide_criteria_value (sender, GUIDE_CRITERIA_RADIUS))

  00230	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  00235	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _velocity$[ebp]
  0023a	6a 00		 push	 0
  0023c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0023f	50		 push	 eax
  00240	f3 0f 11 45 84	 movss	 DWORD PTR tv611[ebp], xmm0
  00245	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  0024a	d9 5d 80	 fstp	 DWORD PTR tv462[ebp]
  0024d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv611[ebp]
  00252	0f 2f 45 80	 comiss	 xmm0, DWORD PTR tv462[ebp]
  00256	76 07		 jbe	 SHORT $LN7@response_t

; 440  : 		{
; 441  : 			return FALSE;

  00258	33 c0		 xor	 eax, eax
  0025a	e9 b4 05 00 00	 jmp	 $LN1@response_t
$LN7@response_t:

; 442  : 		}
; 443  : 
; 444  : 		if (range <= get_guide_criteria_value (sender, GUIDE_CRITERIA_RADIUS))

  0025f	6a 00		 push	 0
  00261	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00264	50		 push	 eax
  00265	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  0026a	d9 5d 84	 fstp	 DWORD PTR tv468[ebp]
  0026d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv468[ebp]
  00272	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _range$[ebp]
  00276	72 05		 jb	 SHORT $LN8@response_t

; 445  : 		{
; 446  : 		}
; 447  : 		else

  00278	e9 e2 02 00 00	 jmp	 $LN12@response_t
$LN8@response_t:

; 448  : 		{
; 449  : 			//
; 450  : 			// Pass through check
; 451  : 			//
; 452  : 
; 453  : 			mv = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_MOTION_VECTOR);

  0027d	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00281	74 0a		 je	 SHORT $LN34@response_t
  00283	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00286	8b 08		 mov	 ecx, DWORD PTR [eax]
  00288	89 4d 84	 mov	 DWORD PTR tv196[ebp], ecx
  0028b	eb 21		 jmp	 SHORT $LN35@response_t
$LN34@response_t:
  0028d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00293	83 c2 36	 add	 edx, 54			; 00000036H
  00296	52		 push	 edx
  00297	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a7	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN35@response_t:
  002ae	b9 01 00 00 00	 mov	 ecx, 1
  002b3	85 c9		 test	 ecx, ecx
  002b5	74 09		 je	 SHORT $LN36@response_t
  002b7	c7 45 80 06 00
	00 00		 mov	 DWORD PTR tv204[ebp], 6
  002be	eb 21		 jmp	 SHORT $LN37@response_t
$LN36@response_t:
  002c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002c6	83 c2 36	 add	 edx, 54			; 00000036H
  002c9	52		 push	 edx
  002ca	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002d4	50		 push	 eax
  002d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002da	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv204[ebp], 0
$LN37@response_t:
  002e1	6a 06		 push	 6
  002e3	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002e6	51		 push	 ecx
  002e7	6b 55 84 60	 imul	 edx, DWORD PTR tv196[ebp], 96
  002eb	8b 45 80	 mov	 eax, DWORD PTR tv204[ebp]
  002ee	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  002f5	ff d1		 call	 ecx
  002f7	89 45 d8	 mov	 DWORD PTR _mv$[ebp], eax

; 454  : 
; 455  : 			pos1 = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_POSITION);

  002fa	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  002fe	74 0a		 je	 SHORT $LN38@response_t
  00300	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00303	8b 08		 mov	 ecx, DWORD PTR [eax]
  00305	89 4d 84	 mov	 DWORD PTR tv216[ebp], ecx
  00308	eb 21		 jmp	 SHORT $LN39@response_t
$LN38@response_t:
  0030a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00310	83 c2 38	 add	 edx, 56			; 00000038H
  00313	52		 push	 edx
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00319	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0031e	50		 push	 eax
  0031f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00324	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN39@response_t:
  0032b	b9 01 00 00 00	 mov	 ecx, 1
  00330	85 c9		 test	 ecx, ecx
  00332	74 09		 je	 SHORT $LN40@response_t
  00334	c7 45 80 08 00
	00 00		 mov	 DWORD PTR tv224[ebp], 8
  0033b	eb 21		 jmp	 SHORT $LN41@response_t
$LN40@response_t:
  0033d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00343	83 c2 38	 add	 edx, 56			; 00000038H
  00346	52		 push	 edx
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00351	50		 push	 eax
  00352	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00357	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv224[ebp], 0
$LN41@response_t:
  0035e	6a 08		 push	 8
  00360	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00363	51		 push	 ecx
  00364	6b 55 84 60	 imul	 edx, DWORD PTR tv216[ebp], 96
  00368	8b 45 80	 mov	 eax, DWORD PTR tv224[ebp]
  0036b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00372	ff d1		 call	 ecx
  00374	89 45 f4	 mov	 DWORD PTR _pos1$[ebp], eax

; 456  : 
; 457  : 			if (get_local_entity_int_value (receiver, INT_TYPE_UPDATED))

  00377	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0037b	74 0a		 je	 SHORT $LN42@response_t
  0037d	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00380	8b 08		 mov	 ecx, DWORD PTR [eax]
  00382	89 4d 84	 mov	 DWORD PTR tv235[ebp], ecx
  00385	eb 1d		 jmp	 SHORT $LN43@response_t
$LN42@response_t:
  00387	68 c9 01 00 00	 push	 457			; 000001c9H
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00391	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00397	52		 push	 edx
  00398	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039d	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN43@response_t:
  003a4	b8 01 00 00 00	 mov	 eax, 1
  003a9	85 c0		 test	 eax, eax
  003ab	74 09		 je	 SHORT $LN44@response_t
  003ad	c7 45 80 ee 00
	00 00		 mov	 DWORD PTR tv242[ebp], 238 ; 000000eeH
  003b4	eb 1d		 jmp	 SHORT $LN45@response_t
$LN44@response_t:
  003b6	68 c9 01 00 00	 push	 457			; 000001c9H
  003bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003c6	51		 push	 ecx
  003c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003cc	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv242[ebp], 0
$LN45@response_t:
  003d3	68 ee 00 00 00	 push	 238			; 000000eeH
  003d8	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  003db	52		 push	 edx
  003dc	69 45 84 5c 04
	00 00		 imul	 eax, DWORD PTR tv235[ebp], 1116
  003e3	8b 4d 80	 mov	 ecx, DWORD PTR tv242[ebp]
  003e6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003ed	ff d2		 call	 edx
  003ef	85 c0		 test	 eax, eax
  003f1	74 63		 je	 SHORT $LN10@response_t

; 458  : 			{
; 459  : 				pos2.x = pos1->x - (mv->x * get_delta_time ());

  003f3	8b 45 d8	 mov	 eax, DWORD PTR _mv$[ebp]
  003f6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003fa	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00402	8b 4d f4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00405	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  00409	f3 0f 5c c8	 subss	 xmm1, xmm0
  0040d	f3 0f 11 4d e8	 movss	 DWORD PTR _pos2$[ebp], xmm1

; 460  : 				pos2.y = pos1->y - (mv->y * get_delta_time ());

  00412	8b 45 d8	 mov	 eax, DWORD PTR _mv$[ebp]
  00415	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0041a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00422	8b 4d f4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00425	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  0042a	f3 0f 5c c8	 subss	 xmm1, xmm0
  0042e	f3 0f 11 4d ec	 movss	 DWORD PTR _pos2$[ebp+4], xmm1

; 461  : 				pos2.z = pos1->z - (mv->z * get_delta_time ());

  00433	8b 45 d8	 mov	 eax, DWORD PTR _mv$[ebp]
  00436	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0043b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00443	8b 4d f4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00446	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0044b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0044f	f3 0f 11 4d f0	 movss	 DWORD PTR _pos2$[ebp+8], xmm1

; 462  : 			}
; 463  : 			else

  00454	eb 55		 jmp	 SHORT $LN11@response_t
$LN10@response_t:

; 464  : 			{
; 465  : 				pos2.x = pos1->x + (mv->x * get_delta_time ());

  00456	8b 45 d8	 mov	 eax, DWORD PTR _mv$[ebp]
  00459	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0045d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00465	8b 4d f4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00468	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  0046c	f3 0f 11 45 e8	 movss	 DWORD PTR _pos2$[ebp], xmm0

; 466  : 				pos2.y = pos1->y + (mv->y * get_delta_time ());

  00471	8b 45 d8	 mov	 eax, DWORD PTR _mv$[ebp]
  00474	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00479	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00481	8b 4d f4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00484	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  00489	f3 0f 11 45 ec	 movss	 DWORD PTR _pos2$[ebp+4], xmm0

; 467  : 				pos2.z = pos1->z + (mv->z * get_delta_time ());

  0048e	8b 45 d8	 mov	 eax, DWORD PTR _mv$[ebp]
  00491	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00496	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0049e	8b 4d f4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  004a1	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  004a6	f3 0f 11 45 f0	 movss	 DWORD PTR _pos2$[ebp+8], xmm0
$LN11@response_t:

; 468  : 			}
; 469  : 
; 470  : 			get_local_entity_vec3d (receiver, VEC3D_TYPE_GUIDE_POSITION, &guide_pos);

  004ab	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  004af	74 0a		 je	 SHORT $LN46@response_t
  004b1	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  004b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b6	89 4d 84	 mov	 DWORD PTR tv279[ebp], ecx
  004b9	eb 21		 jmp	 SHORT $LN47@response_t
$LN46@response_t:
  004bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  004c1	83 c2 47	 add	 edx, 71			; 00000047H
  004c4	52		 push	 edx
  004c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004cf	50		 push	 eax
  004d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d5	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv279[ebp], 0
$LN47@response_t:
  004dc	b9 01 00 00 00	 mov	 ecx, 1
  004e1	85 c9		 test	 ecx, ecx
  004e3	74 09		 je	 SHORT $LN48@response_t
  004e5	c7 45 80 04 00
	00 00		 mov	 DWORD PTR tv287[ebp], 4
  004ec	eb 21		 jmp	 SHORT $LN49@response_t
$LN48@response_t:
  004ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  004f4	83 c2 47	 add	 edx, 71			; 00000047H
  004f7	52		 push	 edx
  004f8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00502	50		 push	 eax
  00503	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00508	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv287[ebp], 0
$LN49@response_t:
  0050f	8d 4d dc	 lea	 ecx, DWORD PTR _guide_pos$[ebp]
  00512	51		 push	 ecx
  00513	6a 04		 push	 4
  00515	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00518	52		 push	 edx
  00519	6b 45 84 60	 imul	 eax, DWORD PTR tv279[ebp], 96
  0051d	8b 4d 80	 mov	 ecx, DWORD PTR tv287[ebp]
  00520	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00527	ff d2		 call	 edx

; 471  : 
; 472  : 			range = get_3d_perp_dist_of_point_from_line (pos1, &pos2, &guide_pos, NULL);

  00529	6a 00		 push	 0
  0052b	8d 45 dc	 lea	 eax, DWORD PTR _guide_pos$[ebp]
  0052e	50		 push	 eax
  0052f	8d 4d e8	 lea	 ecx, DWORD PTR _pos2$[ebp]
  00532	51		 push	 ecx
  00533	8b 55 f4	 mov	 edx, DWORD PTR _pos1$[ebp]
  00536	52		 push	 edx
  00537	e8 00 00 00 00	 call	 ?get_3d_perp_dist_of_point_from_line@@YGMPBUVEC3D@@00PAU1@@Z ; get_3d_perp_dist_of_point_from_line
  0053c	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 473  : 
; 474  : 			if (range > get_guide_criteria_value (sender, GUIDE_CRITERIA_RADIUS))

  0053f	6a 00		 push	 0
  00541	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00544	50		 push	 eax
  00545	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  0054a	d9 5d 84	 fstp	 DWORD PTR tv544[ebp]
  0054d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  00552	0f 2f 45 84	 comiss	 xmm0, DWORD PTR tv544[ebp]
  00556	76 07		 jbe	 SHORT $LN12@response_t

; 475  : 			{
; 476  : 				return FALSE;

  00558	33 c0		 xor	 eax, eax
  0055a	e9 b4 02 00 00	 jmp	 $LN1@response_t
$LN12@response_t:

; 477  : 			}
; 478  : 		}
; 479  : 	}
; 480  : 
; 481  : 	//
; 482  : 	// check weapon vector
; 483  : 	//
; 484  : 
; 485  : 	if (get_guide_criteria_valid (sender, GUIDE_CRITERIA_WEAPON_VECTOR))

  0055f	6a 05		 push	 5
  00561	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00564	50		 push	 eax
  00565	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  0056a	85 c0		 test	 eax, eax
  0056c	0f 84 9c 02 00
	00		 je	 $LN18@response_t

; 486  : 	{
; 487  : 		entity_sub_types
; 488  : 			selected_weapon;
; 489  : 
; 490  : 		vec3d
; 491  : 			*weapon_vector,
; 492  : 			*weapon_to_target_vector;
; 493  : 
; 494  : 		float
; 495  : 			launch_angle_error;
; 496  : 
; 497  : 		selected_weapon = get_local_entity_int_value (receiver, INT_TYPE_SELECTED_WEAPON);

  00572	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00576	74 0a		 je	 SHORT $LN50@response_t
  00578	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0057b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0057d	89 4d 84	 mov	 DWORD PTR tv312[ebp], ecx
  00580	eb 21		 jmp	 SHORT $LN51@response_t
$LN50@response_t:
  00582	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00588	83 c2 62	 add	 edx, 98			; 00000062H
  0058b	52		 push	 edx
  0058c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00591	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00596	50		 push	 eax
  00597	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0059c	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv312[ebp], 0
$LN51@response_t:
  005a3	b9 01 00 00 00	 mov	 ecx, 1
  005a8	85 c9		 test	 ecx, ecx
  005aa	74 09		 je	 SHORT $LN52@response_t
  005ac	c7 45 80 b8 00
	00 00		 mov	 DWORD PTR tv320[ebp], 184 ; 000000b8H
  005b3	eb 21		 jmp	 SHORT $LN53@response_t
$LN52@response_t:
  005b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  005bb	83 c2 62	 add	 edx, 98			; 00000062H
  005be	52		 push	 edx
  005bf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005c9	50		 push	 eax
  005ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005cf	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv320[ebp], 0
$LN53@response_t:
  005d6	68 b8 00 00 00	 push	 184			; 000000b8H
  005db	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  005de	51		 push	 ecx
  005df	69 55 84 5c 04
	00 00		 imul	 edx, DWORD PTR tv312[ebp], 1116
  005e6	8b 45 80	 mov	 eax, DWORD PTR tv320[ebp]
  005e9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  005f0	ff d1		 call	 ecx
  005f2	89 45 d4	 mov	 DWORD PTR _selected_weapon$4[ebp], eax

; 498  : 
; 499  : 		ASSERT (selected_weapon != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  005f5	83 7d d4 00	 cmp	 DWORD PTR _selected_weapon$4[ebp], 0
  005f9	75 18		 jne	 SHORT $LN14@response_t
  005fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00600	83 c0 64	 add	 eax, 100		; 00000064H
  00603	50		 push	 eax
  00604	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00609	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@
  0060e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@response_t:

; 500  : 
; 501  : 		if (get_local_entity_int_value (receiver, INT_TYPE_WEAPON_AND_TARGET_VECTORS_VALID))

  00613	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00617	74 0a		 je	 SHORT $LN54@response_t
  00619	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0061c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0061e	89 4d 84	 mov	 DWORD PTR tv336[ebp], ecx
  00621	eb 1d		 jmp	 SHORT $LN55@response_t
$LN54@response_t:
  00623	68 f5 01 00 00	 push	 501			; 000001f5H
  00628	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00633	52		 push	 edx
  00634	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00639	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv336[ebp], 0
$LN55@response_t:
  00640	b8 01 00 00 00	 mov	 eax, 1
  00645	85 c0		 test	 eax, eax
  00647	74 09		 je	 SHORT $LN56@response_t
  00649	c7 45 80 02 01
	00 00		 mov	 DWORD PTR tv343[ebp], 258 ; 00000102H
  00650	eb 1d		 jmp	 SHORT $LN57@response_t
$LN56@response_t:
  00652	68 f5 01 00 00	 push	 501			; 000001f5H
  00657	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0065c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00662	51		 push	 ecx
  00663	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00668	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv343[ebp], 0
$LN57@response_t:
  0066f	68 02 01 00 00	 push	 258			; 00000102H
  00674	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00677	52		 push	 edx
  00678	69 45 84 5c 04
	00 00		 imul	 eax, DWORD PTR tv336[ebp], 1116
  0067f	8b 4d 80	 mov	 ecx, DWORD PTR tv343[ebp]
  00682	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00689	ff d2		 call	 edx
  0068b	85 c0		 test	 eax, eax
  0068d	0f 84 7b 01 00
	00		 je	 $LN18@response_t

; 502  : 		{
; 503  : 			weapon_vector = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_WEAPON_VECTOR);

  00693	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00697	74 0a		 je	 SHORT $LN58@response_t
  00699	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0069c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0069e	89 4d 84	 mov	 DWORD PTR tv356[ebp], ecx
  006a1	eb 21		 jmp	 SHORT $LN59@response_t
$LN58@response_t:
  006a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  006a9	83 c2 68	 add	 edx, 104		; 00000068H
  006ac	52		 push	 edx
  006ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006b7	50		 push	 eax
  006b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006bd	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv356[ebp], 0
$LN59@response_t:
  006c4	b9 01 00 00 00	 mov	 ecx, 1
  006c9	85 c9		 test	 ecx, ecx
  006cb	74 09		 je	 SHORT $LN60@response_t
  006cd	c7 45 80 0e 00
	00 00		 mov	 DWORD PTR tv364[ebp], 14 ; 0000000eH
  006d4	eb 21		 jmp	 SHORT $LN61@response_t
$LN60@response_t:
  006d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  006dc	83 c2 68	 add	 edx, 104		; 00000068H
  006df	52		 push	 edx
  006e0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  006ea	50		 push	 eax
  006eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f0	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv364[ebp], 0
$LN61@response_t:
  006f7	6a 0e		 push	 14			; 0000000eH
  006f9	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  006fc	51		 push	 ecx
  006fd	6b 55 84 60	 imul	 edx, DWORD PTR tv356[ebp], 96
  00701	8b 45 80	 mov	 eax, DWORD PTR tv364[ebp]
  00704	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0070b	ff d1		 call	 ecx
  0070d	89 45 d0	 mov	 DWORD PTR _weapon_vector$3[ebp], eax

; 504  : 
; 505  : 			ASSERT (weapon_vector);

  00710	83 7d d0 00	 cmp	 DWORD PTR _weapon_vector$3[ebp], 0
  00714	75 18		 jne	 SHORT $LN16@response_t
  00716	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0071b	83 c0 6a	 add	 eax, 106		; 0000006aH
  0071e	50		 push	 eax
  0071f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00724	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HEGILGAC@weapon_vector@
  00729	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@response_t:

; 506  : 
; 507  : 			weapon_to_target_vector = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_WEAPON_TO_TARGET_VECTOR);

  0072e	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00732	74 0a		 je	 SHORT $LN62@response_t
  00734	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00737	8b 08		 mov	 ecx, DWORD PTR [eax]
  00739	89 4d 84	 mov	 DWORD PTR tv381[ebp], ecx
  0073c	eb 21		 jmp	 SHORT $LN63@response_t
$LN62@response_t:
  0073e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00744	83 c2 6c	 add	 edx, 108		; 0000006cH
  00747	52		 push	 edx
  00748	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0074d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00752	50		 push	 eax
  00753	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00758	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv381[ebp], 0
$LN63@response_t:
  0075f	b9 01 00 00 00	 mov	 ecx, 1
  00764	85 c9		 test	 ecx, ecx
  00766	74 09		 je	 SHORT $LN64@response_t
  00768	c7 45 80 0d 00
	00 00		 mov	 DWORD PTR tv389[ebp], 13 ; 0000000dH
  0076f	eb 21		 jmp	 SHORT $LN65@response_t
$LN64@response_t:
  00771	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00777	83 c2 6c	 add	 edx, 108		; 0000006cH
  0077a	52		 push	 edx
  0077b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00780	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00785	50		 push	 eax
  00786	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0078b	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv389[ebp], 0
$LN65@response_t:
  00792	6a 0d		 push	 13			; 0000000dH
  00794	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00797	51		 push	 ecx
  00798	6b 55 84 60	 imul	 edx, DWORD PTR tv381[ebp], 96
  0079c	8b 45 80	 mov	 eax, DWORD PTR tv389[ebp]
  0079f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  007a6	ff d1		 call	 ecx
  007a8	89 45 cc	 mov	 DWORD PTR _weapon_to_target_vector$2[ebp], eax

; 508  : 
; 509  : 			ASSERT (weapon_to_target_vector);

  007ab	83 7d cc 00	 cmp	 DWORD PTR _weapon_to_target_vector$2[ebp], 0
  007af	75 18		 jne	 SHORT $LN17@response_t
  007b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  007b6	83 c0 6e	 add	 eax, 110		; 0000006eH
  007b9	50		 push	 eax
  007ba	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  007bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@
  007c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@response_t:

; 510  : 
; 511  : 			launch_angle_error = acos (get_3d_unit_vector_dot_product (weapon_vector, weapon_to_target_vector));

  007c9	8b 45 cc	 mov	 eax, DWORD PTR _weapon_to_target_vector$2[ebp]
  007cc	50		 push	 eax
  007cd	8b 4d d0	 mov	 ecx, DWORD PTR _weapon_vector$3[ebp]
  007d0	51		 push	 ecx
  007d1	e8 00 00 00 00	 call	 ?get_3d_unit_vector_dot_product@@YGMPBUVEC3D@@0@Z ; get_3d_unit_vector_dot_product
  007d6	51		 push	 ecx
  007d7	d9 1c 24	 fstp	 DWORD PTR [esp]
  007da	e8 00 00 00 00	 call	 ?acos@@YGMM@Z		; acos
  007df	d9 5d c8	 fstp	 DWORD PTR _launch_angle_error$1[ebp]

; 512  : 
; 513  : 			if (fabs (launch_angle_error) > weapon_database[selected_weapon].max_launch_angle_error)

  007e2	51		 push	 ecx
  007e3	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _launch_angle_error$1[ebp]
  007e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ed	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  007f2	d9 5d 84	 fstp	 DWORD PTR tv607[ebp]
  007f5	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv607[ebp]
  007fa	69 45 d4 e0 00
	00 00		 imul	 eax, DWORD PTR _selected_weapon$4[ebp], 224
  00801	0f 2f 80 d0 00
	00 00		 comiss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+208]
  00808	76 04		 jbe	 SHORT $LN18@response_t

; 514  : 			{
; 515  : 				return FALSE;

  0080a	33 c0		 xor	 eax, eax
  0080c	eb 05		 jmp	 SHORT $LN1@response_t
$LN18@response_t:

; 516  : 			}
; 517  : 		}
; 518  : 	}
; 519  : 
; 520  : 	return TRUE;

  0080e	b8 01 00 00 00	 mov	 eax, 1
$LN1@response_t:

; 521  : }

  00813	5f		 pop	 edi
  00814	5e		 pop	 esi
  00815	5b		 pop	 ebx
  00816	8b e5		 mov	 esp, ebp
  00818	5d		 pop	 ebp
  00819	c2 10 00	 ret	 16			; 00000010H
?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_check_mobile_reached_guide
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
;	COMDAT ?response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv144 = -80						; size = 4
tv85 = -80						; size = 4
tv136 = -76						; size = 4
tv77 = -76						; size = 4
_sound_sample_index$1 = -8				; size = 4
_position$2 = -4					; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_waypoint_touch_down_reached, COMDAT

; 325  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 326  : 
; 327  : 	#if DEBUG_MODULE
; 328  : 
; 329  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 330  : 
; 331  : 	debug_log ("FW_MSGS: switching to taxiing state");
; 332  : 
; 333  : 	#endif
; 334  : 
; 335  : 	//
; 336  : 	// clear any smoke trails emitting from the aircraft
; 337  : 	//
; 338  : 
; 339  : 	clear_smoke_list_generator_lifetime (receiver, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_LIGHT_DAMAGE);

  00009	6a 05		 push	 5
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z ; clear_smoke_list_generator_lifetime

; 340  : 	clear_smoke_list_generator_lifetime (receiver, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_MEDIUM_DAMAGE);

  00014	6a 06		 push	 6
  00016	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z ; clear_smoke_list_generator_lifetime

; 341  : 	clear_smoke_list_generator_lifetime (receiver, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_HEAVY_DAMAGE);

  0001f	6a 08		 push	 8
  00021	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z ; clear_smoke_list_generator_lifetime

; 342  : 
; 343  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00031	0f 85 67 01 00
	00		 jne	 $LN2@response_t

; 344  : 	{
; 345  : 		set_client_server_entity_int_value (receiver, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_TAXIING);

  00037	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0003b	74 0a		 je	 SHORT $LN4@response_t
  0003d	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	89 4d b4	 mov	 DWORD PTR tv77[ebp], ecx
  00045	eb 21		 jmp	 SHORT $LN5@response_t
$LN4@response_t:
  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0004d	83 c2 14	 add	 edx, 20			; 00000014H
  00050	52		 push	 edx
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00061	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN5@response_t:
  00068	b9 01 00 00 00	 mov	 ecx, 1
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 09		 je	 SHORT $LN6@response_t
  00071	c7 45 b0 97 00
	00 00		 mov	 DWORD PTR tv85[ebp], 151 ; 00000097H
  00078	eb 21		 jmp	 SHORT $LN7@response_t
$LN6@response_t:
  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00080	83 c2 14	 add	 edx, 20			; 00000014H
  00083	52		 push	 edx
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00094	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN7@response_t:
  0009b	6a 0b		 push	 11			; 0000000bH
  0009d	68 97 00 00 00	 push	 151			; 00000097H
  000a2	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000a5	51		 push	 ecx
  000a6	69 55 b4 b8 08
	00 00		 imul	 edx, DWORD PTR tv77[ebp], 2232
  000ad	8b 45 b0	 mov	 eax, DWORD PTR tv85[ebp]
  000b0	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  000bd	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000c0	ff d0		 call	 eax

; 346  : 
; 347  : 		open_client_server_entity_airbrakes( receiver );

  000c2	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?open_client_server_entity_airbrakes@@YGXPAUENTITY@@@Z ; open_client_server_entity_airbrakes

; 348  : 
; 349  : 		close_client_server_entity_flaps( receiver );

  000cb	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?close_client_server_entity_flaps@@YGXPAUENTITY@@@Z ; close_client_server_entity_flaps

; 350  : 
; 351  : 		write_tacview_unit_event(receiver, TACVIEW_UNIT_LANDED, NULL);

  000d4	6a 00		 push	 0
  000d6	6a 03		 push	 3
  000d8	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z ; write_tacview_unit_event

; 352  : 
; 353  : 		//
; 354  : 		// sound effect
; 355  : 		//
; 356  : 		{
; 357  : 			vec3d
; 358  : 				*position;
; 359  : 
; 360  : 			sound_sample_indices
; 361  : 				sound_sample_index;
; 362  : 
; 363  : 			#if DEBUG_MODULE
; 364  : 
; 365  : 			debug_log_entity_message (message, receiver, sender, pargs);
; 366  : 
; 367  : 			#endif
; 368  : 
; 369  : 			position = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_POSITION);

  000e1	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  000e5	74 0a		 je	 SHORT $LN8@response_t
  000e7	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ec	89 4d b4	 mov	 DWORD PTR tv136[ebp], ecx
  000ef	eb 21		 jmp	 SHORT $LN9@response_t
$LN8@response_t:
  000f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000f7	83 c2 2c	 add	 edx, 44			; 0000002cH
  000fa	52		 push	 edx
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN9@response_t:
  00112	b9 01 00 00 00	 mov	 ecx, 1
  00117	85 c9		 test	 ecx, ecx
  00119	74 09		 je	 SHORT $LN10@response_t
  0011b	c7 45 b0 08 00
	00 00		 mov	 DWORD PTR tv144[ebp], 8
  00122	eb 21		 jmp	 SHORT $LN11@response_t
$LN10@response_t:
  00124	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0012a	83 c2 2c	 add	 edx, 44			; 0000002cH
  0012d	52		 push	 edx
  0012e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN11@response_t:
  00145	6a 08		 push	 8
  00147	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0014a	51		 push	 ecx
  0014b	6b 55 b4 60	 imul	 edx, DWORD PTR tv136[ebp], 96
  0014f	8b 45 b0	 mov	 eax, DWORD PTR tv144[ebp]
  00152	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00159	ff d1		 call	 ecx
  0015b	89 45 fc	 mov	 DWORD PTR _position$2[ebp], eax

; 370  : 
; 371  : 			sound_sample_index = SOUND_SAMPLE_INDEX_JET_TOUCHDOWN_SCREECH;

  0015e	c7 45 f8 34 00
	00 00		 mov	 DWORD PTR _sound_sample_index$1[ebp], 52 ; 00000034H

; 372  : 
; 373  : 			create_client_server_sound_effect_entity

  00165	8d 45 f8	 lea	 eax, DWORD PTR _sound_sample_index$1[ebp]
  00168	50		 push	 eax
  00169	6a 01		 push	 1
  0016b	6a 00		 push	 0
  0016d	6a 01		 push	 1
  0016f	51		 push	 ecx
  00170	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00178	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017d	51		 push	 ecx
  0017e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00186	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018b	6a 00		 push	 0
  0018d	6a 00		 push	 0
  0018f	6a 00		 push	 0
  00191	6a 1a		 push	 26			; 0000001aH
  00193	6a 00		 push	 0
  00195	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00198	51		 push	 ecx
  00199	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN2@response_t:

; 374  : 			(
; 375  : 				receiver,
; 376  : 				ENTITY_SIDE_NEUTRAL,
; 377  : 				ENTITY_SUB_TYPE_EFFECT_SOUND_MISC,
; 378  : 				SOUND_CHANNEL_SOUND_EFFECT,
; 379  : 				SOUND_LOCALITY_ALL,
; 380  : 				NULL,												// position
; 381  : 				1.0,												// amplification
; 382  : 				1.0,												// Werewolf pitch
; 383  : 				TRUE,												// valid sound effect
; 384  : 				FALSE,											// looping
; 385  : 				1,													// sample count
; 386  : 				&sound_sample_index							// sample index list
; 387  : 			);
; 388  : 		}
; 389  : 	}
; 390  : 
; 391  : 	return (TRUE);

  0019e	b8 01 00 00 00	 mov	 eax, 1

; 392  : }

  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 10 00	 ret	 16			; 00000010H
?response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_waypoint_touch_down_reached
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
;	COMDAT ?response_to_waypoint_start_up_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_waypoint_start_up_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_waypoint_start_up_reached, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 293  : 
; 294  : 	#if DEBUG_MODULE
; 295  : 
; 296  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 297  : 
; 298  : 	debug_log ("FW_MSGS: switching to navigating state");
; 299  : 
; 300  : 	#endif
; 301  : 
; 302  : 	set_client_server_fixed_wing_afterburner_state (receiver, ON);

  00009	6a 01		 push	 1
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?set_client_server_fixed_wing_afterburner_state@@YGXPAUENTITY@@H@Z ; set_client_server_fixed_wing_afterburner_state

; 303  : 
; 304  : 	open_client_server_entity_flaps( receiver );

  00014	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?open_client_server_entity_flaps@@YGXPAUENTITY@@@Z ; open_client_server_entity_flaps

; 305  : 
; 306  : 	/////////////////////////////////////////////////////////////////
; 307  : 	//
; 308  : 	// SPECIAL_EFFECT_HOOK FOR PROCEEDING TO TAKEOFF
; 309  : 	//
; 310  : 	/////////////////////////////////////////////////////////////////
; 311  : 
; 312  : 	/////////////////////////////////////////////////////////////////
; 313  : 	//
; 314  : 	//
; 315  : 	/////////////////////////////////////////////////////////////////
; 316  : 
; 317  : 	return (TRUE);

  0001d	b8 01 00 00 00	 mov	 eax, 1

; 318  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 10 00	 ret	 16			; 00000010H
?response_to_waypoint_start_up_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_waypoint_start_up_reached
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
;	COMDAT ?response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv136 = -72						; size = 4
tv79 = -72						; size = 4
tv128 = -68						; size = 4
tv71 = -68						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_waypoint_lift_off_reached, COMDAT

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 265  : 
; 266  : 	#if DEBUG_MODULE
; 267  : 
; 268  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 269  : 
; 270  : 	debug_log ("FW_MSGS: switching to navigating state");
; 271  : 
; 272  : 	#endif
; 273  : 
; 274  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	0f 85 35 01 00
	00		 jne	 $LN2@response_t

; 275  : 	{
; 276  : 
; 277  : 		ASSERT (get_local_entity_int_value (receiver, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_TAXIING);

  00016	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0001a	74 0a		 je	 SHORT $LN5@response_t
  0001c	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d bc	 mov	 DWORD PTR tv71[ebp], ecx
  00024	eb 21		 jmp	 SHORT $LN6@response_t
$LN5@response_t:
  00026	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0002c	83 c2 0d	 add	 edx, 13			; 0000000dH
  0002f	52		 push	 edx
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00040	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN6@response_t:
  00047	b9 01 00 00 00	 mov	 ecx, 1
  0004c	85 c9		 test	 ecx, ecx
  0004e	74 09		 je	 SHORT $LN7@response_t
  00050	c7 45 b8 97 00
	00 00		 mov	 DWORD PTR tv79[ebp], 151 ; 00000097H
  00057	eb 21		 jmp	 SHORT $LN8@response_t
$LN7@response_t:
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0005f	83 c2 0d	 add	 edx, 13			; 0000000dH
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00073	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN8@response_t:
  0007a	68 97 00 00 00	 push	 151			; 00000097H
  0007f	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00082	51		 push	 ecx
  00083	69 55 bc 5c 04
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 1116
  0008a	8b 45 b8	 mov	 eax, DWORD PTR tv79[ebp]
  0008d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00094	ff d1		 call	 ecx
  00096	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00099	74 18		 je	 SHORT $LN3@response_t
  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000a0	83 c0 0d	 add	 eax, 13			; 0000000dH
  000a3	50		 push	 eax
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0FP@PHFHIEC@get_local_entity_int_value?5?$CIrec@
  000ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@response_t:

; 278  : 
; 279  : 		set_client_server_entity_int_value (receiver, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_TAKEOFF);

  000b3	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  000b7	74 0a		 je	 SHORT $LN9@response_t
  000b9	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	89 4d bc	 mov	 DWORD PTR tv128[ebp], ecx
  000c1	eb 21		 jmp	 SHORT $LN10@response_t
$LN9@response_t:
  000c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000c9	83 c2 0f	 add	 edx, 15			; 0000000fH
  000cc	52		 push	 edx
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000dd	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN10@response_t:
  000e4	b9 01 00 00 00	 mov	 ecx, 1
  000e9	85 c9		 test	 ecx, ecx
  000eb	74 09		 je	 SHORT $LN11@response_t
  000ed	c7 45 b8 97 00
	00 00		 mov	 DWORD PTR tv136[ebp], 151 ; 00000097H
  000f4	eb 21		 jmp	 SHORT $LN12@response_t
$LN11@response_t:
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000fc	83 c2 0f	 add	 edx, 15			; 0000000fH
  000ff	52		 push	 edx
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00110	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN12@response_t:
  00117	6a 09		 push	 9
  00119	68 97 00 00 00	 push	 151			; 00000097H
  0011e	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00121	51		 push	 ecx
  00122	69 55 bc b8 08
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 2232
  00129	8b 45 b8	 mov	 eax, DWORD PTR tv136[ebp]
  0012c	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00133	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00139	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0013c	ff d0		 call	 eax

; 280  : 
; 281  : 		write_tacview_unit_event(receiver, TACVIEW_UNIT_TOOK_OFF, NULL);

  0013e	6a 00		 push	 0
  00140	6a 02		 push	 2
  00142	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z ; write_tacview_unit_event
$LN2@response_t:

; 282  : 	}
; 283  : 
; 284  : 	return (TRUE);

  0014b	b8 01 00 00 00	 mov	 eax, 1

; 285  : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 10 00	 ret	 16			; 00000010H
?response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_waypoint_lift_off_reached
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
;	COMDAT ?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv171 = -104						; size = 4
tv192 = -100						; size = 4
tv164 = -100						; size = 4
tv142 = -100						; size = 4
tv89 = -100						; size = 4
tv220 = -96						; size = 4
tv184 = -96						; size = 4
tv156 = -96						; size = 4
tv134 = -96						; size = 4
tv81 = -96						; size = 4
tv73 = -96						; size = 4
_damage_modifier$ = -28					; size = 4
_new_damage_state$ = -24				; size = 4
_old_damage_state$ = -20				; size = 4
_total_damage_level$ = -16				; size = 4
_aggressor$ = -12					; size = 4
_enemy_force$ = -8					; size = 4
_force$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_collision, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 147  : 
; 148  : 	entity
; 149  : 		*force,
; 150  : 		*enemy_force,
; 151  : 		*aggressor;
; 152  : 
; 153  : 	int
; 154  : 		total_damage_level;
; 155  : 
; 156  : 	aircraft_damage_types
; 157  : 		old_damage_state,
; 158  : 		new_damage_state;
; 159  : 
; 160  : 	float
; 161  : 		damage_modifier;
; 162  : 
; 163  : 	#if DEBUG_MODULE
; 164  : 
; 165  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 166  : 
; 167  : 	#endif
; 168  : 
; 169  : 	damage_modifier = va_arg (pargs, double);

  00009	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0000c	83 c0 08	 add	 eax, 8
  0000f	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00012	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00015	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0001a	f3 0f 11 45 e4	 movss	 DWORD PTR _damage_modifier$[ebp], xmm0

; 170  : 
; 171  : 	if (sender)

  0001f	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00023	0f 84 c1 00 00
	00		 je	 $LN2@response_t

; 172  : 	{
; 173  : 		if (get_local_entity_type (sender) == ENTITY_TYPE_WEAPON)

  00029	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0002d	74 0a		 je	 SHORT $LN12@response_t
  0002f	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	89 4d a0	 mov	 DWORD PTR tv73[ebp], ecx
  00037	eb 1d		 jmp	 SHORT $LN13@response_t
$LN12@response_t:
  00039	68 ad 00 00 00	 push	 173			; 000000adH
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004f	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN13@response_t:
  00056	83 7d a0 25	 cmp	 DWORD PTR tv73[ebp], 37	; 00000025H
  0005a	0f 85 82 00 00
	00		 jne	 $LN4@response_t

; 174  : 		{
; 175  : 			aggressor = get_local_entity_parent (sender, LIST_TYPE_LAUNCHED_WEAPON);

  00060	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00064	74 0a		 je	 SHORT $LN14@response_t
  00066	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00069	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006b	89 4d a0	 mov	 DWORD PTR tv81[ebp], ecx
  0006e	eb 21		 jmp	 SHORT $LN15@response_t
$LN14@response_t:
  00070	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00076	83 c2 1d	 add	 edx, 29			; 0000001dH
  00079	52		 push	 edx
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008a	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN15@response_t:
  00091	b9 01 00 00 00	 mov	 ecx, 1
  00096	85 c9		 test	 ecx, ecx
  00098	74 09		 je	 SHORT $LN16@response_t
  0009a	c7 45 9c 18 00
	00 00		 mov	 DWORD PTR tv89[ebp], 24	; 00000018H
  000a1	eb 21		 jmp	 SHORT $LN17@response_t
$LN16@response_t:
  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000a9	83 c2 1d	 add	 edx, 29			; 0000001dH
  000ac	52		 push	 edx
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000bd	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN17@response_t:
  000c4	6a 18		 push	 24			; 00000018H
  000c6	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  000c9	51		 push	 ecx
  000ca	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv81[ebp], 180
  000d1	8b 45 9c	 mov	 eax, DWORD PTR tv89[ebp]
  000d4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000db	ff d1		 call	 ecx
  000dd	89 45 f4	 mov	 DWORD PTR _aggressor$[ebp], eax

; 176  : 		}
; 177  : 		else

  000e0	eb 06		 jmp	 SHORT $LN5@response_t
$LN4@response_t:

; 178  : 		{
; 179  : 			aggressor = sender;

  000e2	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000e5	89 45 f4	 mov	 DWORD PTR _aggressor$[ebp], eax
$LN5@response_t:

; 180  : 		}
; 181  : 	}
; 182  : 	else

  000e8	eb 07		 jmp	 SHORT $LN3@response_t
$LN2@response_t:

; 183  : 	{
; 184  : 		aggressor = NULL;

  000ea	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _aggressor$[ebp], 0
$LN3@response_t:

; 185  : 	}
; 186  : 
; 187  : 	force = get_local_force_entity ((entity_sides) get_local_entity_int_value (receiver, INT_TYPE_SIDE));

  000f1	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  000f5	74 0a		 je	 SHORT $LN18@response_t
  000f7	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  000fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fc	89 4d a0	 mov	 DWORD PTR tv134[ebp], ecx
  000ff	eb 21		 jmp	 SHORT $LN19@response_t
$LN18@response_t:
  00101	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00107	83 c2 29	 add	 edx, 41			; 00000029H
  0010a	52		 push	 edx
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN19@response_t:
  00122	b9 01 00 00 00	 mov	 ecx, 1
  00127	85 c9		 test	 ecx, ecx
  00129	74 09		 je	 SHORT $LN20@response_t
  0012b	c7 45 9c bb 00
	00 00		 mov	 DWORD PTR tv142[ebp], 187 ; 000000bbH
  00132	eb 21		 jmp	 SHORT $LN21@response_t
$LN20@response_t:
  00134	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0013a	83 c2 29	 add	 edx, 41			; 00000029H
  0013d	52		 push	 edx
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00148	50		 push	 eax
  00149	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN21@response_t:
  00155	68 bb 00 00 00	 push	 187			; 000000bbH
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0015d	51		 push	 ecx
  0015e	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv134[ebp], 1116
  00165	8b 45 9c	 mov	 eax, DWORD PTR tv142[ebp]
  00168	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0016f	ff d1		 call	 ecx
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00177	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 188  : 
; 189  : 	enemy_force = get_local_force_entity (get_enemy_side (get_local_entity_int_value (receiver, INT_TYPE_SIDE)));

  0017a	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0017e	74 0a		 je	 SHORT $LN22@response_t
  00180	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00183	8b 08		 mov	 ecx, DWORD PTR [eax]
  00185	89 4d a0	 mov	 DWORD PTR tv156[ebp], ecx
  00188	eb 21		 jmp	 SHORT $LN23@response_t
$LN22@response_t:
  0018a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00190	83 c2 2b	 add	 edx, 43			; 0000002bH
  00193	52		 push	 edx
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00199	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019e	50		 push	 eax
  0019f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a4	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN23@response_t:
  001ab	b9 01 00 00 00	 mov	 ecx, 1
  001b0	85 c9		 test	 ecx, ecx
  001b2	74 09		 je	 SHORT $LN24@response_t
  001b4	c7 45 9c bb 00
	00 00		 mov	 DWORD PTR tv164[ebp], 187 ; 000000bbH
  001bb	eb 21		 jmp	 SHORT $LN25@response_t
$LN24@response_t:
  001bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001c3	83 c2 2b	 add	 edx, 43			; 0000002bH
  001c6	52		 push	 edx
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d7	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN25@response_t:
  001de	68 bb 00 00 00	 push	 187			; 000000bbH
  001e3	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  001e6	51		 push	 ecx
  001e7	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv156[ebp], 1116
  001ee	8b 45 9c	 mov	 eax, DWORD PTR tv164[ebp]
  001f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f8	ff d1		 call	 ecx
  001fa	83 f8 01	 cmp	 eax, 1
  001fd	75 09		 jne	 SHORT $LN26@response_t
  001ff	c7 45 98 02 00
	00 00		 mov	 DWORD PTR tv171[ebp], 2
  00206	eb 07		 jmp	 SHORT $LN27@response_t
$LN26@response_t:
  00208	c7 45 98 01 00
	00 00		 mov	 DWORD PTR tv171[ebp], 1
$LN27@response_t:
  0020f	8b 55 98	 mov	 edx, DWORD PTR tv171[ebp]
  00212	52		 push	 edx
  00213	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00218	89 45 f8	 mov	 DWORD PTR _enemy_force$[ebp], eax

; 190  : 
; 191  : 	//
; 192  : 	// assess damage
; 193  : 	//
; 194  : 
; 195  : 	old_damage_state = aircraft_critically_damaged (receiver);

  0021b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  00224	89 45 ec	 mov	 DWORD PTR _old_damage_state$[ebp], eax

; 196  : 
; 197  : 	damage_client_server_entity (receiver, sender, damage_modifier);

  00227	51		 push	 ecx
  00228	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _damage_modifier$[ebp]
  0022d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00232	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00235	50		 push	 eax
  00236	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00239	51		 push	 ecx
  0023a	e8 00 00 00 00	 call	 ?damage_client_server_entity@@YGHPAUENTITY@@0M@Z ; damage_client_server_entity

; 198  : 
; 199  : 	total_damage_level = get_local_entity_int_value (receiver, INT_TYPE_DAMAGE_LEVEL);

  0023f	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00243	74 0a		 je	 SHORT $LN28@response_t
  00245	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	89 4d a0	 mov	 DWORD PTR tv184[ebp], ecx
  0024d	eb 21		 jmp	 SHORT $LN29@response_t
$LN28@response_t:
  0024f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00255	83 c2 35	 add	 edx, 53			; 00000035H
  00258	52		 push	 edx
  00259	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00263	50		 push	 eax
  00264	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00269	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN29@response_t:
  00270	b9 01 00 00 00	 mov	 ecx, 1
  00275	85 c9		 test	 ecx, ecx
  00277	74 09		 je	 SHORT $LN30@response_t
  00279	c7 45 9c 25 00
	00 00		 mov	 DWORD PTR tv192[ebp], 37 ; 00000025H
  00280	eb 21		 jmp	 SHORT $LN31@response_t
$LN30@response_t:
  00282	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00288	83 c2 35	 add	 edx, 53			; 00000035H
  0028b	52		 push	 edx
  0028c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00291	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00296	50		 push	 eax
  00297	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029c	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN31@response_t:
  002a3	6a 25		 push	 37			; 00000025H
  002a5	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002a8	51		 push	 ecx
  002a9	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv184[ebp], 1116
  002b0	8b 45 9c	 mov	 eax, DWORD PTR tv192[ebp]
  002b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002ba	ff d1		 call	 ecx
  002bc	89 45 f0	 mov	 DWORD PTR _total_damage_level$[ebp], eax

; 200  : 
; 201  : 	new_damage_state = aircraft_critically_damaged (receiver);

  002bf	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  002c8	89 45 e8	 mov	 DWORD PTR _new_damage_state$[ebp], eax

; 202  : 
; 203  : 	/////////////////////////////////////////////////////////////////
; 204  : 	//
; 205  : 	// credit kill
; 206  : 	//
; 207  : 	/////////////////////////////////////////////////////////////////
; 208  : 
; 209  : 	if ((aggressor) && (old_damage_state == AIRCRAFT_DAMAGE_NONE) && (new_damage_state > AIRCRAFT_DAMAGE_NONE))

  002cb	83 7d f4 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  002cf	74 19		 je	 SHORT $LN6@response_t
  002d1	83 7d ec 00	 cmp	 DWORD PTR _old_damage_state$[ebp], 0
  002d5	75 13		 jne	 SHORT $LN6@response_t
  002d7	83 7d e8 00	 cmp	 DWORD PTR _new_damage_state$[ebp], 0
  002db	7e 0d		 jle	 SHORT $LN6@response_t

; 210  : 	{
; 211  : 		credit_client_server_mobile_kill (receiver, aggressor);

  002dd	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  002e0	50		 push	 eax
  002e1	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002e4	51		 push	 ecx
  002e5	e8 00 00 00 00	 call	 ?credit_client_server_mobile_kill@@YGXPAUENTITY@@0@Z ; credit_client_server_mobile_kill
$LN6@response_t:

; 212  : 	}
; 213  : 
; 214  : 	/////////////////////////////////////////////////////////////////
; 215  : 	//
; 216  : 	// Assess damage caused
; 217  : 	//
; 218  : 	/////////////////////////////////////////////////////////////////
; 219  : 
; 220  : 	if (total_damage_level <= 0)

  002ea	83 7d f0 00	 cmp	 DWORD PTR _total_damage_level$[ebp], 0
  002ee	0f 8f 8b 00 00
	00		 jg	 $LN7@response_t

; 221  : 	{
; 222  : 
; 223  : 		notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, force, receiver, aggressor);

  002f4	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  002f7	50		 push	 eax
  002f8	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002fb	51		 push	 ecx
  002fc	8b 55 fc	 mov	 edx, DWORD PTR _force$[ebp]
  002ff	52		 push	 edx
  00300	6a 15		 push	 21			; 00000015H
  00302	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00307	83 c4 10	 add	 esp, 16			; 00000010H

; 224  : 
; 225  : 		notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, enemy_force, receiver, aggressor);

  0030a	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0030d	50		 push	 eax
  0030e	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00311	51		 push	 ecx
  00312	8b 55 f8	 mov	 edx, DWORD PTR _enemy_force$[ebp]
  00315	52		 push	 edx
  00316	6a 15		 push	 21			; 00000015H
  00318	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0031d	83 c4 10	 add	 esp, 16			; 00000010H

; 226  : 
; 227  : 		kill_client_server_entity (receiver);

  00320	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00324	74 0a		 je	 SHORT $LN32@response_t
  00326	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00329	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032b	89 4d a0	 mov	 DWORD PTR tv220[ebp], ecx
  0032e	eb 21		 jmp	 SHORT $LN33@response_t
$LN32@response_t:
  00330	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00336	83 c2 51	 add	 edx, 81			; 00000051H
  00339	52		 push	 edx
  0033a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GKBMMHLN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00344	50		 push	 eax
  00345	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034a	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN33@response_t:
  00351	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00354	51		 push	 ecx
  00355	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0035b	c1 e2 02	 shl	 edx, 2
  0035e	8b 45 a0	 mov	 eax, DWORD PTR tv220[ebp]
  00361	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00368	ff d1		 call	 ecx

; 228  : 
; 229  : 		if (aggressor)

  0036a	83 7d f4 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  0036e	74 0d		 je	 SHORT $LN9@response_t

; 230  : 		{
; 231  : 			play_aircraft_destroyed_speech (receiver, aggressor);

  00370	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  00373	50		 push	 eax
  00374	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00377	51		 push	 ecx
  00378	e8 00 00 00 00	 call	 ?play_aircraft_destroyed_speech@@YGXPAUENTITY@@0@Z ; play_aircraft_destroyed_speech
$LN9@response_t:

; 232  : 		}
; 233  : 	}
; 234  : 	else

  0037d	eb 13		 jmp	 SHORT $LN10@response_t
$LN7@response_t:

; 235  : 	{
; 236  : 
; 237  : 		/////////////////////////////////////////////////////////////////
; 238  : 		//
; 239  : 		// SPECIAL_EFFECT_HOOK FOR GETTING_SHOT
; 240  : 		//
; 241  : 		/////////////////////////////////////////////////////////////////
; 242  : 
; 243  : 		if (aggressor)

  0037f	83 7d f4 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00383	74 0d		 je	 SHORT $LN10@response_t

; 244  : 		{
; 245  : 			play_aircraft_shot_at_speech (receiver, aggressor);

  00385	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  00388	50		 push	 eax
  00389	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0038c	51		 push	 ecx
  0038d	e8 00 00 00 00	 call	 ?play_aircraft_shot_at_speech@@YGXPAUENTITY@@0@Z ; play_aircraft_shot_at_speech
$LN10@response_t:

; 246  : 		}
; 247  : 
; 248  : 		/////////////////////////////////////////////////////////////////
; 249  : 		//
; 250  : 		//
; 251  : 		/////////////////////////////////////////////////////////////////
; 252  : 
; 253  : 		//notify hit. ?
; 254  : 	}
; 255  : 
; 256  : 	return (TRUE);

  00392	b8 01 00 00 00	 mov	 eax, 1

; 257  : }

  00397	5f		 pop	 edi
  00398	5e		 pop	 esi
  00399	5b		 pop	 ebx
  0039a	8b e5		 mov	 esp, ebp
  0039c	5d		 pop	 ebp
  0039d	c2 10 00	 ret	 16			; 00000010H
?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_collision
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_msgs.c
;	COMDAT ?overload_fixed_wing_message_responses@@YGXXZ
_TEXT	SEGMENT
?overload_fixed_wing_message_responses@@YGXXZ PROC	; overload_fixed_wing_message_responses, COMDAT

; 528  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 529  : 	overload_aircraft_message_responses (ENTITY_TYPE_FIXED_WING);

  00009	6a 0a		 push	 10			; 0000000aH
  0000b	e8 00 00 00 00	 call	 ?overload_aircraft_message_responses@@YGXW4ENTITY_TYPES@@@Z ; overload_aircraft_message_responses

; 530  : 
; 531  : 	#if DEBUG_MODULE
; 532  : 
; 533  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_LINK_CHILD]		= response_to_link_child;
; 534  : 
; 535  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_UNLINK_CHILD]	= response_to_unlink_child;
; 536  : 
; 537  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_LINK_PARENT]	= response_to_link_parent;
; 538  : 
; 539  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_UNLINK_PARENT]	= response_to_unlink_parent;
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_COLLISION]							= response_to_collision;

  00010	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00015	6b c8 0a	 imul	 ecx, eax, 10
  00018	ba 04 00 00 00	 mov	 edx, 4
  0001d	6b c2 07	 imul	 eax, edx, 7
  00020	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_collision

; 544  : 
; 545  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_WAYPOINT_LIFT_OFF_REACHED]		= response_to_waypoint_lift_off_reached;

  0002b	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00030	6b c8 0a	 imul	 ecx, eax, 10
  00033	ba 04 00 00 00	 mov	 edx, 4
  00038	6b c2 48	 imul	 eax, edx, 72
  0003b	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_waypoint_lift_off_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_waypoint_lift_off_reached

; 546  : 
; 547  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_WAYPOINT_START_UP_REACHED]		= response_to_waypoint_start_up_reached;

  00046	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0004b	6b c8 0a	 imul	 ecx, eax, 10
  0004e	ba 04 00 00 00	 mov	 edx, 4
  00053	6b c2 54	 imul	 eax, edx, 84
  00056	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_waypoint_start_up_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_waypoint_start_up_reached

; 548  : 
; 549  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_WAYPOINT_TOUCH_DOWN_REACHED]	= response_to_waypoint_touch_down_reached;

  00061	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00066	6b c8 0a	 imul	 ecx, eax, 10
  00069	ba 04 00 00 00	 mov	 edx, 4
  0006e	6b c2 58	 imul	 eax, edx, 88
  00071	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_waypoint_touch_down_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_waypoint_touch_down_reached

; 550  : 
; 551  : 	message_responses[ENTITY_TYPE_FIXED_WING][ENTITY_MESSAGE_CHECK_MOBILE_REACHED_GUIDE]	= response_to_check_mobile_reached_guide;

  0007c	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00081	6b c8 0a	 imul	 ecx, eax, 10
  00084	ba 04 00 00 00	 mov	 edx, 4
  00089	c1 e2 02	 shl	 edx, 2
  0008c	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+edx], OFFSET ?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_check_mobile_reached_guide

; 552  : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?overload_fixed_wing_message_responses@@YGXXZ ENDP	; overload_fixed_wing_message_responses
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?acos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?acos@@YGMM@Z PROC					; acos, COMDAT

; 26   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 27   : 	return (_CSTD acosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _acosf
  00019	83 c4 04	 add	 esp, 4

; 28   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?acos@@YGMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _acosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT

; 623  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  :             return (float)acos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _acos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 625  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_acosf	ENDP
_TEXT	ENDS
END
