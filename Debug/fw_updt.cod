; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_fixed_wing_update_functions@@YGXXZ	; overload_fixed_wing_update_functions
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??update_propellors@@YGXPAUENTITY@@@Z@4JA ; `update_propellors'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA ; `update_client'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@4014000000000000
PUBLIC	__real@4059000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_systems
EXTRN	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_system_weapon_and_target_vectors
EXTRN	?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_loading_doors
EXTRN	?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_cargo_doors
EXTRN	?update_aircraft_rudder@@YGXPAUENTITY@@@Z:PROC	; update_aircraft_rudder
EXTRN	?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_undercarriage
EXTRN	?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_weapon_system_ready
EXTRN	?update_aircraft_target_scan@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_target_scan
EXTRN	?update_aircraft_weapon_fire@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_weapon_fire
EXTRN	?update_aircraft_decoy_release@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_decoy_release
EXTRN	?update_fixed_wing_afterburners@@YGXPAUENTITY@@@Z:PROC ; update_fixed_wing_afterburners
EXTRN	?update_fixed_wing_airbrakes@@YGXPAUENTITY@@@Z:PROC ; update_fixed_wing_airbrakes
EXTRN	?update_fixed_wing_flaps@@YGXPAUENTITY@@@Z:PROC	; update_fixed_wing_flaps
EXTRN	?basic_fixed_wing_movement@@YGXPAUENTITY@@@Z:PROC ; basic_fixed_wing_movement
EXTRN	?basic_fixed_wing_death_movement@@YGXPAUENTITY@@@Z:PROC ; basic_fixed_wing_death_movement
EXTRN	?update_fixed_wing_crate_dropping@@YGXPAUENTITY@@@Z:PROC ; update_fixed_wing_crate_dropping
EXTRN	?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z:PROC ; aircraft_critically_damaged
EXTRN	?get_aircraft_send_damage_update_flag@@YGHXZ:PROC ; get_aircraft_send_damage_update_flag
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z:PROC ; write_tacview_unit_update
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?in_flight_articulation_test@@3HA:DWORD		; in_flight_articulation_test
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity_family
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?tacview_log_file@@3PAU_iobuf@@A:DWORD		; tacview_log_file
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA DD 0f3H ; `update_client'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 074H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwi'
	DB	'ng\fw_updt.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_propellors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_propellors@@YGXPAUENTITY@@@Z@4JA DD 052H ; `update_propellors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv214 = -88						; size = 4
tv189 = -88						; size = 4
tv169 = -88						; size = 4
tv85 = -88						; size = 4
tv207 = -84						; size = 4
tv181 = -84						; size = 4
tv161 = -84						; size = 4
tv78 = -84						; size = 4
_rotated$1 = -16					; size = 4
_moved$2 = -12						; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 	fixed_wing
; 245  : 		*raw;
; 246  : 
; 247  : 	int
; 248  : 		loop;
; 249  : 
; 250  : 	raw = (fixed_wing *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 251  : 
; 252  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 253  : 
; 254  : 	if (raw->ac.mob.alive)

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00021	83 e1 01	 and	 ecx, 1
  00024	0f 84 81 02 00
	00		 je	 $LN8@update_cli

; 255  : 	{
; 256  : 
; 257  : 		////////////////////////////////////////
; 258  : 
; 259  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00031	eb 09		 jmp	 SHORT $LN4@update_cli
$LN2@update_cli:
  00033	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_cli:
  0003c	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00040	0f 8d b3 00 00
	00		 jge	 $LN3@update_cli

; 260  : 		{
; 261  : 
; 262  : 			if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  00046	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004a	74 0a		 je	 SHORT $LN17@update_cli
  0004c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	89 4d ac	 mov	 DWORD PTR tv78[ebp], ecx
  00054	eb 1d		 jmp	 SHORT $LN18@update_cli
$LN17@update_cli:
  00056	68 06 01 00 00	 push	 262			; 00000106H
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN18@update_cli:
  00073	b8 01 00 00 00	 mov	 eax, 1
  00078	85 c0		 test	 eax, eax
  0007a	74 09		 je	 SHORT $LN19@update_cli
  0007c	c7 45 a8 73 00
	00 00		 mov	 DWORD PTR tv85[ebp], 115 ; 00000073H
  00083	eb 1d		 jmp	 SHORT $LN20@update_cli
$LN19@update_cli:
  00085	68 06 01 00 00	 push	 262			; 00000106H
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00095	51		 push	 ecx
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN20@update_cli:
  000a2	6a 73		 push	 115			; 00000073H
  000a4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000a7	52		 push	 edx
  000a8	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv78[ebp], 1116
  000af	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  000b2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000b9	ff d2		 call	 edx
  000bb	85 c0		 test	 eax, eax
  000bd	75 2c		 jne	 SHORT $LN10@update_cli

; 263  : 			{
; 264  : 
; 265  : 				get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  000bf	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c2	05 54 01 00 00	 add	 eax, 340		; 00000154H
  000c7	50		 push	 eax
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000cb	51		 push	 ecx
  000cc	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000d9	51		 push	 ecx
  000da	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  000e9	dd d8		 fstp	 ST(0)
$LN10@update_cli:

; 266  : 			}
; 267  : 
; 268  : 			basic_fixed_wing_movement (en);

  000eb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?basic_fixed_wing_movement@@YGXPAUENTITY@@@Z ; basic_fixed_wing_movement

; 269  : 		}

  000f4	e9 3a ff ff ff	 jmp	 $LN2@update_cli
$LN3@update_cli:

; 270  : 
; 271  : 		////////////////////////////////////////
; 272  : 
; 273  : 		update_propellors (en);

  000f9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?update_propellors@@YGXPAUENTITY@@@Z ; update_propellors

; 274  : 
; 275  : 		update_fixed_wing_afterburners (en);

  00102	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?update_fixed_wing_afterburners@@YGXPAUENTITY@@@Z ; update_fixed_wing_afterburners

; 276  : 
; 277  : 		update_fixed_wing_airbrakes (en);

  0010b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ?update_fixed_wing_airbrakes@@YGXPAUENTITY@@@Z ; update_fixed_wing_airbrakes

; 278  : 
; 279  : 		update_fixed_wing_flaps (en);

  00114	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?update_fixed_wing_flaps@@YGXPAUENTITY@@@Z ; update_fixed_wing_flaps

; 280  : 
; 281  : 		update_aircraft_loading_doors (en);

  0011d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 282  : 
; 283  : 		update_aircraft_cargo_doors (en);

  00126	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 284  : 
; 285  : 		update_aircraft_undercarriage (en);

  0012f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 286  : 
; 287  : 		update_aircraft_rudder (en);

  00138	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?update_aircraft_rudder@@YGXPAUENTITY@@@Z ; update_aircraft_rudder

; 288  : 
; 289  : 		////////////////////////////////////////
; 290  : 		//
; 291  : 		// ORDER IS CRITICAL
; 292  : 		//
; 293  : 
; 294  : 		update_aircraft_weapon_system_ready (en);

  00141	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 295  : 
; 296  : 		update_entity_weapon_systems (en);

  0014a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 297  : 
; 298  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  00153	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 299  : 
; 300  : 		//
; 301  : 		////////////////////////////////////////
; 302  : 
; 303  : 		if (tacview_is_logging() && raw->ac.mob.alive)

  0015c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00163	0f 84 3d 01 00
	00		 je	 $LN12@update_cli
  00169	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016c	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0016f	83 e1 01	 and	 ecx, 1
  00172	0f 84 2e 01 00
	00		 je	 $LN12@update_cli

; 304  : 		{
; 305  : 			int
; 306  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  00178	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0017c	74 0a		 je	 SHORT $LN21@update_cli
  0017e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00181	8b 08		 mov	 ecx, DWORD PTR [eax]
  00183	89 4d ac	 mov	 DWORD PTR tv161[ebp], ecx
  00186	eb 21		 jmp	 SHORT $LN22@update_cli
$LN21@update_cli:
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  0018e	83 c2 3f	 add	 edx, 63			; 0000003fH
  00191	52		 push	 edx
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a2	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN22@update_cli:
  001a9	b9 01 00 00 00	 mov	 ecx, 1
  001ae	85 c9		 test	 ecx, ecx
  001b0	74 09		 je	 SHORT $LN23@update_cli
  001b2	c7 45 a8 8e 00
	00 00		 mov	 DWORD PTR tv169[ebp], 142 ; 0000008eH
  001b9	eb 21		 jmp	 SHORT $LN24@update_cli
$LN23@update_cli:
  001bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  001c1	83 c2 3f	 add	 edx, 63			; 0000003fH
  001c4	52		 push	 edx
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d5	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN24@update_cli:
  001dc	68 8e 00 00 00	 push	 142			; 0000008eH
  001e1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e4	51		 push	 ecx
  001e5	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv161[ebp], 1116
  001ec	8b 45 a8	 mov	 eax, DWORD PTR tv169[ebp]
  001ef	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f6	ff d1		 call	 ecx
  001f8	89 45 f4	 mov	 DWORD PTR _moved$2[ebp], eax

; 307  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  001fb	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ff	74 0a		 je	 SHORT $LN25@update_cli
  00201	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00204	8b 08		 mov	 ecx, DWORD PTR [eax]
  00206	89 4d ac	 mov	 DWORD PTR tv181[ebp], ecx
  00209	eb 21		 jmp	 SHORT $LN26@update_cli
$LN25@update_cli:
  0020b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00211	83 c2 40	 add	 edx, 64			; 00000040H
  00214	52		 push	 edx
  00215	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00225	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN26@update_cli:
  0022c	b9 01 00 00 00	 mov	 ecx, 1
  00231	85 c9		 test	 ecx, ecx
  00233	74 09		 je	 SHORT $LN27@update_cli
  00235	c7 45 a8 b1 00
	00 00		 mov	 DWORD PTR tv189[ebp], 177 ; 000000b1H
  0023c	eb 21		 jmp	 SHORT $LN28@update_cli
$LN27@update_cli:
  0023e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00244	83 c2 40	 add	 edx, 64			; 00000040H
  00247	52		 push	 edx
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00258	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN28@update_cli:
  0025f	68 b1 00 00 00	 push	 177			; 000000b1H
  00264	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00267	51		 push	 ecx
  00268	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv181[ebp], 1116
  0026f	8b 45 a8	 mov	 eax, DWORD PTR tv189[ebp]
  00272	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00279	ff d1		 call	 ecx
  0027b	89 45 f0	 mov	 DWORD PTR _rotated$1[ebp], eax

; 308  : 
; 309  : 			if (moved || rotated || command_line_tacview_logging < 3)

  0027e	83 7d f4 00	 cmp	 DWORD PTR _moved$2[ebp], 0
  00282	75 0f		 jne	 SHORT $LN13@update_cli
  00284	83 7d f0 00	 cmp	 DWORD PTR _rotated$1[ebp], 0
  00288	75 09		 jne	 SHORT $LN13@update_cli
  0028a	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  00291	7d 13		 jge	 SHORT $LN12@update_cli
$LN13@update_cli:

; 310  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  00293	6a 00		 push	 0
  00295	8b 45 f0	 mov	 eax, DWORD PTR _rotated$1[ebp]
  00298	50		 push	 eax
  00299	8b 4d f4	 mov	 ecx, DWORD PTR _moved$2[ebp]
  0029c	51		 push	 ecx
  0029d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002a0	52		 push	 edx
  002a1	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN12@update_cli:

; 311  : 		}
; 312  : 	}
; 313  : 	else

  002a6	e9 a2 00 00 00	 jmp	 $LN6@update_cli
$LN8@update_cli:

; 314  : 	{
; 315  : 		if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_DEAD)

  002ab	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002af	74 0a		 je	 SHORT $LN29@update_cli
  002b1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b6	89 4d ac	 mov	 DWORD PTR tv207[ebp], ecx
  002b9	eb 1d		 jmp	 SHORT $LN30@update_cli
$LN29@update_cli:
  002bb	68 3b 01 00 00	 push	 315			; 0000013bH
  002c0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002cb	52		 push	 edx
  002cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d1	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv207[ebp], 0
$LN30@update_cli:
  002d8	b8 01 00 00 00	 mov	 eax, 1
  002dd	85 c0		 test	 eax, eax
  002df	74 09		 je	 SHORT $LN31@update_cli
  002e1	c7 45 a8 97 00
	00 00		 mov	 DWORD PTR tv214[ebp], 151 ; 00000097H
  002e8	eb 1d		 jmp	 SHORT $LN32@update_cli
$LN31@update_cli:
  002ea	68 3b 01 00 00	 push	 315			; 0000013bH
  002ef	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002fa	51		 push	 ecx
  002fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00300	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv214[ebp], 0
$LN32@update_cli:
  00307	68 97 00 00 00	 push	 151			; 00000097H
  0030c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0030f	52		 push	 edx
  00310	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv207[ebp], 1116
  00317	8b 4d a8	 mov	 ecx, DWORD PTR tv214[ebp]
  0031a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00321	ff d2		 call	 edx
  00323	83 f8 02	 cmp	 eax, 2
  00326	75 02		 jne	 SHORT $LN14@update_cli

; 316  : 		{
; 317  : 		}
; 318  : 		else

  00328	eb 23		 jmp	 SHORT $LN6@update_cli
$LN14@update_cli:

; 319  : 		{
; 320  : 			for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0032a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00331	eb 09		 jmp	 SHORT $LN7@update_cli
$LN5@update_cli:
  00333	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00336	83 c0 01	 add	 eax, 1
  00339	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_cli:
  0033c	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00340	7d 0b		 jge	 SHORT $LN6@update_cli

; 321  : 			{
; 322  : 				basic_fixed_wing_death_movement (en);

  00342	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00345	50		 push	 eax
  00346	e8 00 00 00 00	 call	 ?basic_fixed_wing_death_movement@@YGXPAUENTITY@@@Z ; basic_fixed_wing_death_movement

; 323  : 			}

  0034b	eb e6		 jmp	 SHORT $LN5@update_cli
$LN6@update_cli:

; 324  : 		}
; 325  : 	}
; 326  : }

  0034d	5f		 pop	 edi
  0034e	5e		 pop	 esi
  0034f	5b		 pop	 ebx
  00350	8b e5		 mov	 esp, ebp
  00352	5d		 pop	 ebp
  00353	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv271 = -104						; size = 4
tv245 = -104						; size = 4
tv225 = -104						; size = 4
tv197 = -104						; size = 4
tv173 = -104						; size = 4
tv88 = -104						; size = 4
tv293 = -100						; size = 4
tv264 = -100						; size = 4
tv237 = -100						; size = 4
tv217 = -100						; size = 4
tv189 = -100						; size = 4
tv165 = -100						; size = 4
tv81 = -100						; size = 4
$T1 = -96						; size = 4
$T2 = -92						; size = 4
_rotated$3 = -24					; size = 4
_moved$4 = -20						; size = 4
_damage_level$5 = -16					; size = 4
_damage_type$ = -12					; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 117  : 	fixed_wing
; 118  : 		*raw;
; 119  : 
; 120  : 	int
; 121  : 		loop;
; 122  : 
; 123  : 	aircraft_damage_types
; 124  : 		damage_type;
; 125  : 
; 126  : 	raw = (fixed_wing *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 127  : 
; 128  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 129  : 
; 130  : 	damage_type = aircraft_critically_damaged (en);

  0001b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  00024	89 45 f4	 mov	 DWORD PTR _damage_type$[ebp], eax

; 131  : 
; 132  : 	if ((raw->ac.mob.alive) && (damage_type != AIRCRAFT_DAMAGE_CRITICAL))

  00027	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0002d	83 e1 01	 and	 ecx, 1
  00030	0f 84 f1 03 00
	00		 je	 $LN8@update_ser
  00036	83 7d f4 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  0003a	0f 84 e7 03 00
	00		 je	 $LN8@update_ser

; 133  : 	{
; 134  : 
; 135  : 		////////////////////////////////////////
; 136  : 
; 137  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00047	eb 09		 jmp	 SHORT $LN4@update_ser
$LN2@update_ser:
  00049	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0004c	83 c0 01	 add	 eax, 1
  0004f	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_ser:
  00052	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00056	0f 8d b3 00 00
	00		 jge	 $LN3@update_ser

; 138  : 		{
; 139  : 
; 140  : 			if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  0005c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00060	74 0a		 je	 SHORT $LN19@update_ser
  00062	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	89 4d 9c	 mov	 DWORD PTR tv81[ebp], ecx
  0006a	eb 1d		 jmp	 SHORT $LN20@update_ser
$LN19@update_ser:
  0006c	68 8c 00 00 00	 push	 140			; 0000008cH
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00082	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN20@update_ser:
  00089	b8 01 00 00 00	 mov	 eax, 1
  0008e	85 c0		 test	 eax, eax
  00090	74 09		 je	 SHORT $LN21@update_ser
  00092	c7 45 98 73 00
	00 00		 mov	 DWORD PTR tv88[ebp], 115 ; 00000073H
  00099	eb 1d		 jmp	 SHORT $LN22@update_ser
$LN21@update_ser:
  0009b	68 8c 00 00 00	 push	 140			; 0000008cH
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b1	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN22@update_ser:
  000b8	6a 73		 push	 115			; 00000073H
  000ba	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000bd	52		 push	 edx
  000be	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv81[ebp], 1116
  000c5	8b 4d 98	 mov	 ecx, DWORD PTR tv88[ebp]
  000c8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000cf	ff d2		 call	 edx
  000d1	85 c0		 test	 eax, eax
  000d3	75 2c		 jne	 SHORT $LN10@update_ser

; 141  : 			{
; 142  : 
; 143  : 				get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  000d5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000d8	05 54 01 00 00	 add	 eax, 340		; 00000154H
  000dd	50		 push	 eax
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000e1	51		 push	 ecx
  000e2	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  000e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000ef	51		 push	 ecx
  000f0	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  000ff	dd d8		 fstp	 ST(0)
$LN10@update_ser:

; 144  : 			}
; 145  : 
; 146  : 			basic_fixed_wing_movement (en);

  00101	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?basic_fixed_wing_movement@@YGXPAUENTITY@@@Z ; basic_fixed_wing_movement

; 147  : 		}

  0010a	e9 3a ff ff ff	 jmp	 $LN2@update_ser
$LN3@update_ser:

; 148  : 
; 149  : 		////////////////////////////////////////
; 150  : 
; 151  : 		update_propellors (en);

  0010f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?update_propellors@@YGXPAUENTITY@@@Z ; update_propellors

; 152  : 
; 153  : 		update_fixed_wing_afterburners (en);

  00118	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?update_fixed_wing_afterburners@@YGXPAUENTITY@@@Z ; update_fixed_wing_afterburners

; 154  : 
; 155  : 		update_fixed_wing_airbrakes (en);

  00121	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?update_fixed_wing_airbrakes@@YGXPAUENTITY@@@Z ; update_fixed_wing_airbrakes

; 156  : 
; 157  : 		update_fixed_wing_flaps (en);

  0012a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?update_fixed_wing_flaps@@YGXPAUENTITY@@@Z ; update_fixed_wing_flaps

; 158  : 
; 159  : 		update_aircraft_loading_doors (en);

  00133	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 160  : 
; 161  : 		update_aircraft_cargo_doors (en);

  0013c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 162  : 
; 163  : 		update_aircraft_undercarriage (en);

  00145	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00148	50		 push	 eax
  00149	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 164  : 
; 165  : 		update_aircraft_rudder (en);

  0014e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?update_aircraft_rudder@@YGXPAUENTITY@@@Z ; update_aircraft_rudder

; 166  : 
; 167  : 		////////////////////////////////////////
; 168  : 		//
; 169  : 		// ORDER IS CRITICAL
; 170  : 		//
; 171  : 
; 172  : 		update_aircraft_target_scan (en);

  00157	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 ?update_aircraft_target_scan@@YGXPAUENTITY@@@Z ; update_aircraft_target_scan

; 173  : 
; 174  : 		update_aircraft_weapon_system_ready (en);

  00160	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 175  : 
; 176  : 		update_entity_weapon_systems (en);

  00169	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 177  : 
; 178  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  00172	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00175	50		 push	 eax
  00176	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 179  : 
; 180  : 		update_aircraft_weapon_fire (en);

  0017b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?update_aircraft_weapon_fire@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_fire

; 181  : 
; 182  : 		update_aircraft_decoy_release (en);

  00184	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ?update_aircraft_decoy_release@@YGXPAUENTITY@@@Z ; update_aircraft_decoy_release

; 183  : 
; 184  : 		//
; 185  : 		////////////////////////////////////////
; 186  : 
; 187  : 		update_fixed_wing_crate_dropping (en);

  0018d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?update_fixed_wing_crate_dropping@@YGXPAUENTITY@@@Z ; update_fixed_wing_crate_dropping

; 188  : 
; 189  : 		if ((damage_type == AIRCRAFT_DAMAGE_MORTAL) && (get_aircraft_send_damage_update_flag ()))

  00196	83 7d f4 01	 cmp	 DWORD PTR _damage_type$[ebp], 1
  0019a	0f 85 38 01 00
	00		 jne	 $LN11@update_ser
  001a0	e8 00 00 00 00	 call	 ?get_aircraft_send_damage_update_flag@@YGHXZ ; get_aircraft_send_damage_update_flag
  001a5	85 c0		 test	 eax, eax
  001a7	0f 84 2b 01 00
	00		 je	 $LN11@update_ser

; 190  : 		{
; 191  : 			int
; 192  : 				damage_level;
; 193  : 
; 194  : 			//
; 195  : 			// aircraft is badly damaged - slowly decrease the damage level so that it eventually dies
; 196  : 			//
; 197  : 
; 198  : 			damage_level = get_local_entity_int_value (en, INT_TYPE_DAMAGE_LEVEL);

  001ad	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001b1	74 0a		 je	 SHORT $LN23@update_ser
  001b3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b8	89 4d 9c	 mov	 DWORD PTR tv165[ebp], ecx
  001bb	eb 21		 jmp	 SHORT $LN24@update_ser
$LN23@update_ser:
  001bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  001c3	83 c2 52	 add	 edx, 82			; 00000052H
  001c6	52		 push	 edx
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d7	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN24@update_ser:
  001de	b9 01 00 00 00	 mov	 ecx, 1
  001e3	85 c9		 test	 ecx, ecx
  001e5	74 09		 je	 SHORT $LN25@update_ser
  001e7	c7 45 98 25 00
	00 00		 mov	 DWORD PTR tv173[ebp], 37 ; 00000025H
  001ee	eb 21		 jmp	 SHORT $LN26@update_ser
$LN25@update_ser:
  001f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  001f6	83 c2 52	 add	 edx, 82			; 00000052H
  001f9	52		 push	 edx
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020a	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN26@update_ser:
  00211	6a 25		 push	 37			; 00000025H
  00213	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00216	51		 push	 ecx
  00217	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv165[ebp], 1116
  0021e	8b 45 98	 mov	 eax, DWORD PTR tv173[ebp]
  00221	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00228	ff d1		 call	 ecx
  0022a	89 45 f0	 mov	 DWORD PTR _damage_level$5[ebp], eax

; 199  : 
; 200  : 			damage_level = max (damage_level - 20, 0);

  0022d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00234	8b 45 f0	 mov	 eax, DWORD PTR _damage_level$5[ebp]
  00237	83 e8 14	 sub	 eax, 20			; 00000014H
  0023a	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  0023d	8d 4d a4	 lea	 ecx, DWORD PTR $T2[ebp]
  00240	51		 push	 ecx
  00241	8d 55 a0	 lea	 edx, DWORD PTR $T1[ebp]
  00244	52		 push	 edx
  00245	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0024a	8b 00		 mov	 eax, DWORD PTR [eax]
  0024c	89 45 f0	 mov	 DWORD PTR _damage_level$5[ebp], eax

; 201  : 
; 202  : 			set_client_server_entity_int_value (en, INT_TYPE_DAMAGE_LEVEL, damage_level);

  0024f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00253	74 0a		 je	 SHORT $LN27@update_ser
  00255	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00258	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025a	89 4d 9c	 mov	 DWORD PTR tv189[ebp], ecx
  0025d	eb 21		 jmp	 SHORT $LN28@update_ser
$LN27@update_ser:
  0025f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00265	83 c2 56	 add	 edx, 86			; 00000056H
  00268	52		 push	 edx
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00273	50		 push	 eax
  00274	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00279	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN28@update_ser:
  00280	b9 01 00 00 00	 mov	 ecx, 1
  00285	85 c9		 test	 ecx, ecx
  00287	74 09		 je	 SHORT $LN29@update_ser
  00289	c7 45 98 25 00
	00 00		 mov	 DWORD PTR tv197[ebp], 37 ; 00000025H
  00290	eb 21		 jmp	 SHORT $LN30@update_ser
$LN29@update_ser:
  00292	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00298	83 c2 56	 add	 edx, 86			; 00000056H
  0029b	52		 push	 edx
  0029c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ac	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv197[ebp], 0
$LN30@update_ser:
  002b3	8b 4d f0	 mov	 ecx, DWORD PTR _damage_level$5[ebp]
  002b6	51		 push	 ecx
  002b7	6a 25		 push	 37			; 00000025H
  002b9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002bc	52		 push	 edx
  002bd	69 45 9c b8 08
	00 00		 imul	 eax, DWORD PTR tv189[ebp], 2232
  002c4	8b 4d 98	 mov	 ecx, DWORD PTR tv197[ebp]
  002c7	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  002ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  002d3	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  002d6	ff d1		 call	 ecx
$LN11@update_ser:

; 203  : 		}
; 204  : 
; 205  : 		if (tacview_is_logging() && raw->ac.mob.alive)

  002d8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  002df	0f 84 3d 01 00
	00		 je	 $LN13@update_ser
  002e5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002e8	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  002eb	83 e1 01	 and	 ecx, 1
  002ee	0f 84 2e 01 00
	00		 je	 $LN13@update_ser

; 206  : 		{
; 207  : 			int
; 208  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  002f4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002f8	74 0a		 je	 SHORT $LN31@update_ser
  002fa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ff	89 4d 9c	 mov	 DWORD PTR tv217[ebp], ecx
  00302	eb 21		 jmp	 SHORT $LN32@update_ser
$LN31@update_ser:
  00304	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0030a	83 c2 5c	 add	 edx, 92			; 0000005cH
  0030d	52		 push	 edx
  0030e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00313	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00318	50		 push	 eax
  00319	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv217[ebp], 0
$LN32@update_ser:
  00325	b9 01 00 00 00	 mov	 ecx, 1
  0032a	85 c9		 test	 ecx, ecx
  0032c	74 09		 je	 SHORT $LN33@update_ser
  0032e	c7 45 98 8e 00
	00 00		 mov	 DWORD PTR tv225[ebp], 142 ; 0000008eH
  00335	eb 21		 jmp	 SHORT $LN34@update_ser
$LN33@update_ser:
  00337	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0033d	83 c2 5c	 add	 edx, 92			; 0000005cH
  00340	52		 push	 edx
  00341	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00346	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0034b	50		 push	 eax
  0034c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00351	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv225[ebp], 0
$LN34@update_ser:
  00358	68 8e 00 00 00	 push	 142			; 0000008eH
  0035d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00360	51		 push	 ecx
  00361	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv217[ebp], 1116
  00368	8b 45 98	 mov	 eax, DWORD PTR tv225[ebp]
  0036b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00372	ff d1		 call	 ecx
  00374	89 45 ec	 mov	 DWORD PTR _moved$4[ebp], eax

; 209  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  00377	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0037b	74 0a		 je	 SHORT $LN35@update_ser
  0037d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00380	8b 08		 mov	 ecx, DWORD PTR [eax]
  00382	89 4d 9c	 mov	 DWORD PTR tv237[ebp], ecx
  00385	eb 21		 jmp	 SHORT $LN36@update_ser
$LN35@update_ser:
  00387	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0038d	83 c2 5d	 add	 edx, 93			; 0000005dH
  00390	52		 push	 edx
  00391	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0039b	50		 push	 eax
  0039c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv237[ebp], 0
$LN36@update_ser:
  003a8	b9 01 00 00 00	 mov	 ecx, 1
  003ad	85 c9		 test	 ecx, ecx
  003af	74 09		 je	 SHORT $LN37@update_ser
  003b1	c7 45 98 b1 00
	00 00		 mov	 DWORD PTR tv245[ebp], 177 ; 000000b1H
  003b8	eb 21		 jmp	 SHORT $LN38@update_ser
$LN37@update_ser:
  003ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  003c0	83 c2 5d	 add	 edx, 93			; 0000005dH
  003c3	52		 push	 edx
  003c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003ce	50		 push	 eax
  003cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv245[ebp], 0
$LN38@update_ser:
  003db	68 b1 00 00 00	 push	 177			; 000000b1H
  003e0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003e3	51		 push	 ecx
  003e4	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv237[ebp], 1116
  003eb	8b 45 98	 mov	 eax, DWORD PTR tv245[ebp]
  003ee	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003f5	ff d1		 call	 ecx
  003f7	89 45 e8	 mov	 DWORD PTR _rotated$3[ebp], eax

; 210  : 
; 211  : 			if (moved || rotated || command_line_tacview_logging < 3)

  003fa	83 7d ec 00	 cmp	 DWORD PTR _moved$4[ebp], 0
  003fe	75 0f		 jne	 SHORT $LN14@update_ser
  00400	83 7d e8 00	 cmp	 DWORD PTR _rotated$3[ebp], 0
  00404	75 09		 jne	 SHORT $LN14@update_ser
  00406	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  0040d	7d 13		 jge	 SHORT $LN13@update_ser
$LN14@update_ser:

; 212  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  0040f	6a 00		 push	 0
  00411	8b 45 e8	 mov	 eax, DWORD PTR _rotated$3[ebp]
  00414	50		 push	 eax
  00415	8b 4d ec	 mov	 ecx, DWORD PTR _moved$4[ebp]
  00418	51		 push	 ecx
  00419	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0041c	52		 push	 edx
  0041d	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN13@update_ser:

; 213  : 		}
; 214  : 	}
; 215  : 	else

  00422	e9 27 01 00 00	 jmp	 $LN6@update_ser
$LN8@update_ser:

; 216  : 	{
; 217  : 		update_fixed_wing_afterburners (en);

  00427	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0042a	50		 push	 eax
  0042b	e8 00 00 00 00	 call	 ?update_fixed_wing_afterburners@@YGXPAUENTITY@@@Z ; update_fixed_wing_afterburners

; 218  : 
; 219  : 		if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_DEAD)

  00430	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00434	74 0a		 je	 SHORT $LN39@update_ser
  00436	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00439	8b 08		 mov	 ecx, DWORD PTR [eax]
  0043b	89 4d 9c	 mov	 DWORD PTR tv264[ebp], ecx
  0043e	eb 1d		 jmp	 SHORT $LN40@update_ser
$LN39@update_ser:
  00440	68 db 00 00 00	 push	 219			; 000000dbH
  00445	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00450	52		 push	 edx
  00451	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00456	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN40@update_ser:
  0045d	b8 01 00 00 00	 mov	 eax, 1
  00462	85 c0		 test	 eax, eax
  00464	74 09		 je	 SHORT $LN41@update_ser
  00466	c7 45 98 97 00
	00 00		 mov	 DWORD PTR tv271[ebp], 151 ; 00000097H
  0046d	eb 1d		 jmp	 SHORT $LN42@update_ser
$LN41@update_ser:
  0046f	68 db 00 00 00	 push	 219			; 000000dbH
  00474	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00479	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0047f	51		 push	 ecx
  00480	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00485	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv271[ebp], 0
$LN42@update_ser:
  0048c	68 97 00 00 00	 push	 151			; 00000097H
  00491	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00494	52		 push	 edx
  00495	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv264[ebp], 1116
  0049c	8b 4d 98	 mov	 ecx, DWORD PTR tv271[ebp]
  0049f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004a6	ff d2		 call	 edx
  004a8	83 f8 02	 cmp	 eax, 2
  004ab	75 7e		 jne	 SHORT $LN15@update_ser

; 220  : 		{
; 221  : 			raw->ac.death_timer -= get_delta_time ();

  004ad	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004b0	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  004b8	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  004c0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  004c3	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0

; 222  : 
; 223  : 			if (raw->ac.death_timer <= 0.0)

  004cb	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004ce	f3 0f 5a 80 10
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+272]
  004d6	0f 57 c9	 xorps	 xmm1, xmm1
  004d9	66 0f 2f c8	 comisd	 xmm1, xmm0
  004dd	72 4a		 jb	 SHORT $LN17@update_ser

; 224  : 			{
; 225  : 				destroy_client_server_entity_family (en);

  004df	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004e3	74 0a		 je	 SHORT $LN43@update_ser
  004e5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ea	89 4d 9c	 mov	 DWORD PTR tv293[ebp], ecx
  004ed	eb 21		 jmp	 SHORT $LN44@update_ser
$LN43@update_ser:
  004ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  004f5	83 c2 6d	 add	 edx, 109		; 0000006dH
  004f8	52		 push	 edx
  004f9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  004fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00503	50		 push	 eax
  00504	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00509	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv293[ebp], 0
$LN44@update_ser:
  00510	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00513	51		 push	 ecx
  00514	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0051a	c1 e2 02	 shl	 edx, 2
  0051d	8b 45 9c	 mov	 eax, DWORD PTR tv293[ebp]
  00520	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00527	ff d1		 call	 ecx
$LN17@update_ser:

; 226  : 			}
; 227  : 		}
; 228  : 		else

  00529	eb 23		 jmp	 SHORT $LN6@update_ser
$LN15@update_ser:

; 229  : 		{
; 230  : 			for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0052b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00532	eb 09		 jmp	 SHORT $LN7@update_ser
$LN5@update_ser:
  00534	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00537	83 c0 01	 add	 eax, 1
  0053a	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_ser:
  0053d	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00541	7d 0b		 jge	 SHORT $LN6@update_ser

; 231  : 			{
; 232  : 				basic_fixed_wing_death_movement (en);

  00543	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00546	50		 push	 eax
  00547	e8 00 00 00 00	 call	 ?basic_fixed_wing_death_movement@@YGXPAUENTITY@@@Z ; basic_fixed_wing_death_movement

; 233  : 			}

  0054c	eb e6		 jmp	 SHORT $LN5@update_ser
$LN6@update_ser:

; 234  : 		}
; 235  : 	}
; 236  : }

  0054e	5f		 pop	 edi
  0054f	5e		 pop	 esi
  00550	5b		 pop	 ebx
  00551	8b e5		 mov	 esp, ebp
  00553	5d		 pop	 ebp
  00554	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_updt.c
;	COMDAT ?update_propellors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv165 = -88						; size = 8
tv166 = -80						; size = 8
tv135 = -80						; size = 4
tv79 = -80						; size = 4
tv128 = -76						; size = 4
tv71 = -76						; size = 4
_group$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_propellors@@YGXPAUENTITY@@@Z PROC		; update_propellors, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 83   : 
; 84   : 	fixed_wing
; 85   : 		*raw;
; 86   : 
; 87   : 	entity
; 88   : 		*group;
; 89   : 
; 90   : 	raw = (fixed_wing *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 91   : 
; 92   : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00012	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00016	74 0a		 je	 SHORT $LN7@update_pro
  00018	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d b4	 mov	 DWORD PTR tv71[ebp], ecx
  00020	eb 21		 jmp	 SHORT $LN8@update_pro
$LN7@update_pro:
  00022	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_propellors@@YGXPAUENTITY@@@Z@4JA
  00028	83 c2 0a	 add	 edx, 10			; 0000000aH
  0002b	52		 push	 edx
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN8@update_pro:
  00043	b9 01 00 00 00	 mov	 ecx, 1
  00048	85 c9		 test	 ecx, ecx
  0004a	74 09		 je	 SHORT $LN9@update_pro
  0004c	c7 45 b0 19 00
	00 00		 mov	 DWORD PTR tv79[ebp], 25	; 00000019H
  00053	eb 21		 jmp	 SHORT $LN10@update_pro
$LN9@update_pro:
  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_propellors@@YGXPAUENTITY@@@Z@4JA
  0005b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0005e	52		 push	 edx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN10@update_pro:
  00076	6a 19		 push	 25			; 00000019H
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0007b	51		 push	 ecx
  0007c	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  00083	8b 45 b0	 mov	 eax, DWORD PTR tv79[ebp]
  00086	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0008d	ff d1		 call	 ecx
  0008f	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 93   : 
; 94   : 	ASSERT (group);

  00092	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00096	75 18		 jne	 SHORT $LN2@update_pro
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_propellors@@YGXPAUENTITY@@@Z@4JA
  0009d	83 c0 0c	 add	 eax, 12			; 0000000cH
  000a0	50		 push	 eax
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  000ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_pro:

; 95   : 
; 96   : 	if (!in_flight_articulation_test)

  000b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  000b7	0f 85 d1 00 00
	00		 jne	 $LN5@update_pro

; 97   : 	{
; 98   : 		if (get_local_entity_int_value (en, INT_TYPE_LANDED))

  000bd	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c1	74 0a		 je	 SHORT $LN11@update_pro
  000c3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c8	89 4d b4	 mov	 DWORD PTR tv128[ebp], ecx
  000cb	eb 1a		 jmp	 SHORT $LN12@update_pro
$LN11@update_pro:
  000cd	6a 62		 push	 98			; 00000062H
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000da	52		 push	 edx
  000db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN12@update_pro:
  000e7	b8 01 00 00 00	 mov	 eax, 1
  000ec	85 c0		 test	 eax, eax
  000ee	74 09		 je	 SHORT $LN13@update_pro
  000f0	c7 45 b0 73 00
	00 00		 mov	 DWORD PTR tv135[ebp], 115 ; 00000073H
  000f7	eb 1a		 jmp	 SHORT $LN14@update_pro
$LN13@update_pro:
  000f9	6a 62		 push	 98			; 00000062H
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GCMOCFND@c?3?2users?2nhv90?2projects?2eech?2ap@
  00100	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00106	51		 push	 ecx
  00107	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN14@update_pro:
  00113	6a 73		 push	 115			; 00000073H
  00115	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00118	52		 push	 edx
  00119	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv128[ebp], 1116
  00120	8b 4d b0	 mov	 ecx, DWORD PTR tv135[ebp]
  00123	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0012a	ff d2		 call	 edx
  0012c	85 c0		 test	 eax, eax
  0012e	74 30		 je	 SHORT $LN4@update_pro

; 99   : 		{
; 100  : 			raw->propellor_rpm -= 5.0 * get_delta_time ();

  00130	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00138	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00140	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00143	f3 0f 5a 88 8c
	01 00 00	 cvtss2sd xmm1, DWORD PTR [eax+396]
  0014b	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0014f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00153	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00156	f3 0f 11 81 8c
	01 00 00	 movss	 DWORD PTR [ecx+396], xmm0

; 101  : 		}
; 102  : 		else

  0015e	eb 2e		 jmp	 SHORT $LN5@update_pro
$LN4@update_pro:

; 103  : 		{
; 104  : 			raw->propellor_rpm += 5.0 * get_delta_time ();

  00160	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00168	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00170	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00173	f3 0f 5a 88 8c
	01 00 00	 cvtss2sd xmm1, DWORD PTR [eax+396]
  0017b	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0017f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00183	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00186	f3 0f 11 81 8c
	01 00 00	 movss	 DWORD PTR [ecx+396], xmm0
$LN5@update_pro:

; 105  : 		}
; 106  : 	}
; 107  : 
; 108  : 	raw->propellor_rpm = bound (raw->propellor_rpm, 0.0, 100.0);

  0018e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00191	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  00199	0f 57 c9	 xorps	 xmm1, xmm1
  0019c	66 0f 2f c8	 comisd	 xmm1, xmm0
  001a0	76 0a		 jbe	 SHORT $LN17@update_pro
  001a2	0f 57 c0	 xorps	 xmm0, xmm0
  001a5	f2 0f 11 45 b0	 movsd	 QWORD PTR tv166[ebp], xmm0
  001aa	eb 3e		 jmp	 SHORT $LN18@update_pro
$LN17@update_pro:
  001ac	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001af	f3 0f 5a 81 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+396]
  001b7	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  001bf	76 0f		 jbe	 SHORT $LN15@update_pro
  001c1	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  001c9	f2 0f 11 45 a8	 movsd	 QWORD PTR tv165[ebp], xmm0
  001ce	eb 10		 jmp	 SHORT $LN16@update_pro
$LN15@update_pro:
  001d0	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  001d3	f3 0f 5a 82 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+396]
  001db	f2 0f 11 45 a8	 movsd	 QWORD PTR tv165[ebp], xmm0
$LN16@update_pro:
  001e0	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv165[ebp]
  001e5	f2 0f 11 45 b0	 movsd	 QWORD PTR tv166[ebp], xmm0
$LN18@update_pro:
  001ea	f2 0f 5a 45 b0	 cvtsd2ss xmm0, QWORD PTR tv166[ebp]
  001ef	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001f2	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0

; 109  : }

  001fa	5f		 pop	 edi
  001fb	5e		 pop	 esi
  001fc	5b		 pop	 ebx
  001fd	8b e5		 mov	 esp, ebp
  001ff	5d		 pop	 ebp
  00200	c2 04 00	 ret	 4
?update_propellors@@YGXPAUENTITY@@@Z ENDP		; update_propellors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_updt.c
;	COMDAT ?overload_fixed_wing_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_fixed_wing_update_functions@@YGXXZ PROC	; overload_fixed_wing_update_functions, COMDAT

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 334  : 	fn_update_client_server_entity[ENTITY_TYPE_FIXED_WING][COMMS_MODEL_SERVER]  	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 0a	 imul	 ecx, eax, 10
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 335  : 
; 336  : 	fn_update_client_server_entity[ENTITY_TYPE_FIXED_WING][COMMS_MODEL_CLIENT]  	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 0a	 imul	 ecx, eax, 10
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 337  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_fixed_wing_update_functions@@YGXXZ ENDP	; overload_fixed_wing_update_functions
_TEXT	ENDS
END
