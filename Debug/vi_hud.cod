; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_atan2f
PUBLIC	_atanf
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_fmodf
PUBLIC	_sinf
PUBLIC	_tanf
PUBLIC	?atan@@YGMM@Z					; atan
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?tan@@YGMM@Z					; tan
PUBLIC	?initialise_viper_hud@@YGXXZ			; initialise_viper_hud
PUBLIC	?deinitialise_viper_hud@@YGXXZ			; deinitialise_viper_hud
PUBLIC	?draw_viper_hud@@YGXXZ				; draw_viper_hud
PUBLIC	?draw_viper_hud_on_lens_texture@@YGXXZ		; draw_viper_hud_on_lens_texture
PUBLIC	??$fmod@MHX@@YGNMH@Z				; fmod<float,int,void>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA ; `clip_2d_point_to_hud_extent'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_01FJMABOPO@x@				; `string'
PUBLIC	??_C@_01EANLCPLP@y@				; `string'
PUBLIC	?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA ; `transform_hud_screen_co_ords_to_hud_texture_co_ords'::`1'::__LINE__Var
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_01CBDEGOCN@j@				; `string'
PUBLIC	?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA ; `draw_hud_aircraft_datum'::`1'::__LINE__Var
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA	; `draw_heading_scale'::`1'::__LINE__Var
PUBLIC	??_C@_04OHGLKFFN@?$CF03d@			; `string'
PUBLIC	??_C@_04OGKJMPGK@?$CF02d@			; `string'
PUBLIC	?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA ; `draw_steerpoint_tadpole'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA ; `clip_2d_line'::`1'::__LINE__Var
PUBLIC	??_C@_09FMHJKMJN@ratio?5?$DO?50@		; `string'
PUBLIC	??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@		; `string'
PUBLIC	??_C@_09PGHAGEBG@ratio?5?$DM?50@		; `string'
PUBLIC	??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@		; `string'
PUBLIC	??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA ; `draw_flight_path_marker'::`1'::__LINE__Var
PUBLIC	??_C@_0M@BBKBBMJK@main_3d_env@			; `string'
PUBLIC	??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@ ; `string'
PUBLIC	??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@		; `string'
PUBLIC	??_C@_03GOOLIKIF@?$CF3d@			; `string'
PUBLIC	??_C@_03GLKEJMAA@?$CF4d@			; `string'
PUBLIC	?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA ; `display_waypoint_information'::`1'::__LINE__Var
PUBLIC	??_C@_06JCIGMCHD@?$CFc?3?$CFdm@			; `string'
PUBLIC	??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@		; `string'
PUBLIC	??_C@_07CFANIJPM@?$CFc?3?$CFdKm@		; `string'
PUBLIC	??_C@_06BAOIPBEF@?9?3?9?9?4?9@			; `string'
PUBLIC	??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@	; `string'
PUBLIC	??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@		; `string'
PUBLIC	?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA ; `display_weapon_information'::`1'::__LINE__Var
PUBLIC	??_C@_05DIALNFFA@?$CFs?5?$CFd@			; `string'
PUBLIC	??_C@_04EIHLKMGG@LOBL@				; `string'
PUBLIC	??_C@_07CMBMBPC@LOAL?9HI@			; `string'
PUBLIC	??_C@_08BKMPBOCK@TOF?3?$CF?40f@			; `string'
PUBLIC	??_C@_09BJGFDJJN@Salvo?3ALL@			; `string'
PUBLIC	??_C@_08GEOGCMHL@Salvo?3?$CFd@			; `string'
PUBLIC	?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA ; `draw_target_symbology'::`1'::__LINE__Var
PUBLIC	??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@ ; `string'
PUBLIC	?__LINE__Var@?0??display_target_information@@YGXXZ@4JA ; `display_target_information'::`1'::__LINE__Var
PUBLIC	??_C@_06GPMJGLEM@MARKED@			; `string'
PUBLIC	??_C@_0L@FONJMCCD@NO?5ACQUIRE@			; `string'
PUBLIC	??_C@_09GGBOJENB@NO?5WEAPON@			; `string'
PUBLIC	??_C@_09JLFDDBCD@NO?5TARGET@			; `string'
PUBLIC	??_C@_0P@CHNDIJGO@INVALID?5TARGET@		; `string'
PUBLIC	??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@		; `string'
PUBLIC	??_C@_06HCPKJKPH@NO?5LOS@			; `string'
PUBLIC	??_C@_0N@JALLFCND@NO?5BORESIGHT@		; `string'
PUBLIC	??_C@_09FBGPJAII@MIN?5RANGE@			; `string'
PUBLIC	??_C@_09FAGDAKDM@MAX?5RANGE@			; `string'
PUBLIC	??_C@_0L@PDLCBABH@VALID?5LOCK@			; `string'
PUBLIC	??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_04DBODHFDK@TADS@				; `string'
PUBLIC	??_C@_0P@GJNDDPGF@TADS?5?5?5L?$CF04?40f@	; `string'
PUBLIC	??_C@_0O@CBEEDBJK@TADS?5?5?5A?$CF4?41f@		; `string'
PUBLIC	??_C@_0N@FJDLPMHM@TADS?5?5?5A?5X?4X@		; `string'
PUBLIC	??_C@_04OKGDLNCL@NONE@				; `string'
PUBLIC	??_C@_0M@BGECHFPC@NONE?5?5?5AX?4X@		; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c8efa35
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3d23d70a
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d99999a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e19999a
PUBLIC	__real@3e3851eb
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3e860a92
PUBLIC	__real@3ecccccd
PUBLIC	__real@3ee66667
PUBLIC	__real@3f000000
PUBLIC	__real@3f0a1a0d
PUBLIC	__real@3f19999a
PUBLIC	__real@3f266666
PUBLIC	__real@3f333333
PUBLIC	__real@3f466666
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f59999a
PUBLIC	__real@3f666666
PUBLIC	__real@3f7ae147
PUBLIC	__real@3f7fbe77
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3f86872b020c49ba
PUBLIC	__real@3f86f0068db8bac7
PUBLIC	__real@3f8999999999999a
PUBLIC	__real@3f93333333333333
PUBLIC	__real@3f9999999999999a
PUBLIC	__real@3f9eb851eb851eb8
PUBLIC	__real@3fa0ff972474538f
PUBLIC	__real@3fa119ce075f6fd2
PUBLIC	__real@3fa47ae147ae147b
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fac5d63886594af
PUBLIC	__real@3fac779a6b50b0f2
PUBLIC	__real@3faccccccccccccd
PUBLIC	__real@3facce1c58255b03
PUBLIC	__real@3fb3333333333333
PUBLIC	__real@3fb3333340000000
PUBLIC	__real@3fb3dd97f62b6ae8
PUBLIC	__real@3fb42c3c9eecbfb1
PUBLIC	__real@3fb6571848000000
PUBLIC	__real@3fb8000000000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc0c15236000000
PUBLIC	__real@3fc0cccccccccccd
PUBLIC	__real@3fc3333333333333
PUBLIC	__real@3fc3333340000000
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fc70a3d60000000
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fd0c15236000000
PUBLIC	__real@3fd2e147ae147ae1
PUBLIC	__real@3fd6666666666666
PUBLIC	__real@3fdbecde5a000000
PUBLIC	__real@3fdcccccc0000000
PUBLIC	__real@3fdccccccccccccd
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe199999999999a
PUBLIC	__real@3fe4cccccccccccd
PUBLIC	__real@3fe6666666666666
PUBLIC	__real@3fe999999999999a
PUBLIC	__real@3fee5e353f7ced91
PUBLIC	__real@3feff7ced916872b
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@3ff85d84
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@400921fb51000000
PUBLIC	__real@40100af61bdae6ca
PUBLIC	__real@40100af62b46c63e
PUBLIC	__real@4011666666666666
PUBLIC	__real@4014000000000000
PUBLIC	__real@40149d6340000000
PUBLIC	__real@401921fb51000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@40400000
PUBLIC	__real@404ca5dc00000000
PUBLIC	__real@4051f948
PUBLIC	__real@4058f9999999999a
PUBLIC	__real@405e000000000000
PUBLIC	__real@405fffef9db22d0e
PUBLIC	__real@4060000000000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@4070000000000000
PUBLIC	__real@4072c00000000000
PUBLIC	__real@407ca5dc1e1ce25c
PUBLIC	__real@407e000000000000
PUBLIC	__real@407f400000000000
PUBLIC	__real@4084000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@40f86a0000000000
PUBLIC	__real@41000000
PUBLIC	__real@42000000
PUBLIC	__real@42652ee0
PUBLIC	__real@427ffefa
PUBLIC	__real@42800000
PUBLIC	__real@42b20000
PUBLIC	__real@43800000
PUBLIC	__real@43960000
PUBLIC	__real@43b40000
PUBLIC	__real@447a0000
PUBLIC	__real@bd23d70a
PUBLIC	__real@bd4ccccd
PUBLIC	__real@bdcccccd
PUBLIC	__real@be19999a
PUBLIC	__real@be3851ec
PUBLIC	__real@be86d3a1
PUBLIC	__real@be99999a
PUBLIC	__real@becccccc
PUBLIC	__real@becccccd
PUBLIC	__real@bef17e4b
PUBLIC	__real@befa35dd
PUBLIC	__real@bf000000
PUBLIC	__real@bf0a3d70
PUBLIC	__real@bf19999a
PUBLIC	__real@bf266666
PUBLIC	__real@bf2b851f
PUBLIC	__real@bf2e147b
PUBLIC	__real@bf2f5c29
PUBLIC	__real@bf333333
PUBLIC	__real@bf333334
PUBLIC	__real@bf370a3e
PUBLIC	__real@bf3ae148
PUBLIC	__real@bf400000
PUBLIC	__real@bf47ae15
PUBLIC	__real@bf4ccccd
PUBLIC	__real@bf6147ae
PUBLIC	__real@bf63d70a
PUBLIC	__real@bf666666
PUBLIC	__real@bf68f5c2
PUBLIC	__real@bf733333
PUBLIC	__real@bf800000
PUBLIC	__real@bfb6571848000000
PUBLIC	__real@bfc6571848000000
PUBLIC	__real@bfc999999999999a
PUBLIC	__real@bfd2e147ae147ae1
PUBLIC	__real@bfe4cccccccccccd
PUBLIC	__real@bfe5c28f60000000
PUBLIC	__real@bfe999999999999a
PUBLIC	__real@bfee666666666666
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c00921fb51000000
PUBLIC	__real@c024000000000000
PUBLIC	__real@c0400000
PUBLIC	__real@c0800000
PUBLIC	__real@c1000000
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_fmod:PROC
EXTRN	_sin:PROC
EXTRN	_tan:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ:PROC ; debug_colour_log
EXTRN	?get_3d_unit_vector_from_heading_and_pitch@@YGXPAUVEC3D@@MM@Z:PROC ; get_3d_unit_vector_from_heading_and_pitch
EXTRN	?copy_double_vec3d_to_vec3d@@YGXPBUDOUBLE_VEC3D@@PAUVEC3D@@@Z:PROC ; copy_double_vec3d_to_vec3d
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z:PROC ; create_system_texture_screen
EXTRN	?destroy_screen@@YGHPAUSCREEN@@@Z:PROC		; destroy_screen
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?set_block@@YGXHHHHUREAL_COLOUR@@@Z:PROC	; set_block
EXTRN	?draw_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_line
EXTRN	?set_d3d_transparency_on@@YGXXZ:PROC		; set_d3d_transparency_on
EXTRN	?set_d3d_transparency_off@@YGXXZ:PROC		; set_d3d_transparency_off
EXTRN	?set_d3d_zbuffer_comparison@@YGXH@Z:PROC	; set_d3d_zbuffer_comparison
EXTRN	?set_d3d_culling@@YGXH@Z:PROC			; set_d3d_culling
EXTRN	?set_d3d_texture_wrapping@@YGXHH@Z:PROC		; set_d3d_texture_wrapping
EXTRN	?set_d3d_texture_mag_filtering@@YGXH@Z:PROC	; set_d3d_texture_mag_filtering
EXTRN	?set_d3d_texture_min_filtering@@YGXH@Z:PROC	; set_d3d_texture_min_filtering
EXTRN	?set_d3d_texture_mip_filtering@@YGXH@Z:PROC	; set_d3d_texture_mip_filtering
EXTRN	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_flat_shaded_textured_renderstate
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?get_system_texture_ptr@@YGPAUSCREEN@@H@Z:PROC	; get_system_texture_ptr
EXTRN	?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z:PROC ; flush_screen_texture_graphics
EXTRN	?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z:PROC ; set_mono_font_type
EXTRN	?get_mono_font_position@@YGXPAM0@Z:PROC		; get_mono_font_position
EXTRN	?set_mono_font_rel_position@@YGXMM@Z:PROC	; set_mono_font_rel_position
EXTRN	?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_mono_font_colour
EXTRN	?get_mono_font_string_width@@YGMPBD@Z:PROC	; get_mono_font_string_width
EXTRN	?print_mono_font_string@@YGXPBD@Z:PROC		; print_mono_font_string
EXTRN	?create_2d_environment@@YGPAUENV_2D@@XZ:PROC	; create_2d_environment
EXTRN	?destroy_2d_environment@@YGXPAUENV_2D@@@Z:PROC	; destroy_2d_environment
EXTRN	?set_2d_active_environment@@YGXPAUENV_2D@@@Z:PROC ; set_2d_active_environment
EXTRN	?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z:PROC	; set_2d_viewport
EXTRN	?set_2d_window@@YGXPAUENV_2D@@MMMM@Z:PROC	; set_2d_window
EXTRN	?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z:PROC ; set_2d_instance_rotation
EXTRN	?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z:PROC ; set_2d_instance_position
EXTRN	?reset_2d_instance@@YGXPAUENV_2D@@@Z:PROC	; reset_2d_instance
EXTRN	?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z:PROC	; set_2d_pixel
EXTRN	?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_2d_line
EXTRN	?set_2d_mono_font_position@@YGXMM@Z:PROC	; set_2d_mono_font_position
EXTRN	?get_2d_world_position@@YGXMMPAM0@Z:PROC	; get_2d_world_position
EXTRN	?get_2d_int_screen_coordinates@@YGXMMPAH0@Z:PROC ; get_2d_int_screen_coordinates
EXTRN	?get_2d_float_screen_coordinates@@YGXMMPAM0@Z:PROC ; get_2d_float_screen_coordinates
EXTRN	?get_2d_float_screen_x_coordinate@@YGXMPAM@Z:PROC ; get_2d_float_screen_x_coordinate
EXTRN	?get_2d_float_screen_y_coordinate@@YGXMPAM@Z:PROC ; get_2d_float_screen_y_coordinate
EXTRN	?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z:PROC ; draw_2d_mono_sprite
EXTRN	?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z:PROC	; draw_2d_circle
EXTRN	?set_3d_active_environment@@YGXPAUENV_3D@@@Z:PROC ; set_3d_active_environment
EXTRN	?begin_3d_scene@@YGHXZ:PROC			; begin_3d_scene
EXTRN	?end_3d_scene@@YGXXZ:PROC			; end_3d_scene
EXTRN	?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z:PROC ; get_position_3d_screen_coordinates
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?get_local_entity_weapon_count@@YGHPAUENTITY@@H@Z:PROC ; get_local_entity_weapon_count
EXTRN	?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z:PROC ; get_local_entity_selected_weapon_to_target_offsets
EXTRN	?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z:PROC ; get_target_intercept_point
EXTRN	?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z:PROC ; get_waypoint_display_position
EXTRN	?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_current_waypoint
EXTRN	?set_main_3d_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@MMMMMM@Z:PROC ; set_main_3d_params
EXTRN	?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z:PROC ; set_main_3d_full_screen_params
EXTRN	?get_target_display_name@@YGPBDPAUENTITY@@PADH@Z:PROC ; get_target_display_name
EXTRN	?get_range_finder@@YG?AW4rangefinding_system@@XZ:PROC ; get_range_finder
EXTRN	?laser_is_active@@YGHXZ:PROC			; laser_is_active
EXTRN	?electrical_system_active@@YGHXZ:PROC		; electrical_system_active
EXTRN	?get_eo_tracking_point@@YGPAUVEC3D@@XZ:PROC	; get_eo_tracking_point
EXTRN	?get_range_to_target@@YGMXZ:PROC		; get_range_to_target
EXTRN	?draw_hud_background@@YGXPAUHUD_SCREEN_DATA@@H@Z:PROC ; draw_hud_background
EXTRN	?get_missile_flight_time@@YGMXZ:PROC		; get_missile_flight_time
EXTRN	?get_digital_clock_values@@YGXMPAM00@Z:PROC	; get_digital_clock_values
EXTRN	?application_video_width@@3HA:DWORD		; application_video_width
EXTRN	?d3d_modulate_alpha@@3HA:DWORD			; d3d_modulate_alpha
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?active_2d_environment@@3PAUENV_2D@@A:DWORD	; active_2d_environment
EXTRN	?global_hud_size2@@3MA:DWORD			; global_hud_size2
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?overload_invalid_char_type_message@@3PBDB:DWORD ; overload_invalid_char_type_message
EXTRN	?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA:BYTE ; fn_get_local_entity_char_value
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?full_screen_width@@3MA:DWORD			; full_screen_width
EXTRN	?full_screen_height@@3MA:DWORD			; full_screen_height
EXTRN	?full_screen_x_mid@@3MA:DWORD			; full_screen_x_mid
EXTRN	?full_screen_y_mid@@3MA:DWORD			; full_screen_y_mid
EXTRN	?full_screen_width_view_angle@@3MA:DWORD	; full_screen_width_view_angle
EXTRN	?full_screen_height_view_angle@@3MA:DWORD	; full_screen_height_view_angle
EXTRN	?main_3d_env@@3PAUENV_3D@@A:DWORD		; main_3d_env
EXTRN	?in_cockpit@@3HA:DWORD				; in_cockpit
EXTRN	?pilot_head_heading@@3MA:DWORD			; pilot_head_heading
EXTRN	?pilot_head_pitch@@3MA:DWORD			; pilot_head_pitch
EXTRN	?wide_cockpit@@3HA:DWORD			; wide_cockpit
EXTRN	?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A:BYTE ; wide_cockpit_position
EXTRN	?wide_cockpit_nr@@3HA:DWORD			; wide_cockpit_nr
EXTRN	?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; target_acquisition_system
EXTRN	?hud_colour_table@@3PAUREAL_COLOUR@@A:BYTE	; hud_colour_table
EXTRN	?hud_colour@@3UREAL_COLOUR@@A:DWORD		; hud_colour
EXTRN	?display_hud_layout_grid@@3HA:DWORD		; display_hud_layout_grid
EXTRN	?hud_mode@@3W4HUD_MODES@@A:DWORD		; hud_mode
EXTRN	?hsd@@3UHUD_SCREEN_DATA@@A:BYTE			; hsd
EXTRN	?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A:DWORD ; weapon_lock_type
EXTRN	?rocket_salvo_size@@3HA:DWORD			; rocket_salvo_size
EXTRN	?viper_damage@@3TVIPER_DAMAGE_FLAGS@@A:DWORD	; viper_damage
EXTRN	?viper_sidewinder_seeker_head_x_position@@3MA:DWORD ; viper_sidewinder_seeker_head_x_position
EXTRN	?viper_sidewinder_seeker_head_y_position@@3MA:DWORD ; viper_sidewinder_seeker_head_y_position
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?hud_env@@3PAUENV_2D@@A DD 01H DUP (?)			; hud_env
?hud_viewport_size@@3MA DD 01H DUP (?)			; hud_viewport_size
?hud_viewport_x_org@@3MA DD 01H DUP (?)			; hud_viewport_x_org
?hud_viewport_y_org@@3MA DD 01H DUP (?)			; hud_viewport_y_org
?hud_viewport_x_min@@3MA DD 01H DUP (?)			; hud_viewport_x_min
?hud_viewport_y_min@@3MA DD 01H DUP (?)			; hud_viewport_y_min
?hud_viewport_x_max@@3MA DD 01H DUP (?)			; hud_viewport_x_max
?hud_viewport_y_max@@3MA DD 01H DUP (?)			; hud_viewport_y_max
?draw_hud_on_lens@@3HA DD 01H DUP (?)			; draw_hud_on_lens
?hud_screen_x_min@@3MA DD 01H DUP (?)			; hud_screen_x_min
?hud_screen_y_min@@3MA DD 01H DUP (?)			; hud_screen_y_min
?hud_screen_x_max@@3MA DD 01H DUP (?)			; hud_screen_x_max
?hud_screen_y_max@@3MA DD 01H DUP (?)			; hud_screen_y_max
?hud_screen_x_scale@@3MA DD 01H DUP (?)			; hud_screen_x_scale
?hud_screen_y_scale@@3MA DD 01H DUP (?)			; hud_screen_y_scale
?hud_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; hud_texture_screen
?lens_hud_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; lens_hud_texture_screen
?lens_outer_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?) ; lens_outer_texture_screen
?clear_hud_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; clear_hud_colour
?clear_lens_hud_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; clear_lens_hud_colour
?dc@@3HA DD	01H DUP (?)				; dc
?df@@3MA DD	01H DUP (?)				; df
?_dx@@3MA DD	01H DUP (?)				; _dx
?_dy@@3MA DD	01H DUP (?)				; _dy
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c1000000
CONST	SEGMENT
__real@c1000000 DD 0c1000000r			; -8
CONST	ENDS
;	COMDAT __real@c0800000
CONST	SEGMENT
__real@c0800000 DD 0c0800000r			; -4
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@c024000000000000
CONST	SEGMENT
__real@c024000000000000 DQ 0c024000000000000r	; -10
CONST	ENDS
;	COMDAT __real@c00921fb51000000
CONST	SEGMENT
__real@c00921fb51000000 DQ 0c00921fb51000000r	; -3.14159
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bfee666666666666
CONST	SEGMENT
__real@bfee666666666666 DQ 0bfee666666666666r	; -0.95
CONST	ENDS
;	COMDAT __real@bfe999999999999a
CONST	SEGMENT
__real@bfe999999999999a DQ 0bfe999999999999ar	; -0.8
CONST	ENDS
;	COMDAT __real@bfe5c28f60000000
CONST	SEGMENT
__real@bfe5c28f60000000 DQ 0bfe5c28f60000000r	; -0.68
CONST	ENDS
;	COMDAT __real@bfe4cccccccccccd
CONST	SEGMENT
__real@bfe4cccccccccccd DQ 0bfe4cccccccccccdr	; -0.65
CONST	ENDS
;	COMDAT __real@bfd2e147ae147ae1
CONST	SEGMENT
__real@bfd2e147ae147ae1 DQ 0bfd2e147ae147ae1r	; -0.295
CONST	ENDS
;	COMDAT __real@bfc999999999999a
CONST	SEGMENT
__real@bfc999999999999a DQ 0bfc999999999999ar	; -0.2
CONST	ENDS
;	COMDAT __real@bfc6571848000000
CONST	SEGMENT
__real@bfc6571848000000 DQ 0bfc6571848000000r	; -0.174533
CONST	ENDS
;	COMDAT __real@bfb6571848000000
CONST	SEGMENT
__real@bfb6571848000000 DQ 0bfb6571848000000r	; -0.0872665
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf733333
CONST	SEGMENT
__real@bf733333 DD 0bf733333r			; -0.95
CONST	ENDS
;	COMDAT __real@bf68f5c2
CONST	SEGMENT
__real@bf68f5c2 DD 0bf68f5c2r			; -0.91
CONST	ENDS
;	COMDAT __real@bf666666
CONST	SEGMENT
__real@bf666666 DD 0bf666666r			; -0.9
CONST	ENDS
;	COMDAT __real@bf63d70a
CONST	SEGMENT
__real@bf63d70a DD 0bf63d70ar			; -0.89
CONST	ENDS
;	COMDAT __real@bf6147ae
CONST	SEGMENT
__real@bf6147ae DD 0bf6147aer			; -0.88
CONST	ENDS
;	COMDAT __real@bf4ccccd
CONST	SEGMENT
__real@bf4ccccd DD 0bf4ccccdr			; -0.8
CONST	ENDS
;	COMDAT __real@bf47ae15
CONST	SEGMENT
__real@bf47ae15 DD 0bf47ae15r			; -0.78
CONST	ENDS
;	COMDAT __real@bf400000
CONST	SEGMENT
__real@bf400000 DD 0bf400000r			; -0.75
CONST	ENDS
;	COMDAT __real@bf3ae148
CONST	SEGMENT
__real@bf3ae148 DD 0bf3ae148r			; -0.73
CONST	ENDS
;	COMDAT __real@bf370a3e
CONST	SEGMENT
__real@bf370a3e DD 0bf370a3er			; -0.715
CONST	ENDS
;	COMDAT __real@bf333334
CONST	SEGMENT
__real@bf333334 DD 0bf333334r			; -0.7
CONST	ENDS
;	COMDAT __real@bf333333
CONST	SEGMENT
__real@bf333333 DD 0bf333333r			; -0.7
CONST	ENDS
;	COMDAT __real@bf2f5c29
CONST	SEGMENT
__real@bf2f5c29 DD 0bf2f5c29r			; -0.685
CONST	ENDS
;	COMDAT __real@bf2e147b
CONST	SEGMENT
__real@bf2e147b DD 0bf2e147br			; -0.68
CONST	ENDS
;	COMDAT __real@bf2b851f
CONST	SEGMENT
__real@bf2b851f DD 0bf2b851fr			; -0.67
CONST	ENDS
;	COMDAT __real@bf266666
CONST	SEGMENT
__real@bf266666 DD 0bf266666r			; -0.65
CONST	ENDS
;	COMDAT __real@bf19999a
CONST	SEGMENT
__real@bf19999a DD 0bf19999ar			; -0.6
CONST	ENDS
;	COMDAT __real@bf0a3d70
CONST	SEGMENT
__real@bf0a3d70 DD 0bf0a3d70r			; -0.54
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@befa35dd
CONST	SEGMENT
__real@befa35dd DD 0befa35ddr			; -0.488692
CONST	ENDS
;	COMDAT __real@bef17e4b
CONST	SEGMENT
__real@bef17e4b DD 0bef17e4br			; -0.471667
CONST	ENDS
;	COMDAT __real@becccccd
CONST	SEGMENT
__real@becccccd DD 0becccccdr			; -0.4
CONST	ENDS
;	COMDAT __real@becccccc
CONST	SEGMENT
__real@becccccc DD 0beccccccr			; -0.4
CONST	ENDS
;	COMDAT __real@be99999a
CONST	SEGMENT
__real@be99999a DD 0be99999ar			; -0.3
CONST	ENDS
;	COMDAT __real@be86d3a1
CONST	SEGMENT
__real@be86d3a1 DD 0be86d3a1r			; -0.263333
CONST	ENDS
;	COMDAT __real@be3851ec
CONST	SEGMENT
__real@be3851ec DD 0be3851ecr			; -0.18
CONST	ENDS
;	COMDAT __real@be19999a
CONST	SEGMENT
__real@be19999a DD 0be19999ar			; -0.15
CONST	ENDS
;	COMDAT __real@bdcccccd
CONST	SEGMENT
__real@bdcccccd DD 0bdcccccdr			; -0.1
CONST	ENDS
;	COMDAT __real@bd4ccccd
CONST	SEGMENT
__real@bd4ccccd DD 0bd4ccccdr			; -0.05
CONST	ENDS
;	COMDAT __real@bd23d70a
CONST	SEGMENT
__real@bd23d70a DD 0bd23d70ar			; -0.04
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@42b20000
CONST	SEGMENT
__real@42b20000 DD 042b20000r			; 89
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@427ffefa
CONST	SEGMENT
__real@427ffefa DD 0427ffefar			; 63.999
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40f86a0000000000
CONST	SEGMENT
__real@40f86a0000000000 DQ 040f86a0000000000r	; 100000
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4084000000000000
CONST	SEGMENT
__real@4084000000000000 DQ 04084000000000000r	; 640
CONST	ENDS
;	COMDAT __real@407f400000000000
CONST	SEGMENT
__real@407f400000000000 DQ 0407f400000000000r	; 500
CONST	ENDS
;	COMDAT __real@407e000000000000
CONST	SEGMENT
__real@407e000000000000 DQ 0407e000000000000r	; 480
CONST	ENDS
;	COMDAT __real@407ca5dc1e1ce25c
CONST	SEGMENT
__real@407ca5dc1e1ce25c DQ 0407ca5dc1e1ce25cr	; 458.366
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@4070000000000000
CONST	SEGMENT
__real@4070000000000000 DQ 04070000000000000r	; 256
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4060000000000000
CONST	SEGMENT
__real@4060000000000000 DQ 04060000000000000r	; 128
CONST	ENDS
;	COMDAT __real@405fffef9db22d0e
CONST	SEGMENT
__real@405fffef9db22d0e DQ 0405fffef9db22d0er	; 127.999
CONST	ENDS
;	COMDAT __real@405e000000000000
CONST	SEGMENT
__real@405e000000000000 DQ 0405e000000000000r	; 120
CONST	ENDS
;	COMDAT __real@4058f9999999999a
CONST	SEGMENT
__real@4058f9999999999a DQ 04058f9999999999ar	; 99.9
CONST	ENDS
;	COMDAT __real@4051f948
CONST	SEGMENT
__real@4051f948 DD 04051f948r			; 3.28084
CONST	ENDS
;	COMDAT __real@404ca5dc00000000
CONST	SEGMENT
__real@404ca5dc00000000 DQ 0404ca5dc00000000r	; 57.2958
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@401921fb51000000
CONST	SEGMENT
__real@401921fb51000000 DQ 0401921fb51000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@40149d6340000000
CONST	SEGMENT
__real@40149d6340000000 DQ 040149d6340000000r	; 5.1537
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4011666666666666
CONST	SEGMENT
__real@4011666666666666 DQ 04011666666666666r	; 4.35
CONST	ENDS
;	COMDAT __real@40100af62b46c63e
CONST	SEGMENT
__real@40100af62b46c63e DQ 040100af62b46c63er	; 4.0107
CONST	ENDS
;	COMDAT __real@40100af61bdae6ca
CONST	SEGMENT
__real@40100af61bdae6ca DQ 040100af61bdae6car	; 4.0107
CONST	ENDS
;	COMDAT __real@400921fb51000000
CONST	SEGMENT
__real@400921fb51000000 DQ 0400921fb51000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff85d84
CONST	SEGMENT
__real@3ff85d84 DD 03ff85d84r			; 1.94035
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3feff7ced916872b
CONST	SEGMENT
__real@3feff7ced916872b DQ 03feff7ced916872br	; 0.999
CONST	ENDS
;	COMDAT __real@3fee5e353f7ced91
CONST	SEGMENT
__real@3fee5e353f7ced91 DQ 03fee5e353f7ced91r	; 0.949
CONST	ENDS
;	COMDAT __real@3fe999999999999a
CONST	SEGMENT
__real@3fe999999999999a DQ 03fe999999999999ar	; 0.8
CONST	ENDS
;	COMDAT __real@3fe6666666666666
CONST	SEGMENT
__real@3fe6666666666666 DQ 03fe6666666666666r	; 0.7
CONST	ENDS
;	COMDAT __real@3fe4cccccccccccd
CONST	SEGMENT
__real@3fe4cccccccccccd DQ 03fe4cccccccccccdr	; 0.65
CONST	ENDS
;	COMDAT __real@3fe199999999999a
CONST	SEGMENT
__real@3fe199999999999a DQ 03fe199999999999ar	; 0.55
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fdccccccccccccd
CONST	SEGMENT
__real@3fdccccccccccccd DQ 03fdccccccccccccdr	; 0.45
CONST	ENDS
;	COMDAT __real@3fdcccccc0000000
CONST	SEGMENT
__real@3fdcccccc0000000 DQ 03fdcccccc0000000r	; 0.45
CONST	ENDS
;	COMDAT __real@3fdbecde5a000000
CONST	SEGMENT
__real@3fdbecde5a000000 DQ 03fdbecde5a000000r	; 0.436332
CONST	ENDS
;	COMDAT __real@3fd6666666666666
CONST	SEGMENT
__real@3fd6666666666666 DQ 03fd6666666666666r	; 0.35
CONST	ENDS
;	COMDAT __real@3fd2e147ae147ae1
CONST	SEGMENT
__real@3fd2e147ae147ae1 DQ 03fd2e147ae147ae1r	; 0.295
CONST	ENDS
;	COMDAT __real@3fd0c15236000000
CONST	SEGMENT
__real@3fd0c15236000000 DQ 03fd0c15236000000r	; 0.261799
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fc70a3d60000000
CONST	SEGMENT
__real@3fc70a3d60000000 DQ 03fc70a3d60000000r	; 0.18
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fc3333340000000
CONST	SEGMENT
__real@3fc3333340000000 DQ 03fc3333340000000r	; 0.15
CONST	ENDS
;	COMDAT __real@3fc3333333333333
CONST	SEGMENT
__real@3fc3333333333333 DQ 03fc3333333333333r	; 0.15
CONST	ENDS
;	COMDAT __real@3fc0cccccccccccd
CONST	SEGMENT
__real@3fc0cccccccccccd DQ 03fc0cccccccccccdr	; 0.13125
CONST	ENDS
;	COMDAT __real@3fc0c15236000000
CONST	SEGMENT
__real@3fc0c15236000000 DQ 03fc0c15236000000r	; 0.1309
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb8000000000000
CONST	SEGMENT
__real@3fb8000000000000 DQ 03fb8000000000000r	; 0.09375
CONST	ENDS
;	COMDAT __real@3fb6571848000000
CONST	SEGMENT
__real@3fb6571848000000 DQ 03fb6571848000000r	; 0.0872665
CONST	ENDS
;	COMDAT __real@3fb42c3c9eecbfb1
CONST	SEGMENT
__real@3fb42c3c9eecbfb1 DQ 03fb42c3c9eecbfb1r	; 0.0788
CONST	ENDS
;	COMDAT __real@3fb3dd97f62b6ae8
CONST	SEGMENT
__real@3fb3dd97f62b6ae8 DQ 03fb3dd97f62b6ae8r	; 0.0776
CONST	ENDS
;	COMDAT __real@3fb3333340000000
CONST	SEGMENT
__real@3fb3333340000000 DQ 03fb3333340000000r	; 0.075
CONST	ENDS
;	COMDAT __real@3fb3333333333333
CONST	SEGMENT
__real@3fb3333333333333 DQ 03fb3333333333333r	; 0.075
CONST	ENDS
;	COMDAT __real@3facce1c58255b03
CONST	SEGMENT
__real@3facce1c58255b03 DQ 03facce1c58255b03r	; 0.05626
CONST	ENDS
;	COMDAT __real@3faccccccccccccd
CONST	SEGMENT
__real@3faccccccccccccd DQ 03faccccccccccccdr	; 0.05625
CONST	ENDS
;	COMDAT __real@3fac779a6b50b0f2
CONST	SEGMENT
__real@3fac779a6b50b0f2 DQ 03fac779a6b50b0f2r	; 0.0556
CONST	ENDS
;	COMDAT __real@3fac5d63886594af
CONST	SEGMENT
__real@3fac5d63886594af DQ 03fac5d63886594afr	; 0.0554
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3fa47ae147ae147b
CONST	SEGMENT
__real@3fa47ae147ae147b DQ 03fa47ae147ae147br	; 0.04
CONST	ENDS
;	COMDAT __real@3fa119ce075f6fd2
CONST	SEGMENT
__real@3fa119ce075f6fd2 DQ 03fa119ce075f6fd2r	; 0.0334
CONST	ENDS
;	COMDAT __real@3fa0ff972474538f
CONST	SEGMENT
__real@3fa0ff972474538f DQ 03fa0ff972474538fr	; 0.0332
CONST	ENDS
;	COMDAT __real@3f9eb851eb851eb8
CONST	SEGMENT
__real@3f9eb851eb851eb8 DQ 03f9eb851eb851eb8r	; 0.03
CONST	ENDS
;	COMDAT __real@3f9999999999999a
CONST	SEGMENT
__real@3f9999999999999a DQ 03f9999999999999ar	; 0.025
CONST	ENDS
;	COMDAT __real@3f93333333333333
CONST	SEGMENT
__real@3f93333333333333 DQ 03f93333333333333r	; 0.01875
CONST	ENDS
;	COMDAT __real@3f8999999999999a
CONST	SEGMENT
__real@3f8999999999999a DQ 03f8999999999999ar	; 0.0125
CONST	ENDS
;	COMDAT __real@3f86f0068db8bac7
CONST	SEGMENT
__real@3f86f0068db8bac7 DQ 03f86f0068db8bac7r	; 0.0112
CONST	ENDS
;	COMDAT __real@3f86872b020c49ba
CONST	SEGMENT
__real@3f86872b020c49ba DQ 03f86872b020c49bar	; 0.011
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fbe77
CONST	SEGMENT
__real@3f7fbe77 DD 03f7fbe77r			; 0.999
CONST	ENDS
;	COMDAT __real@3f7ae147
CONST	SEGMENT
__real@3f7ae147 DD 03f7ae147r			; 0.98
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f466666
CONST	SEGMENT
__real@3f466666 DD 03f466666r			; 0.775
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f0a1a0d
CONST	SEGMENT
__real@3f0a1a0d DD 03f0a1a0dr			; 0.53946
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ee66667
CONST	SEGMENT
__real@3ee66667 DD 03ee66667r			; 0.45
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3e860a92
CONST	SEGMENT
__real@3e860a92 DD 03e860a92r			; 0.261799
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e3851eb
CONST	SEGMENT
__real@3e3851eb DD 03e3851ebr			; 0.18
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d99999a
CONST	SEGMENT
__real@3d99999a DD 03d99999ar			; 0.075
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d23d70a
CONST	SEGMENT
__real@3d23d70a DD 03d23d70ar			; 0.04
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BGECHFPC@NONE?5?5?5AX?4X@
CONST	SEGMENT
??_C@_0M@BGECHFPC@NONE?5?5?5AX?4X@ DB 'NONE   AX.X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKGDLNCL@NONE@
CONST	SEGMENT
??_C@_04OKGDLNCL@NONE@ DB 'NONE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJDLPMHM@TADS?5?5?5A?5X?4X@
CONST	SEGMENT
??_C@_0N@FJDLPMHM@TADS?5?5?5A?5X?4X@ DB 'TADS   A X.X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CBEEDBJK@TADS?5?5?5A?$CF4?41f@
CONST	SEGMENT
??_C@_0O@CBEEDBJK@TADS?5?5?5A?$CF4?41f@ DB 'TADS   A%4.1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GJNDDPGF@TADS?5?5?5L?$CF04?40f@
CONST	SEGMENT
??_C@_0P@GJNDDPGF@TADS?5?5?5L?$CF04?40f@ DB 'TADS   L%04.0f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DBODHFDK@TADS@
CONST	SEGMENT
??_C@_04DBODHFDK@TADS@ DB 'TADS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@ DB 'Invalid '
	DB	'weapon lock type = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PDLCBABH@VALID?5LOCK@
CONST	SEGMENT
??_C@_0L@PDLCBABH@VALID?5LOCK@ DB 'VALID LOCK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FAGDAKDM@MAX?5RANGE@
CONST	SEGMENT
??_C@_09FAGDAKDM@MAX?5RANGE@ DB 'MAX RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBGPJAII@MIN?5RANGE@
CONST	SEGMENT
??_C@_09FBGPJAII@MIN?5RANGE@ DB 'MIN RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JALLFCND@NO?5BORESIGHT@
CONST	SEGMENT
??_C@_0N@JALLFCND@NO?5BORESIGHT@ DB 'NO BORESIGHT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HCPKJKPH@NO?5LOS@
CONST	SEGMENT
??_C@_06HCPKJKPH@NO?5LOS@ DB 'NO LOS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@
CONST	SEGMENT
??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@ DB 'SEEKER LIMIT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHNDIJGO@INVALID?5TARGET@
CONST	SEGMENT
??_C@_0P@CHNDIJGO@INVALID?5TARGET@ DB 'INVALID TARGET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JLFDDBCD@NO?5TARGET@
CONST	SEGMENT
??_C@_09JLFDDBCD@NO?5TARGET@ DB 'NO TARGET', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GGBOJENB@NO?5WEAPON@
CONST	SEGMENT
??_C@_09GGBOJENB@NO?5WEAPON@ DB 'NO WEAPON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FONJMCCD@NO?5ACQUIRE@
CONST	SEGMENT
??_C@_0L@FONJMCCD@NO?5ACQUIRE@ DB 'NO ACQUIRE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPMJGLEM@MARKED@
CONST	SEGMENT
??_C@_06GPMJGLEM@MARKED@ DB 'MARKED', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_target_information@@YGXXZ@4JA DD 07dcH ; `display_target_information'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@
CONST	SEGMENT
??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@ DB 'WARNING! get_'
	DB	'local_entity_selected_weapon_to_target_offsets failed', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA DD 0708H ; `draw_target_symbology'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08GEOGCMHL@Salvo?3?$CFd@
CONST	SEGMENT
??_C@_08GEOGCMHL@Salvo?3?$CFd@ DB 'Salvo:%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJGFDJJN@Salvo?3ALL@
CONST	SEGMENT
??_C@_09BJGFDJJN@Salvo?3ALL@ DB 'Salvo:ALL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BKMPBOCK@TOF?3?$CF?40f@
CONST	SEGMENT
??_C@_08BKMPBOCK@TOF?3?$CF?40f@ DB 'TOF:%.0f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CMBMBPC@LOAL?9HI@
CONST	SEGMENT
??_C@_07CMBMBPC@LOAL?9HI@ DB 'LOAL-HI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EIHLKMGG@LOBL@
CONST	SEGMENT
??_C@_04EIHLKMGG@LOBL@ DB 'LOBL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DIALNFFA@?$CFs?5?$CFd@
CONST	SEGMENT
??_C@_05DIALNFFA@?$CFs?5?$CFd@ DB '%s %d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA DD 057cH ; `display_weapon_information'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@
CONST	SEGMENT
??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@ DB '--:--:--', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@
CONST	SEGMENT
??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@ DB '%02d:%02d:%02d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BAOIPBEF@?9?3?9?9?4?9@
CONST	SEGMENT
??_C@_06BAOIPBEF@?9?3?9?9?4?9@ DB '-:--.-', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CFANIJPM@?$CFc?3?$CFdKm@
CONST	SEGMENT
??_C@_07CFANIJPM@?$CFc?3?$CFdKm@ DB '%c:%dKm', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@
CONST	SEGMENT
??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@ DB '%c:%.1fKm', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCIGMCHD@?$CFc?3?$CFdm@
CONST	SEGMENT
??_C@_06JCIGMCHD@?$CFc?3?$CFdm@ DB '%c:%dm', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA DD 0510H ; `display_waypoint_information'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03GLKEJMAA@?$CF4d@
CONST	SEGMENT
??_C@_03GLKEJMAA@?$CF4d@ DB '%4d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOOLIKIF@?$CF3d@
CONST	SEGMENT
??_C@_03GOOLIKIF@?$CF3d@ DB '%3d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@
CONST	SEGMENT
??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@ DB 'xstep != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@
CONST	SEGMENT
??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@ DB 'left_hud_x != r'
	DB	'ight_hud_x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BBKBBMJK@main_3d_env@
CONST	SEGMENT
??_C@_0M@BBKBBMJK@main_3d_env@ DB 'main_3d_env', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA DD 03b3H ; `draw_flight_path_marker'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@
CONST	SEGMENT
??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@ DB '*'
	DB	'x1 >= xmin && *x1 <= xmax && *x2 >= xmin && *x2 <= xmax && *y'
	DB	'1 >= ymin && *y1 <= ymax && *y2 >= ymin && *y2 <= ymax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@
CONST	SEGMENT
??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@ DB '*x2 < xmax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PGHAGEBG@ratio?5?$DM?50@
CONST	SEGMENT
??_C@_09PGHAGEBG@ratio?5?$DM?50@ DB 'ratio < 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@
CONST	SEGMENT
??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@ DB '*x1 < xmax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMHJKMJN@ratio?5?$DO?50@
CONST	SEGMENT
??_C@_09FMHJKMJN@ratio?5?$DO?50@ DB 'ratio > 0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA DD 0355H ; `clip_2d_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA DD 0306H ; `draw_steerpoint_tadpole'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04OGKJMPGK@?$CF02d@
CONST	SEGMENT
??_C@_04OGKJMPGK@?$CF02d@ DB '%02d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHGLKFFN@?$CF03d@
CONST	SEGMENT
??_C@_04OHGLKFFN@?$CF03d@ DB '%03d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA DD 028fH	; `draw_heading_scale'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA DD 01ffH ; `draw_hud_aircraft_datum'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01CBDEGOCN@j@
CONST	SEGMENT
??_C@_01CBDEGOCN@j@ DB 'j', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA DD 01caH ; `transform_hud_screen_co_ords_to_hud_texture_co_ords'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01EANLCPLP@y@
CONST	SEGMENT
??_C@_01EANLCPLP@y@ DB 'y', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x@
CONST	SEGMENT
??_C@_01FJMABOPO@x@ DB 'x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_h'
	DB	'ud.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA DD 01a1H ; `clip_2d_point_to_hud_extent'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?flight_path_marker@@3PADA DB 019H			; flight_path_marker
	DB	0fH
	DB	0f4H
	DB	0f7H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
?large_left_carat@@3PADA DB 05H				; large_left_carat
	DB	09H
	DB	00H
	DB	0fcH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	ORG $+3
?large_command_heading_carat@@3PADA DB 0bH		; large_command_heading_carat
	DB	06H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_weapon_mode_hud@@YGXXZ
_TEXT	SEGMENT
?draw_weapon_mode_hud@@YGXXZ PROC			; draw_weapon_mode_hud, COMDAT

; 2294 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2295 : 	draw_flight_path_marker ();

  00009	e8 00 00 00 00	 call	 ?draw_flight_path_marker@@YGXXZ ; draw_flight_path_marker

; 2296 : 	draw_heading_scale ();

  0000e	e8 00 00 00 00	 call	 ?draw_heading_scale@@YGXXZ ; draw_heading_scale

; 2297 : 
; 2298 : 	draw_velocity_vector();

  00013	e8 00 00 00 00	 call	 ?draw_velocity_vector@@YGXXZ ; draw_velocity_vector

; 2299 : 	display_true_airspeed ();

  00018	e8 00 00 00 00	 call	 ?display_true_airspeed@@YGXXZ ; display_true_airspeed

; 2300 : 	draw_radar_altitude_scale();

  0001d	e8 00 00 00 00	 call	 ?draw_radar_altitude_scale@@YGXXZ ; draw_radar_altitude_scale

; 2301 : 
; 2302 : 	draw_torque_scale();

  00022	e8 00 00 00 00	 call	 ?draw_torque_scale@@YGXXZ ; draw_torque_scale

; 2303 : 
; 2304 : 	draw_target_symbology ();

  00027	e8 00 00 00 00	 call	 ?draw_target_symbology@@YGXXZ ; draw_target_symbology

; 2305 : 	display_target_information ();

  0002c	e8 00 00 00 00	 call	 ?display_target_information@@YGXXZ ; display_target_information

; 2306 : 	display_weapon_information ();

  00031	e8 00 00 00 00	 call	 ?display_weapon_information@@YGXXZ ; display_weapon_information

; 2307 : }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?draw_weapon_mode_hud@@YGXXZ ENDP			; draw_weapon_mode_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_transition_mode_hud@@YGXXZ
_TEXT	SEGMENT
?draw_transition_mode_hud@@YGXXZ PROC			; draw_transition_mode_hud, COMDAT

; 2272 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2273 : 	draw_flight_path_marker ();

  00009	e8 00 00 00 00	 call	 ?draw_flight_path_marker@@YGXXZ ; draw_flight_path_marker

; 2274 : 	draw_hud_aircraft_datum(FALSE);

  0000e	6a 00		 push	 0
  00010	e8 00 00 00 00	 call	 ?draw_hud_aircraft_datum@@YGXH@Z ; draw_hud_aircraft_datum

; 2275 : 
; 2276 : 	draw_heading_scale ();

  00015	e8 00 00 00 00	 call	 ?draw_heading_scale@@YGXXZ ; draw_heading_scale

; 2277 : 	draw_steerpoint_tadpole();

  0001a	e8 00 00 00 00	 call	 ?draw_steerpoint_tadpole@@YGXXZ ; draw_steerpoint_tadpole

; 2278 : 
; 2279 : 	draw_velocity_vector();

  0001f	e8 00 00 00 00	 call	 ?draw_velocity_vector@@YGXXZ ; draw_velocity_vector

; 2280 : 	display_true_airspeed ();

  00024	e8 00 00 00 00	 call	 ?display_true_airspeed@@YGXXZ ; display_true_airspeed

; 2281 : 	draw_radar_altitude_scale();

  00029	e8 00 00 00 00	 call	 ?draw_radar_altitude_scale@@YGXXZ ; draw_radar_altitude_scale

; 2282 : 
; 2283 : 	display_waypoint_information();

  0002e	e8 00 00 00 00	 call	 ?display_waypoint_information@@YGXXZ ; display_waypoint_information

; 2284 : 
; 2285 : 	draw_torque_scale();

  00033	e8 00 00 00 00	 call	 ?draw_torque_scale@@YGXXZ ; draw_torque_scale

; 2286 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?draw_transition_mode_hud@@YGXXZ ENDP			; draw_transition_mode_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_navigation_mode_hud@@YGXXZ
_TEXT	SEGMENT
?draw_navigation_mode_hud@@YGXXZ PROC			; draw_navigation_mode_hud, COMDAT

; 2250 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2251 : 	draw_hud_aircraft_datum(TRUE);

  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ?draw_hud_aircraft_datum@@YGXH@Z ; draw_hud_aircraft_datum

; 2252 : 	draw_flight_path_marker ();

  00010	e8 00 00 00 00	 call	 ?draw_flight_path_marker@@YGXXZ ; draw_flight_path_marker

; 2253 : 
; 2254 : 	draw_heading_scale ();

  00015	e8 00 00 00 00	 call	 ?draw_heading_scale@@YGXXZ ; draw_heading_scale

; 2255 : 	draw_steerpoint_tadpole();

  0001a	e8 00 00 00 00	 call	 ?draw_steerpoint_tadpole@@YGXXZ ; draw_steerpoint_tadpole

; 2256 : 
; 2257 : 	display_true_airspeed ();

  0001f	e8 00 00 00 00	 call	 ?display_true_airspeed@@YGXXZ ; display_true_airspeed

; 2258 : 	draw_radar_altitude_scale();

  00024	e8 00 00 00 00	 call	 ?draw_radar_altitude_scale@@YGXXZ ; draw_radar_altitude_scale

; 2259 : 	display_barometric_altitude ();

  00029	e8 00 00 00 00	 call	 ?display_barometric_altitude@@YGXXZ ; display_barometric_altitude

; 2260 : 
; 2261 : 	display_waypoint_information();

  0002e	e8 00 00 00 00	 call	 ?display_waypoint_information@@YGXXZ ; display_waypoint_information

; 2262 : 
; 2263 : 	draw_torque_scale();

  00033	e8 00 00 00 00	 call	 ?draw_torque_scale@@YGXXZ ; draw_torque_scale

; 2264 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?draw_navigation_mode_hud@@YGXXZ ENDP			; draw_navigation_mode_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_velocity_vector@@YGXXZ
_TEXT	SEGMENT
tv135 = -96						; size = 8
tv84 = -96						; size = 8
tv220 = -88						; size = 8
tv213 = -88						; size = 8
tv201 = -88						; size = 8
tv194 = -88						; size = 8
tv136 = -88						; size = 8
tv85 = -88						; size = 8
_z$ = -16						; size = 4
_x$ = -12						; size = 4
_scale$ = -8						; size = 4
_y_centre$ = -4						; size = 4
?draw_velocity_vector@@YGXXZ PROC			; draw_velocity_vector, COMDAT

; 2212 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2213 : #define VV_CUTOFF_VELOCITY 10.0
; 2214 : 	const float y_centre = -0.5;

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00011	f3 0f 11 45 fc	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 2215 : 	float scale, x, z;
; 2216 : 
; 2217 : 	z = current_flight_dynamics->velocity_z.value;

  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001b	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  00023	f3 0f 11 45 f0	 movss	 DWORD PTR _z$[ebp], xmm0

; 2218 : 	x = current_flight_dynamics->velocity_x.value;

  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002d	f3 0f 10 80 6c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8300]
  00035	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0

; 2219 : 
; 2220 : 	// cutoff the velocity marker if it gets too far from center
; 2221 : 	if (fabs(z) > VV_CUTOFF_VELOCITY)

  0003a	51		 push	 ecx
  0003b	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _z$[ebp]
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0004a	dd 5d a8	 fstp	 QWORD PTR tv194[ebp]
  0004d	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv194[ebp]
  00052	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  0005a	0f 86 90 00 00
	00		 jbe	 $LN2@draw_veloc

; 2222 : 	{
; 2223 : 		x *= VV_CUTOFF_VELOCITY / fabs(z);

  00060	51		 push	 ecx
  00061	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _z$[ebp]
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00070	dd 5d a8	 fstp	 QWORD PTR tv201[ebp]
  00073	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  0007b	f2 0f 5e 45 a8	 divsd	 xmm0, QWORD PTR tv201[ebp]
  00080	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _x$[ebp]
  00085	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00089	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0008d	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0

; 2224 : 		z = bound(z, -VV_CUTOFF_VELOCITY, VV_CUTOFF_VELOCITY);

  00092	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  00097	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  0009f	66 0f 2f c8	 comisd	 xmm1, xmm0
  000a3	76 0f		 jbe	 SHORT $LN7@draw_veloc
  000a5	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c024000000000000
  000ad	f2 0f 11 45 a8	 movsd	 QWORD PTR tv85[ebp], xmm0
  000b2	eb 32		 jmp	 SHORT $LN8@draw_veloc
$LN7@draw_veloc:
  000b4	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  000b9	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  000c1	76 0f		 jbe	 SHORT $LN5@draw_veloc
  000c3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  000cb	f2 0f 11 45 a0	 movsd	 QWORD PTR tv84[ebp], xmm0
  000d0	eb 0a		 jmp	 SHORT $LN6@draw_veloc
$LN5@draw_veloc:
  000d2	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  000d7	f2 0f 11 45 a0	 movsd	 QWORD PTR tv84[ebp], xmm0
$LN6@draw_veloc:
  000dc	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv84[ebp]
  000e1	f2 0f 11 45 a8	 movsd	 QWORD PTR tv85[ebp], xmm0
$LN8@draw_veloc:
  000e6	f2 0f 5a 45 a8	 cvtsd2ss xmm0, QWORD PTR tv85[ebp]
  000eb	f3 0f 11 45 f0	 movss	 DWORD PTR _z$[ebp], xmm0
$LN2@draw_veloc:

; 2225 : 	}
; 2226 : 	if (fabs(x) > VV_CUTOFF_VELOCITY)

  000f0	51		 push	 ecx
  000f1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  000f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fb	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00100	dd 5d a8	 fstp	 QWORD PTR tv213[ebp]
  00103	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv213[ebp]
  00108	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  00110	0f 86 90 00 00
	00		 jbe	 $LN3@draw_veloc

; 2227 : 	{
; 2228 : 		z *= VV_CUTOFF_VELOCITY / fabs(x);

  00116	51		 push	 ecx
  00117	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  0011c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00121	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00126	dd 5d a8	 fstp	 QWORD PTR tv220[ebp]
  00129	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00131	f2 0f 5e 45 a8	 divsd	 xmm0, QWORD PTR tv220[ebp]
  00136	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _z$[ebp]
  0013b	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0013f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00143	f3 0f 11 45 f0	 movss	 DWORD PTR _z$[ebp], xmm0

; 2229 : 		x = bound(x, -VV_CUTOFF_VELOCITY, VV_CUTOFF_VELOCITY);

  00148	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  00155	66 0f 2f c8	 comisd	 xmm1, xmm0
  00159	76 0f		 jbe	 SHORT $LN11@draw_veloc
  0015b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c024000000000000
  00163	f2 0f 11 45 a8	 movsd	 QWORD PTR tv136[ebp], xmm0
  00168	eb 32		 jmp	 SHORT $LN12@draw_veloc
$LN11@draw_veloc:
  0016a	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0016f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  00177	76 0f		 jbe	 SHORT $LN9@draw_veloc
  00179	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00181	f2 0f 11 45 a0	 movsd	 QWORD PTR tv135[ebp], xmm0
  00186	eb 0a		 jmp	 SHORT $LN10@draw_veloc
$LN9@draw_veloc:
  00188	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018d	f2 0f 11 45 a0	 movsd	 QWORD PTR tv135[ebp], xmm0
$LN10@draw_veloc:
  00192	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv135[ebp]
  00197	f2 0f 11 45 a8	 movsd	 QWORD PTR tv136[ebp], xmm0
$LN12@draw_veloc:
  0019c	f2 0f 5a 45 a8	 cvtsd2ss xmm0, QWORD PTR tv136[ebp]
  001a1	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0
$LN3@draw_veloc:

; 2230 : 	}
; 2231 : 
; 2232 : 	scale = (0.3 / VV_CUTOFF_VELOCITY);

  001a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3cf5c28f
  001ae	f3 0f 11 45 f8	 movss	 DWORD PTR _scale$[ebp], xmm0

; 2233 : 
; 2234 : 	x *= scale;

  001b3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  001b8	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  001bd	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0

; 2235 : 	z *= scale;

  001c2	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _z$[ebp]
  001c7	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  001cc	f3 0f 11 45 f0	 movss	 DWORD PTR _z$[ebp], xmm0

; 2236 : 
; 2237 : 	draw_2d_line(0.0, y_centre, x, y_centre + z, hud_colour);

  001d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001d6	50		 push	 eax
  001d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  001df	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _z$[ebp]
  001e4	51		 push	 ecx
  001e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ea	51		 push	 ecx
  001eb	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	51		 push	 ecx
  001f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  001fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00203	51		 push	 ecx
  00204	0f 57 c0	 xorps	 xmm0, xmm0
  00207	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2238 : 	// draw a little plus at the end
; 2239 : 	draw_2d_line(x, y_centre + z - 0.01, x, y_centre + z + 0.01, hud_colour);

  00211	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00216	50		 push	 eax
  00217	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  0021f	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _z$[ebp]
  00224	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00228	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00230	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00234	51		 push	 ecx
  00235	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  0024d	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _z$[ebp]
  00252	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00256	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0025e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00262	51		 push	 ecx
  00263	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00268	51		 push	 ecx
  00269	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  0026e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00273	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2240 : 	draw_2d_line(x - 0.01, y_centre + z, x + 0.01, y_centre + z, hud_colour);

  00278	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0027d	50		 push	 eax
  0027e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00286	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _z$[ebp]
  0028b	51		 push	 ecx
  0028c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00291	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00296	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0029e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a2	51		 push	 ecx
  002a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  002b0	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _z$[ebp]
  002b5	51		 push	 ecx
  002b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bb	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  002c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002cc	51		 push	 ecx
  002cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2241 : 
; 2242 : 	draw_2d_circle(0.0, y_centre, 0.04, hud_colour);

  002d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002dc	50		 push	 eax
  002dd	51		 push	 ecx
  002de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  002e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002eb	51		 push	 ecx
  002ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  002f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f9	51		 push	 ecx
  002fa	0f 57 c0	 xorps	 xmm0, xmm0
  002fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00302	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 2243 : }

  00307	5f		 pop	 edi
  00308	5e		 pop	 esi
  00309	5b		 pop	 ebx
  0030a	8b e5		 mov	 esp, ebp
  0030c	5d		 pop	 ebp
  0030d	c3		 ret	 0
?draw_velocity_vector@@YGXXZ ENDP			; draw_velocity_vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?display_target_information@@YGXXZ
_TEXT	SEGMENT
tv172 = -292						; size = 4
tv133 = -292						; size = 4
tv82 = -292						; size = 4
tv196 = -288						; size = 4
tv164 = -288						; size = 4
tv147 = -288						; size = 4
tv94 = -288						; size = 4
tv74 = -288						; size = 4
tv66 = -288						; size = 4
_has_range$ = -220					; size = 4
_target$ = -216						; size = 4
_target_range$ = -212					; size = 4
_width$ = -208						; size = 4
_buffer$ = -204						; size = 200
_s$ = -4						; size = 4
?display_target_information@@YGXXZ PROC			; display_target_information, COMDAT

; 2012 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2013 : 	const char
; 2014 : 		*s;
; 2015 : 	char
; 2016 : 		buffer[200];
; 2017 : 
; 2018 : 	float
; 2019 : 		width,
; 2020 : 		target_range;
; 2021 : 
; 2022 : 	entity
; 2023 : 		*target;
; 2024 : 
; 2025 : 	int
; 2026 : 		has_range = get_range_finder() != RANGEFINDER_TRIANGULATION;

  0000c	e8 00 00 00 00	 call	 ?get_range_finder@@YG?AW4rangefinding_system@@XZ ; get_range_finder
  00011	83 f8 02	 cmp	 eax, 2
  00014	74 0c		 je	 SHORT $LN31@display_ta
  00016	c7 85 e0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00020	eb 0a		 jmp	 SHORT $LN32@display_ta
$LN31@display_ta:
  00022	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN32@display_ta:
  0002c	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv66[ebp]
  00032	89 85 24 ff ff
	ff		 mov	 DWORD PTR _has_range$[ebp], eax

; 2027 : 
; 2028 : 	set_mono_font_type (MONO_FONT_TYPE_6X7);

  00038	6a 03		 push	 3
  0003a	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 2029 : 
; 2030 : // Jabberwock 031107 Designated targets
; 2031 : 
; 2032 : 	target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00046	74 0f		 je	 SHORT $LN33@display_ta
  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0004d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004f	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  00055	eb 24		 jmp	 SHORT $LN34@display_ta
$LN33@display_ta:
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  0005d	83 c2 14	 add	 edx, 20			; 00000014H
  00060	52		 push	 edx
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00071	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN34@display_ta:
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	85 c9		 test	 ecx, ecx
  00082	74 0c		 je	 SHORT $LN35@display_ta
  00084	c7 85 dc fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv82[ebp], 38	; 00000026H
  0008e	eb 24		 jmp	 SHORT $LN36@display_ta
$LN35@display_ta:
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  00096	83 c2 14	 add	 edx, 20			; 00000014H
  00099	52		 push	 edx
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000aa	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN36@display_ta:
  000b4	6a 26		 push	 38			; 00000026H
  000b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000bc	51		 push	 ecx
  000bd	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv74[ebp], 180
  000c7	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv82[ebp]
  000cd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000d4	ff d1		 call	 ecx
  000d6	89 85 28 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 2033 : 
; 2034 : 	if (target && get_local_entity_parent (target, LIST_TYPE_DESIGNATED_TARGET))

  000dc	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  000e3	0f 84 f0 00 00
	00		 je	 $LN6@display_ta
  000e9	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  000f0	74 10		 je	 SHORT $LN37@display_ta
  000f2	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  000f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fa	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], ecx
  00100	eb 20		 jmp	 SHORT $LN38@display_ta
$LN37@display_ta:
  00102	68 f2 07 00 00	 push	 2034			; 000007f2H
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00112	52		 push	 edx
  00113	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00118	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN38@display_ta:
  00122	b8 01 00 00 00	 mov	 eax, 1
  00127	85 c0		 test	 eax, eax
  00129	74 0c		 je	 SHORT $LN39@display_ta
  0012b	c7 85 dc fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv133[ebp], 10 ; 0000000aH
  00135	eb 20		 jmp	 SHORT $LN40@display_ta
$LN39@display_ta:
  00137	68 f2 07 00 00	 push	 2034			; 000007f2H
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00141	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00147	51		 push	 ecx
  00148	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014d	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN40@display_ta:
  00157	6a 0a		 push	 10			; 0000000aH
  00159	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  0015f	52		 push	 edx
  00160	69 85 e0 fe ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv94[ebp], 180
  0016a	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  00170	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00177	ff d2		 call	 edx
  00179	85 c0		 test	 eax, eax
  0017b	74 5c		 je	 SHORT $LN6@display_ta

; 2035 : 	{
; 2036 : 		s = "MARKED";

  0017d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_06GPMJGLEM@MARKED@

; 2037 : 
; 2038 : 		width = get_mono_font_string_width (s);

  00184	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0018d	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 2039 : 
; 2040 : 		set_2d_mono_font_position (-1.0, -0.8);

  00193	51		 push	 ecx
  00194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  0019c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a1	51		 push	 ecx
  001a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001af	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2041 : 
; 2042 : 		set_mono_font_rel_position (1.0, 0.0);

  001b4	51		 push	 ecx
  001b5	0f 57 c0	 xorps	 xmm0, xmm0
  001b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bd	51		 push	 ecx
  001be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cb	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2043 : 
; 2044 : 		print_mono_font_string (s);

  001d0	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN6@display_ta:

; 2045 : 	}
; 2046 : // Jabberwock 031107 ends
; 2047 : 
; 2048 : 
; 2049 : 	//
; 2050 : 	// weapon lock
; 2051 : 	//
; 2052 : 
; 2053 : 	switch (weapon_lock_type)

  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A ; weapon_lock_type
  001de	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv147[ebp], eax
  001e4	83 bd e0 fe ff
	ff 09		 cmp	 DWORD PTR tv147[ebp], 9
  001eb	77 79		 ja	 SHORT $LN19@display_ta
  001ed	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv147[ebp]
  001f3	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN45@display_ta[ecx*4]
$LN7@display_ta:

; 2054 : 	{
; 2055 : 		////////////////////////////////////////
; 2056 : 		case WEAPON_LOCK_NO_ACQUIRE:
; 2057 : 		////////////////////////////////////////
; 2058 : 		{
; 2059 : 			s = "NO ACQUIRE";

  001fa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0L@FONJMCCD@NO?5ACQUIRE@

; 2060 : 
; 2061 : 			break;

  00201	eb 76		 jmp	 SHORT $LN2@display_ta
$LN8@display_ta:

; 2062 : 		}
; 2063 : 		////////////////////////////////////////
; 2064 : 		case WEAPON_LOCK_NO_WEAPON:
; 2065 : 		////////////////////////////////////////
; 2066 : 		{
; 2067 : 			s = "NO WEAPON";

  00203	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09GGBOJENB@NO?5WEAPON@

; 2068 : 
; 2069 : 			break;

  0020a	eb 6d		 jmp	 SHORT $LN2@display_ta
$LN9@display_ta:

; 2070 : 		}
; 2071 : 		////////////////////////////////////////
; 2072 : 		case WEAPON_LOCK_NO_TARGET:
; 2073 : 		////////////////////////////////////////
; 2074 : 		{
; 2075 : 			s = "NO TARGET";

  0020c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09JLFDDBCD@NO?5TARGET@

; 2076 : 
; 2077 : 			break;

  00213	eb 64		 jmp	 SHORT $LN2@display_ta
$LN10@display_ta:

; 2078 : 		}
; 2079 : 		////////////////////////////////////////
; 2080 : 		case WEAPON_LOCK_INVALID_TARGET:
; 2081 : 		////////////////////////////////////////
; 2082 : 		{
; 2083 : 			s = "INVALID TARGET";

  00215	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0P@CHNDIJGO@INVALID?5TARGET@

; 2084 : 
; 2085 : 			break;

  0021c	eb 5b		 jmp	 SHORT $LN2@display_ta
$LN11@display_ta:

; 2086 : 		}
; 2087 : 		////////////////////////////////////////
; 2088 : 		case WEAPON_LOCK_SEEKER_LIMIT:
; 2089 : 		////////////////////////////////////////
; 2090 : 		{
; 2091 : 			s = "SEEKER LIMIT";

  0021e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@

; 2092 : 
; 2093 : 			break;

  00225	eb 52		 jmp	 SHORT $LN2@display_ta
$LN12@display_ta:

; 2094 : 		}
; 2095 : 		////////////////////////////////////////
; 2096 : 		case WEAPON_LOCK_NO_LOS:
; 2097 : 		////////////////////////////////////////
; 2098 : 		{
; 2099 : 			s = "NO LOS";

  00227	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_06HCPKJKPH@NO?5LOS@

; 2100 : 
; 2101 : 			break;

  0022e	eb 49		 jmp	 SHORT $LN2@display_ta
$LN13@display_ta:

; 2102 : 		}
; 2103 : 		////////////////////////////////////////
; 2104 : 		case WEAPON_LOCK_NO_BORESIGHT:
; 2105 : 		////////////////////////////////////////
; 2106 : 		{
; 2107 : 			s = "NO BORESIGHT";

  00230	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0N@JALLFCND@NO?5BORESIGHT@

; 2108 : 
; 2109 : 			break;

  00237	eb 40		 jmp	 SHORT $LN2@display_ta
$LN14@display_ta:

; 2110 : 		}
; 2111 : 		////////////////////////////////////////
; 2112 : 		case WEAPON_LOCK_MIN_RANGE:
; 2113 : 		////////////////////////////////////////
; 2114 : 		if (has_range)

  00239	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _has_range$[ebp], 0
  00240	74 09		 je	 SHORT $LN15@display_ta

; 2115 : 		{
; 2116 : 			s = "MIN RANGE";

  00242	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09FBGPJAII@MIN?5RANGE@

; 2117 : 
; 2118 : 			break;

  00249	eb 2e		 jmp	 SHORT $LN2@display_ta
$LN15@display_ta:

; 2119 : 		}
; 2120 : 		////////////////////////////////////////
; 2121 : 		case WEAPON_LOCK_MAX_RANGE:
; 2122 : 		////////////////////////////////////////
; 2123 : 		if (has_range)

  0024b	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _has_range$[ebp], 0
  00252	74 09		 je	 SHORT $LN17@display_ta

; 2124 : 		{
; 2125 : 			s = "MAX RANGE";

  00254	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09FAGDAKDM@MAX?5RANGE@

; 2126 : 
; 2127 : 			break;

  0025b	eb 1c		 jmp	 SHORT $LN2@display_ta
$LN17@display_ta:

; 2128 : 		}
; 2129 : 		////////////////////////////////////////
; 2130 : 		case WEAPON_LOCK_VALID:
; 2131 : 		////////////////////////////////////////
; 2132 : 		{
; 2133 : 			s = "VALID LOCK";

  0025d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0L@PDLCBABH@VALID?5LOCK@

; 2134 : 
; 2135 : 			break;

  00264	eb 13		 jmp	 SHORT $LN2@display_ta
$LN19@display_ta:

; 2136 : 		}
; 2137 : 		////////////////////////////////////////
; 2138 : 		default:
; 2139 : 		////////////////////////////////////////
; 2140 : 		{
; 2141 : 			debug_fatal ("Invalid weapon lock type = %d", weapon_lock_type);

  00266	a1 00 00 00 00	 mov	 eax, DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A ; weapon_lock_type
  0026b	50		 push	 eax
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@
  00271	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00276	83 c4 08	 add	 esp, 8
$LN2@display_ta:

; 2142 : 
; 2143 : 			break;
; 2144 : 		}
; 2145 : 	}
; 2146 : 
; 2147 : 	set_2d_mono_font_position (-0.3, -0.7);

  00279	51		 push	 ecx
  0027a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00282	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00287	51		 push	 ecx
  00288	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00290	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00295	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2148 : 	set_mono_font_rel_position (0.0, 0.0);

  0029a	51		 push	 ecx
  0029b	0f 57 c0	 xorps	 xmm0, xmm0
  0029e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a3	51		 push	 ecx
  002a4	0f 57 c0	 xorps	 xmm0, xmm0
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2149 : 
; 2150 : 	print_mono_font_string (s);

  002b1	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  002b4	50		 push	 eax
  002b5	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 2151 : 
; 2152 : 	//
; 2153 : 	// target name and range
; 2154 : 	//
; 2155 : 
; 2156 : 	target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  002ba	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  002c1	74 0f		 je	 SHORT $LN41@display_ta
  002c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ca	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv164[ebp], ecx
  002d0	eb 27		 jmp	 SHORT $LN42@display_ta
$LN41@display_ta:
  002d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  002d8	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  002de	52		 push	 edx
  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ef	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN42@display_ta:
  002f9	b9 01 00 00 00	 mov	 ecx, 1
  002fe	85 c9		 test	 ecx, ecx
  00300	74 0c		 je	 SHORT $LN43@display_ta
  00302	c7 85 dc fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv172[ebp], 38 ; 00000026H
  0030c	eb 27		 jmp	 SHORT $LN44@display_ta
$LN43@display_ta:
  0030e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  00314	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  0031a	52		 push	 edx
  0031b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00320	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00325	50		 push	 eax
  00326	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032b	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN44@display_ta:
  00335	6a 26		 push	 38			; 00000026H
  00337	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0033d	51		 push	 ecx
  0033e	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv164[ebp], 180
  00348	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv172[ebp]
  0034e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00355	ff d1		 call	 ecx
  00357	89 85 28 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 2157 : 
; 2158 : 	if (target)

  0035d	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  00364	0f 84 8a 00 00
	00		 je	 $LN21@display_ta

; 2159 : 	{
; 2160 : 		s = get_target_display_name (target, buffer, TRUE);

  0036a	6a 01		 push	 1
  0036c	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00372	50		 push	 eax
  00373	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  00379	51		 push	 ecx
  0037a	e8 00 00 00 00	 call	 ?get_target_display_name@@YGPBDPAUENTITY@@PADH@Z ; get_target_display_name
  0037f	89 45 fc	 mov	 DWORD PTR _s$[ebp], eax

; 2161 : 		if (s)

  00382	83 7d fc 00	 cmp	 DWORD PTR _s$[ebp], 0
  00386	74 6c		 je	 SHORT $LN21@display_ta

; 2162 : 		{
; 2163 : 			width = get_mono_font_string_width (s);

  00388	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00391	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 2164 : 			set_2d_mono_font_position (0.0, -0.9);

  00397	51		 push	 ecx
  00398	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf666666
  003a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a5	51		 push	 ecx
  003a6	0f 57 c0	 xorps	 xmm0, xmm0
  003a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ae	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2165 : 			set_mono_font_rel_position (-width * 0.5, 8.0);

  003b3	51		 push	 ecx
  003b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  003bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c1	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  003c9	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003d0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003d4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  003dc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003e0	51		 push	 ecx
  003e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e6	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2166 : 
; 2167 : 			print_mono_font_string (s);

  003eb	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  003ee	50		 push	 eax
  003ef	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN21@display_ta:

; 2168 : 		}
; 2169 : 	}
; 2170 : 
; 2171 : 	target_range = get_range_to_target();

  003f4	e8 00 00 00 00	 call	 ?get_range_to_target@@YGMXZ ; get_range_to_target
  003f9	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _target_range$[ebp]

; 2172 : 
; 2173 : 	switch (target_acquisition_system)

  003ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; target_acquisition_system
  00404	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv196[ebp], eax
  0040a	83 bd e0 fe ff
	ff 03		 cmp	 DWORD PTR tv196[ebp], 3
  00411	0f 8c c5 00 00
	00		 jl	 $LN29@display_ta
  00417	83 bd e0 fe ff
	ff 04		 cmp	 DWORD PTR tv196[ebp], 4
  0041e	7e 05		 jle	 SHORT $LN22@display_ta
  00420	e9 b7 00 00 00	 jmp	 $LN29@display_ta
$LN22@display_ta:

; 2174 : 	{
; 2175 : 	case TARGET_ACQUISITION_SYSTEM_FLIR:
; 2176 : 	case TARGET_ACQUISITION_SYSTEM_DTV:
; 2177 : 		s = "TADS";

  00425	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_04DBODHFDK@TADS@

; 2178 : 		if (target_range > 0.0)

  0042c	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00434	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0043c	0f 86 84 00 00
	00		 jbe	 $LN23@display_ta

; 2179 : 		{
; 2180 : 			if (laser_is_active())

  00442	e8 00 00 00 00	 call	 ?laser_is_active@@YGHXZ	; laser_is_active
  00447	85 c0		 test	 eax, eax
  00449	74 26		 je	 SHORT $LN25@display_ta

; 2181 : 				sprintf(buffer, "TADS   L%04.0f", target_range);

  0044b	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00453	83 ec 08	 sub	 esp, 8
  00456	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0045b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GJNDDPGF@TADS?5?5?5L?$CF04?40f@
  00460	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00466	50		 push	 eax
  00467	e8 00 00 00 00	 call	 _sprintf
  0046c	83 c4 10	 add	 esp, 16			; 00000010H

; 2182 : 			else

  0046f	eb 53		 jmp	 SHORT $LN28@display_ta
$LN25@display_ta:

; 2183 : 			{
; 2184 : //				float range = get_triangulated_range(target);
; 2185 : 				if (target_range > 0)

  00471	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00479	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00480	76 2e		 jbe	 SHORT $LN27@display_ta

; 2186 : 					sprintf(buffer, "TADS   A%4.1f", target_range * 0.001);

  00482	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  0048a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00492	83 ec 08	 sub	 esp, 8
  00495	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0049a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CBEEDBJK@TADS?5?5?5A?$CF4?41f@
  0049f	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 _sprintf
  004ab	83 c4 10	 add	 esp, 16			; 00000010H

; 2187 : 				else

  004ae	eb 14		 jmp	 SHORT $LN28@display_ta
$LN27@display_ta:

; 2188 : 					sprintf(buffer, "TADS   A X.X");

  004b0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FJDLPMHM@TADS?5?5?5A?5X?4X@
  004b5	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  004bb	50		 push	 eax
  004bc	e8 00 00 00 00	 call	 _sprintf
  004c1	83 c4 08	 add	 esp, 8
$LN28@display_ta:

; 2189 : 			}
; 2190 : 		}
; 2191 : 		else

  004c4	eb 14		 jmp	 SHORT $LN24@display_ta
$LN23@display_ta:

; 2192 : 			sprintf(buffer, "TADS   A X.X");

  004c6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FJDLPMHM@TADS?5?5?5A?5X?4X@
  004cb	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  004d1	50		 push	 eax
  004d2	e8 00 00 00 00	 call	 _sprintf
  004d7	83 c4 08	 add	 esp, 8
$LN24@display_ta:

; 2193 : 		break;

  004da	eb 1b		 jmp	 SHORT $LN4@display_ta
$LN29@display_ta:

; 2194 : 	case TARGET_ACQUISITION_SYSTEM_OFF:
; 2195 : 	default:
; 2196 : 		s = "NONE";

  004dc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_04OKGDLNCL@NONE@

; 2197 : 		sprintf(buffer, "NONE   AX.X");

  004e3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BGECHFPC@NONE?5?5?5AX?4X@
  004e8	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  004ee	50		 push	 eax
  004ef	e8 00 00 00 00	 call	 _sprintf
  004f4	83 c4 08	 add	 esp, 8
$LN4@display_ta:

; 2198 : 		break;
; 2199 : 	}
; 2200 : 
; 2201 : 	set_2d_mono_font_position (-0.3, -0.8);

  004f7	51		 push	 ecx
  004f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00500	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00505	51		 push	 ecx
  00506	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  0050e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00513	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2202 : 	set_mono_font_rel_position (0.0, 0.0);

  00518	51		 push	 ecx
  00519	0f 57 c0	 xorps	 xmm0, xmm0
  0051c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00521	51		 push	 ecx
  00522	0f 57 c0	 xorps	 xmm0, xmm0
  00525	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052a	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2203 : 	print_mono_font_string (buffer);

  0052f	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00535	50		 push	 eax
  00536	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 2204 : }

  0053b	5f		 pop	 edi
  0053c	5e		 pop	 esi
  0053d	5b		 pop	 ebx
  0053e	8b e5		 mov	 esp, ebp
  00540	5d		 pop	 ebp
  00541	c3		 ret	 0
  00542	66 90		 npad	 2
$LN45@display_ta:
  00544	00 00 00 00	 DD	 $LN7@display_ta
  00548	00 00 00 00	 DD	 $LN8@display_ta
  0054c	00 00 00 00	 DD	 $LN9@display_ta
  00550	00 00 00 00	 DD	 $LN10@display_ta
  00554	00 00 00 00	 DD	 $LN11@display_ta
  00558	00 00 00 00	 DD	 $LN12@display_ta
  0055c	00 00 00 00	 DD	 $LN13@display_ta
  00560	00 00 00 00	 DD	 $LN14@display_ta
  00564	00 00 00 00	 DD	 $LN15@display_ta
  00568	00 00 00 00	 DD	 $LN17@display_ta
?display_target_information@@YGXXZ ENDP			; display_target_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_target_symbology@@YGXXZ
_TEXT	SEGMENT
tv231 = -160						; size = 8
tv220 = -160						; size = 8
tv256 = -152						; size = 4
tv232 = -152						; size = 8
tv221 = -152						; size = 8
tv183 = -152						; size = 4
tv132 = -152						; size = 4
tv78 = -152						; size = 4
tv249 = -148						; size = 4
tv176 = -148						; size = 4
tv161 = -148						; size = 4
tv92 = -148						; size = 4
tv70 = -148						; size = 4
_tracking_point$1 = -80					; size = 4
_intercept_point$ = -76					; size = 12
_target_position$ = -64					; size = 12
_target$ = -52						; size = 4
_source$ = -48						; size = 4
_pitch_offset$ = -44					; size = 4
_heading_offset$ = -40					; size = 4
_intercept_point_y$ = -36				; size = 4
_intercept_point_x$ = -32				; size = 4
_target_y$ = -28					; size = 4
_target_x$ = -24					; size = 4
_j$ = -20						; size = 4
_i$ = -16						; size = 4
_visibility$ = -12					; size = 4
_selected_weapon_type$ = -8				; size = 4
_target_visible$ = -4					; size = 4
?draw_target_symbology@@YGXXZ PROC			; draw_target_symbology, COMDAT

; 1800 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1801 : 	int
; 1802 : 		target_visible;
; 1803 : 
; 1804 : 	entity_sub_types
; 1805 : 		selected_weapon_type;
; 1806 : 
; 1807 : 	object_3d_visibility
; 1808 : 		visibility;
; 1809 : 
; 1810 : 	float
; 1811 : 		i,
; 1812 : 		j,
; 1813 : 		target_x,
; 1814 : 		target_y,
; 1815 : 		intercept_point_x,
; 1816 : 		intercept_point_y,
; 1817 : 		heading_offset,
; 1818 : 		pitch_offset;
; 1819 : 
; 1820 : 	entity
; 1821 : 		*source,
; 1822 : 		*target;
; 1823 : 
; 1824 : 	vec3d
; 1825 : 		target_position,
; 1826 : 		intercept_point;
; 1827 : 
; 1828 : 	source = get_gunship_entity ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	89 45 d0	 mov	 DWORD PTR _source$[ebp], eax

; 1829 : 
; 1830 : 	selected_weapon_type = get_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON);

  00014	83 7d d0 00	 cmp	 DWORD PTR _source$[ebp], 0
  00018	74 0d		 je	 SHORT $LN40@draw_targe
  0001a	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00025	eb 24		 jmp	 SHORT $LN41@draw_targe
$LN40@draw_targe:
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  0002d	83 c2 1e	 add	 edx, 30			; 0000001eH
  00030	52		 push	 edx
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN41@draw_targe:
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	85 c9		 test	 ecx, ecx
  00052	74 0c		 je	 SHORT $LN42@draw_targe
  00054	c7 85 68 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv78[ebp], 184 ; 000000b8H
  0005e	eb 24		 jmp	 SHORT $LN43@draw_targe
$LN42@draw_targe:
  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  00066	83 c2 1e	 add	 edx, 30			; 0000001eH
  00069	52		 push	 edx
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007a	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN43@draw_targe:
  00084	68 b8 00 00 00	 push	 184			; 000000b8H
  00089	8b 4d d0	 mov	 ecx, DWORD PTR _source$[ebp]
  0008c	51		 push	 ecx
  0008d	69 95 6c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv70[ebp], 1116
  00097	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0009d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a4	ff d1		 call	 ecx
  000a6	89 45 f8	 mov	 DWORD PTR _selected_weapon_type$[ebp], eax

; 1831 : 
; 1832 : 	if (selected_weapon_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  000a9	83 7d f8 00	 cmp	 DWORD PTR _selected_weapon_type$[ebp], 0
  000ad	0f 84 27 06 00
	00		 je	 $LN2@draw_targe

; 1833 : 	{
; 1834 : 		vec3d* tracking_point = get_eo_tracking_point();

  000b3	e8 00 00 00 00	 call	 ?get_eo_tracking_point@@YGPAUVEC3D@@XZ ; get_eo_tracking_point
  000b8	89 45 b0	 mov	 DWORD PTR _tracking_point$1[ebp], eax

; 1835 : 		target = get_local_entity_parent (source, LIST_TYPE_TARGET);

  000bb	83 7d d0 00	 cmp	 DWORD PTR _source$[ebp], 0
  000bf	74 0d		 je	 SHORT $LN44@draw_targe
  000c1	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv92[ebp], ecx
  000cc	eb 24		 jmp	 SHORT $LN45@draw_targe
$LN44@draw_targe:
  000ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  000d4	83 c2 23	 add	 edx, 35			; 00000023H
  000d7	52		 push	 edx
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e8	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN45@draw_targe:
  000f2	b9 01 00 00 00	 mov	 ecx, 1
  000f7	85 c9		 test	 ecx, ecx
  000f9	74 0c		 je	 SHORT $LN46@draw_targe
  000fb	c7 85 68 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv132[ebp], 38 ; 00000026H
  00105	eb 24		 jmp	 SHORT $LN47@draw_targe
$LN46@draw_targe:
  00107	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  0010d	83 c2 23	 add	 edx, 35			; 00000023H
  00110	52		 push	 edx
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00121	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN47@draw_targe:
  0012b	6a 26		 push	 38			; 00000026H
  0012d	8b 4d d0	 mov	 ecx, DWORD PTR _source$[ebp]
  00130	51		 push	 ecx
  00131	69 95 6c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv92[ebp], 180
  0013b	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv132[ebp]
  00141	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00148	ff d1		 call	 ecx
  0014a	89 45 cc	 mov	 DWORD PTR _target$[ebp], eax

; 1836 : 
; 1837 : 		target_visible = FALSE;

  0014d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _target_visible$[ebp], 0

; 1838 : 
; 1839 : 		if (target || tracking_point)

  00154	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00158	75 0a		 jne	 SHORT $LN6@draw_targe
  0015a	83 7d b0 00	 cmp	 DWORD PTR _tracking_point$1[ebp], 0
  0015e	0f 84 b5 00 00
	00		 je	 $LN10@draw_targe
$LN6@draw_targe:

; 1840 : 		{
; 1841 : 			//
; 1842 : 			// draw target marker
; 1843 : 			//
; 1844 : 
; 1845 : 			if (!draw_hud_on_lens)

  00164	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hud_on_lens@@3HA, 0
  0016b	0f 85 a8 00 00
	00		 jne	 $LN10@draw_targe

; 1846 : 			{
; 1847 : 				if (target)

  00171	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00175	74 0f		 je	 SHORT $LN8@draw_targe

; 1848 : 					get_local_entity_target_point (target, &target_position);

  00177	8d 45 c0	 lea	 eax, DWORD PTR _target_position$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d cc	 mov	 ecx, DWORD PTR _target$[ebp]
  0017e	51		 push	 ecx
  0017f	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1849 : 				else

  00184	eb 14		 jmp	 SHORT $LN9@draw_targe
$LN8@draw_targe:

; 1850 : 					target_position = *tracking_point;

  00186	8b 45 b0	 mov	 eax, DWORD PTR _tracking_point$1[ebp]
  00189	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018b	89 4d c0	 mov	 DWORD PTR _target_position$[ebp], ecx
  0018e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00191	89 55 c4	 mov	 DWORD PTR _target_position$[ebp+4], edx
  00194	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00197	89 45 c8	 mov	 DWORD PTR _target_position$[ebp+8], eax
$LN9@draw_targe:

; 1851 : 
; 1852 : 				visibility = get_position_3d_screen_coordinates (&target_position, &i, &j);

  0019a	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  0019d	50		 push	 eax
  0019e	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  001a1	51		 push	 ecx
  001a2	8d 55 c0	 lea	 edx, DWORD PTR _target_position$[ebp]
  001a5	52		 push	 edx
  001a6	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates
  001ab	89 45 f4	 mov	 DWORD PTR _visibility$[ebp], eax

; 1853 : 
; 1854 : 				if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  001ae	83 7d f4 01	 cmp	 DWORD PTR _visibility$[ebp], 1
  001b2	74 06		 je	 SHORT $LN11@draw_targe
  001b4	83 7d f4 02	 cmp	 DWORD PTR _visibility$[ebp], 2
  001b8	75 5f		 jne	 SHORT $LN10@draw_targe
$LN11@draw_targe:

; 1855 : 				{
; 1856 : 					target_visible = TRUE;

  001ba	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _target_visible$[ebp], 1

; 1857 : 
; 1858 : 					transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  001c1	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  001c4	50		 push	 eax
  001c5	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  001c8	51		 push	 ecx
  001c9	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 1859 : 
; 1860 : 					get_2d_world_position (i, j, &target_x, &target_y);

  001ce	8d 45 e4	 lea	 eax, DWORD PTR _target_y$[ebp]
  001d1	50		 push	 eax
  001d2	8d 4d e8	 lea	 ecx, DWORD PTR _target_x$[ebp]
  001d5	51		 push	 ecx
  001d6	51		 push	 ecx
  001d7	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _j$[ebp]
  001dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e1	51		 push	 ecx
  001e2	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _i$[ebp]
  001e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ec	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 1861 : 
; 1862 : 					clip_2d_point_to_hud_extent (&target_x, &target_y);

  001f1	8d 45 e4	 lea	 eax, DWORD PTR _target_y$[ebp]
  001f4	50		 push	 eax
  001f5	8d 4d e8	 lea	 ecx, DWORD PTR _target_x$[ebp]
  001f8	51		 push	 ecx
  001f9	e8 00 00 00 00	 call	 ?clip_2d_point_to_hud_extent@@YGXPAM0@Z ; clip_2d_point_to_hud_extent

; 1863 : 
; 1864 : 					draw_target_marker (target_x, target_y);

  001fe	51		 push	 ecx
  001ff	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00204	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00209	51		 push	 ecx
  0020a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  0020f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00214	e8 00 00 00 00	 call	 ?draw_target_marker@@YGXMM@Z ; draw_target_marker
$LN10@draw_targe:

; 1865 : 				}
; 1866 : 			}
; 1867 : 		}
; 1868 : 
; 1869 : 		switch (selected_weapon_type)

  00219	8b 45 f8	 mov	 eax, DWORD PTR _selected_weapon_type$[ebp]
  0021c	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv161[ebp], eax
  00222	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv161[ebp]
  00228	83 e9 03	 sub	 ecx, 3
  0022b	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv161[ebp], ecx
  00231	83 bd 6c ff ff
	ff 2b		 cmp	 DWORD PTR tv161[ebp], 43 ; 0000002bH
  00238	0f 87 9c 04 00
	00		 ja	 $LN2@draw_targe
  0023e	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv161[ebp]
  00244	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN64@draw_targe[edx]
  0024b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN65@draw_targe[eax*4]
$LN12@draw_targe:

; 1870 : 		{
; 1871 : 			////////////////////////////////////////
; 1872 : 			case ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND:
; 1873 : 			////////////////////////////////////////
; 1874 : 			{
; 1875 : 				if (target_visible)

  00252	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  00256	74 41		 je	 SHORT $LN15@draw_targe

; 1876 : 				{
; 1877 : 					if (weapon_lock_type == WEAPON_LOCK_VALID)

  00258	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  0025f	75 1d		 jne	 SHORT $LN14@draw_targe

; 1878 : 					{
; 1879 : 						draw_solid_gun_target_marker (target_x, target_y);

  00261	51		 push	 ecx
  00262	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00267	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026c	51		 push	 ecx
  0026d	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00272	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00277	e8 00 00 00 00	 call	 ?draw_solid_gun_target_marker@@YGXMM@Z ; draw_solid_gun_target_marker

; 1880 : 					}
; 1881 : 					else

  0027c	eb 1b		 jmp	 SHORT $LN15@draw_targe
$LN14@draw_targe:

; 1882 : 					{
; 1883 : 						draw_dashed_gun_target_marker (target_x, target_y);

  0027e	51		 push	 ecx
  0027f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00284	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00289	51		 push	 ecx
  0028a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  0028f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00294	e8 00 00 00 00	 call	 ?draw_dashed_gun_target_marker@@YGXMM@Z ; draw_dashed_gun_target_marker
$LN15@draw_targe:

; 1884 : 					}
; 1885 : 				}
; 1886 : 
; 1887 : 				break;

  00299	e9 3c 04 00 00	 jmp	 $LN2@draw_targe
$LN16@draw_targe:

; 1888 : 			}
; 1889 : 			////////////////////////////////////////
; 1890 : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 1891 : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 1892 : 			////////////////////////////////////////
; 1893 : 			{
; 1894 : 				if (target_visible)

  0029e	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  002a2	0f 84 aa 02 00
	00		 je	 $LN23@draw_targe

; 1895 : 				{
; 1896 : 					if (!draw_hud_on_lens)

  002a8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hud_on_lens@@3HA, 0
  002af	0f 85 26 01 00
	00		 jne	 $LN20@draw_targe

; 1897 : 					{
; 1898 : 						if (target && get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  002b5	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  002b9	0f 84 1c 01 00
	00		 je	 $LN20@draw_targe
  002bf	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  002c3	74 0d		 je	 SHORT $LN48@draw_targe
  002c5	8b 45 cc	 mov	 eax, DWORD PTR _target$[ebp]
  002c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ca	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv176[ebp], ecx
  002d0	eb 20		 jmp	 SHORT $LN49@draw_targe
$LN48@draw_targe:
  002d2	68 6a 07 00 00	 push	 1898			; 0000076aH
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002e2	52		 push	 edx
  002e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e8	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
$LN49@draw_targe:
  002f2	b8 01 00 00 00	 mov	 eax, 1
  002f7	85 c0		 test	 eax, eax
  002f9	74 0c		 je	 SHORT $LN50@draw_targe
  002fb	c7 85 68 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv183[ebp], 4
  00305	eb 20		 jmp	 SHORT $LN51@draw_targe
$LN50@draw_targe:
  00307	68 6a 07 00 00	 push	 1898			; 0000076aH
  0030c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00311	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00317	51		 push	 ecx
  00318	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031d	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN51@draw_targe:
  00327	6a 04		 push	 4
  00329	8b 55 cc	 mov	 edx, DWORD PTR _target$[ebp]
  0032c	52		 push	 edx
  0032d	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv176[ebp], 1116
  00337	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv183[ebp]
  0033d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00344	ff d2		 call	 edx
  00346	85 c0		 test	 eax, eax
  00348	0f 84 8d 00 00
	00		 je	 $LN20@draw_targe

; 1899 : 						{
; 1900 : 							get_target_intercept_point (source, target, selected_weapon_type, &intercept_point);

  0034e	8d 45 b4	 lea	 eax, DWORD PTR _intercept_point$[ebp]
  00351	50		 push	 eax
  00352	8b 4d f8	 mov	 ecx, DWORD PTR _selected_weapon_type$[ebp]
  00355	51		 push	 ecx
  00356	8b 55 cc	 mov	 edx, DWORD PTR _target$[ebp]
  00359	52		 push	 edx
  0035a	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  0035d	50		 push	 eax
  0035e	e8 00 00 00 00	 call	 ?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z ; get_target_intercept_point

; 1901 : 
; 1902 : 							visibility = get_position_3d_screen_coordinates (&intercept_point, &i, &j);

  00363	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  00366	50		 push	 eax
  00367	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  0036a	51		 push	 ecx
  0036b	8d 55 b4	 lea	 edx, DWORD PTR _intercept_point$[ebp]
  0036e	52		 push	 edx
  0036f	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates
  00374	89 45 f4	 mov	 DWORD PTR _visibility$[ebp], eax

; 1903 : 
; 1904 : 							if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  00377	83 7d f4 01	 cmp	 DWORD PTR _visibility$[ebp], 1
  0037b	74 06		 je	 SHORT $LN21@draw_targe
  0037d	83 7d f4 02	 cmp	 DWORD PTR _visibility$[ebp], 2
  00381	75 58		 jne	 SHORT $LN20@draw_targe
$LN21@draw_targe:

; 1905 : 							{
; 1906 : 								transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  00383	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  00386	50		 push	 eax
  00387	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  0038a	51		 push	 ecx
  0038b	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 1907 : 
; 1908 : 								get_2d_world_position (i, j, &intercept_point_x, &intercept_point_y);

  00390	8d 45 dc	 lea	 eax, DWORD PTR _intercept_point_y$[ebp]
  00393	50		 push	 eax
  00394	8d 4d e0	 lea	 ecx, DWORD PTR _intercept_point_x$[ebp]
  00397	51		 push	 ecx
  00398	51		 push	 ecx
  00399	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _j$[ebp]
  0039e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a3	51		 push	 ecx
  003a4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _i$[ebp]
  003a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ae	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 1909 : 
; 1910 : 								clip_2d_point_to_hud_extent (&intercept_point_x, &intercept_point_y);

  003b3	8d 45 dc	 lea	 eax, DWORD PTR _intercept_point_y$[ebp]
  003b6	50		 push	 eax
  003b7	8d 4d e0	 lea	 ecx, DWORD PTR _intercept_point_x$[ebp]
  003ba	51		 push	 ecx
  003bb	e8 00 00 00 00	 call	 ?clip_2d_point_to_hud_extent@@YGXPAM0@Z ; clip_2d_point_to_hud_extent

; 1911 : 
; 1912 : 								draw_airborne_target_computed_intercept_point (intercept_point_x, intercept_point_y);

  003c0	51		 push	 ecx
  003c1	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _intercept_point_y$[ebp]
  003c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cb	51		 push	 ecx
  003cc	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _intercept_point_x$[ebp]
  003d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d6	e8 00 00 00 00	 call	 ?draw_airborne_target_computed_intercept_point@@YGXMM@Z ; draw_airborne_target_computed_intercept_point
$LN20@draw_targe:

; 1913 : 							}
; 1914 : 						}
; 1915 : 					}
; 1916 : 
; 1917 : 					if (get_local_entity_selected_weapon_to_target_offsets (source, &heading_offset, &pitch_offset))

  003db	8d 45 d4	 lea	 eax, DWORD PTR _pitch_offset$[ebp]
  003de	50		 push	 eax
  003df	8d 4d d8	 lea	 ecx, DWORD PTR _heading_offset$[ebp]
  003e2	51		 push	 ecx
  003e3	8b 55 d0	 mov	 edx, DWORD PTR _source$[ebp]
  003e6	52		 push	 edx
  003e7	e8 00 00 00 00	 call	 ?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z ; get_local_entity_selected_weapon_to_target_offsets
  003ec	85 c0		 test	 eax, eax
  003ee	0f 84 4f 01 00
	00		 je	 $LN22@draw_targe

; 1918 : 					{
; 1919 : 						heading_offset = bound (heading_offset, rad (-10.0), rad (10.0));

  003f4	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  003f9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfc6571848000000
  00401	66 0f 2f c8	 comisd	 xmm1, xmm0
  00405	76 12		 jbe	 SHORT $LN54@draw_targe
  00407	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfc6571848000000
  0040f	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv221[ebp], xmm0
  00417	eb 3e		 jmp	 SHORT $LN55@draw_targe
$LN54@draw_targe:
  00419	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  0041e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fc6571848000000
  00426	76 12		 jbe	 SHORT $LN52@draw_targe
  00428	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00430	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv220[ebp], xmm0
  00438	eb 0d		 jmp	 SHORT $LN53@draw_targe
$LN52@draw_targe:
  0043a	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  0043f	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv220[ebp], xmm0
$LN53@draw_targe:
  00447	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv220[ebp]
  0044f	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv221[ebp], xmm0
$LN55@draw_targe:
  00457	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv221[ebp]
  0045f	f3 0f 11 45 d8	 movss	 DWORD PTR _heading_offset$[ebp], xmm0

; 1920 : 
; 1921 : 						heading_offset *= 0.7 / 0.17453293;	// rad (10.0)

  00464	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  00469	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40100af61bdae6ca
  00471	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00475	f3 0f 11 45 d8	 movss	 DWORD PTR _heading_offset$[ebp], xmm0

; 1922 : 
; 1923 : 						pitch_offset = bound (pitch_offset, rad (-5.0), rad (5.0));

  0047a	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  0047f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfb6571848000000
  00487	66 0f 2f c8	 comisd	 xmm1, xmm0
  0048b	76 12		 jbe	 SHORT $LN58@draw_targe
  0048d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfb6571848000000
  00495	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv232[ebp], xmm0
  0049d	eb 3e		 jmp	 SHORT $LN59@draw_targe
$LN58@draw_targe:
  0049f	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  004a4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb6571848000000
  004ac	76 12		 jbe	 SHORT $LN56@draw_targe
  004ae	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb6571848000000
  004b6	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv231[ebp], xmm0
  004be	eb 0d		 jmp	 SHORT $LN57@draw_targe
$LN56@draw_targe:
  004c0	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  004c5	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv231[ebp], xmm0
$LN57@draw_targe:
  004cd	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv231[ebp]
  004d5	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv232[ebp], xmm0
$LN59@draw_targe:
  004dd	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv232[ebp]
  004e5	f3 0f 11 45 d4	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0

; 1924 : 
; 1925 : 						pitch_offset *= 0.35 / 0.08726646;	// rad (5.0)

  004ea	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  004ef	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40100af62b46c63e
  004f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004fb	f3 0f 11 45 d4	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0

; 1926 : 
; 1927 : 						if (weapon_lock_type == WEAPON_LOCK_VALID)

  00500	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  00507	75 1d		 jne	 SHORT $LN24@draw_targe

; 1928 : 						{
; 1929 : 							draw_solid_i_beam (heading_offset, pitch_offset);

  00509	51		 push	 ecx
  0050a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _pitch_offset$[ebp]
  0050f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00514	51		 push	 ecx
  00515	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading_offset$[ebp]
  0051a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0051f	e8 00 00 00 00	 call	 ?draw_solid_i_beam@@YGXMM@Z ; draw_solid_i_beam

; 1930 : 						}
; 1931 : 						else

  00524	eb 1b		 jmp	 SHORT $LN25@draw_targe
$LN24@draw_targe:

; 1932 : 						{
; 1933 : 							draw_dashed_i_beam (heading_offset, pitch_offset);

  00526	51		 push	 ecx
  00527	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _pitch_offset$[ebp]
  0052c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00531	51		 push	 ecx
  00532	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading_offset$[ebp]
  00537	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053c	e8 00 00 00 00	 call	 ?draw_dashed_i_beam@@YGXMM@Z ; draw_dashed_i_beam
$LN25@draw_targe:

; 1934 : 						}
; 1935 : 					}
; 1936 : 					else

  00541	eb 0f		 jmp	 SHORT $LN23@draw_targe
$LN22@draw_targe:

; 1937 : 					{
; 1938 : 						//
; 1939 : 						// this should never happen
; 1940 : 						//
; 1941 : 
; 1942 : 						debug_colour_log (DEBUG_COLOUR_RED, "WARNING! get_local_entity_selected_weapon_to_target_offsets failed");

  00543	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@
  00548	6a 04		 push	 4
  0054a	e8 00 00 00 00	 call	 ?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ ; debug_colour_log
  0054f	83 c4 08	 add	 esp, 8
$LN23@draw_targe:

; 1943 : 					}
; 1944 : 				}
; 1945 : 
; 1946 : 				break;

  00552	e9 83 01 00 00	 jmp	 $LN2@draw_targe
$LN26@draw_targe:

; 1947 : 			}
; 1948 : 			////////////////////////////////////////
; 1949 : 			case ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE:
; 1950 : 			case ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II:
; 1951 : 			////////////////////////////////////////
; 1952 : 			{
; 1953 : 				if (!get_local_entity_int_value (source, INT_TYPE_LOCK_ON_AFTER_LAUNCH))

  00557	83 7d d0 00	 cmp	 DWORD PTR _source$[ebp], 0
  0055b	74 0d		 je	 SHORT $LN60@draw_targe
  0055d	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  00560	8b 08		 mov	 ecx, DWORD PTR [eax]
  00562	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv249[ebp], ecx
  00568	eb 20		 jmp	 SHORT $LN61@draw_targe
$LN60@draw_targe:
  0056a	68 a1 07 00 00	 push	 1953			; 000007a1H
  0056f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00574	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0057a	52		 push	 edx
  0057b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00580	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv249[ebp], 0
$LN61@draw_targe:
  0058a	b8 01 00 00 00	 mov	 eax, 1
  0058f	85 c0		 test	 eax, eax
  00591	74 0c		 je	 SHORT $LN62@draw_targe
  00593	c7 85 68 ff ff
	ff 7e 00 00 00	 mov	 DWORD PTR tv256[ebp], 126 ; 0000007eH
  0059d	eb 20		 jmp	 SHORT $LN63@draw_targe
$LN62@draw_targe:
  0059f	68 a1 07 00 00	 push	 1953			; 000007a1H
  005a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005af	51		 push	 ecx
  005b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005b5	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv256[ebp], 0
$LN63@draw_targe:
  005bf	6a 7e		 push	 126			; 0000007eH
  005c1	8b 55 d0	 mov	 edx, DWORD PTR _source$[ebp]
  005c4	52		 push	 edx
  005c5	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv249[ebp], 1116
  005cf	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv256[ebp]
  005d5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005dc	ff d2		 call	 edx
  005de	85 c0		 test	 eax, eax
  005e0	75 49		 jne	 SHORT $LN27@draw_targe

; 1954 : 				{
; 1955 : 					if (target_visible)

  005e2	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  005e6	74 41		 je	 SHORT $LN31@draw_targe

; 1956 : 					{
; 1957 : 						if (weapon_lock_type == WEAPON_LOCK_VALID)

  005e8	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  005ef	75 1d		 jne	 SHORT $LN30@draw_targe

; 1958 : 						{
; 1959 : 							draw_hellfire_lobl_solid_target_marker (target_x, target_y);

  005f1	51		 push	 ecx
  005f2	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  005f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fc	51		 push	 ecx
  005fd	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00602	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00607	e8 00 00 00 00	 call	 ?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z ; draw_hellfire_lobl_solid_target_marker

; 1960 : 						}
; 1961 : 						else

  0060c	eb 1b		 jmp	 SHORT $LN31@draw_targe
$LN30@draw_targe:

; 1962 : 						{
; 1963 : 							draw_hellfire_lobl_dashed_target_marker (target_x, target_y);

  0060e	51		 push	 ecx
  0060f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00614	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00619	51		 push	 ecx
  0061a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  0061f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00624	e8 00 00 00 00	 call	 ?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z ; draw_hellfire_lobl_dashed_target_marker
$LN31@draw_targe:

; 1964 : 						}
; 1965 : 					}
; 1966 : 				}
; 1967 : 				else

  00629	eb 60		 jmp	 SHORT $LN33@draw_targe
$LN27@draw_targe:

; 1968 : 				{
; 1969 : 					if (target_visible)

  0062b	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  0062f	74 43		 je	 SHORT $LN32@draw_targe

; 1970 : 					{
; 1971 : 						if (weapon_lock_type == WEAPON_LOCK_VALID)

  00631	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  00638	75 1d		 jne	 SHORT $LN34@draw_targe

; 1972 : 						{
; 1973 : 							draw_hellfire_loal_solid_target_marker (target_x, target_y);

  0063a	51		 push	 ecx
  0063b	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00640	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00645	51		 push	 ecx
  00646	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  0064b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00650	e8 00 00 00 00	 call	 ?draw_hellfire_loal_solid_target_marker@@YGXMM@Z ; draw_hellfire_loal_solid_target_marker

; 1974 : 						}
; 1975 : 						else

  00655	eb 1b		 jmp	 SHORT $LN35@draw_targe
$LN34@draw_targe:

; 1976 : 						{
; 1977 : 							draw_hellfire_loal_dashed_target_marker (target_x, target_y);

  00657	51		 push	 ecx
  00658	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  0065d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00662	51		 push	 ecx
  00663	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00668	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066d	e8 00 00 00 00	 call	 ?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z ; draw_hellfire_loal_dashed_target_marker
$LN35@draw_targe:

; 1978 : 						}
; 1979 : 					}
; 1980 : 					else

  00672	eb 17		 jmp	 SHORT $LN33@draw_targe
$LN32@draw_targe:

; 1981 : 					{
; 1982 : 						draw_hellfire_loal_dashed_target_marker (0.0, 0.0);

  00674	51		 push	 ecx
  00675	0f 57 c0	 xorps	 xmm0, xmm0
  00678	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067d	51		 push	 ecx
  0067e	0f 57 c0	 xorps	 xmm0, xmm0
  00681	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00686	e8 00 00 00 00	 call	 ?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z ; draw_hellfire_loal_dashed_target_marker
$LN33@draw_targe:

; 1983 : 					}
; 1984 : 				}
; 1985 : 
; 1986 : 				break;

  0068b	eb 4d		 jmp	 SHORT $LN2@draw_targe
$LN36@draw_targe:

; 1987 : 			}
; 1988 : 			////////////////////////////////////////
; 1989 : 			case ENTITY_SUB_TYPE_WEAPON_AIM9M_SIDEWINDER:
; 1990 : 			////////////////////////////////////////
; 1991 : 			{
; 1992 : 				if ((weapon_lock_type == WEAPON_LOCK_VALID) && target_visible)

  0068d	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  00694	75 23		 jne	 SHORT $LN37@draw_targe
  00696	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  0069a	74 1d		 je	 SHORT $LN37@draw_targe

; 1993 : 				{
; 1994 : 					draw_solid_sidewinder_target_marker (target_x, target_y);

  0069c	51		 push	 ecx
  0069d	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  006a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a7	51		 push	 ecx
  006a8	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  006ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b2	e8 00 00 00 00	 call	 ?draw_solid_sidewinder_target_marker@@YGXMM@Z ; draw_solid_sidewinder_target_marker

; 1995 : 				}
; 1996 : 				else

  006b7	eb 21		 jmp	 SHORT $LN38@draw_targe
$LN37@draw_targe:

; 1997 : 				{
; 1998 : 					draw_dashed_sidewinder_target_marker (viper_sidewinder_seeker_head_x_position, viper_sidewinder_seeker_head_y_position);

  006b9	51		 push	 ecx
  006ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?viper_sidewinder_seeker_head_y_position@@3MA
  006c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c7	51		 push	 ecx
  006c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?viper_sidewinder_seeker_head_x_position@@3MA
  006d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006d5	e8 00 00 00 00	 call	 ?draw_dashed_sidewinder_target_marker@@YGXMM@Z ; draw_dashed_sidewinder_target_marker
$LN38@draw_targe:
$LN2@draw_targe:

; 1999 : 				}
; 2000 : 
; 2001 : 				break;
; 2002 : 			}
; 2003 : 		}
; 2004 : 	}
; 2005 : }

  006da	5f		 pop	 edi
  006db	5e		 pop	 esi
  006dc	5b		 pop	 ebx
  006dd	8b e5		 mov	 esp, ebp
  006df	5d		 pop	 ebp
  006e0	c3		 ret	 0
  006e1	0f 1f 00	 npad	 3
$LN65@draw_targe:
  006e4	00 00 00 00	 DD	 $LN12@draw_targe
  006e8	00 00 00 00	 DD	 $LN16@draw_targe
  006ec	00 00 00 00	 DD	 $LN36@draw_targe
  006f0	00 00 00 00	 DD	 $LN26@draw_targe
  006f4	00 00 00 00	 DD	 $LN2@draw_targe
$LN64@draw_targe:
  006f8	00		 DB	 0
  006f9	04		 DB	 4
  006fa	04		 DB	 4
  006fb	04		 DB	 4
  006fc	04		 DB	 4
  006fd	04		 DB	 4
  006fe	04		 DB	 4
  006ff	04		 DB	 4
  00700	04		 DB	 4
  00701	04		 DB	 4
  00702	04		 DB	 4
  00703	04		 DB	 4
  00704	04		 DB	 4
  00705	04		 DB	 4
  00706	04		 DB	 4
  00707	04		 DB	 4
  00708	04		 DB	 4
  00709	04		 DB	 4
  0070a	04		 DB	 4
  0070b	04		 DB	 4
  0070c	04		 DB	 4
  0070d	04		 DB	 4
  0070e	04		 DB	 4
  0070f	04		 DB	 4
  00710	04		 DB	 4
  00711	04		 DB	 4
  00712	04		 DB	 4
  00713	01		 DB	 1
  00714	01		 DB	 1
  00715	04		 DB	 4
  00716	04		 DB	 4
  00717	04		 DB	 4
  00718	04		 DB	 4
  00719	04		 DB	 4
  0071a	02		 DB	 2
  0071b	04		 DB	 4
  0071c	04		 DB	 4
  0071d	04		 DB	 4
  0071e	04		 DB	 4
  0071f	04		 DB	 4
  00720	04		 DB	 4
  00721	04		 DB	 4
  00722	03		 DB	 3
  00723	03		 DB	 3
?draw_target_symbology@@YGXXZ ENDP			; draw_target_symbology
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_airborne_target_computed_intercept_point@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_airborne_target_computed_intercept_point@@YGXMM@Z PROC ; draw_airborne_target_computed_intercept_point, COMDAT

; 1790 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1791 : 	draw_2d_line (x - 0.05, y, x + 0.05, y, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00015	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0001f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00027	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002b	51		 push	 ecx
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	51		 push	 ecx
  00032	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00041	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00049	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004d	51		 push	 ecx
  0004e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00053	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1792 : 	draw_2d_line (x, y - 0.05, x, y + 0.05, hud_colour);

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0005d	50		 push	 eax
  0005e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00063	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0006b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0006f	51		 push	 ecx
  00070	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00075	51		 push	 ecx
  00076	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0007b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00080	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00085	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0008d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00091	51		 push	 ecx
  00092	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00097	51		 push	 ecx
  00098	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0009d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1793 : }

  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
?draw_airborne_target_computed_intercept_point@@YGXMM@Z ENDP ; draw_airborne_target_computed_intercept_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_hellfire_loal_solid_target_marker@@YGXMM@Z
_TEXT	SEGMENT
tv77 = -80						; size = 8
tv69 = -80						; size = 8
tv78 = -72						; size = 8
tv70 = -72						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_loal_solid_target_marker@@YGXMM@Z PROC	; draw_hellfire_loal_solid_target_marker, COMDAT

; 1775 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1776 : 	x = bound (x, -0.295, 0.295);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0000e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00016	66 0f 2f c8	 comisd	 xmm1, xmm0
  0001a	76 0f		 jbe	 SHORT $LN5@draw_hellf
  0001c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00024	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
  00029	eb 32		 jmp	 SHORT $LN6@draw_hellf
$LN5@draw_hellf:
  0002b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00030	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00038	76 0f		 jbe	 SHORT $LN3@draw_hellf
  0003a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00042	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
  00047	eb 0a		 jmp	 SHORT $LN4@draw_hellf
$LN3@draw_hellf:
  00049	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0004e	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
$LN4@draw_hellf:
  00053	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv69[ebp]
  00058	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
$LN6@draw_hellf:
  0005d	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv70[ebp]
  00062	f3 0f 11 45 08	 movss	 DWORD PTR _x$[ebp], xmm0

; 1777 : 	y = bound (y, -0.295, 0.295);

  00067	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0006c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00074	66 0f 2f c8	 comisd	 xmm1, xmm0
  00078	76 0f		 jbe	 SHORT $LN9@draw_hellf
  0007a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00082	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
  00087	eb 32		 jmp	 SHORT $LN10@draw_hellf
$LN9@draw_hellf:
  00089	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00096	76 0f		 jbe	 SHORT $LN7@draw_hellf
  00098	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  000a0	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
  000a5	eb 0a		 jmp	 SHORT $LN8@draw_hellf
$LN7@draw_hellf:
  000a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000ac	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
$LN8@draw_hellf:
  000b1	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv77[ebp]
  000b6	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
$LN10@draw_hellf:
  000bb	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv78[ebp]
  000c0	f3 0f 11 45 0c	 movss	 DWORD PTR _y$[ebp], xmm0

; 1778 : 
; 1779 : 	draw_2d_line (x - 0.7, y + 0.7, x + 0.7, y + 0.7, hud_colour);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ca	50		 push	 eax
  000cb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000d0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  000d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000dc	51		 push	 ecx
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f3	51		 push	 ecx
  000f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00106	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010a	51		 push	 ecx
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00115	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0011d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00121	51		 push	 ecx
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1780 : 	draw_2d_line (x + 0.7, y + 0.7, x + 0.7, y - 0.7, hud_colour);

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00131	50		 push	 eax
  00132	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00137	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0013f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00143	51		 push	 ecx
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00156	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0015a	51		 push	 ecx
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00165	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0016d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00171	51		 push	 ecx
  00172	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00177	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0017c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	51		 push	 ecx
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1781 : 	draw_2d_line (x + 0.7, y - 0.7, x - 0.7, y - 0.7, hud_colour);

  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00198	50		 push	 eax
  00199	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0019e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001aa	51		 push	 ecx
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001b5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001bd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c1	51		 push	 ecx
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001cc	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d8	51		 push	 ecx
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001e3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001eb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ef	51		 push	 ecx
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1782 : 	draw_2d_line (x - 0.7, y - 0.7, x - 0.7, y + 0.7, hud_colour);

  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ff	50		 push	 eax
  00200	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00205	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	51		 push	 ecx
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0021c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00224	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00228	51		 push	 ecx
  00229	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00233	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0023b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023f	51		 push	 ecx
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0024a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00252	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00256	51		 push	 ecx
  00257	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1783 : }

  00261	5f		 pop	 edi
  00262	5e		 pop	 esi
  00263	5b		 pop	 ebx
  00264	8b e5		 mov	 esp, ebp
  00266	5d		 pop	 ebp
  00267	c2 08 00	 ret	 8
?draw_hellfire_loal_solid_target_marker@@YGXMM@Z ENDP	; draw_hellfire_loal_solid_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z
_TEXT	SEGMENT
tv77 = -80						; size = 8
tv69 = -80						; size = 8
tv78 = -72						; size = 8
tv70 = -72						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z PROC	; draw_hellfire_loal_dashed_target_marker, COMDAT

; 1729 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1730 : 	x = bound (x, -0.295, 0.295);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0000e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00016	66 0f 2f c8	 comisd	 xmm1, xmm0
  0001a	76 0f		 jbe	 SHORT $LN5@draw_hellf
  0001c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00024	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
  00029	eb 32		 jmp	 SHORT $LN6@draw_hellf
$LN5@draw_hellf:
  0002b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00030	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00038	76 0f		 jbe	 SHORT $LN3@draw_hellf
  0003a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00042	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
  00047	eb 0a		 jmp	 SHORT $LN4@draw_hellf
$LN3@draw_hellf:
  00049	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0004e	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
$LN4@draw_hellf:
  00053	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv69[ebp]
  00058	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
$LN6@draw_hellf:
  0005d	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv70[ebp]
  00062	f3 0f 11 45 08	 movss	 DWORD PTR _x$[ebp], xmm0

; 1731 : 	y = bound (y, -0.295, 0.295);

  00067	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0006c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00074	66 0f 2f c8	 comisd	 xmm1, xmm0
  00078	76 0f		 jbe	 SHORT $LN9@draw_hellf
  0007a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00082	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
  00087	eb 32		 jmp	 SHORT $LN10@draw_hellf
$LN9@draw_hellf:
  00089	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00096	76 0f		 jbe	 SHORT $LN7@draw_hellf
  00098	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  000a0	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
  000a5	eb 0a		 jmp	 SHORT $LN8@draw_hellf
$LN7@draw_hellf:
  000a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000ac	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
$LN8@draw_hellf:
  000b1	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv77[ebp]
  000b6	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
$LN10@draw_hellf:
  000bb	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv78[ebp]
  000c0	f3 0f 11 45 0c	 movss	 DWORD PTR _y$[ebp], xmm0

; 1732 : 
; 1733 : 	draw_2d_line (x - 0.70, y + 0.70, x - 0.65, y + 0.70, hud_colour);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ca	50		 push	 eax
  000cb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000d0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  000d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000dc	51		 push	 ecx
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000e7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f3	51		 push	 ecx
  000f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00106	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010a	51		 push	 ecx
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00115	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0011d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00121	51		 push	 ecx
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1734 : 	draw_2d_line (x - 0.55, y + 0.70, x - 0.45, y + 0.70, hud_colour);

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00131	50		 push	 eax
  00132	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00137	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0013f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00143	51		 push	 ecx
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00156	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0015a	51		 push	 ecx
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00165	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0016d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00171	51		 push	 ecx
  00172	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00177	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0017c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	51		 push	 ecx
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1735 : 	draw_2d_line (x - 0.35, y + 0.70, x - 0.25, y + 0.70, hud_colour);

  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00198	50		 push	 eax
  00199	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0019e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001aa	51		 push	 ecx
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001b5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  001bd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c1	51		 push	 ecx
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001cc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d8	51		 push	 ecx
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001e3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  001eb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ef	51		 push	 ecx
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1736 : 	draw_2d_line (x - 0.15, y + 0.70, x - 0.05, y + 0.70, hud_colour);

  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ff	50		 push	 eax
  00200	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00205	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	51		 push	 ecx
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0021c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00224	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00228	51		 push	 ecx
  00229	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00233	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0023b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023f	51		 push	 ecx
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0024a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00252	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00256	51		 push	 ecx
  00257	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1737 : 	draw_2d_line (x + 0.05, y + 0.70, x + 0.15, y + 0.70, hud_colour);

  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00266	50		 push	 eax
  00267	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0026c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00274	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00278	51		 push	 ecx
  00279	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00283	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0028b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028f	51		 push	 ecx
  00290	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00295	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0029a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  002a2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a6	51		 push	 ecx
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002b1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  002b9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002bd	51		 push	 ecx
  002be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1738 : 	draw_2d_line (x + 0.25, y + 0.70, x + 0.35, y + 0.70, hud_colour);

  002c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002cd	50		 push	 eax
  002ce	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002d3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  002db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002df	51		 push	 ecx
  002e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002ea	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  002f2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f6	51		 push	 ecx
  002f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00301	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00309	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0030d	51		 push	 ecx
  0030e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00313	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00318	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00320	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00324	51		 push	 ecx
  00325	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1739 : 	draw_2d_line (x + 0.45, y + 0.70, x + 0.55, y + 0.70, hud_colour);

  0032f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00334	50		 push	 eax
  00335	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0033a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00342	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00346	51		 push	 ecx
  00347	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00351	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00359	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0035d	51		 push	 ecx
  0035e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00363	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00368	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00370	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00374	51		 push	 ecx
  00375	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0037a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0037f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00387	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0038b	51		 push	 ecx
  0038c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00391	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1740 : 	draw_2d_line (x + 0.65, y + 0.70, x + 0.70, y + 0.70, hud_colour);

  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0039b	50		 push	 eax
  0039c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003a1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  003a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ad	51		 push	 ecx
  003ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003b8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  003c0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003c4	51		 push	 ecx
  003c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ca	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003cf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  003d7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003db	51		 push	 ecx
  003dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003e6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  003ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003f2	51		 push	 ecx
  003f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1741 : 
; 1742 : 	draw_2d_line (x - 0.70, y - 0.70, x - 0.65, y - 0.70, hud_colour);

  003fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00402	50		 push	 eax
  00403	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00408	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00410	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00414	51		 push	 ecx
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0041f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00427	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0042b	51		 push	 ecx
  0042c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00431	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00436	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0043e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00442	51		 push	 ecx
  00443	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00448	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0044d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00455	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00459	51		 push	 ecx
  0045a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1743 : 	draw_2d_line (x - 0.55, y - 0.70, x - 0.45, y - 0.70, hud_colour);

  00464	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00469	50		 push	 eax
  0046a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0046f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00477	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0047b	51		 push	 ecx
  0047c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00481	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00486	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  0048e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00492	51		 push	 ecx
  00493	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00498	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0049d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  004a5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a9	51		 push	 ecx
  004aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004af	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004b4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  004bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004c0	51		 push	 ecx
  004c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1744 : 	draw_2d_line (x - 0.35, y - 0.70, x - 0.25, y - 0.70, hud_colour);

  004cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004d0	50		 push	 eax
  004d1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  004de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004e2	51		 push	 ecx
  004e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ed	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  004f5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f9	51		 push	 ecx
  004fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ff	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00504	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0050c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00510	51		 push	 ecx
  00511	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00516	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0051b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00523	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00527	51		 push	 ecx
  00528	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1745 : 	draw_2d_line (x - 0.15, y - 0.70, x - 0.05, y - 0.70, hud_colour);

  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00537	50		 push	 eax
  00538	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0053d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00545	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00549	51		 push	 ecx
  0054a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00554	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0055c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00560	51		 push	 ecx
  00561	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00566	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0056b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00573	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00577	51		 push	 ecx
  00578	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00582	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0058a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0058e	51		 push	 ecx
  0058f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00594	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1746 : 	draw_2d_line (x + 0.05, y - 0.70, x + 0.15, y - 0.70, hud_colour);

  00599	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0059e	50		 push	 eax
  0059f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005a4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  005ac	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b0	51		 push	 ecx
  005b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005bb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  005c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c7	51		 push	 ecx
  005c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005d2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  005da	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005de	51		 push	 ecx
  005df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005e9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  005f1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f5	51		 push	 ecx
  005f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fb	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1747 : 	draw_2d_line (x + 0.25, y - 0.70, x + 0.35, y - 0.70, hud_colour);

  00600	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00605	50		 push	 eax
  00606	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0060b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00613	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00617	51		 push	 ecx
  00618	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00622	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  0062a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0062e	51		 push	 ecx
  0062f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00634	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00639	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00641	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00645	51		 push	 ecx
  00646	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00650	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00658	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0065c	51		 push	 ecx
  0065d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00662	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1748 : 	draw_2d_line (x + 0.45, y - 0.70, x + 0.55, y - 0.70, hud_colour);

  00667	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0066c	50		 push	 eax
  0066d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00672	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0067a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0067e	51		 push	 ecx
  0067f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00684	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00689	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00691	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00695	51		 push	 ecx
  00696	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006a0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  006a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006ac	51		 push	 ecx
  006ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006b7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  006bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006c3	51		 push	 ecx
  006c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1749 : 	draw_2d_line (x + 0.65, y - 0.70, x + 0.70, y - 0.70, hud_colour);

  006ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006d3	50		 push	 eax
  006d4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006d9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  006e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006e5	51		 push	 ecx
  006e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006eb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006f0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  006f8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006fc	51		 push	 ecx
  006fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00702	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00707	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0070f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00713	51		 push	 ecx
  00714	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00719	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0071e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00726	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0072a	51		 push	 ecx
  0072b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00730	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1750 : 
; 1751 : 	draw_2d_line (x + 0.70, y - 0.70, x + 0.70, y - 0.65, hud_colour);

  00735	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0073a	50		 push	 eax
  0073b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00740	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00748	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0074c	51		 push	 ecx
  0074d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00752	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00757	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0075f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00763	51		 push	 ecx
  00764	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00769	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0076e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00776	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0077a	51		 push	 ecx
  0077b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00780	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00785	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0078d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00791	51		 push	 ecx
  00792	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00797	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1752 : 	draw_2d_line (x + 0.70, y - 0.55, x + 0.70, y - 0.45, hud_colour);

  0079c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007a1	50		 push	 eax
  007a2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007a7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  007af	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007b3	51		 push	 ecx
  007b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b9	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007be	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  007c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007ca	51		 push	 ecx
  007cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007d0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007d5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  007dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007e1	51		 push	 ecx
  007e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007ec	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  007f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f8	51		 push	 ecx
  007f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007fe	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1753 : 	draw_2d_line (x + 0.70, y - 0.35, x + 0.70, y - 0.25, hud_colour);

  00803	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00808	50		 push	 eax
  00809	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0080e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00816	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0081a	51		 push	 ecx
  0081b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00820	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00825	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0082d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00831	51		 push	 ecx
  00832	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00837	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0083c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00844	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00848	51		 push	 ecx
  00849	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0084e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00853	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0085b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0085f	51		 push	 ecx
  00860	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00865	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1754 : 	draw_2d_line (x + 0.70, y - 0.15, x + 0.70, y - 0.05, hud_colour);

  0086a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0086f	50		 push	 eax
  00870	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00875	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0087d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00881	51		 push	 ecx
  00882	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00887	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0088c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00894	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00898	51		 push	 ecx
  00899	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0089e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  008a3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  008ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008af	51		 push	 ecx
  008b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  008ba	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  008c2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008c6	51		 push	 ecx
  008c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008cc	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1755 : 	draw_2d_line (x + 0.70, y + 0.05, x + 0.70, y + 0.15, hud_colour);

  008d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  008d6	50		 push	 eax
  008d7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  008dc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  008e4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008e8	51		 push	 ecx
  008e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ee	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  008f3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  008fb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008ff	51		 push	 ecx
  00900	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00905	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0090a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00912	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00916	51		 push	 ecx
  00917	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0091c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00921	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00929	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0092d	51		 push	 ecx
  0092e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00933	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1756 : 	draw_2d_line (x + 0.70, y + 0.25, x + 0.70, y + 0.35, hud_colour);

  00938	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0093d	50		 push	 eax
  0093e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00943	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  0094b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0094f	51		 push	 ecx
  00950	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00955	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0095a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00962	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00966	51		 push	 ecx
  00967	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0096c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00971	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00979	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0097d	51		 push	 ecx
  0097e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00983	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00988	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00990	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00994	51		 push	 ecx
  00995	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0099a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1757 : 	draw_2d_line (x + 0.70, y + 0.45, x + 0.70, y + 0.55, hud_colour);

  0099f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  009a4	50		 push	 eax
  009a5	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  009aa	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  009b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009b6	51		 push	 ecx
  009b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009bc	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  009c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  009c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009cd	51		 push	 ecx
  009ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009d3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  009d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  009e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009e4	51		 push	 ecx
  009e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ea	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  009ef	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  009f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009fb	51		 push	 ecx
  009fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a01	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1758 : 	draw_2d_line (x + 0.70, y + 0.65, x + 0.70, y + 0.70, hud_colour);

  00a06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00a0b	50		 push	 eax
  00a0c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00a11	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a19	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a1d	51		 push	 ecx
  00a1e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a23	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00a28	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a30	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a34	51		 push	 ecx
  00a35	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a3a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00a3f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00a47	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a4b	51		 push	 ecx
  00a4c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a51	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00a56	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a5e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a62	51		 push	 ecx
  00a63	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a68	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1759 : 
; 1760 : 	draw_2d_line (x - 0.70, y - 0.70, x - 0.70, y - 0.65, hud_colour);

  00a6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00a72	50		 push	 eax
  00a73	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00a78	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00a80	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a84	51		 push	 ecx
  00a85	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a8a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00a8f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a97	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a9b	51		 push	 ecx
  00a9c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aa1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00aa6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00aae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ab2	51		 push	 ecx
  00ab3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ab8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00abd	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00ac5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ac9	51		 push	 ecx
  00aca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00acf	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1761 : 	draw_2d_line (x - 0.70, y - 0.55, x - 0.70, y - 0.45, hud_colour);

  00ad4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ad9	50		 push	 eax
  00ada	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00adf	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00ae7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00aeb	51		 push	 ecx
  00aec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00af1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00af6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00afe	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b02	51		 push	 ecx
  00b03	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b08	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00b0d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00b15	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b19	51		 push	 ecx
  00b1a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b1f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00b24	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00b2c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b30	51		 push	 ecx
  00b31	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b36	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1762 : 	draw_2d_line (x - 0.70, y - 0.35, x - 0.70, y - 0.25, hud_colour);

  00b3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00b40	50		 push	 eax
  00b41	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00b46	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00b4e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b52	51		 push	 ecx
  00b53	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b58	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00b5d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00b65	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b69	51		 push	 ecx
  00b6a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b6f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00b74	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00b7c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b80	51		 push	 ecx
  00b81	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b86	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00b8b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00b93	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b97	51		 push	 ecx
  00b98	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b9d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1763 : 	draw_2d_line (x - 0.70, y - 0.15, x - 0.70, y - 0.05, hud_colour);

  00ba2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ba7	50		 push	 eax
  00ba8	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00bad	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00bb5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bb9	51		 push	 ecx
  00bba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bbf	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00bc4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00bcc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bd0	51		 push	 ecx
  00bd1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bd6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00bdb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00be3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00be7	51		 push	 ecx
  00be8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bed	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00bf2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00bfa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bfe	51		 push	 ecx
  00bff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c04	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1764 : 	draw_2d_line (x - 0.70, y + 0.05, x - 0.70, y + 0.15, hud_colour);

  00c09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00c0e	50		 push	 eax
  00c0f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00c14	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00c1c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c20	51		 push	 ecx
  00c21	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c26	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00c2b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00c33	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c37	51		 push	 ecx
  00c38	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c3d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00c42	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00c4a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c4e	51		 push	 ecx
  00c4f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c54	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00c59	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00c61	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c65	51		 push	 ecx
  00c66	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c6b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1765 : 	draw_2d_line (x - 0.70, y + 0.25, x - 0.70, y + 0.35, hud_colour);

  00c70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00c75	50		 push	 eax
  00c76	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00c7b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00c83	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c87	51		 push	 ecx
  00c88	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c8d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00c92	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00c9a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c9e	51		 push	 ecx
  00c9f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ca4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00ca9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00cb1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cb5	51		 push	 ecx
  00cb6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cbb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00cc0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00cc8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ccc	51		 push	 ecx
  00ccd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cd2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1766 : 	draw_2d_line (x - 0.70, y + 0.45, x - 0.70, y + 0.55, hud_colour);

  00cd7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00cdc	50		 push	 eax
  00cdd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00ce2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00cea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cee	51		 push	 ecx
  00cef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00cf9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d01	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d05	51		 push	 ecx
  00d06	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d0b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00d10	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00d18	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d1c	51		 push	 ecx
  00d1d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d22	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00d27	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d2f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d33	51		 push	 ecx
  00d34	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d39	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1767 : 	draw_2d_line (x - 0.70, y + 0.65, x - 0.70, y + 0.70, hud_colour);

  00d3e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00d43	50		 push	 eax
  00d44	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00d49	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d51	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d55	51		 push	 ecx
  00d56	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d5b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00d60	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d68	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d6c	51		 push	 ecx
  00d6d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d72	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00d77	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00d7f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d83	51		 push	 ecx
  00d84	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d89	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00d8e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d96	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d9a	51		 push	 ecx
  00d9b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00da0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1768 : }

  00da5	5f		 pop	 edi
  00da6	5e		 pop	 esi
  00da7	5b		 pop	 ebx
  00da8	8b e5		 mov	 esp, ebp
  00daa	5d		 pop	 ebp
  00dab	c2 08 00	 ret	 8
?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z ENDP	; draw_hellfire_loal_dashed_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z PROC	; draw_hellfire_lobl_solid_target_marker, COMDAT

; 1717 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1718 : 	draw_2d_line (x - 0.15, y + 0.15, x + 0.15, y + 0.15, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1719 : 	draw_2d_line (x + 0.15, y + 0.15, x + 0.15, y - 0.15, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1720 : 	draw_2d_line (x + 0.15, y - 0.15, x - 0.15, y - 0.15, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1721 : 	draw_2d_line (x - 0.15, y - 0.15, x - 0.15, y + 0.15, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1722 : }

  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 08 00	 ret	 8
?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z ENDP	; draw_hellfire_lobl_solid_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z PROC	; draw_hellfire_lobl_dashed_target_marker, COMDAT

; 1686 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1687 : 	draw_2d_line (x - 0.15000, y + 0.15000, x - 0.13125, y + 0.15000, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1688 : 	draw_2d_line (x - 0.09375, y + 0.15000, x - 0.05626, y + 0.15000, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1689 : 	draw_2d_line (x - 0.01875, y + 0.15000, x + 0.01875, y + 0.15000, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1690 : 	draw_2d_line (x + 0.05625, y + 0.15000, x + 0.09375, y + 0.15000, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1691 : 	draw_2d_line (x + 0.13125, y + 0.15000, x + 0.15000, y + 0.15000, hud_colour);

  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001aa	50		 push	 eax
  001ab	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001b0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001b8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bc	51		 push	 ecx
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001c7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d3	51		 push	 ecx
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001de	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ea	51		 push	 ecx
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  001fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00201	51		 push	 ecx
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1692 : 
; 1693 : 	draw_2d_line (x - 0.15000, y - 0.15000, x - 0.13125, y - 0.15000, hud_colour);

  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00211	50		 push	 eax
  00212	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00217	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0021f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00223	51		 push	 ecx
  00224	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00229	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0022e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00236	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00240	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00245	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	51		 push	 ecx
  00252	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00257	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0025c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00264	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00268	51		 push	 ecx
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1694 : 	draw_2d_line (x - 0.09375, y - 0.15000, x - 0.05626, y - 0.15000, hud_colour);

  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00278	50		 push	 eax
  00279	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0027e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028a	51		 push	 ecx
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00295	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  0029d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a1	51		 push	 ecx
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  002b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b8	51		 push	 ecx
  002b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002be	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002c3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  002cb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002cf	51		 push	 ecx
  002d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1695 : 	draw_2d_line (x - 0.01875, y - 0.15000, x + 0.01875, y - 0.15000, hud_colour);

  002da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002df	50		 push	 eax
  002e0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002e5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  002ed	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f1	51		 push	 ecx
  002f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002fc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  00304	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00308	51		 push	 ecx
  00309	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00313	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0031b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031f	51		 push	 ecx
  00320	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00325	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0032a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  00332	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00336	51		 push	 ecx
  00337	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1696 : 	draw_2d_line (x + 0.05625, y - 0.15000, x + 0.09375, y - 0.15000, hud_colour);

  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00346	50		 push	 eax
  00347	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0034c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00354	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00358	51		 push	 ecx
  00359	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00363	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  0036b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036f	51		 push	 ecx
  00370	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00375	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0037a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00382	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00386	51		 push	 ecx
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00391	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00399	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0039d	51		 push	 ecx
  0039e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1697 : 	draw_2d_line (x + 0.13125, y - 0.15000, x + 0.15000, y - 0.15000, hud_colour);

  003a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003ad	50		 push	 eax
  003ae	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003b3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003bf	51		 push	 ecx
  003c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003ca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d6	51		 push	 ecx
  003d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003e1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ed	51		 push	 ecx
  003ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003f8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00400	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00404	51		 push	 ecx
  00405	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1698 : 
; 1699 : 	draw_2d_line (x + 0.15000, y - 0.15000, x + 0.15000, y - 0.13125, hud_colour);

  0040f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00414	50		 push	 eax
  00415	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0041a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00422	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00426	51		 push	 ecx
  00427	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00431	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00439	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043d	51		 push	 ecx
  0043e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00443	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00448	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00450	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00454	51		 push	 ecx
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0045f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00467	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046b	51		 push	 ecx
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1700 : 	draw_2d_line (x + 0.15000, y - 0.09375, x + 0.15000, y - 0.05626, hud_colour);

  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0047b	50		 push	 eax
  0047c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00481	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  00489	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0048d	51		 push	 ecx
  0048e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00493	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00498	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  004a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a4	51		 push	 ecx
  004a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004aa	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004af	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  004b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004bb	51		 push	 ecx
  004bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  004ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d2	51		 push	 ecx
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1701 : 	draw_2d_line (x + 0.15000, y - 0.01875, x + 0.15000, y + 0.01875, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004e8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  004f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f4	51		 push	 ecx
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ff	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00507	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050b	51		 push	 ecx
  0050c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00511	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00516	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  0051e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00522	51		 push	 ecx
  00523	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00528	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0052d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00535	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00539	51		 push	 ecx
  0053a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1702 : 	draw_2d_line (x + 0.15000, y + 0.05625, x + 0.15000, y + 0.09375, hud_colour);

  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00549	50		 push	 eax
  0054a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0054f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  00557	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0055b	51		 push	 ecx
  0055c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00561	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00566	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0056e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00572	51		 push	 ecx
  00573	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00578	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0057d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00585	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00589	51		 push	 ecx
  0058a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00594	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0059c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a0	51		 push	 ecx
  005a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1703 : 	draw_2d_line (x + 0.15000, y + 0.13125, x + 0.15000, y + 0.15000, hud_colour);

  005ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005b0	50		 push	 eax
  005b1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  005be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c2	51		 push	 ecx
  005c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005cd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  005d5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d9	51		 push	 ecx
  005da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005df	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005e4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  005ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f0	51		 push	 ecx
  005f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005fb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00603	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00607	51		 push	 ecx
  00608	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1704 : 
; 1705 : 	draw_2d_line (x - 0.15000, y - 0.15000, x - 0.15000, y - 0.13125, hud_colour);

  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00617	50		 push	 eax
  00618	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0061d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00625	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00629	51		 push	 ecx
  0062a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00634	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0063c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00640	51		 push	 ecx
  00641	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00646	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0064b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00653	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00657	51		 push	 ecx
  00658	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00662	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0066a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0066e	51		 push	 ecx
  0066f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00674	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1706 : 	draw_2d_line (x - 0.15000, y - 0.09375, x - 0.15000, y - 0.05626, hud_colour);

  00679	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0067e	50		 push	 eax
  0067f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00684	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  0068c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00690	51		 push	 ecx
  00691	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00696	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  006a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a7	51		 push	 ecx
  006a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ad	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006b2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  006ba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006be	51		 push	 ecx
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006c9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  006d1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d5	51		 push	 ecx
  006d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006db	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1707 : 	draw_2d_line (x - 0.15000, y - 0.01875, x - 0.15000, y + 0.01875, hud_colour);

  006e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006e5	50		 push	 eax
  006e6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006eb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  006f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f7	51		 push	 ecx
  006f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fd	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00702	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0070a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0070e	51		 push	 ecx
  0070f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00714	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00719	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  00721	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00725	51		 push	 ecx
  00726	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0072b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00730	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00738	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0073c	51		 push	 ecx
  0073d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00742	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1708 : 	draw_2d_line (x - 0.15000, y + 0.05625, x - 0.15000, y + 0.09375, hud_colour);

  00747	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0074c	50		 push	 eax
  0074d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00752	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  0075a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0075e	51		 push	 ecx
  0075f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00764	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00769	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00771	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00775	51		 push	 ecx
  00776	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0077b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00780	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00788	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0078c	51		 push	 ecx
  0078d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00792	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00797	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0079f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007a3	51		 push	 ecx
  007a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1709 : 	draw_2d_line (x - 0.15000, y + 0.13125, x - 0.15000, y + 0.15000, hud_colour);

  007ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007b3	50		 push	 eax
  007b4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007b9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  007c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007c5	51		 push	 ecx
  007c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007d0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  007d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007dc	51		 push	 ecx
  007dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  007ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f3	51		 push	 ecx
  007f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f9	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007fe	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00806	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0080a	51		 push	 ecx
  0080b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00810	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1710 : }

  00815	5f		 pop	 edi
  00816	5e		 pop	 esi
  00817	5b		 pop	 ebx
  00818	8b e5		 mov	 esp, ebp
  0081a	5d		 pop	 ebp
  0081b	c2 08 00	 ret	 8
?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z ENDP	; draw_hellfire_lobl_dashed_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_solid_gun_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_solid_gun_target_marker@@YGXMM@Z PROC		; draw_solid_gun_target_marker, COMDAT

; 1674 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1675 : 	draw_2d_line (x - 0.1, y + 0.1, x + 0.1, y + 0.1, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1676 : 	draw_2d_line (x + 0.1, y + 0.1, x + 0.1, y - 0.1, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1677 : 	draw_2d_line (x + 0.1, y - 0.1, x - 0.1, y - 0.1, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1678 : 	draw_2d_line (x - 0.1, y - 0.1, x - 0.1, y + 0.1, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1679 : }

  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 08 00	 ret	 8
?draw_solid_gun_target_marker@@YGXMM@Z ENDP		; draw_solid_gun_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_dashed_gun_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_dashed_gun_target_marker@@YGXMM@Z PROC		; draw_dashed_gun_target_marker, COMDAT

; 1643 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1644 : 	draw_2d_line (x - 0.1000, y + 0.1, x - 0.0788, y + 0.1, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1645 : 	draw_2d_line (x - 0.0556, y + 0.1, x - 0.0334, y + 0.1, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1646 : 	draw_2d_line (x - 0.0112, y + 0.1, x + 0.0110, y + 0.1, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1647 : 	draw_2d_line (x + 0.0332, y + 0.1, x + 0.0554, y + 0.1, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1648 : 	draw_2d_line (x + 0.0776, y + 0.1, x + 0.1000, y + 0.1, hud_colour);

  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001aa	50		 push	 eax
  001ab	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001b0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001b8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bc	51		 push	 ecx
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001c7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d3	51		 push	 ecx
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001de	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ea	51		 push	 ecx
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  001fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00201	51		 push	 ecx
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1649 : 
; 1650 : 	draw_2d_line (x - 0.1000, y - 0.1, x - 0.0788, y - 0.1, hud_colour);

  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00211	50		 push	 eax
  00212	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00217	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0021f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00223	51		 push	 ecx
  00224	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00229	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0022e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00236	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00240	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00245	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	51		 push	 ecx
  00252	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00257	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0025c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00264	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00268	51		 push	 ecx
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1651 : 	draw_2d_line (x - 0.0556, y - 0.1, x - 0.0334, y - 0.1, hud_colour);

  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00278	50		 push	 eax
  00279	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0027e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028a	51		 push	 ecx
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00295	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  0029d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a1	51		 push	 ecx
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b8	51		 push	 ecx
  002b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002be	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002c3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  002cb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002cf	51		 push	 ecx
  002d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1652 : 	draw_2d_line (x - 0.0112, y - 0.1, x + 0.0110, y - 0.1, hud_colour);

  002da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002df	50		 push	 eax
  002e0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002e5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002ed	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f1	51		 push	 ecx
  002f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002fc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  00304	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00308	51		 push	 ecx
  00309	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00313	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0031b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031f	51		 push	 ecx
  00320	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00325	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0032a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  00332	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00336	51		 push	 ecx
  00337	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1653 : 	draw_2d_line (x + 0.0332, y - 0.1, x + 0.0554, y - 0.1, hud_colour);

  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00346	50		 push	 eax
  00347	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0034c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00354	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00358	51		 push	 ecx
  00359	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00363	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  0036b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036f	51		 push	 ecx
  00370	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00375	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0037a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00382	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00386	51		 push	 ecx
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00391	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00399	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0039d	51		 push	 ecx
  0039e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1654 : 	draw_2d_line (x + 0.0776, y - 0.1, x + 0.1000, y - 0.1, hud_colour);

  003a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003ad	50		 push	 eax
  003ae	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003b3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003bf	51		 push	 ecx
  003c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003ca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d6	51		 push	 ecx
  003d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003e1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ed	51		 push	 ecx
  003ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003f8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  00400	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00404	51		 push	 ecx
  00405	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1655 : 
; 1656 : 	draw_2d_line (x + 0.1, y - 0.1000, x + 0.1, y - 0.0788, hud_colour);

  0040f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00414	50		 push	 eax
  00415	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0041a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00422	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00426	51		 push	 ecx
  00427	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00431	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00439	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043d	51		 push	 ecx
  0043e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00443	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00448	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00450	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00454	51		 push	 ecx
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0045f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00467	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046b	51		 push	 ecx
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1657 : 	draw_2d_line (x + 0.1, y - 0.0556, x + 0.1, y - 0.0334, hud_colour);

  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0047b	50		 push	 eax
  0047c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00481	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  00489	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0048d	51		 push	 ecx
  0048e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00493	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00498	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  004a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a4	51		 push	 ecx
  004a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004aa	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004af	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  004b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004bb	51		 push	 ecx
  004bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  004ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d2	51		 push	 ecx
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1658 : 	draw_2d_line (x + 0.1, y - 0.0112, x + 0.1, y + 0.0110, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004e8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  004f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f4	51		 push	 ecx
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ff	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00507	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050b	51		 push	 ecx
  0050c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00511	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00516	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  0051e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00522	51		 push	 ecx
  00523	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00528	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0052d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00535	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00539	51		 push	 ecx
  0053a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1659 : 	draw_2d_line (x + 0.1, y + 0.0332, x + 0.1, y + 0.0554, hud_colour);

  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00549	50		 push	 eax
  0054a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0054f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  00557	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0055b	51		 push	 ecx
  0055c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00561	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00566	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0056e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00572	51		 push	 ecx
  00573	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00578	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0057d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00585	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00589	51		 push	 ecx
  0058a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00594	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0059c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a0	51		 push	 ecx
  005a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1660 : 	draw_2d_line (x + 0.1, y + 0.0776, x + 0.1, y + 0.1000, hud_colour);

  005ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005b0	50		 push	 eax
  005b1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  005be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c2	51		 push	 ecx
  005c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005cd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  005d5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d9	51		 push	 ecx
  005da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005df	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005e4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  005ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f0	51		 push	 ecx
  005f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005fb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00603	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00607	51		 push	 ecx
  00608	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1661 : 
; 1662 : 	draw_2d_line (x - 0.1, y - 0.1000, x - 0.1, y - 0.0788, hud_colour);

  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00617	50		 push	 eax
  00618	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0061d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00625	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00629	51		 push	 ecx
  0062a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00634	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0063c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00640	51		 push	 ecx
  00641	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00646	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0064b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00653	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00657	51		 push	 ecx
  00658	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00662	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0066a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0066e	51		 push	 ecx
  0066f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00674	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1663 : 	draw_2d_line (x - 0.1, y - 0.0556, x - 0.1, y - 0.0334, hud_colour);

  00679	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0067e	50		 push	 eax
  0067f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00684	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  0068c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00690	51		 push	 ecx
  00691	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00696	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  006a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a7	51		 push	 ecx
  006a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ad	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006b2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  006ba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006be	51		 push	 ecx
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006c9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  006d1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d5	51		 push	 ecx
  006d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006db	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1664 : 	draw_2d_line (x - 0.1, y - 0.0112, x - 0.1, y + 0.0110, hud_colour);

  006e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006e5	50		 push	 eax
  006e6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006eb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  006f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f7	51		 push	 ecx
  006f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fd	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00702	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0070a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0070e	51		 push	 ecx
  0070f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00714	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00719	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  00721	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00725	51		 push	 ecx
  00726	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0072b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00730	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00738	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0073c	51		 push	 ecx
  0073d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00742	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1665 : 	draw_2d_line (x - 0.1, y + 0.0332, x - 0.1, y + 0.0554, hud_colour);

  00747	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0074c	50		 push	 eax
  0074d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00752	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  0075a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0075e	51		 push	 ecx
  0075f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00764	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00769	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00771	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00775	51		 push	 ecx
  00776	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0077b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00780	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00788	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0078c	51		 push	 ecx
  0078d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00792	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00797	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0079f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007a3	51		 push	 ecx
  007a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1666 : 	draw_2d_line (x - 0.1, y + 0.0776, x - 0.1, y + 0.1000, hud_colour);

  007ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007b3	50		 push	 eax
  007b4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007b9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  007c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007c5	51		 push	 ecx
  007c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007d0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  007d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007dc	51		 push	 ecx
  007dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  007ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f3	51		 push	 ecx
  007f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f9	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007fe	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00806	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0080a	51		 push	 ecx
  0080b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00810	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1667 : }

  00815	5f		 pop	 edi
  00816	5e		 pop	 esi
  00817	5b		 pop	 ebx
  00818	8b e5		 mov	 esp, ebp
  0081a	5d		 pop	 ebp
  0081b	c2 08 00	 ret	 8
?draw_dashed_gun_target_marker@@YGXMM@Z ENDP		; draw_dashed_gun_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_solid_sidewinder_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_solid_sidewinder_target_marker@@YGXMM@Z PROC	; draw_solid_sidewinder_target_marker, COMDAT

; 1632 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1633 : 	draw_2d_circle (x, y, 0.2, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00018	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001d	51		 push	 ecx
  0001e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	51		 push	 ecx
  00029	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0002e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00033	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 1634 : 
; 1635 : 	draw_2d_circle (x, y, 0.1, hud_colour);

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0003d	50		 push	 eax
  0003e	51		 push	 ecx
  0003f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	51		 push	 ecx
  0004d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00052	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00057	51		 push	 ecx
  00058	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0005d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00062	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 1636 : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?draw_solid_sidewinder_target_marker@@YGXMM@Z ENDP	; draw_solid_sidewinder_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_dashed_sidewinder_target_marker@@YGXMM@Z
_TEXT	SEGMENT
tv309 = -108						; size = 8
tv301 = -108						; size = 8
tv293 = -108						; size = 8
tv285 = -108						; size = 8
tv257 = -108						; size = 8
tv249 = -108						; size = 8
tv241 = -108						; size = 8
tv233 = -108						; size = 8
tv225 = -108						; size = 8
tv217 = -108						; size = 8
tv339 = -100						; size = 8
tv337 = -100						; size = 8
tv335 = -100						; size = 8
tv333 = -100						; size = 8
tv331 = -100						; size = 8
tv329 = -100						; size = 8
tv327 = -100						; size = 8
tv325 = -100						; size = 8
tv323 = -100						; size = 8
tv321 = -100						; size = 8
_y3$ = -28						; size = 4
_x3$ = -24						; size = 4
_y2$ = -20						; size = 4
_x2$ = -16						; size = 4
_y1$ = -12						; size = 4
_x1$ = -8						; size = 4
_theta$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_dashed_sidewinder_target_marker@@YGXMM@Z PROC	; draw_dashed_sidewinder_target_marker, COMDAT

; 1575 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1576 : 	float
; 1577 : 		theta,
; 1578 : 		x1,
; 1579 : 		y1,
; 1580 : 		x2,
; 1581 : 		y2,
; 1582 : 		x3,
; 1583 : 		y3;
; 1584 : 
; 1585 : 	theta = rad (0.0);

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN2@draw_dashe:

; 1586 : 
; 1587 : 	while (theta < rad (360.0))

  00011	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00016	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401921fb51000000
  0001e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00022	0f 86 1d 02 00
	00		 jbe	 $LN3@draw_dashe

; 1588 : 	{
; 1589 : 		x1 = x + (0.2 * sin (theta));

  00028	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002d	51		 push	 ecx
  0002e	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  00033	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00038	f2 0f 11 45 9c	 movsd	 QWORD PTR tv321[ebp], xmm0
  0003d	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00042	dd 5d 94	 fstp	 QWORD PTR tv217[ebp]
  00045	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv217[ebp]
  0004a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00052	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv321[ebp]
  00057	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0005b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005f	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 1590 : 		y1 = y + (0.2 * cos (theta));

  00064	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00069	51		 push	 ecx
  0006a	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0006f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00074	f2 0f 11 45 9c	 movsd	 QWORD PTR tv323[ebp], xmm0
  00079	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0007e	dd 5d 94	 fstp	 QWORD PTR tv225[ebp]
  00081	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv225[ebp]
  00086	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0008e	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv323[ebp]
  00093	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00097	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0009b	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 1591 : 
; 1592 : 		theta += rad (7.5);

  000a0	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  000a5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0c15236000000
  000ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b1	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1593 : 
; 1594 : 		x2 = x + (0.2 * sin (theta));

  000b6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000bb	51		 push	 ecx
  000bc	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  000c1	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000c6	f2 0f 11 45 9c	 movsd	 QWORD PTR tv325[ebp], xmm0
  000cb	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  000d0	dd 5d 94	 fstp	 QWORD PTR tv233[ebp]
  000d3	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv233[ebp]
  000d8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000e0	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv325[ebp]
  000e5	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000e9	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000ed	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 1595 : 		y2 = y + (0.2 * cos (theta));

  000f2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000f7	51		 push	 ecx
  000f8	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  000fd	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00102	f2 0f 11 45 9c	 movsd	 QWORD PTR tv327[ebp], xmm0
  00107	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0010c	dd 5d 94	 fstp	 QWORD PTR tv241[ebp]
  0010f	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv241[ebp]
  00114	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0011c	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv327[ebp]
  00121	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00125	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00129	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 1596 : 
; 1597 : 		theta += rad (7.5);

  0012e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00133	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0c15236000000
  0013b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013f	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1598 : 
; 1599 : 		x3 = x + (0.2 * sin (theta));

  00144	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00149	51		 push	 ecx
  0014a	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0014f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00154	f2 0f 11 45 9c	 movsd	 QWORD PTR tv329[ebp], xmm0
  00159	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0015e	dd 5d 94	 fstp	 QWORD PTR tv249[ebp]
  00161	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv249[ebp]
  00166	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0016e	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv329[ebp]
  00173	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00177	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0017b	f3 0f 11 45 e8	 movss	 DWORD PTR _x3$[ebp], xmm0

; 1600 : 		y3 = y + (0.2 * cos (theta));

  00180	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00185	51		 push	 ecx
  00186	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0018b	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00190	f2 0f 11 45 9c	 movsd	 QWORD PTR tv331[ebp], xmm0
  00195	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0019a	dd 5d 94	 fstp	 QWORD PTR tv257[ebp]
  0019d	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv257[ebp]
  001a2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001aa	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv331[ebp]
  001af	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001b3	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001b7	f3 0f 11 45 e4	 movss	 DWORD PTR _y3$[ebp], xmm0

; 1601 : 
; 1602 : 		theta += rad (15.0);

  001bc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  001c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  001c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cd	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1603 : 
; 1604 : 		draw_2d_line (x1, y1, x2, y2, hud_colour);

  001d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001d7	50		 push	 eax
  001d8	51		 push	 ecx
  001d9	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e3	51		 push	 ecx
  001e4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ee	51		 push	 ecx
  001ef	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f9	51		 push	 ecx
  001fa	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00204	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1605 : 
; 1606 : 		draw_2d_line (x2, y2, x3, y3, hud_colour);

  00209	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0020e	50		 push	 eax
  0020f	51		 push	 ecx
  00210	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y3$[ebp]
  00215	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021a	51		 push	 ecx
  0021b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x3$[ebp]
  00220	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00225	51		 push	 ecx
  00226	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0022b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00230	51		 push	 ecx
  00231	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00236	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1607 : 	}

  00240	e9 cc fd ff ff	 jmp	 $LN2@draw_dashe
$LN3@draw_dashe:

; 1608 : 
; 1609 : 	theta = rad (15.0);

  00245	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e860a92
  0024d	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN4@draw_dashe:

; 1610 : 
; 1611 : 	while (theta < rad (360.0))

  00252	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00257	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401921fb51000000
  0025f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00263	0f 86 58 01 00
	00		 jbe	 $LN5@draw_dashe

; 1612 : 	{
; 1613 : 		x1 = x + (0.1 * sin (theta));

  00269	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0026e	51		 push	 ecx
  0026f	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  00274	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00279	f2 0f 11 45 9c	 movsd	 QWORD PTR tv333[ebp], xmm0
  0027e	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00283	dd 5d 94	 fstp	 QWORD PTR tv285[ebp]
  00286	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv285[ebp]
  0028b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00293	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv333[ebp]
  00298	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0029c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002a0	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 1614 : 		y1 = y + (0.1 * cos (theta));

  002a5	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002aa	51		 push	 ecx
  002ab	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  002b0	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  002b5	f2 0f 11 45 9c	 movsd	 QWORD PTR tv335[ebp], xmm0
  002ba	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  002bf	dd 5d 94	 fstp	 QWORD PTR tv293[ebp]
  002c2	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv293[ebp]
  002c7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002cf	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv335[ebp]
  002d4	f2 0f 58 c8	 addsd	 xmm1, xmm0
  002d8	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002dc	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 1615 : 
; 1616 : 		theta += rad (15.0);

  002e1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  002e6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  002ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f2	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1617 : 
; 1618 : 		x2 = x + (0.1 * sin (theta));

  002f7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002fc	51		 push	 ecx
  002fd	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  00302	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00307	f2 0f 11 45 9c	 movsd	 QWORD PTR tv337[ebp], xmm0
  0030c	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00311	dd 5d 94	 fstp	 QWORD PTR tv301[ebp]
  00314	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv301[ebp]
  00319	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00321	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv337[ebp]
  00326	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0032a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0032e	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 1619 : 		y2 = y + (0.1 * cos (theta));

  00333	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00338	51		 push	 ecx
  00339	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0033e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00343	f2 0f 11 45 9c	 movsd	 QWORD PTR tv339[ebp], xmm0
  00348	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0034d	dd 5d 94	 fstp	 QWORD PTR tv309[ebp]
  00350	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv309[ebp]
  00355	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0035d	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv339[ebp]
  00362	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00366	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0036a	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 1620 : 
; 1621 : 		theta += rad (15.0);

  0036f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00374	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  0037c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00380	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1622 : 
; 1623 : 		draw_2d_line (x1, y1, x2, y2, hud_colour);

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0038a	50		 push	 eax
  0038b	51		 push	 ecx
  0038c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00391	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00396	51		 push	 ecx
  00397	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0039c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a1	51		 push	 ecx
  003a2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	51		 push	 ecx
  003ad	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  003b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b7	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1624 : 	}

  003bc	e9 91 fe ff ff	 jmp	 $LN4@draw_dashe
$LN5@draw_dashe:

; 1625 : }

  003c1	5f		 pop	 edi
  003c2	5e		 pop	 esi
  003c3	5b		 pop	 ebx
  003c4	8b e5		 mov	 esp, ebp
  003c6	5d		 pop	 ebp
  003c7	c2 08 00	 ret	 8
?draw_dashed_sidewinder_target_marker@@YGXMM@Z ENDP	; draw_dashed_sidewinder_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_solid_i_beam@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_solid_i_beam@@YGXMM@Z PROC			; draw_solid_i_beam, COMDAT

; 1556 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1557 : 	draw_2d_line (x - 0.1000 + 0.0125, y + 0.2, x - 0.0000 - 0.0125, y + 0.2, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  00033	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0003b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003f	51		 push	 ecx
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0004a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00052	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00056	51		 push	 ecx
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00061	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00069	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00071	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00075	51		 push	 ecx
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1558 : 
; 1559 : 	draw_2d_line (x + 0.1000 - 0.0125, y + 0.2, x + 0.0000 + 0.0125, y + 0.2, hud_colour);

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00085	50		 push	 eax
  00086	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00093	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00097	51		 push	 ecx
  00098	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000a2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  000aa	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b6	51		 push	 ecx
  000b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cd	51		 push	 ecx
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000e0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ec	51		 push	 ecx
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1560 : 
; 1561 : 	draw_2d_line (x, y + 0.2000 - 0.0125, x, y + 0.1000 + 0.0125, hud_colour);

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000fc	50		 push	 eax
  000fd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00102	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0010a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00112	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00116	51		 push	 ecx
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0012c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00134	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0013c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00140	51		 push	 ecx
  00141	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00146	51		 push	 ecx
  00147	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1562 : 
; 1563 : 	draw_2d_line (x, y - 0.2000 + 0.0125, x, y - 0.1000 - 0.0125, hud_colour);

  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0015b	50		 push	 eax
  0015c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00161	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00169	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00171	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00175	51		 push	 ecx
  00176	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017b	51		 push	 ecx
  0017c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00181	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00186	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0018b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00193	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0019b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019f	51		 push	 ecx
  001a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a5	51		 push	 ecx
  001a6	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1564 : 
; 1565 : 	draw_2d_line (x - 0.1000 + 0.0125, y - 0.2, x - 0.0000 - 0.0125, y - 0.2, hud_colour);

  001b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ba	50		 push	 eax
  001bb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cc	51		 push	 ecx
  001cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001d7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  001df	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  001e7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001eb	51		 push	 ecx
  001ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001f6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001fe	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00202	51		 push	 ecx
  00203	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00208	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0020d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00215	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0021d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00221	51		 push	 ecx
  00222	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00227	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1566 : 
; 1567 : 	draw_2d_line (x + 0.1000 - 0.0125, y - 0.2, x + 0.0000 + 0.0125, y - 0.2, hud_colour);

  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00231	50		 push	 eax
  00232	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00237	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0023f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00243	51		 push	 ecx
  00244	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00249	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0024e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00256	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0025e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00262	51		 push	 ecx
  00263	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00268	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0026d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00275	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00279	51		 push	 ecx
  0027a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00284	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0028c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00294	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00298	51		 push	 ecx
  00299	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1568 : }

  002a3	5f		 pop	 edi
  002a4	5e		 pop	 esi
  002a5	5b		 pop	 ebx
  002a6	8b e5		 mov	 esp, ebp
  002a8	5d		 pop	 ebp
  002a9	c2 08 00	 ret	 8
?draw_solid_i_beam@@YGXMM@Z ENDP			; draw_solid_i_beam
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_dashed_i_beam@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_dashed_i_beam@@YGXMM@Z PROC			; draw_dashed_i_beam, COMDAT

; 1527 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1528 : 	draw_2d_line (x - 0.1000 + 0.0125, y + 0.2, x - 0.0500 - 0.0125, y + 0.2, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00033	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0003b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003f	51		 push	 ecx
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0004a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00052	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00056	51		 push	 ecx
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00061	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00069	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00071	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00075	51		 push	 ecx
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1529 : 	draw_2d_line (x - 0.0500 + 0.0125, y + 0.2, x - 0.0000 - 0.0125, y + 0.2, hud_colour);

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00085	50		 push	 eax
  00086	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00093	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00097	51		 push	 ecx
  00098	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000a2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  000aa	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b6	51		 push	 ecx
  000b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cd	51		 push	 ecx
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000d8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  000e0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ec	51		 push	 ecx
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1530 : 
; 1531 : 	draw_2d_line (x + 0.1000 - 0.0125, y + 0.2, x + 0.0500 + 0.0125, y + 0.2, hud_colour);

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000fc	50		 push	 eax
  000fd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00102	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0010a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010e	51		 push	 ecx
  0010f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00114	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00119	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00121	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00129	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0012d	51		 push	 ecx
  0012e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00133	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00138	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00140	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00144	51		 push	 ecx
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00157	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0015f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00163	51		 push	 ecx
  00164	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00169	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1532 : 	draw_2d_line (x + 0.0500 - 0.0125, y + 0.2, x + 0.0000 + 0.0125, y + 0.2, hud_colour);

  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00173	50		 push	 eax
  00174	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00179	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00181	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00185	51		 push	 ecx
  00186	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00190	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00198	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  001a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a4	51		 push	 ecx
  001a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001aa	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001af	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bb	51		 push	 ecx
  001bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  001ce	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  001d6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001da	51		 push	 ecx
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1533 : 
; 1534 : 	draw_2d_line (x, y + 0.2000 - 0.0125, x, y + 0.1500 + 0.0125, hud_colour);

  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ea	50		 push	 eax
  001eb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001f0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001f8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00200	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00204	51		 push	 ecx
  00205	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020a	51		 push	 ecx
  0020b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0021a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00222	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0022a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022e	51		 push	 ecx
  0022f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00234	51		 push	 ecx
  00235	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0023a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1535 : 	draw_2d_line (x, y + 0.1500 - 0.0125, x, y + 0.1000 + 0.0125, hud_colour);

  00244	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00249	50		 push	 eax
  0024a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0024f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00257	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0025f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00263	51		 push	 ecx
  00264	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00269	51		 push	 ecx
  0026a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00279	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00281	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00289	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028d	51		 push	 ecx
  0028e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00293	51		 push	 ecx
  00294	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00299	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1536 : 	draw_2d_line (x, y + 0.1000 - 0.0125, x, y + 0.0500 + 0.0125, hud_colour);

  002a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002a8	50		 push	 eax
  002a9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002ae	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  002b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  002be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c2	51		 push	 ecx
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	51		 push	 ecx
  002c9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002e0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  002e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ec	51		 push	 ecx
  002ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f2	51		 push	 ecx
  002f3	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1537 : 	draw_2d_line (x, y + 0.0500 - 0.0125, x, y + 0.0000 + 0.0125, hud_colour);

  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00307	50		 push	 eax
  00308	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0030d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00315	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0031d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00321	51		 push	 ecx
  00322	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00327	51		 push	 ecx
  00328	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0032d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00332	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00337	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0033f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00347	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0034b	51		 push	 ecx
  0034c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00351	51		 push	 ecx
  00352	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00357	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1538 : 
; 1539 : 	draw_2d_line (x, y - 0.2000 + 0.0125, x, y - 0.1500 - 0.0125, hud_colour);

  00361	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00366	50		 push	 eax
  00367	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0036c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00374	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0037c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00380	51		 push	 ecx
  00381	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00386	51		 push	 ecx
  00387	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0038c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00391	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00396	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0039e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  003a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003aa	51		 push	 ecx
  003ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b0	51		 push	 ecx
  003b1	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  003b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bb	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1540 : 	draw_2d_line (x, y - 0.1500 + 0.0125, x, y - 0.1000 - 0.0125, hud_colour);

  003c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003c5	50		 push	 eax
  003c6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003cb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003d3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  003db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003df	51		 push	 ecx
  003e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e5	51		 push	 ecx
  003e6	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  003eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003f5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003fd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00405	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00409	51		 push	 ecx
  0040a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040f	51		 push	 ecx
  00410	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1541 : 	draw_2d_line (x, y - 0.1000 + 0.0125, x, y - 0.0500 - 0.0125, hud_colour);

  0041f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00424	50		 push	 eax
  00425	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0042a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00432	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0043a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043e	51		 push	 ecx
  0043f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00444	51		 push	 ecx
  00445	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0044a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00454	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0045c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00464	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00468	51		 push	 ecx
  00469	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046e	51		 push	 ecx
  0046f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00474	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00479	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1542 : 	draw_2d_line (x, y - 0.0500 + 0.0125, x, y - 0.0000 - 0.0125, hud_colour);

  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00483	50		 push	 eax
  00484	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00489	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  00491	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00499	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0049d	51		 push	 ecx
  0049e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a3	51		 push	 ecx
  004a4	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  004a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ae	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004b3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  004bb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  004c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004c7	51		 push	 ecx
  004c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004cd	51		 push	 ecx
  004ce	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1543 : 
; 1544 : 	draw_2d_line (x - 0.1000 + 0.0125, y - 0.2, x - 0.0500 - 0.0125, y - 0.2, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004e8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  004f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f4	51		 push	 ecx
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ff	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00507	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0050f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00513	51		 push	 ecx
  00514	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00519	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0051e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00526	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0052a	51		 push	 ecx
  0052b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00530	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00535	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0053d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00545	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00549	51		 push	 ecx
  0054a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1545 : 	draw_2d_line (x - 0.0500 + 0.0125, y - 0.2, x - 0.0000 - 0.0125, y - 0.2, hud_colour);

  00554	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00559	50		 push	 eax
  0055a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0055f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00567	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0056b	51		 push	 ecx
  0056c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00571	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00576	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  0057e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00586	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0058a	51		 push	 ecx
  0058b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00590	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00595	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0059d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a1	51		 push	 ecx
  005a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  005b4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  005bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c0	51		 push	 ecx
  005c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1546 : 
; 1547 : 	draw_2d_line (x + 0.1000 - 0.0125, y - 0.2, x + 0.0500 + 0.0125, y - 0.2, hud_colour);

  005cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005d0	50		 push	 eax
  005d1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  005de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005e2	51		 push	 ecx
  005e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005ed	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  005f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  005fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00601	51		 push	 ecx
  00602	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00607	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0060c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00614	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00618	51		 push	 ecx
  00619	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00623	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0062b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00633	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00637	51		 push	 ecx
  00638	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1548 : 	draw_2d_line (x + 0.0500 - 0.0125, y - 0.2, x + 0.0000 + 0.0125, y - 0.2, hud_colour);

  00642	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00647	50		 push	 eax
  00648	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0064d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00655	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00659	51		 push	 ecx
  0065a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00664	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  0066c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00674	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00678	51		 push	 ecx
  00679	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00683	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0068b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0068f	51		 push	 ecx
  00690	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00695	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  006a2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  006aa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006ae	51		 push	 ecx
  006af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b4	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1549 : }

  006b9	5f		 pop	 edi
  006ba	5e		 pop	 esi
  006bb	5b		 pop	 ebx
  006bc	8b e5		 mov	 esp, ebp
  006be	5d		 pop	 ebp
  006bf	c2 08 00	 ret	 8
?draw_dashed_i_beam@@YGXMM@Z ENDP			; draw_dashed_i_beam
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_target_marker@@YGXMM@Z PROC			; draw_target_marker, COMDAT

; 1500 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1501 : 	set_2d_pixel (x - 0.100, y, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00015	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0001f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00027	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002b	51		 push	 ecx
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1502 : 	set_2d_pixel (x - 0.075, y, hud_colour);

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0003b	50		 push	 eax
  0003c	51		 push	 ecx
  0003d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00042	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00047	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0004c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb3333333333333
  00054	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00058	51		 push	 ecx
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1503 : 	set_2d_pixel (x - 0.050, y, hud_colour);

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00068	50		 push	 eax
  00069	51		 push	 ecx
  0006a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0006f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00074	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00079	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00081	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00085	51		 push	 ecx
  00086	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008b	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1504 : 	set_2d_pixel (x - 0.025, y, hud_colour);

  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00095	50		 push	 eax
  00096	51		 push	 ecx
  00097	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0009c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000a6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  000ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b2	51		 push	 ecx
  000b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b8	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1505 : 
; 1506 : 	set_2d_pixel (x + 0.025, y, hud_colour);

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000c2	50		 push	 eax
  000c3	51		 push	 ecx
  000c4	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  000c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ce	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000d3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  000db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000df	51		 push	 ecx
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1507 : 	set_2d_pixel (x + 0.050, y, hud_colour);

  000ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ef	50		 push	 eax
  000f0	51		 push	 ecx
  000f1	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  000f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00100	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00108	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010c	51		 push	 ecx
  0010d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00112	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1508 : 	set_2d_pixel (x + 0.075, y, hud_colour);

  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0011c	50		 push	 eax
  0011d	51		 push	 ecx
  0011e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00123	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00128	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0012d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3333333333333
  00135	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00139	51		 push	 ecx
  0013a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013f	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1509 : 	set_2d_pixel (x + 0.100, y, hud_colour);

  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00149	50		 push	 eax
  0014a	51		 push	 ecx
  0014b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00150	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00155	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0015a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00162	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00166	51		 push	 ecx
  00167	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016c	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1510 : 
; 1511 : 	set_2d_pixel (x, y - 0.100, hud_colour);

  00171	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00176	50		 push	 eax
  00177	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0017c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	51		 push	 ecx
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	51		 push	 ecx
  0018f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00194	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00199	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1512 : 	set_2d_pixel (x, y - 0.075, hud_colour);

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001a3	50		 push	 eax
  001a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001a9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb3333333333333
  001b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001b5	51		 push	 ecx
  001b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bb	51		 push	 ecx
  001bc	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  001c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c6	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1513 : 	set_2d_pixel (x, y - 0.050, hud_colour);

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001d0	50		 push	 eax
  001d1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  001de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e2	51		 push	 ecx
  001e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e8	51		 push	 ecx
  001e9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  001ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f3	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1514 : 	set_2d_pixel (x, y - 0.025, hud_colour);

  001f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001fd	50		 push	 eax
  001fe	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00203	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  0020b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020f	51		 push	 ecx
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	51		 push	 ecx
  00216	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0021b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00220	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1515 : 
; 1516 : 	set_2d_pixel (x, y + 0.025, hud_colour);

  00225	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0022a	50		 push	 eax
  0022b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00230	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  00238	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023c	51		 push	 ecx
  0023d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00242	51		 push	 ecx
  00243	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00248	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024d	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1517 : 	set_2d_pixel (x, y + 0.050, hud_colour);

  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00257	50		 push	 eax
  00258	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0025d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00265	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00269	51		 push	 ecx
  0026a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026f	51		 push	 ecx
  00270	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00275	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027a	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1518 : 	set_2d_pixel (x, y + 0.075, hud_colour);

  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00284	50		 push	 eax
  00285	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0028a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3333333333333
  00292	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00296	51		 push	 ecx
  00297	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029c	51		 push	 ecx
  0029d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1519 : 	set_2d_pixel (x, y + 0.100, hud_colour);

  002ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002b1	50		 push	 eax
  002b2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002b7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c3	51		 push	 ecx
  002c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c9	51		 push	 ecx
  002ca	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d4	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1520 : }

  002d9	5f		 pop	 edi
  002da	5e		 pop	 esi
  002db	5b		 pop	 ebx
  002dc	8b e5		 mov	 esp, ebp
  002de	5d		 pop	 ebp
  002df	c2 08 00	 ret	 8
?draw_target_marker@@YGXMM@Z ENDP			; draw_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?display_weapon_information@@YGXXZ
_TEXT	SEGMENT
tv168 = -192						; size = 8
tv169 = -184						; size = 8
tv151 = -184						; size = 4
tv78 = -184						; size = 4
tv144 = -180						; size = 4
tv70 = -180						; size = 4
_weapon_sub_type$ = -112				; size = 4
_flight_time$ = -108					; size = 4
_count$ = -104						; size = 4
_s$ = -100						; size = 100
?display_weapon_information@@YGXXZ PROC			; display_weapon_information, COMDAT

; 1404 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1405 : 	char
; 1406 : 		s[100];
; 1407 : 
; 1408 : 	int
; 1409 : 		count;
; 1410 : 
; 1411 : 	float
; 1412 : 		flight_time;
; 1413 : 
; 1414 : 	entity_sub_types
; 1415 : 		weapon_sub_type;
; 1416 : 
; 1417 : 	weapon_sub_type = get_local_entity_int_value (get_gunship_entity (), INT_TYPE_SELECTED_WEAPON);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	74 0f		 je	 SHORT $LN16@display_we
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00022	eb 24		 jmp	 SHORT $LN17@display_we
$LN16@display_we:
  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA
  0002a	83 c2 0d	 add	 edx, 13			; 0000000dH
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN17@display_we:
  00048	b9 01 00 00 00	 mov	 ecx, 1
  0004d	85 c9		 test	 ecx, ecx
  0004f	74 0c		 je	 SHORT $LN18@display_we
  00051	c7 85 48 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv78[ebp], 184 ; 000000b8H
  0005b	eb 24		 jmp	 SHORT $LN19@display_we
$LN18@display_we:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA
  00063	83 c2 0d	 add	 edx, 13			; 0000000dH
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN19@display_we:
  00081	68 b8 00 00 00	 push	 184			; 000000b8H
  00086	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008c	51		 push	 ecx
  0008d	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv70[ebp], 1116
  00097	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0009d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a4	ff d1		 call	 ecx
  000a6	89 45 90	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1418 : 
; 1419 : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  000a9	83 7d 90 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ad	0f 84 e2 03 00
	00		 je	 $LN14@display_we

; 1420 : 	{
; 1421 : 		set_mono_font_type (MONO_FONT_TYPE_6X7);

  000b3	6a 03		 push	 3
  000b5	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1422 : 
; 1423 : 		//
; 1424 : 		// selected weapon
; 1425 : 		//
; 1426 : 
; 1427 : 		count = get_local_entity_weapon_count (get_gunship_entity (), weapon_sub_type);

  000ba	8b 45 90	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000bd	50		 push	 eax
  000be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c4	51		 push	 ecx
  000c5	e8 00 00 00 00	 call	 ?get_local_entity_weapon_count@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_count
  000ca	89 45 98	 mov	 DWORD PTR _count$[ebp], eax

; 1428 : 
; 1429 : 		sprintf (s, "%s %d", weapon_database[weapon_sub_type].hud_name, count);

  000cd	8b 45 98	 mov	 eax, DWORD PTR _count$[ebp]
  000d0	50		 push	 eax
  000d1	69 4d 90 e0 00
	00 00		 imul	 ecx, DWORD PTR _weapon_sub_type$[ebp], 224
  000d8	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+4]
  000de	52		 push	 edx
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_05DIALNFFA@?$CFs?5?$CFd@
  000e4	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 _sprintf
  000ed	83 c4 10	 add	 esp, 16			; 00000010H

; 1430 : 		set_2d_mono_font_position (0.5, -0.6);

  000f0	51		 push	 ecx
  000f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  000f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fe	51		 push	 ecx
  000ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00107	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010c	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1431 : 		set_mono_font_rel_position (1.0, 0.0);

  00111	51		 push	 ecx
  00112	0f 57 c0	 xorps	 xmm0, xmm0
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	51		 push	 ecx
  0011b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00123	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00128	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1432 : 
; 1433 : 		print_mono_font_string (s);

  0012d	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1434 : 
; 1435 : 		//
; 1436 : 		// weapon specific
; 1437 : 		//
; 1438 : 
; 1439 : 		if ((weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE) || (weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II))

  00136	83 7d 90 2d	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 45 ; 0000002dH
  0013a	74 0a		 je	 SHORT $LN5@display_we
  0013c	83 7d 90 2e	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 46 ; 0000002eH
  00140	0f 85 d0 01 00
	00		 jne	 $LN3@display_we
$LN5@display_we:

; 1440 : 		{
; 1441 : 			set_2d_mono_font_position (0.5, -0.7);

  00146	51		 push	 ecx
  00147	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  0014f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00154	51		 push	 ecx
  00155	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0015d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00162	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1442 : 
; 1443 : 			set_mono_font_rel_position (1.0, 0.0);

  00167	51		 push	 ecx
  00168	0f 57 c0	 xorps	 xmm0, xmm0
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	51		 push	 ecx
  00171	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00179	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017e	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1444 : 
; 1445 : 			if (!get_local_entity_int_value (get_gunship_entity (), INT_TYPE_LOCK_ON_AFTER_LAUNCH))

  00183	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0018a	74 0f		 je	 SHORT $LN20@display_we
  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00191	8b 08		 mov	 ecx, DWORD PTR [eax]
  00193	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  00199	eb 20		 jmp	 SHORT $LN21@display_we
$LN20@display_we:
  0019b	68 a5 05 00 00	 push	 1445			; 000005a5H
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ab	52		 push	 edx
  001ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b1	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN21@display_we:
  001bb	b8 01 00 00 00	 mov	 eax, 1
  001c0	85 c0		 test	 eax, eax
  001c2	74 0c		 je	 SHORT $LN22@display_we
  001c4	c7 85 48 ff ff
	ff 7e 00 00 00	 mov	 DWORD PTR tv151[ebp], 126 ; 0000007eH
  001ce	eb 20		 jmp	 SHORT $LN23@display_we
$LN22@display_we:
  001d0	68 a5 05 00 00	 push	 1445			; 000005a5H
  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e6	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv151[ebp], 0
$LN23@display_we:
  001f0	6a 7e		 push	 126			; 0000007eH
  001f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001f8	52		 push	 edx
  001f9	69 85 4c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv144[ebp], 1116
  00203	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv151[ebp]
  00209	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00210	ff d2		 call	 edx
  00212	85 c0		 test	 eax, eax
  00214	75 0c		 jne	 SHORT $LN6@display_we

; 1446 : 			{
; 1447 : 				print_mono_font_string ("LOBL");

  00216	68 00 00 00 00	 push	 OFFSET ??_C@_04EIHLKMGG@LOBL@
  0021b	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1448 : 			}
; 1449 : 			else

  00220	eb 0a		 jmp	 SHORT $LN7@display_we
$LN6@display_we:

; 1450 : 			{
; 1451 : 				print_mono_font_string ("LOAL-HI");

  00222	68 00 00 00 00	 push	 OFFSET ??_C@_07CMBMBPC@LOAL?9HI@
  00227	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN7@display_we:

; 1452 : 			}
; 1453 : 
; 1454 : 			flight_time = get_missile_flight_time ();

  0022c	e8 00 00 00 00	 call	 ?get_missile_flight_time@@YGMXZ ; get_missile_flight_time
  00231	d9 5d 94	 fstp	 DWORD PTR _flight_time$[ebp]

; 1455 : 
; 1456 : 			if (flight_time > 0.01)

  00234	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  00239	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00241	0f 86 ca 00 00
	00		 jbe	 $LN8@display_we

; 1457 : 			{
; 1458 : 				flight_time = bound (flight_time, 0.0, 99.9);

  00247	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  0024c	0f 57 c9	 xorps	 xmm1, xmm1
  0024f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00253	76 0d		 jbe	 SHORT $LN26@display_we
  00255	0f 57 c0	 xorps	 xmm0, xmm0
  00258	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv169[ebp], xmm0
  00260	eb 3e		 jmp	 SHORT $LN27@display_we
$LN26@display_we:
  00262	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  00267	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4058f9999999999a
  0026f	76 12		 jbe	 SHORT $LN24@display_we
  00271	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4058f9999999999a
  00279	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR tv168[ebp], xmm0
  00281	eb 0d		 jmp	 SHORT $LN25@display_we
$LN24@display_we:
  00283	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  00288	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR tv168[ebp], xmm0
$LN25@display_we:
  00290	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv168[ebp]
  00298	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv169[ebp], xmm0
$LN27@display_we:
  002a0	f2 0f 5a 85 48
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv169[ebp]
  002a8	f3 0f 11 45 94	 movss	 DWORD PTR _flight_time$[ebp], xmm0

; 1459 : 
; 1460 : 				sprintf (s, "TOF:%.0f", flight_time);

  002ad	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  002b2	83 ec 08	 sub	 esp, 8
  002b5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_08BKMPBOCK@TOF?3?$CF?40f@
  002bf	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 _sprintf
  002c8	83 c4 10	 add	 esp, 16			; 00000010H

; 1461 : 
; 1462 : 				set_2d_mono_font_position (0.5, -0.5);

  002cb	51		 push	 ecx
  002cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  002d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d9	51		 push	 ecx
  002da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e7	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1463 : 				set_mono_font_rel_position (0.8, 0.0);

  002ec	51		 push	 ecx
  002ed	0f 57 c0	 xorps	 xmm0, xmm0
  002f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f5	51		 push	 ecx
  002f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  002fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00303	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1464 : 
; 1465 : 				print_mono_font_string (s);

  00308	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  0030b	50		 push	 eax
  0030c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN8@display_we:

; 1466 : 			}
; 1467 : 		}

  00311	e9 7f 01 00 00	 jmp	 $LN14@display_we
$LN3@display_we:

; 1468 : 		else if ((weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255) || (weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261))

  00316	83 7d 90 1e	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 30 ; 0000001eH
  0031a	74 0a		 je	 SHORT $LN11@display_we
  0031c	83 7d 90 1f	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 31 ; 0000001fH
  00320	0f 85 81 00 00
	00		 jne	 $LN9@display_we
$LN11@display_we:

; 1469 : 		{
; 1470 : 			if (rocket_salvo_size == ROCKET_SALVO_SIZE_ALL)

  00326	81 3d 00 00 00
	00 e8 03 00 00	 cmp	 DWORD PTR ?rocket_salvo_size@@3HA, 1000 ; rocket_salvo_size, 000003e8H
  00330	75 13		 jne	 SHORT $LN12@display_we

; 1471 : 			{
; 1472 : 				sprintf (s, "Salvo:ALL");

  00332	68 00 00 00 00	 push	 OFFSET ??_C@_09BJGFDJJN@Salvo?3ALL@
  00337	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 _sprintf
  00340	83 c4 08	 add	 esp, 8

; 1473 : 			}
; 1474 : 			else

  00343	eb 17		 jmp	 SHORT $LN13@display_we
$LN12@display_we:

; 1475 : 			{
; 1476 : 				sprintf (s, "Salvo:%d", rocket_salvo_size);

  00345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rocket_salvo_size@@3HA ; rocket_salvo_size
  0034a	50		 push	 eax
  0034b	68 00 00 00 00	 push	 OFFSET ??_C@_08GEOGCMHL@Salvo?3?$CFd@
  00350	8d 4d 9c	 lea	 ecx, DWORD PTR _s$[ebp]
  00353	51		 push	 ecx
  00354	e8 00 00 00 00	 call	 _sprintf
  00359	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@display_we:

; 1477 : 			}
; 1478 : 
; 1479 : 			set_2d_mono_font_position (0.5, -0.7);

  0035c	51		 push	 ecx
  0035d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00365	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036a	51		 push	 ecx
  0036b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00373	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00378	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1480 : 
; 1481 : 			set_mono_font_rel_position (1.0, 0.0);

  0037d	51		 push	 ecx
  0037e	0f 57 c0	 xorps	 xmm0, xmm0
  00381	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00386	51		 push	 ecx
  00387	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0038f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00394	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1482 : 
; 1483 : 			print_mono_font_string (s);

  00399	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  0039c	50		 push	 eax
  0039d	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
  003a2	e9 ee 00 00 00	 jmp	 $LN14@display_we
$LN9@display_we:

; 1484 : 		}
; 1485 : 		else if (weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND)

  003a7	83 7d 90 03	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 3
  003ab	0f 85 e4 00 00
	00		 jne	 $LN14@display_we

; 1486 : 		{
; 1487 : 			draw_2d_line (-0.10, +0.00, -0.05, +0.00, hud_colour);

  003b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003b6	50		 push	 eax
  003b7	51		 push	 ecx
  003b8	0f 57 c0	 xorps	 xmm0, xmm0
  003bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c0	51		 push	 ecx
  003c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  003c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ce	51		 push	 ecx
  003cf	0f 57 c0	 xorps	 xmm0, xmm0
  003d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d7	51		 push	 ecx
  003d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bdcccccd
  003e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1488 : 			draw_2d_line (+0.10, +0.00, +0.05, +0.00, hud_colour);

  003ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003ef	50		 push	 eax
  003f0	51		 push	 ecx
  003f1	0f 57 c0	 xorps	 xmm0, xmm0
  003f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f9	51		 push	 ecx
  003fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00402	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00407	51		 push	 ecx
  00408	0f 57 c0	 xorps	 xmm0, xmm0
  0040b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00410	51		 push	 ecx
  00411	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00419	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1489 : 			draw_2d_line (+0.00, -0.10, +0.00, -0.05, hud_colour);

  00423	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00428	50		 push	 eax
  00429	51		 push	 ecx
  0042a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00432	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00437	51		 push	 ecx
  00438	0f 57 c0	 xorps	 xmm0, xmm0
  0043b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00440	51		 push	 ecx
  00441	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bdcccccd
  00449	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044e	51		 push	 ecx
  0044f	0f 57 c0	 xorps	 xmm0, xmm0
  00452	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00457	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1490 : 			draw_2d_line (+0.00, +0.10, +0.00, +0.05, hud_colour);

  0045c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00461	50		 push	 eax
  00462	51		 push	 ecx
  00463	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0046b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00470	51		 push	 ecx
  00471	0f 57 c0	 xorps	 xmm0, xmm0
  00474	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00479	51		 push	 ecx
  0047a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00482	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00487	51		 push	 ecx
  00488	0f 57 c0	 xorps	 xmm0, xmm0
  0048b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00490	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN14@display_we:

; 1491 : 		}
; 1492 : 	}
; 1493 : }

  00495	5f		 pop	 edi
  00496	5e		 pop	 esi
  00497	5b		 pop	 ebx
  00498	8b e5		 mov	 esp, ebp
  0049a	5d		 pop	 ebp
  0049b	c3		 ret	 0
?display_weapon_information@@YGXXZ ENDP			; display_weapon_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?display_waypoint_information@@YGXXZ
_TEXT	SEGMENT
tv213 = -204						; size = 4
tv184 = -204						; size = 4
tv148 = -204						; size = 4
tv82 = -204						; size = 4
tv358 = -200						; size = 4
tv333 = -200						; size = 4
tv205 = -200						; size = 4
tv176 = -200						; size = 4
tv140 = -200						; size = 4
tv74 = -200						; size = 4
_seconds$1 = -132					; size = 4
_minutes$2 = -128					; size = 4
_hours$3 = -124						; size = 4
_time_to_go$4 = -120					; size = 4
_f$5 = -116						; size = 4
_i$6 = -112						; size = 4
_x_adjust$7 = -108					; size = 4
_waypoint_range$ = -104					; size = 4
_waypoint_position$ = -100				; size = 12
_gunship_position$ = -88				; size = 4
_wp$ = -84						; size = 4
_buffer$ = -80						; size = 80
?display_waypoint_information@@YGXXZ PROC		; display_waypoint_information, COMDAT

; 1296 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1297 : 	char
; 1298 : 		buffer[80];
; 1299 : 
; 1300 : 	entity
; 1301 : 		*wp;
; 1302 : 
; 1303 : 	vec3d
; 1304 : 		*gunship_position,
; 1305 : 		waypoint_position;
; 1306 : 
; 1307 : 	float
; 1308 : 		waypoint_range;
; 1309 : 
; 1310 : 	wp = get_local_entity_current_waypoint (get_gunship_entity ());

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_waypoint
  00017	89 45 ac	 mov	 DWORD PTR _wp$[ebp], eax

; 1311 : 
; 1312 : 	if (wp)

  0001a	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0001e	0f 84 bd 04 00
	00		 je	 $LN2@display_wa

; 1313 : 	{
; 1314 : 		float x_adjust;
; 1315 : 
; 1316 : 		set_mono_font_type (MONO_FONT_TYPE_6X10);

  00024	6a 04		 push	 4
  00026	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1317 : 
; 1318 : 		gunship_position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  0002b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00032	74 0f		 je	 SHORT $LN12@display_wa
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  00041	eb 24		 jmp	 SHORT $LN13@display_wa
$LN12@display_wa:
  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00049	83 c2 16	 add	 edx, 22			; 00000016H
  0004c	52		 push	 edx
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005d	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN13@display_wa:
  00067	b9 01 00 00 00	 mov	 ecx, 1
  0006c	85 c9		 test	 ecx, ecx
  0006e	74 0c		 je	 SHORT $LN14@display_wa
  00070	c7 85 34 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv82[ebp], 8
  0007a	eb 24		 jmp	 SHORT $LN15@display_wa
$LN14@display_wa:
  0007c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00082	83 c2 16	 add	 edx, 22			; 00000016H
  00085	52		 push	 edx
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00096	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN15@display_wa:
  000a0	6a 08		 push	 8
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000a8	51		 push	 ecx
  000a9	6b 95 38 ff ff
	ff 60		 imul	 edx, DWORD PTR tv74[ebp], 96
  000b0	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv82[ebp]
  000b6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000bd	ff d1		 call	 ecx
  000bf	89 45 a8	 mov	 DWORD PTR _gunship_position$[ebp], eax

; 1319 : 
; 1320 : 		get_waypoint_display_position (get_gunship_entity (), wp, &waypoint_position);

  000c2	8d 45 9c	 lea	 eax, DWORD PTR _waypoint_position$[ebp]
  000c5	50		 push	 eax
  000c6	8b 4d ac	 mov	 ecx, DWORD PTR _wp$[ebp]
  000c9	51		 push	 ecx
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 1321 : 
; 1322 : 		//
; 1323 : 		// waypoint id & range
; 1324 : 		//
; 1325 : 
; 1326 : 		waypoint_range = get_2d_range (gunship_position, &waypoint_position);

  000d6	8d 45 9c	 lea	 eax, DWORD PTR _waypoint_position$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d a8	 mov	 ecx, DWORD PTR _gunship_position$[ebp]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  000e3	d9 5d 98	 fstp	 DWORD PTR _waypoint_range$[ebp]

; 1327 : 
; 1328 : 		if (!viper_damage.navigation_computer)

  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?viper_damage@@3TVIPER_DAMAGE_FLAGS@@A ; viper_damage
  000eb	c1 e8 05	 shr	 eax, 5
  000ee	83 e0 01	 and	 eax, 1
  000f1	0f 85 7a 02 00
	00		 jne	 $LN3@display_wa

; 1329 : 		{
; 1330 : 			if (waypoint_range < 1000.0)

  000f7	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _waypoint_range$[ebp]
  000fc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@408f400000000000
  00104	66 0f 2f c8	 comisd	 xmm1, xmm0
  00108	0f 86 ae 00 00
	00		 jbe	 $LN5@display_wa

; 1331 : 			{
; 1332 : 				sprintf (buffer, "%c:%dm", get_local_entity_char_value (wp, CHAR_TYPE_TAG), (int) waypoint_range);

  0010e	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00112	74 0d		 je	 SHORT $LN16@display_wa
  00114	8b 45 ac	 mov	 eax, DWORD PTR _wp$[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv140[ebp], ecx
  0011f	eb 24		 jmp	 SHORT $LN17@display_wa
$LN16@display_wa:
  00121	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00127	83 c2 24	 add	 edx, 36			; 00000024H
  0012a	52		 push	 edx
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013b	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN17@display_wa:
  00145	b9 01 00 00 00	 mov	 ecx, 1
  0014a	85 c9		 test	 ecx, ecx
  0014c	74 0c		 je	 SHORT $LN18@display_wa
  0014e	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
  00158	eb 24		 jmp	 SHORT $LN19@display_wa
$LN18@display_wa:
  0015a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00160	83 c2 24	 add	 edx, 36			; 00000024H
  00163	52		 push	 edx
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00174	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN19@display_wa:
  0017e	f3 0f 2c 4d 98	 cvttss2si ecx, DWORD PTR _waypoint_range$[ebp]
  00183	51		 push	 ecx
  00184	6a 00		 push	 0
  00186	8b 55 ac	 mov	 edx, DWORD PTR _wp$[ebp]
  00189	52		 push	 edx
  0018a	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv148[ebp]
  00190	c1 e0 02	 shl	 eax, 2
  00193	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv140[ebp]
  00199	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[eax+ecx*8]
  001a0	ff d2		 call	 edx
  001a2	0f b6 c0	 movzx	 eax, al
  001a5	50		 push	 eax
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_06JCIGMCHD@?$CFc?3?$CFdm@
  001ab	8d 4d b0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  001ae	51		 push	 ecx
  001af	e8 00 00 00 00	 call	 _sprintf
  001b4	83 c4 10	 add	 esp, 16			; 00000010H
  001b7	e9 b3 01 00 00	 jmp	 $LN8@display_wa
$LN5@display_wa:

; 1333 : 			}
; 1334 : 			else if (waypoint_range < 100000.0)

  001bc	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _waypoint_range$[ebp]
  001c1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40f86a0000000000
  001c9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001cd	0f 86 e7 00 00
	00		 jbe	 $LN7@display_wa

; 1335 : 			{
; 1336 : 				int
; 1337 : 					i;
; 1338 : 
; 1339 : 				float
; 1340 : 					f;
; 1341 : 
; 1342 : 				//
; 1343 : 				// this is required to prevent rounding errors around the 100Km mark
; 1344 : 				//
; 1345 : 
; 1346 : 				i = (int) waypoint_range * (1.0 / 100.0);

  001d3	f3 0f 2c 45 98	 cvttss2si eax, DWORD PTR _waypoint_range$[ebp]
  001d8	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  001dc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  001e4	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  001e8	89 4d 90	 mov	 DWORD PTR _i$6[ebp], ecx

; 1347 : 
; 1348 : 				f = (float) i * (1.0 / 10.0);

  001eb	f3 0f 2a 45 90	 cvtsi2ss xmm0, DWORD PTR _i$6[ebp]
  001f0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001f4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001fc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00200	f3 0f 11 45 8c	 movss	 DWORD PTR _f$5[ebp], xmm0

; 1349 : 
; 1350 : 				sprintf (buffer, "%c:%.1fKm", get_local_entity_char_value (wp, CHAR_TYPE_TAG), f);

  00205	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00209	74 0d		 je	 SHORT $LN20@display_wa
  0020b	8b 45 ac	 mov	 eax, DWORD PTR _wp$[ebp]
  0020e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00210	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv176[ebp], ecx
  00216	eb 24		 jmp	 SHORT $LN21@display_wa
$LN20@display_wa:
  00218	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  0021e	83 c2 36	 add	 edx, 54			; 00000036H
  00221	52		 push	 edx
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0022c	50		 push	 eax
  0022d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00232	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
$LN21@display_wa:
  0023c	b9 01 00 00 00	 mov	 ecx, 1
  00241	85 c9		 test	 ecx, ecx
  00243	74 0c		 je	 SHORT $LN22@display_wa
  00245	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv184[ebp], 0
  0024f	eb 24		 jmp	 SHORT $LN23@display_wa
$LN22@display_wa:
  00251	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00257	83 c2 36	 add	 edx, 54			; 00000036H
  0025a	52		 push	 edx
  0025b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0026b	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv184[ebp], 0
$LN23@display_wa:
  00275	f3 0f 5a 45 8c	 cvtss2sd xmm0, DWORD PTR _f$5[ebp]
  0027a	83 ec 08	 sub	 esp, 8
  0027d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00282	6a 00		 push	 0
  00284	8b 4d ac	 mov	 ecx, DWORD PTR _wp$[ebp]
  00287	51		 push	 ecx
  00288	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR tv184[ebp]
  0028e	c1 e2 02	 shl	 edx, 2
  00291	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  00297	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[edx+eax*8]
  0029e	ff d1		 call	 ecx
  002a0	0f b6 d0	 movzx	 edx, al
  002a3	52		 push	 edx
  002a4	68 00 00 00 00	 push	 OFFSET ??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@
  002a9	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 _sprintf
  002b2	83 c4 14	 add	 esp, 20			; 00000014H

; 1351 : 			}
; 1352 : 			else

  002b5	e9 b5 00 00 00	 jmp	 $LN8@display_wa
$LN7@display_wa:

; 1353 : 			{
; 1354 : 				sprintf (buffer, "%c:%dKm", get_local_entity_char_value (wp, CHAR_TYPE_TAG), (int) (waypoint_range * (1.0 / 1000.0)));

  002ba	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  002be	74 0d		 je	 SHORT $LN24@display_wa
  002c0	8b 45 ac	 mov	 eax, DWORD PTR _wp$[ebp]
  002c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c5	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv205[ebp], ecx
  002cb	eb 24		 jmp	 SHORT $LN25@display_wa
$LN24@display_wa:
  002cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  002d3	83 c2 3a	 add	 edx, 58			; 0000003aH
  002d6	52		 push	 edx
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e7	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv205[ebp], 0
$LN25@display_wa:
  002f1	b9 01 00 00 00	 mov	 ecx, 1
  002f6	85 c9		 test	 ecx, ecx
  002f8	74 0c		 je	 SHORT $LN26@display_wa
  002fa	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
  00304	eb 24		 jmp	 SHORT $LN27@display_wa
$LN26@display_wa:
  00306	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  0030c	83 c2 3a	 add	 edx, 58			; 0000003aH
  0030f	52		 push	 edx
  00310	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  0031a	50		 push	 eax
  0031b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00320	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
$LN27@display_wa:
  0032a	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _waypoint_range$[ebp]
  0032f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00337	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  0033b	51		 push	 ecx
  0033c	6a 00		 push	 0
  0033e	8b 55 ac	 mov	 edx, DWORD PTR _wp$[ebp]
  00341	52		 push	 edx
  00342	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv213[ebp]
  00348	c1 e0 02	 shl	 eax, 2
  0034b	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv205[ebp]
  00351	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[eax+ecx*8]
  00358	ff d2		 call	 edx
  0035a	0f b6 c0	 movzx	 eax, al
  0035d	50		 push	 eax
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_07CFANIJPM@?$CFc?3?$CFdKm@
  00363	8d 4d b0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  00366	51		 push	 ecx
  00367	e8 00 00 00 00	 call	 _sprintf
  0036c	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@display_wa:

; 1355 : 			}
; 1356 : 		}
; 1357 : 		else

  0036f	eb 11		 jmp	 SHORT $LN4@display_wa
$LN3@display_wa:

; 1358 : 		{
; 1359 : 			sprintf (buffer, "-:--.-");

  00371	68 00 00 00 00	 push	 OFFSET ??_C@_06BAOIPBEF@?9?3?9?9?4?9@
  00376	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00379	50		 push	 eax
  0037a	e8 00 00 00 00	 call	 _sprintf
  0037f	83 c4 08	 add	 esp, 8
$LN4@display_wa:

; 1360 : 		}
; 1361 : 
; 1362 : 		x_adjust = -get_mono_font_string_width(buffer);

  00382	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00385	50		 push	 eax
  00386	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0038b	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR tv333[ebp]
  00391	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv333[ebp]
  00399	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003a0	f3 0f 11 45 94	 movss	 DWORD PTR _x_adjust$7[ebp], xmm0

; 1363 : 		set_2d_mono_font_position (0.8, -0.7);

  003a5	51		 push	 ecx
  003a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  003ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b3	51		 push	 ecx
  003b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  003bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c1	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1364 : 		set_hud_mono_font_rel_position (x_adjust, 0.0);

  003c6	51		 push	 ecx
  003c7	0f 57 c0	 xorps	 xmm0, xmm0
  003ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cf	51		 push	 ecx
  003d0	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _x_adjust$7[ebp]
  003d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003da	e8 00 00 00 00	 call	 ?set_hud_mono_font_rel_position@@YGXMM@Z ; set_hud_mono_font_rel_position

; 1365 : 
; 1366 : 		print_hud_mono_font_string (buffer);

  003df	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  003e2	50		 push	 eax
  003e3	e8 00 00 00 00	 call	 ?print_hud_mono_font_string@@YGXPBD@Z ; print_hud_mono_font_string

; 1367 : 
; 1368 : 		//
; 1369 : 		// time to go
; 1370 : 		//
; 1371 : 
; 1372 : 		if ((current_flight_dynamics->velocity_z.value > 0.1) && (!viper_damage.navigation_computer))

  003e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003ed	f3 0f 5a 80 9c
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8348]
  003f5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  003fd	76 6b		 jbe	 SHORT $LN9@display_wa
  003ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?viper_damage@@3TVIPER_DAMAGE_FLAGS@@A ; viper_damage
  00404	c1 e8 05	 shr	 eax, 5
  00407	83 e0 01	 and	 eax, 1
  0040a	75 5e		 jne	 SHORT $LN9@display_wa

; 1373 : 		{
; 1374 : 			float
; 1375 : 				time_to_go,
; 1376 : 				hours,
; 1377 : 				minutes,
; 1378 : 				seconds;
; 1379 : 
; 1380 : 			time_to_go = waypoint_range / current_flight_dynamics->velocity_z.value;

  0040c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00411	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _waypoint_range$[ebp]
  00416	f3 0f 5e 80 9c
	20 00 00	 divss	 xmm0, DWORD PTR [eax+8348]
  0041e	f3 0f 11 45 88	 movss	 DWORD PTR _time_to_go$4[ebp], xmm0

; 1381 : 
; 1382 : 			get_digital_clock_values (time_to_go, &hours, &minutes, &seconds);

  00423	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _seconds$1[ebp]
  00429	50		 push	 eax
  0042a	8d 4d 80	 lea	 ecx, DWORD PTR _minutes$2[ebp]
  0042d	51		 push	 ecx
  0042e	8d 55 84	 lea	 edx, DWORD PTR _hours$3[ebp]
  00431	52		 push	 edx
  00432	51		 push	 ecx
  00433	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _time_to_go$4[ebp]
  00438	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043d	e8 00 00 00 00	 call	 ?get_digital_clock_values@@YGXMPAM00@Z ; get_digital_clock_values

; 1383 : 
; 1384 : 			sprintf (buffer, "%02d:%02d:%02d", (int) hours, (int) minutes, (int) seconds);

  00442	f3 0f 2c 85 7c
	ff ff ff	 cvttss2si eax, DWORD PTR _seconds$1[ebp]
  0044a	50		 push	 eax
  0044b	f3 0f 2c 4d 80	 cvttss2si ecx, DWORD PTR _minutes$2[ebp]
  00450	51		 push	 ecx
  00451	f3 0f 2c 55 84	 cvttss2si edx, DWORD PTR _hours$3[ebp]
  00456	52		 push	 edx
  00457	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@
  0045c	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 _sprintf
  00465	83 c4 14	 add	 esp, 20			; 00000014H

; 1385 : 		}
; 1386 : 		else

  00468	eb 11		 jmp	 SHORT $LN10@display_wa
$LN9@display_wa:

; 1387 : 		{
; 1388 : 			strcpy (buffer, "--:--:--");

  0046a	68 00 00 00 00	 push	 OFFSET ??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@
  0046f	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00472	50		 push	 eax
  00473	e8 00 00 00 00	 call	 _strcpy
  00478	83 c4 08	 add	 esp, 8
$LN10@display_wa:

; 1389 : 		}
; 1390 : 
; 1391 : 		x_adjust = -get_mono_font_string_width(buffer);

  0047b	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  0047e	50		 push	 eax
  0047f	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00484	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR tv358[ebp]
  0048a	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv358[ebp]
  00492	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00499	f3 0f 11 45 94	 movss	 DWORD PTR _x_adjust$7[ebp], xmm0

; 1392 : 		set_2d_mono_font_position (0.8, -0.8);

  0049e	51		 push	 ecx
  0049f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  004a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ac	51		 push	 ecx
  004ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  004b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ba	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1393 : 		set_hud_mono_font_rel_position (x_adjust, 0.0);

  004bf	51		 push	 ecx
  004c0	0f 57 c0	 xorps	 xmm0, xmm0
  004c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c8	51		 push	 ecx
  004c9	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _x_adjust$7[ebp]
  004ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d3	e8 00 00 00 00	 call	 ?set_hud_mono_font_rel_position@@YGXMM@Z ; set_hud_mono_font_rel_position

; 1394 : 
; 1395 : 		print_hud_mono_font_string (buffer);

  004d8	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  004db	50		 push	 eax
  004dc	e8 00 00 00 00	 call	 ?print_hud_mono_font_string@@YGXPBD@Z ; print_hud_mono_font_string
$LN2@display_wa:

; 1396 : 	}
; 1397 : }

  004e1	5f		 pop	 edi
  004e2	5e		 pop	 esi
  004e3	5b		 pop	 ebx
  004e4	8b e5		 mov	 esp, ebp
  004e6	5d		 pop	 ebp
  004e7	c3		 ret	 0
?display_waypoint_information@@YGXXZ ENDP		; display_waypoint_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_torque_scale@@YGXXZ
_TEXT	SEGMENT
tv302 = -160						; size = 4
_v2$ = -92						; size = 4
_v1$ = -88						; size = 4
_u2$ = -84						; size = 4
_u1$ = -80						; size = 4
_buffer$ = -76						; size = 8
_y_adjust$ = -68					; size = 4
_x_adjust$ = -64					; size = 4
_y_torque$ = -60					; size = 4
_torque$ = -56						; size = 4
_tick_right$ = -52					; size = 4
_tick_left$ = -48					; size = 4
_scale_right$ = -44					; size = 4
_scale_left$ = -40					; size = 4
_scale_centre$ = -36					; size = 4
_scale_top$ = -32					; size = 4
_scale_50_torque$ = -28					; size = 4
_scale_100_torque$ = -24				; size = 4
_scale_height$ = -20					; size = 4
_box_bottom$ = -16					; size = 4
_box_top$ = -12						; size = 4
_box_end$ = -8						; size = 4
_box_start$ = -4					; size = 4
?draw_torque_scale@@YGXXZ PROC				; draw_torque_scale, COMDAT

; 1233 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1234 : 	const float
; 1235 : 		box_start = -0.8,

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00014	f3 0f 11 45 fc	 movss	 DWORD PTR _box_start$[ebp], xmm0

; 1236 : 		box_end = box_start + 0.2,

  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  00021	f3 0f 11 45 f8	 movss	 DWORD PTR _box_end$[ebp], xmm0

; 1237 : 		box_top = -0.68,

  00026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  0002e	f3 0f 11 45 f4	 movss	 DWORD PTR _box_top$[ebp], xmm0

; 1238 : 		box_bottom = box_top - 0.1,

  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf47ae15
  0003b	f3 0f 11 45 f0	 movss	 DWORD PTR _box_bottom$[ebp], xmm0

; 1239 : 		scale_height = 0.5,

  00040	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00048	f3 0f 11 45 ec	 movss	 DWORD PTR _scale_height$[ebp], xmm0

; 1240 : 		scale_100_torque = box_top + scale_height * 100.0/120.0,

  0004d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be86d3a1
  00055	f3 0f 11 45 e8	 movss	 DWORD PTR _scale_100_torque$[ebp], xmm0

; 1241 : 		scale_50_torque = box_top + scale_height * 50.0 / 120.0,

  0005a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bef17e4b
  00062	f3 0f 11 45 e4	 movss	 DWORD PTR _scale_50_torque$[ebp], xmm0

; 1242 : 		scale_top = box_top + scale_height,

  00067	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be3851ec
  0006f	f3 0f 11 45 e0	 movss	 DWORD PTR _scale_top$[ebp], xmm0

; 1243 : 		scale_centre = (box_end + box_start) / 2,

  00074	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333334
  0007c	f3 0f 11 45 dc	 movss	 DWORD PTR _scale_centre$[ebp], xmm0

; 1244 : 		scale_left = box_start + 0.085,

  00081	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf370a3e
  00089	f3 0f 11 45 d8	 movss	 DWORD PTR _scale_left$[ebp], xmm0

; 1245 : 		scale_right = box_end - 0.085,

  0008e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2f5c29
  00096	f3 0f 11 45 d4	 movss	 DWORD PTR _scale_right$[ebp], xmm0

; 1246 : 		tick_left = box_start + 0.07,

  0009b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf3ae148
  000a3	f3 0f 11 45 d0	 movss	 DWORD PTR _tick_left$[ebp], xmm0

; 1247 : 		tick_right = box_end - 0.07;

  000a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2b851f
  000b0	f3 0f 11 45 cc	 movss	 DWORD PTR _tick_right$[ebp], xmm0

; 1248 : 
; 1249 : 	float
; 1250 : 		torque = current_flight_dynamics->combined_engine_torque.value,

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ba	f3 0f 10 80 8c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9356]
  000c2	f3 0f 11 45 c8	 movss	 DWORD PTR _torque$[ebp], xmm0

; 1251 : 		y_torque = box_top + (torque / 120.0) * scale_height,

  000c7	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _torque$[ebp]
  000cc	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@405e000000000000
  000d4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000dc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@bfe5c28f60000000
  000e4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e8	f3 0f 11 45 c4	 movss	 DWORD PTR _y_torque$[ebp], xmm0

; 1252 : 		x_adjust,
; 1253 : 		y_adjust;
; 1254 : 
; 1255 : 	char
; 1256 : 		buffer[8];
; 1257 : 
; 1258 : 	int
; 1259 : 		u1, u2, v1, v2;
; 1260 : 
; 1261 : 	// draw torque scale
; 1262 : 	get_2d_int_screen_coordinates (scale_left, box_top, &u1, &v1);

  000ed	8d 45 a8	 lea	 eax, DWORD PTR _v1$[ebp]
  000f0	50		 push	 eax
  000f1	8d 4d b0	 lea	 ecx, DWORD PTR _u1$[ebp]
  000f4	51		 push	 ecx
  000f5	51		 push	 ecx
  000f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  000fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00103	51		 push	 ecx
  00104	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf370a3e
  0010c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00111	e8 00 00 00 00	 call	 ?get_2d_int_screen_coordinates@@YGXMMPAH0@Z ; get_2d_int_screen_coordinates

; 1263 : 	get_2d_int_screen_coordinates (scale_right, y_torque, &u2, &v2);

  00116	8d 45 a4	 lea	 eax, DWORD PTR _v2$[ebp]
  00119	50		 push	 eax
  0011a	8d 4d ac	 lea	 ecx, DWORD PTR _u2$[ebp]
  0011d	51		 push	 ecx
  0011e	51		 push	 ecx
  0011f	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _y_torque$[ebp]
  00124	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00129	51		 push	 ecx
  0012a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2f5c29
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	e8 00 00 00 00	 call	 ?get_2d_int_screen_coordinates@@YGXMMPAH0@Z ; get_2d_int_screen_coordinates

; 1264 : 
; 1265 : 	set_block(u1, v2, u2, v1, hud_colour);

  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00141	50		 push	 eax
  00142	8b 4d a8	 mov	 ecx, DWORD PTR _v1$[ebp]
  00145	51		 push	 ecx
  00146	8b 55 ac	 mov	 edx, DWORD PTR _u2$[ebp]
  00149	52		 push	 edx
  0014a	8b 45 a4	 mov	 eax, DWORD PTR _v2$[ebp]
  0014d	50		 push	 eax
  0014e	8b 4d b0	 mov	 ecx, DWORD PTR _u1$[ebp]
  00151	51		 push	 ecx
  00152	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 1266 : 
; 1267 : 	draw_2d_line(scale_centre, y_torque, scale_centre, scale_top, hud_colour);

  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0015c	50		 push	 eax
  0015d	51		 push	 ecx
  0015e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be3851ec
  00166	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016b	51		 push	 ecx
  0016c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333334
  00174	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00179	51		 push	 ecx
  0017a	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _y_torque$[ebp]
  0017f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00184	51		 push	 ecx
  00185	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333334
  0018d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00192	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1268 : 
; 1269 : 	draw_2d_line(tick_left, scale_50_torque, tick_right, scale_50_torque, hud_colour);

  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0019c	50		 push	 eax
  0019d	51		 push	 ecx
  0019e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bef17e4b
  001a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ab	51		 push	 ecx
  001ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2b851f
  001b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b9	51		 push	 ecx
  001ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bef17e4b
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	51		 push	 ecx
  001c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf3ae148
  001d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1270 : 	draw_2d_line(tick_left, scale_100_torque, tick_right, scale_100_torque, hud_colour);

  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001df	50		 push	 eax
  001e0	51		 push	 ecx
  001e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be86d3a1
  001e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ee	51		 push	 ecx
  001ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2b851f
  001f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fc	51		 push	 ecx
  001fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be86d3a1
  00205	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020a	51		 push	 ecx
  0020b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf3ae148
  00213	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00218	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1271 : 
; 1272 : 	// draw surrounding box
; 1273 : 	draw_2d_line(box_start, box_top, box_end, box_top, hud_colour);

  0021d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00222	50		 push	 eax
  00223	51		 push	 ecx
  00224	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  0022c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00231	51		 push	 ecx
  00232	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  0023a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023f	51		 push	 ecx
  00240	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  00248	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024d	51		 push	 ecx
  0024e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00256	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1274 : 	draw_2d_line(box_start, box_bottom, box_end, box_bottom, hud_colour);

  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00265	50		 push	 eax
  00266	51		 push	 ecx
  00267	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf47ae15
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	51		 push	 ecx
  00275	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  0027d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00282	51		 push	 ecx
  00283	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf47ae15
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	51		 push	 ecx
  00291	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00299	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1275 : 	draw_2d_line(box_start, box_top, box_start, box_bottom, hud_colour);

  002a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002a8	50		 push	 eax
  002a9	51		 push	 ecx
  002aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf47ae15
  002b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b7	51		 push	 ecx
  002b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  002c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c5	51		 push	 ecx
  002c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  002ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d3	51		 push	 ecx
  002d4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  002dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1276 : 	draw_2d_line(box_end, box_top, box_end, box_bottom, hud_colour);

  002e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002eb	50		 push	 eax
  002ec	51		 push	 ecx
  002ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf47ae15
  002f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fa	51		 push	 ecx
  002fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  00303	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00308	51		 push	 ecx
  00309	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  00311	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00316	51		 push	 ecx
  00317	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  0031f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00324	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1277 : 
; 1278 : 	// print digital readout
; 1279 : 	set_mono_font_type (MONO_FONT_TYPE_6X10);

  00329	6a 04		 push	 4
  0032b	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1280 : 	y_adjust = 3.0;

  00330	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  00338	f3 0f 11 45 bc	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1281 : 
; 1282 : 	sprintf(buffer, "%3d", (int)(torque + 0.5));

  0033d	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _torque$[ebp]
  00342	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0034a	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0034e	50		 push	 eax
  0034f	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00354	8d 4d b4	 lea	 ecx, DWORD PTR _buffer$[ebp]
  00357	51		 push	 ecx
  00358	e8 00 00 00 00	 call	 _sprintf
  0035d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1283 : 	x_adjust = -get_mono_font_string_width(buffer) - 1;

  00360	8d 45 b4	 lea	 eax, DWORD PTR _buffer$[ebp]
  00363	50		 push	 eax
  00364	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00369	d9 9d 60 ff ff
	ff		 fstp	 DWORD PTR tv302[ebp]
  0036f	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv302[ebp]
  00377	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0037e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00386	f3 0f 11 45 c0	 movss	 DWORD PTR _x_adjust$[ebp], xmm0

; 1284 : 
; 1285 : 	set_2d_mono_font_position (box_end, box_top);

  0038b	51		 push	 ecx
  0038c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2e147b
  00394	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00399	51		 push	 ecx
  0039a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  003a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a7	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1286 : 	set_mono_font_rel_position (x_adjust, y_adjust);

  003ac	51		 push	 ecx
  003ad	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  003b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b7	51		 push	 ecx
  003b8	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _x_adjust$[ebp]
  003bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c2	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1287 : 	print_mono_font_string(buffer);

  003c7	8d 45 b4	 lea	 eax, DWORD PTR _buffer$[ebp]
  003ca	50		 push	 eax
  003cb	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1288 : }

  003d0	5f		 pop	 edi
  003d1	5e		 pop	 esi
  003d2	5b		 pop	 ebx
  003d3	8b e5		 mov	 esp, ebp
  003d5	5d		 pop	 ebp
  003d6	c3		 ret	 0
?draw_torque_scale@@YGXXZ ENDP				; draw_torque_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_radar_altitude_scale@@YGXXZ
_TEXT	SEGMENT
tv198 = -180						; size = 8
tv182 = -180						; size = 8
tv155 = -180						; size = 8
tv81 = -180						; size = 8
tv199 = -172						; size = 8
tv183 = -172						; size = 8
tv156 = -172						; size = 8
tv82 = -172						; size = 8
tv381 = -168						; size = 4
_i$1 = -100						; size = 4
_current_y$2 = -96					; size = 4
_v2$3 = -92						; size = 4
_v1$4 = -88						; size = 4
_u2$5 = -84						; size = 4
_u1$6 = -80						; size = 4
_high_step$7 = -76					; size = 4
_low_step$8 = -72					; size = 4
_high_height$9 = -68					; size = 4
_low_height$10 = -64					; size = 4
_scale_height$11 = -60					; size = 4
_roc$12 = -56						; size = 4
_x_adjust$ = -52					; size = 4
_y_adjust$ = -48					; size = 4
_buffer$ = -44						; size = 8
_radar_altitude$ = -36					; size = 4
_box_bottom$ = -32					; size = 4
_box_top$ = -28						; size = 4
_box_end$ = -24						; size = 4
_box_start$ = -20					; size = 4
_tick_end$ = -16					; size = 4
_x_end$ = -12						; size = 4
_x_start$ = -8						; size = 4
_y_centre$ = -4						; size = 4
?draw_radar_altitude_scale@@YGXXZ PROC			; draw_radar_altitude_scale, COMDAT

; 1137 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1138 : 	const float
; 1139 : 		y_centre = 0.0,

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 fc	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 1140 : 		x_start = -0.95,

  00014	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  0001c	f3 0f 11 45 f8	 movss	 DWORD PTR _x_start$[ebp], xmm0

; 1141 : 		x_end = x_start + 0.04,

  00021	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  00029	f3 0f 11 45 f4	 movss	 DWORD PTR _x_end$[ebp], xmm0

; 1142 : 		tick_end = x_end + 0.02,

  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf63d70a
  00036	f3 0f 11 45 f0	 movss	 DWORD PTR _tick_end$[ebp], xmm0

; 1143 : 		box_start = x_start + 0.07,

  0003b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  00043	f3 0f 11 45 ec	 movss	 DWORD PTR _box_start$[ebp], xmm0

; 1144 : 		box_end = box_start + 0.18,

  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00050	f3 0f 11 45 e8	 movss	 DWORD PTR _box_end$[ebp], xmm0

; 1145 : 		box_top = y_centre + 0.05,

  00055	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0005d	f3 0f 11 45 e4	 movss	 DWORD PTR _box_top$[ebp], xmm0

; 1146 : 		box_bottom = y_centre - 0.05;

  00062	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0006a	f3 0f 11 45 e0	 movss	 DWORD PTR _box_bottom$[ebp], xmm0

; 1147 : 
; 1148 : 	float
; 1149 : 		radar_altitude = bound(feet(current_flight_dynamics->radar_altitude.value), 0.0, 500.0);

  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00074	f3 0f 10 80 44
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9284]
  0007c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  00084	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00088	0f 57 c9	 xorps	 xmm1, xmm1
  0008b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0008f	76 0d		 jbe	 SHORT $LN9@draw_radar
  00091	0f 57 c0	 xorps	 xmm0, xmm0
  00094	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv82[ebp], xmm0
  0009c	eb 68		 jmp	 SHORT $LN10@draw_radar
$LN9@draw_radar:
  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a4	f3 0f 10 81 44
	24 00 00	 movss	 xmm0, DWORD PTR [ecx+9284]
  000ac	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  000b4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000b8	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@407f400000000000
  000c0	76 12		 jbe	 SHORT $LN7@draw_radar
  000c2	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@407f400000000000
  000ca	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv81[ebp], xmm0
  000d2	eb 22		 jmp	 SHORT $LN8@draw_radar
$LN7@draw_radar:
  000d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000da	f3 0f 10 82 44
	24 00 00	 movss	 xmm0, DWORD PTR [edx+9284]
  000e2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  000ea	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000ee	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv81[ebp], xmm0
$LN8@draw_radar:
  000f6	f2 0f 10 85 4c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv81[ebp]
  000fe	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv82[ebp], xmm0
$LN10@draw_radar:
  00106	f2 0f 5a 85 54
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv82[ebp]
  0010e	f3 0f 11 45 dc	 movss	 DWORD PTR _radar_altitude$[ebp], xmm0

; 1150 : 
; 1151 : 	char
; 1152 : 		buffer[8];
; 1153 : 
; 1154 : 	float
; 1155 : 		y_adjust,
; 1156 : 		x_adjust;
; 1157 : 
; 1158 : 
; 1159 : 	// draw box with digital radar altitude readout
; 1160 : 	draw_2d_line(box_start, box_top, box_end, box_top, hud_colour);

  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00118	50		 push	 eax
  00119	51		 push	 ecx
  0011a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	51		 push	 ecx
  00128	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00130	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00135	51		 push	 ecx
  00136	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0013e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00143	51		 push	 ecx
  00144	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1161 : 	draw_2d_line(box_start, box_bottom, box_end, box_bottom, hud_colour);

  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0015b	50		 push	 eax
  0015c	51		 push	 ecx
  0015d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00165	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016a	51		 push	 ecx
  0016b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00173	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00178	51		 push	 ecx
  00179	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00181	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00186	51		 push	 ecx
  00187	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  0018f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00194	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1162 : 	draw_2d_line(box_start, box_top, box_start, box_bottom, hud_colour);

  00199	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0019e	50		 push	 eax
  0019f	51		 push	 ecx
  001a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  001a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ad	51		 push	 ecx
  001ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  001b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bb	51		 push	 ecx
  001bc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  001c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c9	51		 push	 ecx
  001ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1163 : 	draw_2d_line(box_end, box_top, box_end, box_bottom, hud_colour);

  001dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001e1	50		 push	 eax
  001e2	51		 push	 ecx
  001e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	51		 push	 ecx
  001f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  001f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fe	51		 push	 ecx
  001ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00207	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020c	51		 push	 ecx
  0020d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00215	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1164 : 
; 1165 : 	draw_2d_line(x_start, y_centre, box_start, y_centre, hud_colour);

  0021f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00224	50		 push	 eax
  00225	51		 push	 ecx
  00226	0f 57 c0	 xorps	 xmm0, xmm0
  00229	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022e	51		 push	 ecx
  0022f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  00237	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023c	51		 push	 ecx
  0023d	0f 57 c0	 xorps	 xmm0, xmm0
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	51		 push	 ecx
  00246	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  0024e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00253	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1166 : 
; 1167 : 	// rate_of_climb
; 1168 : 	{
; 1169 : 		float roc = bound(current_flight_dynamics->world_velocity_y.value * 0.05, -0.2, 0.2);

  00258	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0025d	f3 0f 5a 80 14
	21 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8468]
  00265	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0026d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfc999999999999a
  00275	66 0f 2f c8	 comisd	 xmm1, xmm0
  00279	76 12		 jbe	 SHORT $LN13@draw_radar
  0027b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfc999999999999a
  00283	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv156[ebp], xmm0
  0028b	eb 60		 jmp	 SHORT $LN14@draw_radar
$LN13@draw_radar:
  0028d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00293	f3 0f 5a 81 14
	21 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+8468]
  0029b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa999999999999a
  002a3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fc999999999999a
  002ab	76 12		 jbe	 SHORT $LN11@draw_radar
  002ad	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc999999999999a
  002b5	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv155[ebp], xmm0
  002bd	eb 1e		 jmp	 SHORT $LN12@draw_radar
$LN11@draw_radar:
  002bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c5	f3 0f 5a 82 14
	21 00 00	 cvtss2sd xmm0, DWORD PTR [edx+8468]
  002cd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa999999999999a
  002d5	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv155[ebp], xmm0
$LN12@draw_radar:
  002dd	f2 0f 10 85 4c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv155[ebp]
  002e5	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv156[ebp], xmm0
$LN14@draw_radar:
  002ed	f2 0f 5a 85 54
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv156[ebp]
  002f5	f3 0f 11 45 c8	 movss	 DWORD PTR _roc$12[ebp], xmm0

; 1170 : 		draw_2d_mono_sprite (large_left_carat, x_end, y_centre + roc, hud_colour);

  002fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002ff	50		 push	 eax
  00300	0f 57 c0	 xorps	 xmm0, xmm0
  00303	f3 0f 58 45 c8	 addss	 xmm0, DWORD PTR _roc$12[ebp]
  00308	51		 push	 ecx
  00309	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030e	51		 push	 ecx
  0030f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  00317	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031c	68 00 00 00 00	 push	 OFFSET ?large_left_carat@@3PADA
  00321	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite

; 1171 : 	}
; 1172 : 
; 1173 : 	// print digital readout
; 1174 : 
; 1175 : 	set_mono_font_type (MONO_FONT_TYPE_6X10);

  00326	6a 04		 push	 4
  00328	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1176 : 	y_adjust = -4.0;

  0032d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  00335	f3 0f 11 45 d0	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1177 : 
; 1178 : 	sprintf(buffer, "%3d", (int)radar_altitude);

  0033a	f3 0f 2c 45 dc	 cvttss2si eax, DWORD PTR _radar_altitude$[ebp]
  0033f	50		 push	 eax
  00340	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00345	8d 4d d4	 lea	 ecx, DWORD PTR _buffer$[ebp]
  00348	51		 push	 ecx
  00349	e8 00 00 00 00	 call	 _sprintf
  0034e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1179 : 	x_adjust = -get_mono_font_string_width(buffer) - 1;

  00351	8d 45 d4	 lea	 eax, DWORD PTR _buffer$[ebp]
  00354	50		 push	 eax
  00355	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0035a	d9 9d 58 ff ff
	ff		 fstp	 DWORD PTR tv381[ebp]
  00360	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR tv381[ebp]
  00368	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0036f	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00377	f3 0f 11 45 cc	 movss	 DWORD PTR _x_adjust$[ebp], xmm0

; 1180 : 
; 1181 : 	set_2d_mono_font_position (box_end, y_centre);

  0037c	51		 push	 ecx
  0037d	0f 57 c0	 xorps	 xmm0, xmm0
  00380	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00385	51		 push	 ecx
  00386	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  0038e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00393	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1182 : 	set_mono_font_rel_position (x_adjust, y_adjust);

  00398	51		 push	 ecx
  00399	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  0039e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a3	51		 push	 ecx
  003a4	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _x_adjust$[ebp]
  003a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ae	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1183 : 	print_mono_font_string(buffer);

  003b3	8d 45 d4	 lea	 eax, DWORD PTR _buffer$[ebp]
  003b6	50		 push	 eax
  003b7	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1184 : 
; 1185 : 	// draw altitude scale
; 1186 : 	{
; 1187 : 		const float
; 1188 : 			scale_height = 0.6,

  003bc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  003c4	f3 0f 11 45 c4	 movss	 DWORD PTR _scale_height$11[ebp], xmm0

; 1189 : 			low_height = scale_height * 0.75,

  003c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ee66667
  003d1	f3 0f 11 45 c0	 movss	 DWORD PTR _low_height$10[ebp], xmm0

; 1190 : 			high_height = scale_height - low_height,

  003d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  003de	f3 0f 11 45 bc	 movss	 DWORD PTR _high_height$9[ebp], xmm0

; 1191 : 			low_step = low_height / 3,

  003e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  003eb	f3 0f 11 45 b8	 movss	 DWORD PTR _low_step$8[ebp], xmm0

; 1192 : 			high_step = high_height / 2;

  003f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d99999a
  003f8	f3 0f 11 45 b4	 movss	 DWORD PTR _high_step$7[ebp], xmm0

; 1193 : 
; 1194 : 		float
; 1195 : 			u1, u2, v1, v2,
; 1196 : 			current_y;
; 1197 : 
; 1198 : 		int i;
; 1199 : 
; 1200 : 		// adjust start of altitude scale
; 1201 : 		current_y = y_centre;

  003fd	0f 57 c0	 xorps	 xmm0, xmm0
  00400	f3 0f 11 45 a0	 movss	 DWORD PTR _current_y$2[ebp], xmm0

; 1202 : 		current_y -= bound(radar_altitude, 0.0, 300.0) * low_step * 0.01;

  00405	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  0040a	0f 57 c9	 xorps	 xmm1, xmm1
  0040d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00411	76 0d		 jbe	 SHORT $LN17@draw_radar
  00413	0f 57 c0	 xorps	 xmm0, xmm0
  00416	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv183[ebp], xmm0
  0041e	eb 3e		 jmp	 SHORT $LN18@draw_radar
$LN17@draw_radar:
  00420	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  00425	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4072c00000000000
  0042d	76 12		 jbe	 SHORT $LN15@draw_radar
  0042f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4072c00000000000
  00437	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv182[ebp], xmm0
  0043f	eb 0d		 jmp	 SHORT $LN16@draw_radar
$LN15@draw_radar:
  00441	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  00446	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv182[ebp], xmm0
$LN16@draw_radar:
  0044e	f2 0f 10 85 4c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv182[ebp]
  00456	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv183[ebp], xmm0
$LN18@draw_radar:
  0045e	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv183[ebp]
  00466	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc3333340000000
  0046e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00476	f3 0f 5a 4d a0	 cvtss2sd xmm1, DWORD PTR _current_y$2[ebp]
  0047b	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0047f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00483	f3 0f 11 45 a0	 movss	 DWORD PTR _current_y$2[ebp], xmm0

; 1203 : 		if (radar_altitude > 300)

  00488	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _radar_altitude$[ebp]
  0048d	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@43960000
  00494	0f 86 9b 00 00
	00		 jbe	 $LN5@draw_radar

; 1204 : 			current_y -= bound(radar_altitude - 300.0, 0.0, 200.0) * high_step * 0.01;

  0049a	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  0049f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4072c00000000000
  004a7	0f 57 c9	 xorps	 xmm1, xmm1
  004aa	66 0f 2f c8	 comisd	 xmm1, xmm0
  004ae	76 0d		 jbe	 SHORT $LN21@draw_radar
  004b0	0f 57 c0	 xorps	 xmm0, xmm0
  004b3	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv199[ebp], xmm0
  004bb	eb 4e		 jmp	 SHORT $LN22@draw_radar
$LN21@draw_radar:
  004bd	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  004c2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4072c00000000000
  004ca	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4069000000000000
  004d2	76 12		 jbe	 SHORT $LN19@draw_radar
  004d4	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4069000000000000
  004dc	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv198[ebp], xmm0
  004e4	eb 15		 jmp	 SHORT $LN20@draw_radar
$LN19@draw_radar:
  004e6	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  004eb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4072c00000000000
  004f3	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv198[ebp], xmm0
$LN20@draw_radar:
  004fb	f2 0f 10 85 4c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv198[ebp]
  00503	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR tv199[ebp], xmm0
$LN22@draw_radar:
  0050b	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv199[ebp]
  00513	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb3333340000000
  0051b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00523	f3 0f 5a 4d a0	 cvtss2sd xmm1, DWORD PTR _current_y$2[ebp]
  00528	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0052c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00530	f3 0f 11 45 a0	 movss	 DWORD PTR _current_y$2[ebp], xmm0
$LN5@draw_radar:

; 1205 : 
; 1206 : 		get_2d_float_screen_coordinates (x_start, current_y, &u1, &v2);

  00535	8d 45 a4	 lea	 eax, DWORD PTR _v2$3[ebp]
  00538	50		 push	 eax
  00539	8d 4d b0	 lea	 ecx, DWORD PTR _u1$6[ebp]
  0053c	51		 push	 ecx
  0053d	51		 push	 ecx
  0053e	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  00543	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00548	51		 push	 ecx
  00549	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  00551	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00556	e8 00 00 00 00	 call	 ?get_2d_float_screen_coordinates@@YGXMMPAM0@Z ; get_2d_float_screen_coordinates

; 1207 : 		get_2d_float_screen_coordinates (x_end, y_centre, &u2, &v1);

  0055b	8d 45 a8	 lea	 eax, DWORD PTR _v1$4[ebp]
  0055e	50		 push	 eax
  0055f	8d 4d ac	 lea	 ecx, DWORD PTR _u2$5[ebp]
  00562	51		 push	 ecx
  00563	51		 push	 ecx
  00564	0f 57 c0	 xorps	 xmm0, xmm0
  00567	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0056c	51		 push	 ecx
  0056d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  00575	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057a	e8 00 00 00 00	 call	 ?get_2d_float_screen_coordinates@@YGXMMPAM0@Z ; get_2d_float_screen_coordinates

; 1208 : 		set_block(u1, v1, u2, v2, hud_colour);

  0057f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00584	50		 push	 eax
  00585	f3 0f 2c 4d a4	 cvttss2si ecx, DWORD PTR _v2$3[ebp]
  0058a	51		 push	 ecx
  0058b	f3 0f 2c 55 ac	 cvttss2si edx, DWORD PTR _u2$5[ebp]
  00590	52		 push	 edx
  00591	f3 0f 2c 45 a8	 cvttss2si eax, DWORD PTR _v1$4[ebp]
  00596	50		 push	 eax
  00597	f3 0f 2c 4d b0	 cvttss2si ecx, DWORD PTR _u1$6[ebp]
  0059c	51		 push	 ecx
  0059d	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 1209 : 
; 1210 : 		// draw main box
; 1211 : 		draw_2d_line(x_start, current_y, tick_end, current_y, hud_colour);

  005a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005a7	50		 push	 eax
  005a8	51		 push	 ecx
  005a9	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  005ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b3	51		 push	 ecx
  005b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf63d70a
  005bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c1	51		 push	 ecx
  005c2	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  005c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cc	51		 push	 ecx
  005cd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  005d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005da	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1212 : 		draw_2d_line(x_start, current_y + scale_height, tick_end, current_y + scale_height, hud_colour);

  005df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005e4	50		 push	 eax
  005e5	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  005ea	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f19999a
  005f2	51		 push	 ecx
  005f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f8	51		 push	 ecx
  005f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf63d70a
  00601	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00606	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  0060b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f19999a
  00613	51		 push	 ecx
  00614	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00619	51		 push	 ecx
  0061a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  00622	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00627	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1213 : 		draw_2d_line(x_start, current_y, x_start, current_y + scale_height, hud_colour);

  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00631	50		 push	 eax
  00632	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  00637	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f19999a
  0063f	51		 push	 ecx
  00640	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00645	51		 push	 ecx
  00646	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  0064e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00653	51		 push	 ecx
  00654	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  00659	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065e	51		 push	 ecx
  0065f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  00667	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1214 : 		draw_2d_line(x_end, current_y, x_end, current_y + scale_height, hud_colour);

  00671	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00676	50		 push	 eax
  00677	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  0067c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f19999a
  00684	51		 push	 ecx
  00685	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068a	51		 push	 ecx
  0068b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  00693	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00698	51		 push	 ecx
  00699	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  0069e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a3	51		 push	 ecx
  006a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  006ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1215 : 
; 1216 : 		// draw tick marks
; 1217 : 		for (i = 0; i < 3; i++)

  006b6	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  006bd	eb 09		 jmp	 SHORT $LN4@draw_radar
$LN2@draw_radar:
  006bf	8b 45 9c	 mov	 eax, DWORD PTR _i$1[ebp]
  006c2	83 c0 01	 add	 eax, 1
  006c5	89 45 9c	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@draw_radar:
  006c8	83 7d 9c 03	 cmp	 DWORD PTR _i$1[ebp], 3
  006cc	7d 51		 jge	 SHORT $LN3@draw_radar

; 1218 : 		{
; 1219 : 			current_y += low_step;

  006ce	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  006d3	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3e19999a
  006db	f3 0f 11 45 a0	 movss	 DWORD PTR _current_y$2[ebp], xmm0

; 1220 : 			draw_2d_line(x_end, current_y, tick_end, current_y, hud_colour);

  006e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006e5	50		 push	 eax
  006e6	51		 push	 ecx
  006e7	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  006ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f1	51		 push	 ecx
  006f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf63d70a
  006fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ff	51		 push	 ecx
  00700	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  00705	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0070a	51		 push	 ecx
  0070b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  00713	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00718	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1221 : 		}

  0071d	eb a0		 jmp	 SHORT $LN2@draw_radar
$LN3@draw_radar:

; 1222 : 
; 1223 : 		current_y += high_step;

  0071f	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  00724	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3d99999a
  0072c	f3 0f 11 45 a0	 movss	 DWORD PTR _current_y$2[ebp], xmm0

; 1224 : 		draw_2d_line(x_end, current_y, tick_end, current_y, hud_colour);

  00731	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00736	50		 push	 eax
  00737	51		 push	 ecx
  00738	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  0073d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00742	51		 push	 ecx
  00743	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf63d70a
  0074b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00750	51		 push	 ecx
  00751	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _current_y$2[ebp]
  00756	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0075b	51		 push	 ecx
  0075c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c2
  00764	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00769	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1225 : 	}
; 1226 : }

  0076e	5f		 pop	 edi
  0076f	5e		 pop	 esi
  00770	5b		 pop	 ebx
  00771	8b e5		 mov	 esp, ebp
  00773	5d		 pop	 ebp
  00774	c3		 ret	 0
?draw_radar_altitude_scale@@YGXXZ ENDP			; draw_radar_altitude_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?display_barometric_altitude@@YGXXZ
_TEXT	SEGMENT
_s$ = -40						; size = 20
_barometric_altitude$ = -20				; size = 4
_half_height$ = -16					; size = 4
_y_pos$ = -12						; size = 4
_x_end$ = -8						; size = 4
_x_start$ = -4						; size = 4
?display_barometric_altitude@@YGXXZ PROC		; display_barometric_altitude, COMDAT

; 1103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1104 : 	const float
; 1105 : 		x_start = -0.65,

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  00011	f3 0f 11 45 fc	 movss	 DWORD PTR _x_start$[ebp], xmm0

; 1106 : 		x_end = x_start + 0.25,

  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccc
  0001e	f3 0f 11 45 f8	 movss	 DWORD PTR _x_end$[ebp], xmm0

; 1107 : 		y_pos = 0.0,

  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	f3 0f 11 45 f4	 movss	 DWORD PTR _y_pos$[ebp], xmm0

; 1108 : 		half_height = 0.05;

  0002b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00033	f3 0f 11 45 f0	 movss	 DWORD PTR _half_height$[ebp], xmm0

; 1109 : 
; 1110 : 	float
; 1111 : 		barometric_altitude;
; 1112 : 
; 1113 : 	char
; 1114 : 		s[20];
; 1115 : 
; 1116 : 	barometric_altitude = feet (current_flight_dynamics->barometric_altitude.value);

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003d	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  00045	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  0004d	f3 0f 11 45 ec	 movss	 DWORD PTR _barometric_altitude$[ebp], xmm0

; 1117 : 
; 1118 : 	set_mono_font_type (MONO_FONT_TYPE_6X10);

  00052	6a 04		 push	 4
  00054	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1119 : 
; 1120 : 	sprintf (s, "%4d", (int) barometric_altitude);

  00059	f3 0f 2c 45 ec	 cvttss2si eax, DWORD PTR _barometric_altitude$[ebp]
  0005e	50		 push	 eax
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_03GLKEJMAA@?$CF4d@
  00064	8d 4d d8	 lea	 ecx, DWORD PTR _s$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 _sprintf
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1121 : 
; 1122 : 	set_2d_mono_font_position (x_start, y_pos);

  00070	51		 push	 ecx
  00071	0f 57 c0	 xorps	 xmm0, xmm0
  00074	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00079	51		 push	 ecx
  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1123 : 	set_hud_mono_font_rel_position (3.0, -3.0);

  0008c	51		 push	 ecx
  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  00095	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009a	51		 push	 ecx
  0009b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  000a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a8	e8 00 00 00 00	 call	 ?set_hud_mono_font_rel_position@@YGXMM@Z ; set_hud_mono_font_rel_position

; 1124 : 	print_hud_mono_font_string (s);

  000ad	8d 45 d8	 lea	 eax, DWORD PTR _s$[ebp]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?print_hud_mono_font_string@@YGXPBD@Z ; print_hud_mono_font_string

; 1125 : 
; 1126 : 	draw_2d_line(x_start, y_pos + half_height, x_end, y_pos + half_height, hud_colour);

  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000bb	50		 push	 eax
  000bc	51		 push	 ecx
  000bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	51		 push	 ecx
  000cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccc
  000d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d8	51		 push	 ecx
  000d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	51		 push	 ecx
  000e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1127 : 	draw_2d_line(x_start, y_pos - half_height, x_end, y_pos - half_height, hud_colour);

  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000fe	50		 push	 eax
  000ff	51		 push	 ecx
  00100	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00108	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010d	51		 push	 ecx
  0010e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccc
  00116	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011b	51		 push	 ecx
  0011c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00124	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00129	51		 push	 ecx
  0012a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1128 : 	draw_2d_line(x_start, y_pos + half_height, x_start, y_pos - half_height, hud_colour);

  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00141	50		 push	 eax
  00142	51		 push	 ecx
  00143	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0014b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00150	51		 push	 ecx
  00151	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  00159	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015e	51		 push	 ecx
  0015f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00167	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  00175	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1129 : 	draw_2d_line(x_end, y_pos + half_height, x_end, y_pos - half_height, hud_colour);

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00184	50		 push	 eax
  00185	51		 push	 ecx
  00186	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	51		 push	 ecx
  00194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccc
  0019c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a1	51		 push	 ecx
  001a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  001aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001af	51		 push	 ecx
  001b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccc
  001b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1130 : }

  001c2	5f		 pop	 edi
  001c3	5e		 pop	 esi
  001c4	5b		 pop	 ebx
  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c3		 ret	 0
?display_barometric_altitude@@YGXXZ ENDP		; display_barometric_altitude
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?display_true_airspeed@@YGXXZ
_TEXT	SEGMENT
_s$ = -44						; size = 20
_true_airspeed$ = -24					; size = 4
_width$ = -20						; size = 4
_half_height$ = -16					; size = 4
_y_pos$ = -12						; size = 4
_x_end$ = -8						; size = 4
_x_start$ = -4						; size = 4
?display_true_airspeed@@YGXXZ PROC			; display_true_airspeed, COMDAT

; 1066 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1067 : 	const float
; 1068 : 		x_start = 0.7,

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00011	f3 0f 11 45 fc	 movss	 DWORD PTR _x_start$[ebp], xmm0

; 1069 : 		x_end = x_start + 0.2,

  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  0001e	f3 0f 11 45 f8	 movss	 DWORD PTR _x_end$[ebp], xmm0

; 1070 : 		y_pos = 0.0,

  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	f3 0f 11 45 f4	 movss	 DWORD PTR _y_pos$[ebp], xmm0

; 1071 : 		half_height = 0.05;

  0002b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00033	f3 0f 11 45 f0	 movss	 DWORD PTR _half_height$[ebp], xmm0

; 1072 : 
; 1073 : 	float
; 1074 : 		width,
; 1075 : 		true_airspeed;
; 1076 : 
; 1077 : 	char
; 1078 : 		s[20];
; 1079 : 
; 1080 : 	true_airspeed = current_flight_dynamics->velocity_z.value;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003d	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  00045	f3 0f 11 45 e8	 movss	 DWORD PTR _true_airspeed$[ebp], xmm0

; 1081 : 	true_airspeed = knots (true_airspeed);

  0004a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _true_airspeed$[ebp]
  0004f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3ff85d84
  00057	f3 0f 11 45 e8	 movss	 DWORD PTR _true_airspeed$[ebp], xmm0

; 1082 : 
; 1083 : 	sprintf (s, "%3d", (int) true_airspeed);

  0005c	f3 0f 2c 45 e8	 cvttss2si eax, DWORD PTR _true_airspeed$[ebp]
  00061	50		 push	 eax
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00067	8d 4d d4	 lea	 ecx, DWORD PTR _s$[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 _sprintf
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1084 : 	width = get_mono_font_string_width(s);

  00073	8d 45 d4	 lea	 eax, DWORD PTR _s$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0007c	d9 5d ec	 fstp	 DWORD PTR _width$[ebp]

; 1085 : 
; 1086 : 	set_mono_font_type (MONO_FONT_TYPE_7X12);

  0007f	6a 05		 push	 5
  00081	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1087 : 	set_2d_mono_font_position (x_start, 0.0);

  00086	51		 push	 ecx
  00087	0f 57 c0	 xorps	 xmm0, xmm0
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	51		 push	 ecx
  00090	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00098	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009d	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1088 : 	set_hud_mono_font_rel_position (2.0, -4.0);

  000a2	51		 push	 ecx
  000a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  000ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b0	51		 push	 ecx
  000b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  000b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000be	e8 00 00 00 00	 call	 ?set_hud_mono_font_rel_position@@YGXMM@Z ; set_hud_mono_font_rel_position

; 1089 : 
; 1090 : 	print_hud_mono_font_string (s);

  000c3	8d 45 d4	 lea	 eax, DWORD PTR _s$[ebp]
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?print_hud_mono_font_string@@YGXPBD@Z ; print_hud_mono_font_string

; 1091 : 
; 1092 : 	draw_2d_line(x_start, y_pos + half_height, x_end, y_pos + half_height, hud_colour);

  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000d1	50		 push	 eax
  000d2	51		 push	 ecx
  000d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  000db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e0	51		 push	 ecx
  000e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  000e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  000f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fc	51		 push	 ecx
  000fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00105	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1093 : 	draw_2d_line(x_start, y_pos - half_height, x_end, y_pos - half_height, hud_colour);

  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00114	50		 push	 eax
  00115	51		 push	 ecx
  00116	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0011e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00123	51		 push	 ecx
  00124	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  0012c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00131	51		 push	 ecx
  00132	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0013a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013f	51		 push	 ecx
  00140	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00148	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1094 : 	draw_2d_line(x_start, y_pos + half_height, x_start, y_pos - half_height, hud_colour);

  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00157	50		 push	 eax
  00158	51		 push	 ecx
  00159	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00161	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00166	51		 push	 ecx
  00167	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  0016f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00174	51		 push	 ecx
  00175	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0017d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00182	51		 push	 ecx
  00183	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  0018b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00190	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1095 : 	draw_2d_line(x_end, y_pos + half_height, x_end, y_pos - half_height, hud_colour);

  00195	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0019a	50		 push	 eax
  0019b	51		 push	 ecx
  0019c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  001a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a9	51		 push	 ecx
  001aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  001b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b7	51		 push	 ecx
  001b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  001c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c5	51		 push	 ecx
  001c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  001ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1096 : }

  001d8	5f		 pop	 edi
  001d9	5e		 pop	 esi
  001da	5b		 pop	 ebx
  001db	8b e5		 mov	 esp, ebp
  001dd	5d		 pop	 ebp
  001de	c3		 ret	 0
?display_true_airspeed@@YGXXZ ENDP			; display_true_airspeed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtgmath.h
;	COMDAT ??$fmod@MHX@@YGNMH@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$fmod@MHX@@YGNMH@Z PROC				; fmod<float,int,void>, COMDAT

; 88   : _GENERIC_MATH2(fmod, _CRTDEFAULT)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	f2 0f 2a 45 0c	 cvtsi2sd xmm0, DWORD PTR __Right$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Left$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
??$fmod@MHX@@YGNMH@Z ENDP				; fmod<float,int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_flight_path_marker@@YGXXZ
_TEXT	SEGMENT
tv523 = -232						; size = 4
tv613 = -228						; size = 4
tv511 = -228						; size = 4
tv504 = -228						; size = 4
tv153 = -228						; size = 4
tv133 = -228						; size = 4
tv611 = -224						; size = 4
tv609 = -224						; size = 4
tv517 = -224						; size = 4
tv479 = -224						; size = 4
tv472 = -224						; size = 4
tv145 = -224						; size = 4
tv93 = -224						; size = 4
_y2$1 = -156						; size = 4
_x2$2 = -152						; size = 4
_y2$3 = -148						; size = 4
_x2$4 = -144						; size = 4
_ystep$5 = -140						; size = 4
_xstep$6 = -136						; size = 4
_y$7 = -132						; size = 4
_x$8 = -128						; size = 4
_step$9 = -124						; size = 4
_right_hud_y$ = -120					; size = 4
_right_hud_x$ = -116					; size = 4
_left_hud_y$ = -112					; size = 4
_left_hud_x$ = -108					; size = 4
_horizon_hud_y$ = -104					; size = 4
_horizon_hud_x$ = -100					; size = 4
_horizon_deg$ = -96					; size = 4
_horizon_pt_y$ = -92					; size = 4
_horizon_pt_x$ = -88					; size = 4
_line_climb_ratio$ = -84				; size = 4
_horizon_angle$ = -80					; size = 4
_fpm_y_offset$ = -76					; size = 4
_fpm_x_offset$ = -72					; size = 4
_sin_roll$ = -68					; size = 4
_cos_roll$ = -64					; size = 4
_fpm_hud_y_offset$ = -60				; size = 4
_fpm_hud_x_offset$ = -56				; size = 4
_hud_pixel_ratio$ = -52					; size = 4
_fpm_y_pixel_offset$ = -48				; size = 4
_fpm_x_pixel_offset$ = -44				; size = 4
_head_pitch$ = -40					; size = 4
_focal_length$ = -36					; size = 4
_pixels_per_rad$ = -32					; size = 4
_roll$ = -28						; size = 4
_pitch$ = -24						; size = 4
_flight_vector_y$ = -20					; size = 4
_flight_vector_x$ = -16					; size = 4
_vertical_airspeed$ = -12				; size = 4
_sideways_airspeed$ = -8				; size = 4
_forward_airspeed$ = -4					; size = 4
?draw_flight_path_marker@@YGXXZ PROC			; draw_flight_path_marker, COMDAT

; 947  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 948  : 	float forward_airspeed, sideways_airspeed, vertical_airspeed, flight_vector_x, flight_vector_y;
; 949  : 	float pitch, roll, pixels_per_rad, focal_length, head_pitch;
; 950  : 	float fpm_x_pixel_offset, fpm_y_pixel_offset, hud_pixel_ratio, fpm_hud_x_offset, fpm_hud_y_offset;
; 951  : 	float cos_roll, sin_roll, fpm_x_offset, fpm_y_offset;
; 952  : 	float horizon_angle, line_climb_ratio, horizon_pt_x, horizon_pt_y, horizon_deg;
; 953  : 	float horizon_hud_x, horizon_hud_y, left_hud_x, left_hud_y, right_hud_x, right_hud_y;
; 954  : 
; 955  : 	forward_airspeed = current_flight_dynamics->velocity_z.value;

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00011	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  00019	f3 0f 11 45 fc	 movss	 DWORD PTR _forward_airspeed$[ebp], xmm0

; 956  : 	sideways_airspeed = current_flight_dynamics->velocity_x.value;

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00023	f3 0f 10 80 6c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8300]
  0002b	f3 0f 11 45 f8	 movss	 DWORD PTR _sideways_airspeed$[ebp], xmm0

; 957  : 	vertical_airspeed = current_flight_dynamics->world_velocity_y.value;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00035	f3 0f 10 80 14
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8468]
  0003d	f3 0f 11 45 f4	 movss	 DWORD PTR _vertical_airspeed$[ebp], xmm0

; 958  : 
; 959  : 	if (forward_airspeed < knots_to_metres_per_second(10.0))

  00042	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _forward_airspeed$[ebp]
  00047	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40149d6340000000
  0004f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00053	76 05		 jbe	 SHORT $LN6@draw_fligh

; 960  : 		return;

  00055	e9 8d 08 00 00	 jmp	 $LN1@draw_fligh
$LN6@draw_fligh:

; 961  : 
; 962  : 	// figure out which direction we're going (relative to nose)
; 963  : 	flight_vector_y = atan(vertical_airspeed / forward_airspeed);

  0005a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _vertical_airspeed$[ebp]
  0005f	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _forward_airspeed$[ebp]
  00064	51		 push	 ecx
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	e8 00 00 00 00	 call	 ?atan@@YGMM@Z		; atan
  0006f	d9 5d ec	 fstp	 DWORD PTR _flight_vector_y$[ebp]

; 964  : 	flight_vector_x = atan(sideways_airspeed / forward_airspeed);

  00072	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sideways_airspeed$[ebp]
  00077	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _forward_airspeed$[ebp]
  0007c	51		 push	 ecx
  0007d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00082	e8 00 00 00 00	 call	 ?atan@@YGMM@Z		; atan
  00087	d9 5d f0	 fstp	 DWORD PTR _flight_vector_x$[ebp]

; 965  : 
; 966  : 	head_pitch = pilot_head_pitch;

  0008a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  00092	f3 0f 11 45 d8	 movss	 DWORD PTR _head_pitch$[ebp], xmm0

; 967  : 	if (get_global_wide_cockpit () &&

  00097	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?wide_cockpit@@3HA, 0 ; wide_cockpit
  0009e	74 37		 je	 SHORT $LN7@draw_fligh
  000a0	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?wide_cockpit_nr@@3HA, 9 ; wide_cockpit_nr
  000a7	74 09		 je	 SHORT $LN8@draw_fligh
  000a9	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?wide_cockpit_nr@@3HA, 10 ; wide_cockpit_nr, 0000000aH
  000b0	75 25		 jne	 SHORT $LN7@draw_fligh
$LN8@draw_fligh:

; 968  : 		(wide_cockpit_nr == WIDEVIEW_VIPER_PILOT || wide_cockpit_nr == WIDEVIEW_VIPER_COPILOT))
; 969  :    		head_pitch -= rad(wide_cockpit_position[wide_cockpit_nr].c.p);

  000b2	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000b9	f3 0f 10 80 20
	00 00 00	 movss	 xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+32]
  000c1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  000c9	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _head_pitch$[ebp]
  000ce	f3 0f 5c c8	 subss	 xmm1, xmm0
  000d2	f3 0f 11 4d d8	 movss	 DWORD PTR _head_pitch$[ebp], xmm1
$LN7@draw_fligh:

; 970  : 
; 971  : 	pitch = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_PITCH);

  000d7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000de	74 0f		 je	 SHORT $LN18@draw_fligh
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv93[ebp], ecx
  000ed	eb 24		 jmp	 SHORT $LN19@draw_fligh
$LN18@draw_fligh:
  000ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  000f5	83 c2 18	 add	 edx, 24			; 00000018H
  000f8	52		 push	 edx
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00109	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN19@draw_fligh:
  00113	b9 01 00 00 00	 mov	 ecx, 1
  00118	85 c9		 test	 ecx, ecx
  0011a	74 0c		 je	 SHORT $LN20@draw_fligh
  0011c	c7 85 1c ff ff
	ff 54 00 00 00	 mov	 DWORD PTR tv133[ebp], 84 ; 00000054H
  00126	eb 24		 jmp	 SHORT $LN21@draw_fligh
$LN20@draw_fligh:
  00128	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  0012e	83 c2 18	 add	 edx, 24			; 00000018H
  00131	52		 push	 edx
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00142	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN21@draw_fligh:
  0014c	6a 54		 push	 84			; 00000054H
  0014e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00154	51		 push	 ecx
  00155	69 95 20 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv93[ebp], 700
  0015f	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv133[ebp]
  00165	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0016c	ff d1		 call	 ecx
  0016e	d9 5d e8	 fstp	 DWORD PTR _pitch$[ebp]

; 972  : 	roll = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ROLL);

  00171	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00178	74 0f		 je	 SHORT $LN22@draw_fligh
  0017a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0017f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00181	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv145[ebp], ecx
  00187	eb 24		 jmp	 SHORT $LN23@draw_fligh
$LN22@draw_fligh:
  00189	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  0018f	83 c2 19	 add	 edx, 25			; 00000019H
  00192	52		 push	 edx
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a3	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv145[ebp], 0
$LN23@draw_fligh:
  001ad	b9 01 00 00 00	 mov	 ecx, 1
  001b2	85 c9		 test	 ecx, ecx
  001b4	74 0c		 je	 SHORT $LN24@draw_fligh
  001b6	c7 85 1c ff ff
	ff 71 00 00 00	 mov	 DWORD PTR tv153[ebp], 113 ; 00000071H
  001c0	eb 24		 jmp	 SHORT $LN25@draw_fligh
$LN24@draw_fligh:
  001c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  001c8	83 c2 19	 add	 edx, 25			; 00000019H
  001cb	52		 push	 edx
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001dc	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv153[ebp], 0
$LN25@draw_fligh:
  001e6	6a 71		 push	 113			; 00000071H
  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001ee	51		 push	 ecx
  001ef	69 95 20 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv145[ebp], 700
  001f9	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv153[ebp]
  001ff	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00206	ff d1		 call	 ecx
  00208	d9 5d e4	 fstp	 DWORD PTR _roll$[ebp]

; 973  : 	cos_roll = cos(roll);

  0020b	51		 push	 ecx
  0020c	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _roll$[ebp]
  00211	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00216	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0021b	d9 5d c0	 fstp	 DWORD PTR _cos_roll$[ebp]

; 974  : 	sin_roll = sin(roll);

  0021e	51		 push	 ecx
  0021f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _roll$[ebp]
  00224	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00229	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0022e	d9 5d bc	 fstp	 DWORD PTR _sin_roll$[ebp]

; 975  : 
; 976  : 	ASSERT (main_3d_env);

  00231	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?main_3d_env@@3PAUENV_3D@@A, 0 ; main_3d_env
  00238	75 18		 jne	 SHORT $LN9@draw_fligh
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  0023f	83 c0 1d	 add	 eax, 29			; 0000001dH
  00242	50		 push	 eax
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BBKBBMJK@main_3d_env@
  0024d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@draw_fligh:

; 977  : 
; 978  : 	// figure out on which screen pixel the flight path marker should be drawn
; 979  : 	focal_length = tan (main_3d_env->width_view_angle * 0.5);               // view angle (20, 60, 80 deg etc.)

  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00257	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0025c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00264	83 ec 08	 sub	 esp, 8
  00267	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0026c	e8 00 00 00 00	 call	 _tan
  00271	83 c4 08	 add	 esp, 8
  00274	d9 5d dc	 fstp	 DWORD PTR _focal_length$[ebp]

; 980  : 	pixels_per_rad = (main_3d_env->clip_xmax - main_3d_env->clip_xmin) * 0.5;  // resolution

  00277	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  0027c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00282	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00287	f3 0f 5c 41 30	 subss	 xmm0, DWORD PTR [ecx+48]
  0028c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00290	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00298	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0029c	f3 0f 11 45 e0	 movss	 DWORD PTR _pixels_per_rad$[ebp], xmm0

; 981  : 	pixels_per_rad /= focal_length;

  002a1	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  002a6	f3 0f 5e 45 dc	 divss	 xmm0, DWORD PTR _focal_length$[ebp]
  002ab	f3 0f 11 45 e0	 movss	 DWORD PTR _pixels_per_rad$[ebp], xmm0

; 982  : 
; 983  : 	fpm_x_offset = pilot_head_heading + cos_roll * flight_vector_x + sin_roll * (pitch - flight_vector_y);

  002b0	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _cos_roll$[ebp]
  002b5	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _flight_vector_x$[ebp]
  002ba	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  002c2	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _pitch$[ebp]
  002c7	f3 0f 5c 4d ec	 subss	 xmm1, DWORD PTR _flight_vector_y$[ebp]
  002cc	f3 0f 59 4d bc	 mulss	 xmm1, DWORD PTR _sin_roll$[ebp]
  002d1	f3 0f 58 c1	 addss	 xmm0, xmm1
  002d5	f3 0f 11 45 b8	 movss	 DWORD PTR _fpm_x_offset$[ebp], xmm0

; 984  : 	fpm_y_offset = head_pitch + cos_roll * (pitch - flight_vector_y) - sin_roll * flight_vector_x;

  002da	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  002df	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _flight_vector_y$[ebp]
  002e4	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _cos_roll$[ebp]
  002e9	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _head_pitch$[ebp]
  002ee	f3 0f 10 4d bc	 movss	 xmm1, DWORD PTR _sin_roll$[ebp]
  002f3	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _flight_vector_x$[ebp]
  002f8	f3 0f 5c c1	 subss	 xmm0, xmm1
  002fc	f3 0f 11 45 b4	 movss	 DWORD PTR _fpm_y_offset$[ebp], xmm0

; 985  : 	fpm_x_pixel_offset = pixels_per_rad * tan(fpm_x_offset);

  00301	51		 push	 ecx
  00302	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _fpm_x_offset$[ebp]
  00307	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030c	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  00311	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv472[ebp]
  00317	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv472[ebp]
  0031f	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  00324	f3 0f 11 45 d4	 movss	 DWORD PTR _fpm_x_pixel_offset$[ebp], xmm0

; 986  : 	fpm_y_pixel_offset = pixels_per_rad * tan(fpm_y_offset);

  00329	51		 push	 ecx
  0032a	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fpm_y_offset$[ebp]
  0032f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00334	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  00339	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv479[ebp]
  0033f	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv479[ebp]
  00347	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  0034c	f3 0f 11 45 d0	 movss	 DWORD PTR _fpm_y_pixel_offset$[ebp], xmm0

; 987  : 
; 988  : 
; 989  : 	// figure out which hud texture pixel lies on top the screen pixel
; 990  : 	hud_pixel_ratio = 1.0 /((active_2d_environment->vp.x_max - active_2d_environment->vp.x_min) * 0.5 / hud_screen_x_scale);

  00351	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00356	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  0035c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00361	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00365	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00369	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00371	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_screen_x_scale@@3MA
  00379	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0037d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00385	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00389	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0038d	f3 0f 11 45 cc	 movss	 DWORD PTR _hud_pixel_ratio$[ebp], xmm0

; 991  : 	fpm_hud_x_offset = fpm_x_pixel_offset * hud_pixel_ratio;

  00392	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _fpm_x_pixel_offset$[ebp]
  00397	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  0039c	f3 0f 11 45 c8	 movss	 DWORD PTR _fpm_hud_x_offset$[ebp], xmm0

; 992  : 	fpm_hud_y_offset = fpm_y_pixel_offset * hud_pixel_ratio;

  003a1	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _fpm_y_pixel_offset$[ebp]
  003a6	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  003ab	f3 0f 11 45 c4	 movss	 DWORD PTR _fpm_hud_y_offset$[ebp], xmm0

; 993  : 
; 994  : 	// draw the flight path marker on the hud
; 995  : 	if (fpm_hud_x_offset > HUD_WINDOW_X_MIN + 0.05 && fpm_hud_x_offset < HUD_WINDOW_X_MAX - 0.05 && fpm_hud_y_offset > HUD_WINDOW_Y_MIN + 0.05 && fpm_hud_y_offset < HUD_WINDOW_Y_MAX - 0.05)

  003b0	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _fpm_hud_x_offset$[ebp]
  003b5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfee666666666666
  003bd	76 62		 jbe	 SHORT $LN10@draw_fligh
  003bf	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _fpm_hud_x_offset$[ebp]
  003c4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fee5e353f7ced91
  003cc	66 0f 2f c8	 comisd	 xmm1, xmm0
  003d0	76 4f		 jbe	 SHORT $LN10@draw_fligh
  003d2	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _fpm_hud_y_offset$[ebp]
  003d7	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfee666666666666
  003df	76 40		 jbe	 SHORT $LN10@draw_fligh
  003e1	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _fpm_hud_y_offset$[ebp]
  003e6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fee5e353f7ced91
  003ee	66 0f 2f c8	 comisd	 xmm1, xmm0
  003f2	76 2d		 jbe	 SHORT $LN10@draw_fligh

; 996  : 		draw_hud_2d_mono_sprite (flight_path_marker, fpm_hud_x_offset, -fpm_hud_y_offset, hud_colour);

  003f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003f9	50		 push	 eax
  003fa	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _fpm_hud_y_offset$[ebp]
  003ff	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00406	51		 push	 ecx
  00407	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040c	51		 push	 ecx
  0040d	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fpm_hud_x_offset$[ebp]
  00412	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00417	68 00 00 00 00	 push	 OFFSET ?flight_path_marker@@3PADA
  0041c	e8 00 00 00 00	 call	 ?draw_hud_2d_mono_sprite@@YGXPADMMUREAL_COLOUR@@@Z ; draw_hud_2d_mono_sprite
$LN10@draw_fligh:

; 997  : 
; 998  : 
; 999  : 	// draw horizon line
; 1000 : 	horizon_pt_x = fpm_x_offset + sin_roll * flight_vector_y;

  00421	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _sin_roll$[ebp]
  00426	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _flight_vector_y$[ebp]
  0042b	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _fpm_x_offset$[ebp]
  00430	f3 0f 11 45 a8	 movss	 DWORD PTR _horizon_pt_x$[ebp], xmm0

; 1001 : 	horizon_pt_y = -(fpm_y_offset + cos_roll * flight_vector_y);

  00435	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _cos_roll$[ebp]
  0043a	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _flight_vector_y$[ebp]
  0043f	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _fpm_y_offset$[ebp]
  00444	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0044b	f3 0f 11 45 a4	 movss	 DWORD PTR _horizon_pt_y$[ebp], xmm0

; 1002 : 	horizon_hud_x = hud_pixel_ratio * pixels_per_rad * tan(horizon_pt_x);

  00450	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  00455	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  0045a	51		 push	 ecx
  0045b	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _horizon_pt_x$[ebp]
  00460	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00465	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR tv609[ebp], xmm0
  0046d	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  00472	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR tv504[ebp]
  00478	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv609[ebp]
  00480	f3 0f 59 85 1c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv504[ebp]
  00488	f3 0f 11 45 9c	 movss	 DWORD PTR _horizon_hud_x$[ebp], xmm0

; 1003 : 	horizon_hud_y = hud_pixel_ratio * pixels_per_rad * tan(horizon_pt_y);

  0048d	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  00492	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  00497	51		 push	 ecx
  00498	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR _horizon_pt_y$[ebp]
  0049d	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  004a2	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR tv611[ebp], xmm0
  004aa	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  004af	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR tv511[ebp]
  004b5	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv611[ebp]
  004bd	f3 0f 59 85 1c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv511[ebp]
  004c5	f3 0f 11 45 98	 movss	 DWORD PTR _horizon_hud_y$[ebp], xmm0

; 1004 : 
; 1005 : 	horizon_angle = cos(pilot_head_heading) * roll + sin(pilot_head_heading) * -pitch;

  004ca	51		 push	 ecx
  004cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  004dd	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv517[ebp]
  004e3	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv517[ebp]
  004eb	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _roll$[ebp]
  004f0	51		 push	 ecx
  004f1	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?pilot_head_heading@@3MA
  004f9	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  004fe	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR tv613[ebp], xmm0
  00506	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0050b	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv523[ebp]
  00511	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv523[ebp]
  00519	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _pitch$[ebp]
  0051e	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00525	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00529	f3 0f 10 8d 1c
	ff ff ff	 movss	 xmm1, DWORD PTR tv613[ebp]
  00531	f3 0f 58 c8	 addss	 xmm1, xmm0
  00535	f3 0f 11 4d b0	 movss	 DWORD PTR _horizon_angle$[ebp], xmm1

; 1006 : 	horizon_deg = fmod(fabs(deg(horizon_angle)), 180);

  0053a	68 b4 00 00 00	 push	 180			; 000000b4H
  0053f	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _horizon_angle$[ebp]
  00544	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0054c	51		 push	 ecx
  0054d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00552	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00557	51		 push	 ecx
  00558	d9 1c 24	 fstp	 DWORD PTR [esp]
  0055b	e8 00 00 00 00	 call	 ??$fmod@MHX@@YGNMH@Z	; fmod<float,int,void>
  00560	d9 5d a0	 fstp	 DWORD PTR _horizon_deg$[ebp]

; 1007 : 
; 1008 : 	if (horizon_deg < 89)  // my primitive horizon drawing algoritm assumes less than 90 degrees bank angle

  00563	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42b20000
  0056b	0f 2f 45 a0	 comiss	 xmm0, DWORD PTR _horizon_deg$[ebp]
  0056f	0f 86 72 03 00
	00		 jbe	 $LN5@draw_fligh

; 1009 : 	{
; 1010 : 		line_climb_ratio = tan(horizon_angle);

  00575	51		 push	 ecx
  00576	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _horizon_angle$[ebp]
  0057b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00580	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  00585	d9 5d ac	 fstp	 DWORD PTR _line_climb_ratio$[ebp]

; 1011 : 
; 1012 : 		left_hud_x = horizon_hud_x - 1.5;

  00588	f3 0f 5a 45 9c	 cvtss2sd xmm0, DWORD PTR _horizon_hud_x$[ebp]
  0058d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff8000000000000
  00595	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00599	f3 0f 11 45 94	 movss	 DWORD PTR _left_hud_x$[ebp], xmm0

; 1013 : 		left_hud_y = horizon_hud_y + 1.5 * -line_climb_ratio;

  0059e	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _horizon_hud_y$[ebp]
  005a3	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR _line_climb_ratio$[ebp]
  005a8	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  005af	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  005b3	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3ff8000000000000
  005bb	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c3	f3 0f 11 45 90	 movss	 DWORD PTR _left_hud_y$[ebp], xmm0

; 1014 : 		right_hud_x = horizon_hud_x + 1.5;

  005c8	f3 0f 5a 45 9c	 cvtss2sd xmm0, DWORD PTR _horizon_hud_x$[ebp]
  005cd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff8000000000000
  005d5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d9	f3 0f 11 45 8c	 movss	 DWORD PTR _right_hud_x$[ebp], xmm0

; 1015 : 		right_hud_y = horizon_hud_y + 1.5 * line_climb_ratio;

  005de	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _horizon_hud_y$[ebp]
  005e3	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _line_climb_ratio$[ebp]
  005e8	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3ff8000000000000
  005f0	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f8	f3 0f 11 45 88	 movss	 DWORD PTR _right_hud_y$[ebp], xmm0

; 1016 : 
; 1017 : 		if (clip_2d_line(&left_hud_x, &left_hud_y, &right_hud_x, &right_hud_y, -0.75, -0.75, 0.8, 0.8))

  005fd	51		 push	 ecx
  005fe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00606	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060b	51		 push	 ecx
  0060c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00614	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00619	51		 push	 ecx
  0061a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf400000
  00622	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00627	51		 push	 ecx
  00628	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf400000
  00630	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00635	8d 45 88	 lea	 eax, DWORD PTR _right_hud_y$[ebp]
  00638	50		 push	 eax
  00639	8d 4d 8c	 lea	 ecx, DWORD PTR _right_hud_x$[ebp]
  0063c	51		 push	 ecx
  0063d	8d 55 90	 lea	 edx, DWORD PTR _left_hud_y$[ebp]
  00640	52		 push	 edx
  00641	8d 45 94	 lea	 eax, DWORD PTR _left_hud_x$[ebp]
  00644	50		 push	 eax
  00645	e8 00 00 00 00	 call	 ?clip_2d_line@@YGFPAM000MMMM@Z ; clip_2d_line
  0064a	0f bf c8	 movsx	 ecx, ax
  0064d	85 c9		 test	 ecx, ecx
  0064f	0f 84 92 02 00
	00		 je	 $LN5@draw_fligh

; 1018 : 		{
; 1019 : 			float step = 0.05;

  00655	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0065d	f3 0f 11 45 84	 movss	 DWORD PTR _step$9[ebp], xmm0

; 1020 : 			float x, y;
; 1021 : 			float xstep = step * cos_roll;

  00662	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _step$9[ebp]
  00667	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _cos_roll$[ebp]
  0066c	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _xstep$6[ebp], xmm0

; 1022 : 			float ystep = xstep * line_climb_ratio;

  00674	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _xstep$6[ebp]
  0067c	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _line_climb_ratio$[ebp]
  00681	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _ystep$5[ebp], xmm0

; 1023 : 			ASSERT(left_hud_x != right_hud_x);

  00689	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _left_hud_x$[ebp]
  0068e	0f 2e 45 8c	 ucomiss xmm0, DWORD PTR _right_hud_x$[ebp]
  00692	9f		 lahf
  00693	f6 c4 44	 test	 ah, 68			; 00000044H
  00696	7a 18		 jp	 SHORT $LN13@draw_fligh
  00698	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  0069d	83 c0 4c	 add	 eax, 76			; 0000004cH
  006a0	50		 push	 eax
  006a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@
  006ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@draw_fligh:

; 1024 : 			ASSERT(xstep != 0);

  006b0	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _xstep$6[ebp]
  006b8	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  006bf	9f		 lahf
  006c0	f6 c4 44	 test	 ah, 68			; 00000044H
  006c3	7a 18		 jp	 SHORT $LN14@draw_fligh
  006c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  006ca	83 c0 4d	 add	 eax, 77			; 0000004dH
  006cd	50		 push	 eax
  006ce	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d3	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@
  006d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@draw_fligh:

; 1025 : 
; 1026 : 			// draw left side of horizon line
; 1027 : 			x = horizon_hud_x - 3*xstep;

  006dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  006e5	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  006ed	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _horizon_hud_x$[ebp]
  006f2	f3 0f 5c c8	 subss	 xmm1, xmm0
  006f6	f3 0f 11 4d 80	 movss	 DWORD PTR _x$8[ebp], xmm1

; 1028 : 			y = horizon_hud_y - 3*ystep;

  006fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  00703	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  0070b	f3 0f 10 4d 98	 movss	 xmm1, DWORD PTR _horizon_hud_y$[ebp]
  00710	f3 0f 5c c8	 subss	 xmm1, xmm0
  00714	f3 0f 11 8d 7c
	ff ff ff	 movss	 DWORD PTR _y$7[ebp], xmm1
$LN2@draw_fligh:

; 1029 : 			while (x > left_hud_x)

  0071c	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00721	0f 2f 45 94	 comiss	 xmm0, DWORD PTR _left_hud_x$[ebp]
  00725	0f 86 bf 00 00
	00		 jbe	 $LN3@draw_fligh

; 1030 : 			{
; 1031 : 				float x2, y2;
; 1032 : 				x2 = x - xstep;

  0072b	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00730	f3 0f 5c 85 78
	ff ff ff	 subss	 xmm0, DWORD PTR _xstep$6[ebp]
  00738	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _x2$4[ebp], xmm0

; 1033 : 				y2 = y - ystep;

  00740	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _y$7[ebp]
  00748	f3 0f 5c 85 74
	ff ff ff	 subss	 xmm0, DWORD PTR _ystep$5[ebp]
  00750	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _y2$3[ebp], xmm0

; 1034 : 
; 1035 : 				if (x <= right_hud_x)

  00758	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _right_hud_x$[ebp]
  0075d	0f 2f 45 80	 comiss	 xmm0, DWORD PTR _x$8[ebp]
  00761	72 40		 jb	 SHORT $LN15@draw_fligh

; 1036 : 					draw_2d_line(x, y, x2, y2, hud_colour);

  00763	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00768	50		 push	 eax
  00769	51		 push	 ecx
  0076a	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _y2$3[ebp]
  00772	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00777	51		 push	 ecx
  00778	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _x2$4[ebp]
  00780	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00785	51		 push	 ecx
  00786	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _y$7[ebp]
  0078e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00793	51		 push	 ecx
  00794	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00799	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0079e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN15@draw_fligh:

; 1037 : 
; 1038 : 				x -= 2*xstep;

  007a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  007ab	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  007b3	f3 0f 10 4d 80	 movss	 xmm1, DWORD PTR _x$8[ebp]
  007b8	f3 0f 5c c8	 subss	 xmm1, xmm0
  007bc	f3 0f 11 4d 80	 movss	 DWORD PTR _x$8[ebp], xmm1

; 1039 : 				y -= 2*ystep;

  007c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  007c9	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  007d1	f3 0f 10 8d 7c
	ff ff ff	 movss	 xmm1, DWORD PTR _y$7[ebp]
  007d9	f3 0f 5c c8	 subss	 xmm1, xmm0
  007dd	f3 0f 11 8d 7c
	ff ff ff	 movss	 DWORD PTR _y$7[ebp], xmm1

; 1040 : 			}

  007e5	e9 32 ff ff ff	 jmp	 $LN2@draw_fligh
$LN3@draw_fligh:

; 1041 : 
; 1042 : 			// draw right side of horizon line
; 1043 : 			x = horizon_hud_x + 3*xstep;

  007ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  007f2	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  007fa	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _horizon_hud_x$[ebp]
  007ff	f3 0f 11 45 80	 movss	 DWORD PTR _x$8[ebp], xmm0

; 1044 : 			y = horizon_hud_y + 3*ystep;

  00804	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  0080c	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  00814	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR _horizon_hud_y$[ebp]
  00819	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _y$7[ebp], xmm0
$LN4@draw_fligh:

; 1045 : 			while (x < right_hud_x)

  00821	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _right_hud_x$[ebp]
  00826	0f 2f 45 80	 comiss	 xmm0, DWORD PTR _x$8[ebp]
  0082a	0f 86 b7 00 00
	00		 jbe	 $LN5@draw_fligh

; 1046 : 			{
; 1047 : 				float x2, y2;
; 1048 : 				x2 = x + xstep;

  00830	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00835	f3 0f 58 85 78
	ff ff ff	 addss	 xmm0, DWORD PTR _xstep$6[ebp]
  0083d	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _x2$2[ebp], xmm0

; 1049 : 				y2 = y + ystep;

  00845	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _y$7[ebp]
  0084d	f3 0f 58 85 74
	ff ff ff	 addss	 xmm0, DWORD PTR _ystep$5[ebp]
  00855	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _y2$1[ebp], xmm0

; 1050 : 
; 1051 : 				if (x >= left_hud_x)

  0085d	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00862	0f 2f 45 94	 comiss	 xmm0, DWORD PTR _left_hud_x$[ebp]
  00866	72 40		 jb	 SHORT $LN16@draw_fligh

; 1052 : 					draw_2d_line(x, y, x2, y2, hud_colour);

  00868	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0086d	50		 push	 eax
  0086e	51		 push	 ecx
  0086f	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _y2$1[ebp]
  00877	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0087c	51		 push	 ecx
  0087d	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _x2$2[ebp]
  00885	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0088a	51		 push	 ecx
  0088b	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _y$7[ebp]
  00893	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00898	51		 push	 ecx
  00899	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _x$8[ebp]
  0089e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN16@draw_fligh:

; 1053 : 
; 1054 : 				x += 2*xstep;

  008a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  008b0	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  008b8	f3 0f 58 45 80	 addss	 xmm0, DWORD PTR _x$8[ebp]
  008bd	f3 0f 11 45 80	 movss	 DWORD PTR _x$8[ebp], xmm0

; 1055 : 				y += 2*ystep;

  008c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  008ca	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  008d2	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _y$7[ebp]
  008da	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _y$7[ebp], xmm0

; 1056 : 			}

  008e2	e9 3a ff ff ff	 jmp	 $LN4@draw_fligh
$LN5@draw_fligh:
$LN1@draw_fligh:

; 1057 : 		}
; 1058 : 	}
; 1059 : }

  008e7	5f		 pop	 edi
  008e8	5e		 pop	 esi
  008e9	5b		 pop	 ebx
  008ea	8b e5		 mov	 esp, ebp
  008ec	5d		 pop	 ebp
  008ed	c3		 ret	 0
?draw_flight_path_marker@@YGXXZ ENDP			; draw_flight_path_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?clip_2d_line@@YGFPAM000MMMM@Z
_TEXT	SEGMENT
tv293 = -84						; size = 8
tv240 = -84						; size = 8
tv94 = -84						; size = 4
tv90 = -84						; size = 4
tv77 = -84						; size = 4
tv73 = -84						; size = 4
tv95 = -80						; size = 4
tv91 = -80						; size = 4
tv78 = -80						; size = 4
tv74 = -80						; size = 4
tv221 = -78						; size = 2
tv129 = -78						; size = 2
tv80 = -78						; size = 2
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_ratio$ = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_xmin$ = 24						; size = 4
_ymin$ = 28						; size = 4
_xmax$ = 32						; size = 4
_ymax$ = 36						; size = 4
?clip_2d_line@@YGFPAM000MMMM@Z PROC			; clip_2d_line, COMDAT

; 853  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 854  : 	float ratio;
; 855  : 	float dx, dy;
; 856  : 
; 857  : 	dy = *y2 - *y1;

  00009	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00017	f3 0f 11 45 f4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 858  : 	if (fabs(dy) < 0.001)  // (close to) horizontal line

  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0002c	dd 5d ac	 fstp	 QWORD PTR tv240[ebp]
  0002f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00037	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv240[ebp]
  0003c	0f 86 00 01 00
	00		 jbe	 $LN2@clip_2d_li

; 859  : 	{
; 860  : 		if (*y1 > ymax || *y1 < ymin)  // line outside clip box

  00042	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00045	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00049	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  0004d	77 0d		 ja	 SHORT $LN4@clip_2d_li
  0004f	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00052	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00057	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0005a	76 07		 jbe	 SHORT $LN3@clip_2d_li
$LN4@clip_2d_li:

; 861  : 			return FALSE;

  0005c	33 c0		 xor	 eax, eax
  0005e	e9 1d 06 00 00	 jmp	 $LN1@clip_2d_li
$LN3@clip_2d_li:

; 862  : 
; 863  : 		*y2 = *y1;

  00063	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  00069	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 864  : 		*x1 = bound(*x1, xmin, xmax);

  0006d	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00070	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00075	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00078	76 0c		 jbe	 SHORT $LN36@clip_2d_li
  0007a	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  0007f	f3 0f 11 45 b0	 movss	 DWORD PTR tv74[ebp], xmm0
  00084	eb 2f		 jmp	 SHORT $LN37@clip_2d_li
$LN36@clip_2d_li:
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00089	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0008d	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  00091	76 0c		 jbe	 SHORT $LN34@clip_2d_li
  00093	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00098	f3 0f 11 45 ac	 movss	 DWORD PTR tv73[ebp], xmm0
  0009d	eb 0c		 jmp	 SHORT $LN35@clip_2d_li
$LN34@clip_2d_li:
  0009f	8b 55 08	 mov	 edx, DWORD PTR _x1$[ebp]
  000a2	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  000a6	f3 0f 11 45 ac	 movss	 DWORD PTR tv73[ebp], xmm0
$LN35@clip_2d_li:
  000ab	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv73[ebp]
  000b0	f3 0f 11 45 b0	 movss	 DWORD PTR tv74[ebp], xmm0
$LN37@clip_2d_li:
  000b5	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  000b8	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv74[ebp]
  000bd	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 865  : 		*x2 = bound(*x2, xmin, xmax);

  000c1	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  000c4	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  000c9	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  000cc	76 0c		 jbe	 SHORT $LN40@clip_2d_li
  000ce	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  000d3	f3 0f 11 45 b0	 movss	 DWORD PTR tv78[ebp], xmm0
  000d8	eb 2f		 jmp	 SHORT $LN41@clip_2d_li
$LN40@clip_2d_li:
  000da	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  000dd	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  000e1	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  000e5	76 0c		 jbe	 SHORT $LN38@clip_2d_li
  000e7	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  000ec	f3 0f 11 45 ac	 movss	 DWORD PTR tv77[ebp], xmm0
  000f1	eb 0c		 jmp	 SHORT $LN39@clip_2d_li
$LN38@clip_2d_li:
  000f3	8b 55 10	 mov	 edx, DWORD PTR _x2$[ebp]
  000f6	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  000fa	f3 0f 11 45 ac	 movss	 DWORD PTR tv77[ebp], xmm0
$LN39@clip_2d_li:
  000ff	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv77[ebp]
  00104	f3 0f 11 45 b0	 movss	 DWORD PTR tv78[ebp], xmm0
$LN41@clip_2d_li:
  00109	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0010c	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv78[ebp]
  00111	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 866  : 
; 867  : 		return *x1 != *x2;

  00115	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00118	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  0011b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0011f	0f 2e 01	 ucomiss xmm0, DWORD PTR [ecx]
  00122	9f		 lahf
  00123	f6 c4 44	 test	 ah, 68			; 00000044H
  00126	7b 0b		 jnp	 SHORT $LN42@clip_2d_li
  00128	ba 01 00 00 00	 mov	 edx, 1
  0012d	66 89 55 b2	 mov	 WORD PTR tv80[ebp], dx
  00131	eb 06		 jmp	 SHORT $LN43@clip_2d_li
$LN42@clip_2d_li:
  00133	33 c0		 xor	 eax, eax
  00135	66 89 45 b2	 mov	 WORD PTR tv80[ebp], ax
$LN43@clip_2d_li:
  00139	66 8b 45 b2	 mov	 ax, WORD PTR tv80[ebp]
  0013d	e9 3e 05 00 00	 jmp	 $LN1@clip_2d_li
$LN2@clip_2d_li:

; 868  : 	}
; 869  : 	dx = *x2 - *x1;

  00142	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00148	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0014c	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00150	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 870  : 	if (fabs(dx) < 0.001)  // (close to) vertical line

  00155	51		 push	 ecx
  00156	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00165	dd 5d ac	 fstp	 QWORD PTR tv293[ebp]
  00168	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00170	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv293[ebp]
  00175	0f 86 00 01 00
	00		 jbe	 $LN5@clip_2d_li

; 871  : 	{
; 872  : 		if (*x1 < xmin || *x1 > xmax) // line outside clip box

  0017b	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0017e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00183	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00186	77 0d		 ja	 SHORT $LN7@clip_2d_li
  00188	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0018b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0018f	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  00193	76 07		 jbe	 SHORT $LN6@clip_2d_li
$LN7@clip_2d_li:

; 873  : 			return FALSE;

  00195	33 c0		 xor	 eax, eax
  00197	e9 e4 04 00 00	 jmp	 $LN1@clip_2d_li
$LN6@clip_2d_li:

; 874  : 
; 875  : 		*x1 = *x2;

  0019c	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0019f	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  001a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a4	89 10		 mov	 DWORD PTR [eax], edx

; 876  : 		*y1 = bound(*y1, ymin, ymax);

  001a6	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  001a9	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  001ae	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  001b1	76 0c		 jbe	 SHORT $LN46@clip_2d_li
  001b3	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  001b8	f3 0f 11 45 b0	 movss	 DWORD PTR tv91[ebp], xmm0
  001bd	eb 2f		 jmp	 SHORT $LN47@clip_2d_li
$LN46@clip_2d_li:
  001bf	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  001c2	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  001c6	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  001ca	76 0c		 jbe	 SHORT $LN44@clip_2d_li
  001cc	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  001d1	f3 0f 11 45 ac	 movss	 DWORD PTR tv90[ebp], xmm0
  001d6	eb 0c		 jmp	 SHORT $LN45@clip_2d_li
$LN44@clip_2d_li:
  001d8	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  001db	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  001df	f3 0f 11 45 ac	 movss	 DWORD PTR tv90[ebp], xmm0
$LN45@clip_2d_li:
  001e4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv90[ebp]
  001e9	f3 0f 11 45 b0	 movss	 DWORD PTR tv91[ebp], xmm0
$LN47@clip_2d_li:
  001ee	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  001f1	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv91[ebp]
  001f6	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 877  : 		*y2 = bound(*y2, ymin, ymax);

  001fa	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  001fd	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00202	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00205	76 0c		 jbe	 SHORT $LN50@clip_2d_li
  00207	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0020c	f3 0f 11 45 b0	 movss	 DWORD PTR tv95[ebp], xmm0
  00211	eb 2f		 jmp	 SHORT $LN51@clip_2d_li
$LN50@clip_2d_li:
  00213	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  00216	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0021a	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  0021e	76 0c		 jbe	 SHORT $LN48@clip_2d_li
  00220	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00225	f3 0f 11 45 ac	 movss	 DWORD PTR tv94[ebp], xmm0
  0022a	eb 0c		 jmp	 SHORT $LN49@clip_2d_li
$LN48@clip_2d_li:
  0022c	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  0022f	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00233	f3 0f 11 45 ac	 movss	 DWORD PTR tv94[ebp], xmm0
$LN49@clip_2d_li:
  00238	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv94[ebp]
  0023d	f3 0f 11 45 b0	 movss	 DWORD PTR tv95[ebp], xmm0
$LN51@clip_2d_li:
  00242	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00245	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv95[ebp]
  0024a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 878  : 
; 879  : 		return *y1 != *y2;

  0024e	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00251	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  00254	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00258	0f 2e 01	 ucomiss xmm0, DWORD PTR [ecx]
  0025b	9f		 lahf
  0025c	f6 c4 44	 test	 ah, 68			; 00000044H
  0025f	7b 0b		 jnp	 SHORT $LN52@clip_2d_li
  00261	ba 01 00 00 00	 mov	 edx, 1
  00266	66 89 55 b2	 mov	 WORD PTR tv129[ebp], dx
  0026a	eb 06		 jmp	 SHORT $LN53@clip_2d_li
$LN52@clip_2d_li:
  0026c	33 c0		 xor	 eax, eax
  0026e	66 89 45 b2	 mov	 WORD PTR tv129[ebp], ax
$LN53@clip_2d_li:
  00272	66 8b 45 b2	 mov	 ax, WORD PTR tv129[ebp]
  00276	e9 05 04 00 00	 jmp	 $LN1@clip_2d_li
$LN5@clip_2d_li:

; 880  : 	}
; 881  : 
; 882  : 	ratio = dy / dx;

  0027b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  00280	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _dx$[ebp]
  00285	f3 0f 11 45 fc	 movss	 DWORD PTR _ratio$[ebp], xmm0

; 883  : 
; 884  : 	if (*x1 < xmin)

  0028a	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0028d	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00292	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00295	76 2d		 jbe	 SHORT $LN8@clip_2d_li

; 885  : 	{
; 886  : 		*y1 += (xmin - *x1) * ratio;

  00297	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0029a	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  0029f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  002a3	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  002a8	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  002ab	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  002af	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  002b2	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 887  : 		*x1 = xmin;

  002b6	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002b9	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  002be	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  002c2	eb 3c		 jmp	 SHORT $LN10@clip_2d_li
$LN8@clip_2d_li:

; 888  : 	}
; 889  : 	else if (*x1 > xmax)

  002c4	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002c7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002cb	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  002cf	76 2f		 jbe	 SHORT $LN10@clip_2d_li

; 890  : 	{
; 891  : 		*y1 -= (*x1 - xmax) * ratio;

  002d1	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002d4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002d8	f3 0f 5c 45 20	 subss	 xmm0, DWORD PTR _xmax$[ebp]
  002dd	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  002e2	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  002e5	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  002e9	f3 0f 5c c8	 subss	 xmm1, xmm0
  002ed	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  002f0	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 892  : 		*x1 = xmax;

  002f4	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002f7	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  002fc	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN10@clip_2d_li:

; 893  : 	}
; 894  : 
; 895  : 	if (*x2 < xmin)

  00300	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00303	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00308	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0030b	76 2d		 jbe	 SHORT $LN11@clip_2d_li

; 896  : 	{
; 897  : 		*y2 += (xmin - *x2) * ratio;

  0030d	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00310	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00315	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00319	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  0031e	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  00321	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00325	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00328	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 898  : 		*x2 = xmin;

  0032c	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0032f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00334	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00338	eb 3c		 jmp	 SHORT $LN13@clip_2d_li
$LN11@clip_2d_li:

; 899  : 	}
; 900  : 	else if (*x2 > xmax)

  0033a	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0033d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00341	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  00345	76 2f		 jbe	 SHORT $LN13@clip_2d_li

; 901  : 	{
; 902  : 		*y2 -= (*x2 - xmax) * ratio;

  00347	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0034a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0034e	f3 0f 5c 45 20	 subss	 xmm0, DWORD PTR _xmax$[ebp]
  00353	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  00358	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  0035b	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0035f	f3 0f 5c c8	 subss	 xmm1, xmm0
  00363	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00366	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 903  : 		*x2 = xmax;

  0036a	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0036d	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00372	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN13@clip_2d_li:

; 904  : 	}
; 905  : 
; 906  : 	if ((*y1 < ymin && *y2 < ymin) || (*y1 > ymax && *y2 > ymax))

  00376	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00379	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0037e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00381	76 0d		 jbe	 SHORT $LN16@clip_2d_li
  00383	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00386	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0038b	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0038e	77 1a		 ja	 SHORT $LN15@clip_2d_li
$LN16@clip_2d_li:
  00390	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00393	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00397	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  0039b	76 14		 jbe	 SHORT $LN14@clip_2d_li
  0039d	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  003a0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003a4	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  003a8	76 07		 jbe	 SHORT $LN14@clip_2d_li
$LN15@clip_2d_li:

; 907  : 		return FALSE;

  003aa	33 c0		 xor	 eax, eax
  003ac	e9 cf 02 00 00	 jmp	 $LN1@clip_2d_li
$LN14@clip_2d_li:

; 908  : 
; 909  : 	if (*y1 < ymin)

  003b1	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  003b4	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  003b9	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  003bc	76 7b		 jbe	 SHORT $LN17@clip_2d_li

; 910  : 	{
; 911  : 		ASSERT(ratio > 0);

  003be	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _ratio$[ebp]
  003c3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  003ca	77 18		 ja	 SHORT $LN19@clip_2d_li
  003cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  003d1	83 c0 3a	 add	 eax, 58			; 0000003aH
  003d4	50		 push	 eax
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003da	68 00 00 00 00	 push	 OFFSET ??_C@_09FMHJKMJN@ratio?5?$DO?50@
  003df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@clip_2d_li:

; 912  : 		*x1 += (ymin - *y1) / ratio;

  003e4	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  003e7	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  003ec	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  003f0	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  003f5	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  003f8	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  003fc	8b 55 08	 mov	 edx, DWORD PTR _x1$[ebp]
  003ff	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 913  : 		*y1 = ymin;

  00403	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00406	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0040b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 914  : 		ASSERT(*x1 < xmax);

  0040f	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00412	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00417	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0041a	77 18		 ja	 SHORT $LN20@clip_2d_li
  0041c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00421	83 c0 3d	 add	 eax, 61			; 0000003dH
  00424	50		 push	 eax
  00425	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@
  0042f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@clip_2d_li:

; 915  : 	}

  00434	e9 82 00 00 00	 jmp	 $LN23@clip_2d_li
$LN17@clip_2d_li:

; 916  : 	else if (*y1 > ymax)

  00439	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0043c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00440	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  00444	76 75		 jbe	 SHORT $LN23@clip_2d_li

; 917  : 	{
; 918  : 		ASSERT(ratio < 0);

  00446	0f 57 c0	 xorps	 xmm0, xmm0
  00449	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _ratio$[ebp]
  0044d	77 18		 ja	 SHORT $LN22@clip_2d_li
  0044f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00454	83 c0 41	 add	 eax, 65			; 00000041H
  00457	50		 push	 eax
  00458	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0045d	68 00 00 00 00	 push	 OFFSET ??_C@_09PGHAGEBG@ratio?5?$DM?50@
  00462	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN22@clip_2d_li:

; 919  : 		*x1 -= (*y1 - ymax) / ratio;

  00467	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0046a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0046e	f3 0f 5c 45 24	 subss	 xmm0, DWORD PTR _ymax$[ebp]
  00473	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  00478	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  0047b	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0047f	f3 0f 5c c8	 subss	 xmm1, xmm0
  00483	8b 55 08	 mov	 edx, DWORD PTR _x1$[ebp]
  00486	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 920  : 		*y1 = ymax;

  0048a	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0048d	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00492	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 921  : 		ASSERT(*x1 < xmax);

  00496	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00499	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  0049e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  004a1	77 18		 ja	 SHORT $LN23@clip_2d_li
  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  004a8	83 c0 44	 add	 eax, 68			; 00000044H
  004ab	50		 push	 eax
  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@
  004b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN23@clip_2d_li:

; 922  : 	}
; 923  : 
; 924  : 	if (*y2 < ymin)

  004bb	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  004be	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  004c3	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  004c6	76 76		 jbe	 SHORT $LN24@clip_2d_li

; 925  : 	{
; 926  : 		ASSERT(ratio < 0);

  004c8	0f 57 c0	 xorps	 xmm0, xmm0
  004cb	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _ratio$[ebp]
  004cf	77 18		 ja	 SHORT $LN26@clip_2d_li
  004d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  004d6	83 c0 49	 add	 eax, 73			; 00000049H
  004d9	50		 push	 eax
  004da	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004df	68 00 00 00 00	 push	 OFFSET ??_C@_09PGHAGEBG@ratio?5?$DM?50@
  004e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@clip_2d_li:

; 927  : 		*x2 += (ymin - *y2) / ratio;

  004e9	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  004ec	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  004f1	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  004f5	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  004fa	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  004fd	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00501	8b 55 10	 mov	 edx, DWORD PTR _x2$[ebp]
  00504	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 928  : 		*y2 = ymin;

  00508	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0050b	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00510	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 929  : 		ASSERT(*x2 < xmax);

  00514	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00517	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  0051c	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0051f	77 18		 ja	 SHORT $LN27@clip_2d_li
  00521	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00526	83 c0 4c	 add	 eax, 76			; 0000004cH
  00529	50		 push	 eax
  0052a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@
  00534	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN27@clip_2d_li:

; 930  : 	}

  00539	e9 87 00 00 00	 jmp	 $LN30@clip_2d_li
$LN24@clip_2d_li:

; 931  : 	else if (*y2 > ymax)

  0053e	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00541	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00545	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  00549	76 7a		 jbe	 SHORT $LN30@clip_2d_li

; 932  : 	{
; 933  : 		ASSERT(ratio > 0);

  0054b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _ratio$[ebp]
  00550	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00557	77 18		 ja	 SHORT $LN29@clip_2d_li
  00559	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  0055e	83 c0 50	 add	 eax, 80			; 00000050H
  00561	50		 push	 eax
  00562	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00567	68 00 00 00 00	 push	 OFFSET ??_C@_09FMHJKMJN@ratio?5?$DO?50@
  0056c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN29@clip_2d_li:

; 934  : 		*x2 -= (*y2 - ymax) / ratio;

  00571	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00574	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00578	f3 0f 5c 45 24	 subss	 xmm0, DWORD PTR _ymax$[ebp]
  0057d	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  00582	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  00585	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  00589	f3 0f 5c c8	 subss	 xmm1, xmm0
  0058d	8b 55 10	 mov	 edx, DWORD PTR _x2$[ebp]
  00590	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 935  : 		*y2 = ymax;

  00594	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00597	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  0059c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 936  : 		ASSERT(*x2 < xmax);

  005a0	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  005a3	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  005a8	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  005ab	77 18		 ja	 SHORT $LN30@clip_2d_li
  005ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  005b2	83 c0 53	 add	 eax, 83			; 00000053H
  005b5	50		 push	 eax
  005b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005bb	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@
  005c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@clip_2d_li:

; 937  : 	}
; 938  : 
; 939  : 	ASSERT(*x1 >= xmin && *x1 <= xmax && *x2 >= xmin && *x2 <= xmax &&

  005c5	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  005c8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005cc	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _xmin$[ebp]
  005d0	72 5b		 jb	 SHORT $LN32@clip_2d_li
  005d2	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  005d5	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  005da	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  005dd	72 4e		 jb	 SHORT $LN32@clip_2d_li
  005df	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  005e2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005e6	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _xmin$[ebp]
  005ea	72 41		 jb	 SHORT $LN32@clip_2d_li
  005ec	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  005ef	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  005f4	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  005f7	72 34		 jb	 SHORT $LN32@clip_2d_li
  005f9	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  005fc	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00600	0f 2f 45 1c	 comiss	 xmm0, DWORD PTR _ymin$[ebp]
  00604	72 27		 jb	 SHORT $LN32@clip_2d_li
  00606	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00609	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  0060e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00611	72 1a		 jb	 SHORT $LN32@clip_2d_li
  00613	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00616	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0061a	0f 2f 45 1c	 comiss	 xmm0, DWORD PTR _ymin$[ebp]
  0061e	72 0d		 jb	 SHORT $LN32@clip_2d_li
  00620	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00623	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00628	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0062b	73 18		 jae	 SHORT $LN31@clip_2d_li
$LN32@clip_2d_li:
  0062d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00632	83 c0 57	 add	 eax, 87			; 00000057H
  00635	50		 push	 eax
  00636	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0063b	68 00 00 00 00	 push	 OFFSET ??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@
  00640	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN31@clip_2d_li:

; 940  : 		   *y1 >= ymin && *y1 <= ymax && *y2 >= ymin && *y2 <= ymax);
; 941  : 
; 942  : 	return *x1 != *x2 && *y1 != *y2;

  00645	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00648	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  0064b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0064f	0f 2e 01	 ucomiss xmm0, DWORD PTR [ecx]
  00652	9f		 lahf
  00653	f6 c4 44	 test	 ah, 68			; 00000044H
  00656	7b 1e		 jnp	 SHORT $LN54@clip_2d_li
  00658	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  0065b	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0065e	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00662	0f 2e 00	 ucomiss xmm0, DWORD PTR [eax]
  00665	9f		 lahf
  00666	f6 c4 44	 test	 ah, 68			; 00000044H
  00669	7b 0b		 jnp	 SHORT $LN54@clip_2d_li
  0066b	b9 01 00 00 00	 mov	 ecx, 1
  00670	66 89 4d b2	 mov	 WORD PTR tv221[ebp], cx
  00674	eb 06		 jmp	 SHORT $LN55@clip_2d_li
$LN54@clip_2d_li:
  00676	33 d2		 xor	 edx, edx
  00678	66 89 55 b2	 mov	 WORD PTR tv221[ebp], dx
$LN55@clip_2d_li:
  0067c	66 8b 45 b2	 mov	 ax, WORD PTR tv221[ebp]
$LN1@clip_2d_li:

; 943  : }

  00680	5f		 pop	 edi
  00681	5e		 pop	 esi
  00682	5b		 pop	 ebx
  00683	8b e5		 mov	 esp, ebp
  00685	5d		 pop	 ebp
  00686	c2 20 00	 ret	 32			; 00000020H
?clip_2d_line@@YGFPAM000MMMM@Z ENDP			; clip_2d_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_steerpoint_tadpole@@YGXXZ
_TEXT	SEGMENT
tv188 = -140						; size = 8
tv180 = -140						; size = 8
tv189 = -132						; size = 8
tv181 = -132						; size = 8
tv136 = -132						; size = 4
tv81 = -132						; size = 4
tv128 = -128						; size = 4
tv73 = -128						; size = 4
_visibility$1 = -60					; size = 4
_command_heading$2 = -56				; size = 4
_bearing$3 = -52					; size = 4
_dz$4 = -48						; size = 4
_dx$5 = -44						; size = 4
_y$6 = -40						; size = 4
_x$7 = -36						; size = 4
_j$8 = -32						; size = 4
_i$9 = -28						; size = 4
_waypoint_position$10 = -24				; size = 12
_gunship_position$11 = -12				; size = 4
_wp$12 = -8						; size = 4
_heading$13 = -4					; size = 4
?draw_steerpoint_tadpole@@YGXXZ PROC			; draw_steerpoint_tadpole, COMDAT

; 774  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 775  : 	if (!viper_damage.navigation_computer)

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?viper_damage@@3TVIPER_DAMAGE_FLAGS@@A ; viper_damage
  00011	c1 e8 05	 shr	 eax, 5
  00014	83 e0 01	 and	 eax, 1
  00017	0f 85 16 04 00
	00		 jne	 $LN3@draw_steer

; 776  : 	{
; 777  : 		float heading = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_HEADING);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN13@draw_steer
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d 80	 mov	 DWORD PTR tv73[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN14@draw_steer
$LN13@draw_steer:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA
  00038	83 c2 03	 add	 edx, 3
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN14@draw_steer:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 0c		 je	 SHORT $LN15@draw_steer
  0005c	c7 85 7c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv81[ebp], 52	; 00000034H
  00066	eb 24		 jmp	 SHORT $LN16@draw_steer
$LN15@draw_steer:
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA
  0006e	83 c2 03	 add	 edx, 3
  00071	52		 push	 edx
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00082	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN16@draw_steer:
  0008c	6a 34		 push	 52			; 00000034H
  0008e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00094	51		 push	 ecx
  00095	69 55 80 bc 02
	00 00		 imul	 edx, DWORD PTR tv73[ebp], 700
  0009c	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv81[ebp]
  000a2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000a9	ff d1		 call	 ecx
  000ab	d9 5d fc	 fstp	 DWORD PTR _heading$13[ebp]

; 778  : 
; 779  : 		entity
; 780  : 			*wp;
; 781  : 
; 782  : 		wp = get_local_entity_current_waypoint(get_gunship_entity());

  000ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_waypoint
  000b9	89 45 f8	 mov	 DWORD PTR _wp$12[ebp], eax

; 783  : 
; 784  : 		if (wp)

  000bc	83 7d f8 00	 cmp	 DWORD PTR _wp$12[ebp], 0
  000c0	0f 84 6d 03 00
	00		 je	 $LN3@draw_steer

; 785  : 		{
; 786  : 			vec3d
; 787  : 				*gunship_position,
; 788  : 				waypoint_position;
; 789  : 
; 790  : 			float
; 791  : 				i,
; 792  : 				j,
; 793  : 				x,
; 794  : 				y = 0.1,

  000c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  000ce	f3 0f 11 45 d8	 movss	 DWORD PTR _y$6[ebp], xmm0

; 795  : 				dx,
; 796  : 				dz,
; 797  : 				bearing,
; 798  : 				command_heading;
; 799  : 
; 800  : 			object_3d_visibility
; 801  : 				visibility;
; 802  : 
; 803  : 			gunship_position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  000d3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000da	74 0c		 je	 SHORT $LN17@draw_steer
  000dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	89 4d 80	 mov	 DWORD PTR tv128[ebp], ecx
  000e6	eb 21		 jmp	 SHORT $LN18@draw_steer
$LN17@draw_steer:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA
  000ee	83 c2 1d	 add	 edx, 29			; 0000001dH
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN18@draw_steer:
  00109	b9 01 00 00 00	 mov	 ecx, 1
  0010e	85 c9		 test	 ecx, ecx
  00110	74 0c		 je	 SHORT $LN19@draw_steer
  00112	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv136[ebp], 8
  0011c	eb 24		 jmp	 SHORT $LN20@draw_steer
$LN19@draw_steer:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_steerpoint_tadpole@@YGXXZ@4JA
  00124	83 c2 1d	 add	 edx, 29			; 0000001dH
  00127	52		 push	 edx
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00138	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN20@draw_steer:
  00142	6a 08		 push	 8
  00144	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0014a	51		 push	 ecx
  0014b	6b 55 80 60	 imul	 edx, DWORD PTR tv128[ebp], 96
  0014f	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  00155	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0015c	ff d1		 call	 ecx
  0015e	89 45 f4	 mov	 DWORD PTR _gunship_position$11[ebp], eax

; 804  : 			get_waypoint_display_position (get_gunship_entity (), wp, &waypoint_position);

  00161	8d 45 e8	 lea	 eax, DWORD PTR _waypoint_position$10[ebp]
  00164	50		 push	 eax
  00165	8b 4d f8	 mov	 ecx, DWORD PTR _wp$12[ebp]
  00168	51		 push	 ecx
  00169	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0016f	52		 push	 edx
  00170	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 805  : 
; 806  : 			dx = waypoint_position.x - gunship_position->x;

  00175	8b 45 f4	 mov	 eax, DWORD PTR _gunship_position$11[ebp]
  00178	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _waypoint_position$10[ebp]
  0017d	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00181	f3 0f 11 45 d4	 movss	 DWORD PTR _dx$5[ebp], xmm0

; 807  : 			dz = waypoint_position.z - gunship_position->z;

  00186	8b 45 f4	 mov	 eax, DWORD PTR _gunship_position$11[ebp]
  00189	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _waypoint_position$10[ebp+8]
  0018e	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00193	f3 0f 11 45 d0	 movss	 DWORD PTR _dz$4[ebp], xmm0

; 808  : 
; 809  : 			bearing = atan2 (dx, dz);

  00198	51		 push	 ecx
  00199	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _dz$4[ebp]
  0019e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a3	51		 push	 ecx
  001a4	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _dx$5[ebp]
  001a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ae	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  001b3	d9 5d cc	 fstp	 DWORD PTR _bearing$3[ebp]

; 810  : 			command_heading = bearing - heading;

  001b6	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _bearing$3[ebp]
  001bb	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _heading$13[ebp]
  001c0	f3 0f 11 45 c8	 movss	 DWORD PTR _command_heading$2[ebp], xmm0

; 811  : 
; 812  : 			if (command_heading > rad (180.0))

  001c5	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _command_heading$2[ebp]
  001ca	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  001d2	76 18		 jbe	 SHORT $LN4@draw_steer

; 813  : 				command_heading -= rad (360.0);

  001d4	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _command_heading$2[ebp]
  001d9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  001e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e5	f3 0f 11 45 c8	 movss	 DWORD PTR _command_heading$2[ebp], xmm0
  001ea	eb 29		 jmp	 SHORT $LN6@draw_steer
$LN4@draw_steer:

; 814  : 			else if (command_heading < rad (-180.0))

  001ec	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _command_heading$2[ebp]
  001f1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  001f9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001fd	76 16		 jbe	 SHORT $LN6@draw_steer

; 815  : 				command_heading += rad (360.0);

  001ff	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _command_heading$2[ebp]
  00204	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  0020c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00210	f3 0f 11 45 c8	 movss	 DWORD PTR _command_heading$2[ebp], xmm0
$LN6@draw_steer:

; 816  : 
; 817  : 			visibility = get_position_3d_screen_coordinates (&waypoint_position, &i, &j);

  00215	8d 45 e0	 lea	 eax, DWORD PTR _j$8[ebp]
  00218	50		 push	 eax
  00219	8d 4d e4	 lea	 ecx, DWORD PTR _i$9[ebp]
  0021c	51		 push	 ecx
  0021d	8d 55 e8	 lea	 edx, DWORD PTR _waypoint_position$10[ebp]
  00220	52		 push	 edx
  00221	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates
  00226	89 45 c4	 mov	 DWORD PTR _visibility$1[ebp], eax

; 818  : 			if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  00229	83 7d c4 01	 cmp	 DWORD PTR _visibility$1[ebp], 1
  0022d	74 0a		 je	 SHORT $LN9@draw_steer
  0022f	83 7d c4 02	 cmp	 DWORD PTR _visibility$1[ebp], 2
  00233	0f 85 12 01 00
	00		 jne	 $LN7@draw_steer
$LN9@draw_steer:

; 819  : 			{
; 820  : 				transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  00239	8d 45 e0	 lea	 eax, DWORD PTR _j$8[ebp]
  0023c	50		 push	 eax
  0023d	8d 4d e4	 lea	 ecx, DWORD PTR _i$9[ebp]
  00240	51		 push	 ecx
  00241	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 821  : 
; 822  : 				get_2d_world_position (i, j, &x, &y);

  00246	8d 45 d8	 lea	 eax, DWORD PTR _y$6[ebp]
  00249	50		 push	 eax
  0024a	8d 4d dc	 lea	 ecx, DWORD PTR _x$7[ebp]
  0024d	51		 push	 ecx
  0024e	51		 push	 ecx
  0024f	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _j$8[ebp]
  00254	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00259	51		 push	 ecx
  0025a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _i$9[ebp]
  0025f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00264	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 823  : 				x = bound(x, -0.8, 0.8);

  00269	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _x$7[ebp]
  0026e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfe999999999999a
  00276	66 0f 2f c8	 comisd	 xmm1, xmm0
  0027a	76 12		 jbe	 SHORT $LN23@draw_steer
  0027c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfe999999999999a
  00284	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv181[ebp], xmm0
  0028c	eb 3e		 jmp	 SHORT $LN24@draw_steer
$LN23@draw_steer:
  0028e	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _x$7[ebp]
  00293	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fe999999999999a
  0029b	76 12		 jbe	 SHORT $LN21@draw_steer
  0029d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe999999999999a
  002a5	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv180[ebp], xmm0
  002ad	eb 0d		 jmp	 SHORT $LN22@draw_steer
$LN21@draw_steer:
  002af	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _x$7[ebp]
  002b4	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv180[ebp], xmm0
$LN22@draw_steer:
  002bc	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv180[ebp]
  002c4	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv181[ebp], xmm0
$LN24@draw_steer:
  002cc	f2 0f 5a 85 7c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv181[ebp]
  002d4	f3 0f 11 45 dc	 movss	 DWORD PTR _x$7[ebp], xmm0

; 824  : 				y = bound(y, -0.2, 0.2);

  002d9	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _y$6[ebp]
  002de	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfc999999999999a
  002e6	66 0f 2f c8	 comisd	 xmm1, xmm0
  002ea	76 12		 jbe	 SHORT $LN27@draw_steer
  002ec	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfc999999999999a
  002f4	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv189[ebp], xmm0
  002fc	eb 3e		 jmp	 SHORT $LN28@draw_steer
$LN27@draw_steer:
  002fe	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _y$6[ebp]
  00303	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fc999999999999a
  0030b	76 12		 jbe	 SHORT $LN25@draw_steer
  0030d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00315	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv188[ebp], xmm0
  0031d	eb 0d		 jmp	 SHORT $LN26@draw_steer
$LN25@draw_steer:
  0031f	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _y$6[ebp]
  00324	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv188[ebp], xmm0
$LN26@draw_steer:
  0032c	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv188[ebp]
  00334	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv189[ebp], xmm0
$LN28@draw_steer:
  0033c	f2 0f 5a 85 7c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv189[ebp]
  00344	f3 0f 11 45 d8	 movss	 DWORD PTR _y$6[ebp], xmm0

; 825  : 			}
; 826  : 			else

  00349	eb 37		 jmp	 SHORT $LN11@draw_steer
$LN7@draw_steer:

; 827  : 			{
; 828  : 				y = 0.2;

  0034b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00353	f3 0f 11 45 d8	 movss	 DWORD PTR _y$6[ebp], xmm0

; 829  : 				if (command_heading < 0.0)

  00358	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _command_heading$2[ebp]
  0035d	0f 57 c9	 xorps	 xmm1, xmm1
  00360	66 0f 2f c8	 comisd	 xmm1, xmm0
  00364	76 0f		 jbe	 SHORT $LN10@draw_steer

; 830  : 					x = -0.8;

  00366	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  0036e	f3 0f 11 45 dc	 movss	 DWORD PTR _x$7[ebp], xmm0

; 831  : 				else

  00373	eb 0d		 jmp	 SHORT $LN11@draw_steer
$LN10@draw_steer:

; 832  : 					x = 0.8;

  00375	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0037d	f3 0f 11 45 dc	 movss	 DWORD PTR _x$7[ebp], xmm0
$LN11@draw_steer:

; 833  : 			}
; 834  : 
; 835  : 			draw_2d_circle(x, y, 0.03, hud_colour);

  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00387	50		 push	 eax
  00388	51		 push	 ecx
  00389	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3cf5c28f
  00391	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00396	51		 push	 ecx
  00397	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y$6[ebp]
  0039c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a1	51		 push	 ecx
  003a2	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$7[ebp]
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 836  : 
; 837  : 			set_2d_instance_rotation (hud_env, -command_heading);

  003b1	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _command_heading$2[ebp]
  003b6	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003bd	51		 push	 ecx
  003be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  003c8	50		 push	 eax
  003c9	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 838  : 			set_2d_instance_position (hud_env, x, y);

  003ce	51		 push	 ecx
  003cf	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y$6[ebp]
  003d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d9	51		 push	 ecx
  003da	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$7[ebp]
  003df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  003e9	50		 push	 eax
  003ea	e8 00 00 00 00	 call	 ?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z ; set_2d_instance_position

; 839  : 
; 840  : 			draw_2d_line(0.0, 0.03, 0.0, 0.10, hud_colour);

  003ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003f4	50		 push	 eax
  003f5	51		 push	 ecx
  003f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  003fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00403	51		 push	 ecx
  00404	0f 57 c0	 xorps	 xmm0, xmm0
  00407	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040c	51		 push	 ecx
  0040d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3cf5c28f
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	51		 push	 ecx
  0041b	0f 57 c0	 xorps	 xmm0, xmm0
  0041e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00423	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 841  : 
; 842  : 			reset_2d_instance (hud_env);

  00428	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0042d	50		 push	 eax
  0042e	e8 00 00 00 00	 call	 ?reset_2d_instance@@YGXPAUENV_2D@@@Z ; reset_2d_instance
$LN3@draw_steer:

; 843  : 		}
; 844  : 	}
; 845  : }

  00433	5f		 pop	 edi
  00434	5e		 pop	 esi
  00435	5b		 pop	 ebx
  00436	8b e5		 mov	 esp, ebp
  00438	5d		 pop	 ebp
  00439	c3		 ret	 0
?draw_steerpoint_tadpole@@YGXXZ ENDP			; draw_steerpoint_tadpole
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_heading_scale@@YGXXZ
_TEXT	SEGMENT
tv78 = -168						; size = 4
tv399 = -164						; size = 4
tv332 = -164						; size = 4
tv232 = -164						; size = 4
tv230 = -164						; size = 4
tv70 = -164						; size = 4
_buffer$1 = -96						; size = 8
_x_adjust$2 = -88					; size = 4
_heading_readout$3 = -84				; size = 4
_buffer$4 = -80						; size = 8
_x_adjust$5 = -72					; size = 4
_tick_type$ = -68					; size = 4
_int_heading_step_5$ = -64				; size = 4
_loop$ = -60						; size = 4
_mod_heading_step_5$ = -56				; size = 4
_heading_step_5$ = -52					; size = 4
_heading$ = -48						; size = 4
_aircraft_heading$ = -44				; size = 4
_u$ = -40						; size = 4
_x$ = -36						; size = 4
_mfd_vp_x_max$ = -32					; size = 4
_mfd_vp_x_min$ = -28					; size = 4
_heading_tick_x_spacing$ = -24				; size = 4
_heading_width_ratio$ = -20				; size = 4
_tick_bottom$ = -16					; size = 4
_tick_top$ = -12					; size = 4
_digital_readout_y$ = -8				; size = 4
_y_adjust$ = -4						; size = 4
?draw_heading_scale@@YGXXZ PROC				; draw_heading_scale, COMDAT

; 655  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 656  : 	const float
; 657  : 		y_adjust			  		= -8.0,

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  00014	f3 0f 11 45 fc	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 658  : 		digital_readout_y           = 0.9,

  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00021	f3 0f 11 45 f8	 movss	 DWORD PTR _digital_readout_y$[ebp], xmm0

; 659  : 		tick_top                    = 0.85,

  00026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  0002e	f3 0f 11 45 f4	 movss	 DWORD PTR _tick_top$[ebp], xmm0

; 660  : 		tick_bottom                 = 0.85 - 0.075,

  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f466666
  0003b	f3 0f 11 45 f0	 movss	 DWORD PTR _tick_bottom$[ebp], xmm0

; 661  : 		heading_width_ratio	    	= 0.9,

  00040	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00048	f3 0f 11 45 ec	 movss	 DWORD PTR _heading_width_ratio$[ebp], xmm0

; 662  : 		heading_tick_x_spacing      = heading_width_ratio / 5;

  0004d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e3851eb
  00055	f3 0f 11 45 e8	 movss	 DWORD PTR _heading_tick_x_spacing$[ebp], xmm0

; 663  : 
; 664  : 
; 665  : 	float
; 666  : 		mfd_vp_x_min,
; 667  : 		mfd_vp_x_max,
; 668  : 		x,
; 669  : 		u,
; 670  : 		aircraft_heading = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_HEADING),

  0005a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00061	74 0f		 je	 SHORT $LN11@draw_headi
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00070	eb 24		 jmp	 SHORT $LN12@draw_headi
$LN11@draw_headi:
  00072	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
  00078	83 c2 0f	 add	 edx, 15			; 0000000fH
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN12@draw_headi:
  00096	b9 01 00 00 00	 mov	 ecx, 1
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 0c		 je	 SHORT $LN13@draw_headi
  0009f	c7 85 58 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv78[ebp], 52	; 00000034H
  000a9	eb 24		 jmp	 SHORT $LN14@draw_headi
$LN13@draw_headi:
  000ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
  000b1	83 c2 0f	 add	 edx, 15			; 0000000fH
  000b4	52		 push	 edx
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c5	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN14@draw_headi:
  000cf	6a 34		 push	 52			; 00000034H
  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000d7	51		 push	 ecx
  000d8	69 95 5c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv70[ebp], 700
  000e2	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  000e8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000ef	ff d1		 call	 ecx
  000f1	d9 5d d4	 fstp	 DWORD PTR _aircraft_heading$[ebp]

; 671  : 		heading = fmod(aircraft_heading - pilot_head_heading, 360.0f),

  000f4	51		 push	 ecx
  000f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43b40000
  000fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00102	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _aircraft_heading$[ebp]
  00107	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0010f	51		 push	 ecx
  00110	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00115	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0011a	d9 5d d0	 fstp	 DWORD PTR _heading$[ebp]

; 672  : 		heading_step_5,
; 673  : 		mod_heading_step_5;
; 674  : 
; 675  : 	int
; 676  : 		loop,
; 677  : 		int_heading_step_5,
; 678  : 		tick_type;
; 679  : 
; 680  : 	set_mono_font_type (MONO_FONT_TYPE_5X9);

  0011d	6a 02		 push	 2
  0011f	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 681  : 
; 682  : 	if (heading < 0.0)

  00124	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  00129	0f 57 c9	 xorps	 xmm1, xmm1
  0012c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00130	76 12		 jbe	 SHORT $LN5@draw_headi

; 683  : 		heading += 2 * PI;

  00132	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00137	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  0013f	f3 0f 11 45 d0	 movss	 DWORD PTR _heading$[ebp], xmm0
$LN5@draw_headi:

; 684  : 
; 685  : 	//
; 686  : 	// adjust 2D environment for heading scale clipping
; 687  : 	//
; 688  : 
; 689  : 	get_2d_float_screen_x_coordinate (0.0, &u);

  00144	8d 45 d8	 lea	 eax, DWORD PTR _u$[ebp]
  00147	50		 push	 eax
  00148	51		 push	 ecx
  00149	0f 57 c0	 xorps	 xmm0, xmm0
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?get_2d_float_screen_x_coordinate@@YGXMPAM@Z ; get_2d_float_screen_x_coordinate

; 690  : 
; 691  : 	set_2d_window (hud_env, HDG_WINDOW_X_MIN * heading_width_ratio, HDG_WINDOW_Y_MIN, HDG_WINDOW_X_MAX * heading_width_ratio, HDG_WINDOW_Y_MAX);

  00156	51		 push	 ecx
  00157	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  0015f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00164	51		 push	 ecx
  00165	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0a1a0d
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	51		 push	 ecx
  00173	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0017b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00180	51		 push	 ecx
  00181	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf0a3d70
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 692  : 	mfd_vp_x_min = u - (hud_viewport_size * (heading_width_ratio * 0.5));

  00199	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _u$[ebp]
  0019e	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  001a6	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fdcccccc0000000
  001ae	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001b6	f3 0f 11 45 e4	 movss	 DWORD PTR _mfd_vp_x_min$[ebp], xmm0

; 693  : 	mfd_vp_x_max = u + (hud_viewport_size * (heading_width_ratio * 0.5)) - 0.001;

  001bb	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _u$[ebp]
  001c0	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  001c8	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fdcccccc0000000
  001d0	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001d4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  001dc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e0	f3 0f 11 45 e0	 movss	 DWORD PTR _mfd_vp_x_max$[ebp], xmm0

; 694  : 	set_2d_viewport (hud_env, mfd_vp_x_min, hud_viewport_y_min, mfd_vp_x_max, hud_viewport_y_max);

  001e5	51		 push	 ecx
  001e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  001ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f3	51		 push	 ecx
  001f4	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _mfd_vp_x_max$[ebp]
  001f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fe	51		 push	 ecx
  001ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00207	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020c	51		 push	 ecx
  0020d	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _mfd_vp_x_min$[ebp]
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0021c	50		 push	 eax
  0021d	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 695  : 
; 696  : 	// aircraft heading readout
; 697  : 	{
; 698  : 		float x_adjust;
; 699  : 		char buffer[8];
; 700  : 		int heading_readout = (int)(deg(aircraft_heading) + 0.5);

  00222	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _aircraft_heading$[ebp]
  00227	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0022f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00233	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0023b	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0023f	89 45 ac	 mov	 DWORD PTR _heading_readout$3[ebp], eax

; 701  : 
; 702  : 		if (heading_readout < 0)

  00242	83 7d ac 00	 cmp	 DWORD PTR _heading_readout$3[ebp], 0
  00246	7d 0b		 jge	 SHORT $LN6@draw_headi

; 703  : 			heading_readout += 360;

  00248	8b 45 ac	 mov	 eax, DWORD PTR _heading_readout$3[ebp]
  0024b	05 68 01 00 00	 add	 eax, 360		; 00000168H
  00250	89 45 ac	 mov	 DWORD PTR _heading_readout$3[ebp], eax
$LN6@draw_headi:

; 704  : 
; 705  : 		sprintf(buffer, "%03d", heading_readout);

  00253	8b 45 ac	 mov	 eax, DWORD PTR _heading_readout$3[ebp]
  00256	50		 push	 eax
  00257	68 00 00 00 00	 push	 OFFSET ??_C@_04OHGLKFFN@?$CF03d@
  0025c	8d 4d b0	 lea	 ecx, DWORD PTR _buffer$4[ebp]
  0025f	51		 push	 ecx
  00260	e8 00 00 00 00	 call	 _sprintf
  00265	83 c4 0c	 add	 esp, 12			; 0000000cH

; 706  : 		x_adjust = get_mono_font_string_width(buffer) / 2;

  00268	8d 45 b0	 lea	 eax, DWORD PTR _buffer$4[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00271	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR tv332[ebp]
  00277	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR tv332[ebp]
  0027f	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00287	f3 0f 11 45 b8	 movss	 DWORD PTR _x_adjust$5[ebp], xmm0

; 707  : 
; 708  : 		set_2d_mono_font_position (0.0, digital_readout_y);

  0028c	51		 push	 ecx
  0028d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00295	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029a	51		 push	 ecx
  0029b	0f 57 c0	 xorps	 xmm0, xmm0
  0029e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a3	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 709  : 		set_mono_font_rel_position (-x_adjust, y_adjust);

  002a8	51		 push	 ecx
  002a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  002b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b6	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _x_adjust$5[ebp]
  002bb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002c2	51		 push	 ecx
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 710  : 		print_mono_font_string(buffer);

  002cd	8d 45 b0	 lea	 eax, DWORD PTR _buffer$4[ebp]
  002d0	50		 push	 eax
  002d1	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 711  : 
; 712  : 		draw_2d_line(-0.05, digital_readout_y, 0.05, digital_readout_y, hud_colour);

  002d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002db	50		 push	 eax
  002dc	51		 push	 ecx
  002dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  002e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ea	51		 push	 ecx
  002eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  002f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f8	51		 push	 ecx
  002f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00301	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00306	51		 push	 ecx
  00307	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0030f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00314	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 713  : 		draw_2d_line(-0.05, digital_readout_y + 0.08, 0.05, digital_readout_y + 0.08, hud_colour);

  00319	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0031e	50		 push	 eax
  0031f	51		 push	 ecx
  00320	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ae147
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	51		 push	 ecx
  0032e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00336	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033b	51		 push	 ecx
  0033c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ae147
  00344	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00349	51		 push	 ecx
  0034a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00352	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00357	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 714  : 		draw_2d_line(0.05, digital_readout_y, 0.05, digital_readout_y + 0.08, hud_colour);

  0035c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00361	50		 push	 eax
  00362	51		 push	 ecx
  00363	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ae147
  0036b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00370	51		 push	 ecx
  00371	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00379	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0037e	51		 push	 ecx
  0037f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	51		 push	 ecx
  0038d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00395	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 715  : 		draw_2d_line(-0.05, digital_readout_y, -0.05, digital_readout_y + 0.08, hud_colour);

  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003a4	50		 push	 eax
  003a5	51		 push	 ecx
  003a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ae147
  003ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b3	51		 push	 ecx
  003b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  003bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c1	51		 push	 ecx
  003c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  003ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cf	51		 push	 ecx
  003d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  003d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 716  : 	}
; 717  : 
; 718  : 	draw_2d_mono_sprite (large_command_heading_carat, 0.0, tick_bottom, hud_colour);

  003e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003e7	50		 push	 eax
  003e8	51		 push	 ecx
  003e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f466666
  003f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f6	51		 push	 ecx
  003f7	0f 57 c0	 xorps	 xmm0, xmm0
  003fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ff	68 00 00 00 00	 push	 OFFSET ?large_command_heading_carat@@3PADA
  00404	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite

; 719  : 
; 720  : 	//
; 721  : 	// draw heading scale
; 722  : 	//
; 723  : 
; 724  : 	heading_step_5 = deg (heading * 0.2);

  00409	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  0040e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00416	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404ca5dc00000000
  0041e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00422	f3 0f 11 45 cc	 movss	 DWORD PTR _heading_step_5$[ebp], xmm0

; 725  : 	int_heading_step_5 = (int) heading_step_5;

  00427	f3 0f 2c 45 cc	 cvttss2si eax, DWORD PTR _heading_step_5$[ebp]
  0042c	89 45 c0	 mov	 DWORD PTR _int_heading_step_5$[ebp], eax

; 726  : 	mod_heading_step_5 = heading_step_5 - (float) int_heading_step_5;

  0042f	f3 0f 2a 45 c0	 cvtsi2ss xmm0, DWORD PTR _int_heading_step_5$[ebp]
  00434	f3 0f 10 4d cc	 movss	 xmm1, DWORD PTR _heading_step_5$[ebp]
  00439	f3 0f 5c c8	 subss	 xmm1, xmm0
  0043d	f3 0f 11 4d c8	 movss	 DWORD PTR _mod_heading_step_5$[ebp], xmm1

; 727  : 	int_heading_step_5 -= 5;

  00442	8b 45 c0	 mov	 eax, DWORD PTR _int_heading_step_5$[ebp]
  00445	83 e8 05	 sub	 eax, 5
  00448	89 45 c0	 mov	 DWORD PTR _int_heading_step_5$[ebp], eax

; 728  : 
; 729  : 	if (int_heading_step_5 < 0)

  0044b	79 09		 jns	 SHORT $LN7@draw_headi

; 730  : 	{
; 731  : 		int_heading_step_5 += 72;

  0044d	8b 45 c0	 mov	 eax, DWORD PTR _int_heading_step_5$[ebp]
  00450	83 c0 48	 add	 eax, 72			; 00000048H
  00453	89 45 c0	 mov	 DWORD PTR _int_heading_step_5$[ebp], eax
$LN7@draw_headi:

; 732  : 	}
; 733  : 
; 734  : 	tick_type = int_heading_step_5 % 2;

  00456	8b 45 c0	 mov	 eax, DWORD PTR _int_heading_step_5$[ebp]
  00459	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  0045e	79 05		 jns	 SHORT $LN19@draw_headi
  00460	48		 dec	 eax
  00461	83 c8 fe	 or	 eax, -2			; fffffffeH
  00464	40		 inc	 eax
$LN19@draw_headi:
  00465	89 45 bc	 mov	 DWORD PTR _tick_type$[ebp], eax

; 735  : 	x = - (5.0 + mod_heading_step_5) * heading_tick_x_spacing;

  00468	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _mod_heading_step_5$[ebp]
  0046d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  00475	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  0047c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc70a3d60000000
  00484	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00488	f3 0f 11 45 dc	 movss	 DWORD PTR _x$[ebp], xmm0

; 736  : 
; 737  : 	for (loop = 0; loop <= 20; loop++)

  0048d	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00494	eb 09		 jmp	 SHORT $LN4@draw_headi
$LN2@draw_headi:
  00496	8b 45 c4	 mov	 eax, DWORD PTR _loop$[ebp]
  00499	83 c0 01	 add	 eax, 1
  0049c	89 45 c4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_headi:
  0049f	83 7d c4 14	 cmp	 DWORD PTR _loop$[ebp], 20 ; 00000014H
  004a3	0f 8f 3c 01 00
	00		 jg	 $LN3@draw_headi

; 738  : 	{
; 739  : 		if (tick_type == 0)

  004a9	83 7d bc 00	 cmp	 DWORD PTR _tick_type$[ebp], 0
  004ad	0f 85 8c 00 00
	00		 jne	 $LN8@draw_headi

; 740  : 		{
; 741  : 			float x_adjust;
; 742  : 			char buffer[8];
; 743  : 
; 744  : 			sprintf(buffer, "%02d", int_heading_step_5 / 2);

  004b3	8b 45 c0	 mov	 eax, DWORD PTR _int_heading_step_5$[ebp]
  004b6	99		 cdq
  004b7	2b c2		 sub	 eax, edx
  004b9	d1 f8		 sar	 eax, 1
  004bb	50		 push	 eax
  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_04OGKJMPGK@?$CF02d@
  004c1	8d 45 a0	 lea	 eax, DWORD PTR _buffer$1[ebp]
  004c4	50		 push	 eax
  004c5	e8 00 00 00 00	 call	 _sprintf
  004ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 745  : 			x_adjust = get_mono_font_string_width(buffer) / 2;

  004cd	8d 45 a0	 lea	 eax, DWORD PTR _buffer$1[ebp]
  004d0	50		 push	 eax
  004d1	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  004d6	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR tv399[ebp]
  004dc	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR tv399[ebp]
  004e4	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  004ec	f3 0f 11 45 a8	 movss	 DWORD PTR _x_adjust$2[ebp], xmm0

; 746  : 
; 747  : 			set_2d_mono_font_position (x, tick_bottom);

  004f1	51		 push	 ecx
  004f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f466666
  004fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ff	51		 push	 ecx
  00500	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00505	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050a	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 748  : 			set_mono_font_rel_position (-x_adjust, y_adjust);

  0050f	51		 push	 ecx
  00510	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  00518	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0051d	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _x_adjust$2[ebp]
  00522	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00529	51		 push	 ecx
  0052a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052f	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 749  : 			print_mono_font_string(buffer);

  00534	8d 45 a0	 lea	 eax, DWORD PTR _buffer$1[ebp]
  00537	50		 push	 eax
  00538	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 750  : 		}
; 751  : 		else

  0053d	eb 3d		 jmp	 SHORT $LN9@draw_headi
$LN8@draw_headi:

; 752  : 			draw_2d_line (x, tick_top, x, tick_bottom, hud_colour);

  0053f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00544	50		 push	 eax
  00545	51		 push	 ecx
  00546	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f466666
  0054e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00553	51		 push	 ecx
  00554	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00559	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055e	51		 push	 ecx
  0055f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  00567	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0056c	51		 push	 ecx
  0056d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00572	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00577	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN9@draw_headi:

; 753  : 
; 754  : 		int_heading_step_5 = (++int_heading_step_5 == 72) ? 0 : int_heading_step_5;

  0057c	8b 45 c0	 mov	 eax, DWORD PTR _int_heading_step_5$[ebp]
  0057f	83 c0 01	 add	 eax, 1
  00582	89 45 c0	 mov	 DWORD PTR _int_heading_step_5$[ebp], eax
  00585	83 7d c0 48	 cmp	 DWORD PTR _int_heading_step_5$[ebp], 72 ; 00000048H
  00589	75 0c		 jne	 SHORT $LN15@draw_headi
  0058b	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
  00595	eb 09		 jmp	 SHORT $LN16@draw_headi
$LN15@draw_headi:
  00597	8b 4d c0	 mov	 ecx, DWORD PTR _int_heading_step_5$[ebp]
  0059a	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv230[ebp], ecx
$LN16@draw_headi:
  005a0	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv230[ebp]
  005a6	89 55 c0	 mov	 DWORD PTR _int_heading_step_5$[ebp], edx

; 755  : 
; 756  : 		tick_type = !tick_type;

  005a9	83 7d bc 00	 cmp	 DWORD PTR _tick_type$[ebp], 0
  005ad	75 0c		 jne	 SHORT $LN17@draw_headi
  005af	c7 85 5c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv232[ebp], 1
  005b9	eb 0a		 jmp	 SHORT $LN18@draw_headi
$LN17@draw_headi:
  005bb	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv232[ebp], 0
$LN18@draw_headi:
  005c5	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv232[ebp]
  005cb	89 45 bc	 mov	 DWORD PTR _tick_type$[ebp], eax

; 757  : 
; 758  : 		x += heading_tick_x_spacing;

  005ce	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$[ebp]
  005d3	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3e3851eb
  005db	f3 0f 11 45 dc	 movss	 DWORD PTR _x$[ebp], xmm0

; 759  : 	}

  005e0	e9 b1 fe ff ff	 jmp	 $LN2@draw_headi
$LN3@draw_headi:

; 760  : 
; 761  : 	//
; 762  : 	// restore 2D environment
; 763  : 	//
; 764  : 
; 765  : 	set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  005e5	51		 push	 ecx
  005e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  005ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f3	51		 push	 ecx
  005f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  005fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00601	51		 push	 ecx
  00602	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0060a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060f	51		 push	 ecx
  00610	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00618	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00622	50		 push	 eax
  00623	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 766  : 	set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  00628	51		 push	 ecx
  00629	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  00631	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00636	51		 push	 ecx
  00637	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  0063f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00644	51		 push	 ecx
  00645	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  0064d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00652	51		 push	 ecx
  00653	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  0065b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00660	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00665	50		 push	 eax
  00666	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 767  : }

  0066b	5f		 pop	 edi
  0066c	5e		 pop	 esi
  0066d	5b		 pop	 ebx
  0066e	8b e5		 mov	 esp, ebp
  00670	5d		 pop	 ebp
  00671	c3		 ret	 0
?draw_heading_scale@@YGXXZ ENDP				; draw_heading_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_hud_aircraft_datum@@YGXH@Z
_TEXT	SEGMENT
tv605 = -196						; size = 8
tv150 = -196						; size = 4
tv130 = -196						; size = 4
tv78 = -196						; size = 4
tv580 = -192						; size = 4
tv142 = -192						; size = 4
tv90 = -192						; size = 4
tv70 = -192						; size = 4
_x_adjust$1 = -124					; size = 4
_s$2 = -120						; size = 20
_tilt_y$3 = -100					; size = 4
_length$4 = -96						; size = 4
_pitch_readout_x$5 = -92				; size = 4
_start_x$6 = -88					; size = 4
_y$7 = -84						; size = 4
_x$8 = -80						; size = 4
_end_angle$9 = -76					; size = 4
_angle$10 = -72						; size = 4
_vp_y_max$11 = -68					; size = 4
_vp_y_min$12 = -64					; size = 4
_vp_x_max$13 = -60					; size = 4
_vp_x_min$14 = -56					; size = 4
_v$15 = -52						; size = 4
_u$16 = -48						; size = 4
_y$17 = -44						; size = 4
_x$18 = -40						; size = 4
_aircraft_direction$ = -36				; size = 12
_j$ = -24						; size = 4
_i$ = -20						; size = 4
_roll$ = -16						; size = 4
_pitch$ = -12						; size = 4
_heading$ = -8						; size = 4
_visibility$ = -4					; size = 4
_draw_pitch_ladder$ = 8					; size = 4
?draw_hud_aircraft_datum@@YGXH@Z PROC			; draw_hud_aircraft_datum, COMDAT

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 512  : 	object_3d_visibility visibility;
; 513  : 
; 514  : 	float
; 515  : 		heading = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_HEADING),

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	74 0f		 je	 SHORT $LN18@draw_hud_a
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00022	eb 24		 jmp	 SHORT $LN19@draw_hud_a
$LN18@draw_hud_a:
  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
  0002a	83 c2 04	 add	 edx, 4
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003e	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN19@draw_hud_a:
  00048	b9 01 00 00 00	 mov	 ecx, 1
  0004d	85 c9		 test	 ecx, ecx
  0004f	74 0c		 je	 SHORT $LN20@draw_hud_a
  00051	c7 85 3c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv78[ebp], 52	; 00000034H
  0005b	eb 24		 jmp	 SHORT $LN21@draw_hud_a
$LN20@draw_hud_a:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
  00063	83 c2 04	 add	 edx, 4
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN21@draw_hud_a:
  00081	6a 34		 push	 52			; 00000034H
  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00089	51		 push	 ecx
  0008a	69 95 40 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv70[ebp], 700
  00094	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0009a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000a1	ff d1		 call	 ecx
  000a3	d9 5d f8	 fstp	 DWORD PTR _heading$[ebp]

; 516  : 		pitch = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_PITCH),

  000a6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000ad	74 0f		 je	 SHORT $LN22@draw_hud_a
  000af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  000bc	eb 24		 jmp	 SHORT $LN23@draw_hud_a
$LN22@draw_hud_a:
  000be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
  000c4	83 c2 05	 add	 edx, 5
  000c7	52		 push	 edx
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d8	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN23@draw_hud_a:
  000e2	b9 01 00 00 00	 mov	 ecx, 1
  000e7	85 c9		 test	 ecx, ecx
  000e9	74 0c		 je	 SHORT $LN24@draw_hud_a
  000eb	c7 85 3c ff ff
	ff 54 00 00 00	 mov	 DWORD PTR tv130[ebp], 84 ; 00000054H
  000f5	eb 24		 jmp	 SHORT $LN25@draw_hud_a
$LN24@draw_hud_a:
  000f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
  000fd	83 c2 05	 add	 edx, 5
  00100	52		 push	 edx
  00101	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00106	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00111	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
$LN25@draw_hud_a:
  0011b	6a 54		 push	 84			; 00000054H
  0011d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00123	51		 push	 ecx
  00124	69 95 40 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv90[ebp], 700
  0012e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  00134	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0013b	ff d1		 call	 ecx
  0013d	d9 5d f4	 fstp	 DWORD PTR _pitch$[ebp]

; 517  : 		roll = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ROLL),

  00140	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00147	74 0f		 je	 SHORT $LN26@draw_hud_a
  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0014e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00150	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  00156	eb 24		 jmp	 SHORT $LN27@draw_hud_a
$LN26@draw_hud_a:
  00158	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
  0015e	83 c2 06	 add	 edx, 6
  00161	52		 push	 edx
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00172	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN27@draw_hud_a:
  0017c	b9 01 00 00 00	 mov	 ecx, 1
  00181	85 c9		 test	 ecx, ecx
  00183	74 0c		 je	 SHORT $LN28@draw_hud_a
  00185	c7 85 3c ff ff
	ff 71 00 00 00	 mov	 DWORD PTR tv150[ebp], 113 ; 00000071H
  0018f	eb 24		 jmp	 SHORT $LN29@draw_hud_a
$LN28@draw_hud_a:
  00191	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_hud_aircraft_datum@@YGXH@Z@4JA
  00197	83 c2 06	 add	 edx, 6
  0019a	52		 push	 edx
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ab	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN29@draw_hud_a:
  001b5	6a 71		 push	 113			; 00000071H
  001b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001bd	51		 push	 ecx
  001be	69 95 40 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv142[ebp], 700
  001c8	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  001ce	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001d5	ff d1		 call	 ecx
  001d7	d9 5d f0	 fstp	 DWORD PTR _roll$[ebp]

; 518  : 		i,
; 519  : 		j;
; 520  : 
; 521  : 	vec3d
; 522  : 		aircraft_direction;
; 523  : 
; 524  : 	if (draw_hud_on_lens)

  001da	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hud_on_lens@@3HA, 0
  001e1	74 05		 je	 SHORT $LN5@draw_hud_a

; 525  : 		return;

  001e3	e9 80 08 00 00	 jmp	 $LN1@draw_hud_a
$LN5@draw_hud_a:

; 526  : 
; 527  : 	get_3d_unit_vector_from_heading_and_pitch(&aircraft_direction, heading, pitch);

  001e8	51		 push	 ecx
  001e9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  001ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f3	51		 push	 ecx
  001f4	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  001f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fe	8d 45 dc	 lea	 eax, DWORD PTR _aircraft_direction$[ebp]
  00201	50		 push	 eax
  00202	e8 00 00 00 00	 call	 ?get_3d_unit_vector_from_heading_and_pitch@@YGXPAUVEC3D@@MM@Z ; get_3d_unit_vector_from_heading_and_pitch

; 528  : 	visibility = get_coordinate_of_relative_position(&aircraft_direction, &i, &j);

  00207	8d 45 e8	 lea	 eax, DWORD PTR _j$[ebp]
  0020a	50		 push	 eax
  0020b	8d 4d ec	 lea	 ecx, DWORD PTR _i$[ebp]
  0020e	51		 push	 ecx
  0020f	8d 55 dc	 lea	 edx, DWORD PTR _aircraft_direction$[ebp]
  00212	52		 push	 edx
  00213	e8 00 00 00 00	 call	 ?get_coordinate_of_relative_position@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_coordinate_of_relative_position
  00218	89 45 fc	 mov	 DWORD PTR _visibility$[ebp], eax

; 529  : 
; 530  : 	if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  0021b	83 7d fc 01	 cmp	 DWORD PTR _visibility$[ebp], 1
  0021f	74 0a		 je	 SHORT $LN7@draw_hud_a
  00221	83 7d fc 02	 cmp	 DWORD PTR _visibility$[ebp], 2
  00225	0f 85 5c 02 00
	00		 jne	 $LN8@draw_hud_a
$LN7@draw_hud_a:

; 531  : 	{
; 532  : 		float x, y;
; 533  : 
; 534  : 		transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  0022b	8d 45 e8	 lea	 eax, DWORD PTR _j$[ebp]
  0022e	50		 push	 eax
  0022f	8d 4d ec	 lea	 ecx, DWORD PTR _i$[ebp]
  00232	51		 push	 ecx
  00233	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 535  : 		get_2d_world_position (i, j, &x, &y);

  00238	8d 45 d4	 lea	 eax, DWORD PTR _y$17[ebp]
  0023b	50		 push	 eax
  0023c	8d 4d d8	 lea	 ecx, DWORD PTR _x$18[ebp]
  0023f	51		 push	 ecx
  00240	51		 push	 ecx
  00241	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _j$[ebp]
  00246	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024b	51		 push	 ecx
  0024c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _i$[ebp]
  00251	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00256	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 536  : 
; 537  : 		if (point_inside_hud_extent(x - 0.15, y)
; 538  : 			&& point_inside_hud_extent(x + 0.15, y - 0.03))

  0025b	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  00260	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00268	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  00270	66 0f 2f c8	 comisd	 xmm1, xmm0
  00274	0f 86 0d 02 00
	00		 jbe	 $LN8@draw_hud_a
  0027a	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  0027f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00287	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bff0000000000000
  0028f	0f 86 f2 01 00
	00		 jbe	 $LN8@draw_hud_a
  00295	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y$17[ebp]
  0029a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  002a2	66 0f 2f c8	 comisd	 xmm1, xmm0
  002a6	0f 86 db 01 00
	00		 jbe	 $LN8@draw_hud_a
  002ac	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y$17[ebp]
  002b1	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bff0000000000000
  002b9	0f 86 c8 01 00
	00		 jbe	 $LN8@draw_hud_a
  002bf	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  002c4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  002cc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  002d4	66 0f 2f c8	 comisd	 xmm1, xmm0
  002d8	0f 86 a9 01 00
	00		 jbe	 $LN8@draw_hud_a
  002de	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  002e3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  002eb	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bff0000000000000
  002f3	0f 86 8e 01 00
	00		 jbe	 $LN8@draw_hud_a
  002f9	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y$17[ebp]
  002fe	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9eb851eb851eb8
  00306	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  0030e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00312	0f 86 6f 01 00
	00		 jbe	 $LN8@draw_hud_a
  00318	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y$17[ebp]
  0031d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9eb851eb851eb8
  00325	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bff0000000000000
  0032d	0f 86 54 01 00
	00		 jbe	 $LN8@draw_hud_a

; 539  : 		{
; 540  : 			draw_2d_line(x - 0.15, y, x - 0.04, y, hud_colour);

  00333	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00338	50		 push	 eax
  00339	51		 push	 ecx
  0033a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  0033f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00344	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  00349	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00351	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00355	51		 push	 ecx
  00356	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035b	51		 push	 ecx
  0035c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  0036b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00373	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00377	51		 push	 ecx
  00378	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0037d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 541  : 			draw_2d_line(x + 0.15, y, x + 0.04, y, hud_colour);

  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00387	50		 push	 eax
  00388	51		 push	 ecx
  00389	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  0038e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00393	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  00398	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  003a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003a4	51		 push	 ecx
  003a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003aa	51		 push	 ecx
  003ab	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  003b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b5	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  003ba	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003c2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003c6	51		 push	 ecx
  003c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cc	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 542  : 
; 543  : 			draw_2d_line(x - 0.04, y, x - 0.04, y - 0.03, hud_colour);

  003d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003d6	50		 push	 eax
  003d7	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y$17[ebp]
  003dc	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9eb851eb851eb8
  003e4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003e8	51		 push	 ecx
  003e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ee	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  003f3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  003fb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ff	51		 push	 ecx
  00400	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00405	51		 push	 ecx
  00406	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  0040b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00410	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  00415	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  0041d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00421	51		 push	 ecx
  00422	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00427	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 544  : 			draw_2d_line(x + 0.04, y, x + 0.04, y - 0.03, hud_colour);

  0042c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00431	50		 push	 eax
  00432	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y$17[ebp]
  00437	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9eb851eb851eb8
  0043f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00443	51		 push	 ecx
  00444	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00449	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  0044e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00456	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0045a	51		 push	 ecx
  0045b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00460	51		 push	 ecx
  00461	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  00466	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046b	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x$18[ebp]
  00470	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00478	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0047c	51		 push	 ecx
  0047d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00482	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN8@draw_hud_a:

; 545  : 		}
; 546  : 	}
; 547  : 
; 548  : 	// pitch ladder
; 549  : 	if (draw_pitch_ladder)

  00487	83 7d 08 00	 cmp	 DWORD PTR _draw_pitch_ladder$[ebp], 0
  0048b	0f 84 d7 05 00
	00		 je	 $LN9@draw_hud_a

; 550  : 	{
; 551  : 		float
; 552  : 			u, v,
; 553  : 			vp_x_min,
; 554  : 			vp_x_max,
; 555  : 			vp_y_min,
; 556  : 			vp_y_max;
; 557  : 
; 558  : 		int
; 559  : 			angle,
; 560  : 			end_angle;
; 561  : 
; 562  : 		get_2d_float_screen_x_coordinate (0.0, &u);

  00491	8d 45 d0	 lea	 eax, DWORD PTR _u$16[ebp]
  00494	50		 push	 eax
  00495	51		 push	 ecx
  00496	0f 57 c0	 xorps	 xmm0, xmm0
  00499	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049e	e8 00 00 00 00	 call	 ?get_2d_float_screen_x_coordinate@@YGXMPAM@Z ; get_2d_float_screen_x_coordinate

; 563  : 		get_2d_float_screen_y_coordinate (0.0, &v);

  004a3	8d 45 cc	 lea	 eax, DWORD PTR _v$15[ebp]
  004a6	50		 push	 eax
  004a7	51		 push	 ecx
  004a8	0f 57 c0	 xorps	 xmm0, xmm0
  004ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b0	e8 00 00 00 00	 call	 ?get_2d_float_screen_y_coordinate@@YGXMPAM@Z ; get_2d_float_screen_y_coordinate

; 564  : 
; 565  : 		set_2d_window (hud_env, PITCH_LADDER_WINDOW_X_MIN, PITCH_LADDER_WINDOW_Y_MIN, PITCH_LADDER_WINDOW_X_MAX, PITCH_LADDER_WINDOW_Y_MAX);

  004b5	51		 push	 ecx
  004b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  004be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c3	51		 push	 ecx
  004c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f266666
  004cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d1	51		 push	 ecx
  004d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  004da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004df	51		 push	 ecx
  004e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf266666
  004e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  004f2	50		 push	 eax
  004f3	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 566  : 		vp_x_min = u + (hud_viewport_size * 0.5 * PITCH_LADDER_WINDOW_X_MIN);

  004f8	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _u$16[ebp]
  004fd	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  00505	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0050d	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@bfe4cccccccccccd
  00515	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00519	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0051d	f3 0f 11 45 c8	 movss	 DWORD PTR _vp_x_min$14[ebp], xmm0

; 567  : 		vp_x_max = u + (hud_viewport_size * 0.5 * PITCH_LADDER_WINDOW_X_MAX) - 0.001;

  00522	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _u$16[ebp]
  00527	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  0052f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00537	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe4cccccccccccd
  0053f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00543	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0054b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0054f	f3 0f 11 45 c4	 movss	 DWORD PTR _vp_x_max$13[ebp], xmm0

; 568  : 		vp_y_min = v + (hud_viewport_size * 0.5 * PITCH_LADDER_WINDOW_Y_MIN);

  00554	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _v$15[ebp]
  00559	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  00561	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00569	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@bfe4cccccccccccd
  00571	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00575	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00579	f3 0f 11 45 c0	 movss	 DWORD PTR _vp_y_min$12[ebp], xmm0

; 569  : 		vp_y_max = v + (hud_viewport_size * 0.5 * PITCH_LADDER_WINDOW_Y_MAX) - 0.001;

  0057e	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _v$15[ebp]
  00583	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  0058b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00593	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe4cccccccccccd
  0059b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0059f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  005a7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005ab	f3 0f 11 45 bc	 movss	 DWORD PTR _vp_y_max$11[ebp], xmm0

; 570  : 		set_2d_viewport (hud_env, vp_x_min, vp_y_min, vp_x_max, vp_y_max);

  005b0	51		 push	 ecx
  005b1	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _vp_y_max$11[ebp]
  005b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005bb	51		 push	 ecx
  005bc	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _vp_x_max$13[ebp]
  005c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c6	51		 push	 ecx
  005c7	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _vp_y_min$12[ebp]
  005cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d1	51		 push	 ecx
  005d2	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _vp_x_min$14[ebp]
  005d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  005e1	50		 push	 eax
  005e2	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 571  : 
; 572  : 		set_2d_instance_rotation (hud_env, roll);

  005e7	51		 push	 ecx
  005e8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _roll$[ebp]
  005ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  005f7	50		 push	 eax
  005f8	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 573  : 
; 574  : 		set_mono_font_type(MONO_FONT_TYPE_6X10);

  005fd	6a 04		 push	 4
  005ff	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 575  : 
; 576  : 		angle = ((int)deg(pitch) / 5) * 5 - 25;

  00604	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00609	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00611	f3 0f 2c c0	 cvttss2si eax, xmm0
  00615	99		 cdq
  00616	b9 05 00 00 00	 mov	 ecx, 5
  0061b	f7 f9		 idiv	 ecx
  0061d	6b d0 05	 imul	 edx, eax, 5
  00620	83 ea 19	 sub	 edx, 25			; 00000019H
  00623	89 55 b8	 mov	 DWORD PTR _angle$10[ebp], edx

; 577  : 		end_angle = angle + 50;

  00626	8b 45 b8	 mov	 eax, DWORD PTR _angle$10[ebp]
  00629	83 c0 32	 add	 eax, 50			; 00000032H
  0062c	89 45 b4	 mov	 DWORD PTR _end_angle$9[ebp], eax

; 578  : 		for (; angle <= end_angle; angle += 5)

  0062f	eb 09		 jmp	 SHORT $LN4@draw_hud_a
$LN2@draw_hud_a:
  00631	8b 45 b8	 mov	 eax, DWORD PTR _angle$10[ebp]
  00634	83 c0 05	 add	 eax, 5
  00637	89 45 b8	 mov	 DWORD PTR _angle$10[ebp], eax
$LN4@draw_hud_a:
  0063a	8b 45 b8	 mov	 eax, DWORD PTR _angle$10[ebp]
  0063d	3b 45 b4	 cmp	 eax, DWORD PTR _end_angle$9[ebp]
  00640	0f 8f 91 03 00
	00		 jg	 $LN3@draw_hud_a

; 579  : 		{
; 580  : 			if (angle == 0)

  00646	83 7d b8 00	 cmp	 DWORD PTR _angle$10[ebp], 0
  0064a	75 02		 jne	 SHORT $LN10@draw_hud_a

; 581  : 				continue;

  0064c	eb e3		 jmp	 SHORT $LN2@draw_hud_a
$LN10@draw_hud_a:

; 582  : 
; 583  : 			get_3d_unit_vector_from_heading_and_pitch(&aircraft_direction, heading, rad(angle));

  0064e	f3 0f 2a 45 b8	 cvtsi2ss xmm0, DWORD PTR _angle$10[ebp]
  00653	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0065b	51		 push	 ecx
  0065c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00661	51		 push	 ecx
  00662	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00667	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066c	8d 45 dc	 lea	 eax, DWORD PTR _aircraft_direction$[ebp]
  0066f	50		 push	 eax
  00670	e8 00 00 00 00	 call	 ?get_3d_unit_vector_from_heading_and_pitch@@YGXPAUVEC3D@@MM@Z ; get_3d_unit_vector_from_heading_and_pitch

; 584  : 			visibility = get_coordinate_of_relative_position(&aircraft_direction, &i, &j);

  00675	8d 45 e8	 lea	 eax, DWORD PTR _j$[ebp]
  00678	50		 push	 eax
  00679	8d 4d ec	 lea	 ecx, DWORD PTR _i$[ebp]
  0067c	51		 push	 ecx
  0067d	8d 55 dc	 lea	 edx, DWORD PTR _aircraft_direction$[ebp]
  00680	52		 push	 edx
  00681	e8 00 00 00 00	 call	 ?get_coordinate_of_relative_position@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_coordinate_of_relative_position
  00686	89 45 fc	 mov	 DWORD PTR _visibility$[ebp], eax

; 585  : 
; 586  : 			if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  00689	83 7d fc 01	 cmp	 DWORD PTR _visibility$[ebp], 1
  0068d	74 0a		 je	 SHORT $LN12@draw_hud_a
  0068f	83 7d fc 02	 cmp	 DWORD PTR _visibility$[ebp], 2
  00693	0f 85 39 03 00
	00		 jne	 $LN16@draw_hud_a
$LN12@draw_hud_a:

; 587  : 			{
; 588  : 				float x, y;
; 589  : 
; 590  : 				transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  00699	8d 45 e8	 lea	 eax, DWORD PTR _j$[ebp]
  0069c	50		 push	 eax
  0069d	8d 4d ec	 lea	 ecx, DWORD PTR _i$[ebp]
  006a0	51		 push	 ecx
  006a1	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 591  : 				get_2d_world_position (i, j, &x, &y);

  006a6	8d 45 ac	 lea	 eax, DWORD PTR _y$7[ebp]
  006a9	50		 push	 eax
  006aa	8d 4d b0	 lea	 ecx, DWORD PTR _x$8[ebp]
  006ad	51		 push	 ecx
  006ae	51		 push	 ecx
  006af	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _j$[ebp]
  006b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b9	51		 push	 ecx
  006ba	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _i$[ebp]
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 592  : 
; 593  : 				{
; 594  : 					const float
; 595  : 						start_x = 0.15,

  006c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  006d1	f3 0f 11 45 a8	 movss	 DWORD PTR _start_x$6[ebp], xmm0

; 596  : 						pitch_readout_x = 0.4;

  006d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  006de	f3 0f 11 45 a4	 movss	 DWORD PTR _pitch_readout_x$5[ebp], xmm0

; 597  : 
; 598  : 					float
; 599  : 						length,
; 600  : 						tilt_y;
; 601  : 
; 602  : 					set_2d_instance_position (hud_env, x, y);

  006e3	51		 push	 ecx
  006e4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _y$7[ebp]
  006e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ee	51		 push	 ecx
  006ef	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _x$8[ebp]
  006f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  006fe	50		 push	 eax
  006ff	e8 00 00 00 00	 call	 ?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z ; set_2d_instance_position

; 603  : 
; 604  : 					if (angle % 10 == 0)

  00704	8b 45 b8	 mov	 eax, DWORD PTR _angle$10[ebp]
  00707	99		 cdq
  00708	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0070d	f7 f9		 idiv	 ecx
  0070f	85 d2		 test	 edx, edx
  00711	0f 85 dd 00 00
	00		 jne	 $LN13@draw_hud_a

; 605  : 					{
; 606  : 						char s[20];
; 607  : 						float x_adjust;
; 608  : 
; 609  : 						sprintf (s, "%d", angle);

  00717	8b 45 b8	 mov	 eax, DWORD PTR _angle$10[ebp]
  0071a	50		 push	 eax
  0071b	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00720	8d 4d 88	 lea	 ecx, DWORD PTR _s$2[ebp]
  00723	51		 push	 ecx
  00724	e8 00 00 00 00	 call	 _sprintf
  00729	83 c4 0c	 add	 esp, 12			; 0000000cH

; 610  : 						x_adjust = -get_mono_font_string_width(s) / 2.0;

  0072c	8d 45 88	 lea	 eax, DWORD PTR _s$2[ebp]
  0072f	50		 push	 eax
  00730	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00735	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR tv580[ebp]
  0073b	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv580[ebp]
  00743	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0074a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0074e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00756	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0075a	f3 0f 11 45 84	 movss	 DWORD PTR _x_adjust$1[ebp], xmm0

; 611  : 
; 612  : 						set_2d_mono_font_position (+pitch_readout_x, 0.0);

  0075f	51		 push	 ecx
  00760	0f 57 c0	 xorps	 xmm0, xmm0
  00763	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00768	51		 push	 ecx
  00769	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  00771	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00776	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 613  : 						set_hud_mono_font_rel_position (x_adjust, PITCH_CHAR_Y_ADJUST);

  0077b	51		 push	 ecx
  0077c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  00784	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00789	51		 push	 ecx
  0078a	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x_adjust$1[ebp]
  0078f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00794	e8 00 00 00 00	 call	 ?set_hud_mono_font_rel_position@@YGXMM@Z ; set_hud_mono_font_rel_position

; 614  : 						print_hud_mono_font_string (s);

  00799	8d 45 88	 lea	 eax, DWORD PTR _s$2[ebp]
  0079c	50		 push	 eax
  0079d	e8 00 00 00 00	 call	 ?print_hud_mono_font_string@@YGXPBD@Z ; print_hud_mono_font_string

; 615  : 
; 616  : 						set_2d_mono_font_position (-pitch_readout_x, 0.0);

  007a2	51		 push	 ecx
  007a3	0f 57 c0	 xorps	 xmm0, xmm0
  007a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ab	51		 push	 ecx
  007ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  007b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b9	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 617  : 						set_hud_mono_font_rel_position (x_adjust, PITCH_CHAR_Y_ADJUST);

  007be	51		 push	 ecx
  007bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  007c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cc	51		 push	 ecx
  007cd	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x_adjust$1[ebp]
  007d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007d7	e8 00 00 00 00	 call	 ?set_hud_mono_font_rel_position@@YGXMM@Z ; set_hud_mono_font_rel_position

; 618  : 						print_hud_mono_font_string (s);

  007dc	8d 45 88	 lea	 eax, DWORD PTR _s$2[ebp]
  007df	50		 push	 eax
  007e0	e8 00 00 00 00	 call	 ?print_hud_mono_font_string@@YGXPBD@Z ; print_hud_mono_font_string

; 619  : 
; 620  : 						length = 0.15;

  007e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  007ed	f3 0f 11 45 a0	 movss	 DWORD PTR _length$4[ebp], xmm0

; 621  : 					}
; 622  : 					else

  007f2	eb 0d		 jmp	 SHORT $LN14@draw_hud_a
$LN13@draw_hud_a:

; 623  : 						length = 0.075;

  007f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d99999a
  007fc	f3 0f 11 45 a0	 movss	 DWORD PTR _length$4[ebp], xmm0
$LN14@draw_hud_a:

; 624  : 
; 625  : 					tilt_y = tan(rad(angle)/2.0) * length;

  00801	f3 0f 2a 45 b8	 cvtsi2ss xmm0, DWORD PTR _angle$10[ebp]
  00806	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0080e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00812	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0081a	83 ec 08	 sub	 esp, 8
  0081d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00822	e8 00 00 00 00	 call	 _tan
  00827	83 c4 08	 add	 esp, 8
  0082a	dd 9d 3c ff ff
	ff		 fstp	 QWORD PTR tv605[ebp]
  00830	f2 0f 10 85 3c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv605[ebp]
  00838	f3 0f 5a 4d a0	 cvtss2sd xmm1, DWORD PTR _length$4[ebp]
  0083d	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00841	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00845	f3 0f 11 45 9c	 movss	 DWORD PTR _tilt_y$3[ebp], xmm0

; 626  : 
; 627  : 					draw_2d_line(-start_x - length, tilt_y, -start_x, 0.0, hud_colour);

  0084a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0084f	50		 push	 eax
  00850	51		 push	 ecx
  00851	0f 57 c0	 xorps	 xmm0, xmm0
  00854	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00859	51		 push	 ecx
  0085a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  00862	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00867	51		 push	 ecx
  00868	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _tilt_y$3[ebp]
  0086d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00872	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  0087a	f3 0f 5c 45 a0	 subss	 xmm0, DWORD PTR _length$4[ebp]
  0087f	51		 push	 ecx
  00880	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00885	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 628  : 					draw_2d_line(start_x + length, tilt_y, start_x, 0.0, hud_colour);

  0088a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0088f	50		 push	 eax
  00890	51		 push	 ecx
  00891	0f 57 c0	 xorps	 xmm0, xmm0
  00894	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00899	51		 push	 ecx
  0089a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  008a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a7	51		 push	 ecx
  008a8	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _tilt_y$3[ebp]
  008ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  008ba	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _length$4[ebp]
  008bf	51		 push	 ecx
  008c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008c5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 629  : 
; 630  : 					if (angle < 0.0)

  008ca	f2 0f 2a 45 b8	 cvtsi2sd xmm0, DWORD PTR _angle$10[ebp]
  008cf	0f 57 c9	 xorps	 xmm1, xmm1
  008d2	66 0f 2f c8	 comisd	 xmm1, xmm0
  008d6	76 7e		 jbe	 SHORT $LN15@draw_hud_a

; 631  : 					{
; 632  : 						draw_2d_line(-start_x, 0.0, -start_x,  + 0.04, hud_colour);

  008d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  008dd	50		 push	 eax
  008de	51		 push	 ecx
  008df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  008e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ec	51		 push	 ecx
  008ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  008f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008fa	51		 push	 ecx
  008fb	0f 57 c0	 xorps	 xmm0, xmm0
  008fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00903	51		 push	 ecx
  00904	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  0090c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00911	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 633  : 						draw_2d_line(start_x, 0.0, start_x,  + 0.04, hud_colour);

  00916	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0091b	50		 push	 eax
  0091c	51		 push	 ecx
  0091d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  00925	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0092a	51		 push	 ecx
  0092b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  00933	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00938	51		 push	 ecx
  00939	0f 57 c0	 xorps	 xmm0, xmm0
  0093c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00941	51		 push	 ecx
  00942	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  0094a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0094f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 634  : 					}
; 635  : 					else

  00954	eb 7c		 jmp	 SHORT $LN16@draw_hud_a
$LN15@draw_hud_a:

; 636  : 					{
; 637  : 						draw_2d_line(-start_x, 0.0, -start_x,  - 0.04, hud_colour);

  00956	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0095b	50		 push	 eax
  0095c	51		 push	 ecx
  0095d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd23d70a
  00965	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0096a	51		 push	 ecx
  0096b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  00973	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00978	51		 push	 ecx
  00979	0f 57 c0	 xorps	 xmm0, xmm0
  0097c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00981	51		 push	 ecx
  00982	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  0098a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0098f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 638  : 						draw_2d_line(start_x, 0.0, start_x,  - 0.04, hud_colour);

  00994	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00999	50		 push	 eax
  0099a	51		 push	 ecx
  0099b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd23d70a
  009a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009a8	51		 push	 ecx
  009a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  009b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009b6	51		 push	 ecx
  009b7	0f 57 c0	 xorps	 xmm0, xmm0
  009ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009bf	51		 push	 ecx
  009c0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  009c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009cd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN16@draw_hud_a:

; 639  : 					}
; 640  : 				}
; 641  : 			}
; 642  : 		}

  009d2	e9 5a fc ff ff	 jmp	 $LN2@draw_hud_a
$LN3@draw_hud_a:

; 643  : 
; 644  : 		reset_2d_instance (hud_env);

  009d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  009dc	50		 push	 eax
  009dd	e8 00 00 00 00	 call	 ?reset_2d_instance@@YGXPAUENV_2D@@@Z ; reset_2d_instance

; 645  : 		set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  009e2	51		 push	 ecx
  009e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  009eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009f0	51		 push	 ecx
  009f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  009f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009fe	51		 push	 ecx
  009ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00a07	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0c	51		 push	 ecx
  00a0d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00a15	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a1a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00a1f	50		 push	 eax
  00a20	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 646  : 		set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  00a25	51		 push	 ecx
  00a26	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  00a2e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a33	51		 push	 ecx
  00a34	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00a3c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a41	51		 push	 ecx
  00a42	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00a4a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a4f	51		 push	 ecx
  00a50	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00a58	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a5d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00a62	50		 push	 eax
  00a63	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport
$LN9@draw_hud_a:
$LN1@draw_hud_a:

; 647  : 	}
; 648  : }

  00a68	5f		 pop	 edi
  00a69	5e		 pop	 esi
  00a6a	5b		 pop	 ebx
  00a6b	8b e5		 mov	 esp, ebp
  00a6d	5d		 pop	 ebp
  00a6e	c2 04 00	 ret	 4
?draw_hud_aircraft_datum@@YGXH@Z ENDP			; draw_hud_aircraft_datum
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?get_coordinate_of_relative_position@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z
_TEXT	SEGMENT
_position$ = -12					; size = 12
_relative_position$ = 8					; size = 4
_i$ = 12						; size = 4
_j$ = 16						; size = 4
?get_coordinate_of_relative_position@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z PROC ; get_coordinate_of_relative_position, COMDAT

; 499  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 500  : 	vec3d position;
; 501  : 
; 502  : 	copy_double_vec3d_to_vec3d(&current_flight_dynamics->position, &position);

  00009	8d 45 f4	 lea	 eax, DWORD PTR _position$[ebp]
  0000c	50		 push	 eax
  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00013	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?copy_double_vec3d_to_vec3d@@YGXPBUDOUBLE_VEC3D@@PAUVEC3D@@@Z ; copy_double_vec3d_to_vec3d

; 503  : 	position.x += relative_position->x * 1000;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _relative_position$[ebp]
  00022	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00026	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@447a0000
  0002e	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _position$[ebp]
  00033	f3 0f 11 45 f4	 movss	 DWORD PTR _position$[ebp], xmm0

; 504  : 	position.y += relative_position->y * 1000;

  00038	8b 45 08	 mov	 eax, DWORD PTR _relative_position$[ebp]
  0003b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00040	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@447a0000
  00048	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _position$[ebp+4]
  0004d	f3 0f 11 45 f8	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 505  : 	position.z += relative_position->z * 1000;

  00052	8b 45 08	 mov	 eax, DWORD PTR _relative_position$[ebp]
  00055	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0005a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@447a0000
  00062	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _position$[ebp+8]
  00067	f3 0f 11 45 fc	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 506  : 
; 507  : 	return get_position_3d_screen_coordinates (&position, i, j);

  0006c	8b 45 10	 mov	 eax, DWORD PTR _j$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d 0c	 mov	 ecx, DWORD PTR _i$[ebp]
  00073	51		 push	 ecx
  00074	8d 55 f4	 lea	 edx, DWORD PTR _position$[ebp]
  00077	52		 push	 edx
  00078	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates

; 508  : }

  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 0c 00	 ret	 12			; 0000000cH
?get_coordinate_of_relative_position@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ENDP ; get_coordinate_of_relative_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_layout_grid@@YGXXZ
_TEXT	SEGMENT
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?draw_layout_grid@@YGXXZ PROC				; draw_layout_grid, COMDAT

; 474  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 475  : 	float
; 476  : 		x,
; 477  : 		y;
; 478  : 
; 479  : 	if (display_hud_layout_grid)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?display_hud_layout_grid@@3HA, 0 ; display_hud_layout_grid
  00010	0f 84 ee 00 00
	00		 je	 $LN6@draw_layou

; 480  : 	{
; 481  : 		for (x = HUD_WINDOW_X_MIN; x <= HUD_WINDOW_X_MAX; x += 0.1)

  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0001e	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
  00023	eb 16		 jmp	 SHORT $LN4@draw_layou
$LN2@draw_layou:
  00025	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00032	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00036	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
$LN4@draw_layou:
  0003b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00040	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  00048	66 0f 2f c8	 comisd	 xmm1, xmm0
  0004c	72 3f		 jb	 SHORT $LN3@draw_layou

; 482  : 		{
; 483  : 			draw_2d_line (x, HUD_WINDOW_Y_MIN, x, HUD_WINDOW_Y_MAX, sys_col_red);

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  0005d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00062	51		 push	 ecx
  00063	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	51		 push	 ecx
  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	51		 push	 ecx
  0007c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 484  : 		}

  0008b	eb 98		 jmp	 SHORT $LN2@draw_layou
$LN3@draw_layou:

; 485  : 
; 486  : 		for (y = HUD_WINDOW_Y_MIN; y <= HUD_WINDOW_Y_MAX; y += 0.1)

  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00095	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
  0009a	eb 16		 jmp	 SHORT $LN7@draw_layou
$LN5@draw_layou:
  0009c	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ad	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
$LN7@draw_layou:
  000b2	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000b7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  000bf	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c3	72 3f		 jb	 SHORT $LN6@draw_layou

; 487  : 		{
; 488  : 			draw_2d_line (HUD_WINDOW_X_MIN, y, HUD_WINDOW_X_MAX, y, sys_col_red);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	51		 push	 ecx
  000d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	51		 push	 ecx
  000e5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ef	51		 push	 ecx
  000f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 489  : 		}

  00102	eb 98		 jmp	 SHORT $LN5@draw_layou
$LN6@draw_layou:

; 490  : 	}
; 491  : }

  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c3		 ret	 0
?draw_layout_grid@@YGXXZ ENDP				; draw_layout_grid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z PROC ; transform_hud_screen_co_ords_to_hud_texture_co_ords, COMDAT

; 458  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 459  : 	ASSERT (i);

  00009	83 7d 08 00	 cmp	 DWORD PTR _i$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@transform_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@transform_:

; 460  : 	ASSERT (j);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _j$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@transform_
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA
  00032	83 c0 02	 add	 eax, 2
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_01CBDEGOCN@j@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@transform_:

; 461  : 
; 462  : 	*i -= hud_screen_x_min;

  00045	8b 45 08	 mov	 eax, DWORD PTR _i$[ebp]
  00048	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  00054	8b 4d 08	 mov	 ecx, DWORD PTR _i$[ebp]
  00057	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 463  : 	*j -= hud_screen_y_min;

  0005b	8b 45 0c	 mov	 eax, DWORD PTR _j$[ebp]
  0005e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00062	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  0006a	8b 4d 0c	 mov	 ecx, DWORD PTR _j$[ebp]
  0006d	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 464  : 
; 465  : 	*i *= hud_screen_x_scale;

  00071	8b 45 08	 mov	 eax, DWORD PTR _i$[ebp]
  00074	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00078	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hud_screen_x_scale@@3MA
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _i$[ebp]
  00083	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 466  : 	*j *= hud_screen_y_scale;

  00087	8b 45 0c	 mov	 eax, DWORD PTR _j$[ebp]
  0008a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0008e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hud_screen_y_scale@@3MA
  00096	8b 4d 0c	 mov	 ecx, DWORD PTR _j$[ebp]
  00099	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 467  : }

  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ENDP ; transform_hud_screen_co_ords_to_hud_texture_co_ords
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?clip_2d_point_to_hud_extent@@YGXPAM0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?clip_2d_point_to_hud_extent@@YGXPAM0@Z PROC		; clip_2d_point_to_hud_extent, COMDAT

; 417  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 418  : 	ASSERT (x);

  00009	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@clip_2d_po
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01FJMABOPO@x@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@clip_2d_po:

; 419  : 
; 420  : 	ASSERT (y);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _y$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@clip_2d_po
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CDMHBFDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_01EANLCPLP@y@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@clip_2d_po:

; 421  : 
; 422  : 	//
; 423  : 	// clipping assumes that the HUD origin is at (0.0, 0.0)
; 424  : 	//
; 425  : 
; 426  : 	if (*x > HUD_WINDOW_X_MAX)

  00045	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00048	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0004c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3feff7ced916872b
  00054	76 36		 jbe	 SHORT $LN4@clip_2d_po

; 427  : 	{
; 428  : 		*y = (*y * HUD_WINDOW_X_MAX) / *x;

  00056	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00059	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0005d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feff7ced916872b
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00068	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  0006c	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00070	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00074	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00077	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 429  : 
; 430  : 		*x = HUD_WINDOW_X_MAX;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0007e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00086	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0008a	eb 49		 jmp	 SHORT $LN6@clip_2d_po
$LN4@clip_2d_po:

; 431  : 	}
; 432  : 	else if (*x < HUD_WINDOW_X_MIN)

  0008c	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0008f	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00093	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
  0009b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0009f	76 34		 jbe	 SHORT $LN6@clip_2d_po

; 433  : 	{
; 434  : 		*y = (*y * HUD_WINDOW_X_MIN) / *x;

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  000a4	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000a8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  000b3	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  000b7	f2 0f 5e c1	 divsd	 xmm0, xmm1
  000bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000bf	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  000c2	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 435  : 
; 436  : 		*x = HUD_WINDOW_X_MIN;

  000c6	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  000c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000d1	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN6@clip_2d_po:

; 437  : 	}
; 438  : 
; 439  : 	if (*y > HUD_WINDOW_Y_MAX)

  000d5	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  000d8	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000dc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3feff7ced916872b
  000e4	76 36		 jbe	 SHORT $LN7@clip_2d_po

; 440  : 	{
; 441  : 		*x = (*x * HUD_WINDOW_Y_MAX) / *y;

  000e6	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  000e9	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000ed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feff7ced916872b
  000f5	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  000f8	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  000fc	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00100	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00104	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00107	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 442  : 
; 443  : 		*y = HUD_WINDOW_Y_MAX;

  0010b	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0010e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00116	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0011a	eb 49		 jmp	 SHORT $LN9@clip_2d_po
$LN7@clip_2d_po:

; 444  : 	}
; 445  : 	else if (*y < HUD_WINDOW_Y_MIN)

  0011c	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0011f	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00123	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
  0012b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0012f	76 34		 jbe	 SHORT $LN9@clip_2d_po

; 446  : 	{
; 447  : 		*x = (*x * HUD_WINDOW_Y_MIN) / *y;

  00131	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00134	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00138	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  00140	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00143	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  00147	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0014b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014f	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00152	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 448  : 
; 449  : 		*y = HUD_WINDOW_Y_MIN;

  00156	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00159	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00161	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@clip_2d_po:

; 450  : 	}
; 451  : }

  00165	5f		 pop	 edi
  00166	5e		 pop	 esi
  00167	5b		 pop	 ebx
  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c2 08 00	 ret	 8
?clip_2d_point_to_hud_extent@@YGXPAM0@Z ENDP		; clip_2d_point_to_hud_extent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?print_hud_mono_font_string@@YGXPBD@Z
_TEXT	SEGMENT
tv81 = -88						; size = 4
tv77 = -88						; size = 4
tv73 = -88						; size = 4
tv82 = -84						; size = 4
tv78 = -84						; size = 4
tv74 = -84						; size = 4
_x2$ = -16						; size = 4
_y1$ = -12						; size = 4
_x1$ = -8						; size = 4
_width$ = -4						; size = 4
_s$ = 8							; size = 4
?print_hud_mono_font_string@@YGXPBD@Z PROC		; print_hud_mono_font_string, COMDAT

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 376  : 	float
; 377  : 		width,
; 378  : 		x1,
; 379  : 		y1,
; 380  : 		x2;
; 381  : 
; 382  : 	if (draw_hud_on_lens)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hud_on_lens@@3HA, 0
  00010	0f 84 7b 01 00
	00		 je	 $LN2@print_hud_

; 383  : 	{
; 384  : 		width = get_mono_font_string_width (s);

  00016	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0001f	d9 5d fc	 fstp	 DWORD PTR _width$[ebp]

; 385  : 
; 386  : 		width *= (float) LENS_HUD_VIEWPORT_SIZE / (float) HUD_VIEWPORT_SIZE;

  00022	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _width$[ebp]
  00027	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e800000
  0002f	f3 0f 11 45 fc	 movss	 DWORD PTR _width$[ebp], xmm0

; 387  : 
; 388  : 		get_mono_font_position (&x1, &y1);

  00034	8d 45 f4	 lea	 eax, DWORD PTR _y1$[ebp]
  00037	50		 push	 eax
  00038	8d 4d f8	 lea	 ecx, DWORD PTR _x1$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ?get_mono_font_position@@YGXPAM0@Z ; get_mono_font_position

; 389  : 
; 390  : 		x2 = x1 + width;

  00041	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00046	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _width$[ebp]
  0004b	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 391  : 
; 392  : 		x1 = bound (x1, hud_viewport_x_min, hud_viewport_x_max);

  00050	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00058	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _x1$[ebp]
  0005c	76 0f		 jbe	 SHORT $LN7@print_hud_
  0005e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00066	f3 0f 11 45 ac	 movss	 DWORD PTR tv74[ebp], xmm0
  0006b	eb 31		 jmp	 SHORT $LN8@print_hud_
$LN7@print_hud_:
  0006d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00072	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00079	76 0f		 jbe	 SHORT $LN5@print_hud_
  0007b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00083	f3 0f 11 45 a8	 movss	 DWORD PTR tv73[ebp], xmm0
  00088	eb 0a		 jmp	 SHORT $LN6@print_hud_
$LN5@print_hud_:
  0008a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0008f	f3 0f 11 45 a8	 movss	 DWORD PTR tv73[ebp], xmm0
$LN6@print_hud_:
  00094	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv73[ebp]
  00099	f3 0f 11 45 ac	 movss	 DWORD PTR tv74[ebp], xmm0
$LN8@print_hud_:
  0009e	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv74[ebp]
  000a3	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 393  : 		y1 = bound (y1, hud_viewport_y_min, hud_viewport_y_max);

  000a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  000b0	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _y1$[ebp]
  000b4	76 0f		 jbe	 SHORT $LN11@print_hud_
  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  000be	f3 0f 11 45 ac	 movss	 DWORD PTR tv78[ebp], xmm0
  000c3	eb 31		 jmp	 SHORT $LN12@print_hud_
$LN11@print_hud_:
  000c5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  000ca	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  000d1	76 0f		 jbe	 SHORT $LN9@print_hud_
  000d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  000db	f3 0f 11 45 a8	 movss	 DWORD PTR tv77[ebp], xmm0
  000e0	eb 0a		 jmp	 SHORT $LN10@print_hud_
$LN9@print_hud_:
  000e2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  000e7	f3 0f 11 45 a8	 movss	 DWORD PTR tv77[ebp], xmm0
$LN10@print_hud_:
  000ec	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv77[ebp]
  000f1	f3 0f 11 45 ac	 movss	 DWORD PTR tv78[ebp], xmm0
$LN12@print_hud_:
  000f6	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv78[ebp]
  000fb	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 394  : 		x2 = bound (x2, hud_viewport_x_min, hud_viewport_x_max);

  00100	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00108	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _x2$[ebp]
  0010c	76 0f		 jbe	 SHORT $LN15@print_hud_
  0010e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00116	f3 0f 11 45 ac	 movss	 DWORD PTR tv82[ebp], xmm0
  0011b	eb 31		 jmp	 SHORT $LN16@print_hud_
$LN15@print_hud_:
  0011d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00122	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00129	76 0f		 jbe	 SHORT $LN13@print_hud_
  0012b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00133	f3 0f 11 45 a8	 movss	 DWORD PTR tv81[ebp], xmm0
  00138	eb 0a		 jmp	 SHORT $LN14@print_hud_
$LN13@print_hud_:
  0013a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0013f	f3 0f 11 45 a8	 movss	 DWORD PTR tv81[ebp], xmm0
$LN14@print_hud_:
  00144	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv81[ebp]
  00149	f3 0f 11 45 ac	 movss	 DWORD PTR tv82[ebp], xmm0
$LN16@print_hud_:
  0014e	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv82[ebp]
  00153	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 395  : 
; 396  : 		draw_line (x1, y1, x2, y1, hud_colour);

  00158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0015d	50		 push	 eax
  0015e	51		 push	 ecx
  0015f	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00164	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00169	51		 push	 ecx
  0016a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0016f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00174	51		 push	 ecx
  00175	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0017a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017f	51		 push	 ecx
  00180	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00185	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018a	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 397  : 	}
; 398  : 	else

  0018f	eb 09		 jmp	 SHORT $LN3@print_hud_
$LN2@print_hud_:

; 399  : 	{
; 400  : 		print_mono_font_string (s);

  00191	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN3@print_hud_:

; 401  : 	}
; 402  : }

  0019a	5f		 pop	 edi
  0019b	5e		 pop	 esi
  0019c	5b		 pop	 ebx
  0019d	8b e5		 mov	 esp, ebp
  0019f	5d		 pop	 ebp
  001a0	c2 04 00	 ret	 4
?print_hud_mono_font_string@@YGXPBD@Z ENDP		; print_hud_mono_font_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_hud_2d_mono_sprite@@YGXPADMMUREAL_COLOUR@@@Z
_TEXT	SEGMENT
_sprite_ptr$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_colour$ = 20						; size = 4
?draw_hud_2d_mono_sprite@@YGXPADMMUREAL_COLOUR@@@Z PROC	; draw_hud_2d_mono_sprite, COMDAT

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 360  : 	if (draw_hud_on_lens)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hud_on_lens@@3HA, 0
  00010	74 21		 je	 SHORT $LN2@draw_hud_2

; 361  : 	{
; 362  : 		set_2d_pixel (x, y, colour);

  00012	8b 45 14	 mov	 eax, DWORD PTR _colour$[ebp]
  00015	50		 push	 eax
  00016	51		 push	 ecx
  00017	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y$[ebp]
  0001c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00021	51		 push	 ecx
  00022	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 363  : 	}
; 364  : 	else

  00031	eb 23		 jmp	 SHORT $LN3@draw_hud_2
$LN2@draw_hud_2:

; 365  : 	{
; 366  : 		draw_2d_mono_sprite (sprite_ptr, x, y, colour);

  00033	8b 45 14	 mov	 eax, DWORD PTR _colour$[ebp]
  00036	50		 push	 eax
  00037	51		 push	 ecx
  00038	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y$[ebp]
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	51		 push	 ecx
  00043	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00048	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _sprite_ptr$[ebp]
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite
$LN3@draw_hud_2:

; 367  : 	}
; 368  : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 10 00	 ret	 16			; 00000010H
?draw_hud_2d_mono_sprite@@YGXPADMMUREAL_COLOUR@@@Z ENDP	; draw_hud_2d_mono_sprite
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?set_hud_mono_font_rel_position@@YGXMM@Z
_TEXT	SEGMENT
_x_rel$ = 8						; size = 4
_y_rel$ = 12						; size = 4
?set_hud_mono_font_rel_position@@YGXMM@Z PROC		; set_hud_mono_font_rel_position, COMDAT

; 344  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 345  : 	if (draw_hud_on_lens)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hud_on_lens@@3HA, 0
  00010	74 24		 je	 SHORT $LN2@set_hud_mo

; 346  : 	{
; 347  : 		x_rel *= (float) LENS_HUD_VIEWPORT_SIZE / (float) HUD_VIEWPORT_SIZE;

  00012	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_rel$[ebp]
  00017	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e800000
  0001f	f3 0f 11 45 08	 movss	 DWORD PTR _x_rel$[ebp], xmm0

; 348  : 		y_rel *= (float) LENS_HUD_VIEWPORT_SIZE / (float) HUD_VIEWPORT_SIZE;

  00024	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_rel$[ebp]
  00029	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e800000
  00031	f3 0f 11 45 0c	 movss	 DWORD PTR _y_rel$[ebp], xmm0
$LN2@set_hud_mo:

; 349  : 	}
; 350  : 
; 351  : 	set_mono_font_rel_position (x_rel, y_rel);

  00036	51		 push	 ecx
  00037	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_rel$[ebp]
  0003c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00041	51		 push	 ecx
  00042	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_rel$[ebp]
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 352  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?set_hud_mono_font_rel_position@@YGXMM@Z ENDP		; set_hud_mono_font_rel_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_viper_hud_on_lens_texture@@YGXXZ
_TEXT	SEGMENT
tv142 = -72						; size = 4
_store_hud_colour$ = -4					; size = 4
?draw_viper_hud_on_lens_texture@@YGXXZ PROC		; draw_viper_hud_on_lens_texture, COMDAT

; 2682 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2683 : 	rgb_colour
; 2684 : 		store_hud_colour;
; 2685 : 
; 2686 : 	////////////////////////////////////////
; 2687 : 	//
; 2688 : 	// clear lens outer area
; 2689 : 	//
; 2690 : 	////////////////////////////////////////
; 2691 : 
; 2692 : 	set_active_screen (lens_outer_texture_screen);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_outer_texture_screen@@3PAUSCREEN@@A
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 2693 : 
; 2694 : 	if (lock_screen (lens_outer_texture_screen))

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_outer_texture_screen@@3PAUSCREEN@@A
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  0001f	85 c0		 test	 eax, eax
  00021	74 29		 je	 SHORT $LN4@draw_viper

; 2695 : 	{
; 2696 : 		set_block (0, 0, LENS_HUD_VIEWPORT_SIZE - 1, LENS_HUD_VIEWPORT_SIZE - 1, clear_lens_hud_colour);

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_lens_hud_colour@@3UREAL_COLOUR@@A
  00028	50		 push	 eax
  00029	6a 3f		 push	 63			; 0000003fH
  0002b	6a 3f		 push	 63			; 0000003fH
  0002d	6a 00		 push	 0
  0002f	6a 00		 push	 0
  00031	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 2697 : 
; 2698 : 		flush_screen_texture_graphics (lens_outer_texture_screen);

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_outer_texture_screen@@3PAUSCREEN@@A
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 2699 : 
; 2700 : 		unlock_screen (lens_outer_texture_screen);

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_outer_texture_screen@@3PAUSCREEN@@A
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN4@draw_viper:

; 2701 : 	}
; 2702 : 
; 2703 : 	set_active_screen (video_screen);

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 2704 : 
; 2705 : 	////////////////////////////////////////
; 2706 : 	//
; 2707 : 	// set active 3D environment now else 2D clipping will be affected
; 2708 : 	//
; 2709 : 	////////////////////////////////////////
; 2710 : 
; 2711 : 	set_main_3d_params

  00057	51		 push	 ecx
  00058	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_height_view_angle@@3MA
  00060	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00065	51		 push	 ecx
  00066	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	51		 push	 ecx
  00074	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42800000
  0007c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00081	51		 push	 ecx
  00082	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42800000
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	51		 push	 ecx
  00090	0f 57 c0	 xorps	 xmm0, xmm0
  00093	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00098	51		 push	 ecx
  00099	0f 57 c0	 xorps	 xmm0, xmm0
  0009c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a1	6a 00		 push	 0
  000a3	6a 02		 push	 2
  000a5	6a 00		 push	 0
  000a7	e8 00 00 00 00	 call	 ?set_main_3d_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@MMMMMM@Z ; set_main_3d_params

; 2712 : 	(
; 2713 : 		DISPLAY_3D_TINT_CLEAR,
; 2714 : 		DISPLAY_3D_LIGHT_LEVEL_HIGH,
; 2715 : 		DISPLAY_3D_NOISE_LEVEL_NONE,
; 2716 : 		0.0,
; 2717 : 		0.0,
; 2718 : 		LENS_HUD_VIEWPORT_SIZE,
; 2719 : 		LENS_HUD_VIEWPORT_SIZE,
; 2720 : 		full_screen_width_view_angle,
; 2721 : 		full_screen_height_view_angle
; 2722 : 	);
; 2723 : 
; 2724 : 	set_3d_active_environment (main_3d_env);

  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 2725 : 
; 2726 : 	////////////////////////////////////////
; 2727 : 	//
; 2728 : 	// set up HUD 2D environment
; 2729 : 	//
; 2730 : 	////////////////////////////////////////
; 2731 : 
; 2732 : 	set_2d_active_environment (hud_env);

  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?set_2d_active_environment@@YGXPAUENV_2D@@@Z ; set_2d_active_environment

; 2733 : 
; 2734 : 	set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  000c2	51		 push	 ecx
  000c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  000cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d0	51		 push	 ecx
  000d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  000d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000de	51		 push	 ecx
  000df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ec	51		 push	 ecx
  000ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 2735 : 
; 2736 : 	draw_hud_on_lens = TRUE;

  00105	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?draw_hud_on_lens@@3HA, 1

; 2737 : 
; 2738 : 	hud_viewport_size = LENS_HUD_VIEWPORT_SIZE;

  0010f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42800000
  00117	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_size@@3MA, xmm0

; 2739 : 
; 2740 : 	hud_viewport_x_org = LENS_HUD_VIEWPORT_SIZE * 0.5;

  0011f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42000000
  00127	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_org@@3MA, xmm0

; 2741 : 
; 2742 : 	hud_viewport_y_org = LENS_HUD_VIEWPORT_SIZE * 0.5;

  0012f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42000000
  00137	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_org@@3MA, xmm0

; 2743 : 
; 2744 : 	hud_viewport_x_min = 0.0;

  0013f	0f 57 c0	 xorps	 xmm0, xmm0
  00142	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_min@@3MA, xmm0

; 2745 : 
; 2746 : 	hud_viewport_y_min = 0.0;

  0014a	0f 57 c0	 xorps	 xmm0, xmm0
  0014d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_min@@3MA, xmm0

; 2747 : 
; 2748 : 	hud_viewport_x_max = LENS_HUD_VIEWPORT_SIZE - 0.001;

  00155	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@427ffefa
  0015d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_max@@3MA, xmm0

; 2749 : 
; 2750 : 	hud_viewport_y_max = LENS_HUD_VIEWPORT_SIZE - 0.001;

  00165	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@427ffefa
  0016d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_max@@3MA, xmm0

; 2751 : 
; 2752 : 	set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  00175	51		 push	 ecx
  00176	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  0017e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00183	51		 push	 ecx
  00184	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  0018c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00191	51		 push	 ecx
  00192	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  0019a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019f	51		 push	 ecx
  001a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  001a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 2753 : 
; 2754 : 	//
; 2755 : 	// get screen co-ords (this HUD texture is in virtual cockpit and will scale itself)
; 2756 : 	//
; 2757 : 
; 2758 : 	hud_screen_x_min = 0.0;

  001b8	0f 57 c0	 xorps	 xmm0, xmm0
  001bb	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_min@@3MA, xmm0

; 2759 : 	hud_screen_y_min = 0.0;

  001c3	0f 57 c0	 xorps	 xmm0, xmm0
  001c6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_min@@3MA, xmm0

; 2760 : 
; 2761 : 	hud_screen_x_max = LENS_HUD_VIEWPORT_SIZE - 0.001;

  001ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@427ffefa
  001d6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_max@@3MA, xmm0

; 2762 : 	hud_screen_y_max = LENS_HUD_VIEWPORT_SIZE - 0.001;

  001de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@427ffefa
  001e6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_max@@3MA, xmm0

; 2763 : 
; 2764 : 	hud_screen_x_scale = 1.0;

  001ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_scale@@3MA, xmm0

; 2765 : 	hud_screen_y_scale = 1.0;

  001fe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00206	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_scale@@3MA, xmm0

; 2766 : 
; 2767 : 	////////////////////////////////////////
; 2768 : 	//
; 2769 : 	// draw HUD on texture
; 2770 : 	//
; 2771 : 	////////////////////////////////////////
; 2772 : 
; 2773 : 	set_active_screen (lens_hud_texture_screen);

  0020e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_hud_texture_screen@@3PAUSCREEN@@A
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 2774 : 
; 2775 : 	if (lock_screen (lens_hud_texture_screen))

  00219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_hud_texture_screen@@3PAUSCREEN@@A
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  00224	85 c0		 test	 eax, eax
  00226	0f 84 8c 00 00
	00		 je	 $LN5@draw_viper

; 2776 : 	{
; 2777 : 		set_block (0, 0, LENS_HUD_VIEWPORT_SIZE - 1, LENS_HUD_VIEWPORT_SIZE - 1, clear_lens_hud_colour);

  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_lens_hud_colour@@3UREAL_COLOUR@@A
  00231	50		 push	 eax
  00232	6a 3f		 push	 63			; 0000003fH
  00234	6a 3f		 push	 63			; 0000003fH
  00236	6a 00		 push	 0
  00238	6a 00		 push	 0
  0023a	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 2778 : 
; 2779 : 		store_hud_colour = hud_colour;

  0023f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00244	89 45 fc	 mov	 DWORD PTR _store_hud_colour$[ebp], eax

; 2780 : 
; 2781 : 		hud_colour = hud_colour_table[HUD_COL_GREEN];

  00247	b8 04 00 00 00	 mov	 eax, 4
  0024c	c1 e0 02	 shl	 eax, 2
  0024f	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax]
  00255	89 0d 00 00 00
	00		 mov	 DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A, ecx ; hud_colour

; 2782 : 
; 2783 : 		set_mono_font_colour (hud_colour);

  0025b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 2784 : 
; 2785 : 		draw_layout_grid ();

  00266	e8 00 00 00 00	 call	 ?draw_layout_grid@@YGXXZ ; draw_layout_grid

; 2786 : 
; 2787 : 		switch (hud_mode)

  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_mode@@3W4HUD_MODES@@A ; hud_mode
  00270	89 45 b8	 mov	 DWORD PTR tv142[ebp], eax
  00273	83 7d b8 00	 cmp	 DWORD PTR tv142[ebp], 0
  00277	74 0e		 je	 SHORT $LN6@draw_viper
  00279	83 7d b8 01	 cmp	 DWORD PTR tv142[ebp], 1
  0027d	74 0f		 je	 SHORT $LN7@draw_viper
  0027f	83 7d b8 02	 cmp	 DWORD PTR tv142[ebp], 2
  00283	74 10		 je	 SHORT $LN8@draw_viper
  00285	eb 13		 jmp	 SHORT $LN2@draw_viper
$LN6@draw_viper:

; 2788 : 		{
; 2789 : 			case HUD_MODE_NAVIGATION:
; 2790 : 			{
; 2791 : 				draw_navigation_mode_hud ();

  00287	e8 00 00 00 00	 call	 ?draw_navigation_mode_hud@@YGXXZ ; draw_navigation_mode_hud

; 2792 : 
; 2793 : 				break;

  0028c	eb 0c		 jmp	 SHORT $LN2@draw_viper
$LN7@draw_viper:

; 2794 : 			}
; 2795 : 			case HUD_MODE_TRANSITION:
; 2796 : 			{
; 2797 : 				draw_transition_mode_hud ();

  0028e	e8 00 00 00 00	 call	 ?draw_transition_mode_hud@@YGXXZ ; draw_transition_mode_hud

; 2798 : 
; 2799 : 				break;

  00293	eb 05		 jmp	 SHORT $LN2@draw_viper
$LN8@draw_viper:

; 2800 : 			}
; 2801 : 			case HUD_MODE_WEAPON:
; 2802 : 			{
; 2803 : 				draw_weapon_mode_hud ();

  00295	e8 00 00 00 00	 call	 ?draw_weapon_mode_hud@@YGXXZ ; draw_weapon_mode_hud
$LN2@draw_viper:

; 2804 : 
; 2805 : 				break;
; 2806 : 			}
; 2807 : 		}
; 2808 : 
; 2809 : 		hud_colour = store_hud_colour;

  0029a	8b 45 fc	 mov	 eax, DWORD PTR _store_hud_colour$[ebp]
  0029d	a3 00 00 00 00	 mov	 DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A, eax ; hud_colour

; 2810 : 
; 2811 : 		flush_screen_texture_graphics (lens_hud_texture_screen);

  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_hud_texture_screen@@3PAUSCREEN@@A
  002a7	50		 push	 eax
  002a8	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 2812 : 
; 2813 : 		unlock_screen (lens_hud_texture_screen);

  002ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_hud_texture_screen@@3PAUSCREEN@@A
  002b2	50		 push	 eax
  002b3	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN5@draw_viper:

; 2814 : 	}
; 2815 : 
; 2816 : 	set_active_screen (video_screen);

  002b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  002bd	50		 push	 eax
  002be	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 2817 : 
; 2818 : 	set_main_3d_full_screen_params (DISPLAY_3D_TINT_CLEAR, DISPLAY_3D_LIGHT_LEVEL_HIGH, DISPLAY_3D_NOISE_LEVEL_NONE);

  002c3	6a 00		 push	 0
  002c5	6a 02		 push	 2
  002c7	6a 00		 push	 0
  002c9	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params

; 2819 : }

  002ce	5f		 pop	 edi
  002cf	5e		 pop	 esi
  002d0	5b		 pop	 ebx
  002d1	8b e5		 mov	 esp, ebp
  002d3	5d		 pop	 ebp
  002d4	c3		 ret	 0
?draw_viper_hud_on_lens_texture@@YGXXZ ENDP		; draw_viper_hud_on_lens_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?draw_viper_hud@@YGXXZ
_TEXT	SEGMENT
tv94 = -364						; size = 4
tv248 = -360						; size = 4
tv95 = -360						; size = 4
$T1 = -356						; size = 4
_scale$2 = -288						; size = 4
_specular$ = -284					; size = 4
_colour$ = -280						; size = 4
_quad$ = -276						; size = 256
_max_offset$ = -20					; size = 4
_pitch_offset$ = -16					; size = 4
_heading_offset$ = -12					; size = 4
_alpha$ = -8						; size = 4
_store_hud_colour$ = -4					; size = 4
?draw_viper_hud@@YGXXZ PROC				; draw_viper_hud, COMDAT

; 2359 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 6c 01 00
	00		 sub	 esp, 364		; 0000016cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2360 : 	rgb_colour
; 2361 : 		store_hud_colour;
; 2362 : 
; 2363 : 	int
; 2364 : 		alpha;
; 2365 : 
; 2366 : 	float
; 2367 : 		heading_offset,
; 2368 : 		pitch_offset,
; 2369 : 		max_offset;
; 2370 : 
; 2371 : 	vertex
; 2372 : 		quad[4];
; 2373 : 
; 2374 : 	real_colour
; 2375 : 		colour,
; 2376 : 		specular;
; 2377 : 
; 2378 : 	////////////////////////////////////////
; 2379 : 	//
; 2380 : 	// do not draw damaged HUD
; 2381 : 	//
; 2382 : 	////////////////////////////////////////
; 2383 : 
; 2384 : 	if (viper_damage.hidss || !electrical_system_active())

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?viper_damage@@3TVIPER_DAMAGE_FLAGS@@A ; viper_damage
  00011	c1 e8 08	 shr	 eax, 8
  00014	83 e0 01	 and	 eax, 1
  00017	75 09		 jne	 SHORT $LN5@draw_viper
  00019	e8 00 00 00 00	 call	 ?electrical_system_active@@YGHXZ ; electrical_system_active
  0001e	85 c0		 test	 eax, eax
  00020	75 05		 jne	 SHORT $LN4@draw_viper
$LN5@draw_viper:

; 2385 : 	{
; 2386 : 		return;

  00022	e9 84 0a 00 00	 jmp	 $LN1@draw_viper
$LN4@draw_viper:

; 2387 : 	}
; 2388 : 
; 2389 : 
; 2390 : 	////////////////////////////////////////
; 2391 : 	//
; 2392 : 	// reduce alpha as the HUD interferes with the instrument view (some cards cannot do this)
; 2393 : 	//
; 2394 : 	////////////////////////////////////////
; 2395 : 
; 2396 : 	alpha = 255;

  00027	c7 45 f8 ff 00
	00 00		 mov	 DWORD PTR _alpha$[ebp], 255 ; 000000ffH

; 2397 : 
; 2398 : 	if (in_cockpit)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  00035	0f 84 46 01 00
	00		 je	 $LN13@draw_viper

; 2399 : 	{
; 2400 : 		if (get_global_draw_cockpit_graphics ())

  0003b	83 3d b8 01 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+440, 0
  00042	0f 84 39 01 00
	00		 je	 $LN13@draw_viper

; 2401 : 		{
; 2402 : 			if (d3d_modulate_alpha)

  00048	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_modulate_alpha@@3HA, 0 ; d3d_modulate_alpha
  0004f	0f 84 fd 00 00
	00		 je	 $LN8@draw_viper

; 2403 : 			{
; 2404 : 				heading_offset = VIPER_INSTRUMENT_VIEW_HEADING - pilot_head_heading;

  00055	0f 57 c0	 xorps	 xmm0, xmm0
  00058	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  00060	f3 0f 11 45 f4	 movss	 DWORD PTR _heading_offset$[ebp], xmm0

; 2405 : 
; 2406 : 				if (heading_offset < 0.0)

  00065	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  0006a	0f 57 c9	 xorps	 xmm1, xmm1
  0006d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00071	76 11		 jbe	 SHORT $LN10@draw_viper

; 2407 : 				{
; 2408 : 					heading_offset = -heading_offset;

  00073	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _heading_offset$[ebp]
  00078	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0007f	f3 0f 11 45 f4	 movss	 DWORD PTR _heading_offset$[ebp], xmm0
$LN10@draw_viper:

; 2409 : 				}
; 2410 : 
; 2411 : 				pitch_offset = VIPER_INSTRUMENT_VIEW_PITCH - pilot_head_pitch;

  00084	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@befa35dd
  0008c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  00094	f3 0f 11 45 f0	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0

; 2412 : 
; 2413 : 				if (pitch_offset < 0.0)

  00099	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  0009e	0f 57 c9	 xorps	 xmm1, xmm1
  000a1	66 0f 2f c8	 comisd	 xmm1, xmm0
  000a5	76 11		 jbe	 SHORT $LN11@draw_viper

; 2414 : 				{
; 2415 : 					pitch_offset = -pitch_offset;

  000a7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pitch_offset$[ebp]
  000ac	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000b3	f3 0f 11 45 f0	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0
$LN11@draw_viper:

; 2416 : 				}
; 2417 : 
; 2418 : 				if ((heading_offset < rad (25.0)) && (pitch_offset < rad (25.0)))

  000b8	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  000bd	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fdbecde5a000000
  000c5	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c9	0f 86 81 00 00
	00		 jbe	 $LN12@draw_viper
  000cf	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  000d4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fdbecde5a000000
  000dc	66 0f 2f c8	 comisd	 xmm1, xmm0
  000e0	76 6e		 jbe	 SHORT $LN12@draw_viper

; 2419 : 				{
; 2420 : 					max_offset = max (heading_offset, pitch_offset);

  000e2	8d 45 f0	 lea	 eax, DWORD PTR _pitch_offset$[ebp]
  000e5	50		 push	 eax
  000e6	8d 4d f4	 lea	 ecx, DWORD PTR _heading_offset$[ebp]
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000ef	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000f3	f3 0f 11 45 ec	 movss	 DWORD PTR _max_offset$[ebp], xmm0

; 2421 : 
; 2422 : 					alpha = (int) (max_offset * (200.0 / rad (25.0))) + 55;

  000f8	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _max_offset$[ebp]
  000fd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@407ca5dc1e1ce25c
  00105	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00109	83 c0 37	 add	 eax, 55			; 00000037H
  0010c	89 45 f8	 mov	 DWORD PTR _alpha$[ebp], eax

; 2423 : 
; 2424 : 					alpha = bound (alpha, 0, 255);

  0010f	79 0c		 jns	 SHORT $LN27@draw_viper
  00111	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
  0011b	eb 2a		 jmp	 SHORT $LN28@draw_viper
$LN27@draw_viper:
  0011d	81 7d f8 ff 00
	00 00		 cmp	 DWORD PTR _alpha$[ebp], 255 ; 000000ffH
  00124	7e 0c		 jle	 SHORT $LN25@draw_viper
  00126	c7 85 94 fe ff
	ff ff 00 00 00	 mov	 DWORD PTR tv94[ebp], 255 ; 000000ffH
  00130	eb 09		 jmp	 SHORT $LN26@draw_viper
$LN25@draw_viper:
  00132	8b 45 f8	 mov	 eax, DWORD PTR _alpha$[ebp]
  00135	89 85 94 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
$LN26@draw_viper:
  0013b	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  00141	89 8d 98 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
$LN28@draw_viper:
  00147	8b 95 98 fe ff
	ff		 mov	 edx, DWORD PTR tv95[ebp]
  0014d	89 55 f8	 mov	 DWORD PTR _alpha$[ebp], edx
$LN12@draw_viper:

; 2425 : 				}
; 2426 : 			}
; 2427 : 			else

  00150	eb 2f		 jmp	 SHORT $LN13@draw_viper
$LN8@draw_viper:

; 2428 : 			{
; 2429 : 				if ((pilot_head_heading == VIPER_INSTRUMENT_VIEW_HEADING) && (pilot_head_pitch == VIPER_INSTRUMENT_VIEW_PITCH))

  00152	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0015a	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00161	9f		 lahf
  00162	f6 c4 44	 test	 ah, 68			; 00000044H
  00165	7a 1a		 jp	 SHORT $LN13@draw_viper
  00167	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  0016f	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@befa35dd
  00176	9f		 lahf
  00177	f6 c4 44	 test	 ah, 68			; 00000044H
  0017a	7a 05		 jp	 SHORT $LN13@draw_viper

; 2430 : 				{
; 2431 : 					return;

  0017c	e9 2a 09 00 00	 jmp	 $LN1@draw_viper
$LN13@draw_viper:

; 2432 : 				}
; 2433 : 			}
; 2434 : 		}
; 2435 : 	}
; 2436 : 
; 2437 : 	////////////////////////////////////////
; 2438 : 	//
; 2439 : 	// set active 3D environment now else 2D clipping will be affected
; 2440 : 	//
; 2441 : 	////////////////////////////////////////
; 2442 : 
; 2443 : 	set_main_3d_full_screen_params (DISPLAY_3D_TINT_CLEAR, DISPLAY_3D_LIGHT_LEVEL_HIGH, DISPLAY_3D_NOISE_LEVEL_NONE);

  00181	6a 00		 push	 0
  00183	6a 02		 push	 2
  00185	6a 00		 push	 0
  00187	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params

; 2444 : 
; 2445 : 	set_3d_active_environment (main_3d_env);

  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 2446 : 
; 2447 : 	////////////////////////////////////////
; 2448 : 	//
; 2449 : 	// set up HUD 2D environment
; 2450 : 	//
; 2451 : 	////////////////////////////////////////
; 2452 : 
; 2453 : 	set_2d_active_environment (hud_env);

  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?set_2d_active_environment@@YGXPAUENV_2D@@@Z ; set_2d_active_environment

; 2454 : 
; 2455 : 	set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  001a2	51		 push	 ecx
  001a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	51		 push	 ecx
  001b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  001b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001be	51		 push	 ecx
  001bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cc	51		 push	 ecx
  001cd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 2456 : 
; 2457 : 	draw_hud_on_lens = FALSE;

  001e5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?draw_hud_on_lens@@3HA, 0

; 2458 : 
; 2459 : //VJ 050126 hud mod start
; 2460 : 
; 2461 : 	hud_viewport_size = HUD_VIEWPORT_SIZE * min(1.0f, global_hud_size2); //VJ 060212 clean up hud mod

  001ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f7	f3 0f 11 85 9c
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  001ff	68 00 00 00 00	 push	 OFFSET ?global_hud_size2@@3MA ; global_hud_size2
  00204	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00210	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  00218	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  0021c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_size@@3MA, xmm0

; 2462 : 
; 2463 : 	hud_viewport_x_org = hud_viewport_size * 0.5;

  00224	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_size@@3MA
  0022c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00234	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00238	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_org@@3MA, xmm0

; 2464 : 
; 2465 : 	hud_viewport_y_org = hud_viewport_size * 0.5;

  00240	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_size@@3MA
  00248	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00250	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00254	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_org@@3MA, xmm0

; 2466 : 
; 2467 : 	hud_viewport_x_min = (HUD_VIEWPORT_SIZE - hud_viewport_size)*0.5;

  0025c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  00264	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_size@@3MA
  0026c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00270	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00278	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0027c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_min@@3MA, xmm0

; 2468 : 
; 2469 : 	hud_viewport_y_min = (HUD_VIEWPORT_SIZE - hud_viewport_size)*0.5;

  00284	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  0028c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_size@@3MA
  00294	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00298	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_min@@3MA, xmm0

; 2470 : 
; 2471 : 	hud_viewport_x_max = HUD_VIEWPORT_SIZE - hud_viewport_x_min-0.001;

  002ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  002b4	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  002bc	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  002c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002cc	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_max@@3MA, xmm0

; 2472 : 
; 2473 : 	hud_viewport_y_max = HUD_VIEWPORT_SIZE - hud_viewport_y_min-0.001;

  002d4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  002dc	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  002e4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002e8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  002f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_max@@3MA, xmm0

; 2474 : 
; 2475 : //VJ 050126 hud mod end
; 2476 : 
; 2477 : 	set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  002fc	51		 push	 ecx
  002fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  00305	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030a	51		 push	 ecx
  0030b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00313	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00318	51		 push	 ecx
  00319	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00321	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00326	51		 push	 ecx
  00327	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  0032f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00339	50		 push	 eax
  0033a	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 2478 : 
; 2479 : 	//
; 2480 : 	// get screen co-ords (scaled to keep HUD size constant)
; 2481 : 	//
; 2482 : 
; 2483 : //VJ 050213 hud scaling mod: for size > 1.0 graphics resampling is used
; 2484 : // for size < 1.0 (get_global_unscaled_displays = TRUE) the hud is redrawn
; 2485 : //at a smaller scale but the fonts etc are kept at a readable size
; 2486 : 	if (get_global_unscaled_displays ())

  0033f	83 3d 74 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+884, 0
  00346	0f 84 95 00 00
	00		 je	 $LN14@draw_viper

; 2487 : 	{
; 2488 : 		hud_screen_x_min = full_screen_x_mid - 128.0;

  0034c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00354	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4060000000000000
  0035c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00360	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_min@@3MA, xmm0

; 2489 : 		hud_screen_y_min = full_screen_y_mid - 128.0;

  00368	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00370	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4060000000000000
  00378	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0037c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_min@@3MA, xmm0

; 2490 : 
; 2491 : 		hud_screen_x_max = full_screen_x_mid + 127.999;

  00384	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  0038c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@405fffef9db22d0e
  00394	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00398	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_max@@3MA, xmm0

; 2492 : 		hud_screen_y_max = full_screen_y_mid + 127.999;

  003a0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  003a8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@405fffef9db22d0e
  003b0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003b4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_max@@3MA, xmm0

; 2493 : 
; 2494 : 		hud_screen_x_scale = 1.0;

  003bc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003c4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_scale@@3MA, xmm0

; 2495 : 		hud_screen_y_scale = 1.0;

  003cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003d4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_scale@@3MA, xmm0

; 2496 : 	}
; 2497 : 	else

  003dc	e9 a8 01 00 00	 jmp	 $LN15@draw_viper
$LN14@draw_viper:

; 2498 : 	{
; 2499 : 		//VJ 050210, 060913 scaling factor for hud > 1.0
; 2500 : 		float scale = 4.35 - 2.5*global_hud_size2;

  003e1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?global_hud_size2@@3MA
  003e9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  003f1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4011666666666666
  003f9	f2 0f 5c c8	 subsd	 xmm1, xmm0
  003fd	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00401	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _scale$2[ebp], xmm0

; 2501 : 		hud_screen_x_min = full_screen_x_mid - ((256.0 / (scale*640.0 * 2.0)) * full_screen_width);

  00409	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00411	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  00419	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4084000000000000
  00421	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00429	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  00431	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00435	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  0043d	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00441	f2 0f 5c c2	 subsd	 xmm0, xmm2
  00445	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00449	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_min@@3MA, xmm0

; 2502 : 		hud_screen_y_min = full_screen_y_mid - ((256.0 / (scale*480.0 * 2.0)) * full_screen_height);

  00451	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00459	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  00461	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@407e000000000000
  00469	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00471	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  00479	f2 0f 5e d1	 divsd	 xmm2, xmm1
  0047d	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  00485	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00489	f2 0f 5c c2	 subsd	 xmm0, xmm2
  0048d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00491	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_min@@3MA, xmm0

; 2503 : 
; 2504 : 		hud_screen_x_max = full_screen_x_mid + ((256.0 / (scale*640.0 * 2.0)) * full_screen_width) - 0.001;

  00499	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  004a1	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  004a9	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4084000000000000
  004b1	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  004b9	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  004c1	f2 0f 5e d1	 divsd	 xmm2, xmm1
  004c5	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  004cd	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  004d1	f2 0f 58 c2	 addsd	 xmm0, xmm2
  004d5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  004dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004e1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_max@@3MA, xmm0

; 2505 : 		hud_screen_y_max = full_screen_y_mid + ((256.0 / (scale*480.0 * 2.0)) * full_screen_height) - 0.001;

  004e9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  004f1	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  004f9	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@407e000000000000
  00501	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00509	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  00511	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00515	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  0051d	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00521	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00525	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0052d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00531	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_max@@3MA, xmm0

; 2506 : 
; 2507 : 		hud_screen_x_scale = scale*640.0 / full_screen_width;

  00539	f3 0f 5a 85 e0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _scale$2[ebp]
  00541	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4084000000000000
  00549	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  00551	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00555	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00559	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_scale@@3MA, xmm0

; 2508 : 		hud_screen_y_scale = scale*480.0 / full_screen_height;

  00561	f3 0f 5a 85 e0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _scale$2[ebp]
  00569	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@407e000000000000
  00571	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  00579	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0057d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00581	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_scale@@3MA, xmm0
$LN15@draw_viper:

; 2509 : 	}
; 2510 : 
; 2511 : //VJ 050126 hud mod start
; 2512 : 	//VJ 050204 bug fix do not touch the scale
; 2513 : 	//hud_screen_x_scale = global_hud_size2;
; 2514 : 	//hud_screen_y_scale = global_hud_size2;
; 2515 : 	hsd.hud_viewport_x_min = hud_viewport_x_min;

  00589	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00591	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A, xmm0

; 2516 : 	hsd.hud_viewport_y_min = hud_viewport_y_min;

  00599	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  005a1	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+4, xmm0

; 2517 : 	hsd.hud_viewport_x_max = hud_viewport_x_max;

  005a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  005b1	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+8, xmm0

; 2518 : 	hsd.hud_viewport_y_max = hud_viewport_y_max;

  005b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  005c1	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+12, xmm0

; 2519 : 	hsd.hud_screen_x_min = hud_screen_x_min;

  005c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  005d1	f3 0f 11 05 10
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+16, xmm0

; 2520 : 	hsd.hud_screen_y_min = hud_screen_y_min;

  005d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  005e1	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+20, xmm0

; 2521 : 	hsd.hud_screen_x_max = hud_screen_x_max;

  005e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_max@@3MA
  005f1	f3 0f 11 05 18
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+24, xmm0

; 2522 : 	hsd.hud_screen_y_max = hud_screen_y_max;

  005f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_max@@3MA
  00601	f3 0f 11 05 1c
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+28, xmm0

; 2523 : 	hsd.hud_texture_screen = hud_texture_screen;

  00609	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  0060e	a3 20 00 00 00	 mov	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+32, eax

; 2524 : 
; 2525 :    draw_hud_background (&hsd, alpha );

  00613	8b 45 f8	 mov	 eax, DWORD PTR _alpha$[ebp]
  00616	50		 push	 eax
  00617	68 00 00 00 00	 push	 OFFSET ?hsd@@3UHUD_SCREEN_DATA@@A ; hsd
  0061c	e8 00 00 00 00	 call	 ?draw_hud_background@@YGXPAUHUD_SCREEN_DATA@@H@Z ; draw_hud_background

; 2526 : //VJ 050126 hud mod end
; 2527 : 
; 2528 : 	////////////////////////////////////////
; 2529 : 	//
; 2530 : 	// draw HUD on texture
; 2531 : 	//
; 2532 : 	////////////////////////////////////////
; 2533 : 
; 2534 : 	set_active_screen (hud_texture_screen);

  00621	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  00626	50		 push	 eax
  00627	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 2535 : 
; 2536 : 	if (lock_screen (hud_texture_screen))

  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  00631	50		 push	 eax
  00632	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  00637	85 c0		 test	 eax, eax
  00639	0f 84 a6 00 00
	00		 je	 $LN16@draw_viper

; 2537 : 	{
; 2538 : 	 	store_hud_colour = hud_colour;

  0063f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00644	89 45 fc	 mov	 DWORD PTR _store_hud_colour$[ebp], eax

; 2539 : 
; 2540 : 		set_rgb_colour (hud_colour, 255, 255, 255, 255);

  00647	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  0064e	c6 05 01 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A+1, 255 ; 000000ffH
  00655	c6 05 00 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A, 255 ; 000000ffH
  0065c	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 2541 : 
; 2542 : 		set_mono_font_colour (hud_colour);

  00663	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00668	50		 push	 eax
  00669	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 2543 : 
; 2544 : 		//clear max block because between two clear size can have changed
; 2545 : 		set_block (0, 0, HUD_VIEWPORT_SIZE - 1, HUD_VIEWPORT_SIZE - 1, clear_hud_colour);

  0066e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_hud_colour@@3UREAL_COLOUR@@A
  00673	50		 push	 eax
  00674	68 ff 00 00 00	 push	 255			; 000000ffH
  00679	68 ff 00 00 00	 push	 255			; 000000ffH
  0067e	6a 00		 push	 0
  00680	6a 00		 push	 0
  00682	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 2546 : 
; 2547 : 		draw_layout_grid ();

  00687	e8 00 00 00 00	 call	 ?draw_layout_grid@@YGXXZ ; draw_layout_grid

; 2548 : 
; 2549 : 		switch (hud_mode)

  0068c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_mode@@3W4HUD_MODES@@A ; hud_mode
  00691	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv248[ebp], eax
  00697	83 bd 98 fe ff
	ff 00		 cmp	 DWORD PTR tv248[ebp], 0
  0069e	74 14		 je	 SHORT $LN17@draw_viper
  006a0	83 bd 98 fe ff
	ff 01		 cmp	 DWORD PTR tv248[ebp], 1
  006a7	74 12		 je	 SHORT $LN18@draw_viper
  006a9	83 bd 98 fe ff
	ff 02		 cmp	 DWORD PTR tv248[ebp], 2
  006b0	74 10		 je	 SHORT $LN19@draw_viper
  006b2	eb 13		 jmp	 SHORT $LN2@draw_viper
$LN17@draw_viper:

; 2550 : 		{
; 2551 : 			case HUD_MODE_NAVIGATION:
; 2552 : 			{
; 2553 : 				draw_navigation_mode_hud ();

  006b4	e8 00 00 00 00	 call	 ?draw_navigation_mode_hud@@YGXXZ ; draw_navigation_mode_hud

; 2554 : 
; 2555 : 				break;

  006b9	eb 0c		 jmp	 SHORT $LN2@draw_viper
$LN18@draw_viper:

; 2556 : 			}
; 2557 : 			case HUD_MODE_TRANSITION:
; 2558 : 			{
; 2559 : 				draw_transition_mode_hud ();

  006bb	e8 00 00 00 00	 call	 ?draw_transition_mode_hud@@YGXXZ ; draw_transition_mode_hud

; 2560 : 
; 2561 : 				break;

  006c0	eb 05		 jmp	 SHORT $LN2@draw_viper
$LN19@draw_viper:

; 2562 : 			}
; 2563 : 			case HUD_MODE_WEAPON:
; 2564 : 			{
; 2565 : 				draw_weapon_mode_hud ();

  006c2	e8 00 00 00 00	 call	 ?draw_weapon_mode_hud@@YGXXZ ; draw_weapon_mode_hud
$LN2@draw_viper:

; 2566 : 
; 2567 : 				break;
; 2568 : 			}
; 2569 : 		}
; 2570 : 
; 2571 : 		hud_colour = store_hud_colour;

  006c7	8b 45 fc	 mov	 eax, DWORD PTR _store_hud_colour$[ebp]
  006ca	a3 00 00 00 00	 mov	 DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A, eax ; hud_colour

; 2572 : 
; 2573 : 		flush_screen_texture_graphics (hud_texture_screen);

  006cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  006d4	50		 push	 eax
  006d5	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 2574 : 
; 2575 : 		unlock_screen (hud_texture_screen);

  006da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  006df	50		 push	 eax
  006e0	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN16@draw_viper:

; 2576 : 	}
; 2577 : 
; 2578 : 	set_active_screen (video_screen);

  006e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  006ea	50		 push	 eax
  006eb	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 2579 : 
; 2580 : 	////////////////////////////////////////
; 2581 : 	//
; 2582 : 	// render HUD to screen
; 2583 : 	//
; 2584 : 	////////////////////////////////////////
; 2585 : 
; 2586 : 	set_3d_active_environment (main_3d_env);

  006f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  006f5	50		 push	 eax
  006f6	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 2587 : 
; 2588 : 	if (begin_3d_scene ())

  006fb	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  00700	85 c0		 test	 eax, eax
  00702	0f 84 a3 03 00
	00		 je	 $LN20@draw_viper

; 2589 : 	{
; 2590 : 		set_d3d_transparency_on ();

  00708	e8 00 00 00 00	 call	 ?set_d3d_transparency_on@@YGXXZ ; set_d3d_transparency_on

; 2591 : 
; 2592 : 		set_d3d_zbuffer_comparison (FALSE);

  0070d	6a 00		 push	 0
  0070f	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 2593 : 
; 2594 : 		set_d3d_culling (FALSE);

  00714	6a 00		 push	 0
  00716	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 2595 : 
; 2596 : 		set_d3d_texture_wrapping (0, FALSE);

  0071b	6a 00		 push	 0
  0071d	6a 00		 push	 0
  0071f	e8 00 00 00 00	 call	 ?set_d3d_texture_wrapping@@YGXHH@Z ; set_d3d_texture_wrapping

; 2597 : 
; 2598 : 		if ((application_video_width == 640) || (get_global_unscaled_displays ()))

  00724	81 3d 00 00 00
	00 80 02 00 00	 cmp	 DWORD PTR ?application_video_width@@3HA, 640 ; application_video_width, 00000280H
  0072e	74 09		 je	 SHORT $LN23@draw_viper
  00730	83 3d 74 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+884, 0
  00737	74 17		 je	 SHORT $LN21@draw_viper
$LN23@draw_viper:

; 2599 : 		{
; 2600 : 			set_d3d_texture_mag_filtering (FALSE);

  00739	6a 00		 push	 0
  0073b	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 2601 : 			set_d3d_texture_min_filtering (FALSE);

  00740	6a 00		 push	 0
  00742	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 2602 : 			set_d3d_texture_mip_filtering (FALSE);

  00747	6a 00		 push	 0
  00749	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering

; 2603 : 		}
; 2604 : 		else

  0074e	eb 15		 jmp	 SHORT $LN22@draw_viper
$LN21@draw_viper:

; 2605 : 		{
; 2606 : 			set_d3d_texture_mag_filtering (TRUE);

  00750	6a 01		 push	 1
  00752	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 2607 : 			set_d3d_texture_min_filtering (TRUE);

  00757	6a 01		 push	 1
  00759	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 2608 : 			set_d3d_texture_mip_filtering (FALSE);

  0075e	6a 00		 push	 0
  00760	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering
$LN22@draw_viper:

; 2609 : 		}
; 2610 : 
; 2611 : 		set_d3d_flat_shaded_textured_renderstate (get_system_texture_ptr (TEXTURE_INDEX_AVCKPT_DISPLAY_LHS_MFD));

  00765	68 f8 00 00 00	 push	 248			; 000000f8H
  0076a	e8 00 00 00 00	 call	 ?get_system_texture_ptr@@YGPAUSCREEN@@H@Z ; get_system_texture_ptr
  0076f	50		 push	 eax
  00770	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 2612 : 
; 2613 : 		////////////////////////////////////////
; 2614 : 		//
; 2615 : 
; 2616 : 		colour.red	 			= hud_colour_table[get_global_hud_colour ()].r;

  00775	a1 10 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+16
  0077a	8a 0c 85 02 00
	00 00		 mov	 cl, BYTE PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax*4+2]
  00781	88 8d ea fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+2], cl

; 2617 : 		colour.green			= hud_colour_table[get_global_hud_colour ()].g;

  00787	a1 10 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+16
  0078c	8a 0c 85 01 00
	00 00		 mov	 cl, BYTE PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax*4+1]
  00793	88 8d e9 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+1], cl

; 2618 : 		colour.blue	 			= hud_colour_table[get_global_hud_colour ()].b;

  00799	a1 10 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+16
  0079e	8a 0c 85 00 00
	00 00		 mov	 cl, BYTE PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax*4]
  007a5	88 8d e8 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp], cl

; 2619 : 		colour.alpha  			= alpha;

  007ab	8a 45 f8	 mov	 al, BYTE PTR _alpha$[ebp]
  007ae	88 85 eb fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+3], al

; 2620 : 
; 2621 : 		specular.red 			= 0;

  007b4	c6 85 e6 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+2], 0

; 2622 : 		specular.green	 		= 0;

  007bb	c6 85 e5 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+1], 0

; 2623 : 		specular.blue 			= 0;

  007c2	c6 85 e4 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp], 0

; 2624 : 		specular.alpha	  		= 255;

  007c9	c6 85 e7 fe ff
	ff ff		 mov	 BYTE PTR _specular$[ebp+3], 255 ; 000000ffH

; 2625 : 
; 2626 : 		quad[0].i 				= hud_screen_x_min;

  007d0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007d5	6b c8 00	 imul	 ecx, eax, 0
  007d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  007e0	f3 0f 11 84 0d
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 2627 : 		quad[0].j  				= hud_screen_y_min;

  007e9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007ee	6b c8 00	 imul	 ecx, eax, 0
  007f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  007f9	f3 0f 11 84 0d
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 2628 : 		quad[0].z  				= 0.5;

  00802	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00807	6b c8 00	 imul	 ecx, eax, 0
  0080a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00812	f3 0f 11 84 0d
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 2629 : 		quad[0].q  				= 0.5;

  0081b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00820	6b c8 00	 imul	 ecx, eax, 0
  00823	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0082b	f3 0f 11 84 0d
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 2630 : 		quad[0].u  				= 0.0;

  00834	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00839	6b c8 00	 imul	 ecx, eax, 0
  0083c	0f 57 c0	 xorps	 xmm0, xmm0
  0083f	f3 0f 11 84 0d
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 2631 : 		quad[0].v				= 0.0;

  00848	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0084d	6b c8 00	 imul	 ecx, eax, 0
  00850	0f 57 c0	 xorps	 xmm0, xmm0
  00853	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 2632 : 
; 2633 : 		quad[1].i  				= hud_screen_x_max;

  0085c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00861	c1 e0 00	 shl	 eax, 0
  00864	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_max@@3MA
  0086c	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 2634 : 		quad[1].j  				= hud_screen_y_min;

  00875	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0087a	c1 e0 00	 shl	 eax, 0
  0087d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  00885	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 2635 : 		quad[1].z  				= 0.5;

  0088e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00893	c1 e0 00	 shl	 eax, 0
  00896	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0089e	f3 0f 11 84 05
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 2636 : 		quad[1].q  				= 0.5;

  008a7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008ac	c1 e0 00	 shl	 eax, 0
  008af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  008b7	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 2637 : 		quad[1].u  				= 1.0;

  008c0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008c5	c1 e0 00	 shl	 eax, 0
  008c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  008d0	f3 0f 11 84 05
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 2638 : 		quad[1].v  				= 0.0;

  008d9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008de	c1 e0 00	 shl	 eax, 0
  008e1	0f 57 c0	 xorps	 xmm0, xmm0
  008e4	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 2639 : 
; 2640 : 		quad[2].i				= hud_screen_x_max;

  008ed	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008f2	d1 e0		 shl	 eax, 1
  008f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_max@@3MA
  008fc	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 2641 : 		quad[2].j  				= hud_screen_y_max;

  00905	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0090a	d1 e0		 shl	 eax, 1
  0090c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_max@@3MA
  00914	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 2642 : 		quad[2].z  				= 0.5;

  0091d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00922	d1 e0		 shl	 eax, 1
  00924	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0092c	f3 0f 11 84 05
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 2643 : 		quad[2].q  				= 0.5;

  00935	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0093a	d1 e0		 shl	 eax, 1
  0093c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00944	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 2644 : 		quad[2].u  				= 1.0;

  0094d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00952	d1 e0		 shl	 eax, 1
  00954	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0095c	f3 0f 11 84 05
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 2645 : 		quad[2].v  				= 1.0;

  00965	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0096a	d1 e0		 shl	 eax, 1
  0096c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00974	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 2646 : 
; 2647 : 		quad[3].i  				= hud_screen_x_min;

  0097d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00982	6b c8 03	 imul	 ecx, eax, 3
  00985	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  0098d	f3 0f 11 84 0d
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 2648 : 		quad[3].j  				= hud_screen_y_max;

  00996	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0099b	6b c8 03	 imul	 ecx, eax, 3
  0099e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_max@@3MA
  009a6	f3 0f 11 84 0d
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 2649 : 		quad[3].z  				= 0.5;

  009af	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009b4	6b c8 03	 imul	 ecx, eax, 3
  009b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  009bf	f3 0f 11 84 0d
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 2650 : 		quad[3].q  				= 0.5;

  009c8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009cd	6b c8 03	 imul	 ecx, eax, 3
  009d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  009d8	f3 0f 11 84 0d
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 2651 : 		quad[3].u				= 0.0;

  009e1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009e6	6b c8 03	 imul	 ecx, eax, 3
  009e9	0f 57 c0	 xorps	 xmm0, xmm0
  009ec	f3 0f 11 84 0d
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 2652 : 		quad[3].v				= 1.0;

  009f5	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009fa	6b c8 03	 imul	 ecx, eax, 3
  009fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a05	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 2653 : 
; 2654 : 		quad[0].next_vertex	= &quad[1];

  00a0e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a13	c1 e0 00	 shl	 eax, 0
  00a16	8d 8c 05 ec fe
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00a1d	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00a22	6b c2 00	 imul	 eax, edx, 0
  00a25	89 8c 05 14 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 2655 : 		quad[1].next_vertex	= &quad[2];

  00a2c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a31	d1 e0		 shl	 eax, 1
  00a33	8d 8c 05 ec fe
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00a3a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00a3f	c1 e2 00	 shl	 edx, 0
  00a42	89 8c 15 14 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 2656 : 		quad[2].next_vertex	= &quad[3];

  00a49	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a4e	6b c8 03	 imul	 ecx, eax, 3
  00a51	8d 94 0d ec fe
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  00a58	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a5d	d1 e0		 shl	 eax, 1
  00a5f	89 94 05 14 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 2657 : 		quad[3].next_vertex	= NULL;

  00a66	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a6b	6b c8 03	 imul	 ecx, eax, 3
  00a6e	c7 84 0d 14 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 2658 : 
; 2659 : 		//
; 2660 : 		////////////////////////////////////////
; 2661 : 
; 2662 : 		draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  00a79	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  00a7f	50		 push	 eax
  00a80	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  00a86	51		 push	 ecx
  00a87	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  00a8d	52		 push	 edx
  00a8e	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 2663 : 
; 2664 : 		set_d3d_transparency_off ();

  00a93	e8 00 00 00 00	 call	 ?set_d3d_transparency_off@@YGXXZ ; set_d3d_transparency_off

; 2665 : 
; 2666 : 		set_d3d_zbuffer_comparison (TRUE);

  00a98	6a 01		 push	 1
  00a9a	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 2667 : 
; 2668 : 		set_d3d_culling (TRUE);

  00a9f	6a 01		 push	 1
  00aa1	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 2669 : 
; 2670 : 		//sprintf(buffer,"ghs %f %f",global_hud_size,global_hud_size2);
; 2671 :       //ui_display_text (buffer, 10, 40);
; 2672 : 
; 2673 : 		end_3d_scene ();

  00aa6	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN20@draw_viper:
$LN1@draw_viper:

; 2674 : 	}
; 2675 : }

  00aab	5f		 pop	 edi
  00aac	5e		 pop	 esi
  00aad	5b		 pop	 ebx
  00aae	8b e5		 mov	 esp, ebp
  00ab0	5d		 pop	 ebp
  00ab1	c3		 ret	 0
?draw_viper_hud@@YGXXZ ENDP				; draw_viper_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?deinitialise_viper_hud@@YGXXZ
_TEXT	SEGMENT
?deinitialise_viper_hud@@YGXXZ PROC			; deinitialise_viper_hud, COMDAT

; 2344 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2345 : 	destroy_2d_environment (hud_env);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?destroy_2d_environment@@YGXPAUENV_2D@@@Z ; destroy_2d_environment

; 2346 : 
; 2347 : 	destroy_screen (hud_texture_screen);

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 2348 : 
; 2349 : 	destroy_screen (lens_hud_texture_screen);

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_hud_texture_screen@@3PAUSCREEN@@A
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 2350 : 
; 2351 : 	destroy_screen (lens_outer_texture_screen);

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lens_outer_texture_screen@@3PAUSCREEN@@A
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 2352 : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?deinitialise_viper_hud@@YGXXZ ENDP			; deinitialise_viper_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\viper\vi_hud.c
;	COMDAT ?initialise_viper_hud@@YGXXZ
_TEXT	SEGMENT
?initialise_viper_hud@@YGXXZ PROC			; initialise_viper_hud, COMDAT

; 2314 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2315 : 	hud_env = create_2d_environment ();

  00009	e8 00 00 00 00	 call	 ?create_2d_environment@@YGPAUENV_2D@@XZ ; create_2d_environment
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?hud_env@@3PAUENV_2D@@A, eax

; 2316 : 
; 2317 : 	hud_texture_screen = create_system_texture_screen (HUD_VIEWPORT_SIZE, HUD_VIEWPORT_SIZE, TEXTURE_INDEX_AVCKPT_DISPLAY_LHS_MFD, TEXTURE_TYPE_SINGLEALPHA);

  00013	6a 02		 push	 2
  00015	68 f8 00 00 00	 push	 248			; 000000f8H
  0001a	68 00 01 00 00	 push	 256			; 00000100H
  0001f	68 00 01 00 00	 push	 256			; 00000100H
  00024	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00029	a3 00 00 00 00	 mov	 DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A, eax

; 2318 : 
; 2319 : 	lens_hud_texture_screen = create_system_texture_screen (LENS_HUD_VIEWPORT_SIZE, LENS_HUD_VIEWPORT_SIZE, TEXTURE_INDEX_COMANCHE_HIDDS, TEXTURE_TYPE_SINGLEALPHA);

  0002e	6a 02		 push	 2
  00030	68 52 06 00 00	 push	 1618			; 00000652H
  00035	6a 40		 push	 64			; 00000040H
  00037	6a 40		 push	 64			; 00000040H
  00039	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  0003e	a3 00 00 00 00	 mov	 DWORD PTR ?lens_hud_texture_screen@@3PAUSCREEN@@A, eax

; 2320 : 
; 2321 : 	lens_outer_texture_screen = create_system_texture_screen (LENS_HUD_VIEWPORT_SIZE, LENS_HUD_VIEWPORT_SIZE, TEXTURE_INDEX_COMANCHE_HIDDS_OUTER, TEXTURE_TYPE_SINGLEALPHA);

  00043	6a 02		 push	 2
  00045	68 53 06 00 00	 push	 1619			; 00000653H
  0004a	6a 40		 push	 64			; 00000040H
  0004c	6a 40		 push	 64			; 00000040H
  0004e	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?lens_outer_texture_screen@@3PAUSCREEN@@A, eax

; 2322 : 
; 2323 : 	clear_hud_colour.r = 255;

  00058	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH

; 2324 : 	clear_hud_colour.g = 255;

  0005f	c6 05 01 00 00
	00 ff		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A+1, 255 ; 000000ffH

; 2325 : 	clear_hud_colour.b = 255;

  00066	c6 05 00 00 00
	00 ff		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A, 255 ; 000000ffH

; 2326 : 	clear_hud_colour.a = 0;

  0006d	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A+3, 0

; 2327 : 
; 2328 : 	clear_lens_hud_colour.r = 63;

  00074	c6 05 02 00 00
	00 3f		 mov	 BYTE PTR ?clear_lens_hud_colour@@3UREAL_COLOUR@@A+2, 63 ; 0000003fH

; 2329 : 	clear_lens_hud_colour.g = 99;

  0007b	c6 05 01 00 00
	00 63		 mov	 BYTE PTR ?clear_lens_hud_colour@@3UREAL_COLOUR@@A+1, 99 ; 00000063H

; 2330 : 	clear_lens_hud_colour.b = 65;

  00082	c6 05 00 00 00
	00 41		 mov	 BYTE PTR ?clear_lens_hud_colour@@3UREAL_COLOUR@@A, 65 ; 00000041H

; 2331 : 	clear_lens_hud_colour.a = 255;

  00089	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?clear_lens_hud_colour@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 2332 : 
; 2333 : 	dc = 0;

  00090	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?dc@@3HA, 0

; 2334 : 	df = 1.0;

  0009a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000a2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?df@@3MA, xmm0

; 2335 : 	_dx = 0;

  000aa	0f 57 c0	 xorps	 xmm0, xmm0
  000ad	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?_dx@@3MA, xmm0

; 2336 : 	_dy = 0;

  000b5	0f 57 c0	 xorps	 xmm0, xmm0
  000b8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?_dy@@3MA, xmm0

; 2337 : }

  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
?initialise_viper_hud@@YGXXZ ENDP			; initialise_viper_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?tan@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?tan@@YGMM@Z PROC					; tan, COMDAT

; 299  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 300  : 	return (_CSTD tanf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _tanf
  00019	83 c4 04	 add	 esp, 4

; 301  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?tan@@YGMM@Z ENDP					; tan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?atan@@YGMM@Z PROC					; atan, COMDAT

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 47   : 	return (_CSTD atanf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _atanf
  00019	83 c4 04	 add	 esp, 4

; 48   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?atan@@YGMM@Z ENDP					; atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _tanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_tanf	PROC						; COMDAT

; 764  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 765  :             return (float)tan(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _tan
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 766  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_tanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 638  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 639  :             return (float)atan(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _atan
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 640  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_atanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
