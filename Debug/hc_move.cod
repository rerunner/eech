; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?min_coning_angle@@3MA				; min_coning_angle
PUBLIC	?max_coning_angle@@3MA				; max_coning_angle
_DATA	SEGMENT
?min_coning_angle@@3MA DD 0bf800000r		; -1	; min_coning_angle
?max_coning_angle@@3MA DD 040a00000r		; 5	; max_coning_angle
_DATA	ENDS
PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_fabsf
PUBLIC	_sinf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?helicopter_movement@@YGXPAUENTITY@@@Z		; helicopter_movement
PUBLIC	?helicopter_death_movement@@YGXPAUENTITY@@@Z	; helicopter_death_movement
PUBLIC	?helicopter_impact_movement@@YGXPAUENTITY@@@Z	; helicopter_impact_movement
PUBLIC	?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z ; update_player_helicopter_waypoint_distance
PUBLIC	?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position
PUBLIC	?debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z	; debug_visuals
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$min@N@std@@YGABNABN0@Z			; std::min<double>
PUBLIC	??$max@N@std@@YGABNABN0@Z			; std::max<double>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA ; `helicopter_movement'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA ; `helicopter_death_movement'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA ; `helicopter_crash_movement'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_impact_movement@@YGXPAUENTITY@@@Z@4JA ; `helicopter_impact_movement'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA ; `helicopter_movement_get_waypoint_position_and_velocity'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_06NGJLJNEL@wp_pos@			; `string'
PUBLIC	??_C@_0CB@GAEGELEL@point_inside_map_volume?5?$CIwp_pos@ ; `string'
PUBLIC	??_C@_02HODPCBMO@wp@				; `string'
PUBLIC	??_C@_0M@CKFOJOAF@task_leader@			; `string'
PUBLIC	??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@ ; `string'
PUBLIC	??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@ ; `string'
PUBLIC	?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA ; `get_waypoint_display_position'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA ; `helicopter_movement_get_desired_heading'::`1'::__LINE__Var
PUBLIC	??_C@_0L@EAKEHFGL@fly_to_pos@			; `string'
PUBLIC	??_C@_05HLIEEKJG@guide@				; `string'
PUBLIC	?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA ; `helicopter_movement_get_desired_pitch'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA ; `helicopter_movement_get_desired_roll'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z@4JA ; `helicopter_movement_calculate_rotor_rpm'::`1'::__LINE__Var
PUBLIC	??_C@_0DN@JKKOAAMD@aircraft_database?5?$FLraw?9?$DOac?4mob?4@ ; `string'
PUBLIC	?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA ; `helicopter_movement_structure_avoidance'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA ; `helicopter_movement_altitude_follow'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA ; `helicopter_movement_calculate_new_position'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA ; `clear_helicopter_velocity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z@4JA ; `update_player_helicopter_waypoint_distance'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA ; `helicopter_adjust_waypoint_position_with_los'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA ; `debug_visuals'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3a83126f
PUBLIC	__real@3eb2b8c2
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f060a92
PUBLIC	__real@3f323456789abcdf
PUBLIC	__real@3f5c987100000000
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fd6571840000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe4cccccccccccd
PUBLIC	__real@3fe6666666666666
PUBLIC	__real@3fe921fb60000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff41b2f80000000
PUBLIC	__real@3ffc000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@4039000000000000
PUBLIC	__real@40400000
PUBLIC	__real@4044000000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@4059000000000000
PUBLIC	__real@40a00000
PUBLIC	__real@40c90fdb
PUBLIC	__real@411cf5c3
PUBLIC	__real@41700000
PUBLIC	__real@41a00000
PUBLIC	__real@42c80000
PUBLIC	__real@43fa0000
PUBLIC	__real@48742400
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c0400000
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_fabs:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_any_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_3d_perp_dist_of_point_from_line@@YGMPBUVEC3D@@00PAU1@@Z:PROC ; get_3d_perp_dist_of_point_from_line
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_transpose_matrix3x3_vec3d
EXTRN	?get_matrix3x3_from_unit_vec3d_and_roll@@YGXQAY02MPBUVEC3D@@M@Z:PROC ; get_matrix3x3_from_unit_vec3d_and_roll
EXTRN	?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z:PROC ; get_3d_transformation_matrix_from_face_normal_and_heading
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_2d_range
EXTRN	?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_3d_range
EXTRN	?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z:PROC ; get_object_3d_bounding_box
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_3d_terrain_point_data_normal@@YGPAUVEC3D@@PAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_normal
EXTRN	?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_elevation
EXTRN	?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_type
EXTRN	?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z:PROC ; get_formation
EXTRN	?bound_position_to_map_area@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_area
EXTRN	?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_volume
EXTRN	?create_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVIEWPOINT@@HMM@Z:PROC ; create_debug_3d_object
EXTRN	?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z:PROC ; create_debug_3d_line
EXTRN	?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z:PROC ; kill_helicopter_rotor_sound_effects
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?create_client_server_object_hit_ground_explosion_effect@@YGXPAUENTITY@@H@Z:PROC ; create_client_server_object_hit_ground_explosion_effect
EXTRN	?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z:PROC ; clear_smoke_list_generator_lifetime
EXTRN	?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z:PROC ; create_client_server_sound_effect_entity
EXTRN	?get_guide_required_heading@@YGHPAUENTITY@@0PAM@Z:PROC ; get_guide_required_heading
EXTRN	?get_guide_required_pitch@@YGHPAUENTITY@@0PAM@Z:PROC ; get_guide_required_pitch
EXTRN	?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_valid
EXTRN	?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_value
EXTRN	?get_local_entity_formation_position_offset@@YGXPAUENTITY@@0PAUVEC3D@@@Z:PROC ; get_local_entity_formation_position_offset
EXTRN	?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z:PROC ; get_terrain_type_class
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_attitude_matrix_ptr@@3PAP6GPAY122MPAUENTITY@@@ZA:BYTE ; fn_get_local_entity_attitude_matrix_ptr
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@48742400
CONST	SEGMENT
__real@48742400 DD 048742400r			; 250000
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@411cf5c3
CONST	SEGMENT
__real@411cf5c3 DD 0411cf5c3r			; 9.81
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4039000000000000
CONST	SEGMENT
__real@4039000000000000 DQ 04039000000000000r	; 25
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ffc000000000000
CONST	SEGMENT
__real@3ffc000000000000 DQ 03ffc000000000000r	; 1.75
CONST	ENDS
;	COMDAT __real@3ff41b2f80000000
CONST	SEGMENT
__real@3ff41b2f80000000 DQ 03ff41b2f80000000r	; 1.25664
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe921fb60000000
CONST	SEGMENT
__real@3fe921fb60000000 DQ 03fe921fb60000000r	; 0.785398
CONST	ENDS
;	COMDAT __real@3fe6666666666666
CONST	SEGMENT
__real@3fe6666666666666 DQ 03fe6666666666666r	; 0.7
CONST	ENDS
;	COMDAT __real@3fe4cccccccccccd
CONST	SEGMENT
__real@3fe4cccccccccccd DQ 03fe4cccccccccccdr	; 0.65
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd6571840000000
CONST	SEGMENT
__real@3fd6571840000000 DQ 03fd6571840000000r	; 0.349066
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f5c987100000000
CONST	SEGMENT
__real@3f5c987100000000 DQ 03f5c987100000000r	; 0.00174533
CONST	ENDS
;	COMDAT __real@3f323456789abcdf
CONST	SEGMENT
__real@3f323456789abcdf DQ 03f323456789abcdfr	; 0.000277778
CONST	ENDS
;	COMDAT __real@3f060a92
CONST	SEGMENT
__real@3f060a92 DD 03f060a92r			; 0.523599
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@3eb2b8c2
CONST	SEGMENT
__real@3eb2b8c2 DD 03eb2b8c2r			; 0.349066
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA DD 079dH ; `debug_visuals'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA DD 071eH ; `helicopter_adjust_waypoint_position_with_los'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z@4JA DD 06f7H ; `update_player_helicopter_waypoint_distance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA DD 06e5H ; `clear_helicopter_velocity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA DD 06a9H ; `helicopter_movement_calculate_new_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA DD 063aH ; `helicopter_movement_altitude_follow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA DD 05d3H ; `helicopter_movement_structure_avoidance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DN@JKKOAAMD@aircraft_database?5?$FLraw?9?$DOac?4mob?4@
CONST	SEGMENT
??_C@_0DN@JKKOAAMD@aircraft_database?5?$FLraw?9?$DOac?4mob?4@ DB 'aircraf'
	DB	't_database [raw->ac.mob.sub_type].power_output != 0.0', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z@4JA DD 05acH ; `helicopter_movement_calculate_rotor_rpm'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA DD 0593H ; `helicopter_movement_get_desired_roll'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA DD 0529H ; `helicopter_movement_get_desired_pitch'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05HLIEEKJG@guide@
CONST	SEGMENT
??_C@_05HLIEEKJG@guide@ DB 'guide', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EAKEHFGL@fly_to_pos@
CONST	SEGMENT
??_C@_0L@EAKEHFGL@fly_to_pos@ DB 'fly_to_pos', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA DD 04e5H ; `helicopter_movement_get_desired_heading'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA DD 04c5H ; `get_waypoint_display_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@
CONST	SEGMENT
??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@ DB 'leader_forma'
	DB	'tion_index < formation_count', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@
CONST	SEGMENT
??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@ DB 'formation_in'
	DB	'dex < formation_count', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CKFOJOAF@task_leader@
CONST	SEGMENT
??_C@_0M@CKFOJOAF@task_leader@ DB 'task_leader', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HODPCBMO@wp@
CONST	SEGMENT
??_C@_02HODPCBMO@wp@ DB 'wp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GAEGELEL@point_inside_map_volume?5?$CIwp_pos@
CONST	SEGMENT
??_C@_0CB@GAEGELEL@point_inside_map_volume?5?$CIwp_pos@ DB 'point_inside_'
	DB	'map_volume (wp_pos)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NGJLJNEL@wp_pos@
CONST	SEGMENT
??_C@_06NGJLJNEL@wp_pos@ DB 'wp_pos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA DD 03dbH ; `helicopter_movement_get_waypoint_position_and_velocity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_impact_movement@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_impact_movement@@YGXPAUENTITY@@@Z@4JA DD 03b6H ; `helicopter_impact_movement'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA DD 030bH ; `helicopter_crash_movement'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA DD 01aaH ; `helicopter_death_movement'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\helic'
	DB	'op\hc_move.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA DD 088H ; `helicopter_movement'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@N@std@@YGABNABN0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@N@std@@YGABNABN0@Z PROC				; std::max<double>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00013	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00017	76 65		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00019	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00023	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00027	77 02		 ja	 SHORT $LN9@max
  00029	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00035	6a 00		 push	 0
  00037	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN12@max
  00051	cc		 int	 3
$LN12@max:
  00052	6a 00		 push	 0
  00054	68 0e 15 00 00	 push	 5390			; 0000150eH
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006e	83 c4 14	 add	 esp, 20			; 00000014H
  00071	33 c0		 xor	 eax, eax
  00073	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00075	33 c0		 xor	 eax, eax
  00077	75 a0		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00079	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007c	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
??$max@N@std@@YGABNABN0@Z ENDP				; std::max<double>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@N@std@@YGABNABN0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@N@std@@YGABNABN0@Z PROC				; std::min<double>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00013	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00017	76 65		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00019	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00023	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00027	77 02		 ja	 SHORT $LN9@min
  00029	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00035	6a 00		 push	 0
  00037	68 36 15 00 00	 push	 5430			; 00001536H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN12@min
  00051	cc		 int	 3
$LN12@min:
  00052	6a 00		 push	 0
  00054	68 36 15 00 00	 push	 5430			; 00001536H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006e	83 c4 14	 add	 esp, 20			; 00000014H
  00071	33 c0		 xor	 eax, eax
  00073	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00075	33 c0		 xor	 eax, eax
  00077	75 a0		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00079	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007c	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
??$min@N@std@@YGABNABN0@Z ENDP				; std::min<double>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv84 = -168						; size = 4
tv76 = -164						; size = 4
_vp$1 = -96						; size = 48
_temp_direction$2 = -48					; size = 12
_temp_position$3 = -36					; size = 12
_los_colour$ = -24					; size = 4
_hc_pos$ = -20						; size = 4
_flat_wp_pos$ = -16					; size = 12
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_wp_pos$ = 12						; size = 4
?debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z PROC		; debug_visuals, COMDAT

; 1949 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1950 : 
; 1951 : 	helicopter
; 1952 : 		*raw;
; 1953 : 
; 1954 : 	vec3d
; 1955 : 		flat_wp_pos,
; 1956 : 		*hc_pos;
; 1957 : 
; 1958 : 	rgb_colour
; 1959 : 		los_colour;
; 1960 : 
; 1961 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@debug_visu
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@debug_visu:

; 1962 : 
; 1963 : 	raw = (helicopter *) get_local_entity_data (en);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1964 : 
; 1965 : 	hc_pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00033	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00037	74 0d		 je	 SHORT $LN4@debug_visu
  00039	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv76[ebp], ecx
  00044	eb 24		 jmp	 SHORT $LN5@debug_visu
$LN4@debug_visu:
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0004c	83 c2 10	 add	 edx, 16			; 00000010H
  0004f	52		 push	 edx
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00060	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN5@debug_visu:
  0006a	b9 01 00 00 00	 mov	 ecx, 1
  0006f	85 c9		 test	 ecx, ecx
  00071	74 0c		 je	 SHORT $LN6@debug_visu
  00073	c7 85 58 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv84[ebp], 8
  0007d	eb 24		 jmp	 SHORT $LN7@debug_visu
$LN6@debug_visu:
  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00085	83 c2 10	 add	 edx, 16			; 00000010H
  00088	52		 push	 edx
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00099	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN7@debug_visu:
  000a3	6a 08		 push	 8
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a8	51		 push	 ecx
  000a9	6b 95 5c ff ff
	ff 60		 imul	 edx, DWORD PTR tv76[ebp], 96
  000b0	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  000b6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000bd	ff d1		 call	 ecx
  000bf	89 45 ec	 mov	 DWORD PTR _hc_pos$[ebp], eax

; 1966 : 
; 1967 : 	// create first line from helicopter to waypoint position
; 1968 : 
; 1969 : 	los_colour.r = 0.0;

  000c2	c6 45 ea 00	 mov	 BYTE PTR _los_colour$[ebp+2], 0

; 1970 : 	los_colour.g = 255.0;

  000c6	c6 45 e9 ff	 mov	 BYTE PTR _los_colour$[ebp+1], 255 ; 000000ffH

; 1971 : 	los_colour.b = 0.0;

  000ca	c6 45 e8 00	 mov	 BYTE PTR _los_colour$[ebp], 0

; 1972 : 	los_colour.a = 255.0;

  000ce	c6 45 eb ff	 mov	 BYTE PTR _los_colour$[ebp+3], 255 ; 000000ffH

; 1973 : 
; 1974 : 	flat_wp_pos = *wp_pos;

  000d2	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  000d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d7	89 4d f0	 mov	 DWORD PTR _flat_wp_pos$[ebp], ecx
  000da	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000dd	89 55 f4	 mov	 DWORD PTR _flat_wp_pos$[ebp+4], edx
  000e0	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000e3	89 45 f8	 mov	 DWORD PTR _flat_wp_pos$[ebp+8], eax

; 1975 : 
; 1976 : 	flat_wp_pos.y = hc_pos->y;

  000e6	8b 45 ec	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  000e9	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000ee	f3 0f 11 45 f4	 movss	 DWORD PTR _flat_wp_pos$[ebp+4], xmm0

; 1977 : 
; 1978 : 	// line to flat wp_pos
; 1979 : 	create_debug_3d_line (hc_pos, &flat_wp_pos, los_colour, 0.001);

  000f3	51		 push	 ecx
  000f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3a83126f
  000fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00101	8b 45 e8	 mov	 eax, DWORD PTR _los_colour$[ebp]
  00104	50		 push	 eax
  00105	8d 4d f0	 lea	 ecx, DWORD PTR _flat_wp_pos$[ebp]
  00108	51		 push	 ecx
  00109	8b 55 ec	 mov	 edx, DWORD PTR _hc_pos$[ebp]
  0010c	52		 push	 edx
  0010d	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 1980 : 
; 1981 : 	los_colour.r = 0.0;

  00112	c6 45 ea 00	 mov	 BYTE PTR _los_colour$[ebp+2], 0

; 1982 : 	los_colour.g = 0.0;

  00116	c6 45 e9 00	 mov	 BYTE PTR _los_colour$[ebp+1], 0

; 1983 : 	los_colour.b = 255.0;

  0011a	c6 45 e8 ff	 mov	 BYTE PTR _los_colour$[ebp], 255 ; 000000ffH

; 1984 : 	los_colour.a = 255.0;

  0011e	c6 45 eb ff	 mov	 BYTE PTR _los_colour$[ebp+3], 255 ; 000000ffH

; 1985 : 
; 1986 : 	// vertical line to wp
; 1987 : 	create_debug_3d_line (&flat_wp_pos, wp_pos, los_colour, 0.001);

  00122	51		 push	 ecx
  00123	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3a83126f
  0012b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00130	8b 45 e8	 mov	 eax, DWORD PTR _los_colour$[ebp]
  00133	50		 push	 eax
  00134	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00137	51		 push	 ecx
  00138	8d 55 f0	 lea	 edx, DWORD PTR _flat_wp_pos$[ebp]
  0013b	52		 push	 edx
  0013c	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 1988 : 
; 1989 : 	// create arrow at wp_pos
; 1990 : 	{
; 1991 : 
; 1992 : 		vec3d
; 1993 : 			temp_position,
; 1994 : 			temp_direction;
; 1995 : 
; 1996 : 			viewpoint
; 1997 : 				vp;
; 1998 : 
; 1999 : 		temp_position = *wp_pos;

  00141	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00144	8b 08		 mov	 ecx, DWORD PTR [eax]
  00146	89 4d dc	 mov	 DWORD PTR _temp_position$3[ebp], ecx
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	89 55 e0	 mov	 DWORD PTR _temp_position$3[ebp+4], edx
  0014f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00152	89 45 e4	 mov	 DWORD PTR _temp_position$3[ebp+8], eax

; 2000 : 
; 2001 : 		temp_direction.x = 0.0;

  00155	0f 57 c0	 xorps	 xmm0, xmm0
  00158	f3 0f 11 45 d0	 movss	 DWORD PTR _temp_direction$2[ebp], xmm0

; 2002 : 		temp_direction.y = 1.0;

  0015d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00165	f3 0f 11 45 d4	 movss	 DWORD PTR _temp_direction$2[ebp+4], xmm0

; 2003 : 		temp_direction.z = 0.0;

  0016a	0f 57 c0	 xorps	 xmm0, xmm0
  0016d	f3 0f 11 45 d8	 movss	 DWORD PTR _temp_direction$2[ebp+8], xmm0

; 2004 : 
; 2005 : 		memcpy (&vp.position, wp_pos, sizeof (vec3d));

  00172	6a 0c		 push	 12			; 0000000cH
  00174	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00177	50		 push	 eax
  00178	8d 4d a0	 lea	 ecx, DWORD PTR _vp$1[ebp]
  0017b	51		 push	 ecx
  0017c	e8 00 00 00 00	 call	 _memcpy
  00181	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2006 : 
; 2007 : 		get_matrix3x3_from_unit_vec3d_and_roll (vp.attitude, &temp_direction, 0.0);

  00184	51		 push	 ecx
  00185	0f 57 c0	 xorps	 xmm0, xmm0
  00188	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018d	8d 45 d0	 lea	 eax, DWORD PTR _temp_direction$2[ebp]
  00190	50		 push	 eax
  00191	8d 4d ac	 lea	 ecx, DWORD PTR _vp$1[ebp+12]
  00194	51		 push	 ecx
  00195	e8 00 00 00 00	 call	 ?get_matrix3x3_from_unit_vec3d_and_roll@@YGXQAY02MPBUVEC3D@@M@Z ; get_matrix3x3_from_unit_vec3d_and_roll

; 2008 : 
; 2009 : 		create_debug_3d_object (&vp, OBJECT_3D_SPHERICAL_TEST, 0.001, 1.0);

  0019a	51		 push	 ecx
  0019b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a8	51		 push	 ecx
  001a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3a83126f
  001b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b6	68 68 0a 00 00	 push	 2664			; 00000a68H
  001bb	8d 45 a0	 lea	 eax, DWORD PTR _vp$1[ebp]
  001be	50		 push	 eax
  001bf	e8 00 00 00 00	 call	 ?create_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVIEWPOINT@@HMM@Z ; create_debug_3d_object

; 2010 : 	}
; 2011 : }

  001c4	5f		 pop	 edi
  001c5	5e		 pop	 esi
  001c6	5b		 pop	 ebx
  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c2 08 00	 ret	 8
?debug_visuals@@YGXPAUENTITY@@PAUVEC3D@@@Z ENDP		; debug_visuals
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv242 = -140						; size = 4
tv221 = -140						; size = 4
tv191 = -140						; size = 4
tv169 = -140						; size = 4
tv149 = -140						; size = 4
tv129 = -140						; size = 4
tv76 = -140						; size = 4
tv234 = -136						; size = 4
tv213 = -136						; size = 4
tv183 = -136						; size = 4
tv161 = -136						; size = 4
tv141 = -136						; size = 4
tv89 = -136						; size = 4
tv69 = -136						; size = 4
_new_pos$1 = -68					; size = 12
_hc$ = -56						; size = 4
_group$ = -52						; size = 4
_closest_hc$ = -48					; size = 4
_hc_pos$ = -44						; size = 4
_en_pos$ = -40						; size = 4
_collision_point$ = -36					; size = 12
_closest_collision_point$ = -24				; size = 12
_distance$ = -12					; size = 4
_range$ = -8						; size = 4
_closest_range$ = -4					; size = 4
_en$ = 8						; size = 4
_wp_pos$ = 12						; size = 4
?helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z PROC ; helicopter_adjust_waypoint_position_with_los, COMDAT

; 1822 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1823 : 
; 1824 : 	float
; 1825 : 		closest_range,
; 1826 : 		range,
; 1827 : 		distance;
; 1828 : 
; 1829 : 	vec3d
; 1830 : 		closest_collision_point,
; 1831 : 		collision_point,
; 1832 : 		*en_pos,
; 1833 : 		*hc_pos;
; 1834 : 
; 1835 : 	entity
; 1836 : 		*closest_hc,
; 1837 : 		*group,
; 1838 : 		*hc;
; 1839 : 
; 1840 : 	if (get_local_entity_int_value (en, INT_TYPE_GROUP_LEADER))

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	74 0d		 je	 SHORT $LN10@helicopter
  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], ecx
  0001d	eb 20		 jmp	 SHORT $LN11@helicopter
$LN10@helicopter:
  0001f	68 30 07 00 00	 push	 1840			; 00000730H
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00029	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00035	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN11@helicopter:
  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	85 c0		 test	 eax, eax
  00046	74 0c		 je	 SHORT $LN12@helicopter
  00048	c7 85 74 ff ff
	ff 48 00 00 00	 mov	 DWORD PTR tv76[ebp], 72	; 00000048H
  00052	eb 20		 jmp	 SHORT $LN13@helicopter
$LN12@helicopter:
  00054	68 30 07 00 00	 push	 1840			; 00000730H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006a	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN13@helicopter:
  00074	6a 48		 push	 72			; 00000048H
  00076	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00079	52		 push	 edx
  0007a	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv69[ebp], 1116
  00084	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv76[ebp]
  0008a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00091	ff d2		 call	 edx
  00093	85 c0		 test	 eax, eax
  00095	74 05		 je	 SHORT $LN4@helicopter

; 1841 : 	{
; 1842 : 
; 1843 : 		// leader doesn't avoid wingmen
; 1844 : 
; 1845 : 		return;

  00097	e9 ca 04 00 00	 jmp	 $LN1@helicopter
$LN4@helicopter:

; 1846 : 	}
; 1847 : 
; 1848 : 	// check los to wp_pos
; 1849 : 
; 1850 : 	en_pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0009c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a0	74 0d		 je	 SHORT $LN14@helicopter
  000a2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a7	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv89[ebp], ecx
  000ad	eb 24		 jmp	 SHORT $LN15@helicopter
$LN14@helicopter:
  000af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  000b5	83 c2 1c	 add	 edx, 28			; 0000001cH
  000b8	52		 push	 edx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN15@helicopter:
  000d3	b9 01 00 00 00	 mov	 ecx, 1
  000d8	85 c9		 test	 ecx, ecx
  000da	74 0c		 je	 SHORT $LN16@helicopter
  000dc	c7 85 74 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv129[ebp], 8
  000e6	eb 24		 jmp	 SHORT $LN17@helicopter
$LN16@helicopter:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  000ee	83 c2 1c	 add	 edx, 28			; 0000001cH
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN17@helicopter:
  0010c	6a 08		 push	 8
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00111	51		 push	 ecx
  00112	6b 95 78 ff ff
	ff 60		 imul	 edx, DWORD PTR tv89[ebp], 96
  00119	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  0011f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00126	ff d1		 call	 ecx
  00128	89 45 d8	 mov	 DWORD PTR _en_pos$[ebp], eax

; 1851 : 
; 1852 : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  0012b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0012f	74 0d		 je	 SHORT $LN18@helicopter
  00131	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00134	8b 08		 mov	 ecx, DWORD PTR [eax]
  00136	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv141[ebp], ecx
  0013c	eb 24		 jmp	 SHORT $LN19@helicopter
$LN18@helicopter:
  0013e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00144	83 c2 1e	 add	 edx, 30			; 0000001eH
  00147	52		 push	 edx
  00148	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00158	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN19@helicopter:
  00162	b9 01 00 00 00	 mov	 ecx, 1
  00167	85 c9		 test	 ecx, ecx
  00169	74 0c		 je	 SHORT $LN20@helicopter
  0016b	c7 85 74 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv149[ebp], 25 ; 00000019H
  00175	eb 24		 jmp	 SHORT $LN21@helicopter
$LN20@helicopter:
  00177	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0017d	83 c2 1e	 add	 edx, 30			; 0000001eH
  00180	52		 push	 edx
  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00186	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00191	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv149[ebp], 0
$LN21@helicopter:
  0019b	6a 19		 push	 25			; 00000019H
  0019d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a0	51		 push	 ecx
  001a1	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv141[ebp], 180
  001ab	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv149[ebp]
  001b1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001b8	ff d1		 call	 ecx
  001ba	89 45 cc	 mov	 DWORD PTR _group$[ebp], eax

; 1853 : 
; 1854 : 	hc = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  001bd	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  001c1	74 0d		 je	 SHORT $LN22@helicopter
  001c3	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  001c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c8	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv161[ebp], ecx
  001ce	eb 24		 jmp	 SHORT $LN23@helicopter
$LN22@helicopter:
  001d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  001d6	83 c2 20	 add	 edx, 32			; 00000020H
  001d9	52		 push	 edx
  001da	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e4	50		 push	 eax
  001e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ea	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv161[ebp], 0
$LN23@helicopter:
  001f4	b9 01 00 00 00	 mov	 ecx, 1
  001f9	85 c9		 test	 ecx, ecx
  001fb	74 0c		 je	 SHORT $LN24@helicopter
  001fd	c7 85 74 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv169[ebp], 25 ; 00000019H
  00207	eb 24		 jmp	 SHORT $LN25@helicopter
$LN24@helicopter:
  00209	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0020f	83 c2 20	 add	 edx, 32			; 00000020H
  00212	52		 push	 edx
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0021d	50		 push	 eax
  0021e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00223	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN25@helicopter:
  0022d	6a 19		 push	 25			; 00000019H
  0022f	8b 4d cc	 mov	 ecx, DWORD PTR _group$[ebp]
  00232	51		 push	 ecx
  00233	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv161[ebp], 180
  0023d	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv169[ebp]
  00243	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0024a	ff d1		 call	 ecx
  0024c	89 45 c8	 mov	 DWORD PTR _hc$[ebp], eax

; 1855 : 
; 1856 : 	#if 0
; 1857 : 	{
; 1858 : 		rgb_colour
; 1859 : 			los_colour;
; 1860 : 
; 1861 : 		los_colour.r = 0.0;
; 1862 : 		los_colour.g = 0.0;
; 1863 : 		los_colour.b = 255.0;
; 1864 : 		los_colour.a = 255.0;
; 1865 : 
; 1866 : 		// vertical line to wp
; 1867 : 		create_debug_3d_line (en_pos, wp_pos, los_colour, 0.001);
; 1868 : 	}
; 1869 : 	#endif
; 1870 : 
; 1871 : 	closest_range = ((500.0 * METRE) * (500.0 * METRE));

  0024f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@48742400
  00257	f3 0f 11 45 fc	 movss	 DWORD PTR _closest_range$[ebp], xmm0

; 1872 : 
; 1873 : 	closest_hc = NULL;

  0025c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _closest_hc$[ebp], 0
$LN2@helicopter:

; 1874 : 
; 1875 : 	while (hc)

  00263	83 7d c8 00	 cmp	 DWORD PTR _hc$[ebp], 0
  00267	0f 84 95 01 00
	00		 je	 $LN3@helicopter

; 1876 : 	{
; 1877 : 
; 1878 : 		if (hc != en)

  0026d	8b 45 c8	 mov	 eax, DWORD PTR _hc$[ebp]
  00270	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  00273	0f 84 f2 00 00
	00		 je	 $LN7@helicopter

; 1879 : 		{
; 1880 : 
; 1881 : 			hc_pos = get_local_entity_vec3d_ptr (hc, VEC3D_TYPE_POSITION);

  00279	83 7d c8 00	 cmp	 DWORD PTR _hc$[ebp], 0
  0027d	74 0d		 je	 SHORT $LN26@helicopter
  0027f	8b 45 c8	 mov	 eax, DWORD PTR _hc$[ebp]
  00282	8b 08		 mov	 ecx, DWORD PTR [eax]
  00284	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv183[ebp], ecx
  0028a	eb 24		 jmp	 SHORT $LN27@helicopter
$LN26@helicopter:
  0028c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00292	83 c2 3b	 add	 edx, 59			; 0000003bH
  00295	52		 push	 edx
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a0	50		 push	 eax
  002a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a6	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN27@helicopter:
  002b0	b9 01 00 00 00	 mov	 ecx, 1
  002b5	85 c9		 test	 ecx, ecx
  002b7	74 0c		 je	 SHORT $LN28@helicopter
  002b9	c7 85 74 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv191[ebp], 8
  002c3	eb 24		 jmp	 SHORT $LN29@helicopter
$LN28@helicopter:
  002c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  002cb	83 c2 3b	 add	 edx, 59			; 0000003bH
  002ce	52		 push	 edx
  002cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002d9	50		 push	 eax
  002da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002df	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv191[ebp], 0
$LN29@helicopter:
  002e9	6a 08		 push	 8
  002eb	8b 4d c8	 mov	 ecx, DWORD PTR _hc$[ebp]
  002ee	51		 push	 ecx
  002ef	6b 95 78 ff ff
	ff 60		 imul	 edx, DWORD PTR tv183[ebp], 96
  002f6	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv191[ebp]
  002fc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00303	ff d1		 call	 ecx
  00305	89 45 d4	 mov	 DWORD PTR _hc_pos$[ebp], eax

; 1882 : 
; 1883 : 			range = get_sqr_3d_range (hc_pos, en_pos);

  00308	8b 45 d8	 mov	 eax, DWORD PTR _en_pos$[ebp]
  0030b	50		 push	 eax
  0030c	8b 4d d4	 mov	 ecx, DWORD PTR _hc_pos$[ebp]
  0030f	51		 push	 ecx
  00310	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  00315	d9 5d f8	 fstp	 DWORD PTR _range$[ebp]

; 1884 : 
; 1885 : 			if (range < closest_range)

  00318	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _closest_range$[ebp]
  0031d	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _range$[ebp]
  00321	76 48		 jbe	 SHORT $LN7@helicopter

; 1886 : 			{
; 1887 : 
; 1888 : 				distance = get_3d_perp_dist_of_point_from_line (en_pos, wp_pos, hc_pos, &collision_point);

  00323	8d 45 dc	 lea	 eax, DWORD PTR _collision_point$[ebp]
  00326	50		 push	 eax
  00327	8b 4d d4	 mov	 ecx, DWORD PTR _hc_pos$[ebp]
  0032a	51		 push	 ecx
  0032b	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  0032e	52		 push	 edx
  0032f	8b 45 d8	 mov	 eax, DWORD PTR _en_pos$[ebp]
  00332	50		 push	 eax
  00333	e8 00 00 00 00	 call	 ?get_3d_perp_dist_of_point_from_line@@YGMPBUVEC3D@@00PAU1@@Z ; get_3d_perp_dist_of_point_from_line
  00338	d9 5d f4	 fstp	 DWORD PTR _distance$[ebp]

; 1889 : 
; 1890 : 				if (distance <= HELICOPTER_AVOIDANCE_DISTANCE)

  0033b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  00343	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _distance$[ebp]
  00347	72 22		 jb	 SHORT $LN7@helicopter

; 1891 : 				{
; 1892 : 
; 1893 : 					closest_range = range;

  00349	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _range$[ebp]
  0034e	f3 0f 11 45 fc	 movss	 DWORD PTR _closest_range$[ebp], xmm0

; 1894 : 
; 1895 : 					closest_hc = hc;

  00353	8b 45 c8	 mov	 eax, DWORD PTR _hc$[ebp]
  00356	89 45 d0	 mov	 DWORD PTR _closest_hc$[ebp], eax

; 1896 : 
; 1897 : 					closest_collision_point = collision_point;

  00359	8b 45 dc	 mov	 eax, DWORD PTR _collision_point$[ebp]
  0035c	89 45 e8	 mov	 DWORD PTR _closest_collision_point$[ebp], eax
  0035f	8b 4d e0	 mov	 ecx, DWORD PTR _collision_point$[ebp+4]
  00362	89 4d ec	 mov	 DWORD PTR _closest_collision_point$[ebp+4], ecx
  00365	8b 55 e4	 mov	 edx, DWORD PTR _collision_point$[ebp+8]
  00368	89 55 f0	 mov	 DWORD PTR _closest_collision_point$[ebp+8], edx
$LN7@helicopter:

; 1898 : 				}
; 1899 : 			}
; 1900 : 		}
; 1901 : 
; 1902 : 		hc = get_local_entity_child_succ (hc, LIST_TYPE_MEMBER);

  0036b	83 7d c8 00	 cmp	 DWORD PTR _hc$[ebp], 0
  0036f	74 0d		 je	 SHORT $LN30@helicopter
  00371	8b 45 c8	 mov	 eax, DWORD PTR _hc$[ebp]
  00374	8b 08		 mov	 ecx, DWORD PTR [eax]
  00376	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv213[ebp], ecx
  0037c	eb 24		 jmp	 SHORT $LN31@helicopter
$LN30@helicopter:
  0037e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00384	83 c2 50	 add	 edx, 80			; 00000050H
  00387	52		 push	 edx
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00398	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
$LN31@helicopter:
  003a2	b9 01 00 00 00	 mov	 ecx, 1
  003a7	85 c9		 test	 ecx, ecx
  003a9	74 0c		 je	 SHORT $LN32@helicopter
  003ab	c7 85 74 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv221[ebp], 25 ; 00000019H
  003b5	eb 24		 jmp	 SHORT $LN33@helicopter
$LN32@helicopter:
  003b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  003bd	83 c2 50	 add	 edx, 80			; 00000050H
  003c0	52		 push	 edx
  003c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003cb	50		 push	 eax
  003cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d1	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv221[ebp], 0
$LN33@helicopter:
  003db	6a 19		 push	 25			; 00000019H
  003dd	8b 4d c8	 mov	 ecx, DWORD PTR _hc$[ebp]
  003e0	51		 push	 ecx
  003e1	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv213[ebp], 180
  003eb	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv221[ebp]
  003f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003f8	ff d1		 call	 ecx
  003fa	89 45 c8	 mov	 DWORD PTR _hc$[ebp], eax

; 1903 : 	}

  003fd	e9 61 fe ff ff	 jmp	 $LN2@helicopter
$LN3@helicopter:

; 1904 : 
; 1905 : 	if (closest_hc)

  00402	83 7d d0 00	 cmp	 DWORD PTR _closest_hc$[ebp], 0
  00406	0f 84 5a 01 00
	00		 je	 $LN8@helicopter

; 1906 : 	{
; 1907 : 
; 1908 : 		vec3d
; 1909 : 			new_pos;
; 1910 : 
; 1911 : 		hc_pos = get_local_entity_vec3d_ptr (closest_hc, VEC3D_TYPE_POSITION);

  0040c	83 7d d0 00	 cmp	 DWORD PTR _closest_hc$[ebp], 0
  00410	74 0d		 je	 SHORT $LN34@helicopter
  00412	8b 45 d0	 mov	 eax, DWORD PTR _closest_hc$[ebp]
  00415	8b 08		 mov	 ecx, DWORD PTR [eax]
  00417	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv234[ebp], ecx
  0041d	eb 24		 jmp	 SHORT $LN35@helicopter
$LN34@helicopter:
  0041f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00425	83 c2 59	 add	 edx, 89			; 00000059H
  00428	52		 push	 edx
  00429	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00439	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN35@helicopter:
  00443	b9 01 00 00 00	 mov	 ecx, 1
  00448	85 c9		 test	 ecx, ecx
  0044a	74 0c		 je	 SHORT $LN36@helicopter
  0044c	c7 85 74 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv242[ebp], 8
  00456	eb 24		 jmp	 SHORT $LN37@helicopter
$LN36@helicopter:
  00458	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0045e	83 c2 59	 add	 edx, 89			; 00000059H
  00461	52		 push	 edx
  00462	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00467	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0046c	50		 push	 eax
  0046d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00472	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN37@helicopter:
  0047c	6a 08		 push	 8
  0047e	8b 4d d0	 mov	 ecx, DWORD PTR _closest_hc$[ebp]
  00481	51		 push	 ecx
  00482	6b 95 78 ff ff
	ff 60		 imul	 edx, DWORD PTR tv234[ebp], 96
  00489	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv242[ebp]
  0048f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00496	ff d1		 call	 ecx
  00498	89 45 d4	 mov	 DWORD PTR _hc_pos$[ebp], eax

; 1912 : 
; 1913 : 		new_pos.x = closest_collision_point.x - hc_pos->x;

  0049b	8b 45 d4	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  0049e	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _closest_collision_point$[ebp]
  004a3	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  004a7	f3 0f 11 45 bc	 movss	 DWORD PTR _new_pos$1[ebp], xmm0

; 1914 : 		new_pos.y = closest_collision_point.y - hc_pos->y;

  004ac	8b 45 d4	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  004af	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _closest_collision_point$[ebp+4]
  004b4	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  004b9	f3 0f 11 45 c0	 movss	 DWORD PTR _new_pos$1[ebp+4], xmm0

; 1915 : 		new_pos.z = closest_collision_point.z - hc_pos->z;

  004be	8b 45 d4	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  004c1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _closest_collision_point$[ebp+8]
  004c6	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  004cb	f3 0f 11 45 c4	 movss	 DWORD PTR _new_pos$1[ebp+8], xmm0

; 1916 : 
; 1917 : 		normalise_any_3d_vector (&new_pos);

  004d0	8d 45 bc	 lea	 eax, DWORD PTR _new_pos$1[ebp]
  004d3	50		 push	 eax
  004d4	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  004d9	dd d8		 fstp	 ST(0)

; 1918 : 
; 1919 : 		new_pos.x = hc_pos->x + (2.0 * HELICOPTER_AVOIDANCE_DISTANCE * new_pos.x);

  004db	8b 45 d4	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  004de	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  004e2	f3 0f 5a 4d bc	 cvtss2sd xmm1, DWORD PTR _new_pos$1[ebp]
  004e7	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4044000000000000
  004ef	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f7	f3 0f 11 45 bc	 movss	 DWORD PTR _new_pos$1[ebp], xmm0

; 1920 : 		new_pos.y = hc_pos->y + (2.0 * HELICOPTER_AVOIDANCE_DISTANCE * new_pos.y);

  004fc	8b 45 d4	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  004ff	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00504	f3 0f 5a 4d c0	 cvtss2sd xmm1, DWORD PTR _new_pos$1[ebp+4]
  00509	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4044000000000000
  00511	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00515	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00519	f3 0f 11 45 c0	 movss	 DWORD PTR _new_pos$1[ebp+4], xmm0

; 1921 : 		new_pos.z = hc_pos->z + (2.0 * HELICOPTER_AVOIDANCE_DISTANCE * new_pos.z);

  0051e	8b 45 d4	 mov	 eax, DWORD PTR _hc_pos$[ebp]
  00521	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00526	f3 0f 5a 4d c4	 cvtss2sd xmm1, DWORD PTR _new_pos$1[ebp+8]
  0052b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4044000000000000
  00533	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00537	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0053b	f3 0f 11 45 c4	 movss	 DWORD PTR _new_pos$1[ebp+8], xmm0

; 1922 : 
; 1923 : 		wp_pos->x = new_pos.x;

  00540	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00543	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _new_pos$1[ebp]
  00548	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1924 : 		wp_pos->y = new_pos.y;

  0054c	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  0054f	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _new_pos$1[ebp+4]
  00554	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1925 : 		wp_pos->z = new_pos.z;

  00559	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  0055c	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _new_pos$1[ebp+8]
  00561	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN8@helicopter:
$LN1@helicopter:

; 1926 : 
; 1927 : 		#if 0
; 1928 : 		{
; 1929 : 			rgb_colour
; 1930 : 				los_colour;
; 1931 : 
; 1932 : 			los_colour.r = 255.0;
; 1933 : 			los_colour.g = 0.0;
; 1934 : 			los_colour.b = 0.0;
; 1935 : 			los_colour.a = 255.0;
; 1936 : 
; 1937 : 			// vertical line to wp
; 1938 : 			create_debug_3d_line (en_pos, wp_pos, los_colour, 0.001);
; 1939 : 		}
; 1940 : 		#endif
; 1941 : 	}
; 1942 : }

  00566	5f		 pop	 edi
  00567	5e		 pop	 esi
  00568	5b		 pop	 ebx
  00569	8b e5		 mov	 esp, ebp
  0056b	5d		 pop	 ebp
  0056c	c2 08 00	 ret	 8
?helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z ENDP ; helicopter_adjust_waypoint_position_with_los
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?clear_helicopter_velocity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv130 = -84						; size = 4
tv78 = -84						; size = 4
tv90 = -80						; size = 4
tv70 = -80						; size = 4
_velocity$ = -12					; size = 12
_en$ = 8						; size = 4
?clear_helicopter_velocity@@YGXPAUENTITY@@@Z PROC	; clear_helicopter_velocity, COMDAT

; 1765 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1766 : 	vec3d
; 1767 : 		velocity;
; 1768 : 
; 1769 : 	velocity.x = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f4	 movss	 DWORD PTR _velocity$[ebp], xmm0

; 1770 : 	velocity.y = 0.0;

  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 f8	 movss	 DWORD PTR _velocity$[ebp+4], xmm0

; 1771 : 	velocity.z = 0.0;

  00019	0f 57 c0	 xorps	 xmm0, xmm0
  0001c	f3 0f 11 45 fc	 movss	 DWORD PTR _velocity$[ebp+8], xmm0

; 1772 : 
; 1773 : 	set_local_entity_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &velocity);

  00021	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00025	74 0a		 je	 SHORT $LN3@clear_heli
  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  0002f	eb 21		 jmp	 SHORT $LN4@clear_heli
$LN3@clear_heli:
  00031	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA
  00037	83 c2 08	 add	 edx, 8
  0003a	52		 push	 edx
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@clear_heli:
  00052	b9 01 00 00 00	 mov	 ecx, 1
  00057	85 c9		 test	 ecx, ecx
  00059	74 09		 je	 SHORT $LN5@clear_heli
  0005b	c7 45 ac 06 00
	00 00		 mov	 DWORD PTR tv78[ebp], 6
  00062	eb 21		 jmp	 SHORT $LN6@clear_heli
$LN5@clear_heli:
  00064	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA
  0006a	83 c2 08	 add	 edx, 8
  0006d	52		 push	 edx
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@clear_heli:
  00085	8d 4d f4	 lea	 ecx, DWORD PTR _velocity$[ebp]
  00088	51		 push	 ecx
  00089	6a 06		 push	 6
  0008b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008e	52		 push	 edx
  0008f	6b 45 b0 60	 imul	 eax, DWORD PTR tv70[ebp], 96
  00093	8b 4d ac	 mov	 ecx, DWORD PTR tv78[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx

; 1774 : 
; 1775 : 	set_local_entity_float_value (en, FLOAT_TYPE_VELOCITY, 0.0);

  0009f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a3	74 0a		 je	 SHORT $LN7@clear_heli
  000a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	89 4d b0	 mov	 DWORD PTR tv90[ebp], ecx
  000ad	eb 21		 jmp	 SHORT $LN8@clear_heli
$LN7@clear_heli:
  000af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA
  000b5	83 c2 0a	 add	 edx, 10			; 0000000aH
  000b8	52		 push	 edx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c9	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN8@clear_heli:
  000d0	b9 01 00 00 00	 mov	 ecx, 1
  000d5	85 c9		 test	 ecx, ecx
  000d7	74 09		 je	 SHORT $LN9@clear_heli
  000d9	c7 45 ac 93 00
	00 00		 mov	 DWORD PTR tv130[ebp], 147 ; 00000093H
  000e0	eb 21		 jmp	 SHORT $LN10@clear_heli
$LN9@clear_heli:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_helicopter_velocity@@YGXPAUENTITY@@@Z@4JA
  000e8	83 c2 0a	 add	 edx, 10			; 0000000aH
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN10@clear_heli:
  00103	51		 push	 ecx
  00104	0f 57 c0	 xorps	 xmm0, xmm0
  00107	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010c	68 93 00 00 00	 push	 147			; 00000093H
  00111	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00114	51		 push	 ecx
  00115	69 55 b0 bc 02
	00 00		 imul	 edx, DWORD PTR tv90[ebp], 700
  0011c	8b 45 ac	 mov	 eax, DWORD PTR tv130[ebp]
  0011f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00126	ff d1		 call	 ecx

; 1776 : }

  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 04 00	 ret	 4
?clear_helicopter_velocity@@YGXPAUENTITY@@@Z ENDP	; clear_helicopter_velocity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_crash_movement@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv562 = -208						; size = 4
tv373 = -204						; size = 4
tv350 = -204						; size = 4
tv291 = -204						; size = 4
tv245 = -204						; size = 4
tv225 = -204						; size = 4
tv201 = -204						; size = 4
tv169 = -204						; size = 4
tv486 = -200						; size = 4
tv463 = -200						; size = 4
tv365 = -200						; size = 4
tv342 = -200						; size = 4
tv283 = -200						; size = 4
tv237 = -200						; size = 4
tv217 = -200						; size = 4
tv202 = -200						; size = 4
tv170 = -200						; size = 4
$T1 = -196						; size = 4
$T2 = -192						; size = 8
$T3 = -184						; size = 8
_m$ = -112						; size = 36
_face_normal$ = -76					; size = 4
_new_pos$ = -72						; size = 12
_velocity$ = -60					; size = 4
_pos$ = -56						; size = 4
_terrain_elevation$ = -52				; size = 4
_dz$ = -48						; size = 4
_dy$ = -44						; size = 4
_dx$ = -40						; size = 4
_acc$ = -36						; size = 4
_speed$ = -32						; size = 4
_max_angle$ = -28					; size = 4
_delta_angle$ = -24					; size = 4
_required_angle$ = -20					; size = 4
_roll$ = -16						; size = 4
_pitch$ = -12						; size = 4
_heading$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_crash_movement@@YGHPAUENTITY@@@Z PROC	; helicopter_crash_movement, COMDAT

; 779  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 780  : 
; 781  : 	helicopter
; 782  : 		*raw;
; 783  : 
; 784  : 	float
; 785  : 		heading,
; 786  : 		pitch,
; 787  : 		roll,
; 788  : 		required_angle,
; 789  : 		delta_angle,
; 790  : 		max_angle,
; 791  : 		speed,
; 792  : 		acc,
; 793  : 		dx,
; 794  : 		dy,
; 795  : 		dz,
; 796  : 		terrain_elevation;
; 797  : 
; 798  : 	vec3d
; 799  : 		*pos,
; 800  : 		*velocity,
; 801  : 		new_pos,
; 802  : 		*face_normal;
; 803  : 
; 804  : 	matrix3x3
; 805  : 		m;
; 806  : 
; 807  : 	raw = (helicopter *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 808  : 
; 809  : 	//
; 810  : 	// update attitude
; 811  : 	//
; 812  : 
; 813  : 	heading = get_heading_from_attitude_matrix (raw->ac.mob.attitude);

  00015	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0001a	d1 e0		 shl	 eax, 1
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0001f	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00023	b8 04 00 00 00	 mov	 eax, 4
  00028	d1 e0		 shl	 eax, 1
  0002a	51		 push	 ecx
  0002b	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0003a	d1 e1		 shl	 ecx, 1
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0003f	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00043	b9 04 00 00 00	 mov	 ecx, 4
  00048	6b d1 00	 imul	 edx, ecx, 0
  0004b	51		 push	 ecx
  0004c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00051	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00056	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0005b	d9 5d f8	 fstp	 DWORD PTR _heading$[ebp]

; 814  : 
; 815  : 	pitch = get_pitch_from_attitude_matrix (raw->ac.mob.attitude);

  0005e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00063	d1 e0		 shl	 eax, 1
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00068	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  0006c	b8 04 00 00 00	 mov	 eax, 4
  00071	c1 e0 00	 shl	 eax, 0
  00074	51		 push	 ecx
  00075	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0007a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007f	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  00084	d9 5d f4	 fstp	 DWORD PTR _pitch$[ebp]

; 816  : 
; 817  : 	roll = get_roll_from_attitude_matrix (raw->ac.mob.attitude);

  00087	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008c	c1 e0 00	 shl	 eax, 0
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00092	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00096	b8 04 00 00 00	 mov	 eax, 4
  0009b	c1 e0 00	 shl	 eax, 0
  0009e	51		 push	 ecx
  0009f	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  000a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000ae	6b d1 00	 imul	 edx, ecx, 0
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b4	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  000b8	ba 04 00 00 00	 mov	 edx, 4
  000bd	c1 e2 00	 shl	 edx, 0
  000c0	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  000c5	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  000d7	d9 5d f0	 fstp	 DWORD PTR _roll$[ebp]

; 818  : 
; 819  : 	face_normal = get_3d_terrain_point_data_normal (&raw->ac.terrain_info);

  000da	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000dd	05 54 01 00 00	 add	 eax, 340		; 00000154H
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_normal@@YGPAUVEC3D@@PAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_normal
  000e8	89 45 b4	 mov	 DWORD PTR _face_normal$[ebp], eax

; 820  : 
; 821  : 	get_3d_transformation_matrix_from_face_normal_and_heading (m, face_normal, heading);

  000eb	51		 push	 ecx
  000ec	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  000f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f6	8b 45 b4	 mov	 eax, DWORD PTR _face_normal$[ebp]
  000f9	50		 push	 eax
  000fa	8d 4d 90	 lea	 ecx, DWORD PTR _m$[ebp]
  000fd	51		 push	 ecx
  000fe	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z ; get_3d_transformation_matrix_from_face_normal_and_heading

; 822  : 
; 823  : 	//
; 824  : 	// pitch
; 825  : 	//
; 826  : 
; 827  : 	required_angle = get_pitch_from_attitude_matrix (m) + aircraft_database [raw->ac.mob.sub_type].destroyed_pitch_offset;

  00103	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00108	d1 e0		 shl	 eax, 1
  0010a	8d 4c 05 90	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0010e	ba 04 00 00 00	 mov	 edx, 4
  00113	c1 e2 00	 shl	 edx, 0
  00116	51		 push	 ecx
  00117	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0011c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00121	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  00126	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR tv463[ebp]
  0012c	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv463[ebp]
  00134	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00137	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  0013d	f3 0f 58 81 7c
	00 00 00	 addss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+124]
  00145	f3 0f 11 45 ec	 movss	 DWORD PTR _required_angle$[ebp], xmm0

; 828  : 
; 829  : 	max_angle = PI * get_entity_movement_delta_time ();

  0014a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40490fdb
  00152	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0015a	f3 0f 11 45 e4	 movss	 DWORD PTR _max_angle$[ebp], xmm0

; 830  : 
; 831  : 	delta_angle = bound (required_angle - pitch, -max_angle, max_angle);

  0015f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _required_angle$[ebp]
  00164	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _pitch$[ebp]
  00169	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _max_angle$[ebp]
  0016e	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00175	0f 2f c8	 comiss	 xmm1, xmm0
  00178	76 16		 jbe	 SHORT $LN9@helicopter
  0017a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _max_angle$[ebp]
  0017f	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00186	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv170[ebp], xmm0
  0018e	eb 41		 jmp	 SHORT $LN10@helicopter
$LN9@helicopter:
  00190	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _required_angle$[ebp]
  00195	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _pitch$[ebp]
  0019a	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _max_angle$[ebp]
  0019e	76 0f		 jbe	 SHORT $LN7@helicopter
  001a0	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _max_angle$[ebp]
  001a5	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR tv169[ebp], xmm0
  001ad	eb 12		 jmp	 SHORT $LN8@helicopter
$LN7@helicopter:
  001af	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _required_angle$[ebp]
  001b4	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _pitch$[ebp]
  001b9	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR tv169[ebp], xmm0
$LN8@helicopter:
  001c1	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv169[ebp]
  001c9	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv170[ebp], xmm0
$LN10@helicopter:
  001d1	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv170[ebp]
  001d9	f3 0f 11 45 e8	 movss	 DWORD PTR _delta_angle$[ebp], xmm0

; 832  : 
; 833  : 	pitch += delta_angle;

  001de	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  001e3	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _delta_angle$[ebp]
  001e8	f3 0f 11 45 f4	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 834  : 
; 835  : 	//
; 836  : 	// roll
; 837  : 	//
; 838  : 
; 839  : 	required_angle = get_roll_from_attitude_matrix (m) + aircraft_database [raw->ac.mob.sub_type].destroyed_bank_offset;

  001ed	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001f2	c1 e0 00	 shl	 eax, 0
  001f5	8d 4c 05 90	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  001f9	ba 04 00 00 00	 mov	 edx, 4
  001fe	c1 e2 00	 shl	 edx, 0
  00201	51		 push	 ecx
  00202	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00207	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00211	6b c8 00	 imul	 ecx, eax, 0
  00214	8d 54 0d 90	 lea	 edx, DWORD PTR _m$[ebp+ecx]
  00218	b8 04 00 00 00	 mov	 eax, 4
  0021d	c1 e0 00	 shl	 eax, 0
  00220	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00225	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0022c	51		 push	 ecx
  0022d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00232	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00237	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR tv486[ebp]
  0023d	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv486[ebp]
  00245	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00248	69 11 f4 00 00
	00		 imul	 edx, DWORD PTR [ecx], 244
  0024e	f3 0f 58 82 78
	00 00 00	 addss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+120]
  00256	f3 0f 11 45 ec	 movss	 DWORD PTR _required_angle$[ebp], xmm0

; 840  : 
; 841  : 	max_angle = PI * 0.25 * get_entity_movement_delta_time ();

  0025b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00263	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe921fb60000000
  0026b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0026f	f3 0f 11 45 e4	 movss	 DWORD PTR _max_angle$[ebp], xmm0

; 842  : 
; 843  : 	delta_angle = bound (required_angle - roll, -max_angle, max_angle);

  00274	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _required_angle$[ebp]
  00279	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _roll$[ebp]
  0027e	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _max_angle$[ebp]
  00283	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  0028a	0f 2f c8	 comiss	 xmm1, xmm0
  0028d	76 16		 jbe	 SHORT $LN13@helicopter
  0028f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _max_angle$[ebp]
  00294	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0029b	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv202[ebp], xmm0
  002a3	eb 41		 jmp	 SHORT $LN14@helicopter
$LN13@helicopter:
  002a5	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _required_angle$[ebp]
  002aa	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _roll$[ebp]
  002af	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _max_angle$[ebp]
  002b3	76 0f		 jbe	 SHORT $LN11@helicopter
  002b5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _max_angle$[ebp]
  002ba	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR tv201[ebp], xmm0
  002c2	eb 12		 jmp	 SHORT $LN12@helicopter
$LN11@helicopter:
  002c4	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _required_angle$[ebp]
  002c9	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _roll$[ebp]
  002ce	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR tv201[ebp], xmm0
$LN12@helicopter:
  002d6	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv201[ebp]
  002de	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv202[ebp], xmm0
$LN14@helicopter:
  002e6	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv202[ebp]
  002ee	f3 0f 11 45 e8	 movss	 DWORD PTR _delta_angle$[ebp], xmm0

; 844  : 
; 845  : 	roll += delta_angle;

  002f3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _roll$[ebp]
  002f8	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _delta_angle$[ebp]
  002fd	f3 0f 11 45 f0	 movss	 DWORD PTR _roll$[ebp], xmm0

; 846  : 
; 847  : 	//
; 848  : 
; 849  : 	get_3d_transformation_matrix (raw->ac.mob.attitude, heading, pitch, roll);

  00302	51		 push	 ecx
  00303	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _roll$[ebp]
  00308	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030d	51		 push	 ecx
  0030e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00313	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00318	51		 push	 ecx
  00319	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0031e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00323	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00326	83 c0 10	 add	 eax, 16			; 00000010H
  00329	50		 push	 eax
  0032a	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 850  : 
; 851  : 	//
; 852  : 	// work out new position
; 853  : 	//
; 854  : 
; 855  : 	velocity = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  0032f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00333	74 0d		 je	 SHORT $LN15@helicopter
  00335	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00338	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033a	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv217[ebp], ecx
  00340	eb 24		 jmp	 SHORT $LN16@helicopter
$LN15@helicopter:
  00342	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  00348	83 c2 4c	 add	 edx, 76			; 0000004cH
  0034b	52		 push	 edx
  0034c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00351	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00356	50		 push	 eax
  00357	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035c	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv217[ebp], 0
$LN16@helicopter:
  00366	b9 01 00 00 00	 mov	 ecx, 1
  0036b	85 c9		 test	 ecx, ecx
  0036d	74 0c		 je	 SHORT $LN17@helicopter
  0036f	c7 85 34 ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv225[ebp], 6
  00379	eb 24		 jmp	 SHORT $LN18@helicopter
$LN17@helicopter:
  0037b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  00381	83 c2 4c	 add	 edx, 76			; 0000004cH
  00384	52		 push	 edx
  00385	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0038f	50		 push	 eax
  00390	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00395	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv225[ebp], 0
$LN18@helicopter:
  0039f	6a 06		 push	 6
  003a1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003a4	51		 push	 ecx
  003a5	6b 95 38 ff ff
	ff 60		 imul	 edx, DWORD PTR tv217[ebp], 96
  003ac	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv225[ebp]
  003b2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  003b9	ff d1		 call	 ecx
  003bb	89 45 c4	 mov	 DWORD PTR _velocity$[ebp], eax

; 856  : 
; 857  : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  003be	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003c2	74 0d		 je	 SHORT $LN19@helicopter
  003c4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c9	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv237[ebp], ecx
  003cf	eb 24		 jmp	 SHORT $LN20@helicopter
$LN19@helicopter:
  003d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  003d7	83 c2 4e	 add	 edx, 78			; 0000004eH
  003da	52		 push	 edx
  003db	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e5	50		 push	 eax
  003e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003eb	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN20@helicopter:
  003f5	b9 01 00 00 00	 mov	 ecx, 1
  003fa	85 c9		 test	 ecx, ecx
  003fc	74 0c		 je	 SHORT $LN21@helicopter
  003fe	c7 85 34 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv245[ebp], 8
  00408	eb 24		 jmp	 SHORT $LN22@helicopter
$LN21@helicopter:
  0040a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  00410	83 c2 4e	 add	 edx, 78			; 0000004eH
  00413	52		 push	 edx
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00419	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0041e	50		 push	 eax
  0041f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00424	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv245[ebp], 0
$LN22@helicopter:
  0042e	6a 08		 push	 8
  00430	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00433	51		 push	 ecx
  00434	6b 95 38 ff ff
	ff 60		 imul	 edx, DWORD PTR tv237[ebp], 96
  0043b	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv245[ebp]
  00441	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00448	ff d1		 call	 ecx
  0044a	89 45 c8	 mov	 DWORD PTR _pos$[ebp], eax

; 858  : 
; 859  : 	new_pos.x = pos->x + (velocity->x * get_entity_movement_delta_time());

  0044d	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  00450	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00454	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0045c	8b 4d c8	 mov	 ecx, DWORD PTR _pos$[ebp]
  0045f	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00463	f3 0f 11 45 b8	 movss	 DWORD PTR _new_pos$[ebp], xmm0

; 860  : 	new_pos.z = pos->z + (velocity->z * get_entity_movement_delta_time());

  00468	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  0046b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00470	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00478	8b 4d c8	 mov	 ecx, DWORD PTR _pos$[ebp]
  0047b	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00480	f3 0f 11 45 c0	 movss	 DWORD PTR _new_pos$[ebp+8], xmm0

; 861  : 
; 862  : 	bound_position_to_map_area (&new_pos);

  00485	8d 45 b8	 lea	 eax, DWORD PTR _new_pos$[ebp]
  00488	50		 push	 eax
  00489	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 863  : 
; 864  : 	get_3d_terrain_point_data (new_pos.x, new_pos.z, &raw->ac.terrain_info);

  0048e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00491	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00496	50		 push	 eax
  00497	51		 push	 ecx
  00498	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _new_pos$[ebp+8]
  0049d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a2	51		 push	 ecx
  004a3	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _new_pos$[ebp]
  004a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ad	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  004b2	dd d8		 fstp	 ST(0)

; 865  : 
; 866  : 	terrain_elevation = get_3d_terrain_point_data_elevation (&raw->ac.terrain_info);

  004b4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004b7	05 54 01 00 00	 add	 eax, 340		; 00000154H
  004bc	50		 push	 eax
  004bd	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  004c2	d9 5d cc	 fstp	 DWORD PTR _terrain_elevation$[ebp]

; 867  : 
; 868  : 	if (get_terrain_type_class (get_3d_terrain_point_data_type (&raw->ac.terrain_info)) == TERRAIN_CLASS_FOREST)

  004c5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004c8	05 54 01 00 00	 add	 eax, 340		; 00000154H
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  004d3	50		 push	 eax
  004d4	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  004d9	83 f8 02	 cmp	 eax, 2
  004dc	75 12		 jne	 SHORT $LN2@helicopter

; 869  : 	{
; 870  : 		//
; 871  : 		// use last frame's altitude to stop aircraft from magically pinging to the top of the forest
; 872  : 		//
; 873  : 
; 874  : 		new_pos.y = pos->y;

  004de	8b 45 c8	 mov	 eax, DWORD PTR _pos$[ebp]
  004e1	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  004e6	f3 0f 11 45 bc	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 875  : 	}
; 876  : 	else

  004eb	e9 a7 00 00 00	 jmp	 $LN3@helicopter
$LN2@helicopter:

; 877  : 	{
; 878  : 		new_pos.y = terrain_elevation + get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  004f0	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004f4	74 0d		 je	 SHORT $LN23@helicopter
  004f6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fb	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv283[ebp], ecx
  00501	eb 24		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  00503	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  00509	83 c2 63	 add	 edx, 99			; 00000063H
  0050c	52		 push	 edx
  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00517	50		 push	 eax
  00518	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051d	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv283[ebp], 0
$LN24@helicopter:
  00527	b9 01 00 00 00	 mov	 ecx, 1
  0052c	85 c9		 test	 ecx, ecx
  0052e	74 0c		 je	 SHORT $LN25@helicopter
  00530	c7 85 34 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv291[ebp], 18 ; 00000012H
  0053a	eb 24		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  0053c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  00542	83 c2 63	 add	 edx, 99			; 00000063H
  00545	52		 push	 edx
  00546	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00550	50		 push	 eax
  00551	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00556	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv291[ebp], 0
$LN26@helicopter:
  00560	6a 12		 push	 18			; 00000012H
  00562	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00565	51		 push	 ecx
  00566	69 95 38 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv283[ebp], 700
  00570	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv291[ebp]
  00576	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0057d	ff d1		 call	 ecx
  0057f	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR tv562[ebp]
  00585	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR tv562[ebp]
  0058d	f3 0f 58 45 cc	 addss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  00592	f3 0f 11 45 bc	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0
$LN3@helicopter:

; 879  : 	}
; 880  : 
; 881  : 	//
; 882  : 	// update velocity
; 883  : 	//
; 884  : 
; 885  : 	speed = normalise_any_3d_vector (velocity);

  00597	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  0059a	50		 push	 eax
  0059b	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  005a0	d9 5d e0	 fstp	 DWORD PTR _speed$[ebp]

; 886  : 
; 887  : 	acc = max (speed * 0.65, 4.0);

  005a3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4010000000000000
  005ab	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR $T3[ebp], xmm0
  005b3	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _speed$[ebp]
  005b8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  005c0	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR $T2[ebp], xmm0
  005c8	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  005ce	50		 push	 eax
  005cf	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  005d5	51		 push	 ecx
  005d6	e8 00 00 00 00	 call	 ??$max@N@std@@YGABNABN0@Z ; std::max<double>
  005db	f2 0f 5a 00	 cvtsd2ss xmm0, QWORD PTR [eax]
  005df	f3 0f 11 45 dc	 movss	 DWORD PTR _acc$[ebp], xmm0

; 888  : 
; 889  : 	speed -= (acc * get_entity_movement_delta_time ());

  005e4	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _acc$[ebp]
  005e9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  005f1	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _speed$[ebp]
  005f6	f3 0f 5c c8	 subss	 xmm1, xmm0
  005fa	f3 0f 11 4d e0	 movss	 DWORD PTR _speed$[ebp], xmm1

; 890  : 
; 891  : 	speed = max (speed, 0.0f);

  005ff	0f 57 c0	 xorps	 xmm0, xmm0
  00602	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  0060a	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00610	50		 push	 eax
  00611	8d 4d e0	 lea	 ecx, DWORD PTR _speed$[ebp]
  00614	51		 push	 ecx
  00615	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0061a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0061e	f3 0f 11 45 e0	 movss	 DWORD PTR _speed$[ebp], xmm0

; 892  : 
; 893  : 	velocity->x *= speed;

  00623	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  00626	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0062a	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _speed$[ebp]
  0062f	8b 4d c4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  00632	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 894  : 	velocity->y *= speed;

  00636	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  00639	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0063e	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _speed$[ebp]
  00643	8b 4d c4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  00646	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 895  : 	velocity->z *= speed;

  0064b	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  0064e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00653	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _speed$[ebp]
  00658	8b 4d c4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  0065b	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 896  : 
; 897  : 	dx = (G * face_normal->x * get_entity_movement_delta_time());

  00660	8b 45 b4	 mov	 eax, DWORD PTR _face_normal$[ebp]
  00663	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@411cf5c3
  0066b	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  0066f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00677	f3 0f 11 45 d8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 898  : 	dz = (G * face_normal->z * get_entity_movement_delta_time());

  0067c	8b 45 b4	 mov	 eax, DWORD PTR _face_normal$[ebp]
  0067f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@411cf5c3
  00687	f3 0f 59 40 08	 mulss	 xmm0, DWORD PTR [eax+8]
  0068c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00694	f3 0f 11 45 d0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 899  : 
; 900  : 	dy = (new_pos.y - pos->y) / get_entity_movement_delta_time();

  00699	8b 45 c8	 mov	 eax, DWORD PTR _pos$[ebp]
  0069c	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _new_pos$[ebp+4]
  006a1	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  006a6	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  006ae	f3 0f 11 45 d4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 901  : 
; 902  : 	velocity->x += dx;

  006b3	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  006b6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006ba	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _dx$[ebp]
  006bf	8b 4d c4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  006c2	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 903  : 	velocity->z += dz;

  006c6	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  006c9	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  006ce	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _dz$[ebp]
  006d3	8b 4d c4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  006d6	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 904  : 
; 905  : 	velocity->y = dy;

  006db	8b 45 c4	 mov	 eax, DWORD PTR _velocity$[ebp]
  006de	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  006e3	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 906  : 
; 907  : 	//
; 908  : 	// set new position
; 909  : 	//
; 910  : 
; 911  : 	set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &new_pos);

  006e8	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  006ec	74 0d		 je	 SHORT $LN27@helicopter
  006ee	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f3	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv342[ebp], ecx
  006f9	eb 27		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  006fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  00701	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00707	52		 push	 edx
  00708	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0070d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00712	50		 push	 eax
  00713	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00718	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv342[ebp], 0
$LN28@helicopter:
  00722	b9 01 00 00 00	 mov	 ecx, 1
  00727	85 c9		 test	 ecx, ecx
  00729	74 0c		 je	 SHORT $LN29@helicopter
  0072b	c7 85 34 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv350[ebp], 8
  00735	eb 27		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  00737	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  0073d	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00743	52		 push	 edx
  00744	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00749	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0074e	50		 push	 eax
  0074f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00754	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv350[ebp], 0
$LN30@helicopter:
  0075e	8d 4d b8	 lea	 ecx, DWORD PTR _new_pos$[ebp]
  00761	51		 push	 ecx
  00762	6a 08		 push	 8
  00764	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00767	52		 push	 edx
  00768	6b 85 38 ff ff
	ff 60		 imul	 eax, DWORD PTR tv342[ebp], 96
  0076f	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv350[ebp]
  00775	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0077c	ff d2		 call	 edx

; 912  : 
; 913  : 	//
; 914  : 	// Stop Aircraft ?
; 915  : 	//
; 916  : 
; 917  : 	#if DEBUG_MODULE
; 918  : 
; 919  : 	if (en == get_external_view_entity ())
; 920  : 	{
; 921  : 		float
; 922  : 			slope;
; 923  : 
; 924  : 		slope = acos (face_normal->y);
; 925  : 
; 926  : 		debug_log ("SLOPE %f - SPEED %f (dx %f, dy %f, dz %f)", deg (slope), speed, dx, dy, dz);
; 927  : 	}
; 928  : 
; 929  : 	#endif
; 930  : 
; 931  : 	if (speed < 1.0)

  0077e	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _speed$[ebp]
  00783	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0078b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0078f	76 18		 jbe	 SHORT $LN4@helicopter

; 932  : 	{
; 933  : 		clear_helicopter_velocity (en);

  00791	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00794	50		 push	 eax
  00795	e8 00 00 00 00	 call	 ?clear_helicopter_velocity@@YGXPAUENTITY@@@Z ; clear_helicopter_velocity

; 934  : 
; 935  : 		return TRUE;

  0079a	b8 01 00 00 00	 mov	 eax, 1
  0079f	e9 aa 00 00 00	 jmp	 $LN5@helicopter

; 936  : 	}
; 937  : 	else

  007a4	e9 a5 00 00 00	 jmp	 $LN5@helicopter
$LN4@helicopter:

; 938  : 	{
; 939  : 		set_local_entity_float_value (en, FLOAT_TYPE_VELOCITY, speed);

  007a9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  007ad	74 0d		 je	 SHORT $LN31@helicopter
  007af	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  007b4	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv365[ebp], ecx
  007ba	eb 27		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  007bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  007c2	81 c2 a0 00 00
	00		 add	 edx, 160		; 000000a0H
  007c8	52		 push	 edx
  007c9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  007ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007d3	50		 push	 eax
  007d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d9	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv365[ebp], 0
$LN32@helicopter:
  007e3	b9 01 00 00 00	 mov	 ecx, 1
  007e8	85 c9		 test	 ecx, ecx
  007ea	74 0c		 je	 SHORT $LN33@helicopter
  007ec	c7 85 34 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv373[ebp], 147 ; 00000093H
  007f6	eb 27		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  007f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_crash_movement@@YGHPAUENTITY@@@Z@4JA
  007fe	81 c2 a0 00 00
	00		 add	 edx, 160		; 000000a0H
  00804	52		 push	 edx
  00805	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0080a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0080f	50		 push	 eax
  00810	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00815	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv373[ebp], 0
$LN34@helicopter:
  0081f	51		 push	 ecx
  00820	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _speed$[ebp]
  00825	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0082a	68 93 00 00 00	 push	 147			; 00000093H
  0082f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00832	51		 push	 ecx
  00833	69 95 38 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv365[ebp], 700
  0083d	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv373[ebp]
  00843	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  0084a	ff d1		 call	 ecx

; 940  : 
; 941  : 		return FALSE;

  0084c	33 c0		 xor	 eax, eax
$LN5@helicopter:

; 942  : 	}
; 943  : }

  0084e	5f		 pop	 edi
  0084f	5e		 pop	 esi
  00850	5b		 pop	 ebx
  00851	8b e5		 mov	 esp, ebp
  00853	5d		 pop	 ebp
  00854	c2 04 00	 ret	 4
?helicopter_crash_movement@@YGHPAUENTITY@@@Z ENDP	; helicopter_crash_movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z
_TEXT	SEGMENT
tv328 = -108						; size = 4
tv382 = -104						; size = 4
tv321 = -100						; size = 4
tv357 = -96						; size = 8
tv260 = -96						; size = 4
tv200 = -96						; size = 4
tv181 = -96						; size = 4
tv141 = -96						; size = 4
tv89 = -96						; size = 4
tv252 = -92						; size = 4
tv193 = -92						; size = 4
tv173 = -92						; size = 4
tv133 = -92						; size = 4
tv81 = -92						; size = 4
$T1 = -88						; size = 4
_pitch$2 = -20						; size = 4
_min_height$ = -16					; size = 4
_raw$ = -12						; size = 4
_mv$ = -8						; size = 4
_position$ = -4						; size = 4
_en$ = 8						; size = 4
_guide$ = 12						; size = 4
_wp_pos$ = 16						; size = 4
?helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z PROC ; helicopter_movement_calculate_new_position, COMDAT

; 1705 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1706 : 	vec3d
; 1707 : 		*position,
; 1708 : 		*mv;
; 1709 : 
; 1710 : 	helicopter
; 1711 : 		*raw;
; 1712 : 
; 1713 : 	float
; 1714 : 		min_height;
; 1715 : 
; 1716 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@helicopter
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 1717 : 
; 1718 : 	ASSERT (guide);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@helicopter
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00032	83 c0 0d	 add	 eax, 13			; 0000000dH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_05HLIEEKJG@guide@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@helicopter:

; 1719 : 
; 1720 : 	raw = (helicopter *) get_local_entity_data (en);

  00045	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 1721 : 
; 1722 : 	position = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0004e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00052	74 0a		 je	 SHORT $LN7@helicopter
  00054	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	89 4d a4	 mov	 DWORD PTR tv81[ebp], ecx
  0005c	eb 21		 jmp	 SHORT $LN8@helicopter
$LN7@helicopter:
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00064	83 c2 11	 add	 edx, 17			; 00000011H
  00067	52		 push	 edx
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00078	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@helicopter:
  0007f	b9 01 00 00 00	 mov	 ecx, 1
  00084	85 c9		 test	 ecx, ecx
  00086	74 09		 je	 SHORT $LN9@helicopter
  00088	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv89[ebp], 8
  0008f	eb 21		 jmp	 SHORT $LN10@helicopter
$LN9@helicopter:
  00091	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00097	83 c2 11	 add	 edx, 17			; 00000011H
  0009a	52		 push	 edx
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ab	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN10@helicopter:
  000b2	6a 08		 push	 8
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b7	51		 push	 ecx
  000b8	6b 55 a4 60	 imul	 edx, DWORD PTR tv81[ebp], 96
  000bc	8b 45 a0	 mov	 eax, DWORD PTR tv89[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	89 45 fc	 mov	 DWORD PTR _position$[ebp], eax

; 1723 : 
; 1724 : 	mv = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  000cb	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000cf	74 0a		 je	 SHORT $LN11@helicopter
  000d1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d6	89 4d a4	 mov	 DWORD PTR tv133[ebp], ecx
  000d9	eb 21		 jmp	 SHORT $LN12@helicopter
$LN11@helicopter:
  000db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  000e1	83 c2 13	 add	 edx, 19			; 00000013H
  000e4	52		 push	 edx
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN12@helicopter:
  000fc	b9 01 00 00 00	 mov	 ecx, 1
  00101	85 c9		 test	 ecx, ecx
  00103	74 09		 je	 SHORT $LN13@helicopter
  00105	c7 45 a0 06 00
	00 00		 mov	 DWORD PTR tv141[ebp], 6
  0010c	eb 21		 jmp	 SHORT $LN14@helicopter
$LN13@helicopter:
  0010e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00114	83 c2 13	 add	 edx, 19			; 00000013H
  00117	52		 push	 edx
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00128	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN14@helicopter:
  0012f	6a 06		 push	 6
  00131	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00134	51		 push	 ecx
  00135	6b 55 a4 60	 imul	 edx, DWORD PTR tv133[ebp], 96
  00139	8b 45 a0	 mov	 eax, DWORD PTR tv141[ebp]
  0013c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00143	ff d1		 call	 ecx
  00145	89 45 f8	 mov	 DWORD PTR _mv$[ebp], eax

; 1725 : 
; 1726 : 	position->x += (mv->x * get_entity_movement_delta_time ());

  00148	8b 45 f8	 mov	 eax, DWORD PTR _mv$[ebp]
  0014b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0014f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00157	8b 4d fc	 mov	 ecx, DWORD PTR _position$[ebp]
  0015a	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  0015e	8b 55 fc	 mov	 edx, DWORD PTR _position$[ebp]
  00161	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 1727 : 	position->y += (mv->y * get_entity_movement_delta_time ());

  00165	8b 45 f8	 mov	 eax, DWORD PTR _mv$[ebp]
  00168	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0016d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00175	8b 4d fc	 mov	 ecx, DWORD PTR _position$[ebp]
  00178	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  0017d	8b 55 fc	 mov	 edx, DWORD PTR _position$[ebp]
  00180	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 1728 : 	position->z += (mv->z * get_entity_movement_delta_time ());

  00185	8b 45 f8	 mov	 eax, DWORD PTR _mv$[ebp]
  00188	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0018d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00195	8b 4d fc	 mov	 ecx, DWORD PTR _position$[ebp]
  00198	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  0019d	8b 55 fc	 mov	 edx, DWORD PTR _position$[ebp]
  001a0	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0

; 1729 : 
; 1730 : 	bound_position_to_map_volume (position);

  001a5	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 1731 : 
; 1732 : 	min_height = get_3d_terrain_point_data_elevation (&raw->ac.terrain_info) + get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  001ae	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001b2	74 0a		 je	 SHORT $LN15@helicopter
  001b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b9	89 4d a4	 mov	 DWORD PTR tv173[ebp], ecx
  001bc	eb 21		 jmp	 SHORT $LN16@helicopter
$LN15@helicopter:
  001be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  001c4	83 c2 1b	 add	 edx, 27			; 0000001bH
  001c7	52		 push	 edx
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d8	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN16@helicopter:
  001df	b9 01 00 00 00	 mov	 ecx, 1
  001e4	85 c9		 test	 ecx, ecx
  001e6	74 09		 je	 SHORT $LN17@helicopter
  001e8	c7 45 a0 12 00
	00 00		 mov	 DWORD PTR tv181[ebp], 18 ; 00000012H
  001ef	eb 21		 jmp	 SHORT $LN18@helicopter
$LN17@helicopter:
  001f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  001f7	83 c2 1b	 add	 edx, 27			; 0000001bH
  001fa	52		 push	 edx
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00200	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00205	50		 push	 eax
  00206	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN18@helicopter:
  00212	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00215	81 c1 54 01 00
	00		 add	 ecx, 340		; 00000154H
  0021b	51		 push	 ecx
  0021c	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  00221	d9 5d 9c	 fstp	 DWORD PTR tv321[ebp]
  00224	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv321[ebp]
  00229	6a 12		 push	 18			; 00000012H
  0022b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0022e	52		 push	 edx
  0022f	69 45 a4 bc 02
	00 00		 imul	 eax, DWORD PTR tv173[ebp], 700
  00236	8b 4d a0	 mov	 ecx, DWORD PTR tv181[ebp]
  00239	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00240	f3 0f 11 45 98	 movss	 DWORD PTR tv382[ebp], xmm0
  00245	ff d2		 call	 edx
  00247	d9 5d 94	 fstp	 DWORD PTR tv328[ebp]
  0024a	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv382[ebp]
  0024f	f3 0f 58 45 94	 addss	 xmm0, DWORD PTR tv328[ebp]
  00254	f3 0f 11 45 f0	 movss	 DWORD PTR _min_height$[ebp], xmm0

; 1733 : 
; 1734 : 	if (get_local_entity_int_value (guide, INT_TYPE_TERRAIN_FOLLOW_MODE != GUIDE_TERRAIN_FOLLOW_NONE ? TRUE : FALSE))

  00259	83 7d 0c 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0025d	74 0a		 je	 SHORT $LN19@helicopter
  0025f	8b 45 0c	 mov	 eax, DWORD PTR _guide$[ebp]
  00262	8b 08		 mov	 ecx, DWORD PTR [eax]
  00264	89 4d a4	 mov	 DWORD PTR tv193[ebp], ecx
  00267	eb 1d		 jmp	 SHORT $LN20@helicopter
$LN19@helicopter:
  00269	68 c6 06 00 00	 push	 1734			; 000006c6H
  0026e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00273	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00279	52		 push	 edx
  0027a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN20@helicopter:
  00286	b8 01 00 00 00	 mov	 eax, 1
  0028b	85 c0		 test	 eax, eax
  0028d	74 09		 je	 SHORT $LN21@helicopter
  0028f	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  00296	eb 1d		 jmp	 SHORT $LN22@helicopter
$LN21@helicopter:
  00298	68 c6 06 00 00	 push	 1734			; 000006c6H
  0029d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002a8	51		 push	 ecx
  002a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ae	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv200[ebp], 0
$LN22@helicopter:
  002b5	6a 01		 push	 1
  002b7	8b 55 0c	 mov	 edx, DWORD PTR _guide$[ebp]
  002ba	52		 push	 edx
  002bb	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv193[ebp], 1116
  002c2	8b 4d a0	 mov	 ecx, DWORD PTR tv200[ebp]
  002c5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002cc	ff d2		 call	 edx
  002ce	85 c0		 test	 eax, eax
  002d0	74 16		 je	 SHORT $LN4@helicopter

; 1735 : 	{
; 1736 : 
; 1737 : 		min_height += 2.0;

  002d2	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _min_height$[ebp]
  002d7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  002df	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e3	f3 0f 11 45 f0	 movss	 DWORD PTR _min_height$[ebp], xmm0
$LN4@helicopter:

; 1738 : 	}
; 1739 : 
; 1740 : 	// bound to floor. Allow for pitch of aircraft... assume 5m to nose. Stop motion vector.
; 1741 : 
; 1742 : 	if (position->y <= min_height)

  002e8	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  002eb	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _min_height$[ebp]
  002f0	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  002f4	0f 82 9c 00 00
	00		 jb	 $LN5@helicopter

; 1743 : 	{
; 1744 : 
; 1745 : 		float
; 1746 : 			pitch;
; 1747 : 
; 1748 : 		pitch = get_pitch_from_attitude_matrix (raw->ac.mob.attitude);

  002fa	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ff	d1 e0		 shl	 eax, 1
  00301	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00304	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00308	b8 04 00 00 00	 mov	 eax, 4
  0030d	c1 e0 00	 shl	 eax, 0
  00310	51		 push	 ecx
  00311	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00316	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031b	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  00320	d9 5d ec	 fstp	 DWORD PTR _pitch$2[ebp]

; 1749 : 
; 1750 : 		min_height += 5.0 * sin (fabs (pitch));

  00323	51		 push	 ecx
  00324	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _pitch$2[ebp]
  00329	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00333	51		 push	 ecx
  00334	d9 1c 24	 fstp	 DWORD PTR [esp]
  00337	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0033c	dd 5d a0	 fstp	 QWORD PTR tv357[ebp]
  0033f	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv357[ebp]
  00344	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0034c	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _min_height$[ebp]
  00351	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00355	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00359	f3 0f 11 45 f0	 movss	 DWORD PTR _min_height$[ebp], xmm0

; 1751 : 
; 1752 : 		raw->ac.mob.motion_vector.y = max (raw->ac.mob.motion_vector.y, 0.0f);

  0035e	0f 57 c0	 xorps	 xmm0, xmm0
  00361	f3 0f 11 45 a8	 movss	 DWORD PTR $T1[ebp], xmm0
  00366	8d 45 a8	 lea	 eax, DWORD PTR $T1[ebp]
  00369	50		 push	 eax
  0036a	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  0036d	83 c1 38	 add	 ecx, 56			; 00000038H
  00370	51		 push	 ecx
  00371	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00376	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00379	8b 00		 mov	 eax, DWORD PTR [eax]
  0037b	89 42 38	 mov	 DWORD PTR [edx+56], eax

; 1753 : 
; 1754 : 		position->y = max (position->y, min_height);

  0037e	8d 45 f0	 lea	 eax, DWORD PTR _min_height$[ebp]
  00381	50		 push	 eax
  00382	8b 4d fc	 mov	 ecx, DWORD PTR _position$[ebp]
  00385	83 c1 04	 add	 ecx, 4
  00388	51		 push	 ecx
  00389	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0038e	8b 55 fc	 mov	 edx, DWORD PTR _position$[ebp]
  00391	8b 00		 mov	 eax, DWORD PTR [eax]
  00393	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN5@helicopter:

; 1755 : 	}
; 1756 : 
; 1757 : 	set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, position);

  00396	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0039a	74 0a		 je	 SHORT $LN23@helicopter
  0039c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0039f	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a1	89 4d a4	 mov	 DWORD PTR tv252[ebp], ecx
  003a4	eb 21		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  003a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  003ac	83 c2 34	 add	 edx, 52			; 00000034H
  003af	52		 push	 edx
  003b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003ba	50		 push	 eax
  003bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv252[ebp], 0
$LN24@helicopter:
  003c7	b9 01 00 00 00	 mov	 ecx, 1
  003cc	85 c9		 test	 ecx, ecx
  003ce	74 09		 je	 SHORT $LN25@helicopter
  003d0	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv260[ebp], 8
  003d7	eb 21		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  003d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  003df	83 c2 34	 add	 edx, 52			; 00000034H
  003e2	52		 push	 edx
  003e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003ed	50		 push	 eax
  003ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f3	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv260[ebp], 0
$LN26@helicopter:
  003fa	8b 4d fc	 mov	 ecx, DWORD PTR _position$[ebp]
  003fd	51		 push	 ecx
  003fe	6a 08		 push	 8
  00400	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00403	52		 push	 edx
  00404	6b 45 a4 60	 imul	 eax, DWORD PTR tv252[ebp], 96
  00408	8b 4d a0	 mov	 ecx, DWORD PTR tv260[ebp]
  0040b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00412	ff d2		 call	 edx

; 1758 : }

  00414	5f		 pop	 edi
  00415	5e		 pop	 esi
  00416	5b		 pop	 ebx
  00417	8b e5		 mov	 esp, ebp
  00419	5d		 pop	 ebp
  0041a	c2 0c 00	 ret	 12			; 0000000cH
?helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ENDP ; helicopter_movement_calculate_new_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z
_TEXT	SEGMENT
tv292 = -156						; size = 4
tv284 = -152						; size = 4
tv469 = -148						; size = 4
tv450 = -148						; size = 4
tv419 = -148						; size = 4
tv523 = -144						; size = 4
tv521 = -144						; size = 4
tv519 = -144						; size = 4
tv464 = -140						; size = 4
tv445 = -140						; size = 4
tv414 = -140						; size = 4
tv267 = -136						; size = 4
tv243 = -136						; size = 4
tv222 = -136						; size = 4
tv199 = -136						; size = 4
tv178 = -136						; size = 4
tv158 = -136						; size = 4
tv94 = -136						; size = 4
tv259 = -132						; size = 4
tv235 = -132						; size = 4
tv214 = -132						; size = 4
tv191 = -132						; size = 4
tv171 = -132						; size = 4
tv150 = -132						; size = 4
tv139 = -132						; size = 4
tv86 = -132						; size = 4
$T1 = -128						; size = 4
$T2 = -124						; size = 4
$T3 = -120						; size = 4
_loop$ = -52						; size = 4
_terrain_follow$ = -48					; size = 4
_attitude$ = -44					; size = 4
_pos$ = -40						; size = 4
_test_pos$ = -36					; size = 12
_leader$ = -24						; size = 4
_terrain_elevation$ = -20				; size = 4
_required_height$ = -16					; size = 4
_current_height$ = -12					; size = 4
_min_height$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_guide$ = 12						; size = 4
_wp_pos$ = 16						; size = 4
?helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z PROC ; helicopter_movement_altitude_follow, COMDAT

; 1594 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1595 : 	helicopter
; 1596 : 		*raw;
; 1597 : 
; 1598 : 	float
; 1599 : 		min_height,
; 1600 : 		current_height,
; 1601 : 		required_height,
; 1602 : 		terrain_elevation;
; 1603 : 
; 1604 : 	entity
; 1605 : 		*leader;
; 1606 : 
; 1607 : 	vec3d
; 1608 : 		test_pos,
; 1609 : 		*pos;
; 1610 : 
; 1611 : 	matrix3x3
; 1612 : 		*attitude;
; 1613 : 
; 1614 : 	guide_terrain_follow_modes
; 1615 : 		terrain_follow;
; 1616 : 
; 1617 : 	int
; 1618 : 		loop;
; 1619 : 
; 1620 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN5@helicopter
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00017	83 c0 1a	 add	 eax, 26			; 0000001aH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@helicopter:

; 1621 : 
; 1622 : 	ASSERT (guide);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN6@helicopter
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00035	83 c0 1c	 add	 eax, 28			; 0000001cH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_05HLIEEKJG@guide@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@helicopter:

; 1623 : 
; 1624 : 	ASSERT (wp_pos);

  00048	83 7d 10 00	 cmp	 DWORD PTR _wp_pos$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN7@helicopter
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00053	83 c0 1e	 add	 eax, 30			; 0000001eH
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_06NGJLJNEL@wp_pos@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@helicopter:

; 1625 : 
; 1626 : 	raw = (helicopter *) get_local_entity_data (en);

  00066	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00069	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006c	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1627 : 
; 1628 : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0006f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00073	74 0d		 je	 SHORT $LN16@helicopter
  00075	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  00080	eb 24		 jmp	 SHORT $LN17@helicopter
$LN16@helicopter:
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00088	83 c2 22	 add	 edx, 34			; 00000022H
  0008b	52		 push	 edx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN17@helicopter:
  000a6	b9 01 00 00 00	 mov	 ecx, 1
  000ab	85 c9		 test	 ecx, ecx
  000ad	74 0c		 je	 SHORT $LN18@helicopter
  000af	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv94[ebp], 8
  000b9	eb 24		 jmp	 SHORT $LN19@helicopter
$LN18@helicopter:
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  000c1	83 c2 22	 add	 edx, 34			; 00000022H
  000c4	52		 push	 edx
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN19@helicopter:
  000df	6a 08		 push	 8
  000e1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e4	51		 push	 ecx
  000e5	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv86[ebp], 96
  000ec	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  000f2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000f9	ff d1		 call	 ecx
  000fb	89 45 d8	 mov	 DWORD PTR _pos$[ebp], eax

; 1629 : 
; 1630 : 	current_height = pos->y;

  000fe	8b 45 d8	 mov	 eax, DWORD PTR _pos$[ebp]
  00101	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00106	f3 0f 11 45 f4	 movss	 DWORD PTR _current_height$[ebp], xmm0

; 1631 : 
; 1632 : 	attitude = get_local_entity_attitude_matrix_ptr (en);

  0010b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0010f	74 0d		 je	 SHORT $LN20@helicopter
  00111	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00114	8b 08		 mov	 ecx, DWORD PTR [eax]
  00116	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv139[ebp], ecx
  0011c	eb 24		 jmp	 SHORT $LN21@helicopter
$LN20@helicopter:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00124	83 c2 26	 add	 edx, 38			; 00000026H
  00127	52		 push	 edx
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00138	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv139[ebp], 0
$LN21@helicopter:
  00142	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00145	51		 push	 ecx
  00146	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv139[ebp]
  0014c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_attitude_matrix_ptr@@3PAP6GPAY122MPAUENTITY@@@ZA[edx*4]
  00153	ff d0		 call	 eax
  00155	89 45 d4	 mov	 DWORD PTR _attitude$[ebp], eax

; 1633 : 
; 1634 : 	//
; 1635 : 	// Calculate required height (above sea level)
; 1636 : 	//
; 1637 : 
; 1638 : 	terrain_follow = (guide_terrain_follow_modes) get_local_entity_int_value (guide, INT_TYPE_TERRAIN_FOLLOW_MODE);

  00158	83 7d 0c 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0015c	74 0d		 je	 SHORT $LN22@helicopter
  0015e	8b 45 0c	 mov	 eax, DWORD PTR _guide$[ebp]
  00161	8b 08		 mov	 ecx, DWORD PTR [eax]
  00163	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv150[ebp], ecx
  00169	eb 24		 jmp	 SHORT $LN23@helicopter
$LN22@helicopter:
  0016b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00171	83 c2 2c	 add	 edx, 44			; 0000002cH
  00174	52		 push	 edx
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00185	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN23@helicopter:
  0018f	b9 01 00 00 00	 mov	 ecx, 1
  00194	85 c9		 test	 ecx, ecx
  00196	74 0c		 je	 SHORT $LN24@helicopter
  00198	c7 85 78 ff ff
	ff e8 00 00 00	 mov	 DWORD PTR tv158[ebp], 232 ; 000000e8H
  001a2	eb 24		 jmp	 SHORT $LN25@helicopter
$LN24@helicopter:
  001a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  001aa	83 c2 2c	 add	 edx, 44			; 0000002cH
  001ad	52		 push	 edx
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001be	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN25@helicopter:
  001c8	68 e8 00 00 00	 push	 232			; 000000e8H
  001cd	8b 4d 0c	 mov	 ecx, DWORD PTR _guide$[ebp]
  001d0	51		 push	 ecx
  001d1	69 95 7c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv150[ebp], 1116
  001db	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv158[ebp]
  001e1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001e8	ff d1		 call	 ecx
  001ea	89 45 d0	 mov	 DWORD PTR _terrain_follow$[ebp], eax

; 1639 : 
; 1640 : 	if (terrain_follow != GUIDE_TERRAIN_FOLLOW_NONE)

  001ed	83 7d d0 00	 cmp	 DWORD PTR _terrain_follow$[ebp], 0
  001f1	0f 84 5f 05 00
	00		 je	 $LN8@helicopter

; 1641 : 	{
; 1642 : 		//
; 1643 : 		// Find Required Altitude
; 1644 : 		//
; 1645 : 
; 1646 : 		if ((terrain_follow == GUIDE_TERRAIN_FOLLOW_ATTACK_ALTITUDE) || (get_local_entity_int_value (en, INT_TYPE_POSITION_HOLD)))

  001f7	83 7d d0 02	 cmp	 DWORD PTR _terrain_follow$[ebp], 2
  001fb	0f 84 92 00 00
	00		 je	 $LN12@helicopter
  00201	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00205	74 0d		 je	 SHORT $LN26@helicopter
  00207	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0020a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0020c	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv171[ebp], ecx
  00212	eb 20		 jmp	 SHORT $LN27@helicopter
$LN26@helicopter:
  00214	68 6e 06 00 00	 push	 1646			; 0000066eH
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00224	52		 push	 edx
  00225	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022a	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv171[ebp], 0
$LN27@helicopter:
  00234	b8 01 00 00 00	 mov	 eax, 1
  00239	85 c0		 test	 eax, eax
  0023b	74 0c		 je	 SHORT $LN28@helicopter
  0023d	c7 85 78 ff ff
	ff a0 00 00 00	 mov	 DWORD PTR tv178[ebp], 160 ; 000000a0H
  00247	eb 20		 jmp	 SHORT $LN29@helicopter
$LN28@helicopter:
  00249	68 6e 06 00 00	 push	 1646			; 0000066eH
  0024e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00253	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00259	51		 push	 ecx
  0025a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN29@helicopter:
  00269	68 a0 00 00 00	 push	 160			; 000000a0H
  0026e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00271	52		 push	 edx
  00272	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv171[ebp], 1116
  0027c	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv178[ebp]
  00282	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00289	ff d2		 call	 edx
  0028b	85 c0		 test	 eax, eax
  0028d	0f 84 ce 00 00
	00		 je	 $LN10@helicopter
$LN12@helicopter:

; 1647 : 		{
; 1648 : 			min_height = get_local_entity_float_value (en, FLOAT_TYPE_ATTACK_ALTITUDE) + helicopter_movement_structure_avoidance (en);

  00293	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00297	74 0d		 je	 SHORT $LN30@helicopter
  00299	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0029c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0029e	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv191[ebp], ecx
  002a4	eb 24		 jmp	 SHORT $LN31@helicopter
$LN30@helicopter:
  002a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  002ac	83 c2 36	 add	 edx, 54			; 00000036H
  002af	52		 push	 edx
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c0	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv191[ebp], 0
$LN31@helicopter:
  002ca	b9 01 00 00 00	 mov	 ecx, 1
  002cf	85 c9		 test	 ecx, ecx
  002d1	74 0c		 je	 SHORT $LN32@helicopter
  002d3	c7 85 78 ff ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv199[ebp], 14 ; 0000000eH
  002dd	eb 24		 jmp	 SHORT $LN33@helicopter
$LN32@helicopter:
  002df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  002e5	83 c2 36	 add	 edx, 54			; 00000036H
  002e8	52		 push	 edx
  002e9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002f3	50		 push	 eax
  002f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv199[ebp], 0
$LN33@helicopter:
  00303	6a 0e		 push	 14			; 0000000eH
  00305	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00308	51		 push	 ecx
  00309	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv191[ebp], 700
  00313	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv199[ebp]
  00319	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00320	ff d1		 call	 ecx
  00322	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR tv414[ebp]
  00328	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR tv414[ebp]
  00330	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00333	52		 push	 edx
  00334	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR tv519[ebp], xmm0
  0033c	e8 00 00 00 00	 call	 ?helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z ; helicopter_movement_structure_avoidance
  00341	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv419[ebp]
  00347	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv519[ebp]
  0034f	f3 0f 58 85 6c
	ff ff ff	 addss	 xmm0, DWORD PTR tv419[ebp]
  00357	f3 0f 11 45 f8	 movss	 DWORD PTR _min_height$[ebp], xmm0

; 1649 : 		}
; 1650 : 		else

  0035c	e9 da 02 00 00	 jmp	 $LN14@helicopter
$LN10@helicopter:

; 1651 : 		{
; 1652 : 			leader = (entity *) get_local_entity_ptr_value (guide, PTR_TYPE_TASK_LEADER);

  00361	83 7d 0c 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00365	74 0d		 je	 SHORT $LN34@helicopter
  00367	8b 45 0c	 mov	 eax, DWORD PTR _guide$[ebp]
  0036a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0036c	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv214[ebp], ecx
  00372	eb 24		 jmp	 SHORT $LN35@helicopter
$LN34@helicopter:
  00374	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  0037a	83 c2 3a	 add	 edx, 58			; 0000003aH
  0037d	52		 push	 edx
  0037e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00383	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00388	50		 push	 eax
  00389	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0038e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN35@helicopter:
  00398	b9 01 00 00 00	 mov	 ecx, 1
  0039d	85 c9		 test	 ecx, ecx
  0039f	74 0c		 je	 SHORT $LN36@helicopter
  003a1	c7 85 78 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv222[ebp], 15 ; 0000000fH
  003ab	eb 24		 jmp	 SHORT $LN37@helicopter
$LN36@helicopter:
  003ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  003b3	83 c2 3a	 add	 edx, 58			; 0000003aH
  003b6	52		 push	 edx
  003b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  003c1	50		 push	 eax
  003c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c7	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv222[ebp], 0
$LN37@helicopter:
  003d1	6a 0f		 push	 15			; 0000000fH
  003d3	8b 4d 0c	 mov	 ecx, DWORD PTR _guide$[ebp]
  003d6	51		 push	 ecx
  003d7	6b 95 7c ff ff
	ff 50		 imul	 edx, DWORD PTR tv214[ebp], 80
  003de	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv222[ebp]
  003e4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  003eb	ff d1		 call	 ecx
  003ed	89 45 e8	 mov	 DWORD PTR _leader$[ebp], eax

; 1653 : 
; 1654 : 			if (en == leader)

  003f0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003f3	3b 45 e8	 cmp	 eax, DWORD PTR _leader$[ebp]
  003f6	0f 85 ce 00 00
	00		 jne	 $LN13@helicopter

; 1655 : 			{
; 1656 : 				min_height = get_local_entity_float_value (en, FLOAT_TYPE_CRUISE_ALTITUDE) + helicopter_movement_structure_avoidance (en);

  003fc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00400	74 0d		 je	 SHORT $LN38@helicopter
  00402	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00405	8b 08		 mov	 ecx, DWORD PTR [eax]
  00407	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv235[ebp], ecx
  0040d	eb 24		 jmp	 SHORT $LN39@helicopter
$LN38@helicopter:
  0040f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00415	83 c2 3e	 add	 edx, 62			; 0000003eH
  00418	52		 push	 edx
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00429	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv235[ebp], 0
$LN39@helicopter:
  00433	b9 01 00 00 00	 mov	 ecx, 1
  00438	85 c9		 test	 ecx, ecx
  0043a	74 0c		 je	 SHORT $LN40@helicopter
  0043c	c7 85 78 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR tv243[ebp], 24 ; 00000018H
  00446	eb 24		 jmp	 SHORT $LN41@helicopter
$LN40@helicopter:
  00448	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  0044e	83 c2 3e	 add	 edx, 62			; 0000003eH
  00451	52		 push	 edx
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00457	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0045c	50		 push	 eax
  0045d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00462	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv243[ebp], 0
$LN41@helicopter:
  0046c	6a 18		 push	 24			; 00000018H
  0046e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00471	51		 push	 ecx
  00472	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv235[ebp], 700
  0047c	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv243[ebp]
  00482	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00489	ff d1		 call	 ecx
  0048b	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR tv445[ebp]
  00491	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR tv445[ebp]
  00499	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0049c	52		 push	 edx
  0049d	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR tv521[ebp], xmm0
  004a5	e8 00 00 00 00	 call	 ?helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z ; helicopter_movement_structure_avoidance
  004aa	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv450[ebp]
  004b0	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv521[ebp]
  004b8	f3 0f 58 85 6c
	ff ff ff	 addss	 xmm0, DWORD PTR tv450[ebp]
  004c0	f3 0f 11 45 f8	 movss	 DWORD PTR _min_height$[ebp], xmm0

; 1657 : 			}
; 1658 : 			else

  004c5	e9 71 01 00 00	 jmp	 $LN14@helicopter
$LN13@helicopter:

; 1659 : 			{
; 1660 : 				min_height = max (get_local_entity_float_value (leader, FLOAT_TYPE_RADAR_ALTITUDE), (get_local_entity_float_value (en, FLOAT_TYPE_CRUISE_ALTITUDE) + helicopter_movement_structure_avoidance (en)));

  004ca	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004ce	74 0d		 je	 SHORT $LN42@helicopter
  004d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d5	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv259[ebp], ecx
  004db	eb 24		 jmp	 SHORT $LN43@helicopter
$LN42@helicopter:
  004dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  004e3	83 c2 42	 add	 edx, 66			; 00000042H
  004e6	52		 push	 edx
  004e7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f7	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN43@helicopter:
  00501	b9 01 00 00 00	 mov	 ecx, 1
  00506	85 c9		 test	 ecx, ecx
  00508	74 0c		 je	 SHORT $LN44@helicopter
  0050a	c7 85 78 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR tv267[ebp], 24 ; 00000018H
  00514	eb 24		 jmp	 SHORT $LN45@helicopter
$LN44@helicopter:
  00516	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  0051c	83 c2 42	 add	 edx, 66			; 00000042H
  0051f	52		 push	 edx
  00520	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00525	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0052a	50		 push	 eax
  0052b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00530	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv267[ebp], 0
$LN45@helicopter:
  0053a	6a 18		 push	 24			; 00000018H
  0053c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0053f	51		 push	 ecx
  00540	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv259[ebp], 700
  0054a	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv267[ebp]
  00550	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00557	ff d1		 call	 ecx
  00559	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR tv464[ebp]
  0055f	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR tv464[ebp]
  00567	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0056a	52		 push	 edx
  0056b	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR tv523[ebp], xmm0
  00573	e8 00 00 00 00	 call	 ?helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z ; helicopter_movement_structure_avoidance
  00578	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv469[ebp]
  0057e	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv523[ebp]
  00586	f3 0f 58 85 6c
	ff ff ff	 addss	 xmm0, DWORD PTR tv469[ebp]
  0058e	f3 0f 11 45 88	 movss	 DWORD PTR $T3[ebp], xmm0
  00593	83 7d e8 00	 cmp	 DWORD PTR _leader$[ebp], 0
  00597	74 0d		 je	 SHORT $LN46@helicopter
  00599	8b 45 e8	 mov	 eax, DWORD PTR _leader$[ebp]
  0059c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0059e	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv284[ebp], ecx
  005a4	eb 24		 jmp	 SHORT $LN47@helicopter
$LN46@helicopter:
  005a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  005ac	83 c2 42	 add	 edx, 66			; 00000042H
  005af	52		 push	 edx
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005ba	50		 push	 eax
  005bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv284[ebp], 0
$LN47@helicopter:
  005ca	b9 01 00 00 00	 mov	 ecx, 1
  005cf	85 c9		 test	 ecx, ecx
  005d1	74 0c		 je	 SHORT $LN48@helicopter
  005d3	c7 85 64 ff ff
	ff 68 00 00 00	 mov	 DWORD PTR tv292[ebp], 104 ; 00000068H
  005dd	eb 24		 jmp	 SHORT $LN49@helicopter
$LN48@helicopter:
  005df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z@4JA
  005e5	83 c2 42	 add	 edx, 66			; 00000042H
  005e8	52		 push	 edx
  005e9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  005f3	50		 push	 eax
  005f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f9	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv292[ebp], 0
$LN49@helicopter:
  00603	6a 68		 push	 104			; 00000068H
  00605	8b 4d e8	 mov	 ecx, DWORD PTR _leader$[ebp]
  00608	51		 push	 ecx
  00609	69 95 68 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv284[ebp], 700
  00613	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv292[ebp]
  00619	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00620	ff d1		 call	 ecx
  00622	d9 5d 84	 fstp	 DWORD PTR $T2[ebp]
  00625	8d 55 88	 lea	 edx, DWORD PTR $T3[ebp]
  00628	52		 push	 edx
  00629	8d 45 84	 lea	 eax, DWORD PTR $T2[ebp]
  0062c	50		 push	 eax
  0062d	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00632	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00636	f3 0f 11 45 f8	 movss	 DWORD PTR _min_height$[ebp], xmm0
$LN14@helicopter:

; 1661 : 			}
; 1662 : 		}
; 1663 : 
; 1664 : 		//
; 1665 : 		// Get samples from "Look Ahead" back to "Current position" so that the terrain_info has current position stored.
; 1666 : 		//
; 1667 : 
; 1668 : 		terrain_elevation = 0.0;

  0063b	0f 57 c0	 xorps	 xmm0, xmm0
  0063e	f3 0f 11 45 ec	 movss	 DWORD PTR _terrain_elevation$[ebp], xmm0

; 1669 : 
; 1670 : 		for (loop = HELICOPTER_TERRAIN_AVOIDANCE_LOOKAHEAD_SAMPLE_NUMBER; loop >= 0; loop --)

  00643	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 1
  0064a	eb 09		 jmp	 SHORT $LN4@helicopter
$LN2@helicopter:
  0064c	8b 45 cc	 mov	 eax, DWORD PTR _loop$[ebp]
  0064f	83 e8 01	 sub	 eax, 1
  00652	89 45 cc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@helicopter:
  00655	83 7d cc 00	 cmp	 DWORD PTR _loop$[ebp], 0
  00659	0f 8c e6 00 00
	00		 jl	 $LN3@helicopter

; 1671 : 		{
; 1672 : 
; 1673 : 			test_pos.x = pos->x + ((*attitude) [2][0] * loop * aircraft_database [raw->ac.mob.sub_type].cruise_velocity * HELICOPTER_TERRAIN_AVOIDANCE_LOOKAHEAD_TIME);

  0065f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00664	d1 e0		 shl	 eax, 1
  00666	03 45 d4	 add	 eax, DWORD PTR _attitude$[ebp]
  00669	b9 04 00 00 00	 mov	 ecx, 4
  0066e	6b d1 00	 imul	 edx, ecx, 0
  00671	f3 0f 2a 45 cc	 cvtsi2ss xmm0, DWORD PTR _loop$[ebp]
  00676	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0067b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0067e	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  00684	f3 0f 59 81 6c
	00 00 00	 mulss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+108]
  0068c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00694	8b 55 d8	 mov	 edx, DWORD PTR _pos$[ebp]
  00697	f3 0f 58 02	 addss	 xmm0, DWORD PTR [edx]
  0069b	f3 0f 11 45 dc	 movss	 DWORD PTR _test_pos$[ebp], xmm0

; 1674 : 			test_pos.y = pos->y + 0.0;

  006a0	8b 45 d8	 mov	 eax, DWORD PTR _pos$[ebp]
  006a3	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  006a8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  006b0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006b4	f3 0f 11 45 e0	 movss	 DWORD PTR _test_pos$[ebp+4], xmm0

; 1675 : 			test_pos.z = pos->z + ((*attitude) [2][2] * loop * aircraft_database [raw->ac.mob.sub_type].cruise_velocity * HELICOPTER_TERRAIN_AVOIDANCE_LOOKAHEAD_TIME);

  006b9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006be	d1 e0		 shl	 eax, 1
  006c0	03 45 d4	 add	 eax, DWORD PTR _attitude$[ebp]
  006c3	b9 04 00 00 00	 mov	 ecx, 4
  006c8	d1 e1		 shl	 ecx, 1
  006ca	f3 0f 2a 45 cc	 cvtsi2ss xmm0, DWORD PTR _loop$[ebp]
  006cf	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  006d4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  006d7	69 02 f4 00 00
	00		 imul	 eax, DWORD PTR [edx], 244
  006dd	f3 0f 59 80 6c
	00 00 00	 mulss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+108]
  006e5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  006ed	8b 4d d8	 mov	 ecx, DWORD PTR _pos$[ebp]
  006f0	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  006f5	f3 0f 11 45 e4	 movss	 DWORD PTR _test_pos$[ebp+8], xmm0

; 1676 : 
; 1677 : 			bound_position_to_map_area (&test_pos);

  006fa	8d 45 dc	 lea	 eax, DWORD PTR _test_pos$[ebp]
  006fd	50		 push	 eax
  006fe	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 1678 : 
; 1679 : 			terrain_elevation = max (terrain_elevation, get_3d_terrain_point_data (test_pos.x, test_pos.z, &raw->ac.terrain_info));

  00703	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00706	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0070b	50		 push	 eax
  0070c	51		 push	 ecx
  0070d	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_pos$[ebp+8]
  00712	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00717	51		 push	 ecx
  00718	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_pos$[ebp]
  0071d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00722	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00727	d9 5d 80	 fstp	 DWORD PTR $T1[ebp]
  0072a	8d 4d 80	 lea	 ecx, DWORD PTR $T1[ebp]
  0072d	51		 push	 ecx
  0072e	8d 55 ec	 lea	 edx, DWORD PTR _terrain_elevation$[ebp]
  00731	52		 push	 edx
  00732	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00737	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0073b	f3 0f 11 45 ec	 movss	 DWORD PTR _terrain_elevation$[ebp], xmm0

; 1680 : 		}

  00740	e9 07 ff ff ff	 jmp	 $LN2@helicopter
$LN3@helicopter:

; 1681 : 
; 1682 : 		//
; 1683 : 		// find required height (above sea level)
; 1684 : 		//
; 1685 : 
; 1686 : 		required_height = min_height + terrain_elevation;

  00745	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _min_height$[ebp]
  0074a	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  0074f	f3 0f 11 45 f0	 movss	 DWORD PTR _required_height$[ebp], xmm0

; 1687 : 	}
; 1688 : 	else

  00754	eb 0d		 jmp	 SHORT $LN9@helicopter
$LN8@helicopter:

; 1689 : 	{
; 1690 : 
; 1691 : 		// was here to make helicopters avoid buildings when doing troop insertion, but it messed up the carrier landing.
; 1692 : 		//terrain_elevation = get_3d_terrain_point_data (pos->x, pos->z, &raw->ac.terrain_info);
; 1693 : 		//required_height = max (wp_pos->y, terrain_elevation + helicopter_movement_structure_avoidance (en));
; 1694 : 		required_height = wp_pos->y;

  00756	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00759	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0075e	f3 0f 11 45 f0	 movss	 DWORD PTR _required_height$[ebp], xmm0
$LN9@helicopter:

; 1695 : 	}
; 1696 : 
; 1697 : 	return required_height;

  00763	d9 45 f0	 fld	 DWORD PTR _required_height$[ebp]

; 1698 : }

  00766	5f		 pop	 edi
  00767	5e		 pop	 esi
  00768	5b		 pop	 ebx
  00769	8b e5		 mov	 esp, ebp
  0076b	5d		 pop	 ebp
  0076c	c2 0c 00	 ret	 12			; 0000000cH
?helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z ENDP ; helicopter_movement_altitude_follow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z
_TEXT	SEGMENT
tv410 = -136						; size = 4
tv524 = -132						; size = 4
tv405 = -128						; size = 4
tv359 = -124						; size = 4
tv336 = -124						; size = 4
tv311 = -124						; size = 4
tv288 = -124						; size = 4
tv267 = -124						; size = 4
tv221 = -124						; size = 4
tv190 = -124						; size = 4
tv166 = -124						; size = 4
tv135 = -124						; size = 4
tv82 = -124						; size = 4
tv351 = -120						; size = 4
tv328 = -120						; size = 4
tv303 = -120						; size = 4
tv280 = -120						; size = 4
tv259 = -120						; size = 4
tv213 = -120						; size = 4
tv202 = -120						; size = 4
tv182 = -120						; size = 4
tv159 = -120						; size = 4
tv95 = -120						; size = 4
tv75 = -120						; size = 4
$T1 = -116						; size = 4
_max_height$ = -48					; size = 4
_radius$ = -44						; size = 4
_d$ = -40						; size = 4
_attitude$ = -36					; size = 4
_test_pos$ = -32					; size = 4
_pos$ = -28						; size = 12
_structure$ = -16					; size = 4
_sector$ = -12						; size = 4
_guide$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z PROC ; helicopter_movement_structure_avoidance, COMDAT

; 1491 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1492 : 	helicopter
; 1493 : 		*raw;
; 1494 : 
; 1495 : 	entity
; 1496 : 		*guide,
; 1497 : 		*sector,
; 1498 : 		*structure;
; 1499 : 
; 1500 : 	vec3d
; 1501 : 		pos,
; 1502 : 		*test_pos;
; 1503 : 
; 1504 : 	matrix3x3
; 1505 : 		*attitude;
; 1506 : 
; 1507 : 	float
; 1508 : 		d,
; 1509 : 		radius,
; 1510 : 		max_height;
; 1511 : 
; 1512 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@helicopter
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00017	83 c0 15	 add	 eax, 21			; 00000015H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@helicopter:

; 1513 : 
; 1514 : 	raw = (helicopter *) get_local_entity_data (en);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1515 : 
; 1516 : 	if (get_local_entity_int_value (en, INT_TYPE_TASK_LEADER))

  00033	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00037	74 0a		 je	 SHORT $LN13@helicopter
  00039	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	89 4d 88	 mov	 DWORD PTR tv75[ebp], ecx
  00041	eb 1d		 jmp	 SHORT $LN14@helicopter
$LN13@helicopter:
  00043	68 ec 05 00 00	 push	 1516			; 000005ecH
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN14@helicopter:
  00060	b8 01 00 00 00	 mov	 eax, 1
  00065	85 c0		 test	 eax, eax
  00067	74 09		 je	 SHORT $LN15@helicopter
  00069	c7 45 84 dd 00
	00 00		 mov	 DWORD PTR tv82[ebp], 221 ; 000000ddH
  00070	eb 1d		 jmp	 SHORT $LN16@helicopter
$LN15@helicopter:
  00072	68 ec 05 00 00	 push	 1516			; 000005ecH
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00088	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN16@helicopter:
  0008f	68 dd 00 00 00	 push	 221			; 000000ddH
  00094	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00097	52		 push	 edx
  00098	69 45 88 5c 04
	00 00		 imul	 eax, DWORD PTR tv75[ebp], 1116
  0009f	8b 4d 84	 mov	 ecx, DWORD PTR tv82[ebp]
  000a2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a9	ff d2		 call	 edx
  000ab	85 c0		 test	 eax, eax
  000ad	0f 84 76 01 00
	00		 je	 $LN9@helicopter

; 1517 : 	{
; 1518 : 		guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  000b3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b7	74 0a		 je	 SHORT $LN17@helicopter
  000b9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	89 4d 88	 mov	 DWORD PTR tv95[ebp], ecx
  000c1	eb 21		 jmp	 SHORT $LN18@helicopter
$LN17@helicopter:
  000c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  000c9	83 c2 1b	 add	 edx, 27			; 0000001bH
  000cc	52		 push	 edx
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000dd	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN18@helicopter:
  000e4	b9 01 00 00 00	 mov	 ecx, 1
  000e9	85 c9		 test	 ecx, ecx
  000eb	74 09		 je	 SHORT $LN19@helicopter
  000ed	c7 45 84 0d 00
	00 00		 mov	 DWORD PTR tv135[ebp], 13 ; 0000000dH
  000f4	eb 21		 jmp	 SHORT $LN20@helicopter
$LN19@helicopter:
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  000fc	83 c2 1b	 add	 edx, 27			; 0000001bH
  000ff	52		 push	 edx
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00110	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN20@helicopter:
  00117	6a 0d		 push	 13			; 0000000dH
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0011c	51		 push	 ecx
  0011d	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv95[ebp], 180
  00124	8b 45 84	 mov	 eax, DWORD PTR tv135[ebp]
  00127	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0012e	ff d1		 call	 ecx
  00130	89 45 f8	 mov	 DWORD PTR _guide$[ebp], eax

; 1519 : 
; 1520 : 		ASSERT (guide);

  00133	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00137	75 18		 jne	 SHORT $LN6@helicopter
  00139	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  0013e	83 c0 1d	 add	 eax, 29			; 0000001dH
  00141	50		 push	 eax
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_05HLIEEKJG@guide@
  0014c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@helicopter:

; 1521 : 
; 1522 : 		if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_RADIUS))

  00151	6a 00		 push	 0
  00153	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  0015c	85 c0		 test	 eax, eax
  0015e	0f 84 c5 00 00
	00		 je	 $LN9@helicopter

; 1523 : 		{
; 1524 : 			if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_ALTITUDE))

  00164	6a 02		 push	 2
  00166	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  0016f	85 c0		 test	 eax, eax
  00171	0f 84 b2 00 00
	00		 je	 $LN9@helicopter

; 1525 : 			{
; 1526 : 				if (get_local_entity_float_value (en, FLOAT_TYPE_DISTANCE) < (get_guide_criteria_value (guide, GUIDE_CRITERIA_RADIUS)))

  00177	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0017b	74 0a		 je	 SHORT $LN21@helicopter
  0017d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00180	8b 08		 mov	 ecx, DWORD PTR [eax]
  00182	89 4d 88	 mov	 DWORD PTR tv159[ebp], ecx
  00185	eb 1d		 jmp	 SHORT $LN22@helicopter
$LN21@helicopter:
  00187	68 f6 05 00 00	 push	 1526			; 000005f6H
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00191	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00197	52		 push	 edx
  00198	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN22@helicopter:
  001a4	b8 01 00 00 00	 mov	 eax, 1
  001a9	85 c0		 test	 eax, eax
  001ab	74 09		 je	 SHORT $LN23@helicopter
  001ad	c7 45 84 1f 00
	00 00		 mov	 DWORD PTR tv166[ebp], 31 ; 0000001fH
  001b4	eb 1d		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  001b6	68 f6 05 00 00	 push	 1526			; 000005f6H
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001c6	51		 push	 ecx
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN24@helicopter:
  001d3	6a 1f		 push	 31			; 0000001fH
  001d5	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001d8	52		 push	 edx
  001d9	69 45 88 bc 02
	00 00		 imul	 eax, DWORD PTR tv159[ebp], 700
  001e0	8b 4d 84	 mov	 ecx, DWORD PTR tv166[ebp]
  001e3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  001ea	ff d2		 call	 edx
  001ec	d9 5d 80	 fstp	 DWORD PTR tv405[ebp]
  001ef	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR tv405[ebp]
  001f4	6a 00		 push	 0
  001f6	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  001f9	50		 push	 eax
  001fa	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv524[ebp], xmm0
  00202	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  00207	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv410[ebp]
  0020d	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv410[ebp]
  00215	f3 0f 10 8d 7c
	ff ff ff	 movss	 xmm1, DWORD PTR tv524[ebp]
  0021d	0f 2f c1	 comiss	 xmm0, xmm1
  00220	76 07		 jbe	 SHORT $LN9@helicopter

; 1527 : 				{
; 1528 : 					return 0.0;

  00222	d9 ee		 fldz
  00224	e9 ab 04 00 00	 jmp	 $LN1@helicopter
$LN9@helicopter:

; 1529 : 				}
; 1530 : 			}
; 1531 : 		}
; 1532 : 	}
; 1533 : 
; 1534 : 	get_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &pos);

  00229	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0022d	74 0a		 je	 SHORT $LN25@helicopter
  0022f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00232	8b 08		 mov	 ecx, DWORD PTR [eax]
  00234	89 4d 88	 mov	 DWORD PTR tv182[ebp], ecx
  00237	eb 21		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  00239	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  0023f	83 c2 2b	 add	 edx, 43			; 0000002bH
  00242	52		 push	 edx
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00248	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0024d	50		 push	 eax
  0024e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00253	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv182[ebp], 0
$LN26@helicopter:
  0025a	b9 01 00 00 00	 mov	 ecx, 1
  0025f	85 c9		 test	 ecx, ecx
  00261	74 09		 je	 SHORT $LN27@helicopter
  00263	c7 45 84 08 00
	00 00		 mov	 DWORD PTR tv190[ebp], 8
  0026a	eb 21		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  0026c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00272	83 c2 2b	 add	 edx, 43			; 0000002bH
  00275	52		 push	 edx
  00276	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00286	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv190[ebp], 0
$LN28@helicopter:
  0028d	8d 4d e4	 lea	 ecx, DWORD PTR _pos$[ebp]
  00290	51		 push	 ecx
  00291	6a 08		 push	 8
  00293	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00296	52		 push	 edx
  00297	6b 45 88 60	 imul	 eax, DWORD PTR tv182[ebp], 96
  0029b	8b 4d 84	 mov	 ecx, DWORD PTR tv190[ebp]
  0029e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  002a5	ff d2		 call	 edx

; 1535 : 
; 1536 : 	attitude = get_local_entity_attitude_matrix_ptr (en);

  002a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002ab	74 0a		 je	 SHORT $LN29@helicopter
  002ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b2	89 4d 88	 mov	 DWORD PTR tv202[ebp], ecx
  002b5	eb 21		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  002b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  002bd	83 c2 2d	 add	 edx, 45			; 0000002dH
  002c0	52		 push	 edx
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002cb	50		 push	 eax
  002cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d1	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN30@helicopter:
  002d8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002db	51		 push	 ecx
  002dc	8b 55 88	 mov	 edx, DWORD PTR tv202[ebp]
  002df	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_attitude_matrix_ptr@@3PAP6GPAY122MPAUENTITY@@@ZA[edx*4]
  002e6	ff d0		 call	 eax
  002e8	89 45 dc	 mov	 DWORD PTR _attitude$[ebp], eax

; 1537 : 
; 1538 : 	sector = get_local_entity_parent (en, LIST_TYPE_SECTOR);

  002eb	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002ef	74 0a		 je	 SHORT $LN31@helicopter
  002f1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f6	89 4d 88	 mov	 DWORD PTR tv213[ebp], ecx
  002f9	eb 21		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  002fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00301	83 c2 2f	 add	 edx, 47			; 0000002fH
  00304	52		 push	 edx
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0030f	50		 push	 eax
  00310	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00315	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN32@helicopter:
  0031c	b9 01 00 00 00	 mov	 ecx, 1
  00321	85 c9		 test	 ecx, ecx
  00323	74 09		 je	 SHORT $LN33@helicopter
  00325	c7 45 84 21 00
	00 00		 mov	 DWORD PTR tv221[ebp], 33 ; 00000021H
  0032c	eb 21		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  0032e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00334	83 c2 2f	 add	 edx, 47			; 0000002fH
  00337	52		 push	 edx
  00338	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00342	50		 push	 eax
  00343	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00348	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv221[ebp], 0
$LN34@helicopter:
  0034f	6a 21		 push	 33			; 00000021H
  00351	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00354	51		 push	 ecx
  00355	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv213[ebp], 180
  0035c	8b 45 84	 mov	 eax, DWORD PTR tv221[ebp]
  0035f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00366	ff d1		 call	 ecx
  00368	89 45 f4	 mov	 DWORD PTR _sector$[ebp], eax

; 1539 : 
; 1540 : 	//
; 1541 : 	// Look Ahead
; 1542 : 	//
; 1543 : 
; 1544 : 	pos.x += ((*attitude) [2][0] * aircraft_database [raw->ac.mob.sub_type].cruise_velocity * HELICOPTER_STRUCTURE_AVOIDANCE_LOOKAHEAD_TIME);

  0036b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00370	d1 e0		 shl	 eax, 1
  00372	03 45 dc	 add	 eax, DWORD PTR _attitude$[ebp]
  00375	b9 04 00 00 00	 mov	 ecx, 4
  0037a	6b d1 00	 imul	 edx, ecx, 0
  0037d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00380	69 09 f4 00 00
	00		 imul	 ecx, DWORD PTR [ecx], 244
  00386	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0038b	f3 0f 59 81 6c
	00 00 00	 mulss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+108]
  00393	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f800000
  0039b	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _pos$[ebp]
  003a0	f3 0f 11 45 e4	 movss	 DWORD PTR _pos$[ebp], xmm0

; 1545 : 	pos.y = 0.0;

  003a5	0f 57 c0	 xorps	 xmm0, xmm0
  003a8	f3 0f 11 45 e8	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 1546 : 	pos.z += ((*attitude) [2][2] * aircraft_database [raw->ac.mob.sub_type].cruise_velocity * HELICOPTER_STRUCTURE_AVOIDANCE_LOOKAHEAD_TIME);

  003ad	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003b2	d1 e0		 shl	 eax, 1
  003b4	03 45 dc	 add	 eax, DWORD PTR _attitude$[ebp]
  003b7	b9 04 00 00 00	 mov	 ecx, 4
  003bc	d1 e1		 shl	 ecx, 1
  003be	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  003c1	69 12 f4 00 00
	00		 imul	 edx, DWORD PTR [edx], 244
  003c7	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  003cc	f3 0f 59 82 6c
	00 00 00	 mulss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+108]
  003d4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f800000
  003dc	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _pos$[ebp+8]
  003e1	f3 0f 11 45 ec	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 1547 : 
; 1548 : 	//
; 1549 : 	// scan the sector
; 1550 : 	//
; 1551 : 
; 1552 : 	max_height = 0;

  003e6	0f 57 c0	 xorps	 xmm0, xmm0
  003e9	f3 0f 11 45 d0	 movss	 DWORD PTR _max_height$[ebp], xmm0

; 1553 : 
; 1554 : 	structure = get_local_entity_first_child (sector, LIST_TYPE_SECTOR);

  003ee	83 7d f4 00	 cmp	 DWORD PTR _sector$[ebp], 0
  003f2	74 0a		 je	 SHORT $LN35@helicopter
  003f4	8b 45 f4	 mov	 eax, DWORD PTR _sector$[ebp]
  003f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f9	89 4d 88	 mov	 DWORD PTR tv259[ebp], ecx
  003fc	eb 21		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  003fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00404	83 c2 3f	 add	 edx, 63			; 0000003fH
  00407	52		 push	 edx
  00408	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00412	50		 push	 eax
  00413	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00418	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv259[ebp], 0
$LN36@helicopter:
  0041f	b9 01 00 00 00	 mov	 ecx, 1
  00424	85 c9		 test	 ecx, ecx
  00426	74 09		 je	 SHORT $LN37@helicopter
  00428	c7 45 84 21 00
	00 00		 mov	 DWORD PTR tv267[ebp], 33 ; 00000021H
  0042f	eb 21		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  00431	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00437	83 c2 3f	 add	 edx, 63			; 0000003fH
  0043a	52		 push	 edx
  0043b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00440	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00445	50		 push	 eax
  00446	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044b	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv267[ebp], 0
$LN38@helicopter:
  00452	6a 21		 push	 33			; 00000021H
  00454	8b 4d f4	 mov	 ecx, DWORD PTR _sector$[ebp]
  00457	51		 push	 ecx
  00458	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv259[ebp], 180
  0045f	8b 45 84	 mov	 eax, DWORD PTR tv267[ebp]
  00462	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00469	ff d1		 call	 ecx
  0046b	89 45 f0	 mov	 DWORD PTR _structure$[ebp], eax
$LN2@helicopter:

; 1555 : 
; 1556 : 	while (structure)

  0046e	83 7d f0 00	 cmp	 DWORD PTR _structure$[ebp], 0
  00472	0f 84 59 02 00
	00		 je	 $LN3@helicopter

; 1557 : 	{
; 1558 : 		radius = get_local_entity_float_value (structure, FLOAT_TYPE_AVOIDANCE_RADIUS);

  00478	83 7d f0 00	 cmp	 DWORD PTR _structure$[ebp], 0
  0047c	74 0a		 je	 SHORT $LN39@helicopter
  0047e	8b 45 f0	 mov	 eax, DWORD PTR _structure$[ebp]
  00481	8b 08		 mov	 ecx, DWORD PTR [eax]
  00483	89 4d 88	 mov	 DWORD PTR tv280[ebp], ecx
  00486	eb 21		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  00488	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  0048e	83 c2 43	 add	 edx, 67			; 00000043H
  00491	52		 push	 edx
  00492	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00497	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0049c	50		 push	 eax
  0049d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv280[ebp], 0
$LN40@helicopter:
  004a9	b9 01 00 00 00	 mov	 ecx, 1
  004ae	85 c9		 test	 ecx, ecx
  004b0	74 09		 je	 SHORT $LN41@helicopter
  004b2	c7 45 84 0f 00
	00 00		 mov	 DWORD PTR tv288[ebp], 15 ; 0000000fH
  004b9	eb 21		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  004bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  004c1	83 c2 43	 add	 edx, 67			; 00000043H
  004c4	52		 push	 edx
  004c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  004cf	50		 push	 eax
  004d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d5	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv288[ebp], 0
$LN42@helicopter:
  004dc	6a 0f		 push	 15			; 0000000fH
  004de	8b 4d f0	 mov	 ecx, DWORD PTR _structure$[ebp]
  004e1	51		 push	 ecx
  004e2	69 55 88 bc 02
	00 00		 imul	 edx, DWORD PTR tv280[ebp], 700
  004e9	8b 45 84	 mov	 eax, DWORD PTR tv288[ebp]
  004ec	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  004f3	ff d1		 call	 ecx
  004f5	d9 5d d4	 fstp	 DWORD PTR _radius$[ebp]

; 1559 : 
; 1560 : 		if (radius > 0.0)

  004f8	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _radius$[ebp]
  004fd	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00505	0f 86 41 01 00
	00		 jbe	 $LN11@helicopter

; 1561 : 		{
; 1562 : 			radius *= radius;

  0050b	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00510	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  00515	f3 0f 11 45 d4	 movss	 DWORD PTR _radius$[ebp], xmm0

; 1563 : 
; 1564 : 			test_pos = get_local_entity_vec3d_ptr (structure, VEC3D_TYPE_POSITION);

  0051a	83 7d f0 00	 cmp	 DWORD PTR _structure$[ebp], 0
  0051e	74 0a		 je	 SHORT $LN43@helicopter
  00520	8b 45 f0	 mov	 eax, DWORD PTR _structure$[ebp]
  00523	8b 08		 mov	 ecx, DWORD PTR [eax]
  00525	89 4d 88	 mov	 DWORD PTR tv303[ebp], ecx
  00528	eb 21		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  0052a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00530	83 c2 49	 add	 edx, 73			; 00000049H
  00533	52		 push	 edx
  00534	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00539	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0053e	50		 push	 eax
  0053f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00544	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv303[ebp], 0
$LN44@helicopter:
  0054b	b9 01 00 00 00	 mov	 ecx, 1
  00550	85 c9		 test	 ecx, ecx
  00552	74 09		 je	 SHORT $LN45@helicopter
  00554	c7 45 84 08 00
	00 00		 mov	 DWORD PTR tv311[ebp], 8
  0055b	eb 21		 jmp	 SHORT $LN46@helicopter
$LN45@helicopter:
  0055d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00563	83 c2 49	 add	 edx, 73			; 00000049H
  00566	52		 push	 edx
  00567	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0056c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00571	50		 push	 eax
  00572	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00577	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv311[ebp], 0
$LN46@helicopter:
  0057e	6a 08		 push	 8
  00580	8b 4d f0	 mov	 ecx, DWORD PTR _structure$[ebp]
  00583	51		 push	 ecx
  00584	6b 55 88 60	 imul	 edx, DWORD PTR tv303[ebp], 96
  00588	8b 45 84	 mov	 eax, DWORD PTR tv311[ebp]
  0058b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00592	ff d1		 call	 ecx
  00594	89 45 e0	 mov	 DWORD PTR _test_pos$[ebp], eax

; 1565 : 
; 1566 : 			d = get_sqr_2d_range (&pos, test_pos);

  00597	8b 45 e0	 mov	 eax, DWORD PTR _test_pos$[ebp]
  0059a	50		 push	 eax
  0059b	8d 4d e4	 lea	 ecx, DWORD PTR _pos$[ebp]
  0059e	51		 push	 ecx
  0059f	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  005a4	d9 5d d8	 fstp	 DWORD PTR _d$[ebp]

; 1567 : 
; 1568 : 			if (d < radius)

  005a7	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _radius$[ebp]
  005ac	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _d$[ebp]
  005b0	0f 86 96 00 00
	00		 jbe	 $LN11@helicopter

; 1569 : 			{
; 1570 : 				max_height = max (max_height, get_local_entity_float_value (structure, FLOAT_TYPE_FIXED_STRUCTURE_HEIGHT));

  005b6	83 7d f0 00	 cmp	 DWORD PTR _structure$[ebp], 0
  005ba	74 0a		 je	 SHORT $LN47@helicopter
  005bc	8b 45 f0	 mov	 eax, DWORD PTR _structure$[ebp]
  005bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c1	89 4d 88	 mov	 DWORD PTR tv328[ebp], ecx
  005c4	eb 21		 jmp	 SHORT $LN48@helicopter
$LN47@helicopter:
  005c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  005cc	83 c2 4f	 add	 edx, 79			; 0000004fH
  005cf	52		 push	 edx
  005d0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005da	50		 push	 eax
  005db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e0	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv328[ebp], 0
$LN48@helicopter:
  005e7	b9 01 00 00 00	 mov	 ecx, 1
  005ec	85 c9		 test	 ecx, ecx
  005ee	74 09		 je	 SHORT $LN49@helicopter
  005f0	c7 45 84 28 00
	00 00		 mov	 DWORD PTR tv336[ebp], 40 ; 00000028H
  005f7	eb 21		 jmp	 SHORT $LN50@helicopter
$LN49@helicopter:
  005f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  005ff	83 c2 4f	 add	 edx, 79			; 0000004fH
  00602	52		 push	 edx
  00603	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00608	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0060d	50		 push	 eax
  0060e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00613	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv336[ebp], 0
$LN50@helicopter:
  0061a	6a 28		 push	 40			; 00000028H
  0061c	8b 4d f0	 mov	 ecx, DWORD PTR _structure$[ebp]
  0061f	51		 push	 ecx
  00620	69 55 88 bc 02
	00 00		 imul	 edx, DWORD PTR tv328[ebp], 700
  00627	8b 45 84	 mov	 eax, DWORD PTR tv336[ebp]
  0062a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00631	ff d1		 call	 ecx
  00633	d9 5d 8c	 fstp	 DWORD PTR $T1[ebp]
  00636	8d 55 8c	 lea	 edx, DWORD PTR $T1[ebp]
  00639	52		 push	 edx
  0063a	8d 45 d0	 lea	 eax, DWORD PTR _max_height$[ebp]
  0063d	50		 push	 eax
  0063e	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00643	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00647	f3 0f 11 45 d0	 movss	 DWORD PTR _max_height$[ebp], xmm0
$LN11@helicopter:

; 1571 : 
; 1572 : 				#if DEBUG_MODULE
; 1573 : 
; 1574 : 				if (en == get_external_view_entity ())
; 1575 : 				{
; 1576 : 					debug_log ("%s - Max height %f", object_3d_enumeration_names [get_local_entity_int_value (structure, INT_TYPE_OBJECT_3D_SHAPE)], max_height);
; 1577 : 				}
; 1578 : 
; 1579 : 				#endif
; 1580 : 			}
; 1581 : 		}
; 1582 : 
; 1583 : 		structure = get_local_entity_child_succ (structure, LIST_TYPE_SECTOR);

  0064c	83 7d f0 00	 cmp	 DWORD PTR _structure$[ebp], 0
  00650	74 0a		 je	 SHORT $LN51@helicopter
  00652	8b 45 f0	 mov	 eax, DWORD PTR _structure$[ebp]
  00655	8b 08		 mov	 ecx, DWORD PTR [eax]
  00657	89 4d 88	 mov	 DWORD PTR tv351[ebp], ecx
  0065a	eb 21		 jmp	 SHORT $LN52@helicopter
$LN51@helicopter:
  0065c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00662	83 c2 5c	 add	 edx, 92			; 0000005cH
  00665	52		 push	 edx
  00666	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0066b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00670	50		 push	 eax
  00671	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00676	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv351[ebp], 0
$LN52@helicopter:
  0067d	b9 01 00 00 00	 mov	 ecx, 1
  00682	85 c9		 test	 ecx, ecx
  00684	74 09		 je	 SHORT $LN53@helicopter
  00686	c7 45 84 21 00
	00 00		 mov	 DWORD PTR tv359[ebp], 33 ; 00000021H
  0068d	eb 21		 jmp	 SHORT $LN54@helicopter
$LN53@helicopter:
  0068f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z@4JA
  00695	83 c2 5c	 add	 edx, 92			; 0000005cH
  00698	52		 push	 edx
  00699	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0069e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  006a3	50		 push	 eax
  006a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a9	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv359[ebp], 0
$LN54@helicopter:
  006b0	6a 21		 push	 33			; 00000021H
  006b2	8b 4d f0	 mov	 ecx, DWORD PTR _structure$[ebp]
  006b5	51		 push	 ecx
  006b6	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv351[ebp], 180
  006bd	8b 45 84	 mov	 eax, DWORD PTR tv359[ebp]
  006c0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006c7	ff d1		 call	 ecx
  006c9	89 45 f0	 mov	 DWORD PTR _structure$[ebp], eax

; 1584 : 	}

  006cc	e9 9d fd ff ff	 jmp	 $LN2@helicopter
$LN3@helicopter:

; 1585 : 
; 1586 : 	return max_height;

  006d1	d9 45 d0	 fld	 DWORD PTR _max_height$[ebp]
$LN1@helicopter:

; 1587 : }

  006d4	5f		 pop	 edi
  006d5	5e		 pop	 esi
  006d6	5b		 pop	 ebx
  006d7	8b e5		 mov	 esp, ebp
  006d9	5d		 pop	 ebp
  006da	c2 04 00	 ret	 4
?helicopter_movement_structure_avoidance@@YGMPAUENTITY@@@Z ENDP ; helicopter_movement_structure_avoidance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
tv158 = -100						; size = 8
tv141 = -100						; size = 8
tv159 = -92						; size = 8
tv142 = -92						; size = 8
$T1 = -84						; size = 4
_desired_rpm$ = -16					; size = 4
_spin_up_amount$ = -12					; size = 4
_delta_rpm$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_lift$ = 12						; size = 4
?helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z PROC ; helicopter_movement_calculate_rotor_rpm, COMDAT

; 1452 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1453 : 	helicopter
; 1454 : 		*raw;
; 1455 : 
; 1456 : 	float
; 1457 : 		delta_rpm,
; 1458 : 		spin_up_amount,
; 1459 : 		desired_rpm;
; 1460 : 
; 1461 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@helicopter
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 1462 : 
; 1463 : 	raw = (helicopter *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1464 : 
; 1465 : 	ASSERT (aircraft_database [raw->ac.mob.sub_type].power_output != 0.0);

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  00039	f3 0f 5a 81 ac
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+172]
  00041	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00049	9f		 lahf
  0004a	f6 c4 44	 test	 ah, 68			; 00000044H
  0004d	7a 18		 jp	 SHORT $LN3@helicopter
  0004f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z@4JA
  00054	83 c0 0d	 add	 eax, 13			; 0000000dH
  00057	50		 push	 eax
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JKKOAAMD@aircraft_database?5?$FLraw?9?$DOac?4mob?4@
  00062	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@helicopter:

; 1466 : 
; 1467 : 	desired_rpm = (lift / aircraft_database [raw->ac.mob.sub_type].power_output) * 100.0;

  00067	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006a	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  00070	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _lift$[ebp]
  00075	f3 0f 5e 81 ac
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+172]
  0007d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00081	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00089	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0008d	f3 0f 11 45 f0	 movss	 DWORD PTR _desired_rpm$[ebp], xmm0

; 1468 : 
; 1469 : 	desired_rpm = min (desired_rpm, 100.0f);

  00092	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  0009a	f3 0f 11 45 ac	 movss	 DWORD PTR $T1[ebp], xmm0
  0009f	8d 45 ac	 lea	 eax, DWORD PTR $T1[ebp]
  000a2	50		 push	 eax
  000a3	8d 4d f0	 lea	 ecx, DWORD PTR _desired_rpm$[ebp]
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  000ac	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000b0	f3 0f 11 45 f0	 movss	 DWORD PTR _desired_rpm$[ebp], xmm0

; 1470 : 
; 1471 : 	delta_rpm = desired_rpm - raw->main_rotor_rpm;

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _desired_rpm$[ebp]
  000bd	f3 0f 5c 80 8c
	01 00 00	 subss	 xmm0, DWORD PTR [eax+396]
  000c5	f3 0f 11 45 f8	 movss	 DWORD PTR _delta_rpm$[ebp], xmm0

; 1472 : 
; 1473 : 	spin_up_amount = ((1.0 / 3600) * raw->main_rotor_rpm * raw->main_rotor_rpm);

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000cd	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  000d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f323456789abcdf
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000e0	f3 0f 5a 89 8c
	01 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+396]
  000e8	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f0	f3 0f 11 45 f4	 movss	 DWORD PTR _spin_up_amount$[ebp], xmm0

; 1474 : 
; 1475 : 	spin_up_amount = bound (spin_up_amount, 0.01, 1.0);

  000f5	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _spin_up_amount$[ebp]
  000fa	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3f847ae147ae147b
  00102	66 0f 2f c8	 comisd	 xmm1, xmm0
  00106	76 0f		 jbe	 SHORT $LN7@helicopter
  00108	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00110	f2 0f 11 45 a4	 movsd	 QWORD PTR tv142[ebp], xmm0
  00115	eb 32		 jmp	 SHORT $LN8@helicopter
$LN7@helicopter:
  00117	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _spin_up_amount$[ebp]
  0011c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00124	76 0f		 jbe	 SHORT $LN5@helicopter
  00126	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0012e	f2 0f 11 45 9c	 movsd	 QWORD PTR tv141[ebp], xmm0
  00133	eb 0a		 jmp	 SHORT $LN6@helicopter
$LN5@helicopter:
  00135	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _spin_up_amount$[ebp]
  0013a	f2 0f 11 45 9c	 movsd	 QWORD PTR tv141[ebp], xmm0
$LN6@helicopter:
  0013f	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv141[ebp]
  00144	f2 0f 11 45 a4	 movsd	 QWORD PTR tv142[ebp], xmm0
$LN8@helicopter:
  00149	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv142[ebp]
  0014e	f3 0f 11 45 f4	 movss	 DWORD PTR _spin_up_amount$[ebp], xmm0

; 1476 : 
; 1477 : 	delta_rpm *= spin_up_amount;

  00153	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _delta_rpm$[ebp]
  00158	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _spin_up_amount$[ebp]
  0015d	f3 0f 11 45 f8	 movss	 DWORD PTR _delta_rpm$[ebp], xmm0

; 1478 : 
; 1479 : 	raw->main_rotor_rpm += delta_rpm * get_entity_movement_delta_time ();

  00162	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _delta_rpm$[ebp]
  00167	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0016f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00172	f3 0f 58 80 8c
	01 00 00	 addss	 xmm0, DWORD PTR [eax+396]
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0017d	f3 0f 11 81 8c
	01 00 00	 movss	 DWORD PTR [ecx+396], xmm0

; 1480 : 
; 1481 : 	raw->main_rotor_rpm = bound (raw->main_rotor_rpm, 0.0, 100.0);

  00185	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00188	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  00190	0f 57 c9	 xorps	 xmm1, xmm1
  00193	66 0f 2f c8	 comisd	 xmm1, xmm0
  00197	76 0a		 jbe	 SHORT $LN11@helicopter
  00199	0f 57 c0	 xorps	 xmm0, xmm0
  0019c	f2 0f 11 45 a4	 movsd	 QWORD PTR tv159[ebp], xmm0
  001a1	eb 3e		 jmp	 SHORT $LN12@helicopter
$LN11@helicopter:
  001a3	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001a6	f3 0f 5a 81 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+396]
  001ae	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  001b6	76 0f		 jbe	 SHORT $LN9@helicopter
  001b8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  001c0	f2 0f 11 45 9c	 movsd	 QWORD PTR tv158[ebp], xmm0
  001c5	eb 10		 jmp	 SHORT $LN10@helicopter
$LN9@helicopter:
  001c7	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  001ca	f3 0f 5a 82 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+396]
  001d2	f2 0f 11 45 9c	 movsd	 QWORD PTR tv158[ebp], xmm0
$LN10@helicopter:
  001d7	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv158[ebp]
  001dc	f2 0f 11 45 a4	 movsd	 QWORD PTR tv159[ebp], xmm0
$LN12@helicopter:
  001e1	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv159[ebp]
  001e6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001e9	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0

; 1482 : 
; 1483 : 	raw->tail_rotor_rpm = raw->main_rotor_rpm;

  001f1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001f4	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001f7	8b 91 8c 01 00
	00		 mov	 edx, DWORD PTR [ecx+396]
  001fd	89 90 a8 01 00
	00		 mov	 DWORD PTR [eax+424], edx

; 1484 : }

  00203	5f		 pop	 edi
  00204	5e		 pop	 esi
  00205	5b		 pop	 ebx
  00206	8b e5		 mov	 esp, ebp
  00208	5d		 pop	 ebp
  00209	c2 08 00	 ret	 8
?helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z ENDP ; helicopter_movement_calculate_rotor_rpm
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z
_TEXT	SEGMENT
tv168 = -100						; size = 4
tv194 = -96						; size = 4
tv192 = -96						; size = 4
tv140 = -92						; size = 4
tv81 = -92						; size = 4
tv132 = -88						; size = 4
tv73 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
$T3 = -76						; size = 4
$T4 = -72						; size = 4
_roll$ = -4						; size = 4
_en$ = 8						; size = 4
_lateral_velocity$ = 12					; size = 4
_lateral_acceleration$ = 16				; size = 4
_return_flag$ = 20					; size = 4
?helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z PROC ; helicopter_movement_get_desired_roll, COMDAT

; 1427 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1428 : 
; 1429 : 	float
; 1430 : 		roll;
; 1431 : 
; 1432 : 	//
; 1433 : 	// calculate roll for helicopter at given velocity
; 1434 : 	//
; 1435 : 
; 1436 : 	roll = (HELICOPTER_MAX_ROLL * min (((lateral_velocity * HELICOPTER_LATERAL_TO_FORWARD_VELOCITY_SCALING) / get_local_entity_float_value (en, FLOAT_TYPE_CRUISE_VELOCITY)), 1.0f));

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00011	f3 0f 11 45 b8	 movss	 DWORD PTR $T4[ebp], xmm0
  00016	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001a	74 0a		 je	 SHORT $LN3@helicopter
  0001c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d a8	 mov	 DWORD PTR tv73[ebp], ecx
  00024	eb 21		 jmp	 SHORT $LN4@helicopter
$LN3@helicopter:
  00026	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA
  0002c	83 c2 09	 add	 edx, 9
  0002f	52		 push	 edx
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00040	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@helicopter:
  00047	b9 01 00 00 00	 mov	 ecx, 1
  0004c	85 c9		 test	 ecx, ecx
  0004e	74 09		 je	 SHORT $LN5@helicopter
  00050	c7 45 a4 19 00
	00 00		 mov	 DWORD PTR tv81[ebp], 25	; 00000019H
  00057	eb 21		 jmp	 SHORT $LN6@helicopter
$LN5@helicopter:
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA
  0005f	83 c2 09	 add	 edx, 9
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00073	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN6@helicopter:
  0007a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _lateral_velocity$[ebp]
  0007f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40a00000
  00087	6a 19		 push	 25			; 00000019H
  00089	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0008c	51		 push	 ecx
  0008d	69 55 a8 bc 02
	00 00		 imul	 edx, DWORD PTR tv73[ebp], 700
  00094	8b 45 a4	 mov	 eax, DWORD PTR tv81[ebp]
  00097	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0009e	f3 0f 11 45 a0	 movss	 DWORD PTR tv192[ebp], xmm0
  000a3	ff d1		 call	 ecx
  000a5	d9 5d 9c	 fstp	 DWORD PTR tv168[ebp]
  000a8	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv192[ebp]
  000ad	f3 0f 5e 45 9c	 divss	 xmm0, DWORD PTR tv168[ebp]
  000b2	f3 0f 11 45 b4	 movss	 DWORD PTR $T3[ebp], xmm0
  000b7	8d 55 b8	 lea	 edx, DWORD PTR $T4[ebp]
  000ba	52		 push	 edx
  000bb	8d 45 b4	 lea	 eax, DWORD PTR $T3[ebp]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  000c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f060a92
  000cc	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  000d0	f3 0f 11 45 fc	 movss	 DWORD PTR _roll$[ebp], xmm0

; 1437 : 
; 1438 : 	//
; 1439 : 	// calculate roll for helicopter at given acceleration
; 1440 : 	//
; 1441 : 
; 1442 : 	roll = HELICOPTER_MAX_ROLL * min (((lateral_acceleration * G) / aircraft_database [get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE)].g_max), 1.0f);

  000d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000dd	f3 0f 11 45 b0	 movss	 DWORD PTR $T2[ebp], xmm0
  000e2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000e6	74 0a		 je	 SHORT $LN7@helicopter
  000e8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ed	89 4d a8	 mov	 DWORD PTR tv132[ebp], ecx
  000f0	eb 21		 jmp	 SHORT $LN8@helicopter
$LN7@helicopter:
  000f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA
  000f8	83 c2 0f	 add	 edx, 15			; 0000000fH
  000fb	52		 push	 edx
  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN8@helicopter:
  00113	b9 01 00 00 00	 mov	 ecx, 1
  00118	85 c9		 test	 ecx, ecx
  0011a	74 09		 je	 SHORT $LN9@helicopter
  0011c	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv140[ebp], 52 ; 00000034H
  00123	eb 21		 jmp	 SHORT $LN10@helicopter
$LN9@helicopter:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z@4JA
  0012b	83 c2 0f	 add	 edx, 15			; 0000000fH
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN10@helicopter:
  00146	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _lateral_acceleration$[ebp]
  0014b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  00153	6a 34		 push	 52			; 00000034H
  00155	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00158	51		 push	 ecx
  00159	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv132[ebp], 1116
  00160	8b 45 a4	 mov	 eax, DWORD PTR tv140[ebp]
  00163	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0016a	f3 0f 11 45 a0	 movss	 DWORD PTR tv194[ebp], xmm0
  0016f	ff d1		 call	 ecx
  00171	69 d0 f4 00 00
	00		 imul	 edx, eax, 244
  00177	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv194[ebp]
  0017c	f3 0f 5e 82 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+168]
  00184	f3 0f 11 45 ac	 movss	 DWORD PTR $T1[ebp], xmm0
  00189	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  0018c	50		 push	 eax
  0018d	8d 4d ac	 lea	 ecx, DWORD PTR $T1[ebp]
  00190	51		 push	 ecx
  00191	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00196	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f060a92
  0019e	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  001a2	f3 0f 11 45 fc	 movss	 DWORD PTR _roll$[ebp], xmm0

; 1443 : 
; 1444 : 	return roll;

  001a7	d9 45 fc	 fld	 DWORD PTR _roll$[ebp]

; 1445 : }

  001aa	5f		 pop	 edi
  001ab	5e		 pop	 esi
  001ac	5b		 pop	 ebx
  001ad	8b e5		 mov	 esp, ebp
  001af	5d		 pop	 ebp
  001b0	c2 10 00	 ret	 16			; 00000010H
?helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z ENDP ; helicopter_movement_get_desired_roll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z
_TEXT	SEGMENT
tv784 = -176						; size = 4
tv705 = -172						; size = 4
tv373 = -168						; size = 4
tv790 = -164						; size = 4
tv365 = -164						; size = 4
tv465 = -160						; size = 4
tv385 = -160						; size = 8
tv457 = -156						; size = 4
tv782 = -152						; size = 4
tv477 = -152						; size = 8
tv686 = -148						; size = 4
tv788 = -144						; size = 4
tv342 = -144						; size = 4
tv436 = -140						; size = 4
tv334 = -140						; size = 4
tv428 = -136						; size = 4
tv386 = -136						; size = 8
tv552 = -132						; size = 4
tv478 = -132						; size = 8
tv780 = -128						; size = 4
tv776 = -128						; size = 4
tv565 = -128						; size = 8
tv786 = -124						; size = 4
tv772 = -124						; size = 4
tv666 = -124						; size = 4
tv645 = -124						; size = 4
tv618 = -124						; size = 4
tv605 = -124						; size = 4
tv547 = -124						; size = 4
tv778 = -120						; size = 4
tv497 = -120						; size = 4
tv407 = -120						; size = 4
tv311 = -120						; size = 4
tv278 = -120						; size = 4
tv235 = -120						; size = 4
tv215 = -120						; size = 4
tv195 = -120						; size = 4
tv169 = -120						; size = 4
tv147 = -120						; size = 4
tv84 = -120						; size = 4
tv613 = -116						; size = 4
tv489 = -116						; size = 4
tv399 = -116						; size = 4
tv303 = -116						; size = 4
tv270 = -116						; size = 4
tv227 = -116						; size = 4
tv207 = -116						; size = 4
tv187 = -116						; size = 4
tv162 = -116						; size = 4
tv140 = -116						; size = 4
tv76 = -116						; size = 4
$T1 = -112						; size = 8
$T2 = -104						; size = 8
$T3 = -96						; size = 4
$T4 = -92						; size = 4
_guide_pos$ = -24					; size = 12
_range$ = -12						; size = 4
_pitch$ = -8						; size = 4
_guide$ = -4						; size = 4
_en$ = 8						; size = 4
_model_motion_vector$ = 12				; size = 4
_model_acceleration_vector$ = 16			; size = 4
_return_flag$ = 20					; size = 4
?helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z PROC ; helicopter_movement_get_desired_pitch, COMDAT

; 1321 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1322 : 	entity
; 1323 : 		*guide;
; 1324 : 
; 1325 : 	float
; 1326 : 		pitch,
; 1327 : 		range;
; 1328 : 
; 1329 : 	vec3d
; 1330 : 		guide_pos;
; 1331 : 
; 1332 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@helicopter
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00017	83 c0 0b	 add	 eax, 11			; 0000000bH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 1333 : 
; 1334 : 	if (return_flag) *return_flag = FALSE;

  0002a	83 7d 14 00	 cmp	 DWORD PTR _return_flag$[ebp], 0
  0002e	74 09		 je	 SHORT $LN3@helicopter
  00030	8b 45 14	 mov	 eax, DWORD PTR _return_flag$[ebp]
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN3@helicopter:

; 1335 : 
; 1336 : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  00039	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0003d	74 0a		 je	 SHORT $LN17@helicopter
  0003f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00042	8b 08		 mov	 ecx, DWORD PTR [eax]
  00044	89 4d 8c	 mov	 DWORD PTR tv76[ebp], ecx
  00047	eb 21		 jmp	 SHORT $LN18@helicopter
$LN17@helicopter:
  00049	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0004f	83 c2 0f	 add	 edx, 15			; 0000000fH
  00052	52		 push	 edx
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00063	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN18@helicopter:
  0006a	b9 01 00 00 00	 mov	 ecx, 1
  0006f	85 c9		 test	 ecx, ecx
  00071	74 09		 je	 SHORT $LN19@helicopter
  00073	c7 45 88 0d 00
	00 00		 mov	 DWORD PTR tv84[ebp], 13	; 0000000dH
  0007a	eb 21		 jmp	 SHORT $LN20@helicopter
$LN19@helicopter:
  0007c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00082	83 c2 0f	 add	 edx, 15			; 0000000fH
  00085	52		 push	 edx
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00096	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN20@helicopter:
  0009d	6a 0d		 push	 13			; 0000000dH
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a2	51		 push	 ecx
  000a3	69 55 8c b4 00
	00 00		 imul	 edx, DWORD PTR tv76[ebp], 180
  000aa	8b 45 88	 mov	 eax, DWORD PTR tv84[ebp]
  000ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000b4	ff d1		 call	 ecx
  000b6	89 45 fc	 mov	 DWORD PTR _guide$[ebp], eax

; 1337 : 
; 1338 : 	ASSERT (guide);

  000b9	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000bd	75 18		 jne	 SHORT $LN4@helicopter
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  000c4	83 c0 11	 add	 eax, 17			; 00000011H
  000c7	50		 push	 eax
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_05HLIEEKJG@guide@
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@helicopter:

; 1339 : 
; 1340 : 	if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_WEAPON_VECTOR))

  000d7	6a 05		 push	 5
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  000e2	85 c0		 test	 eax, eax
  000e4	0f 84 8d 03 00
	00		 je	 $LN14@helicopter

; 1341 : 	{
; 1342 : 		//
; 1343 : 		// check radius
; 1344 : 		//
; 1345 : 
; 1346 : 		if ((!get_guide_criteria_valid (guide, GUIDE_CRITERIA_RADIUS)) || (get_local_entity_float_value (en, FLOAT_TYPE_DISTANCE) < get_guide_criteria_value (guide, GUIDE_CRITERIA_RADIUS)))

  000ea	6a 00		 push	 0
  000ec	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  000f5	85 c0		 test	 eax, eax
  000f7	0f 84 a9 00 00
	00		 je	 $LN7@helicopter
  000fd	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00101	74 0a		 je	 SHORT $LN21@helicopter
  00103	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00106	8b 08		 mov	 ecx, DWORD PTR [eax]
  00108	89 4d 8c	 mov	 DWORD PTR tv140[ebp], ecx
  0010b	eb 1d		 jmp	 SHORT $LN22@helicopter
$LN21@helicopter:
  0010d	68 42 05 00 00	 push	 1346			; 00000542H
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00117	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0011d	52		 push	 edx
  0011e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00123	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN22@helicopter:
  0012a	b8 01 00 00 00	 mov	 eax, 1
  0012f	85 c0		 test	 eax, eax
  00131	74 09		 je	 SHORT $LN23@helicopter
  00133	c7 45 88 1f 00
	00 00		 mov	 DWORD PTR tv147[ebp], 31 ; 0000001fH
  0013a	eb 1d		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  0013c	68 42 05 00 00	 push	 1346			; 00000542H
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00146	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0014c	51		 push	 ecx
  0014d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00152	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN24@helicopter:
  00159	6a 1f		 push	 31			; 0000001fH
  0015b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0015e	52		 push	 edx
  0015f	69 45 8c bc 02
	00 00		 imul	 eax, DWORD PTR tv140[ebp], 700
  00166	8b 4d 88	 mov	 ecx, DWORD PTR tv147[ebp]
  00169	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00170	ff d2		 call	 edx
  00172	d9 5d 84	 fstp	 DWORD PTR tv547[ebp]
  00175	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv547[ebp]
  0017a	6a 00		 push	 0
  0017c	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  0017f	50		 push	 eax
  00180	f3 0f 11 45 80	 movss	 DWORD PTR tv776[ebp], xmm0
  00185	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  0018a	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv552[ebp]
  00190	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv552[ebp]
  00198	f3 0f 10 4d 80	 movss	 xmm1, DWORD PTR tv776[ebp]
  0019d	0f 2f c1	 comiss	 xmm0, xmm1
  001a0	0f 86 d1 02 00
	00		 jbe	 $LN14@helicopter
$LN7@helicopter:

; 1347 : 		{
; 1348 : 			//
; 1349 : 			// check velocity
; 1350 : 			//
; 1351 : 
; 1352 : 			if (get_local_entity_float_value (en, FLOAT_TYPE_VELOCITY) < 5.0)

  001a6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001aa	74 0a		 je	 SHORT $LN25@helicopter
  001ac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001af	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b1	89 4d 8c	 mov	 DWORD PTR tv162[ebp], ecx
  001b4	eb 1d		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  001b6	68 48 05 00 00	 push	 1352			; 00000548H
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001c6	52		 push	 edx
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN26@helicopter:
  001d3	b8 01 00 00 00	 mov	 eax, 1
  001d8	85 c0		 test	 eax, eax
  001da	74 09		 je	 SHORT $LN27@helicopter
  001dc	c7 45 88 93 00
	00 00		 mov	 DWORD PTR tv169[ebp], 147 ; 00000093H
  001e3	eb 1d		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  001e5	68 48 05 00 00	 push	 1352			; 00000548H
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001f5	51		 push	 ecx
  001f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fb	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN28@helicopter:
  00202	68 93 00 00 00	 push	 147			; 00000093H
  00207	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0020a	52		 push	 edx
  0020b	69 45 8c bc 02
	00 00		 imul	 eax, DWORD PTR tv162[ebp], 700
  00212	8b 4d 88	 mov	 ecx, DWORD PTR tv169[ebp]
  00215	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  0021c	ff d2		 call	 edx
  0021e	dd 5d 80	 fstp	 QWORD PTR tv565[ebp]
  00221	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4014000000000000
  00229	66 0f 2f 45 80	 comisd	 xmm0, QWORD PTR tv565[ebp]
  0022e	0f 86 43 02 00
	00		 jbe	 $LN14@helicopter

; 1353 : 			{
; 1354 : 				//
; 1355 : 				// check altitude
; 1356 : 				//
; 1357 : 
; 1358 : 				if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_ALTITUDE))

  00234	6a 02		 push	 2
  00236	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  0023f	85 c0		 test	 eax, eax
  00241	0f 84 04 02 00
	00		 je	 $LN9@helicopter

; 1359 : 				{
; 1360 : 					get_local_entity_vec3d (guide, VEC3D_TYPE_POSITION, &guide_pos);

  00247	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0024b	74 0a		 je	 SHORT $LN29@helicopter
  0024d	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  00250	8b 08		 mov	 ecx, DWORD PTR [eax]
  00252	89 4d 8c	 mov	 DWORD PTR tv187[ebp], ecx
  00255	eb 21		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  00257	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0025d	83 c2 27	 add	 edx, 39			; 00000027H
  00260	52		 push	 edx
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00266	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00271	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN30@helicopter:
  00278	b9 01 00 00 00	 mov	 ecx, 1
  0027d	85 c9		 test	 ecx, ecx
  0027f	74 09		 je	 SHORT $LN31@helicopter
  00281	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv195[ebp], 8
  00288	eb 21		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  0028a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00290	83 c2 27	 add	 edx, 39			; 00000027H
  00293	52		 push	 edx
  00294	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a4	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv195[ebp], 0
$LN32@helicopter:
  002ab	8d 4d e8	 lea	 ecx, DWORD PTR _guide_pos$[ebp]
  002ae	51		 push	 ecx
  002af	6a 08		 push	 8
  002b1	8b 55 fc	 mov	 edx, DWORD PTR _guide$[ebp]
  002b4	52		 push	 edx
  002b5	6b 45 8c 60	 imul	 eax, DWORD PTR tv187[ebp], 96
  002b9	8b 4d 88	 mov	 ecx, DWORD PTR tv195[ebp]
  002bc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  002c3	ff d2		 call	 edx

; 1361 : 
; 1362 : 					range = get_local_entity_float_value (en, FLOAT_TYPE_ALTITUDE);

  002c5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002c9	74 0a		 je	 SHORT $LN33@helicopter
  002cb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d0	89 4d 8c	 mov	 DWORD PTR tv207[ebp], ecx
  002d3	eb 21		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  002d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  002db	83 c2 29	 add	 edx, 41			; 00000029H
  002de	52		 push	 edx
  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ef	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv207[ebp], 0
$LN34@helicopter:
  002f6	b9 01 00 00 00	 mov	 ecx, 1
  002fb	85 c9		 test	 ecx, ecx
  002fd	74 09		 je	 SHORT $LN35@helicopter
  002ff	c7 45 88 06 00
	00 00		 mov	 DWORD PTR tv215[ebp], 6
  00306	eb 21		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  00308	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0030e	83 c2 29	 add	 edx, 41			; 00000029H
  00311	52		 push	 edx
  00312	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00317	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0031c	50		 push	 eax
  0031d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00322	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv215[ebp], 0
$LN36@helicopter:
  00329	6a 06		 push	 6
  0032b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0032e	51		 push	 ecx
  0032f	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv207[ebp], 700
  00336	8b 45 88	 mov	 eax, DWORD PTR tv215[ebp]
  00339	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00340	ff d1		 call	 ecx
  00342	d9 5d f4	 fstp	 DWORD PTR _range$[ebp]

; 1363 : 
; 1364 : 					range -= get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  00345	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00349	74 0a		 je	 SHORT $LN37@helicopter
  0034b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0034e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00350	89 4d 8c	 mov	 DWORD PTR tv227[ebp], ecx
  00353	eb 21		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  00355	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0035b	83 c2 2b	 add	 edx, 43			; 0000002bH
  0035e	52		 push	 edx
  0035f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00364	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00369	50		 push	 eax
  0036a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036f	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv227[ebp], 0
$LN38@helicopter:
  00376	b9 01 00 00 00	 mov	 ecx, 1
  0037b	85 c9		 test	 ecx, ecx
  0037d	74 09		 je	 SHORT $LN39@helicopter
  0037f	c7 45 88 12 00
	00 00		 mov	 DWORD PTR tv235[ebp], 18 ; 00000012H
  00386	eb 21		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  00388	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0038e	83 c2 2b	 add	 edx, 43			; 0000002bH
  00391	52		 push	 edx
  00392	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00397	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0039c	50		 push	 eax
  0039d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN40@helicopter:
  003a9	6a 12		 push	 18			; 00000012H
  003ab	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003ae	51		 push	 ecx
  003af	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv227[ebp], 700
  003b6	8b 45 88	 mov	 eax, DWORD PTR tv235[ebp]
  003b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  003c0	ff d1		 call	 ecx
  003c2	d9 5d 84	 fstp	 DWORD PTR tv605[ebp]
  003c5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _range$[ebp]
  003ca	f3 0f 5c 45 84	 subss	 xmm0, DWORD PTR tv605[ebp]
  003cf	f3 0f 11 45 f4	 movss	 DWORD PTR _range$[ebp], xmm0

; 1365 : 
; 1366 : 					range -= guide_pos.y;

  003d4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _range$[ebp]
  003d9	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _guide_pos$[ebp+4]
  003de	f3 0f 11 45 f4	 movss	 DWORD PTR _range$[ebp], xmm0

; 1367 : 
; 1368 : 					if (fabs (range) < get_guide_criteria_value (guide, GUIDE_CRITERIA_ALTITUDE))

  003e3	51		 push	 ecx
  003e4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _range$[ebp]
  003e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ee	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  003f3	d9 5d 8c	 fstp	 DWORD PTR tv613[ebp]
  003f6	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv613[ebp]
  003fb	6a 02		 push	 2
  003fd	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  00400	50		 push	 eax
  00401	f3 0f 11 45 88	 movss	 DWORD PTR tv778[ebp], xmm0
  00406	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  0040b	d9 5d 84	 fstp	 DWORD PTR tv618[ebp]
  0040e	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv618[ebp]
  00413	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR tv778[ebp]
  00418	0f 2f c1	 comiss	 xmm0, xmm1
  0041b	76 2c		 jbe	 SHORT $LN12@helicopter

; 1369 : 					{
; 1370 : 						if (get_guide_required_pitch (guide, en, &pitch))

  0041d	8d 45 f8	 lea	 eax, DWORD PTR _pitch$[ebp]
  00420	50		 push	 eax
  00421	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00424	51		 push	 ecx
  00425	8b 55 fc	 mov	 edx, DWORD PTR _guide$[ebp]
  00428	52		 push	 edx
  00429	e8 00 00 00 00	 call	 ?get_guide_required_pitch@@YGHPAUENTITY@@0PAM@Z ; get_guide_required_pitch
  0042e	85 c0		 test	 eax, eax
  00430	74 17		 je	 SHORT $LN12@helicopter

; 1371 : 						{
; 1372 : 							if (return_flag) *return_flag = TRUE;

  00432	83 7d 14 00	 cmp	 DWORD PTR _return_flag$[ebp], 0
  00436	74 09		 je	 SHORT $LN13@helicopter
  00438	8b 45 14	 mov	 eax, DWORD PTR _return_flag$[ebp]
  0043b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$LN13@helicopter:

; 1373 : 
; 1374 : 							return pitch;

  00441	d9 45 f8	 fld	 DWORD PTR _pitch$[ebp]
  00444	e9 35 07 00 00	 jmp	 $LN1@helicopter
$LN12@helicopter:

; 1375 : 						}
; 1376 : 					}
; 1377 : 				}
; 1378 : 				else

  00449	eb 2c		 jmp	 SHORT $LN14@helicopter
$LN9@helicopter:

; 1379 : 				{
; 1380 : 					if (get_guide_required_pitch (guide, en, &pitch))

  0044b	8d 45 f8	 lea	 eax, DWORD PTR _pitch$[ebp]
  0044e	50		 push	 eax
  0044f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00452	51		 push	 ecx
  00453	8b 55 fc	 mov	 edx, DWORD PTR _guide$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?get_guide_required_pitch@@YGHPAUENTITY@@0PAM@Z ; get_guide_required_pitch
  0045c	85 c0		 test	 eax, eax
  0045e	74 17		 je	 SHORT $LN14@helicopter

; 1381 : 					{
; 1382 : 						if (return_flag) *return_flag = TRUE;

  00460	83 7d 14 00	 cmp	 DWORD PTR _return_flag$[ebp], 0
  00464	74 09		 je	 SHORT $LN15@helicopter
  00466	8b 45 14	 mov	 eax, DWORD PTR _return_flag$[ebp]
  00469	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$LN15@helicopter:

; 1383 : 
; 1384 : 						return pitch;

  0046f	d9 45 f8	 fld	 DWORD PTR _pitch$[ebp]
  00472	e9 07 07 00 00	 jmp	 $LN1@helicopter
$LN14@helicopter:

; 1385 : 					}
; 1386 : 				}
; 1387 : 			}
; 1388 : 		}
; 1389 : 	}
; 1390 : 
; 1391 : 	//
; 1392 : 	// Default case :-
; 1393 : 	//
; 1394 : 
; 1395 : 	{
; 1396 : 
; 1397 : 		//
; 1398 : 		// calculate pitch for helicopter at given velocity
; 1399 : 		//
; 1400 : 
; 1401 : 		pitch = -(HELICOPTER_MAX_PITCH * min ((model_motion_vector->z / get_local_entity_float_value (en, FLOAT_TYPE_CRUISE_VELOCITY)), 1.0f));

  00477	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0047f	f3 0f 11 45 a4	 movss	 DWORD PTR $T4[ebp], xmm0
  00484	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00488	74 0a		 je	 SHORT $LN41@helicopter
  0048a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0048d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048f	89 4d 8c	 mov	 DWORD PTR tv270[ebp], ecx
  00492	eb 21		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  00494	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0049a	83 c2 50	 add	 edx, 80			; 00000050H
  0049d	52		 push	 edx
  0049e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004a8	50		 push	 eax
  004a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ae	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv270[ebp], 0
$LN42@helicopter:
  004b5	b9 01 00 00 00	 mov	 ecx, 1
  004ba	85 c9		 test	 ecx, ecx
  004bc	74 09		 je	 SHORT $LN43@helicopter
  004be	c7 45 88 19 00
	00 00		 mov	 DWORD PTR tv278[ebp], 25 ; 00000019H
  004c5	eb 21		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  004c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  004cd	83 c2 50	 add	 edx, 80			; 00000050H
  004d0	52		 push	 edx
  004d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  004db	50		 push	 eax
  004dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e1	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv278[ebp], 0
$LN44@helicopter:
  004e8	6a 19		 push	 25			; 00000019H
  004ea	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004ed	51		 push	 ecx
  004ee	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv270[ebp], 700
  004f5	8b 45 88	 mov	 eax, DWORD PTR tv278[ebp]
  004f8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  004ff	ff d1		 call	 ecx
  00501	d9 5d 84	 fstp	 DWORD PTR tv645[ebp]
  00504	8b 55 0c	 mov	 edx, DWORD PTR _model_motion_vector$[ebp]
  00507	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0050c	f3 0f 5e 45 84	 divss	 xmm0, DWORD PTR tv645[ebp]
  00511	f3 0f 11 45 a0	 movss	 DWORD PTR $T3[ebp], xmm0
  00516	8d 45 a4	 lea	 eax, DWORD PTR $T4[ebp]
  00519	50		 push	 eax
  0051a	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  0051d	51		 push	 ecx
  0051e	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00523	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eb2b8c2
  0052b	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  0052f	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00536	f3 0f 11 45 f8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 1402 : 
; 1403 : 		// reduce pitch if climbing, upto 0 pitch
; 1404 : 		pitch = min (pitch + HELICOPTER_MAX_PITCH * bound (((fabs (model_motion_vector->y) * G) / aircraft_database [get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE)].g_max), -1.0, 1.0), 0.0);

  0053b	0f 57 c0	 xorps	 xmm0, xmm0
  0053e	f2 0f 11 45 98	 movsd	 QWORD PTR $T2[ebp], xmm0
  00543	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00547	74 0a		 je	 SHORT $LN45@helicopter
  00549	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0054c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0054e	89 4d 8c	 mov	 DWORD PTR tv303[ebp], ecx
  00551	eb 21		 jmp	 SHORT $LN46@helicopter
$LN45@helicopter:
  00553	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00559	83 c2 53	 add	 edx, 83			; 00000053H
  0055c	52		 push	 edx
  0055d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00562	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00567	50		 push	 eax
  00568	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0056d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv303[ebp], 0
$LN46@helicopter:
  00574	b9 01 00 00 00	 mov	 ecx, 1
  00579	85 c9		 test	 ecx, ecx
  0057b	74 09		 je	 SHORT $LN47@helicopter
  0057d	c7 45 88 34 00
	00 00		 mov	 DWORD PTR tv311[ebp], 52 ; 00000034H
  00584	eb 21		 jmp	 SHORT $LN48@helicopter
$LN47@helicopter:
  00586	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0058c	83 c2 53	 add	 edx, 83			; 00000053H
  0058f	52		 push	 edx
  00590	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00595	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0059a	50		 push	 eax
  0059b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a0	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv311[ebp], 0
$LN48@helicopter:
  005a7	8b 4d 0c	 mov	 ecx, DWORD PTR _model_motion_vector$[ebp]
  005aa	51		 push	 ecx
  005ab	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  005b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b5	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  005ba	d9 5d 84	 fstp	 DWORD PTR tv666[ebp]
  005bd	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv666[ebp]
  005c2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  005ca	6a 34		 push	 52			; 00000034H
  005cc	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005cf	52		 push	 edx
  005d0	69 45 8c 5c 04
	00 00		 imul	 eax, DWORD PTR tv303[ebp], 1116
  005d7	8b 4d 88	 mov	 ecx, DWORD PTR tv311[ebp]
  005da	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005e1	f3 0f 11 45 80	 movss	 DWORD PTR tv780[ebp], xmm0
  005e6	ff d2		 call	 edx
  005e8	69 c0 f4 00 00
	00		 imul	 eax, eax, 244
  005ee	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR tv780[ebp]
  005f3	f3 0f 5e 80 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+168]
  005fb	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005ff	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
  00607	66 0f 2f c8	 comisd	 xmm1, xmm0
  0060b	76 15		 jbe	 SHORT $LN59@helicopter
  0060d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff0000000000000
  00615	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR tv386[ebp], xmm0
  0061d	e9 ed 01 00 00	 jmp	 $LN60@helicopter
$LN59@helicopter:
  00622	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00626	74 0d		 je	 SHORT $LN49@helicopter
  00628	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0062b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0062d	89 95 74 ff ff
	ff		 mov	 DWORD PTR tv334[ebp], edx
  00633	eb 24		 jmp	 SHORT $LN50@helicopter
$LN49@helicopter:
  00635	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0063a	83 c0 53	 add	 eax, 83			; 00000053H
  0063d	50		 push	 eax
  0063e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00643	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00649	51		 push	 ecx
  0064a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0064f	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv334[ebp], 0
$LN50@helicopter:
  00659	ba 01 00 00 00	 mov	 edx, 1
  0065e	85 d2		 test	 edx, edx
  00660	74 0c		 je	 SHORT $LN51@helicopter
  00662	c7 85 70 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv342[ebp], 52 ; 00000034H
  0066c	eb 24		 jmp	 SHORT $LN52@helicopter
$LN51@helicopter:
  0066e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00673	83 c0 53	 add	 eax, 83			; 00000053H
  00676	50		 push	 eax
  00677	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0067c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00682	51		 push	 ecx
  00683	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00688	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv342[ebp], 0
$LN52@helicopter:
  00692	8b 55 0c	 mov	 edx, DWORD PTR _model_motion_vector$[ebp]
  00695	51		 push	 ecx
  00696	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0069b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a0	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  006a5	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv686[ebp]
  006ab	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv686[ebp]
  006b3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  006bb	6a 34		 push	 52			; 00000034H
  006bd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006c0	50		 push	 eax
  006c1	69 8d 74 ff ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv334[ebp], 1116
  006cb	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv342[ebp]
  006d1	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  006d8	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR tv782[ebp], xmm0
  006e0	ff d0		 call	 eax
  006e2	69 c8 f4 00 00
	00		 imul	 ecx, eax, 244
  006e8	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR tv782[ebp]
  006f0	f3 0f 5e 81 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+168]
  006f8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006fc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00704	76 15		 jbe	 SHORT $LN57@helicopter
  00706	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0070e	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv385[ebp], xmm0
  00716	e9 e4 00 00 00	 jmp	 $LN58@helicopter
$LN57@helicopter:
  0071b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0071f	74 0d		 je	 SHORT $LN53@helicopter
  00721	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00724	8b 02		 mov	 eax, DWORD PTR [edx]
  00726	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv365[ebp], eax
  0072c	eb 25		 jmp	 SHORT $LN54@helicopter
$LN53@helicopter:
  0072e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00734	83 c1 53	 add	 ecx, 83			; 00000053H
  00737	51		 push	 ecx
  00738	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0073d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00743	52		 push	 edx
  00744	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00749	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv365[ebp], 0
$LN54@helicopter:
  00753	b8 01 00 00 00	 mov	 eax, 1
  00758	85 c0		 test	 eax, eax
  0075a	74 0c		 je	 SHORT $LN55@helicopter
  0075c	c7 85 58 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv373[ebp], 52 ; 00000034H
  00766	eb 25		 jmp	 SHORT $LN56@helicopter
$LN55@helicopter:
  00768	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0076e	83 c1 53	 add	 ecx, 83			; 00000053H
  00771	51		 push	 ecx
  00772	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00777	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0077d	52		 push	 edx
  0077e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00783	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv373[ebp], 0
$LN56@helicopter:
  0078d	8b 45 0c	 mov	 eax, DWORD PTR _model_motion_vector$[ebp]
  00790	51		 push	 ecx
  00791	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00796	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0079b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  007a0	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv705[ebp]
  007a6	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv705[ebp]
  007ae	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  007b6	6a 34		 push	 52			; 00000034H
  007b8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  007bb	51		 push	 ecx
  007bc	69 95 5c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv365[ebp], 1116
  007c6	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv373[ebp]
  007cc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  007d3	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv784[ebp], xmm0
  007db	ff d1		 call	 ecx
  007dd	69 d0 f4 00 00
	00		 imul	 edx, eax, 244
  007e3	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv784[ebp]
  007eb	f3 0f 5e 82 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+168]
  007f3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  007f7	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv385[ebp], xmm0
$LN58@helicopter:
  007ff	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv385[ebp]
  00807	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR tv386[ebp], xmm0
$LN60@helicopter:
  0080f	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pitch$[ebp]
  00814	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fd6571840000000
  0081c	f2 0f 59 8d 78
	ff ff ff	 mulsd	 xmm1, QWORD PTR tv386[ebp]
  00824	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00828	f2 0f 11 45 90	 movsd	 QWORD PTR $T1[ebp], xmm0
  0082d	8d 45 98	 lea	 eax, DWORD PTR $T2[ebp]
  00830	50		 push	 eax
  00831	8d 4d 90	 lea	 ecx, DWORD PTR $T1[ebp]
  00834	51		 push	 ecx
  00835	e8 00 00 00 00	 call	 ??$min@N@std@@YGABNABN0@Z ; std::min<double>
  0083a	f2 0f 5a 00	 cvtsd2ss xmm0, QWORD PTR [eax]
  0083e	f3 0f 11 45 f8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 1405 : 
; 1406 : 		//
; 1407 : 		// calculate pitch for helicopter at given acceleration
; 1408 : 		//
; 1409 : 
; 1410 : 		pitch -= HELICOPTER_MAX_PITCH * bound (((model_acceleration_vector->z * G) / aircraft_database [get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE)].g_max), -1.0, 1.0);

  00843	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00847	74 0a		 je	 SHORT $LN61@helicopter
  00849	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0084c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0084e	89 4d 8c	 mov	 DWORD PTR tv399[ebp], ecx
  00851	eb 21		 jmp	 SHORT $LN62@helicopter
$LN61@helicopter:
  00853	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00859	83 c2 59	 add	 edx, 89			; 00000059H
  0085c	52		 push	 edx
  0085d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00862	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00867	50		 push	 eax
  00868	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0086d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv399[ebp], 0
$LN62@helicopter:
  00874	b9 01 00 00 00	 mov	 ecx, 1
  00879	85 c9		 test	 ecx, ecx
  0087b	74 09		 je	 SHORT $LN63@helicopter
  0087d	c7 45 88 34 00
	00 00		 mov	 DWORD PTR tv407[ebp], 52 ; 00000034H
  00884	eb 21		 jmp	 SHORT $LN64@helicopter
$LN63@helicopter:
  00886	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  0088c	83 c2 59	 add	 edx, 89			; 00000059H
  0088f	52		 push	 edx
  00890	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00895	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0089a	50		 push	 eax
  0089b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008a0	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv407[ebp], 0
$LN64@helicopter:
  008a7	8b 4d 10	 mov	 ecx, DWORD PTR _model_acceleration_vector$[ebp]
  008aa	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  008af	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  008b7	6a 34		 push	 52			; 00000034H
  008b9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  008bc	52		 push	 edx
  008bd	69 45 8c 5c 04
	00 00		 imul	 eax, DWORD PTR tv399[ebp], 1116
  008c4	8b 4d 88	 mov	 ecx, DWORD PTR tv407[ebp]
  008c7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  008ce	f3 0f 11 45 84	 movss	 DWORD PTR tv786[ebp], xmm0
  008d3	ff d2		 call	 edx
  008d5	69 c0 f4 00 00
	00		 imul	 eax, eax, 244
  008db	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv786[ebp]
  008e0	f3 0f 5e 80 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+168]
  008e8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  008ec	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
  008f4	66 0f 2f c8	 comisd	 xmm1, xmm0
  008f8	76 15		 jbe	 SHORT $LN75@helicopter
  008fa	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff0000000000000
  00902	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv478[ebp], xmm0
  0090a	e9 bb 01 00 00	 jmp	 $LN76@helicopter
$LN75@helicopter:
  0090f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00913	74 0d		 je	 SHORT $LN65@helicopter
  00915	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00918	8b 11		 mov	 edx, DWORD PTR [ecx]
  0091a	89 95 78 ff ff
	ff		 mov	 DWORD PTR tv428[ebp], edx
  00920	eb 24		 jmp	 SHORT $LN66@helicopter
$LN65@helicopter:
  00922	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00927	83 c0 59	 add	 eax, 89			; 00000059H
  0092a	50		 push	 eax
  0092b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00930	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00936	51		 push	 ecx
  00937	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0093c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv428[ebp], 0
$LN66@helicopter:
  00946	ba 01 00 00 00	 mov	 edx, 1
  0094b	85 d2		 test	 edx, edx
  0094d	74 0c		 je	 SHORT $LN67@helicopter
  0094f	c7 85 74 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv436[ebp], 52 ; 00000034H
  00959	eb 24		 jmp	 SHORT $LN68@helicopter
$LN67@helicopter:
  0095b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00960	83 c0 59	 add	 eax, 89			; 00000059H
  00963	50		 push	 eax
  00964	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00969	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0096f	51		 push	 ecx
  00970	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00975	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv436[ebp], 0
$LN68@helicopter:
  0097f	8b 55 10	 mov	 edx, DWORD PTR _model_acceleration_vector$[ebp]
  00982	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  00987	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  0098f	6a 34		 push	 52			; 00000034H
  00991	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00994	50		 push	 eax
  00995	69 8d 78 ff ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv428[ebp], 1116
  0099f	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv436[ebp]
  009a5	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  009ac	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR tv788[ebp], xmm0
  009b4	ff d0		 call	 eax
  009b6	69 c8 f4 00 00
	00		 imul	 ecx, eax, 244
  009bc	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv788[ebp]
  009c4	f3 0f 5e 81 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+168]
  009cc	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  009d0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  009d8	76 15		 jbe	 SHORT $LN73@helicopter
  009da	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  009e2	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv477[ebp], xmm0
  009ea	e9 cb 00 00 00	 jmp	 $LN74@helicopter
$LN73@helicopter:
  009ef	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009f3	74 0d		 je	 SHORT $LN69@helicopter
  009f5	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  009f8	8b 02		 mov	 eax, DWORD PTR [edx]
  009fa	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv457[ebp], eax
  00a00	eb 25		 jmp	 SHORT $LN70@helicopter
$LN69@helicopter:
  00a02	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00a08	83 c1 59	 add	 ecx, 89			; 00000059H
  00a0b	51		 push	 ecx
  00a0c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a11	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a17	52		 push	 edx
  00a18	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a1d	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv457[ebp], 0
$LN70@helicopter:
  00a27	b8 01 00 00 00	 mov	 eax, 1
  00a2c	85 c0		 test	 eax, eax
  00a2e	74 0c		 je	 SHORT $LN71@helicopter
  00a30	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv465[ebp], 52 ; 00000034H
  00a3a	eb 25		 jmp	 SHORT $LN72@helicopter
$LN71@helicopter:
  00a3c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00a42	83 c1 59	 add	 ecx, 89			; 00000059H
  00a45	51		 push	 ecx
  00a46	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a4b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a51	52		 push	 edx
  00a52	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a57	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv465[ebp], 0
$LN72@helicopter:
  00a61	8b 45 10	 mov	 eax, DWORD PTR _model_acceleration_vector$[ebp]
  00a64	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00a69	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@411cf5c3
  00a71	6a 34		 push	 52			; 00000034H
  00a73	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00a76	51		 push	 ecx
  00a77	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv457[ebp], 1116
  00a81	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv465[ebp]
  00a87	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00a8e	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR tv790[ebp], xmm0
  00a96	ff d1		 call	 ecx
  00a98	69 d0 f4 00 00
	00		 imul	 edx, eax, 244
  00a9e	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR tv790[ebp]
  00aa6	f3 0f 5e 82 a8
	00 00 00	 divss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+168]
  00aae	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00ab2	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv477[ebp], xmm0
$LN74@helicopter:
  00aba	f2 0f 10 85 68
	ff ff ff	 movsd	 xmm0, QWORD PTR tv477[ebp]
  00ac2	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv478[ebp], xmm0
$LN76@helicopter:
  00aca	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd6571840000000
  00ad2	f2 0f 59 85 7c
	ff ff ff	 mulsd	 xmm0, QWORD PTR tv478[ebp]
  00ada	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _pitch$[ebp]
  00adf	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00ae3	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00ae7	f3 0f 11 45 f8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 1411 : 
; 1412 : 		//
; 1413 : 		// add in rotor angle
; 1414 : 		//
; 1415 : 
; 1416 : 		pitch += get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_SHAFT_ANGLE);

  00aec	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00af0	74 0a		 je	 SHORT $LN77@helicopter
  00af2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00af5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00af7	89 4d 8c	 mov	 DWORD PTR tv489[ebp], ecx
  00afa	eb 21		 jmp	 SHORT $LN78@helicopter
$LN77@helicopter:
  00afc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00b02	83 c2 5f	 add	 edx, 95			; 0000005fH
  00b05	52		 push	 edx
  00b06	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b0b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b10	50		 push	 eax
  00b11	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b16	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv489[ebp], 0
$LN78@helicopter:
  00b1d	b9 01 00 00 00	 mov	 ecx, 1
  00b22	85 c9		 test	 ecx, ecx
  00b24	74 09		 je	 SHORT $LN79@helicopter
  00b26	c7 45 88 49 00
	00 00		 mov	 DWORD PTR tv497[ebp], 73 ; 00000049H
  00b2d	eb 21		 jmp	 SHORT $LN80@helicopter
$LN79@helicopter:
  00b2f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z@4JA
  00b35	83 c2 5f	 add	 edx, 95			; 0000005fH
  00b38	52		 push	 edx
  00b39	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b3e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00b43	50		 push	 eax
  00b44	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b49	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv497[ebp], 0
$LN80@helicopter:
  00b50	6a 49		 push	 73			; 00000049H
  00b52	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00b55	51		 push	 ecx
  00b56	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv489[ebp], 700
  00b5d	8b 45 88	 mov	 eax, DWORD PTR tv497[ebp]
  00b60	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00b67	ff d1		 call	 ecx
  00b69	d9 5d 84	 fstp	 DWORD PTR tv772[ebp]
  00b6c	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv772[ebp]
  00b71	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _pitch$[ebp]
  00b76	f3 0f 11 45 f8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 1417 : 	}
; 1418 : 
; 1419 : 	return pitch;

  00b7b	d9 45 f8	 fld	 DWORD PTR _pitch$[ebp]
$LN1@helicopter:

; 1420 : }

  00b7e	5f		 pop	 edi
  00b7f	5e		 pop	 esi
  00b80	5b		 pop	 ebx
  00b81	8b e5		 mov	 esp, ebp
  00b83	5d		 pop	 ebp
  00b84	c2 10 00	 ret	 16			; 00000010H
?helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z ENDP ; helicopter_movement_get_desired_pitch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z
_TEXT	SEGMENT
tv281 = -100						; size = 4
tv350 = -96						; size = 4
tv276 = -92						; size = 4
tv226 = -88						; size = 4
tv205 = -88						; size = 4
tv171 = -88						; size = 4
tv147 = -88						; size = 4
tv88 = -88						; size = 4
tv218 = -84						; size = 4
tv197 = -84						; size = 4
tv163 = -84						; size = 4
tv140 = -84						; size = 4
tv80 = -84						; size = 4
_heading$ = -16						; size = 4
_mv$ = -12						; size = 4
_leader$ = -8						; size = 4
_guide$ = -4						; size = 4
_en$ = 8						; size = 4
_fly_to_pos$ = 12					; size = 4
_current_heading$ = 16					; size = 4
?helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z PROC ; helicopter_movement_get_desired_heading, COMDAT

; 1253 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1254 : 	entity
; 1255 : 		*guide,
; 1256 : 		*leader;
; 1257 : 
; 1258 : 	vec3d
; 1259 : 		*mv;
; 1260 : 
; 1261 : 	float
; 1262 : 		heading;
; 1263 : 
; 1264 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@helicopter
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 1265 : 
; 1266 : 	ASSERT (fly_to_pos);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _fly_to_pos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@helicopter
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  00032	83 c0 0d	 add	 eax, 13			; 0000000dH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EAKEHFGL@fly_to_pos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@helicopter:

; 1267 : 
; 1268 : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  00045	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00049	74 0a		 je	 SHORT $LN14@helicopter
  0004b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	89 4d ac	 mov	 DWORD PTR tv80[ebp], ecx
  00053	eb 21		 jmp	 SHORT $LN15@helicopter
$LN14@helicopter:
  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  0005b	83 c2 0f	 add	 edx, 15			; 0000000fH
  0005e	52		 push	 edx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN15@helicopter:
  00076	b9 01 00 00 00	 mov	 ecx, 1
  0007b	85 c9		 test	 ecx, ecx
  0007d	74 09		 je	 SHORT $LN16@helicopter
  0007f	c7 45 a8 0d 00
	00 00		 mov	 DWORD PTR tv88[ebp], 13	; 0000000dH
  00086	eb 21		 jmp	 SHORT $LN17@helicopter
$LN16@helicopter:
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  0008e	83 c2 0f	 add	 edx, 15			; 0000000fH
  00091	52		 push	 edx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a2	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN17@helicopter:
  000a9	6a 0d		 push	 13			; 0000000dH
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ae	51		 push	 ecx
  000af	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000b6	8b 45 a8	 mov	 eax, DWORD PTR tv88[ebp]
  000b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c0	ff d1		 call	 ecx
  000c2	89 45 fc	 mov	 DWORD PTR _guide$[ebp], eax

; 1269 : 
; 1270 : 	ASSERT (guide);

  000c5	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000c9	75 18		 jne	 SHORT $LN4@helicopter
  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  000d0	83 c0 11	 add	 eax, 17			; 00000011H
  000d3	50		 push	 eax
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_05HLIEEKJG@guide@
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@helicopter:

; 1271 : 
; 1272 : 	if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_RADIUS))

  000e3	6a 00		 push	 0
  000e5	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  000ee	85 c0		 test	 eax, eax
  000f0	0f 84 7e 02 00
	00		 je	 $LN10@helicopter

; 1273 : 	{
; 1274 : 		if (get_local_entity_float_value (en, FLOAT_TYPE_DISTANCE) < (get_guide_criteria_value (guide, GUIDE_CRITERIA_RADIUS)))

  000f6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000fa	74 0a		 je	 SHORT $LN18@helicopter
  000fc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00101	89 4d ac	 mov	 DWORD PTR tv140[ebp], ecx
  00104	eb 1d		 jmp	 SHORT $LN19@helicopter
$LN18@helicopter:
  00106	68 fa 04 00 00	 push	 1274			; 000004faH
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00110	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00116	52		 push	 edx
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN19@helicopter:
  00123	b8 01 00 00 00	 mov	 eax, 1
  00128	85 c0		 test	 eax, eax
  0012a	74 09		 je	 SHORT $LN20@helicopter
  0012c	c7 45 a8 1f 00
	00 00		 mov	 DWORD PTR tv147[ebp], 31 ; 0000001fH
  00133	eb 1d		 jmp	 SHORT $LN21@helicopter
$LN20@helicopter:
  00135	68 fa 04 00 00	 push	 1274			; 000004faH
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00145	51		 push	 ecx
  00146	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN21@helicopter:
  00152	6a 1f		 push	 31			; 0000001fH
  00154	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00157	52		 push	 edx
  00158	69 45 ac bc 02
	00 00		 imul	 eax, DWORD PTR tv140[ebp], 700
  0015f	8b 4d a8	 mov	 ecx, DWORD PTR tv147[ebp]
  00162	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00169	ff d2		 call	 edx
  0016b	d9 5d a4	 fstp	 DWORD PTR tv276[ebp]
  0016e	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv276[ebp]
  00173	6a 00		 push	 0
  00175	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  00178	50		 push	 eax
  00179	f3 0f 11 45 a0	 movss	 DWORD PTR tv350[ebp], xmm0
  0017e	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  00183	d9 5d 9c	 fstp	 DWORD PTR tv281[ebp]
  00186	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv281[ebp]
  0018b	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR tv350[ebp]
  00190	0f 2f c1	 comiss	 xmm0, xmm1
  00193	0f 86 db 01 00
	00		 jbe	 $LN10@helicopter

; 1275 : 		{
; 1276 : 			mv = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  00199	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0019d	74 0a		 je	 SHORT $LN22@helicopter
  0019f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a4	89 4d ac	 mov	 DWORD PTR tv163[ebp], ecx
  001a7	eb 21		 jmp	 SHORT $LN23@helicopter
$LN22@helicopter:
  001a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  001af	83 c2 17	 add	 edx, 23			; 00000017H
  001b2	52		 push	 edx
  001b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN23@helicopter:
  001ca	b9 01 00 00 00	 mov	 ecx, 1
  001cf	85 c9		 test	 ecx, ecx
  001d1	74 09		 je	 SHORT $LN24@helicopter
  001d3	c7 45 a8 06 00
	00 00		 mov	 DWORD PTR tv171[ebp], 6
  001da	eb 21		 jmp	 SHORT $LN25@helicopter
$LN24@helicopter:
  001dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  001e2	83 c2 17	 add	 edx, 23			; 00000017H
  001e5	52		 push	 edx
  001e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f6	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN25@helicopter:
  001fd	6a 06		 push	 6
  001ff	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00202	51		 push	 ecx
  00203	6b 55 ac 60	 imul	 edx, DWORD PTR tv163[ebp], 96
  00207	8b 45 a8	 mov	 eax, DWORD PTR tv171[ebp]
  0020a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00211	ff d1		 call	 ecx
  00213	89 45 f4	 mov	 DWORD PTR _mv$[ebp], eax

; 1277 : 
; 1278 : 			if (((mv->x * mv->x) + (mv->z * mv->z)) < (5.0 * 5.0))

  00216	8b 45 f4	 mov	 eax, DWORD PTR _mv$[ebp]
  00219	8b 4d f4	 mov	 ecx, DWORD PTR _mv$[ebp]
  0021c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00220	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00224	8b 55 f4	 mov	 edx, DWORD PTR _mv$[ebp]
  00227	8b 45 f4	 mov	 eax, DWORD PTR _mv$[ebp]
  0022a	f3 0f 10 4a 08	 movss	 xmm1, DWORD PTR [edx+8]
  0022f	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00234	f3 0f 58 c1	 addss	 xmm0, xmm1
  00238	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0023c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4039000000000000
  00244	66 0f 2f c8	 comisd	 xmm1, xmm0
  00248	0f 86 26 01 00
	00		 jbe	 $LN10@helicopter

; 1279 : 			{
; 1280 : 				if (get_guide_required_heading (guide, en, &heading))

  0024e	8d 45 f0	 lea	 eax, DWORD PTR _heading$[ebp]
  00251	50		 push	 eax
  00252	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00255	51		 push	 ecx
  00256	8b 55 fc	 mov	 edx, DWORD PTR _guide$[ebp]
  00259	52		 push	 edx
  0025a	e8 00 00 00 00	 call	 ?get_guide_required_heading@@YGHPAUENTITY@@0PAM@Z ; get_guide_required_heading
  0025f	85 c0		 test	 eax, eax
  00261	74 0d		 je	 SHORT $LN8@helicopter

; 1281 : 				{
; 1282 : 					return heading;

  00263	d9 45 f0	 fld	 DWORD PTR _heading$[ebp]
  00266	e9 6f 01 00 00	 jmp	 $LN1@helicopter

; 1283 : 				}
; 1284 : 				else

  0026b	e9 04 01 00 00	 jmp	 $LN10@helicopter
$LN8@helicopter:

; 1285 : 				{
; 1286 : 					leader = (entity *) get_local_entity_ptr_value (guide, PTR_TYPE_TASK_LEADER);

  00270	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00274	74 0a		 je	 SHORT $LN26@helicopter
  00276	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	89 4d ac	 mov	 DWORD PTR tv197[ebp], ecx
  0027e	eb 21		 jmp	 SHORT $LN27@helicopter
$LN26@helicopter:
  00280	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  00286	83 c2 21	 add	 edx, 33			; 00000021H
  00289	52		 push	 edx
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00294	50		 push	 eax
  00295	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv197[ebp], 0
$LN27@helicopter:
  002a1	b9 01 00 00 00	 mov	 ecx, 1
  002a6	85 c9		 test	 ecx, ecx
  002a8	74 09		 je	 SHORT $LN28@helicopter
  002aa	c7 45 a8 0f 00
	00 00		 mov	 DWORD PTR tv205[ebp], 15 ; 0000000fH
  002b1	eb 21		 jmp	 SHORT $LN29@helicopter
$LN28@helicopter:
  002b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  002b9	83 c2 21	 add	 edx, 33			; 00000021H
  002bc	52		 push	 edx
  002bd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cd	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN29@helicopter:
  002d4	6a 0f		 push	 15			; 0000000fH
  002d6	8b 4d fc	 mov	 ecx, DWORD PTR _guide$[ebp]
  002d9	51		 push	 ecx
  002da	6b 55 ac 50	 imul	 edx, DWORD PTR tv197[ebp], 80
  002de	8b 45 a8	 mov	 eax, DWORD PTR tv205[ebp]
  002e1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  002e8	ff d1		 call	 ecx
  002ea	89 45 f8	 mov	 DWORD PTR _leader$[ebp], eax

; 1287 : 
; 1288 : 					if (leader != en)

  002ed	8b 45 f8	 mov	 eax, DWORD PTR _leader$[ebp]
  002f0	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  002f3	74 7f		 je	 SHORT $LN10@helicopter

; 1289 : 					{
; 1290 : 						return (get_local_entity_float_value (leader, FLOAT_TYPE_HEADING));

  002f5	83 7d f8 00	 cmp	 DWORD PTR _leader$[ebp], 0
  002f9	74 0a		 je	 SHORT $LN30@helicopter
  002fb	8b 45 f8	 mov	 eax, DWORD PTR _leader$[ebp]
  002fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00300	89 4d ac	 mov	 DWORD PTR tv218[ebp], ecx
  00303	eb 21		 jmp	 SHORT $LN31@helicopter
$LN30@helicopter:
  00305	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  0030b	83 c2 25	 add	 edx, 37			; 00000025H
  0030e	52		 push	 edx
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00319	50		 push	 eax
  0031a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv218[ebp], 0
$LN31@helicopter:
  00326	b9 01 00 00 00	 mov	 ecx, 1
  0032b	85 c9		 test	 ecx, ecx
  0032d	74 09		 je	 SHORT $LN32@helicopter
  0032f	c7 45 a8 34 00
	00 00		 mov	 DWORD PTR tv226[ebp], 52 ; 00000034H
  00336	eb 21		 jmp	 SHORT $LN33@helicopter
$LN32@helicopter:
  00338	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z@4JA
  0033e	83 c2 25	 add	 edx, 37			; 00000025H
  00341	52		 push	 edx
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00352	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv226[ebp], 0
$LN33@helicopter:
  00359	6a 34		 push	 52			; 00000034H
  0035b	8b 4d f8	 mov	 ecx, DWORD PTR _leader$[ebp]
  0035e	51		 push	 ecx
  0035f	69 55 ac bc 02
	00 00		 imul	 edx, DWORD PTR tv218[ebp], 700
  00366	8b 45 a8	 mov	 eax, DWORD PTR tv226[ebp]
  00369	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00370	ff d1		 call	 ecx
  00372	eb 66		 jmp	 SHORT $LN1@helicopter
$LN10@helicopter:

; 1291 : 					}
; 1292 : 				}
; 1293 : 			}
; 1294 : 		}
; 1295 : 	}
; 1296 : 
; 1297 : 	//
; 1298 : 	// Default case :- face the direction the helicopter is flying if more than 5m away,
; 1299 : 	// otherwise just face the way its facing already. Stops the jiggling when landing at wp's
; 1300 : 	//
; 1301 : 
; 1302 : 	if (((fly_to_pos->x * fly_to_pos->x) + (fly_to_pos->z * fly_to_pos->z)) < (5.0 * 5.0))

  00374	8b 45 0c	 mov	 eax, DWORD PTR _fly_to_pos$[ebp]
  00377	8b 4d 0c	 mov	 ecx, DWORD PTR _fly_to_pos$[ebp]
  0037a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0037e	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00382	8b 55 0c	 mov	 edx, DWORD PTR _fly_to_pos$[ebp]
  00385	8b 45 0c	 mov	 eax, DWORD PTR _fly_to_pos$[ebp]
  00388	f3 0f 10 4a 08	 movss	 xmm1, DWORD PTR [edx+8]
  0038d	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00392	f3 0f 58 c1	 addss	 xmm0, xmm1
  00396	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0039a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4039000000000000
  003a2	66 0f 2f c8	 comisd	 xmm1, xmm0
  003a6	76 0c		 jbe	 SHORT $LN11@helicopter

; 1303 : 	{
; 1304 : 
; 1305 : 		heading = current_heading;

  003a8	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _current_heading$[ebp]
  003ad	f3 0f 11 45 f0	 movss	 DWORD PTR _heading$[ebp], xmm0

; 1306 : 	}
; 1307 : 	else

  003b2	eb 23		 jmp	 SHORT $LN12@helicopter
$LN11@helicopter:

; 1308 : 	{
; 1309 : 
; 1310 : 		heading = atan2 (fly_to_pos->x, fly_to_pos->z);

  003b4	8b 45 0c	 mov	 eax, DWORD PTR _fly_to_pos$[ebp]
  003b7	51		 push	 ecx
  003b8	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c2	8b 4d 0c	 mov	 ecx, DWORD PTR _fly_to_pos$[ebp]
  003c5	51		 push	 ecx
  003c6	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  003ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cf	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  003d4	d9 5d f0	 fstp	 DWORD PTR _heading$[ebp]
$LN12@helicopter:

; 1311 : 	}
; 1312 : 
; 1313 : 	return heading;

  003d7	d9 45 f0	 fld	 DWORD PTR _heading$[ebp]
$LN1@helicopter:

; 1314 : }

  003da	5f		 pop	 edi
  003db	5e		 pop	 esi
  003dc	5b		 pop	 ebx
  003dd	8b e5		 mov	 esp, ebp
  003df	5d		 pop	 ebp
  003e0	c2 0c 00	 ret	 12			; 0000000cH
?helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z ENDP ; helicopter_movement_get_desired_heading
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z
_TEXT	SEGMENT
tv1158 = -152						; size = 4
tv1130 = -152						; size = 4
tv772 = -148						; size = 4
tv747 = -148						; size = 4
tv726 = -148						; size = 4
tv704 = -148						; size = 4
tv607 = -148						; size = 4
tv587 = -148						; size = 4
tv525 = -148						; size = 4
tv505 = -148						; size = 4
tv481 = -148						; size = 4
tv456 = -148						; size = 4
tv436 = -148						; size = 4
tv415 = -148						; size = 4
tv385 = -148						; size = 4
tv364 = -148						; size = 4
tv341 = -148						; size = 4
tv321 = -148						; size = 4
tv300 = -148						; size = 4
tv266 = -148						; size = 4
tv244 = -148						; size = 4
tv225 = -148						; size = 4
tv206 = -148						; size = 4
tv187 = -148						; size = 4
tv165 = -148						; size = 4
tv140 = -148						; size = 4
tv83 = -148						; size = 4
tv764 = -144						; size = 4
tv739 = -144						; size = 4
tv718 = -144						; size = 4
tv696 = -144						; size = 4
tv599 = -144						; size = 4
tv579 = -144						; size = 4
tv517 = -144						; size = 4
tv497 = -144						; size = 4
tv473 = -144						; size = 4
tv448 = -144						; size = 4
tv428 = -144						; size = 4
tv408 = -144						; size = 4
tv377 = -144						; size = 4
tv357 = -144						; size = 4
tv333 = -144						; size = 4
tv313 = -144						; size = 4
tv293 = -144						; size = 4
tv258 = -144						; size = 4
tv237 = -144						; size = 4
tv218 = -144						; size = 4
tv199 = -144						; size = 4
tv180 = -144						; size = 4
tv157 = -144						; size = 4
tv132 = -144						; size = 4
tv75 = -144						; size = 4
_leader_formation_index$1 = -76				; size = 4
_formation_index$2 = -72				; size = 4
_formation_count$3 = -68				; size = 4
_type$4 = -64						; size = 4
_formation$5 = -60					; size = 4
_leader_pos$6 = -56					; size = 4
_xv$7 = -52						; size = 12
_task_leader$8 = -40					; size = 4
_offset$9 = -36						; size = 12
_hold_position$ = -24					; size = 4
_pos$ = -20						; size = 4
_distance$ = -16					; size = 4
_guide$ = -12						; size = 4
_group$ = -8						; size = 4
_wp$ = -4						; size = 4
_en$ = 8						; size = 4
_wp_pos$ = 12						; size = 4
_wp_vel$ = 16						; size = 4
?helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z PROC ; helicopter_movement_get_waypoint_position_and_velocity, COMDAT

; 987  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 988  : 	entity
; 989  : 		*wp,
; 990  : 		*group,
; 991  : 		*guide;
; 992  : 
; 993  : 	float
; 994  : 		distance;
; 995  : 
; 996  : 	vec3d
; 997  : 		*pos;
; 998  : 
; 999  : 	int
; 1000 : 		hold_position;
; 1001 : 
; 1002 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@helicopter
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00017	83 c0 0f	 add	 eax, 15			; 0000000fH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 1003 : 
; 1004 : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN23@helicopter
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00043	83 c2 11	 add	 edx, 17			; 00000011H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN24@helicopter:
  00061	b9 01 00 00 00	 mov	 ecx, 1
  00066	85 c9		 test	 ecx, ecx
  00068	74 0c		 je	 SHORT $LN25@helicopter
  0006a	c7 85 6c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv83[ebp], 8
  00074	eb 24		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  0007c	83 c2 11	 add	 edx, 17			; 00000011H
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN26@helicopter:
  0009a	6a 08		 push	 8
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0009f	51		 push	 ecx
  000a0	6b 95 70 ff ff
	ff 60		 imul	 edx, DWORD PTR tv75[ebp], 96
  000a7	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000b4	ff d1		 call	 ecx
  000b6	89 45 ec	 mov	 DWORD PTR _pos$[ebp], eax

; 1005 : 
; 1006 : 	ASSERT (wp_pos);

  000b9	83 7d 0c 00	 cmp	 DWORD PTR _wp_pos$[ebp], 0
  000bd	75 18		 jne	 SHORT $LN3@helicopter
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  000c4	83 c0 13	 add	 eax, 19			; 00000013H
  000c7	50		 push	 eax
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_06NGJLJNEL@wp_pos@
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@helicopter:

; 1007 : 
; 1008 : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  000d7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000db	74 0d		 je	 SHORT $LN27@helicopter
  000dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e2	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  000e8	eb 24		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  000f0	83 c2 15	 add	 edx, 21			; 00000015H
  000f3	52		 push	 edx
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN28@helicopter:
  0010e	b9 01 00 00 00	 mov	 ecx, 1
  00113	85 c9		 test	 ecx, ecx
  00115	74 0c		 je	 SHORT $LN29@helicopter
  00117	c7 85 6c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv140[ebp], 25 ; 00000019H
  00121	eb 24		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  00123	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00129	83 c2 15	 add	 edx, 21			; 00000015H
  0012c	52		 push	 edx
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013d	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN30@helicopter:
  00147	6a 19		 push	 25			; 00000019H
  00149	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0014c	51		 push	 ecx
  0014d	69 95 70 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv132[ebp], 180
  00157	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv140[ebp]
  0015d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00164	ff d1		 call	 ecx
  00166	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 1009 : 
; 1010 : 	ASSERT (group);

  00169	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0016d	75 18		 jne	 SHORT $LN4@helicopter
  0016f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00174	83 c0 17	 add	 eax, 23			; 00000017H
  00177	50		 push	 eax
  00178	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  00182	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@helicopter:

; 1011 : 
; 1012 : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  00187	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0018b	74 0d		 je	 SHORT $LN31@helicopter
  0018d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00190	8b 08		 mov	 ecx, DWORD PTR [eax]
  00192	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv157[ebp], ecx
  00198	eb 24		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  0019a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  001a0	83 c2 19	 add	 edx, 25			; 00000019H
  001a3	52		 push	 edx
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b4	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv157[ebp], 0
$LN32@helicopter:
  001be	b9 01 00 00 00	 mov	 ecx, 1
  001c3	85 c9		 test	 ecx, ecx
  001c5	74 0c		 je	 SHORT $LN33@helicopter
  001c7	c7 85 6c ff ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv165[ebp], 13 ; 0000000dH
  001d1	eb 24		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  001d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  001d9	83 c2 19	 add	 edx, 25			; 00000019H
  001dc	52		 push	 edx
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001e7	50		 push	 eax
  001e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ed	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv165[ebp], 0
$LN34@helicopter:
  001f7	6a 0d		 push	 13			; 0000000dH
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001fc	51		 push	 ecx
  001fd	69 95 70 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv157[ebp], 180
  00207	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv165[ebp]
  0020d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00214	ff d1		 call	 ecx
  00216	89 45 f4	 mov	 DWORD PTR _guide$[ebp], eax

; 1013 : 
; 1014 : 	//ASSERT (guide);
; 1015 : 
; 1016 : 	wp_vel->x = 0.0;

  00219	8b 45 10	 mov	 eax, DWORD PTR _wp_vel$[ebp]
  0021c	0f 57 c0	 xorps	 xmm0, xmm0
  0021f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1017 : 	wp_vel->y = 0.0;

  00223	8b 45 10	 mov	 eax, DWORD PTR _wp_vel$[ebp]
  00226	0f 57 c0	 xorps	 xmm0, xmm0
  00229	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1018 : 	wp_vel->z = 0.0;

  0022e	8b 45 10	 mov	 eax, DWORD PTR _wp_vel$[ebp]
  00231	0f 57 c0	 xorps	 xmm0, xmm0
  00234	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1019 : 
; 1020 : 	if (!guide)

  00239	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0023d	75 05		 jne	 SHORT $LN5@helicopter

; 1021 : 	{
; 1022 : 		return;

  0023f	e9 f3 0f 00 00	 jmp	 $LN1@helicopter
$LN5@helicopter:

; 1023 : 	}
; 1024 : 
; 1025 : 	//
; 1026 : 	// Check for position hold
; 1027 : 	//
; 1028 : 
; 1029 : 	hold_position = FALSE;

  00244	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hold_position$[ebp], 0

; 1030 : 
; 1031 : 	if ((get_local_entity_int_value (en, INT_TYPE_POSITION_HOLD)) && (!get_local_entity_int_value (en, INT_TYPE_TASK_LEADER)))

  0024b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0024f	74 0d		 je	 SHORT $LN35@helicopter
  00251	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00254	8b 08		 mov	 ecx, DWORD PTR [eax]
  00256	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv180[ebp], ecx
  0025c	eb 20		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  0025e	68 07 04 00 00	 push	 1031			; 00000407H
  00263	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00268	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00274	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN36@helicopter:
  0027e	b8 01 00 00 00	 mov	 eax, 1
  00283	85 c0		 test	 eax, eax
  00285	74 0c		 je	 SHORT $LN37@helicopter
  00287	c7 85 6c ff ff
	ff a0 00 00 00	 mov	 DWORD PTR tv187[ebp], 160 ; 000000a0H
  00291	eb 20		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  00293	68 07 04 00 00	 push	 1031			; 00000407H
  00298	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002a3	51		 push	 ecx
  002a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a9	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv187[ebp], 0
$LN38@helicopter:
  002b3	68 a0 00 00 00	 push	 160			; 000000a0H
  002b8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002bb	52		 push	 edx
  002bc	69 85 70 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv180[ebp], 1116
  002c6	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv187[ebp]
  002cc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002d3	ff d2		 call	 edx
  002d5	85 c0		 test	 eax, eax
  002d7	0f 84 bd 01 00
	00		 je	 $LN7@helicopter
  002dd	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002e1	74 0d		 je	 SHORT $LN39@helicopter
  002e3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e8	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv199[ebp], ecx
  002ee	eb 20		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  002f0	68 07 04 00 00	 push	 1031			; 00000407H
  002f5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00300	52		 push	 edx
  00301	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00306	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv199[ebp], 0
$LN40@helicopter:
  00310	b8 01 00 00 00	 mov	 eax, 1
  00315	85 c0		 test	 eax, eax
  00317	74 0c		 je	 SHORT $LN41@helicopter
  00319	c7 85 6c ff ff
	ff dd 00 00 00	 mov	 DWORD PTR tv206[ebp], 221 ; 000000ddH
  00323	eb 20		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  00325	68 07 04 00 00	 push	 1031			; 00000407H
  0032a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0032f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00335	51		 push	 ecx
  00336	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033b	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
$LN42@helicopter:
  00345	68 dd 00 00 00	 push	 221			; 000000ddH
  0034a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0034d	52		 push	 edx
  0034e	69 85 70 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv199[ebp], 1116
  00358	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv206[ebp]
  0035e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00365	ff d2		 call	 edx
  00367	85 c0		 test	 eax, eax
  00369	0f 85 2b 01 00
	00		 jne	 $LN7@helicopter

; 1032 : 	{
; 1033 : 		//
; 1034 : 		// Hold position if flag is set, and entity is not the task leader (to stop group leader, or entities taking off / landing / attacking from holding)
; 1035 : 		//
; 1036 : 
; 1037 : 		hold_position = TRUE;

  0036f	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _hold_position$[ebp], 1

; 1038 : 
; 1039 : 		if ((get_local_entity_parent (en, LIST_TYPE_TARGET)) && (!get_local_entity_int_value (en, INT_TYPE_WEAPONS_HOLD)))

  00376	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0037a	74 0d		 je	 SHORT $LN43@helicopter
  0037c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0037f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00381	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv218[ebp], ecx
  00387	eb 20		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  00389	68 0f 04 00 00	 push	 1039			; 0000040fH
  0038e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00393	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00399	52		 push	 edx
  0039a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039f	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv218[ebp], 0
$LN44@helicopter:
  003a9	b8 01 00 00 00	 mov	 eax, 1
  003ae	85 c0		 test	 eax, eax
  003b0	74 0c		 je	 SHORT $LN45@helicopter
  003b2	c7 85 6c ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv225[ebp], 38 ; 00000026H
  003bc	eb 20		 jmp	 SHORT $LN46@helicopter
$LN45@helicopter:
  003be	68 0f 04 00 00	 push	 1039			; 0000040fH
  003c3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003ce	51		 push	 ecx
  003cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d4	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv225[ebp], 0
$LN46@helicopter:
  003de	6a 26		 push	 38			; 00000026H
  003e0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  003e3	52		 push	 edx
  003e4	69 85 70 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv218[ebp], 180
  003ee	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv225[ebp]
  003f4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  003fb	ff d2		 call	 edx
  003fd	85 c0		 test	 eax, eax
  003ff	0f 84 95 00 00
	00		 je	 $LN7@helicopter
  00405	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00409	74 0d		 je	 SHORT $LN47@helicopter
  0040b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0040e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00410	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv237[ebp], ecx
  00416	eb 20		 jmp	 SHORT $LN48@helicopter
$LN47@helicopter:
  00418	68 0f 04 00 00	 push	 1039			; 0000040fH
  0041d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00422	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00428	52		 push	 edx
  00429	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042e	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN48@helicopter:
  00438	b8 01 00 00 00	 mov	 eax, 1
  0043d	85 c0		 test	 eax, eax
  0043f	74 0c		 je	 SHORT $LN49@helicopter
  00441	c7 85 6c ff ff
	ff 11 01 00 00	 mov	 DWORD PTR tv244[ebp], 273 ; 00000111H
  0044b	eb 20		 jmp	 SHORT $LN50@helicopter
$LN49@helicopter:
  0044d	68 0f 04 00 00	 push	 1039			; 0000040fH
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00457	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0045d	51		 push	 ecx
  0045e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00463	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv244[ebp], 0
$LN50@helicopter:
  0046d	68 11 01 00 00	 push	 273			; 00000111H
  00472	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00475	52		 push	 edx
  00476	69 85 70 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv237[ebp], 1116
  00480	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv244[ebp]
  00486	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0048d	ff d2		 call	 edx
  0048f	85 c0		 test	 eax, eax
  00491	75 07		 jne	 SHORT $LN7@helicopter

; 1040 : 		{
; 1041 : 			//
; 1042 : 			// ...Unless entity has a target and is in 'weapons free' mode...
; 1043 : 			//
; 1044 : 
; 1045 : 			hold_position = FALSE;

  00493	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hold_position$[ebp], 0
$LN7@helicopter:

; 1046 : 		}
; 1047 : 	}
; 1048 : 
; 1049 : 	if (hold_position)

  0049a	83 7d e8 00	 cmp	 DWORD PTR _hold_position$[ebp], 0
  0049e	0f 84 11 01 00
	00		 je	 $LN8@helicopter

; 1050 : 	{
; 1051 : 		//
; 1052 : 		// Hold Position
; 1053 : 		//
; 1054 : 
; 1055 : 		get_local_entity_vec3d (en, VEC3D_TYPE_WAIT_POSITION, wp_pos);

  004a4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004a8	74 0d		 je	 SHORT $LN51@helicopter
  004aa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  004af	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv258[ebp], ecx
  004b5	eb 24		 jmp	 SHORT $LN52@helicopter
$LN51@helicopter:
  004b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  004bd	83 c2 44	 add	 edx, 68			; 00000044H
  004c0	52		 push	 edx
  004c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004cb	50		 push	 eax
  004cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d1	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], 0
$LN52@helicopter:
  004db	b9 01 00 00 00	 mov	 ecx, 1
  004e0	85 c9		 test	 ecx, ecx
  004e2	74 0c		 je	 SHORT $LN53@helicopter
  004e4	c7 85 6c ff ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv266[ebp], 12 ; 0000000cH
  004ee	eb 24		 jmp	 SHORT $LN54@helicopter
$LN53@helicopter:
  004f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  004f6	83 c2 44	 add	 edx, 68			; 00000044H
  004f9	52		 push	 edx
  004fa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00504	50		 push	 eax
  00505	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0050a	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv266[ebp], 0
$LN54@helicopter:
  00514	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00517	51		 push	 ecx
  00518	6a 0c		 push	 12			; 0000000cH
  0051a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0051d	52		 push	 edx
  0051e	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv258[ebp], 96
  00525	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv266[ebp]
  0052b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00532	ff d2		 call	 edx

; 1056 : 
; 1057 : 		ASSERT (point_inside_map_volume (wp_pos));

  00534	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00537	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0053b	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00542	72 54		 jb	 SHORT $LN11@helicopter
  00544	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00547	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0054f	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00552	72 44		 jb	 SHORT $LN11@helicopter
  00554	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00557	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0055c	0f 2f 05 28 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  00563	72 33		 jb	 SHORT $LN11@helicopter
  00565	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00568	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  00570	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  00574	72 22		 jb	 SHORT $LN11@helicopter
  00576	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00579	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0057e	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00585	72 11		 jb	 SHORT $LN11@helicopter
  00587	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  0058a	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00592	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00596	73 18		 jae	 SHORT $LN10@helicopter
$LN11@helicopter:
  00598	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  0059d	83 c0 46	 add	 eax, 70			; 00000046H
  005a0	50		 push	 eax
  005a1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005a6	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GAEGELEL@point_inside_map_volume?5?$CIwp_pos@
  005ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@helicopter:

; 1058 : 	}
; 1059 : 	else

  005b0	e9 1f 0b 00 00	 jmp	 $LN18@helicopter
$LN8@helicopter:

; 1060 : 	{
; 1061 : 		//
; 1062 : 		// Normal Operation
; 1063 : 		//
; 1064 : 
; 1065 : 		if (!get_local_entity_int_value (guide, INT_TYPE_FOLLOW_FORMATION))

  005b5	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  005b9	74 0d		 je	 SHORT $LN55@helicopter
  005bb	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  005be	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c0	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv293[ebp], ecx
  005c6	eb 20		 jmp	 SHORT $LN56@helicopter
$LN55@helicopter:
  005c8	68 29 04 00 00	 push	 1065			; 00000429H
  005cd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005d8	52		 push	 edx
  005d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005de	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv293[ebp], 0
$LN56@helicopter:
  005e8	b8 01 00 00 00	 mov	 eax, 1
  005ed	85 c0		 test	 eax, eax
  005ef	74 0c		 je	 SHORT $LN57@helicopter
  005f1	c7 85 6c ff ff
	ff 39 00 00 00	 mov	 DWORD PTR tv300[ebp], 57 ; 00000039H
  005fb	eb 20		 jmp	 SHORT $LN58@helicopter
$LN57@helicopter:
  005fd	68 29 04 00 00	 push	 1065			; 00000429H
  00602	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00607	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0060d	51		 push	 ecx
  0060e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00613	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv300[ebp], 0
$LN58@helicopter:
  0061d	6a 39		 push	 57			; 00000039H
  0061f	8b 55 f4	 mov	 edx, DWORD PTR _guide$[ebp]
  00622	52		 push	 edx
  00623	69 85 70 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv293[ebp], 1116
  0062d	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv300[ebp]
  00633	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0063a	ff d2		 call	 edx
  0063c	85 c0		 test	 eax, eax
  0063e	0f 85 95 00 00
	00		 jne	 $LN12@helicopter

; 1066 : 		{
; 1067 : 			//
; 1068 : 			// Head directly for the guide position
; 1069 : 			//
; 1070 : 
; 1071 : 			get_local_entity_vec3d (guide, VEC3D_TYPE_GUIDE_POSITION, wp_pos);

  00644	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00648	74 0d		 je	 SHORT $LN59@helicopter
  0064a	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  0064d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0064f	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv313[ebp], ecx
  00655	eb 24		 jmp	 SHORT $LN60@helicopter
$LN59@helicopter:
  00657	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  0065d	83 c2 54	 add	 edx, 84			; 00000054H
  00660	52		 push	 edx
  00661	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00666	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0066b	50		 push	 eax
  0066c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00671	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv313[ebp], 0
$LN60@helicopter:
  0067b	b9 01 00 00 00	 mov	 ecx, 1
  00680	85 c9		 test	 ecx, ecx
  00682	74 0c		 je	 SHORT $LN61@helicopter
  00684	c7 85 6c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv321[ebp], 4
  0068e	eb 24		 jmp	 SHORT $LN62@helicopter
$LN61@helicopter:
  00690	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00696	83 c2 54	 add	 edx, 84			; 00000054H
  00699	52		 push	 edx
  0069a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0069f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  006a4	50		 push	 eax
  006a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006aa	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv321[ebp], 0
$LN62@helicopter:
  006b4	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  006b7	51		 push	 ecx
  006b8	6a 04		 push	 4
  006ba	8b 55 f4	 mov	 edx, DWORD PTR _guide$[ebp]
  006bd	52		 push	 edx
  006be	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv313[ebp], 96
  006c5	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv321[ebp]
  006cb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  006d2	ff d2		 call	 edx

; 1072 : 		}
; 1073 : 		else

  006d4	e9 fb 09 00 00	 jmp	 $LN18@helicopter
$LN12@helicopter:

; 1074 : 		{
; 1075 : 			//
; 1076 : 			// Fly in formation
; 1077 : 			//
; 1078 : 
; 1079 : 			wp = get_local_entity_parent (guide, LIST_TYPE_CURRENT_WAYPOINT);

  006d9	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  006dd	74 0d		 je	 SHORT $LN63@helicopter
  006df	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  006e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  006e4	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv333[ebp], ecx
  006ea	eb 24		 jmp	 SHORT $LN64@helicopter
$LN63@helicopter:
  006ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  006f2	83 c2 5c	 add	 edx, 92			; 0000005cH
  006f5	52		 push	 edx
  006f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  006fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00700	50		 push	 eax
  00701	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00706	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv333[ebp], 0
$LN64@helicopter:
  00710	b9 01 00 00 00	 mov	 ecx, 1
  00715	85 c9		 test	 ecx, ecx
  00717	74 0c		 je	 SHORT $LN65@helicopter
  00719	c7 85 6c ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv341[ebp], 9
  00723	eb 24		 jmp	 SHORT $LN66@helicopter
$LN65@helicopter:
  00725	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  0072b	83 c2 5c	 add	 edx, 92			; 0000005cH
  0072e	52		 push	 edx
  0072f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00734	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00739	50		 push	 eax
  0073a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073f	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv341[ebp], 0
$LN66@helicopter:
  00749	6a 09		 push	 9
  0074b	8b 4d f4	 mov	 ecx, DWORD PTR _guide$[ebp]
  0074e	51		 push	 ecx
  0074f	69 95 70 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv333[ebp], 180
  00759	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv341[ebp]
  0075f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00766	ff d1		 call	 ecx
  00768	89 45 fc	 mov	 DWORD PTR _wp$[ebp], eax

; 1080 : 
; 1081 : 			ASSERT (wp);

  0076b	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0076f	75 18		 jne	 SHORT $LN14@helicopter
  00771	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00776	83 c0 5e	 add	 eax, 94			; 0000005eH
  00779	50		 push	 eax
  0077a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0077f	68 00 00 00 00	 push	 OFFSET ??_C@_02HODPCBMO@wp@
  00784	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@helicopter:

; 1082 : 
; 1083 : 			//
; 1084 : 			// Should aircraft follow leader, or follow guide in set waypoint formation?
; 1085 : 			//
; 1086 : 
; 1087 : 			if (get_local_entity_int_value (wp, INT_TYPE_MOBILE_FOLLOW_WAYPOINT_OFFSET))

  00789	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0078d	74 0d		 je	 SHORT $LN67@helicopter
  0078f	8b 45 fc	 mov	 eax, DWORD PTR _wp$[ebp]
  00792	8b 08		 mov	 ecx, DWORD PTR [eax]
  00794	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv357[ebp], ecx
  0079a	eb 20		 jmp	 SHORT $LN68@helicopter
$LN67@helicopter:
  0079c	68 3f 04 00 00	 push	 1087			; 0000043fH
  007a1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ac	52		 push	 edx
  007ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007b2	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv357[ebp], 0
$LN68@helicopter:
  007bc	b8 01 00 00 00	 mov	 eax, 1
  007c1	85 c0		 test	 eax, eax
  007c3	74 0c		 je	 SHORT $LN69@helicopter
  007c5	c7 85 6c ff ff
	ff 8d 00 00 00	 mov	 DWORD PTR tv364[ebp], 141 ; 0000008dH
  007cf	eb 20		 jmp	 SHORT $LN70@helicopter
$LN69@helicopter:
  007d1	68 3f 04 00 00	 push	 1087			; 0000043fH
  007d6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  007db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007e1	51		 push	 ecx
  007e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv364[ebp], 0
$LN70@helicopter:
  007f1	68 8d 00 00 00	 push	 141			; 0000008dH
  007f6	8b 55 fc	 mov	 edx, DWORD PTR _wp$[ebp]
  007f9	52		 push	 edx
  007fa	69 85 70 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv357[ebp], 1116
  00804	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv364[ebp]
  0080a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00811	ff d2		 call	 edx
  00813	85 c0		 test	 eax, eax
  00815	0f 84 e3 00 00
	00		 je	 $LN15@helicopter

; 1088 : 			{
; 1089 : 				vec3d
; 1090 : 					offset;
; 1091 : 
; 1092 : 				get_local_entity_vec3d (guide, VEC3D_TYPE_GUIDE_POSITION, wp_pos);

  0081b	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0081f	74 0d		 je	 SHORT $LN71@helicopter
  00821	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  00824	8b 08		 mov	 ecx, DWORD PTR [eax]
  00826	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv377[ebp], ecx
  0082c	eb 24		 jmp	 SHORT $LN72@helicopter
$LN71@helicopter:
  0082e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00834	83 c2 69	 add	 edx, 105		; 00000069H
  00837	52		 push	 edx
  00838	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0083d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00842	50		 push	 eax
  00843	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00848	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv377[ebp], 0
$LN72@helicopter:
  00852	b9 01 00 00 00	 mov	 ecx, 1
  00857	85 c9		 test	 ecx, ecx
  00859	74 0c		 je	 SHORT $LN73@helicopter
  0085b	c7 85 6c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv385[ebp], 4
  00865	eb 24		 jmp	 SHORT $LN74@helicopter
$LN73@helicopter:
  00867	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  0086d	83 c2 69	 add	 edx, 105		; 00000069H
  00870	52		 push	 edx
  00871	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00876	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0087b	50		 push	 eax
  0087c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00881	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv385[ebp], 0
$LN74@helicopter:
  0088b	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  0088e	51		 push	 ecx
  0088f	6a 04		 push	 4
  00891	8b 55 f4	 mov	 edx, DWORD PTR _guide$[ebp]
  00894	52		 push	 edx
  00895	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv377[ebp], 96
  0089c	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv385[ebp]
  008a2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  008a9	ff d2		 call	 edx

; 1093 : 
; 1094 : 				get_local_entity_formation_position_offset (en, wp, &offset);

  008ab	8d 45 dc	 lea	 eax, DWORD PTR _offset$9[ebp]
  008ae	50		 push	 eax
  008af	8b 4d fc	 mov	 ecx, DWORD PTR _wp$[ebp]
  008b2	51		 push	 ecx
  008b3	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  008b6	52		 push	 edx
  008b7	e8 00 00 00 00	 call	 ?get_local_entity_formation_position_offset@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_local_entity_formation_position_offset

; 1095 : 
; 1096 : 				wp_pos->x += offset.x;

  008bc	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  008bf	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008c3	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _offset$9[ebp]
  008c8	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  008cb	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1097 : 				wp_pos->y += offset.y;

  008cf	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  008d2	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  008d7	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _offset$9[ebp+4]
  008dc	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  008df	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1098 : 				wp_pos->z += offset.z;

  008e4	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  008e7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  008ec	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _offset$9[ebp+8]
  008f1	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  008f4	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1099 : 			}
; 1100 : 			else

  008f9	e9 d6 07 00 00	 jmp	 $LN18@helicopter
$LN15@helicopter:

; 1101 : 			{
; 1102 : 				//
; 1103 : 				// Task leader follows guide,.... other members follow task leader
; 1104 : 				//
; 1105 : 
; 1106 : 				if (get_local_entity_int_value (en, INT_TYPE_TASK_LEADER))

  008fe	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00902	74 0d		 je	 SHORT $LN75@helicopter
  00904	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00907	8b 08		 mov	 ecx, DWORD PTR [eax]
  00909	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv408[ebp], ecx
  0090f	eb 20		 jmp	 SHORT $LN76@helicopter
$LN75@helicopter:
  00911	68 52 04 00 00	 push	 1106			; 00000452H
  00916	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0091b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00921	52		 push	 edx
  00922	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00927	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv408[ebp], 0
$LN76@helicopter:
  00931	b8 01 00 00 00	 mov	 eax, 1
  00936	85 c0		 test	 eax, eax
  00938	74 0c		 je	 SHORT $LN77@helicopter
  0093a	c7 85 6c ff ff
	ff dd 00 00 00	 mov	 DWORD PTR tv415[ebp], 221 ; 000000ddH
  00944	eb 20		 jmp	 SHORT $LN78@helicopter
$LN77@helicopter:
  00946	68 52 04 00 00	 push	 1106			; 00000452H
  0094b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00950	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00956	51		 push	 ecx
  00957	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0095c	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv415[ebp], 0
$LN78@helicopter:
  00966	68 dd 00 00 00	 push	 221			; 000000ddH
  0096b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0096e	52		 push	 edx
  0096f	69 85 70 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv408[ebp], 1116
  00979	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv415[ebp]
  0097f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00986	ff d2		 call	 edx
  00988	85 c0		 test	 eax, eax
  0098a	0f 84 95 00 00
	00		 je	 $LN17@helicopter

; 1107 : 				{
; 1108 : 					get_local_entity_vec3d (guide, VEC3D_TYPE_GUIDE_POSITION, wp_pos);

  00990	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00994	74 0d		 je	 SHORT $LN79@helicopter
  00996	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  00999	8b 08		 mov	 ecx, DWORD PTR [eax]
  0099b	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv428[ebp], ecx
  009a1	eb 24		 jmp	 SHORT $LN80@helicopter
$LN79@helicopter:
  009a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  009a9	83 c2 79	 add	 edx, 121		; 00000079H
  009ac	52		 push	 edx
  009ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  009b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009b7	50		 push	 eax
  009b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009bd	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv428[ebp], 0
$LN80@helicopter:
  009c7	b9 01 00 00 00	 mov	 ecx, 1
  009cc	85 c9		 test	 ecx, ecx
  009ce	74 0c		 je	 SHORT $LN81@helicopter
  009d0	c7 85 6c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv436[ebp], 4
  009da	eb 24		 jmp	 SHORT $LN82@helicopter
$LN81@helicopter:
  009dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  009e2	83 c2 79	 add	 edx, 121		; 00000079H
  009e5	52		 push	 edx
  009e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  009eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  009f0	50		 push	 eax
  009f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f6	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv436[ebp], 0
$LN82@helicopter:
  00a00	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00a03	51		 push	 ecx
  00a04	6a 04		 push	 4
  00a06	8b 55 f4	 mov	 edx, DWORD PTR _guide$[ebp]
  00a09	52		 push	 edx
  00a0a	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv428[ebp], 96
  00a11	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv436[ebp]
  00a17	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00a1e	ff d2		 call	 edx

; 1109 : 				}
; 1110 : 				else

  00a20	e9 af 06 00 00	 jmp	 $LN18@helicopter
$LN17@helicopter:

; 1111 : 				{
; 1112 : 					//
; 1113 : 					// set wp pos to offset from flight leader
; 1114 : 					//
; 1115 : 
; 1116 : 					entity
; 1117 : 						*task_leader;
; 1118 : 
; 1119 : 					vec3d
; 1120 : 						xv,
; 1121 : 						*leader_pos;
; 1122 : 
; 1123 : 					formation_type
; 1124 : 						*formation;
; 1125 : 
; 1126 : 					int
; 1127 : 						type,
; 1128 : 						formation_count,
; 1129 : 						formation_index,
; 1130 : 						leader_formation_index;
; 1131 : 
; 1132 : 					//
; 1133 : 					// find flight leader
; 1134 : 					//
; 1135 : 
; 1136 : 					task_leader = (entity *) get_local_entity_ptr_value (guide, PTR_TYPE_TASK_LEADER);

  00a25	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00a29	74 0d		 je	 SHORT $LN83@helicopter
  00a2b	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  00a2e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a30	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv448[ebp], ecx
  00a36	eb 27		 jmp	 SHORT $LN84@helicopter
$LN83@helicopter:
  00a38	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00a3e	81 c2 95 00 00
	00		 add	 edx, 149		; 00000095H
  00a44	52		 push	 edx
  00a45	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a4f	50		 push	 eax
  00a50	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a55	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv448[ebp], 0
$LN84@helicopter:
  00a5f	b9 01 00 00 00	 mov	 ecx, 1
  00a64	85 c9		 test	 ecx, ecx
  00a66	74 0c		 je	 SHORT $LN85@helicopter
  00a68	c7 85 6c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv456[ebp], 15 ; 0000000fH
  00a72	eb 27		 jmp	 SHORT $LN86@helicopter
$LN85@helicopter:
  00a74	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00a7a	81 c2 95 00 00
	00		 add	 edx, 149		; 00000095H
  00a80	52		 push	 edx
  00a81	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00a8b	50		 push	 eax
  00a8c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a91	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv456[ebp], 0
$LN86@helicopter:
  00a9b	6a 0f		 push	 15			; 0000000fH
  00a9d	8b 4d f4	 mov	 ecx, DWORD PTR _guide$[ebp]
  00aa0	51		 push	 ecx
  00aa1	6b 95 70 ff ff
	ff 50		 imul	 edx, DWORD PTR tv448[ebp], 80
  00aa8	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv456[ebp]
  00aae	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00ab5	ff d1		 call	 ecx
  00ab7	89 45 d8	 mov	 DWORD PTR _task_leader$8[ebp], eax

; 1137 : 
; 1138 : 					ASSERT (task_leader);

  00aba	83 7d d8 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  00abe	75 1a		 jne	 SHORT $LN19@helicopter
  00ac0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00ac5	05 97 00 00 00	 add	 eax, 151		; 00000097H
  00aca	50		 push	 eax
  00acb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ad0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CKFOJOAF@task_leader@
  00ad5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@helicopter:

; 1139 : 
; 1140 : 					//
; 1141 : 					// get formation
; 1142 : 					//
; 1143 : 
; 1144 : 					type = get_local_entity_int_value (group, INT_TYPE_GROUP_FORMATION);

  00ada	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00ade	74 0d		 je	 SHORT $LN87@helicopter
  00ae0	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00ae3	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ae5	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv473[ebp], ecx
  00aeb	eb 27		 jmp	 SHORT $LN88@helicopter
$LN87@helicopter:
  00aed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00af3	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00af9	52		 push	 edx
  00afa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b04	50		 push	 eax
  00b05	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b0a	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv473[ebp], 0
$LN88@helicopter:
  00b14	b9 01 00 00 00	 mov	 ecx, 1
  00b19	85 c9		 test	 ecx, ecx
  00b1b	74 0c		 je	 SHORT $LN89@helicopter
  00b1d	c7 85 6c ff ff
	ff 47 00 00 00	 mov	 DWORD PTR tv481[ebp], 71 ; 00000047H
  00b27	eb 27		 jmp	 SHORT $LN90@helicopter
$LN89@helicopter:
  00b29	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00b2f	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00b35	52		 push	 edx
  00b36	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b40	50		 push	 eax
  00b41	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b46	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv481[ebp], 0
$LN90@helicopter:
  00b50	6a 47		 push	 71			; 00000047H
  00b52	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00b55	51		 push	 ecx
  00b56	69 95 70 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv473[ebp], 1116
  00b60	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv481[ebp]
  00b66	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00b6d	ff d1		 call	 ecx
  00b6f	89 45 c0	 mov	 DWORD PTR _type$4[ebp], eax

; 1145 : 
; 1146 : 					formation = get_formation ((formation_types) type);

  00b72	8b 45 c0	 mov	 eax, DWORD PTR _type$4[ebp]
  00b75	50		 push	 eax
  00b76	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  00b7b	89 45 c4	 mov	 DWORD PTR _formation$5[ebp], eax

; 1147 : 
; 1148 : 					formation_count = formation->number_in_formation;

  00b7e	8b 45 c4	 mov	 eax, DWORD PTR _formation$5[ebp]
  00b81	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00b85	89 4d bc	 mov	 DWORD PTR _formation_count$3[ebp], ecx

; 1149 : 
; 1150 : 					formation_index = get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_NUMBER);

  00b88	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b8c	74 0d		 je	 SHORT $LN91@helicopter
  00b8e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b91	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b93	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv497[ebp], ecx
  00b99	eb 27		 jmp	 SHORT $LN92@helicopter
$LN91@helicopter:
  00b9b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00ba1	81 c2 a3 00 00
	00		 add	 edx, 163		; 000000a3H
  00ba7	52		 push	 edx
  00ba8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bb2	50		 push	 eax
  00bb3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bb8	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv497[ebp], 0
$LN92@helicopter:
  00bc2	b9 01 00 00 00	 mov	 ecx, 1
  00bc7	85 c9		 test	 ecx, ecx
  00bc9	74 0c		 je	 SHORT $LN93@helicopter
  00bcb	c7 85 6c ff ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv505[ebp], 75 ; 0000004bH
  00bd5	eb 27		 jmp	 SHORT $LN94@helicopter
$LN93@helicopter:
  00bd7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00bdd	81 c2 a3 00 00
	00		 add	 edx, 163		; 000000a3H
  00be3	52		 push	 edx
  00be4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00be9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00bee	50		 push	 eax
  00bef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bf4	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv505[ebp], 0
$LN94@helicopter:
  00bfe	6a 4b		 push	 75			; 0000004bH
  00c00	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00c03	51		 push	 ecx
  00c04	69 95 70 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv497[ebp], 1116
  00c0e	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv505[ebp]
  00c14	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00c1b	ff d1		 call	 ecx
  00c1d	89 45 b8	 mov	 DWORD PTR _formation_index$2[ebp], eax

; 1151 : 
; 1152 : 					leader_formation_index = get_local_entity_int_value (task_leader, INT_TYPE_GROUP_MEMBER_NUMBER);

  00c20	83 7d d8 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  00c24	74 0d		 je	 SHORT $LN95@helicopter
  00c26	8b 45 d8	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  00c29	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c2b	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv517[ebp], ecx
  00c31	eb 27		 jmp	 SHORT $LN96@helicopter
$LN95@helicopter:
  00c33	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00c39	81 c2 a5 00 00
	00		 add	 edx, 165		; 000000a5H
  00c3f	52		 push	 edx
  00c40	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c45	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c4a	50		 push	 eax
  00c4b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c50	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv517[ebp], 0
$LN96@helicopter:
  00c5a	b9 01 00 00 00	 mov	 ecx, 1
  00c5f	85 c9		 test	 ecx, ecx
  00c61	74 0c		 je	 SHORT $LN97@helicopter
  00c63	c7 85 6c ff ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv525[ebp], 75 ; 0000004bH
  00c6d	eb 27		 jmp	 SHORT $LN98@helicopter
$LN97@helicopter:
  00c6f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00c75	81 c2 a5 00 00
	00		 add	 edx, 165		; 000000a5H
  00c7b	52		 push	 edx
  00c7c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c86	50		 push	 eax
  00c87	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c8c	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv525[ebp], 0
$LN98@helicopter:
  00c96	6a 4b		 push	 75			; 0000004bH
  00c98	8b 4d d8	 mov	 ecx, DWORD PTR _task_leader$8[ebp]
  00c9b	51		 push	 ecx
  00c9c	69 95 70 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv517[ebp], 1116
  00ca6	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv525[ebp]
  00cac	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00cb3	ff d1		 call	 ecx
  00cb5	89 45 b4	 mov	 DWORD PTR _leader_formation_index$1[ebp], eax

; 1153 : 
; 1154 : 					ASSERT (formation_index < formation_count);

  00cb8	8b 45 b8	 mov	 eax, DWORD PTR _formation_index$2[ebp]
  00cbb	3b 45 bc	 cmp	 eax, DWORD PTR _formation_count$3[ebp]
  00cbe	7c 1a		 jl	 SHORT $LN20@helicopter
  00cc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00cc5	05 a7 00 00 00	 add	 eax, 167		; 000000a7H
  00cca	50		 push	 eax
  00ccb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cd0	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@
  00cd5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@helicopter:

; 1155 : 					ASSERT (leader_formation_index < formation_count);

  00cda	8b 45 b4	 mov	 eax, DWORD PTR _leader_formation_index$1[ebp]
  00cdd	3b 45 bc	 cmp	 eax, DWORD PTR _formation_count$3[ebp]
  00ce0	7c 1a		 jl	 SHORT $LN21@helicopter
  00ce2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00ce7	05 a8 00 00 00	 add	 eax, 168		; 000000a8H
  00cec	50		 push	 eax
  00ced	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cf2	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@
  00cf7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@helicopter:

; 1156 : 
; 1157 : 					//
; 1158 : 					// calculate position
; 1159 : 					//
; 1160 : 
; 1161 : 					leader_pos = get_local_entity_vec3d_ptr (task_leader, VEC3D_TYPE_POSITION);

  00cfc	83 7d d8 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  00d00	74 0d		 je	 SHORT $LN99@helicopter
  00d02	8b 45 d8	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  00d05	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d07	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv579[ebp], ecx
  00d0d	eb 27		 jmp	 SHORT $LN100@helicopter
$LN99@helicopter:
  00d0f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00d15	81 c2 ae 00 00
	00		 add	 edx, 174		; 000000aeH
  00d1b	52		 push	 edx
  00d1c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d21	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d26	50		 push	 eax
  00d27	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d2c	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv579[ebp], 0
$LN100@helicopter:
  00d36	b9 01 00 00 00	 mov	 ecx, 1
  00d3b	85 c9		 test	 ecx, ecx
  00d3d	74 0c		 je	 SHORT $LN101@helicopter
  00d3f	c7 85 6c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv587[ebp], 8
  00d49	eb 27		 jmp	 SHORT $LN102@helicopter
$LN101@helicopter:
  00d4b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00d51	81 c2 ae 00 00
	00		 add	 edx, 174		; 000000aeH
  00d57	52		 push	 edx
  00d58	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d5d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00d62	50		 push	 eax
  00d63	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d68	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv587[ebp], 0
$LN102@helicopter:
  00d72	6a 08		 push	 8
  00d74	8b 4d d8	 mov	 ecx, DWORD PTR _task_leader$8[ebp]
  00d77	51		 push	 ecx
  00d78	6b 95 70 ff ff
	ff 60		 imul	 edx, DWORD PTR tv579[ebp], 96
  00d7f	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv587[ebp]
  00d85	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00d8c	ff d1		 call	 ecx
  00d8e	89 45 c8	 mov	 DWORD PTR _leader_pos$6[ebp], eax

; 1162 : 
; 1163 : 					get_local_entity_vec3d (task_leader, VEC3D_TYPE_XV, &xv);

  00d91	83 7d d8 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  00d95	74 0d		 je	 SHORT $LN103@helicopter
  00d97	8b 45 d8	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  00d9a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d9c	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv599[ebp], ecx
  00da2	eb 27		 jmp	 SHORT $LN104@helicopter
$LN103@helicopter:
  00da4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00daa	81 c2 b0 00 00
	00		 add	 edx, 176		; 000000b0H
  00db0	52		 push	 edx
  00db1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00db6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00dbb	50		 push	 eax
  00dbc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dc1	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv599[ebp], 0
$LN104@helicopter:
  00dcb	b9 01 00 00 00	 mov	 ecx, 1
  00dd0	85 c9		 test	 ecx, ecx
  00dd2	74 0c		 je	 SHORT $LN105@helicopter
  00dd4	c7 85 6c ff ff
	ff 14 00 00 00	 mov	 DWORD PTR tv607[ebp], 20 ; 00000014H
  00dde	eb 27		 jmp	 SHORT $LN106@helicopter
$LN105@helicopter:
  00de0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00de6	81 c2 b0 00 00
	00		 add	 edx, 176		; 000000b0H
  00dec	52		 push	 edx
  00ded	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00df2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00df7	50		 push	 eax
  00df8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dfd	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv607[ebp], 0
$LN106@helicopter:
  00e07	8d 4d cc	 lea	 ecx, DWORD PTR _xv$7[ebp]
  00e0a	51		 push	 ecx
  00e0b	6a 14		 push	 20			; 00000014H
  00e0d	8b 55 d8	 mov	 edx, DWORD PTR _task_leader$8[ebp]
  00e10	52		 push	 edx
  00e11	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv599[ebp], 96
  00e18	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv607[ebp]
  00e1e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00e25	ff d2		 call	 edx

; 1164 : 
; 1165 : 					xv.x *= 1.75;

  00e27	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _xv$7[ebp]
  00e2c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ffc000000000000
  00e34	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00e38	f3 0f 11 45 cc	 movss	 DWORD PTR _xv$7[ebp], xmm0

; 1166 : 					xv.z *= 1.75;

  00e3d	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _xv$7[ebp+8]
  00e42	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ffc000000000000
  00e4a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00e4e	f3 0f 11 45 d4	 movss	 DWORD PTR _xv$7[ebp+8], xmm0

; 1167 : 
; 1168 : 					//
; 1169 : 					// take leader position and SUBTRACT leaders formation position (coz leader is not necessarily formation pos 0)
; 1170 : 					//
; 1171 : 
; 1172 : 					wp_pos->x = leader_pos->x - ((xv.x * formation->sites [leader_formation_index].x) - (xv.z * formation->sites [leader_formation_index].z));

  00e53	6b 45 b4 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  00e57	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00e5a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00e5d	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _xv$7[ebp]
  00e62	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  00e67	6b 45 b4 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  00e6b	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00e6e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00e71	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _xv$7[ebp+8]
  00e76	f3 0f 59 4c 02
	08		 mulss	 xmm1, DWORD PTR [edx+eax+8]
  00e7c	f3 0f 5c c1	 subss	 xmm0, xmm1
  00e80	8b 45 c8	 mov	 eax, DWORD PTR _leader_pos$6[ebp]
  00e83	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00e87	f3 0f 5c c8	 subss	 xmm1, xmm0
  00e8b	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00e8e	f3 0f 11 09	 movss	 DWORD PTR [ecx], xmm1

; 1173 : 					wp_pos->y = leader_pos->y - formation->sites [leader_formation_index].y;

  00e92	6b 45 b4 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  00e96	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00e99	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00e9c	8b 4d c8	 mov	 ecx, DWORD PTR _leader_pos$6[ebp]
  00e9f	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00ea4	f3 0f 5c 44 02
	04		 subss	 xmm0, DWORD PTR [edx+eax+4]
  00eaa	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  00ead	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 1174 : 					wp_pos->z = leader_pos->z - ((xv.x * formation->sites [leader_formation_index].z) + (xv.z * formation->sites [leader_formation_index].x));

  00eb2	6b 45 b4 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  00eb6	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00eb9	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00ebc	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _xv$7[ebp]
  00ec1	f3 0f 59 44 02
	08		 mulss	 xmm0, DWORD PTR [edx+eax+8]
  00ec7	6b 45 b4 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  00ecb	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00ece	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00ed1	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _xv$7[ebp+8]
  00ed6	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00edb	f3 0f 58 c1	 addss	 xmm0, xmm1
  00edf	8b 45 c8	 mov	 eax, DWORD PTR _leader_pos$6[ebp]
  00ee2	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00ee7	f3 0f 5c c8	 subss	 xmm1, xmm0
  00eeb	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00eee	f3 0f 11 49 08	 movss	 DWORD PTR [ecx+8], xmm1

; 1175 : 
; 1176 : 					//
; 1177 : 					// then ADD members formation position
; 1178 : 					//
; 1179 : 
; 1180 : 					wp_pos->x += ((xv.x * formation->sites [formation_index].x) - (xv.z * formation->sites [formation_index].z));

  00ef3	6b 45 b8 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  00ef7	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00efa	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00efd	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _xv$7[ebp]
  00f02	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  00f07	6b 45 b8 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  00f0b	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00f0e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00f11	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _xv$7[ebp+8]
  00f16	f3 0f 59 4c 02
	08		 mulss	 xmm1, DWORD PTR [edx+eax+8]
  00f1c	f3 0f 5c c1	 subss	 xmm0, xmm1
  00f20	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00f23	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00f27	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00f2a	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1181 : 					wp_pos->y += formation->sites [formation_index].y;

  00f2e	6b 45 b8 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  00f32	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00f35	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00f38	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00f3b	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00f40	f3 0f 58 44 02
	04		 addss	 xmm0, DWORD PTR [edx+eax+4]
  00f46	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  00f49	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 1182 : 					wp_pos->z += ((xv.x * formation->sites [formation_index].z) + (xv.z * formation->sites [formation_index].x));

  00f4e	6b 45 b8 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  00f52	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00f55	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00f58	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _xv$7[ebp]
  00f5d	f3 0f 59 44 02
	08		 mulss	 xmm0, DWORD PTR [edx+eax+8]
  00f63	6b 45 b8 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  00f67	8b 4d c4	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00f6a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00f6d	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _xv$7[ebp+8]
  00f72	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00f77	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f7b	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00f7e	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00f83	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00f86	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1183 : 
; 1184 : 					wp_pos->y -= get_local_entity_float_value (task_leader, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  00f8b	83 7d d8 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  00f8f	74 0d		 je	 SHORT $LN107@helicopter
  00f91	8b 45 d8	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  00f94	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f96	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv696[ebp], ecx
  00f9c	eb 27		 jmp	 SHORT $LN108@helicopter
$LN107@helicopter:
  00f9e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00fa4	81 c2 c5 00 00
	00		 add	 edx, 197		; 000000c5H
  00faa	52		 push	 edx
  00fab	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fb0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00fb5	50		 push	 eax
  00fb6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fbb	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv696[ebp], 0
$LN108@helicopter:
  00fc5	b9 01 00 00 00	 mov	 ecx, 1
  00fca	85 c9		 test	 ecx, ecx
  00fcc	74 0c		 je	 SHORT $LN109@helicopter
  00fce	c7 85 6c ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv704[ebp], 18 ; 00000012H
  00fd8	eb 27		 jmp	 SHORT $LN110@helicopter
$LN109@helicopter:
  00fda	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00fe0	81 c2 c5 00 00
	00		 add	 edx, 197		; 000000c5H
  00fe6	52		 push	 edx
  00fe7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00ff1	50		 push	 eax
  00ff2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ff7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv704[ebp], 0
$LN110@helicopter:
  01001	6a 12		 push	 18			; 00000012H
  01003	8b 4d d8	 mov	 ecx, DWORD PTR _task_leader$8[ebp]
  01006	51		 push	 ecx
  01007	69 95 70 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv696[ebp], 700
  01011	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv704[ebp]
  01017	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0101e	ff d1		 call	 ecx
  01020	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR tv1130[ebp]
  01026	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  01029	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0102e	f3 0f 5c 85 68
	ff ff ff	 subss	 xmm0, DWORD PTR tv1130[ebp]
  01036	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  01039	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1185 : 
; 1186 : 					get_local_entity_vec3d (task_leader, VEC3D_TYPE_MOTION_VECTOR, wp_vel);

  0103e	83 7d d8 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  01042	74 0d		 je	 SHORT $LN111@helicopter
  01044	8b 45 d8	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  01047	8b 08		 mov	 ecx, DWORD PTR [eax]
  01049	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv718[ebp], ecx
  0104f	eb 27		 jmp	 SHORT $LN112@helicopter
$LN111@helicopter:
  01051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  01057	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  0105d	52		 push	 edx
  0105e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  01063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01068	50		 push	 eax
  01069	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0106e	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv718[ebp], 0
$LN112@helicopter:
  01078	b9 01 00 00 00	 mov	 ecx, 1
  0107d	85 c9		 test	 ecx, ecx
  0107f	74 0c		 je	 SHORT $LN113@helicopter
  01081	c7 85 6c ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv726[ebp], 6
  0108b	eb 27		 jmp	 SHORT $LN114@helicopter
$LN113@helicopter:
  0108d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  01093	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  01099	52		 push	 edx
  0109a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0109f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  010a4	50		 push	 eax
  010a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010aa	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv726[ebp], 0
$LN114@helicopter:
  010b4	8b 4d 10	 mov	 ecx, DWORD PTR _wp_vel$[ebp]
  010b7	51		 push	 ecx
  010b8	6a 06		 push	 6
  010ba	8b 55 d8	 mov	 edx, DWORD PTR _task_leader$8[ebp]
  010bd	52		 push	 edx
  010be	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv718[ebp], 96
  010c5	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv726[ebp]
  010cb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  010d2	ff d2		 call	 edx
$LN18@helicopter:

; 1187 : 				}
; 1188 : 			}
; 1189 : 		}
; 1190 : 	}
; 1191 : 
; 1192 : 	//
; 1193 : 	// align waypoint altitude with the lowest point on the aircraft
; 1194 : 	//
; 1195 : 
; 1196 : 	wp_pos->y += get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  010d4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  010d8	74 0d		 je	 SHORT $LN115@helicopter
  010da	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  010dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  010df	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv739[ebp], ecx
  010e5	eb 27		 jmp	 SHORT $LN116@helicopter
$LN115@helicopter:
  010e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  010ed	81 c2 d1 00 00
	00		 add	 edx, 209		; 000000d1H
  010f3	52		 push	 edx
  010f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  010f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010fe	50		 push	 eax
  010ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01104	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv739[ebp], 0
$LN116@helicopter:
  0110e	b9 01 00 00 00	 mov	 ecx, 1
  01113	85 c9		 test	 ecx, ecx
  01115	74 0c		 je	 SHORT $LN117@helicopter
  01117	c7 85 6c ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv747[ebp], 18 ; 00000012H
  01121	eb 27		 jmp	 SHORT $LN118@helicopter
$LN117@helicopter:
  01123	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  01129	81 c2 d1 00 00
	00		 add	 edx, 209		; 000000d1H
  0112f	52		 push	 edx
  01130	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  01135	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0113a	50		 push	 eax
  0113b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01140	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv747[ebp], 0
$LN118@helicopter:
  0114a	6a 12		 push	 18			; 00000012H
  0114c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0114f	51		 push	 ecx
  01150	69 95 70 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv739[ebp], 700
  0115a	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv747[ebp]
  01160	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  01167	ff d1		 call	 ecx
  01169	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR tv1158[ebp]
  0116f	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  01172	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR tv1158[ebp]
  0117a	f3 0f 58 42 04	 addss	 xmm0, DWORD PTR [edx+4]
  0117f	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  01182	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1197 : 
; 1198 : 	//
; 1199 : 	// calculate distance of entity to desire position
; 1200 : 	//
; 1201 : 
; 1202 : 	distance = get_2d_range (pos, wp_pos);

  01187	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  0118a	50		 push	 eax
  0118b	8b 4d ec	 mov	 ecx, DWORD PTR _pos$[ebp]
  0118e	51		 push	 ecx
  0118f	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  01194	d9 5d f0	 fstp	 DWORD PTR _distance$[ebp]

; 1203 : 
; 1204 : 	#if DEBUG_WAYPOINT_VECTOR
; 1205 : 
; 1206 : 	if (distance > 0.0)
; 1207 : 	{
; 1208 : 		create_debug_3d_line (pos, wp_pos, sys_col_black, 0.0);
; 1209 : 	}
; 1210 : 
; 1211 : 	#endif
; 1212 : 
; 1213 : 	set_local_entity_float_value (en, FLOAT_TYPE_DISTANCE, distance);

  01197	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0119b	74 0d		 je	 SHORT $LN119@helicopter
  0119d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  011a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  011a2	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv764[ebp], ecx
  011a8	eb 27		 jmp	 SHORT $LN120@helicopter
$LN119@helicopter:
  011aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  011b0	81 c2 e2 00 00
	00		 add	 edx, 226		; 000000e2H
  011b6	52		 push	 edx
  011b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  011bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  011c1	50		 push	 eax
  011c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  011c7	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv764[ebp], 0
$LN120@helicopter:
  011d1	b9 01 00 00 00	 mov	 ecx, 1
  011d6	85 c9		 test	 ecx, ecx
  011d8	74 0c		 je	 SHORT $LN121@helicopter
  011da	c7 85 6c ff ff
	ff 1f 00 00 00	 mov	 DWORD PTR tv772[ebp], 31 ; 0000001fH
  011e4	eb 27		 jmp	 SHORT $LN122@helicopter
$LN121@helicopter:
  011e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z@4JA
  011ec	81 c2 e2 00 00
	00		 add	 edx, 226		; 000000e2H
  011f2	52		 push	 edx
  011f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  011f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  011fd	50		 push	 eax
  011fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01203	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv772[ebp], 0
$LN122@helicopter:
  0120d	51		 push	 ecx
  0120e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  01213	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01218	6a 1f		 push	 31			; 0000001fH
  0121a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0121d	51		 push	 ecx
  0121e	69 95 70 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv764[ebp], 700
  01228	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv772[ebp]
  0122e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  01235	ff d1		 call	 ecx
$LN1@helicopter:

; 1214 : }

  01237	5f		 pop	 edi
  01238	5e		 pop	 esi
  01239	5b		 pop	 ebx
  0123a	8b e5		 mov	 esp, ebp
  0123c	5d		 pop	 ebp
  0123d	c2 0c 00	 ret	 12			; 0000000cH
?helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z ENDP ; helicopter_movement_get_waypoint_position_and_velocity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z
_TEXT	SEGMENT
tv143 = -84						; size = 4
tv93 = -84						; size = 4
tv136 = -80						; size = 4
tv85 = -80						; size = 4
_offset$ = -12						; size = 12
_en$ = 8						; size = 4
_wp$ = 12						; size = 4
_wp_pos$ = 16						; size = 4
?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z PROC ; get_waypoint_display_position, COMDAT

; 1221 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1222 : 	vec3d
; 1223 : 		offset;
; 1224 : 
; 1225 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_waypoi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_waypoi:

; 1226 : 
; 1227 : 	ASSERT (wp);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_waypoi
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00032	83 c0 06	 add	 eax, 6
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_02HODPCBMO@wp@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_waypoi:

; 1228 : 
; 1229 : 	ASSERT (wp_pos);

  00045	83 7d 10 00	 cmp	 DWORD PTR _wp_pos$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@get_waypoi
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00050	83 c0 08	 add	 eax, 8
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_06NGJLJNEL@wp_pos@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_waypoi:

; 1230 : 
; 1231 : 	get_local_entity_vec3d (wp, VEC3D_TYPE_POSITION, wp_pos);

  00063	83 7d 0c 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00067	74 0a		 je	 SHORT $LN8@get_waypoi
  00069	8b 45 0c	 mov	 eax, DWORD PTR _wp$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	89 4d b0	 mov	 DWORD PTR tv85[ebp], ecx
  00071	eb 21		 jmp	 SHORT $LN9@get_waypoi
$LN8@get_waypoi:
  00073	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  00079	83 c2 0a	 add	 edx, 10			; 0000000aH
  0007c	52		 push	 edx
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN9@get_waypoi:
  00094	b9 01 00 00 00	 mov	 ecx, 1
  00099	85 c9		 test	 ecx, ecx
  0009b	74 09		 je	 SHORT $LN10@get_waypoi
  0009d	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv93[ebp], 8
  000a4	eb 21		 jmp	 SHORT $LN11@get_waypoi
$LN10@get_waypoi:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z@4JA
  000ac	83 c2 0a	 add	 edx, 10			; 0000000aH
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@get_waypoi:
  000c7	8b 4d 10	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  000ca	51		 push	 ecx
  000cb	6a 08		 push	 8
  000cd	8b 55 0c	 mov	 edx, DWORD PTR _wp$[ebp]
  000d0	52		 push	 edx
  000d1	6b 45 b0 60	 imul	 eax, DWORD PTR tv85[ebp], 96
  000d5	8b 4d ac	 mov	 ecx, DWORD PTR tv93[ebp]
  000d8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  000df	ff d2		 call	 edx

; 1232 : 
; 1233 : 	if (get_local_entity_int_value (wp, INT_TYPE_MOBILE_FOLLOW_WAYPOINT_OFFSET))

  000e1	83 7d 0c 00	 cmp	 DWORD PTR _wp$[ebp], 0
  000e5	74 0a		 je	 SHORT $LN12@get_waypoi
  000e7	8b 45 0c	 mov	 eax, DWORD PTR _wp$[ebp]
  000ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ec	89 4d b0	 mov	 DWORD PTR tv136[ebp], ecx
  000ef	eb 1d		 jmp	 SHORT $LN13@get_waypoi
$LN12@get_waypoi:
  000f1	68 d1 04 00 00	 push	 1233			; 000004d1H
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00101	52		 push	 edx
  00102	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00107	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN13@get_waypoi:
  0010e	b8 01 00 00 00	 mov	 eax, 1
  00113	85 c0		 test	 eax, eax
  00115	74 09		 je	 SHORT $LN14@get_waypoi
  00117	c7 45 ac 8d 00
	00 00		 mov	 DWORD PTR tv143[ebp], 141 ; 0000008dH
  0011e	eb 1d		 jmp	 SHORT $LN15@get_waypoi
$LN14@get_waypoi:
  00120	68 d1 04 00 00	 push	 1233			; 000004d1H
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00136	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN15@get_waypoi:
  0013d	68 8d 00 00 00	 push	 141			; 0000008dH
  00142	8b 55 0c	 mov	 edx, DWORD PTR _wp$[ebp]
  00145	52		 push	 edx
  00146	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv136[ebp], 1116
  0014d	8b 4d ac	 mov	 ecx, DWORD PTR tv143[ebp]
  00150	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00157	ff d2		 call	 edx
  00159	85 c0		 test	 eax, eax
  0015b	74 4e		 je	 SHORT $LN5@get_waypoi

; 1234 : 	{
; 1235 : 		get_local_entity_formation_position_offset (en, wp, &offset);

  0015d	8d 45 f4	 lea	 eax, DWORD PTR _offset$[ebp]
  00160	50		 push	 eax
  00161	8b 4d 0c	 mov	 ecx, DWORD PTR _wp$[ebp]
  00164	51		 push	 ecx
  00165	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00168	52		 push	 edx
  00169	e8 00 00 00 00	 call	 ?get_local_entity_formation_position_offset@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_local_entity_formation_position_offset

; 1236 : 
; 1237 : 		wp_pos->x += offset.x;

  0016e	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00171	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00175	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _offset$[ebp]
  0017a	8b 4d 10	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  0017d	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1238 : 		wp_pos->y += offset.y;

  00181	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00184	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00189	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _offset$[ebp+4]
  0018e	8b 4d 10	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00191	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1239 : 		wp_pos->z += offset.z;

  00196	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00199	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0019e	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _offset$[ebp+8]
  001a3	8b 4d 10	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  001a6	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
$LN5@get_waypoi:

; 1240 : 	}
; 1241 : 
; 1242 : 	if (point_inside_map_area (wp_pos))

  001ab	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  001ae	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001b2	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  001b9	72 5a		 jb	 SHORT $LN6@get_waypoi
  001bb	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  001be	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001c6	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  001c9	72 4a		 jb	 SHORT $LN6@get_waypoi
  001cb	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  001ce	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001d3	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  001da	72 39		 jb	 SHORT $LN6@get_waypoi
  001dc	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  001df	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  001e7	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  001eb	72 28		 jb	 SHORT $LN6@get_waypoi

; 1243 : 	{
; 1244 : 		wp_pos->y = get_3d_terrain_elevation (wp_pos->x, wp_pos->z);

  001ed	6a 00		 push	 0
  001ef	8b 45 10	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  001f2	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001f7	51		 push	 ecx
  001f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fd	8b 4d 10	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00200	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00204	51		 push	 ecx
  00205	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020a	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0020f	8b 55 10	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  00212	d9 5a 04	 fstp	 DWORD PTR [edx+4]
$LN6@get_waypoi:

; 1245 : 	}
; 1246 : }

  00215	5f		 pop	 edi
  00216	5e		 pop	 esi
  00217	5b		 pop	 ebx
  00218	8b e5		 mov	 esp, ebp
  0021a	5d		 pop	 ebp
  0021b	c2 0c 00	 ret	 12			; 0000000cH
?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ENDP ; get_waypoint_display_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv151 = -96						; size = 4
tv132 = -96						; size = 4
tv81 = -96						; size = 4
tv144 = -92						; size = 4
tv93 = -92						; size = 4
tv74 = -92						; size = 4
_wp_pos$ = -24						; size = 12
_wp_vel$ = -12						; size = 12
_en$ = 8						; size = 4
?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z PROC ; update_player_helicopter_waypoint_distance, COMDAT

; 1783 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1784 : 	vec3d
; 1785 : 		wp_vel,
; 1786 : 		wp_pos;
; 1787 : 
; 1788 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@update_pla
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_pla:

; 1789 : 
; 1790 : 	//
; 1791 : 	// abort if mobile is not moving (i.e. landed, or dead)
; 1792 : 	//
; 1793 : 
; 1794 : 	if ((!get_local_entity_int_value (en, INT_TYPE_MOBILE_MOVING)) && (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN6@update_pla
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d a4	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN7@update_pla
$LN6@update_pla:
  00037	68 02 07 00 00	 push	 1794			; 00000702H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@update_pla:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN8@update_pla
  0005d	c7 45 a0 8e 00
	00 00		 mov	 DWORD PTR tv81[ebp], 142 ; 0000008eH
  00064	eb 1d		 jmp	 SHORT $LN9@update_pla
$LN8@update_pla:
  00066	68 02 07 00 00	 push	 1794			; 00000702H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN9@update_pla:
  00083	68 8e 00 00 00	 push	 142			; 0000008eH
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d a0	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	0f 85 81 00 00
	00		 jne	 $LN3@update_pla
  000a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ab	74 0a		 je	 SHORT $LN10@update_pla
  000ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	89 4d a4	 mov	 DWORD PTR tv93[ebp], ecx
  000b5	eb 1d		 jmp	 SHORT $LN11@update_pla
$LN10@update_pla:
  000b7	68 02 07 00 00	 push	 1794			; 00000702H
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c7	52		 push	 edx
  000c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cd	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@update_pla:
  000d4	b8 01 00 00 00	 mov	 eax, 1
  000d9	85 c0		 test	 eax, eax
  000db	74 09		 je	 SHORT $LN12@update_pla
  000dd	c7 45 a0 9c 00
	00 00		 mov	 DWORD PTR tv132[ebp], 156 ; 0000009cH
  000e4	eb 1d		 jmp	 SHORT $LN13@update_pla
$LN12@update_pla:
  000e6	68 02 07 00 00	 push	 1794			; 00000702H
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f6	51		 push	 ecx
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN13@update_pla:
  00103	68 9c 00 00 00	 push	 156			; 0000009cH
  00108	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0010b	52		 push	 edx
  0010c	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  00113	8b 4d a0	 mov	 ecx, DWORD PTR tv132[ebp]
  00116	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0011d	ff d2		 call	 edx
  0011f	85 c0		 test	 eax, eax
  00121	75 05		 jne	 SHORT $LN3@update_pla

; 1795 : 	{
; 1796 : 
; 1797 : 		return;

  00123	e9 8c 00 00 00	 jmp	 $LN1@update_pla
$LN3@update_pla:

; 1798 : 	}
; 1799 : 
; 1800 : 	//
; 1801 : 	// abort if mobile is not alive (operational state dying is not caught by INT_TYPE_MOBILE_MOVING))
; 1802 : 	//
; 1803 : 
; 1804 : 	if (!get_local_entity_int_value (en, INT_TYPE_ALIVE))

  00128	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0012c	74 0a		 je	 SHORT $LN14@update_pla
  0012e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00131	8b 08		 mov	 ecx, DWORD PTR [eax]
  00133	89 4d a4	 mov	 DWORD PTR tv144[ebp], ecx
  00136	eb 1d		 jmp	 SHORT $LN15@update_pla
$LN14@update_pla:
  00138	68 0c 07 00 00	 push	 1804			; 0000070cH
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00142	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00148	52		 push	 edx
  00149	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN15@update_pla:
  00155	b8 01 00 00 00	 mov	 eax, 1
  0015a	85 c0		 test	 eax, eax
  0015c	74 09		 je	 SHORT $LN16@update_pla
  0015e	c7 45 a0 07 00
	00 00		 mov	 DWORD PTR tv151[ebp], 7
  00165	eb 1d		 jmp	 SHORT $LN17@update_pla
$LN16@update_pla:
  00167	68 0c 07 00 00	 push	 1804			; 0000070cH
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00171	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00177	51		 push	 ecx
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN17@update_pla:
  00184	6a 07		 push	 7
  00186	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00189	52		 push	 edx
  0018a	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv144[ebp], 1116
  00191	8b 4d a0	 mov	 ecx, DWORD PTR tv151[ebp]
  00194	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0019b	ff d2		 call	 edx
  0019d	85 c0		 test	 eax, eax
  0019f	75 02		 jne	 SHORT $LN4@update_pla

; 1805 : 	{
; 1806 : 
; 1807 : 		return;

  001a1	eb 11		 jmp	 SHORT $LN1@update_pla
$LN4@update_pla:

; 1808 : 	}
; 1809 : 
; 1810 : 	//
; 1811 : 	// calculate helicopter fly-to position, and store distance from it
; 1812 : 	//
; 1813 : 
; 1814 : 	helicopter_movement_get_waypoint_position_and_velocity (en, &wp_pos, &wp_vel);

  001a3	8d 45 f4	 lea	 eax, DWORD PTR _wp_vel$[ebp]
  001a6	50		 push	 eax
  001a7	8d 4d e8	 lea	 ecx, DWORD PTR _wp_pos$[ebp]
  001aa	51		 push	 ecx
  001ab	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001ae	52		 push	 edx
  001af	e8 00 00 00 00	 call	 ?helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z ; helicopter_movement_get_waypoint_position_and_velocity
$LN1@update_pla:

; 1815 : }

  001b4	5f		 pop	 edi
  001b5	5e		 pop	 esi
  001b6	5b		 pop	 ebx
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c2 04 00	 ret	 4
?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z ENDP ; update_player_helicopter_waypoint_distance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_impact_movement@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv93 = -88						; size = 4
tv85 = -84						; size = 4
_seed$ = -16						; size = 4
_velocity$ = -12					; size = 4
_speed$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_impact_movement@@YGXPAUENTITY@@@Z PROC	; helicopter_impact_movement, COMDAT

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 951  : 
; 952  : 	helicopter
; 953  : 		*raw;
; 954  : 
; 955  : 	float
; 956  : 		speed;
; 957  : 
; 958  : 	vec3d
; 959  : 		*velocity;
; 960  : 
; 961  : 	int
; 962  : 		seed;
; 963  : 
; 964  : 	raw = (helicopter *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 965  : 
; 966  : 	seed = get_client_server_entity_random_number_seed(en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0001b	c1 f8 04	 sar	 eax, 4
  0001e	89 45 f0	 mov	 DWORD PTR _seed$[ebp], eax

; 967  : 
; 968  : 	speed = 10.0 + (2.0 * frand1x (&seed));

  00021	69 45 f0 6d 4e
	c6 41		 imul	 eax, DWORD PTR _seed$[ebp], 1103515245
  00028	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0002d	89 45 f0	 mov	 DWORD PTR _seed$[ebp], eax
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _seed$[ebp]
  00033	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00036	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0003c	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00040	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00048	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00050	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4024000000000000
  00058	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005c	f3 0f 11 45 f8	 movss	 DWORD PTR _speed$[ebp], xmm0

; 969  : 
; 970  : 	if (seed & 1)

  00061	8b 45 f0	 mov	 eax, DWORD PTR _seed$[ebp]
  00064	83 e0 01	 and	 eax, 1
  00067	74 11		 je	 SHORT $LN2@helicopter

; 971  : 	{
; 972  : 		speed = -speed;

  00069	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _speed$[ebp]
  0006e	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00075	f3 0f 11 45 f8	 movss	 DWORD PTR _speed$[ebp], xmm0
$LN2@helicopter:

; 973  : 	}
; 974  : 
; 975  : 	velocity = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  0007a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0007e	74 0a		 je	 SHORT $LN4@helicopter
  00080	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00083	8b 08		 mov	 ecx, DWORD PTR [eax]
  00085	89 4d ac	 mov	 DWORD PTR tv85[ebp], ecx
  00088	eb 21		 jmp	 SHORT $LN5@helicopter
$LN4@helicopter:
  0008a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_impact_movement@@YGXPAUENTITY@@@Z@4JA
  00090	83 c2 19	 add	 edx, 25			; 00000019H
  00093	52		 push	 edx
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a4	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN5@helicopter:
  000ab	b9 01 00 00 00	 mov	 ecx, 1
  000b0	85 c9		 test	 ecx, ecx
  000b2	74 09		 je	 SHORT $LN6@helicopter
  000b4	c7 45 a8 06 00
	00 00		 mov	 DWORD PTR tv93[ebp], 6
  000bb	eb 21		 jmp	 SHORT $LN7@helicopter
$LN6@helicopter:
  000bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_impact_movement@@YGXPAUENTITY@@@Z@4JA
  000c3	83 c2 19	 add	 edx, 25			; 00000019H
  000c6	52		 push	 edx
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d7	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN7@helicopter:
  000de	6a 06		 push	 6
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e3	51		 push	 ecx
  000e4	6b 55 ac 60	 imul	 edx, DWORD PTR tv85[ebp], 96
  000e8	8b 45 a8	 mov	 eax, DWORD PTR tv93[ebp]
  000eb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000f2	ff d1		 call	 ecx
  000f4	89 45 f4	 mov	 DWORD PTR _velocity$[ebp], eax

; 976  : 
; 977  : 	velocity->x += (speed * raw->ac.mob.xv.x);

  000f7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000fa	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _speed$[ebp]
  000ff	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  00104	8b 4d f4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  00107	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  0010b	8b 55 f4	 mov	 edx, DWORD PTR _velocity$[ebp]
  0010e	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 978  : 
; 979  : 	velocity->z += (speed * raw->ac.mob.xv.z);

  00112	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00115	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _speed$[ebp]
  0011a	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  0011f	8b 4d f4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  00122	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00127	8b 55 f4	 mov	 edx, DWORD PTR _velocity$[ebp]
  0012a	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0

; 980  : }

  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 04 00	 ret	 4
?helicopter_impact_movement@@YGXPAUENTITY@@@Z ENDP	; helicopter_impact_movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_death_movement@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv1013 = -192						; size = 8
tv939 = -192						; size = 8
tv79 = -192						; size = 8
tv1042 = -188						; size = 4
tv969 = -188						; size = 4
tv864 = -188						; size = 4
tv785 = -188						; size = 4
tv1103 = -184						; size = 8
tv1101 = -184						; size = 8
tv708 = -184						; size = 4
tv604 = -184						; size = 4
tv584 = -184						; size = 4
tv511 = -184						; size = 4
tv488 = -184						; size = 4
tv463 = -184						; size = 4
tv442 = -184						; size = 4
tv401 = -184						; size = 4
tv360 = -184						; size = 4
tv325 = -184						; size = 4
tv302 = -184						; size = 4
tv272 = -184						; size = 4
tv228 = -184						; size = 4
tv191 = -184						; size = 4
tv163 = -184						; size = 4
tv139 = -184						; size = 4
tv80 = -184						; size = 8
tv700 = -180						; size = 4
tv596 = -180						; size = 4
tv576 = -180						; size = 4
tv503 = -180						; size = 4
tv480 = -180						; size = 4
tv455 = -180						; size = 4
tv434 = -180						; size = 4
tv393 = -180						; size = 4
tv385 = -180						; size = 4
tv352 = -180						; size = 4
tv338 = -180						; size = 4
tv318 = -180						; size = 4
tv294 = -180						; size = 4
tv264 = -180						; size = 4
tv220 = -180						; size = 4
tv183 = -180						; size = 4
tv155 = -180						; size = 4
tv131 = -180						; size = 4
_sound_sample_index$1 = -112				; size = 4
_d$2 = -108						; size = 12
_bounding_box$3 = -96					; size = 4
_d$4 = -92						; size = 12
_bounding_box$5 = -80					; size = 4
_temp_pos$6 = -76					; size = 12
_terrain_class$ = -64					; size = 4
_new_pos$ = -60						; size = 12
_velocity$ = -48					; size = 4
_pos$ = -44						; size = 4
_old_terrain_elevation$ = -40				; size = 4
_terrain_elevation$ = -36				; size = 4
_spin_up_amount$ = -32					; size = 4
_delta_rpm$ = -28					; size = 4
_altitude$ = -24					; size = 4
_speed$ = -20						; size = 4
_roll$ = -16						; size = 4
_pitch$ = -12						; size = 4
_heading$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_death_movement@@YGXPAUENTITY@@@Z PROC	; helicopter_death_movement, COMDAT

; 426  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 427  : 
; 428  : 	helicopter
; 429  : 		*raw;
; 430  : 
; 431  : 	float
; 432  : 		heading,
; 433  : 		pitch,
; 434  : 		roll,
; 435  : 		speed,
; 436  : 		altitude,
; 437  : 		delta_rpm,
; 438  : 		spin_up_amount,
; 439  : 		terrain_elevation,
; 440  : 		old_terrain_elevation;
; 441  : 
; 442  : 	vec3d
; 443  : 		*pos,
; 444  : 		*velocity,
; 445  : 		new_pos;
; 446  : 
; 447  : 	terrain_classes
; 448  : 		terrain_class;
; 449  : 
; 450  : 	raw = (helicopter *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 451  : 
; 452  : 	//
; 453  : 	// wind down rotors
; 454  : 	//
; 455  : 
; 456  : 	delta_rpm = -raw->main_rotor_rpm;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00018	f3 0f 10 80 8c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+396]
  00020	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00027	f3 0f 11 45 e4	 movss	 DWORD PTR _delta_rpm$[ebp], xmm0

; 457  : 
; 458  : 	spin_up_amount = ((1.0 / 3600) * raw->main_rotor_rpm * raw->main_rotor_rpm);

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002f	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  00037	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f323456789abcdf
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00042	f3 0f 5a 89 8c
	01 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+396]
  0004a	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0004e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00052	f3 0f 11 45 e0	 movss	 DWORD PTR _spin_up_amount$[ebp], xmm0

; 459  : 
; 460  : 	spin_up_amount = bound (spin_up_amount, 0.3, 1.0);

  00057	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _spin_up_amount$[ebp]
  0005c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fd3333333333333
  00064	66 0f 2f c8	 comisd	 xmm1, xmm0
  00068	76 12		 jbe	 SHORT $LN29@helicopter
  0006a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00072	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv80[ebp], xmm0
  0007a	eb 3e		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  0007c	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _spin_up_amount$[ebp]
  00081	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00089	76 12		 jbe	 SHORT $LN27@helicopter
  0008b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00093	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR tv79[ebp], xmm0
  0009b	eb 0d		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  0009d	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _spin_up_amount$[ebp]
  000a2	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR tv79[ebp], xmm0
$LN28@helicopter:
  000aa	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv79[ebp]
  000b2	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv80[ebp], xmm0
$LN30@helicopter:
  000ba	f2 0f 5a 85 48
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv80[ebp]
  000c2	f3 0f 11 45 e0	 movss	 DWORD PTR _spin_up_amount$[ebp], xmm0

; 461  : 
; 462  : 	delta_rpm *= spin_up_amount;

  000c7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _delta_rpm$[ebp]
  000cc	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _spin_up_amount$[ebp]
  000d1	f3 0f 11 45 e4	 movss	 DWORD PTR _delta_rpm$[ebp], xmm0

; 463  : 
; 464  : 	raw->main_rotor_rpm += delta_rpm * get_entity_movement_delta_time ();

  000d6	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _delta_rpm$[ebp]
  000db	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000e3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000e6	f3 0f 58 80 8c
	01 00 00	 addss	 xmm0, DWORD PTR [eax+396]
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000f1	f3 0f 11 81 8c
	01 00 00	 movss	 DWORD PTR [ecx+396], xmm0

; 465  : 
; 466  : 	if (raw->main_rotor_rpm < 2.0)

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000fc	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  00104	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  0010c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00110	76 0e		 jbe	 SHORT $LN4@helicopter

; 467  : 	{
; 468  : 		raw->main_rotor_rpm = 0.0;

  00112	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00115	0f 57 c0	 xorps	 xmm0, xmm0
  00118	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0
$LN4@helicopter:

; 469  : 	}
; 470  : 
; 471  : 	raw->tail_rotor_rpm = raw->main_rotor_rpm;

  00120	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00123	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00126	8b 91 8c 01 00
	00		 mov	 edx, DWORD PTR [ecx+396]
  0012c	89 90 a8 01 00
	00		 mov	 DWORD PTR [eax+424], edx

; 472  : 
; 473  : 	//
; 474  : 	// get current position and velocity
; 475  : 	//
; 476  : 
; 477  : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00132	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00136	74 0d		 je	 SHORT $LN31@helicopter
  00138	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013d	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv131[ebp], ecx
  00143	eb 24		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  00145	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  0014b	83 c2 33	 add	 edx, 51			; 00000033H
  0014e	52		 push	 edx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00154	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015f	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN32@helicopter:
  00169	b9 01 00 00 00	 mov	 ecx, 1
  0016e	85 c9		 test	 ecx, ecx
  00170	74 0c		 je	 SHORT $LN33@helicopter
  00172	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv139[ebp], 8
  0017c	eb 24		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  0017e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00184	83 c2 33	 add	 edx, 51			; 00000033H
  00187	52		 push	 edx
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00198	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv139[ebp], 0
$LN34@helicopter:
  001a2	6a 08		 push	 8
  001a4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a7	51		 push	 ecx
  001a8	6b 95 4c ff ff
	ff 60		 imul	 edx, DWORD PTR tv131[ebp], 96
  001af	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv139[ebp]
  001b5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001bc	ff d1		 call	 ecx
  001be	89 45 d4	 mov	 DWORD PTR _pos$[ebp], eax

; 478  : 
; 479  : 	old_terrain_elevation = get_3d_terrain_point_data_elevation (&raw->ac.terrain_info);

  001c1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001c4	05 54 01 00 00	 add	 eax, 340		; 00000154H
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  001cf	d9 5d d8	 fstp	 DWORD PTR _old_terrain_elevation$[ebp]

; 480  : 
; 481  : 	velocity = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  001d2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001d6	74 0d		 je	 SHORT $LN35@helicopter
  001d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv155[ebp], ecx
  001e3	eb 24		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  001e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  001eb	83 c2 37	 add	 edx, 55			; 00000037H
  001ee	52		 push	 edx
  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ff	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv155[ebp], 0
$LN36@helicopter:
  00209	b9 01 00 00 00	 mov	 ecx, 1
  0020e	85 c9		 test	 ecx, ecx
  00210	74 0c		 je	 SHORT $LN37@helicopter
  00212	c7 85 48 ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv163[ebp], 6
  0021c	eb 24		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  0021e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00224	83 c2 37	 add	 edx, 55			; 00000037H
  00227	52		 push	 edx
  00228	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00238	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv163[ebp], 0
$LN38@helicopter:
  00242	6a 06		 push	 6
  00244	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00247	51		 push	 ecx
  00248	6b 95 4c ff ff
	ff 60		 imul	 edx, DWORD PTR tv155[ebp], 96
  0024f	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv163[ebp]
  00255	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0025c	ff d1		 call	 ecx
  0025e	89 45 d0	 mov	 DWORD PTR _velocity$[ebp], eax

; 482  : 
; 483  : 	if (get_terrain_type_class (get_3d_terrain_point_data_type (&raw->ac.terrain_info)) == TERRAIN_CLASS_LAND)

  00261	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00264	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00269	50		 push	 eax
  0026a	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  0026f	50		 push	 eax
  00270	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  00275	83 f8 03	 cmp	 eax, 3
  00278	0f 85 ad 01 00
	00		 jne	 $LN6@helicopter

; 484  : 	{
; 485  : 		altitude = pos->y - (old_terrain_elevation + get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE));

  0027e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00282	74 0d		 je	 SHORT $LN39@helicopter
  00284	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00287	8b 08		 mov	 ecx, DWORD PTR [eax]
  00289	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv183[ebp], ecx
  0028f	eb 24		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  00291	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00297	83 c2 3b	 add	 edx, 59			; 0000003bH
  0029a	52		 push	 edx
  0029b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a5	50		 push	 eax
  002a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ab	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN40@helicopter:
  002b5	b9 01 00 00 00	 mov	 ecx, 1
  002ba	85 c9		 test	 ecx, ecx
  002bc	74 0c		 je	 SHORT $LN41@helicopter
  002be	c7 85 48 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv191[ebp], 18 ; 00000012H
  002c8	eb 24		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  002ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  002d0	83 c2 3b	 add	 edx, 59			; 0000003bH
  002d3	52		 push	 edx
  002d4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002de	50		 push	 eax
  002df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e4	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv191[ebp], 0
$LN42@helicopter:
  002ee	6a 12		 push	 18			; 00000012H
  002f0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002f3	51		 push	 ecx
  002f4	69 95 4c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv183[ebp], 700
  002fe	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv191[ebp]
  00304	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0030b	ff d1		 call	 ecx
  0030d	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv785[ebp]
  00313	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR tv785[ebp]
  0031b	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _old_terrain_elevation$[ebp]
  00320	8b 55 d4	 mov	 edx, DWORD PTR _pos$[ebp]
  00323	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  00328	f3 0f 5c c8	 subss	 xmm1, xmm0
  0032c	f3 0f 11 4d e8	 movss	 DWORD PTR _altitude$[ebp], xmm1

; 486  : 
; 487  : 		if (altitude <= 0.0)

  00331	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00336	0f 57 c9	 xorps	 xmm1, xmm1
  00339	66 0f 2f c8	 comisd	 xmm1, xmm0
  0033d	0f 82 e8 00 00
	00		 jb	 $LN6@helicopter

; 488  : 		{
; 489  : 			//
; 490  : 			// stop any engine noise
; 491  : 			//
; 492  : 
; 493  : 			if (get_comms_model() == COMMS_MODEL_SERVER)

  00343	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0034a	75 09		 jne	 SHORT $LN7@helicopter

; 494  : 			{
; 495  : 				kill_helicopter_rotor_sound_effects (en);

  0034c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0034f	50		 push	 eax
  00350	e8 00 00 00 00	 call	 ?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z ; kill_helicopter_rotor_sound_effects
$LN7@helicopter:

; 496  : 			}
; 497  : 
; 498  : 			//
; 499  : 			// if aircraft is already on the ground, but not on water, call different movement function
; 500  : 			//
; 501  : 
; 502  : 			if (helicopter_crash_movement (en))

  00355	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00358	50		 push	 eax
  00359	e8 00 00 00 00	 call	 ?helicopter_crash_movement@@YGHPAUENTITY@@@Z ; helicopter_crash_movement
  0035e	85 c0		 test	 eax, eax
  00360	0f 84 c0 00 00
	00		 je	 $LN10@helicopter

; 503  : 			{
; 504  : 				if (raw->main_rotor_rpm == 0.0)

  00366	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00369	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  00371	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00379	9f		 lahf
  0037a	f6 c4 44	 test	 ah, 68			; 00000044H
  0037d	0f 8a a3 00 00
	00		 jp	 $LN10@helicopter

; 505  : 				{
; 506  : 					if (!raw->ac.mob.alive)

  00383	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00386	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00389	83 e1 01	 and	 ecx, 1
  0038c	0f 85 94 00 00
	00		 jne	 $LN10@helicopter

; 507  : 					{
; 508  : 						set_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_DEAD);

  00392	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00396	74 0d		 je	 SHORT $LN43@helicopter
  00398	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0039b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039d	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv220[ebp], ecx
  003a3	eb 24		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  003a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  003ab	83 c2 52	 add	 edx, 82			; 00000052H
  003ae	52		 push	 edx
  003af	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b9	50		 push	 eax
  003ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003bf	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv220[ebp], 0
$LN44@helicopter:
  003c9	b9 01 00 00 00	 mov	 ecx, 1
  003ce	85 c9		 test	 ecx, ecx
  003d0	74 0c		 je	 SHORT $LN45@helicopter
  003d2	c7 85 48 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv228[ebp], 151 ; 00000097H
  003dc	eb 24		 jmp	 SHORT $LN46@helicopter
$LN45@helicopter:
  003de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  003e4	83 c2 52	 add	 edx, 82			; 00000052H
  003e7	52		 push	 edx
  003e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f8	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv228[ebp], 0
$LN46@helicopter:
  00402	6a 02		 push	 2
  00404	68 97 00 00 00	 push	 151			; 00000097H
  00409	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0040c	51		 push	 ecx
  0040d	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv220[ebp], 1116
  00417	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv228[ebp]
  0041d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00424	ff d1		 call	 ecx
$LN10@helicopter:

; 509  : 					}
; 510  : 				}
; 511  : 			}
; 512  : 
; 513  : 			return;

  00426	e9 d9 0c 00 00	 jmp	 $LN1@helicopter
$LN6@helicopter:

; 514  : 		}
; 515  : 	}
; 516  : 
; 517  : 	new_pos.x = pos->x + (velocity->x * get_entity_movement_delta_time());

  0042b	8b 45 d0	 mov	 eax, DWORD PTR _velocity$[ebp]
  0042e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00432	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0043a	8b 4d d4	 mov	 ecx, DWORD PTR _pos$[ebp]
  0043d	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00441	f3 0f 11 45 c4	 movss	 DWORD PTR _new_pos$[ebp], xmm0

; 518  : 	new_pos.y = pos->y + (velocity->y * get_entity_movement_delta_time());

  00446	8b 45 d0	 mov	 eax, DWORD PTR _velocity$[ebp]
  00449	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0044e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00456	8b 4d d4	 mov	 ecx, DWORD PTR _pos$[ebp]
  00459	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  0045e	f3 0f 11 45 c8	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 519  : 	new_pos.z = pos->z + (velocity->z * get_entity_movement_delta_time());

  00463	8b 45 d0	 mov	 eax, DWORD PTR _velocity$[ebp]
  00466	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0046b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00473	8b 4d d4	 mov	 ecx, DWORD PTR _pos$[ebp]
  00476	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  0047b	f3 0f 11 45 cc	 movss	 DWORD PTR _new_pos$[ebp+8], xmm0

; 520  : 
; 521  : 	bound_position_to_map_volume (&new_pos);

  00480	8d 45 c4	 lea	 eax, DWORD PTR _new_pos$[ebp]
  00483	50		 push	 eax
  00484	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 522  : 
; 523  : 	get_3d_terrain_point_data (new_pos.x, new_pos.z, &raw->ac.terrain_info);

  00489	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0048c	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00491	50		 push	 eax
  00492	51		 push	 ecx
  00493	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_pos$[ebp+8]
  00498	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049d	51		 push	 ecx
  0049e	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _new_pos$[ebp]
  004a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a8	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  004ad	dd d8		 fstp	 ST(0)

; 524  : 
; 525  : 	//
; 526  : 	// update velocity
; 527  : 	//
; 528  : 
; 529  : 	velocity->y -= (G * get_entity_movement_delta_time());		// ignore lift for simplicity

  004af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@411cf5c3
  004b7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  004bf	8b 45 d0	 mov	 eax, DWORD PTR _velocity$[ebp]
  004c2	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  004c7	f3 0f 5c c8	 subss	 xmm1, xmm0
  004cb	8b 4d d0	 mov	 ecx, DWORD PTR _velocity$[ebp]
  004ce	f3 0f 11 49 04	 movss	 DWORD PTR [ecx+4], xmm1

; 530  : 
; 531  : 	speed = get_3d_vector_magnitude (velocity);

  004d3	8b 45 d0	 mov	 eax, DWORD PTR _velocity$[ebp]
  004d6	50		 push	 eax
  004d7	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  004dc	d9 5d ec	 fstp	 DWORD PTR _speed$[ebp]

; 532  : 
; 533  : 	set_local_entity_float_value (en, FLOAT_TYPE_VELOCITY, speed);

  004df	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004e3	74 0d		 je	 SHORT $LN47@helicopter
  004e5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ea	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv264[ebp], ecx
  004f0	eb 24		 jmp	 SHORT $LN48@helicopter
$LN47@helicopter:
  004f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  004f8	83 c2 6b	 add	 edx, 107		; 0000006bH
  004fb	52		 push	 edx
  004fc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00501	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00506	50		 push	 eax
  00507	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0050c	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN48@helicopter:
  00516	b9 01 00 00 00	 mov	 ecx, 1
  0051b	85 c9		 test	 ecx, ecx
  0051d	74 0c		 je	 SHORT $LN49@helicopter
  0051f	c7 85 48 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv272[ebp], 147 ; 00000093H
  00529	eb 24		 jmp	 SHORT $LN50@helicopter
$LN49@helicopter:
  0052b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00531	83 c2 6b	 add	 edx, 107		; 0000006bH
  00534	52		 push	 edx
  00535	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0053f	50		 push	 eax
  00540	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00545	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN50@helicopter:
  0054f	51		 push	 ecx
  00550	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _speed$[ebp]
  00555	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055a	68 93 00 00 00	 push	 147			; 00000093H
  0055f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00562	51		 push	 ecx
  00563	69 95 4c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv264[ebp], 700
  0056d	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv272[ebp]
  00573	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  0057a	ff d1		 call	 ecx

; 534  : 
; 535  : 	//
; 536  : 	// check if aircraft has hit the floor
; 537  : 	//
; 538  : 
; 539  : 	terrain_elevation = get_3d_terrain_point_data_elevation (&raw->ac.terrain_info);

  0057c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0057f	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00584	50		 push	 eax
  00585	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  0058a	d9 5d dc	 fstp	 DWORD PTR _terrain_elevation$[ebp]

; 540  : 
; 541  : 	terrain_class = get_terrain_type_class (get_3d_terrain_point_data_type (&raw->ac.terrain_info));

  0058d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00590	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00595	50		 push	 eax
  00596	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  0059b	50		 push	 eax
  0059c	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  005a1	89 45 c0	 mov	 DWORD PTR _terrain_class$[ebp], eax

; 542  : 
; 543  : 	altitude = new_pos.y - (terrain_elevation + get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE));

  005a4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  005a8	74 0d		 je	 SHORT $LN51@helicopter
  005aa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  005af	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv294[ebp], ecx
  005b5	eb 24		 jmp	 SHORT $LN52@helicopter
$LN51@helicopter:
  005b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  005bd	83 c2 75	 add	 edx, 117		; 00000075H
  005c0	52		 push	 edx
  005c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005cb	50		 push	 eax
  005cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d1	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv294[ebp], 0
$LN52@helicopter:
  005db	b9 01 00 00 00	 mov	 ecx, 1
  005e0	85 c9		 test	 ecx, ecx
  005e2	74 0c		 je	 SHORT $LN53@helicopter
  005e4	c7 85 48 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv302[ebp], 18 ; 00000012H
  005ee	eb 24		 jmp	 SHORT $LN54@helicopter
$LN53@helicopter:
  005f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  005f6	83 c2 75	 add	 edx, 117		; 00000075H
  005f9	52		 push	 edx
  005fa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00604	50		 push	 eax
  00605	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060a	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv302[ebp], 0
$LN54@helicopter:
  00614	6a 12		 push	 18			; 00000012H
  00616	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00619	51		 push	 ecx
  0061a	69 95 4c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv294[ebp], 700
  00624	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv302[ebp]
  0062a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00631	ff d1		 call	 ecx
  00633	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv864[ebp]
  00639	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR tv864[ebp]
  00641	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  00646	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _new_pos$[ebp+4]
  0064b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0064f	f3 0f 11 4d e8	 movss	 DWORD PTR _altitude$[ebp], xmm1

; 544  : 
; 545  : 	if (altitude <= 0.0)

  00654	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00659	0f 57 c9	 xorps	 xmm1, xmm1
  0065c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00660	0f 82 9e 08 00
	00		 jb	 $LN25@helicopter

; 546  : 	{
; 547  : 		if (get_comms_model() == COMMS_MODEL_SERVER)

  00666	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0066d	0f 85 d1 01 00
	00		 jne	 $LN15@helicopter

; 548  : 		{
; 549  : 			//
; 550  : 			// ensure that the aircraft is actually dead
; 551  : 			//
; 552  : 
; 553  : 			if (get_local_entity_int_value (en, INT_TYPE_ALIVE))

  00673	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00677	74 0d		 je	 SHORT $LN55@helicopter
  00679	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0067c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0067e	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv318[ebp], ecx
  00684	eb 20		 jmp	 SHORT $LN56@helicopter
$LN55@helicopter:
  00686	68 29 02 00 00	 push	 553			; 00000229H
  0068b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00690	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00696	52		 push	 edx
  00697	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0069c	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv318[ebp], 0
$LN56@helicopter:
  006a6	b8 01 00 00 00	 mov	 eax, 1
  006ab	85 c0		 test	 eax, eax
  006ad	74 0c		 je	 SHORT $LN57@helicopter
  006af	c7 85 48 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv325[ebp], 7
  006b9	eb 20		 jmp	 SHORT $LN58@helicopter
$LN57@helicopter:
  006bb	68 29 02 00 00	 push	 553			; 00000229H
  006c0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  006c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006cb	51		 push	 ecx
  006cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006d1	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv325[ebp], 0
$LN58@helicopter:
  006db	6a 07		 push	 7
  006dd	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  006e0	52		 push	 edx
  006e1	69 85 4c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv318[ebp], 1116
  006eb	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv325[ebp]
  006f1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006f8	ff d2		 call	 edx
  006fa	85 c0		 test	 eax, eax
  006fc	74 56		 je	 SHORT $LN13@helicopter

; 554  : 			{
; 555  : 				kill_client_server_entity (en);

  006fe	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00702	74 0d		 je	 SHORT $LN59@helicopter
  00704	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00707	8b 08		 mov	 ecx, DWORD PTR [eax]
  00709	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv338[ebp], ecx
  0070f	eb 27		 jmp	 SHORT $LN60@helicopter
$LN59@helicopter:
  00711	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00717	81 c2 81 00 00
	00		 add	 edx, 129		; 00000081H
  0071d	52		 push	 edx
  0071e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00723	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00728	50		 push	 eax
  00729	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0072e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv338[ebp], 0
$LN60@helicopter:
  00738	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0073b	51		 push	 ecx
  0073c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00742	c1 e2 02	 shl	 edx, 2
  00745	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv338[ebp]
  0074b	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00752	ff d1		 call	 ecx
$LN13@helicopter:

; 556  : 			}
; 557  : 
; 558  : 			if (pos->y > old_terrain_elevation)

  00754	8b 45 d4	 mov	 eax, DWORD PTR _pos$[ebp]
  00757	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0075c	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _old_terrain_elevation$[ebp]
  00760	0f 86 de 00 00
	00		 jbe	 $LN15@helicopter

; 559  : 			{
; 560  : 				//
; 561  : 				// aircraft has hit the terrain this frame - create a "splash"
; 562  : 				//
; 563  : 
; 564  : 				vec3d
; 565  : 					temp_pos;
; 566  : 
; 567  : 				temp_pos.x = new_pos.x;

  00766	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _new_pos$[ebp]
  0076b	f3 0f 11 45 b4	 movss	 DWORD PTR _temp_pos$6[ebp], xmm0

; 568  : 				temp_pos.y = terrain_elevation;

  00770	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  00775	f3 0f 11 45 b8	 movss	 DWORD PTR _temp_pos$6[ebp+4], xmm0

; 569  : 				temp_pos.z = new_pos.z;

  0077a	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_pos$[ebp+8]
  0077f	f3 0f 11 45 bc	 movss	 DWORD PTR _temp_pos$6[ebp+8], xmm0

; 570  : 
; 571  : 				set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &temp_pos);

  00784	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00788	74 0d		 je	 SHORT $LN61@helicopter
  0078a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0078d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0078f	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv352[ebp], ecx
  00795	eb 27		 jmp	 SHORT $LN62@helicopter
$LN61@helicopter:
  00797	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  0079d	81 c2 91 00 00
	00		 add	 edx, 145		; 00000091H
  007a3	52		 push	 edx
  007a4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ae	50		 push	 eax
  007af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007b4	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv352[ebp], 0
$LN62@helicopter:
  007be	b9 01 00 00 00	 mov	 ecx, 1
  007c3	85 c9		 test	 ecx, ecx
  007c5	74 0c		 je	 SHORT $LN63@helicopter
  007c7	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv360[ebp], 8
  007d1	eb 27		 jmp	 SHORT $LN64@helicopter
$LN63@helicopter:
  007d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  007d9	81 c2 91 00 00
	00		 add	 edx, 145		; 00000091H
  007df	52		 push	 edx
  007e0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  007ea	50		 push	 eax
  007eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007f0	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv360[ebp], 0
$LN64@helicopter:
  007fa	8d 4d b4	 lea	 ecx, DWORD PTR _temp_pos$6[ebp]
  007fd	51		 push	 ecx
  007fe	6a 08		 push	 8
  00800	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00803	52		 push	 edx
  00804	6b 85 4c ff ff
	ff 60		 imul	 eax, DWORD PTR tv352[ebp], 96
  0080b	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv360[ebp]
  00811	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00818	ff d2		 call	 edx

; 572  : 
; 573  : 				create_client_server_object_hit_ground_explosion_effect (en, get_3d_terrain_point_data_type (&raw->ac.terrain_info));

  0081a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0081d	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00822	50		 push	 eax
  00823	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  00828	50		 push	 eax
  00829	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0082c	51		 push	 ecx
  0082d	e8 00 00 00 00	 call	 ?create_client_server_object_hit_ground_explosion_effect@@YGXPAUENTITY@@H@Z ; create_client_server_object_hit_ground_explosion_effect

; 574  : 
; 575  : 				//
; 576  : 				// stop any engine noise
; 577  : 				//
; 578  : 
; 579  : 				if (get_comms_model() == COMMS_MODEL_SERVER)

  00832	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00839	75 09		 jne	 SHORT $LN15@helicopter

; 580  : 				{
; 581  : 					kill_helicopter_rotor_sound_effects (en);

  0083b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0083e	50		 push	 eax
  0083f	e8 00 00 00 00	 call	 ?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z ; kill_helicopter_rotor_sound_effects
$LN15@helicopter:

; 582  : 				}
; 583  : 			}
; 584  : 		}
; 585  : 
; 586  : 		if (terrain_class == TERRAIN_CLASS_WATER)

  00844	83 7d c0 01	 cmp	 DWORD PTR _terrain_class$[ebp], 1
  00848	0f 85 ce 03 00
	00		 jne	 $LN16@helicopter

; 587  : 		{
; 588  : 			//////////////////////////////////////////
; 589  : 			//
; 590  : 			// AIRCRAFT IS BELOW GROUND AND IN WATER
; 591  : 			//
; 592  : 			//////////////////////////////////////////
; 593  : 
; 594  : 			//
; 595  : 			// kill any fires that may be burning
; 596  : 			//
; 597  : 
; 598  : 			clear_smoke_list_generator_lifetime (en, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_FIRE);

  0084e	6a 04		 push	 4
  00850	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00853	50		 push	 eax
  00854	e8 00 00 00 00	 call	 ?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z ; clear_smoke_list_generator_lifetime

; 599  : 			clear_smoke_list_generator_lifetime (en, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_EXPLOSION_TRAIL);

  00859	6a 03		 push	 3
  0085b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0085e	50		 push	 eax
  0085f	e8 00 00 00 00	 call	 ?clear_smoke_list_generator_lifetime@@YGHPAUENTITY@@H@Z ; clear_smoke_list_generator_lifetime

; 600  : 
; 601  : 			//
; 602  : 			// no lateral movement below ground
; 603  : 			//
; 604  : 
; 605  : 			new_pos.x = pos->x;

  00864	8b 45 d4	 mov	 eax, DWORD PTR _pos$[ebp]
  00867	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0086b	f3 0f 11 45 c4	 movss	 DWORD PTR _new_pos$[ebp], xmm0

; 606  : 			new_pos.z = pos->z;

  00870	8b 45 d4	 mov	 eax, DWORD PTR _pos$[ebp]
  00873	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00878	f3 0f 11 45 cc	 movss	 DWORD PTR _new_pos$[ebp+8], xmm0

; 607  : 
; 608  : 			switch (get_3d_terrain_point_data_type (&raw->ac.terrain_info))

  0087d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00880	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00885	50		 push	 eax
  00886	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  0088b	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv385[ebp], eax
  00891	83 bd 4c ff ff
	ff 07		 cmp	 DWORD PTR tv385[ebp], 7
  00898	74 05		 je	 SHORT $LN18@helicopter
  0089a	e9 e8 01 00 00	 jmp	 $LN20@helicopter
$LN18@helicopter:

; 609  : 			{
; 610  : 				case TERRAIN_TYPE_SEA:
; 611  : 				{
; 612  : 					//
; 613  : 					// aircraft has landed in the sea
; 614  : 					//
; 615  : 
; 616  : 					struct OBJECT_3D_BOUNDS
; 617  : 						*bounding_box;
; 618  : 
; 619  : 					vec3d
; 620  : 						d;
; 621  : 
; 622  : 					bounding_box = get_object_3d_bounding_box (get_local_entity_int_value (en, INT_TYPE_OBJECT_3D_SHAPE));

  0089f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  008a3	74 0d		 je	 SHORT $LN65@helicopter
  008a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  008aa	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv393[ebp], ecx
  008b0	eb 27		 jmp	 SHORT $LN66@helicopter
$LN65@helicopter:
  008b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  008b8	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  008be	52		 push	 edx
  008bf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  008c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008c9	50		 push	 eax
  008ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008cf	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv393[ebp], 0
$LN66@helicopter:
  008d9	b9 01 00 00 00	 mov	 ecx, 1
  008de	85 c9		 test	 ecx, ecx
  008e0	74 0c		 je	 SHORT $LN67@helicopter
  008e2	c7 85 48 ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv401[ebp], 146 ; 00000092H
  008ec	eb 27		 jmp	 SHORT $LN68@helicopter
$LN67@helicopter:
  008ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  008f4	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  008fa	52		 push	 edx
  008fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00900	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00905	50		 push	 eax
  00906	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0090b	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv401[ebp], 0
$LN68@helicopter:
  00915	68 92 00 00 00	 push	 146			; 00000092H
  0091a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0091d	51		 push	 ecx
  0091e	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv393[ebp], 1116
  00928	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv401[ebp]
  0092e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00935	ff d1		 call	 ecx
  00937	50		 push	 eax
  00938	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box
  0093d	89 45 b0	 mov	 DWORD PTR _bounding_box$5[ebp], eax

; 623  : 
; 624  : 					d.x = bounding_box->xmax - bounding_box->xmin;

  00940	8b 45 b0	 mov	 eax, DWORD PTR _bounding_box$5[ebp]
  00943	8b 4d b0	 mov	 ecx, DWORD PTR _bounding_box$5[ebp]
  00946	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0094b	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0094f	f3 0f 11 45 a4	 movss	 DWORD PTR _d$4[ebp], xmm0

; 625  : 					d.y = bounding_box->ymax - bounding_box->ymin;

  00954	8b 45 b0	 mov	 eax, DWORD PTR _bounding_box$5[ebp]
  00957	8b 4d b0	 mov	 ecx, DWORD PTR _bounding_box$5[ebp]
  0095a	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0095f	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00964	f3 0f 11 45 a8	 movss	 DWORD PTR _d$4[ebp+4], xmm0

; 626  : 					d.z = bounding_box->zmax - bounding_box->zmin;

  00969	8b 45 b0	 mov	 eax, DWORD PTR _bounding_box$5[ebp]
  0096c	8b 4d b0	 mov	 ecx, DWORD PTR _bounding_box$5[ebp]
  0096f	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00974	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00979	f3 0f 11 45 ac	 movss	 DWORD PTR _d$4[ebp+8], xmm0

; 627  : 
; 628  : 					if (altitude < -(get_3d_vector_magnitude (&d) * 0.5))

  0097e	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00983	8d 45 a4	 lea	 eax, DWORD PTR _d$4[ebp]
  00986	50		 push	 eax
  00987	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv1101[ebp], xmm0
  0098f	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00994	dd 9d 40 ff ff
	ff		 fstp	 QWORD PTR tv939[ebp]
  0099a	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv939[ebp]
  009a2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  009aa	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  009b1	f2 0f 10 8d 48
	ff ff ff	 movsd	 xmm1, QWORD PTR tv1101[ebp]
  009b9	66 0f 2f c1	 comisd	 xmm0, xmm1
  009bd	0f 86 bf 00 00
	00		 jbe	 $LN19@helicopter

; 629  : 					{
; 630  : 						//
; 631  : 						// aircraft is no longer visible
; 632  : 						//
; 633  : 
; 634  : 						raw->main_rotor_rpm = 0.0;

  009c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  009c6	0f 57 c0	 xorps	 xmm0, xmm0
  009c9	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0

; 635  : 
; 636  : 						raw->tail_rotor_rpm = 0.0;

  009d1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  009d4	0f 57 c0	 xorps	 xmm0, xmm0
  009d7	f3 0f 11 80 a8
	01 00 00	 movss	 DWORD PTR [eax+424], xmm0

; 637  : 
; 638  : 						clear_helicopter_velocity (en);

  009df	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009e2	50		 push	 eax
  009e3	e8 00 00 00 00	 call	 ?clear_helicopter_velocity@@YGXPAUENTITY@@@Z ; clear_helicopter_velocity

; 639  : 
; 640  : 						set_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_DEAD);

  009e8	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009ec	74 0d		 je	 SHORT $LN69@helicopter
  009ee	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  009f3	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv434[ebp], ecx
  009f9	eb 27		 jmp	 SHORT $LN70@helicopter
$LN69@helicopter:
  009fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00a01	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  00a07	52		 push	 edx
  00a08	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a12	50		 push	 eax
  00a13	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a18	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv434[ebp], 0
$LN70@helicopter:
  00a22	b9 01 00 00 00	 mov	 ecx, 1
  00a27	85 c9		 test	 ecx, ecx
  00a29	74 0c		 je	 SHORT $LN71@helicopter
  00a2b	c7 85 48 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv442[ebp], 151 ; 00000097H
  00a35	eb 27		 jmp	 SHORT $LN72@helicopter
$LN71@helicopter:
  00a37	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00a3d	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  00a43	52		 push	 edx
  00a44	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a49	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a4e	50		 push	 eax
  00a4f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a54	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv442[ebp], 0
$LN72@helicopter:
  00a5e	6a 02		 push	 2
  00a60	68 97 00 00 00	 push	 151			; 00000097H
  00a65	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00a68	51		 push	 ecx
  00a69	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv434[ebp], 1116
  00a73	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv442[ebp]
  00a79	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00a80	ff d1		 call	 ecx
$LN19@helicopter:

; 641  : 					}
; 642  : 
; 643  : 					break;

  00a82	e9 90 01 00 00	 jmp	 $LN2@helicopter
$LN20@helicopter:

; 644  : 				}
; 645  : 				default:
; 646  : 				{
; 647  : 					//
; 648  : 					// aircraft has landed in a river / lake
; 649  : 					//
; 650  : 
; 651  : 					if (altitude < -RIVER_DEPTH)

  00a87	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  00a8f	0f 2f 45 e8	 comiss	 xmm0, DWORD PTR _altitude$[ebp]
  00a93	0f 86 7e 01 00
	00		 jbe	 $LN21@helicopter

; 652  : 					{
; 653  : 						new_pos.y = terrain_elevation + get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  00a99	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a9d	74 0d		 je	 SHORT $LN73@helicopter
  00a9f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00aa2	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aa4	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv455[ebp], ecx
  00aaa	eb 27		 jmp	 SHORT $LN74@helicopter
$LN73@helicopter:
  00aac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00ab2	81 c2 e3 00 00
	00		 add	 edx, 227		; 000000e3H
  00ab8	52		 push	 edx
  00ab9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00abe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ac3	50		 push	 eax
  00ac4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ac9	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv455[ebp], 0
$LN74@helicopter:
  00ad3	b9 01 00 00 00	 mov	 ecx, 1
  00ad8	85 c9		 test	 ecx, ecx
  00ada	74 0c		 je	 SHORT $LN75@helicopter
  00adc	c7 85 48 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv463[ebp], 18 ; 00000012H
  00ae6	eb 27		 jmp	 SHORT $LN76@helicopter
$LN75@helicopter:
  00ae8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00aee	81 c2 e3 00 00
	00		 add	 edx, 227		; 000000e3H
  00af4	52		 push	 edx
  00af5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00afa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00aff	50		 push	 eax
  00b00	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b05	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv463[ebp], 0
$LN76@helicopter:
  00b0f	6a 12		 push	 18			; 00000012H
  00b11	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00b14	51		 push	 ecx
  00b15	69 95 4c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv455[ebp], 700
  00b1f	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv463[ebp]
  00b25	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00b2c	ff d1		 call	 ecx
  00b2e	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv969[ebp]
  00b34	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR tv969[ebp]
  00b3c	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  00b41	f3 0f 11 45 c8	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 654  : 
; 655  : 						new_pos.y -= RIVER_DEPTH;

  00b46	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _new_pos$[ebp+4]
  00b4b	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40400000
  00b53	f3 0f 11 45 c8	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 656  : 
; 657  : 						raw->main_rotor_rpm = 0.0;

  00b58	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00b5b	0f 57 c0	 xorps	 xmm0, xmm0
  00b5e	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0

; 658  : 
; 659  : 						raw->tail_rotor_rpm = 0.0;

  00b66	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00b69	0f 57 c0	 xorps	 xmm0, xmm0
  00b6c	f3 0f 11 80 a8
	01 00 00	 movss	 DWORD PTR [eax+424], xmm0

; 660  : 
; 661  : 						clear_helicopter_velocity (en);

  00b74	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b77	50		 push	 eax
  00b78	e8 00 00 00 00	 call	 ?clear_helicopter_velocity@@YGXPAUENTITY@@@Z ; clear_helicopter_velocity

; 662  : 
; 663  : 						set_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_DEAD);

  00b7d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b81	74 0d		 je	 SHORT $LN77@helicopter
  00b83	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b86	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b88	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv480[ebp], ecx
  00b8e	eb 27		 jmp	 SHORT $LN78@helicopter
$LN77@helicopter:
  00b90	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00b96	81 c2 ed 00 00
	00		 add	 edx, 237		; 000000edH
  00b9c	52		 push	 edx
  00b9d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ba2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ba7	50		 push	 eax
  00ba8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bad	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv480[ebp], 0
$LN78@helicopter:
  00bb7	b9 01 00 00 00	 mov	 ecx, 1
  00bbc	85 c9		 test	 ecx, ecx
  00bbe	74 0c		 je	 SHORT $LN79@helicopter
  00bc0	c7 85 48 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv488[ebp], 151 ; 00000097H
  00bca	eb 27		 jmp	 SHORT $LN80@helicopter
$LN79@helicopter:
  00bcc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00bd2	81 c2 ed 00 00
	00		 add	 edx, 237		; 000000edH
  00bd8	52		 push	 edx
  00bd9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bde	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00be3	50		 push	 eax
  00be4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00be9	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv488[ebp], 0
$LN80@helicopter:
  00bf3	6a 02		 push	 2
  00bf5	68 97 00 00 00	 push	 151			; 00000097H
  00bfa	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00bfd	51		 push	 ecx
  00bfe	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv480[ebp], 1116
  00c08	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv488[ebp]
  00c0e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00c15	ff d1		 call	 ecx
$LN21@helicopter:
$LN2@helicopter:

; 664  : 					}
; 665  : 				}
; 666  : 			}
; 667  : 		}
; 668  : 		else if (terrain_class == TERRAIN_CLASS_FOREST)

  00c17	e9 e8 02 00 00	 jmp	 $LN25@helicopter
$LN16@helicopter:
  00c1c	83 7d c0 02	 cmp	 DWORD PTR _terrain_class$[ebp], 2
  00c20	0f 85 e8 01 00
	00		 jne	 $LN22@helicopter

; 669  : 		{
; 670  : 			//////////////////////////////////////////
; 671  : 			//
; 672  : 			// AIRCRAFT HAS HIT FOREST
; 673  : 			//
; 674  : 			//////////////////////////////////////////
; 675  : 
; 676  : 			//
; 677  : 			// keep moving until the aircraft is obscured
; 678  : 			//
; 679  : 
; 680  : 			{
; 681  : 				struct OBJECT_3D_BOUNDS
; 682  : 					*bounding_box;
; 683  : 
; 684  : 				vec3d
; 685  : 					d;
; 686  : 
; 687  : 				bounding_box = get_object_3d_bounding_box (get_local_entity_int_value (en, INT_TYPE_OBJECT_3D_SHAPE));

  00c26	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00c2a	74 0d		 je	 SHORT $LN81@helicopter
  00c2c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c2f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c31	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv503[ebp], ecx
  00c37	eb 27		 jmp	 SHORT $LN82@helicopter
$LN81@helicopter:
  00c39	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00c3f	81 c2 05 01 00
	00		 add	 edx, 261		; 00000105H
  00c45	52		 push	 edx
  00c46	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c4b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c50	50		 push	 eax
  00c51	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c56	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv503[ebp], 0
$LN82@helicopter:
  00c60	b9 01 00 00 00	 mov	 ecx, 1
  00c65	85 c9		 test	 ecx, ecx
  00c67	74 0c		 je	 SHORT $LN83@helicopter
  00c69	c7 85 48 ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv511[ebp], 146 ; 00000092H
  00c73	eb 27		 jmp	 SHORT $LN84@helicopter
$LN83@helicopter:
  00c75	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00c7b	81 c2 05 01 00
	00		 add	 edx, 261		; 00000105H
  00c81	52		 push	 edx
  00c82	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c87	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c8c	50		 push	 eax
  00c8d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c92	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv511[ebp], 0
$LN84@helicopter:
  00c9c	68 92 00 00 00	 push	 146			; 00000092H
  00ca1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00ca4	51		 push	 ecx
  00ca5	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv503[ebp], 1116
  00caf	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv511[ebp]
  00cb5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00cbc	ff d1		 call	 ecx
  00cbe	50		 push	 eax
  00cbf	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box
  00cc4	89 45 a0	 mov	 DWORD PTR _bounding_box$3[ebp], eax

; 688  : 
; 689  : 				d.x = bounding_box->xmax - bounding_box->xmin;

  00cc7	8b 45 a0	 mov	 eax, DWORD PTR _bounding_box$3[ebp]
  00cca	8b 4d a0	 mov	 ecx, DWORD PTR _bounding_box$3[ebp]
  00ccd	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00cd2	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00cd6	f3 0f 11 45 94	 movss	 DWORD PTR _d$2[ebp], xmm0

; 690  : 				d.y = bounding_box->ymax - bounding_box->ymin;

  00cdb	8b 45 a0	 mov	 eax, DWORD PTR _bounding_box$3[ebp]
  00cde	8b 4d a0	 mov	 ecx, DWORD PTR _bounding_box$3[ebp]
  00ce1	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00ce6	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00ceb	f3 0f 11 45 98	 movss	 DWORD PTR _d$2[ebp+4], xmm0

; 691  : 				d.z = bounding_box->zmax - bounding_box->zmin;

  00cf0	8b 45 a0	 mov	 eax, DWORD PTR _bounding_box$3[ebp]
  00cf3	8b 4d a0	 mov	 ecx, DWORD PTR _bounding_box$3[ebp]
  00cf6	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00cfb	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00d00	f3 0f 11 45 9c	 movss	 DWORD PTR _d$2[ebp+8], xmm0

; 692  : 
; 693  : 				if (altitude < -(get_3d_vector_magnitude (&d) * 0.5))

  00d05	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00d0a	8d 45 94	 lea	 eax, DWORD PTR _d$2[ebp]
  00d0d	50		 push	 eax
  00d0e	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv1103[ebp], xmm0
  00d16	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00d1b	dd 9d 40 ff ff
	ff		 fstp	 QWORD PTR tv1013[ebp]
  00d21	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv1013[ebp]
  00d29	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00d31	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  00d38	f2 0f 10 8d 48
	ff ff ff	 movsd	 xmm1, QWORD PTR tv1103[ebp]
  00d40	66 0f 2f c1	 comisd	 xmm0, xmm1
  00d44	0f 86 bf 00 00
	00		 jbe	 $LN24@helicopter

; 694  : 				{
; 695  : 					//
; 696  : 					// aircraft is no longer visible
; 697  : 					//
; 698  : 
; 699  : 					raw->main_rotor_rpm = 0.0;

  00d4a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00d4d	0f 57 c0	 xorps	 xmm0, xmm0
  00d50	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0

; 700  : 
; 701  : 					raw->tail_rotor_rpm = 0.0;

  00d58	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00d5b	0f 57 c0	 xorps	 xmm0, xmm0
  00d5e	f3 0f 11 80 a8
	01 00 00	 movss	 DWORD PTR [eax+424], xmm0

; 702  : 
; 703  : 					clear_helicopter_velocity (en);

  00d66	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d69	50		 push	 eax
  00d6a	e8 00 00 00 00	 call	 ?clear_helicopter_velocity@@YGXPAUENTITY@@@Z ; clear_helicopter_velocity

; 704  : 
; 705  : 					set_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_DEAD);

  00d6f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d73	74 0d		 je	 SHORT $LN85@helicopter
  00d75	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d78	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d7a	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv576[ebp], ecx
  00d80	eb 27		 jmp	 SHORT $LN86@helicopter
$LN85@helicopter:
  00d82	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00d88	81 c2 17 01 00
	00		 add	 edx, 279		; 00000117H
  00d8e	52		 push	 edx
  00d8f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d94	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d99	50		 push	 eax
  00d9a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d9f	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv576[ebp], 0
$LN86@helicopter:
  00da9	b9 01 00 00 00	 mov	 ecx, 1
  00dae	85 c9		 test	 ecx, ecx
  00db0	74 0c		 je	 SHORT $LN87@helicopter
  00db2	c7 85 48 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv584[ebp], 151 ; 00000097H
  00dbc	eb 27		 jmp	 SHORT $LN88@helicopter
$LN87@helicopter:
  00dbe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00dc4	81 c2 17 01 00
	00		 add	 edx, 279		; 00000117H
  00dca	52		 push	 edx
  00dcb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00dd5	50		 push	 eax
  00dd6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ddb	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv584[ebp], 0
$LN88@helicopter:
  00de5	6a 02		 push	 2
  00de7	68 97 00 00 00	 push	 151			; 00000097H
  00dec	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00def	51		 push	 ecx
  00df0	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv576[ebp], 1116
  00dfa	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv584[ebp]
  00e00	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00e07	ff d1		 call	 ecx
$LN24@helicopter:

; 706  : 				}
; 707  : 			}
; 708  : 		}
; 709  : 		else

  00e09	e9 f6 00 00 00	 jmp	 $LN25@helicopter
$LN22@helicopter:

; 710  : 		{
; 711  : 			//////////////////////////////////////////
; 712  : 			//
; 713  : 			// AIRCRAFT HAS HIT SOLID GROUND
; 714  : 			//
; 715  : 			//////////////////////////////////////////
; 716  : 
; 717  : 			new_pos.y = terrain_elevation + get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  00e0e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00e12	74 0d		 je	 SHORT $LN89@helicopter
  00e14	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00e17	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e19	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv596[ebp], ecx
  00e1f	eb 27		 jmp	 SHORT $LN90@helicopter
$LN89@helicopter:
  00e21	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00e27	81 c2 23 01 00
	00		 add	 edx, 291		; 00000123H
  00e2d	52		 push	 edx
  00e2e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e33	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e38	50		 push	 eax
  00e39	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e3e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv596[ebp], 0
$LN90@helicopter:
  00e48	b9 01 00 00 00	 mov	 ecx, 1
  00e4d	85 c9		 test	 ecx, ecx
  00e4f	74 0c		 je	 SHORT $LN91@helicopter
  00e51	c7 85 48 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv604[ebp], 18 ; 00000012H
  00e5b	eb 27		 jmp	 SHORT $LN92@helicopter
$LN91@helicopter:
  00e5d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  00e63	81 c2 23 01 00
	00		 add	 edx, 291		; 00000123H
  00e69	52		 push	 edx
  00e6a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e6f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00e74	50		 push	 eax
  00e75	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e7a	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv604[ebp], 0
$LN92@helicopter:
  00e84	6a 12		 push	 18			; 00000012H
  00e86	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00e89	51		 push	 ecx
  00e8a	69 95 4c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv596[ebp], 700
  00e94	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv604[ebp]
  00e9a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00ea1	ff d1		 call	 ecx
  00ea3	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv1042[ebp]
  00ea9	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR tv1042[ebp]
  00eb1	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  00eb6	f3 0f 11 45 c8	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 718  : 
; 719  : 			//
; 720  : 			// crash sound effect
; 721  : 			//
; 722  : 
; 723  : 			if (get_comms_model () == COMMS_MODEL_SERVER)

  00ebb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00ec2	75 40		 jne	 SHORT $LN25@helicopter

; 724  : 			{
; 725  : 				sound_sample_indices
; 726  : 					sound_sample_index;
; 727  : 
; 728  : 				sound_sample_index = SOUND_SAMPLE_INDEX_HELICOPTER_CRASH;

  00ec4	c7 45 90 52 00
	00 00		 mov	 DWORD PTR _sound_sample_index$1[ebp], 82 ; 00000052H

; 729  : 
; 730  : 				create_client_server_sound_effect_entity

  00ecb	8d 45 90	 lea	 eax, DWORD PTR _sound_sample_index$1[ebp]
  00ece	50		 push	 eax
  00ecf	6a 01		 push	 1
  00ed1	6a 00		 push	 0
  00ed3	6a 01		 push	 1
  00ed5	51		 push	 ecx
  00ed6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ede	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ee3	51		 push	 ecx
  00ee4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00eec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ef1	6a 00		 push	 0
  00ef3	6a 00		 push	 0
  00ef5	6a 00		 push	 0
  00ef7	6a 1a		 push	 26			; 0000001aH
  00ef9	6a 00		 push	 0
  00efb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00efe	51		 push	 ecx
  00eff	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN25@helicopter:

; 731  : 				(
; 732  : 					en,
; 733  : 					ENTITY_SIDE_NEUTRAL,
; 734  : 					ENTITY_SUB_TYPE_EFFECT_SOUND_MISC,
; 735  : 					SOUND_CHANNEL_SOUND_EFFECT,
; 736  : 					SOUND_LOCALITY_ALL,
; 737  : 					NULL,												// position
; 738  : 					1.0,												// amplification
; 739  : 					1.0,												// Werewolf pitch
; 740  : 					TRUE,												// valid sound effect
; 741  : 					FALSE,											// looping
; 742  : 					1,													// sample count
; 743  : 					&sound_sample_index							// sample index list
; 744  : 				);
; 745  : 			}
; 746  : 		}
; 747  : 	}
; 748  : 
; 749  : 	//
; 750  : 	// update attitude
; 751  : 	//
; 752  : 
; 753  : 	heading = get_heading_from_attitude_matrix (raw->ac.mob.attitude);

  00f04	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f09	d1 e0		 shl	 eax, 1
  00f0b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00f0e	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00f12	b8 04 00 00 00	 mov	 eax, 4
  00f17	d1 e0		 shl	 eax, 1
  00f19	51		 push	 ecx
  00f1a	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00f1f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f24	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00f29	d1 e1		 shl	 ecx, 1
  00f2b	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00f2e	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00f32	b9 04 00 00 00	 mov	 ecx, 4
  00f37	6b d1 00	 imul	 edx, ecx, 0
  00f3a	51		 push	 ecx
  00f3b	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00f40	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f45	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00f4a	d9 5d f8	 fstp	 DWORD PTR _heading$[ebp]

; 754  : 
; 755  : 	pitch = get_pitch_from_attitude_matrix (raw->ac.mob.attitude);

  00f4d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f52	d1 e0		 shl	 eax, 1
  00f54	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00f57	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00f5b	b8 04 00 00 00	 mov	 eax, 4
  00f60	c1 e0 00	 shl	 eax, 0
  00f63	51		 push	 ecx
  00f64	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00f69	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f6e	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  00f73	d9 5d f4	 fstp	 DWORD PTR _pitch$[ebp]

; 756  : 
; 757  : 	roll = get_roll_from_attitude_matrix (raw->ac.mob.attitude);

  00f76	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f7b	c1 e0 00	 shl	 eax, 0
  00f7e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00f81	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00f85	b8 04 00 00 00	 mov	 eax, 4
  00f8a	c1 e0 00	 shl	 eax, 0
  00f8d	51		 push	 ecx
  00f8e	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00f93	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f98	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00f9d	6b d1 00	 imul	 edx, ecx, 0
  00fa0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00fa3	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00fa7	ba 04 00 00 00	 mov	 edx, 4
  00fac	c1 e2 00	 shl	 edx, 0
  00faf	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00fb4	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00fbb	51		 push	 ecx
  00fbc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fc1	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00fc6	d9 5d f0	 fstp	 DWORD PTR _roll$[ebp]

; 758  : 
; 759  : 	heading += (PI * 0.4 * get_entity_movement_delta_time());

  00fc9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00fd1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff41b2f80000000
  00fd9	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _heading$[ebp]
  00fde	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00fe2	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00fe6	f3 0f 11 45 f8	 movss	 DWORD PTR _heading$[ebp], xmm0

; 760  : 
; 761  : 	pitch -= (pitch * 0.25 * get_entity_movement_delta_time());

  00feb	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _pitch$[ebp]
  00ff0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00ff8	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  01000	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  01004	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _pitch$[ebp]
  01009	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0100d	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  01011	f3 0f 11 45 f4	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 762  : 
; 763  : 	roll -= (roll * 0.25 * get_entity_movement_delta_time());

  01016	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  0101b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd0000000000000
  01023	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0102b	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0102f	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _roll$[ebp]
  01034	f2 0f 5c c8	 subsd	 xmm1, xmm0
  01038	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0103c	f3 0f 11 45 f0	 movss	 DWORD PTR _roll$[ebp], xmm0

; 764  : 
; 765  : 	get_3d_transformation_matrix (raw->ac.mob.attitude, heading, pitch, roll);

  01041	51		 push	 ecx
  01042	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _roll$[ebp]
  01047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0104c	51		 push	 ecx
  0104d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  01052	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01057	51		 push	 ecx
  01058	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0105d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01062	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  01065	83 c0 10	 add	 eax, 16			; 00000010H
  01068	50		 push	 eax
  01069	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 766  : 
; 767  : 	//
; 768  : 	// set new position
; 769  : 	//
; 770  : 
; 771  : 	set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &new_pos);

  0106e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  01072	74 0d		 je	 SHORT $LN93@helicopter
  01074	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  01077	8b 08		 mov	 ecx, DWORD PTR [eax]
  01079	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv700[ebp], ecx
  0107f	eb 27		 jmp	 SHORT $LN94@helicopter
$LN93@helicopter:
  01081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  01087	81 c2 59 01 00
	00		 add	 edx, 345		; 00000159H
  0108d	52		 push	 edx
  0108e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  01093	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01098	50		 push	 eax
  01099	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0109e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv700[ebp], 0
$LN94@helicopter:
  010a8	b9 01 00 00 00	 mov	 ecx, 1
  010ad	85 c9		 test	 ecx, ecx
  010af	74 0c		 je	 SHORT $LN95@helicopter
  010b1	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv708[ebp], 8
  010bb	eb 27		 jmp	 SHORT $LN96@helicopter
$LN95@helicopter:
  010bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_death_movement@@YGXPAUENTITY@@@Z@4JA
  010c3	81 c2 59 01 00
	00		 add	 edx, 345		; 00000159H
  010c9	52		 push	 edx
  010ca	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  010cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  010d4	50		 push	 eax
  010d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010da	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv708[ebp], 0
$LN96@helicopter:
  010e4	8d 4d c4	 lea	 ecx, DWORD PTR _new_pos$[ebp]
  010e7	51		 push	 ecx
  010e8	6a 08		 push	 8
  010ea	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  010ed	52		 push	 edx
  010ee	6b 85 4c ff ff
	ff 60		 imul	 eax, DWORD PTR tv700[ebp], 96
  010f5	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv708[ebp]
  010fb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  01102	ff d2		 call	 edx
$LN1@helicopter:

; 772  : }

  01104	5f		 pop	 edi
  01105	5e		 pop	 esi
  01106	5b		 pop	 ebx
  01107	8b e5		 mov	 esp, ebp
  01109	5d		 pop	 ebp
  0110a	c2 04 00	 ret	 4
?helicopter_death_movement@@YGXPAUENTITY@@@Z ENDP	; helicopter_death_movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_move.c
;	COMDAT ?helicopter_movement@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv1173 = -336						; size = 4
tv1464 = -332						; size = 4
tv1167 = -328						; size = 4
tv231 = -328						; size = 4
tv1462 = -324						; size = 8
tv1440 = -324						; size = 8
tv1433 = -324						; size = 8
tv1426 = -324						; size = 8
tv1326 = -324						; size = 8
tv911 = -324						; size = 4
tv805 = -324						; size = 4
tv795 = -324						; size = 4
tv722 = -324						; size = 4
tv698 = -324						; size = 4
tv648 = -324						; size = 4
tv628 = -324						; size = 4
tv608 = -324						; size = 4
tv587 = -324						; size = 4
tv568 = -324						; size = 4
tv549 = -324						; size = 4
tv524 = -324						; size = 4
tv503 = -324						; size = 4
tv484 = -324						; size = 4
tv456 = -324						; size = 4
tv437 = -324						; size = 4
tv376 = -324						; size = 4
tv362 = -324						; size = 4
tv356 = -324						; size = 4
tv318 = -324						; size = 4
tv225 = -324						; size = 4
tv186 = -324						; size = 4
tv154 = -324						; size = 4
tv134 = -324						; size = 4
tv81 = -324						; size = 4
tv903 = -320						; size = 4
tv806 = -320						; size = 4
tv787 = -320						; size = 4
tv714 = -320						; size = 4
tv690 = -320						; size = 4
tv641 = -320						; size = 4
tv620 = -320						; size = 4
tv600 = -320						; size = 4
tv580 = -320						; size = 4
tv561 = -320						; size = 4
tv541 = -320						; size = 4
tv516 = -320						; size = 4
tv496 = -320						; size = 4
tv477 = -320						; size = 4
tv449 = -320						; size = 4
tv430 = -320						; size = 4
tv377 = -320						; size = 4
tv363 = -320						; size = 4
tv357 = -320						; size = 4
tv319 = -320						; size = 4
tv218 = -320						; size = 4
tv178 = -320						; size = 4
tv146 = -320						; size = 4
tv94 = -320						; size = 4
tv73 = -320						; size = 4
$T1 = -316						; size = 4
$T2 = -312						; size = 4
$T3 = -308						; size = 4
$T4 = -304						; size = 4
$T5 = -300						; size = 4
$T6 = -296						; size = 4
$T7 = -292						; size = 4
$T8 = -288						; size = 4
$T9 = -284						; size = 4
$T10 = -280						; size = 8
$T11 = -272						; size = 8
$T12 = -264						; size = 4
$T13 = -260						; size = 4
$T14 = -256						; size = 4
_raw$ = -188						; size = 4
_world_acceleration_vector$ = -184			; size = 12
_model_acceleration_vector$ = -172			; size = 12
_model_motion_vector$ = -160				; size = 12
_normalised_wp_vec$ = -148				; size = 12
_hc_pos$ = -136						; size = 4
_wp_vel$ = -132						; size = 12
_wp_pos$ = -120						; size = 12
_wp_vec$ = -108						; size = 12
_desired_pitch$ = -96					; size = 4
_desired_roll$ = -92					; size = 4
_range_scaler$ = -88					; size = 4
_max_vel$ = -84						; size = 4
_range$ = -80						; size = 4
_height$ = -76						; size = 4
_max_z_vel$ = -72					; size = 4
_max_y_vel$ = -68					; size = 4
_max_x_vel$ = -64					; size = 4
_desired_heading$ = -60					; size = 4
_delta_heading$ = -56					; size = 4
_new_roll$ = -52					; size = 4
_new_pitch$ = -48					; size = 4
_new_heading$ = -44					; size = 4
_current_heading$ = -40					; size = 4
_current_roll$ = -36					; size = 4
_current_pitch$ = -32					; size = 4
_speed$ = -28						; size = 4
_lift$ = -24						; size = 4
_maxx$ = -20						; size = 4
_member$ = -16						; size = 4
_group$ = -12						; size = 4
_guide$ = -8						; size = 4
_wp$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_movement@@YGXPAUENTITY@@@Z PROC		; helicopter_movement, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 137  : 	entity
; 138  : 		*wp,
; 139  : 		*guide,
; 140  : 		*group,
; 141  : 		*member;
; 142  : 
; 143  : 	float
; 144  : 		maxx,
; 145  : 		lift,
; 146  : 		speed,
; 147  : 		current_pitch,
; 148  : 		current_roll,
; 149  : 		current_heading,
; 150  : 		new_heading,
; 151  : 		new_pitch,
; 152  : 		new_roll,
; 153  : 		delta_heading,
; 154  : 		desired_heading;
; 155  : 
; 156  : 	float
; 157  : 		max_x_vel,
; 158  : 		max_y_vel,
; 159  : 		max_z_vel,
; 160  : 		height,
; 161  : 		range,
; 162  : 		max_vel,
; 163  : 		range_scaler,
; 164  : 		desired_roll,
; 165  : 		desired_pitch;
; 166  : 
; 167  : 	vec3d
; 168  : 		wp_vec,
; 169  : 		wp_pos,
; 170  : 		wp_vel,
; 171  : 		*hc_pos,
; 172  : 		normalised_wp_vec,
; 173  : 		model_motion_vector,
; 174  : 		model_acceleration_vector,
; 175  : 		world_acceleration_vector;
; 176  : 
; 177  : 	helicopter
; 178  : 		*raw;
; 179  : 
; 180  : 	#ifdef DEBUG
; 181  : 
; 182  : 	if (en == get_external_view_entity ())

  0000c	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00011	39 45 08	 cmp	 DWORD PTR _en$[ebp], eax
  00014	75 0a		 jne	 SHORT $LN6@helicopter

; 183  : 	{
; 184  : 
; 185  : 		// Put breakpoint here to debug external-view-entity
; 186  : 		raw = NULL;

  00016	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _raw$[ebp], 0
$LN6@helicopter:

; 187  : 	}
; 188  : 
; 189  : 	#endif
; 190  : 
; 191  : 	raw = (helicopter *) get_local_entity_data (en);

  00020	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _raw$[ebp], ecx

; 192  : 
; 193  : 	//
; 194  : 	// abort if the mobile has no current guide
; 195  : 	//
; 196  : 
; 197  : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  0002c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00030	74 0d		 je	 SHORT $LN27@helicopter
  00032	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv73[ebp], ecx
  0003d	eb 24		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00045	83 c2 3d	 add	 edx, 61			; 0000003dH
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
$LN28@helicopter:
  00063	b9 01 00 00 00	 mov	 ecx, 1
  00068	85 c9		 test	 ecx, ecx
  0006a	74 0c		 je	 SHORT $LN29@helicopter
  0006c	c7 85 bc fe ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv81[ebp], 13	; 0000000dH
  00076	eb 24		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  00078	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  0007e	83 c2 3d	 add	 edx, 61			; 0000003dH
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00092	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN30@helicopter:
  0009c	6a 0d		 push	 13			; 0000000dH
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a1	51		 push	 ecx
  000a2	69 95 c0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv73[ebp], 180
  000ac	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv81[ebp]
  000b2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000b9	ff d1		 call	 ecx
  000bb	89 45 f8	 mov	 DWORD PTR _guide$[ebp], eax

; 198  : 
; 199  : 	if (!guide)

  000be	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000c2	75 05		 jne	 SHORT $LN7@helicopter

; 200  : 	{
; 201  : 		return;

  000c4	e9 9d 16 00 00	 jmp	 $LN1@helicopter
$LN7@helicopter:

; 202  : 	}
; 203  : 
; 204  : 	wp = get_local_entity_parent (guide, LIST_TYPE_CURRENT_WAYPOINT);

  000c9	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000cd	74 0d		 je	 SHORT $LN31@helicopter
  000cf	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], ecx
  000da	eb 24		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  000e2	83 c2 44	 add	 edx, 68			; 00000044H
  000e5	52		 push	 edx
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f6	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN32@helicopter:
  00100	b9 01 00 00 00	 mov	 ecx, 1
  00105	85 c9		 test	 ecx, ecx
  00107	74 0c		 je	 SHORT $LN33@helicopter
  00109	c7 85 bc fe ff
	ff 09 00 00 00	 mov	 DWORD PTR tv134[ebp], 9
  00113	eb 24		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  00115	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  0011b	83 c2 44	 add	 edx, 68			; 00000044H
  0011e	52		 push	 edx
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012f	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN34@helicopter:
  00139	6a 09		 push	 9
  0013b	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  0013e	51		 push	 ecx
  0013f	69 95 c0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv94[ebp], 180
  00149	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  0014f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00156	ff d1		 call	 ecx
  00158	89 45 fc	 mov	 DWORD PTR _wp$[ebp], eax

; 205  : 
; 206  : 	//
; 207  : 	//
; 208  : 	//
; 209  : 
; 210  : 	hc_pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0015b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0015f	74 0d		 je	 SHORT $LN35@helicopter
  00161	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00164	8b 08		 mov	 ecx, DWORD PTR [eax]
  00166	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv146[ebp], ecx
  0016c	eb 24		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  0016e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00174	83 c2 4a	 add	 edx, 74			; 0000004aH
  00177	52		 push	 edx
  00178	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00182	50		 push	 eax
  00183	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00188	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN36@helicopter:
  00192	b9 01 00 00 00	 mov	 ecx, 1
  00197	85 c9		 test	 ecx, ecx
  00199	74 0c		 je	 SHORT $LN37@helicopter
  0019b	c7 85 bc fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv154[ebp], 8
  001a5	eb 24		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  001a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  001ad	83 c2 4a	 add	 edx, 74			; 0000004aH
  001b0	52		 push	 edx
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c1	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv154[ebp], 0
$LN38@helicopter:
  001cb	6a 08		 push	 8
  001cd	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001d0	51		 push	 ecx
  001d1	6b 95 c0 fe ff
	ff 60		 imul	 edx, DWORD PTR tv146[ebp], 96
  001d8	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv154[ebp]
  001de	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001e5	ff d1		 call	 ecx
  001e7	89 85 78 ff ff
	ff		 mov	 DWORD PTR _hc_pos$[ebp], eax

; 211  : 
; 212  : 	helicopter_movement_get_waypoint_position_and_velocity (en, &wp_pos, &wp_vel);

  001ed	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _wp_vel$[ebp]
  001f3	50		 push	 eax
  001f4	8d 4d 88	 lea	 ecx, DWORD PTR _wp_pos$[ebp]
  001f7	51		 push	 ecx
  001f8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001fb	52		 push	 edx
  001fc	e8 00 00 00 00	 call	 ?helicopter_movement_get_waypoint_position_and_velocity@@YGXPAUENTITY@@PAUVEC3D@@1@Z ; helicopter_movement_get_waypoint_position_and_velocity

; 213  : 
; 214  : 	wp_pos.y = max (wp_pos.y, get_3d_terrain_point_data_elevation (&raw->ac.terrain_info));

  00201	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  00207	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  00212	d9 9d 00 ff ff
	ff		 fstp	 DWORD PTR $T14[ebp]
  00218	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  0021e	51		 push	 ecx
  0021f	8d 55 8c	 lea	 edx, DWORD PTR _wp_pos$[ebp+4]
  00222	52		 push	 edx
  00223	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00228	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0022c	f3 0f 11 45 8c	 movss	 DWORD PTR _wp_pos$[ebp+4], xmm0

; 215  : 
; 216  : 	helicopter_adjust_waypoint_position_with_los (en, &wp_pos);

  00231	8d 45 88	 lea	 eax, DWORD PTR _wp_pos$[ebp]
  00234	50		 push	 eax
  00235	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00238	51		 push	 ecx
  00239	e8 00 00 00 00	 call	 ?helicopter_adjust_waypoint_position_with_los@@YGXPAUENTITY@@PAUVEC3D@@@Z ; helicopter_adjust_waypoint_position_with_los

; 217  : 
; 218  : 	range = get_local_entity_float_value (en, FLOAT_TYPE_DISTANCE);

  0023e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00242	74 0d		 je	 SHORT $LN39@helicopter
  00244	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00247	8b 08		 mov	 ecx, DWORD PTR [eax]
  00249	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv178[ebp], ecx
  0024f	eb 24		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  00251	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00257	83 c2 52	 add	 edx, 82			; 00000052H
  0025a	52		 push	 edx
  0025b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0026b	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN40@helicopter:
  00275	b9 01 00 00 00	 mov	 ecx, 1
  0027a	85 c9		 test	 ecx, ecx
  0027c	74 0c		 je	 SHORT $LN41@helicopter
  0027e	c7 85 bc fe ff
	ff 1f 00 00 00	 mov	 DWORD PTR tv186[ebp], 31 ; 0000001fH
  00288	eb 24		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  0028a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00290	83 c2 52	 add	 edx, 82			; 00000052H
  00293	52		 push	 edx
  00294	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a4	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv186[ebp], 0
$LN42@helicopter:
  002ae	6a 1f		 push	 31			; 0000001fH
  002b0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002b3	51		 push	 ecx
  002b4	69 95 c0 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv178[ebp], 700
  002be	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv186[ebp]
  002c4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002cb	ff d1		 call	 ecx
  002cd	d9 5d b0	 fstp	 DWORD PTR _range$[ebp]

; 219  : 
; 220  : 	height = helicopter_movement_altitude_follow (en, guide, &wp_pos);

  002d0	8d 45 88	 lea	 eax, DWORD PTR _wp_pos$[ebp]
  002d3	50		 push	 eax
  002d4	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  002d7	51		 push	 ecx
  002d8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002db	52		 push	 edx
  002dc	e8 00 00 00 00	 call	 ?helicopter_movement_altitude_follow@@YGMPAUENTITY@@0PAUVEC3D@@@Z ; helicopter_movement_altitude_follow
  002e1	d9 5d b4	 fstp	 DWORD PTR _height$[ebp]

; 221  : 
; 222  : 	// ramp vel from 0 to cruise_vel between 0m -> HELICOPTER_VELOCITY_RAMP_DISTANCE
; 223  : 	range_scaler = min ((range / HELICOPTER_VELOCITY_RAMP_DISTANCE), 1.0f);

  002e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002ec	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR $T13[ebp], xmm0
  002f4	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _range$[ebp]
  002f9	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@43fa0000
  00301	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR $T12[ebp], xmm0
  00309	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  0030f	50		 push	 eax
  00310	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00316	51		 push	 ecx
  00317	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0031c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00320	f3 0f 11 45 a8	 movss	 DWORD PTR _range_scaler$[ebp], xmm0

; 224  : 
; 225  : 	wp_vec.x = wp_pos.x - hc_pos->x;

  00325	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hc_pos$[ebp]
  0032b	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _wp_pos$[ebp]
  00330	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00334	f3 0f 11 45 94	 movss	 DWORD PTR _wp_vec$[ebp], xmm0

; 226  : 	wp_vec.y = wp_pos.y - hc_pos->y;

  00339	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hc_pos$[ebp]
  0033f	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _wp_pos$[ebp+4]
  00344	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00349	f3 0f 11 45 98	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 227  : 	wp_vec.z = wp_pos.z - hc_pos->z;

  0034e	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hc_pos$[ebp]
  00354	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _wp_pos$[ebp+8]
  00359	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0035e	f3 0f 11 45 9c	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0

; 228  : 
; 229  : 	// calcualte max_vel
; 230  : 	max_vel = aircraft_database [raw->ac.mob.sub_type].cruise_velocity;

  00363	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  00369	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  0036f	f3 0f 10 81 6c
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+108]
  00377	f3 0f 11 45 ac	 movss	 DWORD PTR _max_vel$[ebp], xmm0

; 231  : 
; 232  : 	switch (get_local_entity_int_value(wp, INT_TYPE_ENTITY_SUB_TYPE))

  0037c	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00380	74 0d		 je	 SHORT $LN43@helicopter
  00382	8b 45 fc	 mov	 eax, DWORD PTR _wp$[ebp]
  00385	8b 08		 mov	 ecx, DWORD PTR [eax]
  00387	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv218[ebp], ecx
  0038d	eb 20		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  0038f	68 e8 00 00 00	 push	 232			; 000000e8H
  00394	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00399	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0039f	52		 push	 edx
  003a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a5	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv218[ebp], 0
$LN44@helicopter:
  003af	b8 01 00 00 00	 mov	 eax, 1
  003b4	85 c0		 test	 eax, eax
  003b6	74 0c		 je	 SHORT $LN45@helicopter
  003b8	c7 85 bc fe ff
	ff 34 00 00 00	 mov	 DWORD PTR tv225[ebp], 52 ; 00000034H
  003c2	eb 20		 jmp	 SHORT $LN46@helicopter
$LN45@helicopter:
  003c4	68 e8 00 00 00	 push	 232			; 000000e8H
  003c9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003d4	51		 push	 ecx
  003d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003da	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv225[ebp], 0
$LN46@helicopter:
  003e4	6a 34		 push	 52			; 00000034H
  003e6	8b 55 fc	 mov	 edx, DWORD PTR _wp$[ebp]
  003e9	52		 push	 edx
  003ea	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv218[ebp], 1116
  003f4	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv225[ebp]
  003fa	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00401	ff d2		 call	 edx
  00403	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv231[ebp], eax
  00409	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv231[ebp]
  0040f	83 e8 02	 sub	 eax, 2
  00412	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv231[ebp], eax
  00418	83 bd b8 fe ff
	ff 1a		 cmp	 DWORD PTR tv231[ebp], 26 ; 0000001aH
  0041f	0f 87 84 00 00
	00		 ja	 $LN10@helicopter
  00425	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR tv231[ebp]
  0042b	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN127@helicopter[ecx]
  00432	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN128@helicopter[edx*4]
$LN8@helicopter:

; 233  : 	{
; 234  : 	case ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION:
; 235  : 	case ENTITY_SUB_TYPE_WAYPOINT_CAP_LOOP:
; 236  : 	case ENTITY_SUB_TYPE_WAYPOINT_CAP_START:
; 237  : 		break;

  00439	e9 9c 00 00 00	 jmp	 $LN2@helicopter
$LN9@helicopter:

; 238  : 	case ENTITY_SUB_TYPE_WAYPOINT_HOLDING:
; 239  : 	case ENTITY_SUB_TYPE_WAYPOINT_HOLDING_LOOP:
; 240  : 	case ENTITY_SUB_TYPE_WAYPOINT_TAXI:
; 241  : 		max_vel = min(max_vel * ((2.0 * range_scaler) - (range_scaler * range_scaler)), 15.0);

  0043e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@402e000000000000
  00446	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR $T11[ebp], xmm0
  0044e	f3 0f 5a 45 ac	 cvtss2sd xmm0, DWORD PTR _max_vel$[ebp]
  00453	f3 0f 5a 4d a8	 cvtss2sd xmm1, DWORD PTR _range_scaler$[ebp]
  00458	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00460	f3 0f 10 55 a8	 movss	 xmm2, DWORD PTR _range_scaler$[ebp]
  00465	f3 0f 59 55 a8	 mulss	 xmm2, DWORD PTR _range_scaler$[ebp]
  0046a	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  0046e	f2 0f 5c ca	 subsd	 xmm1, xmm2
  00472	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00476	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR $T10[ebp], xmm0
  0047e	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00484	50		 push	 eax
  00485	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  0048b	51		 push	 ecx
  0048c	e8 00 00 00 00	 call	 ??$min@N@std@@YGABNABN0@Z ; std::min<double>
  00491	f2 0f 5a 00	 cvtsd2ss xmm0, QWORD PTR [eax]
  00495	f3 0f 11 45 ac	 movss	 DWORD PTR _max_vel$[ebp], xmm0

; 242  : 		max_vel = 15.0;

  0049a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  004a2	f3 0f 11 45 ac	 movss	 DWORD PTR _max_vel$[ebp], xmm0

; 243  : 		break;

  004a7	eb 31		 jmp	 SHORT $LN2@helicopter
$LN10@helicopter:

; 244  : 	default:
; 245  : 		max_vel *= ((2.0 * range_scaler) - (range_scaler * range_scaler));

  004a9	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _range_scaler$[ebp]
  004ae	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  004b6	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _range_scaler$[ebp]
  004bb	f3 0f 59 4d a8	 mulss	 xmm1, DWORD PTR _range_scaler$[ebp]
  004c0	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  004c4	f2 0f 5c c1	 subsd	 xmm0, xmm1
  004c8	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _max_vel$[ebp]
  004cd	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  004d1	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  004d5	f3 0f 11 45 ac	 movss	 DWORD PTR _max_vel$[ebp], xmm0
$LN2@helicopter:

; 246  : 		break;
; 247  : 	}
; 248  : 
; 249  : 	// bound speeds to something realistic
; 250  : 	max_x_vel = 0.2 * aircraft_database [raw->ac.mob.sub_type].cruise_velocity;

  004da	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  004e0	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  004e6	f3 0f 5a 81 6c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+108]
  004ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  004f6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004fa	f3 0f 11 45 c0	 movss	 DWORD PTR _max_x_vel$[ebp], xmm0

; 251  : 	max_y_vel = 0.1 * aircraft_database [raw->ac.mob.sub_type].cruise_velocity;

  004ff	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  00505	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  0050b	f3 0f 5a 81 6c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+108]
  00513	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0051b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0051f	f3 0f 11 45 bc	 movss	 DWORD PTR _max_y_vel$[ebp], xmm0

; 252  : 	max_z_vel = 1.0 * aircraft_database [raw->ac.mob.sub_type].cruise_velocity;

  00524	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  0052a	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  00530	f3 0f 5a 81 6c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+108]
  00538	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00540	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00544	f3 0f 11 45 b8	 movss	 DWORD PTR _max_z_vel$[ebp], xmm0

; 253  : 
; 254  : 	normalise_any_3d_vector (&wp_vec);

  00549	8d 45 94	 lea	 eax, DWORD PTR _wp_vec$[ebp]
  0054c	50		 push	 eax
  0054d	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  00552	dd d8		 fstp	 ST(0)

; 255  : 
; 256  : 	// rotate into model space for speed bounding
; 257  : 	multiply_transpose_matrix3x3_vec3d (&wp_vec, raw->ac.mob.attitude, &wp_vec);

  00554	8d 45 94	 lea	 eax, DWORD PTR _wp_vec$[ebp]
  00557	50		 push	 eax
  00558	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  0055e	83 c1 10	 add	 ecx, 16			; 00000010H
  00561	51		 push	 ecx
  00562	8d 55 94	 lea	 edx, DWORD PTR _wp_vec$[ebp]
  00565	52		 push	 edx
  00566	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 258  : 
; 259  : 	normalised_wp_vec = wp_vec;

  0056b	8b 45 94	 mov	 eax, DWORD PTR _wp_vec$[ebp]
  0056e	89 85 6c ff ff
	ff		 mov	 DWORD PTR _normalised_wp_vec$[ebp], eax
  00574	8b 4d 98	 mov	 ecx, DWORD PTR _wp_vec$[ebp+4]
  00577	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _normalised_wp_vec$[ebp+4], ecx
  0057d	8b 55 9c	 mov	 edx, DWORD PTR _wp_vec$[ebp+8]
  00580	89 95 74 ff ff
	ff		 mov	 DWORD PTR _normalised_wp_vec$[ebp+8], edx

; 260  : 
; 261  : 	// get velocity vector to wp
; 262  : 	wp_vec.x *= max_vel;

  00586	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  0058b	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _max_vel$[ebp]
  00590	f3 0f 11 45 94	 movss	 DWORD PTR _wp_vec$[ebp], xmm0

; 263  : 	wp_vec.y *= max_vel;

  00595	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  0059a	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _max_vel$[ebp]
  0059f	f3 0f 11 45 98	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 264  : 	wp_vec.z *= max_vel;

  005a4	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  005a9	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _max_vel$[ebp]
  005ae	f3 0f 11 45 9c	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0

; 265  : 
; 266  : 	// limit max_velocity depending on required climb rate
; 267  : 	max_z_vel -= (max_z_vel * min ((max (height - hc_pos->y, 0.0f) / max_y_vel), 1.0f));

  005b3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005bb	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR $T9[ebp], xmm0
  005c3	0f 57 c0	 xorps	 xmm0, xmm0
  005c6	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR $T7[ebp], xmm0
  005ce	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hc_pos$[ebp]
  005d4	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _height$[ebp]
  005d9	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  005de	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR $T6[ebp], xmm0
  005e6	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  005ec	51		 push	 ecx
  005ed	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR $T6[ebp]
  005f3	52		 push	 edx
  005f4	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  005f9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005fd	f3 0f 5e 45 bc	 divss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00602	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR $T8[ebp], xmm0
  0060a	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  00610	50		 push	 eax
  00611	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00617	51		 push	 ecx
  00618	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0061d	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _max_z_vel$[ebp]
  00622	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  00626	f3 0f 10 4d b8	 movss	 xmm1, DWORD PTR _max_z_vel$[ebp]
  0062b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0062f	f3 0f 11 4d b8	 movss	 DWORD PTR _max_z_vel$[ebp], xmm1

; 268  : 	max_x_vel -= (max_x_vel * min ((max (height - hc_pos->y, 0.0f) / max_y_vel), 1.0f));

  00634	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0063c	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR $T5[ebp], xmm0
  00644	0f 57 c0	 xorps	 xmm0, xmm0
  00647	f3 0f 11 85 cc
	fe ff ff	 movss	 DWORD PTR $T3[ebp], xmm0
  0064f	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hc_pos$[ebp]
  00655	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _height$[ebp]
  0065a	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  0065f	f3 0f 11 85 c8
	fe ff ff	 movss	 DWORD PTR $T2[ebp], xmm0
  00667	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0066d	51		 push	 ecx
  0066e	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  00674	52		 push	 edx
  00675	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0067a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0067e	f3 0f 5e 45 bc	 divss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00683	f3 0f 11 85 d0
	fe ff ff	 movss	 DWORD PTR $T4[ebp], xmm0
  0068b	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00691	50		 push	 eax
  00692	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00698	51		 push	 ecx
  00699	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0069e	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _max_x_vel$[ebp]
  006a3	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  006a7	f3 0f 10 4d c0	 movss	 xmm1, DWORD PTR _max_x_vel$[ebp]
  006ac	f3 0f 5c c8	 subss	 xmm1, xmm0
  006b0	f3 0f 11 4d c0	 movss	 DWORD PTR _max_x_vel$[ebp], xmm1

; 269  : 
; 270  : 	// limit forward acceleration depending on climb demand
; 271  : 
; 272  : 	wp_vec.x = bound (wp_vec.x, -max_x_vel, max_x_vel);

  006b5	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _max_x_vel$[ebp]
  006ba	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  006c1	0f 2f 45 94	 comiss	 xmm0, DWORD PTR _wp_vec$[ebp]
  006c5	76 16		 jbe	 SHORT $LN49@helicopter
  006c7	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _max_x_vel$[ebp]
  006cc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  006d3	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv319[ebp], xmm0
  006db	eb 37		 jmp	 SHORT $LN50@helicopter
$LN49@helicopter:
  006dd	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  006e2	0f 2f 45 c0	 comiss	 xmm0, DWORD PTR _max_x_vel$[ebp]
  006e6	76 0f		 jbe	 SHORT $LN47@helicopter
  006e8	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _max_x_vel$[ebp]
  006ed	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv318[ebp], xmm0
  006f5	eb 0d		 jmp	 SHORT $LN48@helicopter
$LN47@helicopter:
  006f7	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  006fc	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv318[ebp], xmm0
$LN48@helicopter:
  00704	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR tv318[ebp]
  0070c	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv319[ebp], xmm0
$LN50@helicopter:
  00714	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR tv319[ebp]
  0071c	f3 0f 11 45 94	 movss	 DWORD PTR _wp_vec$[ebp], xmm0

; 273  : 	wp_vec.y = bound (wp_vec.y, -max_y_vel, max_y_vel);

  00721	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00726	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0072d	0f 2f 45 98	 comiss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  00731	76 16		 jbe	 SHORT $LN53@helicopter
  00733	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00738	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0073f	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv357[ebp], xmm0
  00747	eb 37		 jmp	 SHORT $LN54@helicopter
$LN53@helicopter:
  00749	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  0074e	0f 2f 45 bc	 comiss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00752	76 0f		 jbe	 SHORT $LN51@helicopter
  00754	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00759	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv356[ebp], xmm0
  00761	eb 0d		 jmp	 SHORT $LN52@helicopter
$LN51@helicopter:
  00763	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  00768	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv356[ebp], xmm0
$LN52@helicopter:
  00770	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR tv356[ebp]
  00778	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv357[ebp], xmm0
$LN54@helicopter:
  00780	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR tv357[ebp]
  00788	f3 0f 11 45 98	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 274  : 	wp_vec.z = bound (wp_vec.z, -max_z_vel, max_z_vel);

  0078d	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _max_z_vel$[ebp]
  00792	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00799	0f 2f 45 9c	 comiss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  0079d	76 16		 jbe	 SHORT $LN57@helicopter
  0079f	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _max_z_vel$[ebp]
  007a4	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007ab	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv363[ebp], xmm0
  007b3	eb 37		 jmp	 SHORT $LN58@helicopter
$LN57@helicopter:
  007b5	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  007ba	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _max_z_vel$[ebp]
  007be	76 0f		 jbe	 SHORT $LN55@helicopter
  007c0	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _max_z_vel$[ebp]
  007c5	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv362[ebp], xmm0
  007cd	eb 0d		 jmp	 SHORT $LN56@helicopter
$LN55@helicopter:
  007cf	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  007d4	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv362[ebp], xmm0
$LN56@helicopter:
  007dc	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR tv362[ebp]
  007e4	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv363[ebp], xmm0
$LN58@helicopter:
  007ec	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR tv363[ebp]
  007f4	f3 0f 11 45 9c	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0

; 275  : 
; 276  : 	// rotate back into world space
; 277  : 	multiply_matrix3x3_vec3d (&wp_vec, raw->ac.mob.attitude, &wp_vec);

  007f9	8d 45 94	 lea	 eax, DWORD PTR _wp_vec$[ebp]
  007fc	50		 push	 eax
  007fd	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  00803	83 c1 10	 add	 ecx, 16			; 00000010H
  00806	51		 push	 ecx
  00807	8d 55 94	 lea	 edx, DWORD PTR _wp_vec$[ebp]
  0080a	52		 push	 edx
  0080b	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 278  : 
; 279  : 	// add on required height for terrain avoidance
; 280  : 	wp_vec.y = (height - hc_pos->y);

  00810	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _hc_pos$[ebp]
  00816	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _height$[ebp]
  0081b	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00820	f3 0f 11 45 98	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 281  : 	wp_vec.y = bound (wp_vec.y, -max_y_vel, max_y_vel);

  00825	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  0082a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00831	0f 2f 45 98	 comiss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  00835	76 16		 jbe	 SHORT $LN61@helicopter
  00837	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  0083c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00843	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv377[ebp], xmm0
  0084b	eb 37		 jmp	 SHORT $LN62@helicopter
$LN61@helicopter:
  0084d	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  00852	0f 2f 45 bc	 comiss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  00856	76 0f		 jbe	 SHORT $LN59@helicopter
  00858	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _max_y_vel$[ebp]
  0085d	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv376[ebp], xmm0
  00865	eb 0d		 jmp	 SHORT $LN60@helicopter
$LN59@helicopter:
  00867	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  0086c	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv376[ebp], xmm0
$LN60@helicopter:
  00874	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR tv376[ebp]
  0087c	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv377[ebp], xmm0
$LN62@helicopter:
  00884	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR tv377[ebp]
  0088c	f3 0f 11 45 98	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 282  : 
; 283  : 	// add on the velocity of the wp (i.e. the speed it is moving)
; 284  : 	// don't add in Y-component as it causes the wingmen to crash into the floor if the player decends quickly
; 285  : 	wp_vec.x += wp_vel.x;

  00891	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  00896	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _wp_vel$[ebp]
  0089e	f3 0f 11 45 94	 movss	 DWORD PTR _wp_vec$[ebp], xmm0

; 286  : 	wp_vec.z += wp_vel.z;

  008a3	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  008a8	f3 0f 58 45 84	 addss	 xmm0, DWORD PTR _wp_vel$[ebp+8]
  008ad	f3 0f 11 45 9c	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0

; 287  : 
; 288  : 	#if DEBUG_MODULE
; 289  : 
; 290  : 	wp_pos.y = height;
; 291  : 
; 292  : 	debug_visuals (en, &wp_pos);
; 293  : 
; 294  : 	#endif
; 295  : 
; 296  : 	//
; 297  : 	//
; 298  : 	//
; 299  : 
; 300  : 	world_acceleration_vector.x = (wp_vec.x - raw->ac.mob.motion_vector.x) * 0.3;

  008b2	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  008b8	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  008bd	f3 0f 5c 40 34	 subss	 xmm0, DWORD PTR [eax+52]
  008c2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  008c6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  008ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008d2	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _world_acceleration_vector$[ebp], xmm0

; 301  : 	world_acceleration_vector.y = (wp_vec.y - raw->ac.mob.motion_vector.y) * 0.3;

  008da	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  008e0	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  008e5	f3 0f 5c 40 38	 subss	 xmm0, DWORD PTR [eax+56]
  008ea	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  008ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  008f6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008fa	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _world_acceleration_vector$[ebp+4], xmm0

; 302  : 	world_acceleration_vector.z = (wp_vec.z - raw->ac.mob.motion_vector.z) * 0.3;

  00902	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  00908	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  0090d	f3 0f 5c 40 3c	 subss	 xmm0, DWORD PTR [eax+60]
  00912	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00916	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  0091e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00922	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _world_acceleration_vector$[ebp+8], xmm0

; 303  : 
; 304  : 	//
; 305  : 	// Don't allow movement before rotors have spun up.
; 306  : 	//
; 307  : 
; 308  : 	// bodge for rotor rpm
; 309  : 	lift = (0.7 * aircraft_database [raw->ac.mob.sub_type].power_output) + (fabs (world_acceleration_vector.y) + fabs (world_acceleration_vector.z));

  0092a	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  00930	69 08 f4 00 00
	00		 imul	 ecx, DWORD PTR [eax], 244
  00936	f3 0f 5a 81 ac
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+172]
  0093e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00946	51		 push	 ecx
  00947	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _world_acceleration_vector$[ebp+4]
  0094f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00954	f2 0f 11 85 bc
	fe ff ff	 movsd	 QWORD PTR tv1462[ebp], xmm0
  0095c	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00961	d9 9d b8 fe ff
	ff		 fstp	 DWORD PTR tv1167[ebp]
  00967	f3 0f 10 85 b8
	fe ff ff	 movss	 xmm0, DWORD PTR tv1167[ebp]
  0096f	51		 push	 ecx
  00970	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _world_acceleration_vector$[ebp+8]
  00978	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0097d	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR tv1464[ebp], xmm0
  00985	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0098a	d9 9d b0 fe ff
	ff		 fstp	 DWORD PTR tv1173[ebp]
  00990	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR tv1464[ebp]
  00998	f3 0f 58 85 b0
	fe ff ff	 addss	 xmm0, DWORD PTR tv1173[ebp]
  009a0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  009a4	f2 0f 10 8d bc
	fe ff ff	 movsd	 xmm1, QWORD PTR tv1462[ebp]
  009ac	f2 0f 58 c8	 addsd	 xmm1, xmm0
  009b0	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  009b4	f3 0f 11 45 e8	 movss	 DWORD PTR _lift$[ebp], xmm0

; 310  : 
; 311  : 	helicopter_movement_calculate_rotor_rpm (en, lift);

  009b9	51		 push	 ecx
  009ba	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _lift$[ebp]
  009bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009c4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009c7	50		 push	 eax
  009c8	e8 00 00 00 00	 call	 ?helicopter_movement_calculate_rotor_rpm@@YGXPAUENTITY@@M@Z ; helicopter_movement_calculate_rotor_rpm

; 312  : 
; 313  : 	if ((raw->main_rotor_spin_up_timer > 0.0) &&

  009cd	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  009d3	f3 0f 5a 80 9c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+412]
  009db	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  009e3	0f 86 78 01 00
	00		 jbe	 $LN11@helicopter
  009e9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009ed	74 0d		 je	 SHORT $LN63@helicopter
  009ef	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  009f4	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv430[ebp], ecx
  009fa	eb 20		 jmp	 SHORT $LN64@helicopter
$LN63@helicopter:
  009fc	68 3a 01 00 00	 push	 314			; 0000013aH
  00a01	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a06	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a0c	52		 push	 edx
  00a0d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a12	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv430[ebp], 0
$LN64@helicopter:
  00a1c	b8 01 00 00 00	 mov	 eax, 1
  00a21	85 c0		 test	 eax, eax
  00a23	74 0c		 je	 SHORT $LN65@helicopter
  00a25	c7 85 bc fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv437[ebp], 156 ; 0000009cH
  00a2f	eb 20		 jmp	 SHORT $LN66@helicopter
$LN65@helicopter:
  00a31	68 3a 01 00 00	 push	 314			; 0000013aH
  00a36	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a3b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a41	51		 push	 ecx
  00a42	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a47	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv437[ebp], 0
$LN66@helicopter:
  00a51	68 9c 00 00 00	 push	 156			; 0000009cH
  00a56	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00a59	52		 push	 edx
  00a5a	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv430[ebp], 1116
  00a64	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv437[ebp]
  00a6a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a71	ff d2		 call	 edx
  00a73	85 c0		 test	 eax, eax
  00a75	0f 84 8b 00 00
	00		 je	 $LN12@helicopter
  00a7b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a7f	74 0d		 je	 SHORT $LN67@helicopter
  00a81	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a84	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a86	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv449[ebp], ecx
  00a8c	eb 20		 jmp	 SHORT $LN68@helicopter
$LN67@helicopter:
  00a8e	68 3b 01 00 00	 push	 315			; 0000013bH
  00a93	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a98	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a9e	52		 push	 edx
  00a9f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aa4	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv449[ebp], 0
$LN68@helicopter:
  00aae	b8 01 00 00 00	 mov	 eax, 1
  00ab3	85 c0		 test	 eax, eax
  00ab5	74 0c		 je	 SHORT $LN69@helicopter
  00ab7	c7 85 bc fe ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv456[ebp], 12 ; 0000000cH
  00ac1	eb 20		 jmp	 SHORT $LN70@helicopter
$LN69@helicopter:
  00ac3	68 3b 01 00 00	 push	 315			; 0000013bH
  00ac8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00acd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ad3	51		 push	 ecx
  00ad4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ad9	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv456[ebp], 0
$LN70@helicopter:
  00ae3	6a 0c		 push	 12			; 0000000cH
  00ae5	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00ae8	52		 push	 edx
  00ae9	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv449[ebp], 1116
  00af3	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv456[ebp]
  00af9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00b00	ff d2		 call	 edx
  00b02	85 c0		 test	 eax, eax
  00b04	74 5b		 je	 SHORT $LN11@helicopter
$LN12@helicopter:

; 314  : 		((get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI) ||
; 315  : 		 (get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT))))
; 316  : 	{
; 317  : 
; 318  : 		raw->main_rotor_spin_up_timer -= get_entity_movement_delta_time ();

  00b06	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  00b0c	f3 0f 10 80 9c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+412]
  00b14	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00b1c	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  00b22	f3 0f 11 81 9c
	01 00 00	 movss	 DWORD PTR [ecx+412], xmm0

; 319  : 
; 320  : 		raw->main_rotor_spin_up_timer = max (raw->main_rotor_spin_up_timer, 0.0f);

  00b2a	0f 57 c0	 xorps	 xmm0, xmm0
  00b2d	f3 0f 11 85 c4
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00b35	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00b3b	50		 push	 eax
  00b3c	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  00b42	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  00b48	51		 push	 ecx
  00b49	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00b4e	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _raw$[ebp]
  00b54	8b 00		 mov	 eax, DWORD PTR [eax]
  00b56	89 82 9c 01 00
	00		 mov	 DWORD PTR [edx+412], eax

; 321  : 
; 322  : 		return;

  00b5c	e9 05 0c 00 00	 jmp	 $LN1@helicopter
$LN11@helicopter:

; 323  : 	}
; 324  : 
; 325  : 	//
; 326  : 	// Make AI helicopters wait until all human helicopters in the group have taken off
; 327  : 	//
; 328  : 
; 329  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00b61	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00b68	0f 85 e1 04 00
	00		 jne	 $LN15@helicopter

; 330  : 	{
; 331  : 		if (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00b6e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b72	74 0d		 je	 SHORT $LN71@helicopter
  00b74	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b77	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b79	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv477[ebp], ecx
  00b7f	eb 20		 jmp	 SHORT $LN72@helicopter
$LN71@helicopter:
  00b81	68 4b 01 00 00	 push	 331			; 0000014bH
  00b86	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b8b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b91	52		 push	 edx
  00b92	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b97	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv477[ebp], 0
$LN72@helicopter:
  00ba1	b8 01 00 00 00	 mov	 eax, 1
  00ba6	85 c0		 test	 eax, eax
  00ba8	74 0c		 je	 SHORT $LN73@helicopter
  00baa	c7 85 bc fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv484[ebp], 156 ; 0000009cH
  00bb4	eb 20		 jmp	 SHORT $LN74@helicopter
$LN73@helicopter:
  00bb6	68 4b 01 00 00	 push	 331			; 0000014bH
  00bbb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bc0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00bc6	51		 push	 ecx
  00bc7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bcc	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv484[ebp], 0
$LN74@helicopter:
  00bd6	68 9c 00 00 00	 push	 156			; 0000009cH
  00bdb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00bde	52		 push	 edx
  00bdf	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv477[ebp], 1116
  00be9	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv484[ebp]
  00bef	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00bf6	ff d2		 call	 edx
  00bf8	85 c0		 test	 eax, eax
  00bfa	0f 85 4f 04 00
	00		 jne	 $LN15@helicopter

; 332  : 		{
; 333  : 			if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_LANDED)

  00c00	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00c04	74 0d		 je	 SHORT $LN75@helicopter
  00c06	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c09	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c0b	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv496[ebp], ecx
  00c11	eb 20		 jmp	 SHORT $LN76@helicopter
$LN75@helicopter:
  00c13	68 4d 01 00 00	 push	 333			; 0000014dH
  00c18	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c1d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c23	52		 push	 edx
  00c24	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c29	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv496[ebp], 0
$LN76@helicopter:
  00c33	b8 01 00 00 00	 mov	 eax, 1
  00c38	85 c0		 test	 eax, eax
  00c3a	74 0c		 je	 SHORT $LN77@helicopter
  00c3c	c7 85 bc fe ff
	ff 97 00 00 00	 mov	 DWORD PTR tv503[ebp], 151 ; 00000097H
  00c46	eb 20		 jmp	 SHORT $LN78@helicopter
$LN77@helicopter:
  00c48	68 4d 01 00 00	 push	 333			; 0000014dH
  00c4d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c52	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c58	51		 push	 ecx
  00c59	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c5e	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv503[ebp], 0
$LN78@helicopter:
  00c68	68 97 00 00 00	 push	 151			; 00000097H
  00c6d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00c70	52		 push	 edx
  00c71	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv496[ebp], 1116
  00c7b	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv503[ebp]
  00c81	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00c88	ff d2		 call	 edx
  00c8a	83 f8 04	 cmp	 eax, 4
  00c8d	0f 85 bc 03 00
	00		 jne	 $LN15@helicopter

; 334  : 			{
; 335  : 				group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00c93	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00c97	74 0d		 je	 SHORT $LN79@helicopter
  00c99	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c9c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c9e	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv516[ebp], ecx
  00ca4	eb 27		 jmp	 SHORT $LN80@helicopter
$LN79@helicopter:
  00ca6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00cac	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  00cb2	52		 push	 edx
  00cb3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cb8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cbd	50		 push	 eax
  00cbe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cc3	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv516[ebp], 0
$LN80@helicopter:
  00ccd	b9 01 00 00 00	 mov	 ecx, 1
  00cd2	85 c9		 test	 ecx, ecx
  00cd4	74 0c		 je	 SHORT $LN81@helicopter
  00cd6	c7 85 bc fe ff
	ff 19 00 00 00	 mov	 DWORD PTR tv524[ebp], 25 ; 00000019H
  00ce0	eb 27		 jmp	 SHORT $LN82@helicopter
$LN81@helicopter:
  00ce2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00ce8	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  00cee	52		 push	 edx
  00cef	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cf4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00cf9	50		 push	 eax
  00cfa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cff	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv524[ebp], 0
$LN82@helicopter:
  00d09	6a 19		 push	 25			; 00000019H
  00d0b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00d0e	51		 push	 ecx
  00d0f	69 95 c0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv516[ebp], 180
  00d19	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv524[ebp]
  00d1f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00d26	ff d1		 call	 ecx
  00d28	89 45 f4	 mov	 DWORD PTR _group$[ebp], eax

; 336  : 
; 337  : 				ASSERT (group);

  00d2b	83 7d f4 00	 cmp	 DWORD PTR _group$[ebp], 0
  00d2f	75 1a		 jne	 SHORT $LN16@helicopter
  00d31	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00d36	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  00d3b	50		 push	 eax
  00d3c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d41	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  00d46	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@helicopter:

; 338  : 
; 339  : 				member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  00d4b	83 7d f4 00	 cmp	 DWORD PTR _group$[ebp], 0
  00d4f	74 0d		 je	 SHORT $LN83@helicopter
  00d51	8b 45 f4	 mov	 eax, DWORD PTR _group$[ebp]
  00d54	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d56	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv541[ebp], ecx
  00d5c	eb 27		 jmp	 SHORT $LN84@helicopter
$LN83@helicopter:
  00d5e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00d64	81 c2 cb 00 00
	00		 add	 edx, 203		; 000000cbH
  00d6a	52		 push	 edx
  00d6b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d75	50		 push	 eax
  00d76	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d7b	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv541[ebp], 0
$LN84@helicopter:
  00d85	b9 01 00 00 00	 mov	 ecx, 1
  00d8a	85 c9		 test	 ecx, ecx
  00d8c	74 0c		 je	 SHORT $LN85@helicopter
  00d8e	c7 85 bc fe ff
	ff 19 00 00 00	 mov	 DWORD PTR tv549[ebp], 25 ; 00000019H
  00d98	eb 27		 jmp	 SHORT $LN86@helicopter
$LN85@helicopter:
  00d9a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00da0	81 c2 cb 00 00
	00		 add	 edx, 203		; 000000cbH
  00da6	52		 push	 edx
  00da7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00db1	50		 push	 eax
  00db2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00db7	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv549[ebp], 0
$LN86@helicopter:
  00dc1	6a 19		 push	 25			; 00000019H
  00dc3	8b 4d f4	 mov	 ecx, DWORD PTR _group$[ebp]
  00dc6	51		 push	 ecx
  00dc7	69 95 c0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv541[ebp], 180
  00dd1	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv549[ebp]
  00dd7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00dde	ff d1		 call	 ecx
  00de0	89 45 f0	 mov	 DWORD PTR _member$[ebp], eax
$LN4@helicopter:

; 340  : 
; 341  : 				while (member)

  00de3	83 7d f0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00de7	0f 84 bf 01 00
	00		 je	 $LN5@helicopter

; 342  : 				{
; 343  : 					if (get_local_entity_int_value (member, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00ded	83 7d f0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00df1	74 0d		 je	 SHORT $LN87@helicopter
  00df3	8b 45 f0	 mov	 eax, DWORD PTR _member$[ebp]
  00df6	8b 08		 mov	 ecx, DWORD PTR [eax]
  00df8	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv561[ebp], ecx
  00dfe	eb 20		 jmp	 SHORT $LN88@helicopter
$LN87@helicopter:
  00e00	68 57 01 00 00	 push	 343			; 00000157H
  00e05	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e0a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e10	52		 push	 edx
  00e11	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e16	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv561[ebp], 0
$LN88@helicopter:
  00e20	b8 01 00 00 00	 mov	 eax, 1
  00e25	85 c0		 test	 eax, eax
  00e27	74 0c		 je	 SHORT $LN89@helicopter
  00e29	c7 85 bc fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv568[ebp], 156 ; 0000009cH
  00e33	eb 20		 jmp	 SHORT $LN90@helicopter
$LN89@helicopter:
  00e35	68 57 01 00 00	 push	 343			; 00000157H
  00e3a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e3f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e45	51		 push	 ecx
  00e46	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e4b	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv568[ebp], 0
$LN90@helicopter:
  00e55	68 9c 00 00 00	 push	 156			; 0000009cH
  00e5a	8b 55 f0	 mov	 edx, DWORD PTR _member$[ebp]
  00e5d	52		 push	 edx
  00e5e	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv561[ebp], 1116
  00e68	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv568[ebp]
  00e6e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00e75	ff d2		 call	 edx
  00e77	85 c0		 test	 eax, eax
  00e79	0f 84 90 00 00
	00		 je	 $LN18@helicopter

; 344  : 					{
; 345  : 						if (!get_local_entity_int_value (member, INT_TYPE_AIRBORNE_AIRCRAFT))

  00e7f	83 7d f0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00e83	74 0d		 je	 SHORT $LN91@helicopter
  00e85	8b 45 f0	 mov	 eax, DWORD PTR _member$[ebp]
  00e88	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e8a	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv580[ebp], ecx
  00e90	eb 20		 jmp	 SHORT $LN92@helicopter
$LN91@helicopter:
  00e92	68 59 01 00 00	 push	 345			; 00000159H
  00e97	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e9c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ea2	52		 push	 edx
  00ea3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ea8	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv580[ebp], 0
$LN92@helicopter:
  00eb2	b8 01 00 00 00	 mov	 eax, 1
  00eb7	85 c0		 test	 eax, eax
  00eb9	74 0c		 je	 SHORT $LN93@helicopter
  00ebb	c7 85 bc fe ff
	ff 04 00 00 00	 mov	 DWORD PTR tv587[ebp], 4
  00ec5	eb 20		 jmp	 SHORT $LN94@helicopter
$LN93@helicopter:
  00ec7	68 59 01 00 00	 push	 345			; 00000159H
  00ecc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ed7	51		 push	 ecx
  00ed8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00edd	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv587[ebp], 0
$LN94@helicopter:
  00ee7	6a 04		 push	 4
  00ee9	8b 55 f0	 mov	 edx, DWORD PTR _member$[ebp]
  00eec	52		 push	 edx
  00eed	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv580[ebp], 1116
  00ef7	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv587[ebp]
  00efd	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00f04	ff d2		 call	 edx
  00f06	85 c0		 test	 eax, eax
  00f08	75 05		 jne	 SHORT $LN18@helicopter

; 346  : 						{
; 347  : 							return;

  00f0a	e9 57 08 00 00	 jmp	 $LN1@helicopter
$LN18@helicopter:

; 348  : 						}
; 349  : 					}
; 350  : 
; 351  : 					member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00f0f	83 7d f0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00f13	74 0d		 je	 SHORT $LN95@helicopter
  00f15	8b 45 f0	 mov	 eax, DWORD PTR _member$[ebp]
  00f18	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f1a	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv600[ebp], ecx
  00f20	eb 27		 jmp	 SHORT $LN96@helicopter
$LN95@helicopter:
  00f22	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00f28	81 c2 d7 00 00
	00		 add	 edx, 215		; 000000d7H
  00f2e	52		 push	 edx
  00f2f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f34	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f39	50		 push	 eax
  00f3a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f3f	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv600[ebp], 0
$LN96@helicopter:
  00f49	b9 01 00 00 00	 mov	 ecx, 1
  00f4e	85 c9		 test	 ecx, ecx
  00f50	74 0c		 je	 SHORT $LN97@helicopter
  00f52	c7 85 bc fe ff
	ff 19 00 00 00	 mov	 DWORD PTR tv608[ebp], 25 ; 00000019H
  00f5c	eb 27		 jmp	 SHORT $LN98@helicopter
$LN97@helicopter:
  00f5e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00f64	81 c2 d7 00 00
	00		 add	 edx, 215		; 000000d7H
  00f6a	52		 push	 edx
  00f6b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00f75	50		 push	 eax
  00f76	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f7b	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv608[ebp], 0
$LN98@helicopter:
  00f85	6a 19		 push	 25			; 00000019H
  00f87	8b 4d f0	 mov	 ecx, DWORD PTR _member$[ebp]
  00f8a	51		 push	 ecx
  00f8b	69 95 c0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv600[ebp], 180
  00f95	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv608[ebp]
  00f9b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00fa2	ff d1		 call	 ecx
  00fa4	89 45 f0	 mov	 DWORD PTR _member$[ebp], eax

; 352  : 				}

  00fa7	e9 37 fe ff ff	 jmp	 $LN4@helicopter
$LN5@helicopter:

; 353  : 
; 354  : 				set_client_server_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_TAKEOFF);

  00fac	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00fb0	74 0d		 je	 SHORT $LN99@helicopter
  00fb2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00fb5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fb7	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv620[ebp], ecx
  00fbd	eb 27		 jmp	 SHORT $LN100@helicopter
$LN99@helicopter:
  00fbf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  00fc5	81 c2 da 00 00
	00		 add	 edx, 218		; 000000daH
  00fcb	52		 push	 edx
  00fcc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fd1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00fd6	50		 push	 eax
  00fd7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fdc	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv620[ebp], 0
$LN100@helicopter:
  00fe6	b9 01 00 00 00	 mov	 ecx, 1
  00feb	85 c9		 test	 ecx, ecx
  00fed	74 0c		 je	 SHORT $LN101@helicopter
  00fef	c7 85 bc fe ff
	ff 97 00 00 00	 mov	 DWORD PTR tv628[ebp], 151 ; 00000097H
  00ff9	eb 27		 jmp	 SHORT $LN102@helicopter
$LN101@helicopter:
  00ffb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  01001	81 c2 da 00 00
	00		 add	 edx, 218		; 000000daH
  01007	52		 push	 edx
  01008	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0100d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01012	50		 push	 eax
  01013	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01018	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv628[ebp], 0
$LN102@helicopter:
  01022	6a 09		 push	 9
  01024	68 97 00 00 00	 push	 151			; 00000097H
  01029	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0102c	51		 push	 ecx
  0102d	69 95 c0 fe ff
	ff b8 08 00 00	 imul	 edx, DWORD PTR tv620[ebp], 2232
  01037	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv628[ebp]
  0103d	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  01044	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0104a	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0104d	ff d0		 call	 eax
$LN15@helicopter:

; 355  : 			}
; 356  : 		}
; 357  : 	}
; 358  : 
; 359  : 	if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_LANDED)

  0104f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  01053	74 0d		 je	 SHORT $LN103@helicopter
  01055	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  01058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0105a	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv641[ebp], ecx
  01060	eb 20		 jmp	 SHORT $LN104@helicopter
$LN103@helicopter:
  01062	68 67 01 00 00	 push	 359			; 00000167H
  01067	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0106c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01072	52		 push	 edx
  01073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01078	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv641[ebp], 0
$LN104@helicopter:
  01082	b8 01 00 00 00	 mov	 eax, 1
  01087	85 c0		 test	 eax, eax
  01089	74 0c		 je	 SHORT $LN105@helicopter
  0108b	c7 85 bc fe ff
	ff 97 00 00 00	 mov	 DWORD PTR tv648[ebp], 151 ; 00000097H
  01095	eb 20		 jmp	 SHORT $LN106@helicopter
$LN105@helicopter:
  01097	68 67 01 00 00	 push	 359			; 00000167H
  0109c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  010a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  010a7	51		 push	 ecx
  010a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010ad	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv648[ebp], 0
$LN106@helicopter:
  010b7	68 97 00 00 00	 push	 151			; 00000097H
  010bc	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  010bf	52		 push	 edx
  010c0	69 85 c0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv641[ebp], 1116
  010ca	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv648[ebp]
  010d0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  010d7	ff d2		 call	 edx
  010d9	83 f8 04	 cmp	 eax, 4
  010dc	75 05		 jne	 SHORT $LN19@helicopter

; 360  : 	{
; 361  : 		return;

  010de	e9 83 06 00 00	 jmp	 $LN1@helicopter
$LN19@helicopter:

; 362  : 	}
; 363  : 
; 364  : 	//
; 365  : 	// calculate the motion vector, in world coords
; 366  : 	//
; 367  : 
; 368  : 	raw->ac.mob.motion_vector.x += world_acceleration_vector.x * get_entity_movement_delta_time ();

  010e3	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _world_acceleration_vector$[ebp]
  010eb	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  010f3	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  010f9	f3 0f 58 40 34	 addss	 xmm0, DWORD PTR [eax+52]
  010fe	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  01104	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0

; 369  : 	raw->ac.mob.motion_vector.y = wp_vec.y;

  01109	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  0110f	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+4]
  01114	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 370  : 	raw->ac.mob.motion_vector.z += world_acceleration_vector.z * get_entity_movement_delta_time ();

  01119	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _world_acceleration_vector$[ebp+8]
  01121	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  01129	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  0112f	f3 0f 58 40 3c	 addss	 xmm0, DWORD PTR [eax+60]
  01134	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  0113a	f3 0f 11 41 3c	 movss	 DWORD PTR [ecx+60], xmm0

; 371  : 
; 372  : 	// set velocity
; 373  : 	speed = get_3d_vector_magnitude (&raw->ac.mob.motion_vector);

  0113f	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  01145	83 c0 34	 add	 eax, 52			; 00000034H
  01148	50		 push	 eax
  01149	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  0114e	d9 5d e4	 fstp	 DWORD PTR _speed$[ebp]

; 374  : 	set_local_entity_float_value (en, FLOAT_TYPE_VELOCITY, speed);

  01151	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  01155	74 0d		 je	 SHORT $LN107@helicopter
  01157	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0115a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0115c	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv690[ebp], ecx
  01162	eb 27		 jmp	 SHORT $LN108@helicopter
$LN107@helicopter:
  01164	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  0116a	81 c2 ee 00 00
	00		 add	 edx, 238		; 000000eeH
  01170	52		 push	 edx
  01171	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  01176	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0117b	50		 push	 eax
  0117c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01181	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv690[ebp], 0
$LN108@helicopter:
  0118b	b9 01 00 00 00	 mov	 ecx, 1
  01190	85 c9		 test	 ecx, ecx
  01192	74 0c		 je	 SHORT $LN109@helicopter
  01194	c7 85 bc fe ff
	ff 93 00 00 00	 mov	 DWORD PTR tv698[ebp], 147 ; 00000093H
  0119e	eb 27		 jmp	 SHORT $LN110@helicopter
$LN109@helicopter:
  011a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  011a6	81 c2 ee 00 00
	00		 add	 edx, 238		; 000000eeH
  011ac	52		 push	 edx
  011ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  011b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  011b7	50		 push	 eax
  011b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  011bd	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv698[ebp], 0
$LN110@helicopter:
  011c7	51		 push	 ecx
  011c8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _speed$[ebp]
  011cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011d2	68 93 00 00 00	 push	 147			; 00000093H
  011d7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  011da	51		 push	 ecx
  011db	69 95 c0 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv690[ebp], 700
  011e5	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv698[ebp]
  011eb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  011f2	ff d1		 call	 ecx

; 375  : 	if (fabs(speed) > 0.1)

  011f4	51		 push	 ecx
  011f5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _speed$[ebp]
  011fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011ff	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  01204	dd 9d bc fe ff
	ff		 fstp	 QWORD PTR tv1326[ebp]
  0120a	f2 0f 10 85 bc
	fe ff ff	 movsd	 xmm0, QWORD PTR tv1326[ebp]
  01212	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  0121a	0f 86 9a 00 00
	00		 jbe	 $LN20@helicopter

; 376  : 		set_local_entity_int_value(en, INT_TYPE_MOVED, TRUE);

  01220	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  01224	74 0d		 je	 SHORT $LN111@helicopter
  01226	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  01229	8b 08		 mov	 ecx, DWORD PTR [eax]
  0122b	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv714[ebp], ecx
  01231	eb 27		 jmp	 SHORT $LN112@helicopter
$LN111@helicopter:
  01233	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  01239	81 c2 f0 00 00
	00		 add	 edx, 240		; 000000f0H
  0123f	52		 push	 edx
  01240	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  01245	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0124a	50		 push	 eax
  0124b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01250	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv714[ebp], 0
$LN112@helicopter:
  0125a	b9 01 00 00 00	 mov	 ecx, 1
  0125f	85 c9		 test	 ecx, ecx
  01261	74 0c		 je	 SHORT $LN113@helicopter
  01263	c7 85 bc fe ff
	ff 8f 00 00 00	 mov	 DWORD PTR tv722[ebp], 143 ; 0000008fH
  0126d	eb 27		 jmp	 SHORT $LN114@helicopter
$LN113@helicopter:
  0126f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  01275	81 c2 f0 00 00
	00		 add	 edx, 240		; 000000f0H
  0127b	52		 push	 edx
  0127c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  01281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01286	50		 push	 eax
  01287	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0128c	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv722[ebp], 0
$LN114@helicopter:
  01296	6a 01		 push	 1
  01298	68 8f 00 00 00	 push	 143			; 0000008fH
  0129d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  012a0	51		 push	 ecx
  012a1	69 95 c0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv714[ebp], 1116
  012ab	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv722[ebp]
  012b1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  012b8	ff d1		 call	 ecx
$LN20@helicopter:

; 377  : 
; 378  : 	current_heading = get_heading_from_attitude_matrix (raw->ac.mob.attitude);

  012ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  012bf	d1 e0		 shl	 eax, 1
  012c1	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  012c7	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  012cb	b8 04 00 00 00	 mov	 eax, 4
  012d0	d1 e0		 shl	 eax, 1
  012d2	51		 push	 ecx
  012d3	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  012d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012dd	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  012e2	d1 e1		 shl	 ecx, 1
  012e4	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _raw$[ebp]
  012ea	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  012ee	b9 04 00 00 00	 mov	 ecx, 4
  012f3	6b d1 00	 imul	 edx, ecx, 0
  012f6	51		 push	 ecx
  012f7	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  012fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01301	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  01306	d9 5d d8	 fstp	 DWORD PTR _current_heading$[ebp]

; 379  : 	current_pitch = get_pitch_from_attitude_matrix (raw->ac.mob.attitude);

  01309	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0130e	d1 e0		 shl	 eax, 1
  01310	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  01316	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  0131a	b8 04 00 00 00	 mov	 eax, 4
  0131f	c1 e0 00	 shl	 eax, 0
  01322	51		 push	 ecx
  01323	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0132d	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  01332	d9 5d e0	 fstp	 DWORD PTR _current_pitch$[ebp]

; 380  : 	current_roll = get_roll_from_attitude_matrix (raw->ac.mob.attitude);

  01335	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0133a	c1 e0 00	 shl	 eax, 0
  0133d	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  01343	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  01347	b8 04 00 00 00	 mov	 eax, 4
  0134c	c1 e0 00	 shl	 eax, 0
  0134f	51		 push	 ecx
  01350	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01355	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0135a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0135f	6b d1 00	 imul	 edx, ecx, 0
  01362	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  01368	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  0136c	ba 04 00 00 00	 mov	 edx, 4
  01371	c1 e2 00	 shl	 edx, 0
  01374	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01379	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01380	51		 push	 ecx
  01381	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01386	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0138b	d9 5d dc	 fstp	 DWORD PTR _current_roll$[ebp]

; 381  : 
; 382  : 	// attitude
; 383  : 	desired_heading = helicopter_movement_get_desired_heading (en, &wp_vec, current_heading);

  0138e	51		 push	 ecx
  0138f	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _current_heading$[ebp]
  01394	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01399	8d 45 94	 lea	 eax, DWORD PTR _wp_vec$[ebp]
  0139c	50		 push	 eax
  0139d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  013a0	51		 push	 ecx
  013a1	e8 00 00 00 00	 call	 ?helicopter_movement_get_desired_heading@@YGMPAUENTITY@@PAUVEC3D@@M@Z ; helicopter_movement_get_desired_heading
  013a6	d9 5d c4	 fstp	 DWORD PTR _desired_heading$[ebp]

; 384  : 
; 385  : 	delta_heading = (desired_heading - current_heading);

  013a9	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _desired_heading$[ebp]
  013ae	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _current_heading$[ebp]
  013b3	f3 0f 11 45 c8	 movss	 DWORD PTR _delta_heading$[ebp], xmm0

; 386  : 
; 387  : 	if (delta_heading < -PI)

  013b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0490fdb
  013c0	0f 2f 45 c8	 comiss	 xmm0, DWORD PTR _delta_heading$[ebp]
  013c4	76 14		 jbe	 SHORT $LN21@helicopter

; 388  : 	{
; 389  : 
; 390  : 		delta_heading += PI2;

  013c6	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  013cb	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  013d3	f3 0f 11 45 c8	 movss	 DWORD PTR _delta_heading$[ebp], xmm0
  013d8	eb 20		 jmp	 SHORT $LN23@helicopter
$LN21@helicopter:

; 391  : 	}
; 392  : 	else if (delta_heading > PI)

  013da	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  013df	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@40490fdb
  013e6	76 12		 jbe	 SHORT $LN23@helicopter

; 393  : 	{
; 394  : 
; 395  : 		delta_heading -= PI2;

  013e8	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  013ed	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40c90fdb
  013f5	f3 0f 11 45 c8	 movss	 DWORD PTR _delta_heading$[ebp], xmm0
$LN23@helicopter:

; 396  : 	}
; 397  : 
; 398  : 	maxx = get_local_entity_float_value (en, FLOAT_TYPE_MAX_TURN_RATE);

  013fa	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  013fe	74 0d		 je	 SHORT $LN115@helicopter
  01400	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  01403	8b 08		 mov	 ecx, DWORD PTR [eax]
  01405	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv787[ebp], ecx
  0140b	eb 27		 jmp	 SHORT $LN116@helicopter
$LN115@helicopter:
  0140d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  01413	81 c2 06 01 00
	00		 add	 edx, 262		; 00000106H
  01419	52		 push	 edx
  0141a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0141f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01424	50		 push	 eax
  01425	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0142a	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv787[ebp], 0
$LN116@helicopter:
  01434	b9 01 00 00 00	 mov	 ecx, 1
  01439	85 c9		 test	 ecx, ecx
  0143b	74 0c		 je	 SHORT $LN117@helicopter
  0143d	c7 85 bc fe ff
	ff 4d 00 00 00	 mov	 DWORD PTR tv795[ebp], 77 ; 0000004dH
  01447	eb 27		 jmp	 SHORT $LN118@helicopter
$LN117@helicopter:
  01449	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  0144f	81 c2 06 01 00
	00		 add	 edx, 262		; 00000106H
  01455	52		 push	 edx
  01456	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0145b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01460	50		 push	 eax
  01461	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01466	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv795[ebp], 0
$LN118@helicopter:
  01470	6a 4d		 push	 77			; 0000004dH
  01472	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  01475	51		 push	 ecx
  01476	69 95 c0 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv787[ebp], 700
  01480	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv795[ebp]
  01486	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0148d	ff d1		 call	 ecx
  0148f	d9 5d ec	 fstp	 DWORD PTR _maxx$[ebp]

; 399  : 
; 400  : 	delta_heading = bound (delta_heading, -maxx, maxx);

  01492	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _maxx$[ebp]
  01497	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0149e	0f 2f 45 c8	 comiss	 xmm0, DWORD PTR _delta_heading$[ebp]
  014a2	76 16		 jbe	 SHORT $LN121@helicopter
  014a4	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _maxx$[ebp]
  014a9	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  014b0	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv806[ebp], xmm0
  014b8	eb 37		 jmp	 SHORT $LN122@helicopter
$LN121@helicopter:
  014ba	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  014bf	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _maxx$[ebp]
  014c3	76 0f		 jbe	 SHORT $LN119@helicopter
  014c5	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _maxx$[ebp]
  014ca	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv805[ebp], xmm0
  014d2	eb 0d		 jmp	 SHORT $LN120@helicopter
$LN119@helicopter:
  014d4	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  014d9	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR tv805[ebp], xmm0
$LN120@helicopter:
  014e1	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR tv805[ebp]
  014e9	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR tv806[ebp], xmm0
$LN122@helicopter:
  014f1	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR tv806[ebp]
  014f9	f3 0f 11 45 c8	 movss	 DWORD PTR _delta_heading$[ebp], xmm0

; 401  : 
; 402  : 	new_heading = current_heading + (delta_heading * get_entity_movement_delta_time ());

  014fe	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  01503	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0150b	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _current_heading$[ebp]
  01510	f3 0f 11 45 d4	 movss	 DWORD PTR _new_heading$[ebp], xmm0

; 403  : 
; 404  : 	multiply_transpose_matrix3x3_vec3d (&model_motion_vector, raw->ac.mob.attitude, &raw->ac.mob.motion_vector);

  01515	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  0151b	83 c0 34	 add	 eax, 52			; 00000034H
  0151e	50		 push	 eax
  0151f	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  01525	83 c1 10	 add	 ecx, 16			; 00000010H
  01528	51		 push	 ecx
  01529	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _model_motion_vector$[ebp]
  0152f	52		 push	 edx
  01530	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 405  : 	multiply_transpose_matrix3x3_vec3d (&model_acceleration_vector, raw->ac.mob.attitude, &world_acceleration_vector);

  01535	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _world_acceleration_vector$[ebp]
  0153b	50		 push	 eax
  0153c	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _raw$[ebp]
  01542	83 c1 10	 add	 ecx, 16			; 00000010H
  01545	51		 push	 ecx
  01546	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR _model_acceleration_vector$[ebp]
  0154c	52		 push	 edx
  0154d	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 406  : 
; 407  : 	desired_pitch = helicopter_movement_get_desired_pitch (en, &model_motion_vector, &model_acceleration_vector, NULL);

  01552	6a 00		 push	 0
  01554	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _model_acceleration_vector$[ebp]
  0155a	50		 push	 eax
  0155b	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _model_motion_vector$[ebp]
  01561	51		 push	 ecx
  01562	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  01565	52		 push	 edx
  01566	e8 00 00 00 00	 call	 ?helicopter_movement_get_desired_pitch@@YGMPAUENTITY@@PAUVEC3D@@1PAH@Z ; helicopter_movement_get_desired_pitch
  0156b	d9 5d a0	 fstp	 DWORD PTR _desired_pitch$[ebp]

; 408  : 	desired_roll = helicopter_movement_get_desired_roll (en, model_motion_vector.x, model_acceleration_vector.x, NULL);

  0156e	6a 00		 push	 0
  01570	51		 push	 ecx
  01571	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _model_acceleration_vector$[ebp]
  01579	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0157e	51		 push	 ecx
  0157f	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp]
  01587	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0158c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0158f	50		 push	 eax
  01590	e8 00 00 00 00	 call	 ?helicopter_movement_get_desired_roll@@YGMPAUENTITY@@MMPAH@Z ; helicopter_movement_get_desired_roll
  01595	d9 5d a4	 fstp	 DWORD PTR _desired_roll$[ebp]

; 409  : 
; 410  : 	new_pitch = current_pitch + (desired_pitch - current_pitch) * 0.5 * get_entity_movement_delta_time ();

  01598	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _current_pitch$[ebp]
  0159d	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR _desired_pitch$[ebp]
  015a2	f3 0f 5c 4d e0	 subss	 xmm1, DWORD PTR _current_pitch$[ebp]
  015a7	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  015ab	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  015b3	f3 0f 5a 15 00
	00 00 00	 cvtss2sd xmm2, DWORD PTR ?system_delta_time@@3MA
  015bb	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  015bf	f2 0f 58 c1	 addsd	 xmm0, xmm1
  015c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  015c7	f3 0f 11 45 d0	 movss	 DWORD PTR _new_pitch$[ebp], xmm0

; 411  : 	new_roll = current_roll + (desired_roll - current_roll) * 0.5 * get_entity_movement_delta_time ();

  015cc	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _current_roll$[ebp]
  015d1	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR _desired_roll$[ebp]
  015d6	f3 0f 5c 4d dc	 subss	 xmm1, DWORD PTR _current_roll$[ebp]
  015db	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  015df	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  015e7	f3 0f 5a 15 00
	00 00 00	 cvtss2sd xmm2, DWORD PTR ?system_delta_time@@3MA
  015ef	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  015f3	f2 0f 58 c1	 addsd	 xmm0, xmm1
  015f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  015fb	f3 0f 11 45 cc	 movss	 DWORD PTR _new_roll$[ebp], xmm0

; 412  : 
; 413  : 	if (fabs(new_pitch - current_pitch) > rad(0.1) || fabs(new_heading - current_heading) > rad(0.1) || fabs(new_roll - current_roll) > rad(0.1))

  01600	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _new_pitch$[ebp]
  01605	f3 0f 5c 45 e0	 subss	 xmm0, DWORD PTR _current_pitch$[ebp]
  0160a	51		 push	 ecx
  0160b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01610	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  01615	dd 9d bc fe ff
	ff		 fstp	 QWORD PTR tv1426[ebp]
  0161b	f2 0f 10 85 bc
	fe ff ff	 movsd	 xmm0, QWORD PTR tv1426[ebp]
  01623	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f5c987100000000
  0162b	77 5e		 ja	 SHORT $LN25@helicopter
  0162d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _new_heading$[ebp]
  01632	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _current_heading$[ebp]
  01637	51		 push	 ecx
  01638	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0163d	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  01642	dd 9d bc fe ff
	ff		 fstp	 QWORD PTR tv1433[ebp]
  01648	f2 0f 10 85 bc
	fe ff ff	 movsd	 xmm0, QWORD PTR tv1433[ebp]
  01650	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f5c987100000000
  01658	77 31		 ja	 SHORT $LN25@helicopter
  0165a	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_roll$[ebp]
  0165f	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _current_roll$[ebp]
  01664	51		 push	 ecx
  01665	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0166a	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0166f	dd 9d bc fe ff
	ff		 fstp	 QWORD PTR tv1440[ebp]
  01675	f2 0f 10 85 bc
	fe ff ff	 movsd	 xmm0, QWORD PTR tv1440[ebp]
  0167d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f5c987100000000
  01685	0f 86 9a 00 00
	00		 jbe	 $LN24@helicopter
$LN25@helicopter:

; 414  : 		set_local_entity_int_value(en, INT_TYPE_ROTATED, TRUE);

  0168b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0168f	74 0d		 je	 SHORT $LN123@helicopter
  01691	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  01694	8b 08		 mov	 ecx, DWORD PTR [eax]
  01696	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv903[ebp], ecx
  0169c	eb 27		 jmp	 SHORT $LN124@helicopter
$LN123@helicopter:
  0169e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  016a4	81 c2 16 01 00
	00		 add	 edx, 278		; 00000116H
  016aa	52		 push	 edx
  016ab	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  016b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  016b5	50		 push	 eax
  016b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  016bb	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv903[ebp], 0
$LN124@helicopter:
  016c5	b9 01 00 00 00	 mov	 ecx, 1
  016ca	85 c9		 test	 ecx, ecx
  016cc	74 0c		 je	 SHORT $LN125@helicopter
  016ce	c7 85 bc fe ff
	ff b1 00 00 00	 mov	 DWORD PTR tv911[ebp], 177 ; 000000b1H
  016d8	eb 27		 jmp	 SHORT $LN126@helicopter
$LN125@helicopter:
  016da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_movement@@YGXPAUENTITY@@@Z@4JA
  016e0	81 c2 16 01 00
	00		 add	 edx, 278		; 00000116H
  016e6	52		 push	 edx
  016e7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LJAMBIHE@c?3?2users?2nhv90?2projects?2eech?2ap@
  016ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  016f1	50		 push	 eax
  016f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  016f7	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv911[ebp], 0
$LN126@helicopter:
  01701	6a 01		 push	 1
  01703	68 b1 00 00 00	 push	 177			; 000000b1H
  01708	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0170b	51		 push	 ecx
  0170c	69 95 c0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv903[ebp], 1116
  01716	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv911[ebp]
  0171c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  01723	ff d1		 call	 ecx
$LN24@helicopter:

; 415  : 
; 416  : 	get_3d_transformation_matrix (raw->ac.mob.attitude, new_heading, new_pitch, new_roll);

  01725	51		 push	 ecx
  01726	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_roll$[ebp]
  0172b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01730	51		 push	 ecx
  01731	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _new_pitch$[ebp]
  01736	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0173b	51		 push	 ecx
  0173c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _new_heading$[ebp]
  01741	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01746	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _raw$[ebp]
  0174c	83 c0 10	 add	 eax, 16			; 00000010H
  0174f	50		 push	 eax
  01750	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 417  : 
; 418  : 	helicopter_movement_calculate_new_position (en, guide, &wp_pos);

  01755	8d 45 88	 lea	 eax, DWORD PTR _wp_pos$[ebp]
  01758	50		 push	 eax
  01759	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  0175c	51		 push	 ecx
  0175d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  01760	52		 push	 edx
  01761	e8 00 00 00 00	 call	 ?helicopter_movement_calculate_new_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; helicopter_movement_calculate_new_position
$LN1@helicopter:

; 419  : }

  01766	5f		 pop	 edi
  01767	5e		 pop	 esi
  01768	5b		 pop	 ebx
  01769	8b e5		 mov	 esp, ebp
  0176b	5d		 pop	 ebp
  0176c	c2 04 00	 ret	 4
  0176f	90		 npad	 1
$LN128@helicopter:
  01770	00 00 00 00	 DD	 $LN8@helicopter
  01774	00 00 00 00	 DD	 $LN9@helicopter
  01778	00 00 00 00	 DD	 $LN10@helicopter
$LN127@helicopter:
  0177c	00		 DB	 0
  0177d	00		 DB	 0
  0177e	02		 DB	 2
  0177f	02		 DB	 2
  01780	02		 DB	 2
  01781	02		 DB	 2
  01782	02		 DB	 2
  01783	02		 DB	 2
  01784	01		 DB	 1
  01785	01		 DB	 1
  01786	02		 DB	 2
  01787	02		 DB	 2
  01788	02		 DB	 2
  01789	02		 DB	 2
  0178a	02		 DB	 2
  0178b	00		 DB	 0
  0178c	02		 DB	 2
  0178d	02		 DB	 2
  0178e	02		 DB	 2
  0178f	02		 DB	 2
  01790	02		 DB	 2
  01791	02		 DB	 2
  01792	02		 DB	 2
  01793	02		 DB	 2
  01794	02		 DB	 2
  01795	02		 DB	 2
  01796	01		 DB	 1
?helicopter_movement@@YGXPAUENTITY@@@Z ENDP		; helicopter_movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
END
