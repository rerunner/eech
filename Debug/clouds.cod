; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\clouds\clouds.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?cloud_3d_base_height@@3MA			; cloud_3d_base_height
_BSS	SEGMENT
?cloud_3d_base_height@@3MA DD 01H DUP (?)		; cloud_3d_base_height
_BSS	ENDS
PUBLIC	_fabsf
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?generate_lookup_outcode@@YGHHHHH@Z		; generate_lookup_outcode
PUBLIC	?initialise_3d_clouds@@YGXXZ			; initialise_3d_clouds
PUBLIC	?add_3d_cloud_texture@@YGXHW4WEATHERMODES@@@Z	; add_3d_cloud_texture
PUBLIC	?set_cloud_3d_base_height@@YGXM@Z		; set_cloud_3d_base_height
PUBLIC	?get_cloud_3d_base_height@@YGMXZ		; get_cloud_3d_base_height
PUBLIC	?get_position_in_clouds@@YGHM@Z			; get_position_in_clouds
PUBLIC	?set_cloud_3d_scan_radius@@YGXH@Z		; set_cloud_3d_scan_radius
PUBLIC	?get_cloud_3d_scan_radius@@YGHXZ		; get_cloud_3d_scan_radius
PUBLIC	?scan_3d_clouds@@YGXXZ				; scan_3d_clouds
PUBLIC	?draw_3d_cloud_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_cloud_sector
PUBLIC	?get_cloud_3d_sector@@YGXMMPAH0@Z		; get_cloud_3d_sector
PUBLIC	??_C@_0CG@KNLJGFL@Trying?5to?5set?5cloud?5scan?5radius@ ; `string'
PUBLIC	??_C@_0ED@FKAGIKKK@Unable?5to?5draw?5clouds?5?9?5no?5text@ ; `string'
PUBLIC	??_C@_0EC@PJBPEHMN@Unable?5to?5draw?5clouds?5?9?5no?5text@ ; `string'
PUBLIC	??_C@_0BJ@KGEDCPOK@Run?5out?5of?5object?5slots?$CB@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3f7fbe77
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@406fe00000000000
PUBLIC	__real@40a0000000000000
PUBLIC	__real@40d6a0902de00d1b
PUBLIC	__real@42c80000
PUBLIC	__real@437f0000
PUBLIC	__real@46000000
PUBLIC	__real@46800000
PUBLIC	__real@47000000
PUBLIC	__real@47800000
PUBLIC	__real@c6000000
EXTRN	_fabs:PROC
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z:PROC ; normalise_3d_vector_given_magnitude
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC	; clip_3d_polygon
EXTRN	?set_d3d_fog_face_intensity@@YGXH@Z:PROC	; set_d3d_fog_face_intensity
EXTRN	?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z:PROC ; draw_fan_primitive
EXTRN	?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_gouraud_shaded_textured_renderstate
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?get_d3d_vertices_address@@YGPAU_D3DTLVERTEX@@PAUVERTEX@@PAH@Z:PROC ; get_d3d_vertices_address
EXTRN	?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z:PROC ; get_3d_weathermode
EXTRN	?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z:PROC ; get_3d_target_weathermode
EXTRN	?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z:PROC ; get_3d_target_weathermode_transitional_status
EXTRN	?set_middle_scene_slot_height@@YGXM@Z:PROC	; set_middle_scene_slot_height
EXTRN	?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ:PROC ; get_3d_scene_slot
EXTRN	?insert_middle_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z:PROC ; insert_middle_scene_slot_into_3d_scene
EXTRN	?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_polygon
EXTRN	?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_texture
EXTRN	?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_texture
EXTRN	?get_3d_point_outcodes@@YGIMMM@Z:PROC		; get_3d_point_outcodes
EXTRN	__chkstk:PROC
EXTRN	?d3d_flat_only_alpha@@3HA:DWORD			; d3d_flat_only_alpha
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?clip_hither@@3MA:DWORD				; clip_hither
EXTRN	?d3d_fog_intensity@@3KA:DWORD			; d3d_fog_intensity
EXTRN	?system_textures@@3PAPAUSCREEN@@A:BYTE		; system_textures
EXTRN	?zbuffer_factor@@3NA:QWORD			; zbuffer_factor
EXTRN	?zbuffer_constant@@3NA:QWORD			; zbuffer_constant
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?visual_3d_vp@@3PAUVIEWPOINT@@A:DWORD		; visual_3d_vp
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?cloud_3d_blend_start@@3MA DD 01H DUP (?)		; cloud_3d_blend_start
?cloud_3d_blend_end@@3MA DD 01H DUP (?)			; cloud_3d_blend_end
?cloud_3d_blend_distance@@3MA DD 01H DUP (?)		; cloud_3d_blend_distance
?cloud_3d_blend_constant@@3NA DQ 01H DUP (?)		; cloud_3d_blend_constant
?cloud_3d_blend_factor@@3NA DQ 01H DUP (?)		; cloud_3d_blend_factor
?cloud_3d_adjusted_blend_factor@@3NA DQ 01H DUP (?)	; cloud_3d_adjusted_blend_factor
?cloud_3d_blend_start_squared@@3NA DQ 01H DUP (?)	; cloud_3d_blend_start_squared
?cloud_3d_blend_distance_squared@@3NA DQ 01H DUP (?)	; cloud_3d_blend_distance_squared
?cloud_3d_sector_scan_radius@@3HA DD 01H DUP (?)	; cloud_3d_sector_scan_radius
?cloud_transformed_3d_points@@3PAUVERTEX@@A DB 01000H DUP (?) ; cloud_transformed_3d_points
	ALIGN	8

?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A DQ 05H DUP (?) ; cloud_textures
?cloud_weather_blend_factor@@3MA DD 01H DUP (?)		; cloud_weather_blend_factor
?cloud_weather_one_minus_blend_factor@@3MA DD 01H DUP (?) ; cloud_weather_one_minus_blend_factor
?current_weather_texture@@3PAUSCREEN@@A DD 01H DUP (?)	; current_weather_texture
?target_weather_texture@@3PAUSCREEN@@A DD 01H DUP (?)	; target_weather_texture
?cloud_colour_blend_vector@@3UVEC3D@@A DB 0cH DUP (?)	; cloud_colour_blend_vector
_BSS	ENDS
;	COMDAT __real@c6000000
CONST	SEGMENT
__real@c6000000 DD 0c6000000r			; -8192
CONST	ENDS
;	COMDAT __real@47800000
CONST	SEGMENT
__real@47800000 DD 047800000r			; 65536
CONST	ENDS
;	COMDAT __real@47000000
CONST	SEGMENT
__real@47000000 DD 047000000r			; 32768
CONST	ENDS
;	COMDAT __real@46800000
CONST	SEGMENT
__real@46800000 DD 046800000r			; 16384
CONST	ENDS
;	COMDAT __real@46000000
CONST	SEGMENT
__real@46000000 DD 046000000r			; 8192
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@40d6a0902de00d1b
CONST	SEGMENT
__real@40d6a0902de00d1b DQ 040d6a0902de00d1br	; 23170.3
CONST	ENDS
;	COMDAT __real@40a0000000000000
CONST	SEGMENT
__real@40a0000000000000 DQ 040a0000000000000r	; 2048
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fbe77
CONST	SEGMENT
__real@3f7fbe77 DD 03f7fbe77r			; 0.999
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BJ@KGEDCPOK@Run?5out?5of?5object?5slots?$CB@
CONST	SEGMENT
??_C@_0BJ@KGEDCPOK@Run?5out?5of?5object?5slots?$CB@ DB 'Run out of object'
	DB	' slots!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@PJBPEHMN@Unable?5to?5draw?5clouds?5?9?5no?5text@
CONST	SEGMENT
??_C@_0EC@PJBPEHMN@Unable?5to?5draw?5clouds?5?9?5no?5text@ DB 'Unable to '
	DB	'draw clouds - no texture set for target weathermode: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@FKAGIKKK@Unable?5to?5draw?5clouds?5?9?5no?5text@
CONST	SEGMENT
??_C@_0ED@FKAGIKKK@Unable?5to?5draw?5clouds?5?9?5no?5text@ DB 'Unable to '
	DB	'draw clouds - no texture set for current weathermode: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KNLJGFL@Trying?5to?5set?5cloud?5scan?5radius@
CONST	SEGMENT
??_C@_0CG@KNLJGFL@Trying?5to?5set?5cloud?5scan?5radius@ DB 'Trying to set'
	DB	' cloud scan radius to %d', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z
_TEXT	SEGMENT
_specular$1 = -52					; size = 4
_vptr$2 = -48						; size = 4
_vertices$3 = -44					; size = 4
_vert$4 = -40						; size = 4
_number_of_vertices$5 = -36				; size = 4
_polygon$ = -32						; size = 4
_outcode2$ = -28					; size = 4
_outcode$ = -24						; size = 4
_previous_point$ = -20					; size = 4
_this_point$ = -16					; size = 4
_first_point$ = -12					; size = 4
_alpha$ = -8						; size = 4
_count$ = -4						; size = 4
_number_of_points$ = 8					; size = 4
_point_references$ = 12					; size = 4
_transformed_points$ = 16				; size = 4
_source_points$ = 20					; size = 4
_alpha_blend$ = 24					; size = 4
_texture$ = 28						; size = 4
?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z PROC ; render_cloud_polygon, COMDAT

; 1153 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1154 : 
; 1155 : 	int
; 1156 : 		count,
; 1157 : 		alpha,
; 1158 : 		first_point,
; 1159 : 		this_point,
; 1160 : 		previous_point,
; 1161 : 		outcode,
; 1162 : 		outcode2;
; 1163 : 
; 1164 : 	vertex
; 1165 : 		*polygon;
; 1166 : 
; 1167 : 	first_point = point_references->point;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _point_references$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f4	 mov	 DWORD PTR _first_point$[ebp], ecx

; 1168 : 
; 1169 : 	this_point = first_point;

  00011	8b 45 f4	 mov	 eax, DWORD PTR _first_point$[ebp]
  00014	89 45 f0	 mov	 DWORD PTR _this_point$[ebp], eax

; 1170 : 
; 1171 : 	outcode = transformed_points[this_point].outcode;

  00017	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  0001a	c1 e0 06	 shl	 eax, 6
  0001d	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  00020	0f b6 54 01 2c	 movzx	 edx, BYTE PTR [ecx+eax+44]
  00025	89 55 e8	 mov	 DWORD PTR _outcode$[ebp], edx

; 1172 : 	outcode2 = transformed_points[this_point].outcode;

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  0002b	c1 e0 06	 shl	 eax, 6
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  00031	0f b6 54 01 2c	 movzx	 edx, BYTE PTR [ecx+eax+44]
  00036	89 55 e4	 mov	 DWORD PTR _outcode2$[ebp], edx

; 1173 : 	convert_float_to_int ( ( source_points[this_point].a * alpha_blend * 255 ), &alpha );

  00039	8d 45 f8	 lea	 eax, DWORD PTR _alpha$[ebp]
  0003c	50		 push	 eax
  0003d	6b 4d f0 14	 imul	 ecx, DWORD PTR _this_point$[ebp], 20
  00041	8b 55 14	 mov	 edx, DWORD PTR _source_points$[ebp]
  00044	f3 0f 10 44 0a
	0c		 movss	 xmm0, DWORD PTR [edx+ecx+12]
  0004a	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _alpha_blend$[ebp]
  0004f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00057	51		 push	 ecx
  00058	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005d	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1174 : 	transformed_points[this_point].u = point_references->u;

  00062	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  00065	c1 e0 06	 shl	 eax, 6
  00068	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  0006b	8b 55 0c	 mov	 edx, DWORD PTR _point_references$[ebp]
  0006e	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00071	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1175 : 	transformed_points[this_point].v = point_references->v;

  00075	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  00078	c1 e0 06	 shl	 eax, 6
  0007b	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  0007e	8b 55 0c	 mov	 edx, DWORD PTR _point_references$[ebp]
  00081	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00084	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1176 : 	transformed_points[this_point].alpha = alpha;

  00088	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  0008b	c1 e0 06	 shl	 eax, 6
  0008e	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  00091	8a 55 f8	 mov	 dl, BYTE PTR _alpha$[ebp]
  00094	88 54 01 33	 mov	 BYTE PTR [ecx+eax+51], dl

; 1177 : 
; 1178 : 	point_references++;

  00098	8b 45 0c	 mov	 eax, DWORD PTR _point_references$[ebp]
  0009b	83 c0 10	 add	 eax, 16			; 00000010H
  0009e	89 45 0c	 mov	 DWORD PTR _point_references$[ebp], eax

; 1179 : 
; 1180 : 	for ( count = 1; count < number_of_points; count++ )

  000a1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
  000a8	eb 09		 jmp	 SHORT $LN4@render_clo
$LN2@render_clo:
  000aa	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000ad	83 c0 01	 add	 eax, 1
  000b0	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@render_clo:
  000b3	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000b6	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  000b9	0f 8d ba 00 00
	00		 jge	 $LN3@render_clo

; 1181 : 	{
; 1182 : 
; 1183 : 		previous_point = this_point;

  000bf	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  000c2	89 45 ec	 mov	 DWORD PTR _previous_point$[ebp], eax

; 1184 : 
; 1185 : 		this_point = point_references->point;

  000c5	8b 45 0c	 mov	 eax, DWORD PTR _point_references$[ebp]
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	89 4d f0	 mov	 DWORD PTR _this_point$[ebp], ecx

; 1186 : 
; 1187 : 		outcode |= transformed_points[this_point].outcode;

  000cd	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  000d0	c1 e0 06	 shl	 eax, 6
  000d3	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  000d6	0f b6 54 01 2c	 movzx	 edx, BYTE PTR [ecx+eax+44]
  000db	0b 55 e8	 or	 edx, DWORD PTR _outcode$[ebp]
  000de	89 55 e8	 mov	 DWORD PTR _outcode$[ebp], edx

; 1188 : 		outcode2 &= transformed_points[this_point].outcode;

  000e1	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  000e4	c1 e0 06	 shl	 eax, 6
  000e7	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  000ea	0f b6 54 01 2c	 movzx	 edx, BYTE PTR [ecx+eax+44]
  000ef	23 55 e4	 and	 edx, DWORD PTR _outcode2$[ebp]
  000f2	89 55 e4	 mov	 DWORD PTR _outcode2$[ebp], edx

; 1189 : 
; 1190 : 		convert_float_to_int ( ( source_points[this_point].a * alpha_blend * 255 ), &alpha );

  000f5	8d 45 f8	 lea	 eax, DWORD PTR _alpha$[ebp]
  000f8	50		 push	 eax
  000f9	6b 4d f0 14	 imul	 ecx, DWORD PTR _this_point$[ebp], 20
  000fd	8b 55 14	 mov	 edx, DWORD PTR _source_points$[ebp]
  00100	f3 0f 10 44 0a
	0c		 movss	 xmm0, DWORD PTR [edx+ecx+12]
  00106	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _alpha_blend$[ebp]
  0010b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00113	51		 push	 ecx
  00114	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00119	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1191 : 
; 1192 : 		transformed_points[this_point].u = point_references->u;

  0011e	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  00121	c1 e0 06	 shl	 eax, 6
  00124	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  00127	8b 55 0c	 mov	 edx, DWORD PTR _point_references$[ebp]
  0012a	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0012d	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1193 : 		transformed_points[this_point].v = point_references->v;

  00131	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  00134	c1 e0 06	 shl	 eax, 6
  00137	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  0013a	8b 55 0c	 mov	 edx, DWORD PTR _point_references$[ebp]
  0013d	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00140	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1194 : 		transformed_points[this_point].alpha = alpha;

  00144	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  00147	c1 e0 06	 shl	 eax, 6
  0014a	8b 4d 10	 mov	 ecx, DWORD PTR _transformed_points$[ebp]
  0014d	8a 55 f8	 mov	 dl, BYTE PTR _alpha$[ebp]
  00150	88 54 01 33	 mov	 BYTE PTR [ecx+eax+51], dl

; 1195 : 
; 1196 : 		cloud_transformed_3d_points[previous_point].next_vertex = &cloud_transformed_3d_points[this_point];

  00154	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  00157	c1 e0 06	 shl	 eax, 6
  0015a	05 00 00 00 00	 add	 eax, OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  0015f	8b 4d ec	 mov	 ecx, DWORD PTR _previous_point$[ebp]
  00162	c1 e1 06	 shl	 ecx, 6
  00165	89 81 28 00 00
	00		 mov	 DWORD PTR ?cloud_transformed_3d_points@@3PAUVERTEX@@A[ecx+40], eax

; 1197 : 
; 1198 : 		point_references++;

  0016b	8b 45 0c	 mov	 eax, DWORD PTR _point_references$[ebp]
  0016e	83 c0 10	 add	 eax, 16			; 00000010H
  00171	89 45 0c	 mov	 DWORD PTR _point_references$[ebp], eax

; 1199 : 	}

  00174	e9 31 ff ff ff	 jmp	 $LN2@render_clo
$LN3@render_clo:

; 1200 : 
; 1201 : 	cloud_transformed_3d_points[this_point].next_vertex = NULL;

  00179	8b 45 f0	 mov	 eax, DWORD PTR _this_point$[ebp]
  0017c	c1 e0 06	 shl	 eax, 6
  0017f	c7 80 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cloud_transformed_3d_points@@3PAUVERTEX@@A[eax+40], 0

; 1202 : 
; 1203 : 	if ( !outcode2 )

  00189	83 7d e4 00	 cmp	 DWORD PTR _outcode2$[ebp], 0
  0018d	0f 85 cb 01 00
	00		 jne	 $LN12@render_clo

; 1204 : 	{
; 1205 : 	
; 1206 : 		polygon = &cloud_transformed_3d_points[first_point];

  00193	8b 45 f4	 mov	 eax, DWORD PTR _first_point$[ebp]
  00196	c1 e0 06	 shl	 eax, 6
  00199	05 00 00 00 00	 add	 eax, OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  0019e	89 45 e0	 mov	 DWORD PTR _polygon$[ebp], eax

; 1207 : 
; 1208 : 		clip_3d_coord = 0;

  001a1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1209 : 	
; 1210 : 		if ( outcode & CLIP_HITHER )

  001ab	8b 45 e8	 mov	 eax, DWORD PTR _outcode$[ebp]
  001ae	83 e0 20	 and	 eax, 32			; 00000020H
  001b1	74 1b		 je	 SHORT $LN9@render_clo

; 1211 : 		{
; 1212 : 	
; 1213 : 			polygon = hither_clip_3d_polygon ( polygon, &outcode );

  001b3	8d 45 e8	 lea	 eax, DWORD PTR _outcode$[ebp]
  001b6	50		 push	 eax
  001b7	8b 4d e0	 mov	 ecx, DWORD PTR _polygon$[ebp]
  001ba	51		 push	 ecx
  001bb	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  001c0	89 45 e0	 mov	 DWORD PTR _polygon$[ebp], eax

; 1214 : 
; 1215 : 			if ( !polygon )

  001c3	83 7d e0 00	 cmp	 DWORD PTR _polygon$[ebp], 0
  001c7	75 05		 jne	 SHORT $LN9@render_clo

; 1216 : 			{
; 1217 : 
; 1218 : 				return;

  001c9	e9 90 01 00 00	 jmp	 $LN1@render_clo
$LN9@render_clo:

; 1219 : 			}
; 1220 : 		}
; 1221 : 	
; 1222 : 		if ( outcode )

  001ce	83 7d e8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  001d2	74 2d		 je	 SHORT $LN10@render_clo

; 1223 : 		{
; 1224 : 
; 1225 : 			apply_perspective_to_polygon_texture ( polygon );

  001d4	8b 45 e0	 mov	 eax, DWORD PTR _polygon$[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 1226 : 
; 1227 : 			polygon = clip_3d_polygon ( polygon, outcode );

  001dd	8b 45 e8	 mov	 eax, DWORD PTR _outcode$[ebp]
  001e0	50		 push	 eax
  001e1	8b 4d e0	 mov	 ecx, DWORD PTR _polygon$[ebp]
  001e4	51		 push	 ecx
  001e5	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  001ea	89 45 e0	 mov	 DWORD PTR _polygon$[ebp], eax

; 1228 : 
; 1229 : 			if ( !polygon )

  001ed	83 7d e0 00	 cmp	 DWORD PTR _polygon$[ebp], 0
  001f1	75 05		 jne	 SHORT $LN11@render_clo

; 1230 : 			{
; 1231 : 
; 1232 : 				return;

  001f3	e9 66 01 00 00	 jmp	 $LN1@render_clo
$LN11@render_clo:

; 1233 : 			}
; 1234 : 
; 1235 : 			remove_perspective_from_polygon_texture ( polygon );

  001f8	8b 45 e0	 mov	 eax, DWORD PTR _polygon$[ebp]
  001fb	50		 push	 eax
  001fc	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN10@render_clo:

; 1236 : 		}
; 1237 : 	
; 1238 : 		if ( polygon )

  00201	83 7d e0 00	 cmp	 DWORD PTR _polygon$[ebp], 0
  00205	0f 84 53 01 00
	00		 je	 $LN12@render_clo

; 1239 : 		{
; 1240 : 
; 1241 : 			set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  0020b	6a 00		 push	 0
  0020d	6a 1d		 push	 29			; 0000001dH
  0020f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1242 : 			set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  00214	6a 05		 push	 5
  00216	6a 13		 push	 19			; 00000013H
  00218	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1243 : 			set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  0021d	6a 06		 push	 6
  0021f	6a 14		 push	 20			; 00000014H
  00221	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1244 : 			set_d3d_gouraud_shaded_textured_renderstate ( texture );

  00226	8b 45 1c	 mov	 eax, DWORD PTR _texture$[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_gouraud_shaded_textured_renderstate

; 1245 : 
; 1246 : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  0022f	6a 01		 push	 1
  00231	6a 0d		 push	 13			; 0000000dH
  00233	6a 00		 push	 0
  00235	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1247 : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  0023a	6a 01		 push	 1
  0023c	6a 0e		 push	 14			; 0000000eH
  0023e	6a 00		 push	 0
  00240	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1248 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, D3DTFG_LINEAR );

  00245	6a 02		 push	 2
  00247	6a 10		 push	 16			; 00000010H
  00249	6a 00		 push	 0
  0024b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1249 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, D3DTFN_LINEAR );

  00250	6a 02		 push	 2
  00252	6a 11		 push	 17			; 00000011H
  00254	6a 00		 push	 0
  00256	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1250 : 
; 1251 : 			{
; 1252 : 			
; 1253 : 				int
; 1254 : 					number_of_vertices;
; 1255 : 			
; 1256 : 				vertex
; 1257 : 					*vert;
; 1258 : 			
; 1259 : 				LPD3DTLVERTEX
; 1260 : 					vertices,
; 1261 : 					vptr;
; 1262 : 			
; 1263 : 				vert = polygon;

  0025b	8b 45 e0	 mov	 eax, DWORD PTR _polygon$[ebp]
  0025e	89 45 d8	 mov	 DWORD PTR _vert$4[ebp], eax

; 1264 : 			
; 1265 : 				vertices = get_d3d_vertices_address ( polygon, &number_of_vertices );

  00261	8d 45 dc	 lea	 eax, DWORD PTR _number_of_vertices$5[ebp]
  00264	50		 push	 eax
  00265	8b 4d e0	 mov	 ecx, DWORD PTR _polygon$[ebp]
  00268	51		 push	 ecx
  00269	e8 00 00 00 00	 call	 ?get_d3d_vertices_address@@YGPAU_D3DTLVERTEX@@PAUVERTEX@@PAH@Z ; get_d3d_vertices_address
  0026e	89 45 d4	 mov	 DWORD PTR _vertices$3[ebp], eax

; 1266 : 			
; 1267 : 				vptr = vertices;

  00271	8b 45 d4	 mov	 eax, DWORD PTR _vertices$3[ebp]
  00274	89 45 d0	 mov	 DWORD PTR _vptr$2[ebp], eax
$LN5@render_clo:

; 1268 : 			
; 1269 : 				while ( vert )

  00277	83 7d d8 00	 cmp	 DWORD PTR _vert$4[ebp], 0
  0027b	0f 84 d0 00 00
	00		 je	 $LN6@render_clo

; 1270 : 				{
; 1271 : 			
; 1272 : 					real_colour
; 1273 : 						specular;
; 1274 : 			
; 1275 : 					specular.colour = d3d_fog_intensity;

  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00286	89 45 cc	 mov	 DWORD PTR _specular$1[ebp], eax

; 1276 : 					specular.red = vert->specular;

  00289	8b 45 d8	 mov	 eax, DWORD PTR _vert$4[ebp]
  0028c	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  0028f	88 4d ce	 mov	 BYTE PTR _specular$1[ebp+2], cl

; 1277 : 					specular.green = vert->specular;

  00292	8b 45 d8	 mov	 eax, DWORD PTR _vert$4[ebp]
  00295	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  00298	88 4d cd	 mov	 BYTE PTR _specular$1[ebp+1], cl

; 1278 : 					specular.blue = vert->specular;

  0029b	8b 45 d8	 mov	 eax, DWORD PTR _vert$4[ebp]
  0029e	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  002a1	88 4d cc	 mov	 BYTE PTR _specular$1[ebp], cl

; 1279 : 			
; 1280 : 					*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  002a4	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  002a7	8b 4d d8	 mov	 ecx, DWORD PTR _vert$4[ebp]
  002aa	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  002ad	89 10		 mov	 DWORD PTR [eax], edx

; 1281 : 					*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  002af	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  002b2	8b 4d d8	 mov	 ecx, DWORD PTR _vert$4[ebp]
  002b5	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  002b8	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1282 : 					*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  002bb	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  002be	8b 4d d8	 mov	 ecx, DWORD PTR _vert$4[ebp]
  002c1	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  002c4	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 1283 : 					*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  002c7	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  002ca	8b 4d d8	 mov	 ecx, DWORD PTR _vert$4[ebp]
  002cd	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  002d0	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 1284 : 					*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  002d3	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  002d6	8b 4d d8	 mov	 ecx, DWORD PTR _vert$4[ebp]
  002d9	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  002dc	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1285 : 					vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  002df	8b 45 d8	 mov	 eax, DWORD PTR _vert$4[ebp]
  002e2	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  002e7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  002ef	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  002f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002fb	8b 4d d0	 mov	 ecx, DWORD PTR _vptr$2[ebp]
  002fe	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1286 : 					vptr->color = vert->colour;

  00303	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  00306	8b 4d d8	 mov	 ecx, DWORD PTR _vert$4[ebp]
  00309	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0030c	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 1287 : 					vptr->specular = specular.colour;

  0030f	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  00312	8b 4d cc	 mov	 ecx, DWORD PTR _specular$1[ebp]
  00315	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1288 : 
; 1289 : 					if ( vptr->sz >= 1.0 )

  00318	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  0031b	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00320	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00328	72 10		 jb	 SHORT $LN13@render_clo

; 1290 : 					{
; 1291 : 
; 1292 : 						vptr->sz = 0.999;

  0032a	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  0032d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00335	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN13@render_clo:

; 1293 : 					}
; 1294 : 		
; 1295 : 					vptr++;

  0033a	8b 45 d0	 mov	 eax, DWORD PTR _vptr$2[ebp]
  0033d	83 c0 20	 add	 eax, 32			; 00000020H
  00340	89 45 d0	 mov	 DWORD PTR _vptr$2[ebp], eax

; 1296 : 			
; 1297 : 					vert = vert->next_vertex;

  00343	8b 45 d8	 mov	 eax, DWORD PTR _vert$4[ebp]
  00346	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00349	89 4d d8	 mov	 DWORD PTR _vert$4[ebp], ecx

; 1298 : 				}

  0034c	e9 26 ff ff ff	 jmp	 $LN5@render_clo
$LN6@render_clo:

; 1299 : 			
; 1300 : 				draw_fan_primitive ( number_of_vertices, vertices );

  00351	8b 45 d4	 mov	 eax, DWORD PTR _vertices$3[ebp]
  00354	50		 push	 eax
  00355	8b 4d dc	 mov	 ecx, DWORD PTR _number_of_vertices$5[ebp]
  00358	51		 push	 ecx
  00359	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive
$LN12@render_clo:
$LN1@render_clo:

; 1301 : 			}
; 1302 : 
; 1303 : //			draw_wbuffered_gouraud_shaded_textured_polygon ( polygon );
; 1304 : 		}
; 1305 : 	}
; 1306 : }

  0035e	5f		 pop	 edi
  0035f	5e		 pop	 esi
  00360	5b		 pop	 ebx
  00361	8b e5		 mov	 esp, ebp
  00363	5d		 pop	 ebp
  00364	c2 18 00	 ret	 24			; 00000018H
?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z ENDP ; render_cloud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?transform_cloud_points@@YGXHPAUCLOUD_3D_POINT@@PAUVERTEX@@PAUVEC3D@@@Z
_TEXT	SEGMENT
_j$1 = -60						; size = 4
_i$2 = -56						; size = 4
_q$3 = -52						; size = 4
_z$4 = -48						; size = 4
_y$5 = -44						; size = 4
_x$6 = -40						; size = 4
_iymin$ = -36						; size = 4
_iymax$ = -32						; size = 4
_ixmin$ = -28						; size = 4
_ixmax$ = -24						; size = 4
_count$ = -20						; size = 4
_oymin$ = -16						; size = 4
_oymax$ = -12						; size = 4
_oxmin$ = -8						; size = 4
_oxmax$ = -4						; size = 4
_number_of_points$ = 8					; size = 4
_source_points$ = 12					; size = 4
_result_points$ = 16					; size = 4
_position$ = 20						; size = 4
?transform_cloud_points@@YGXHPAUCLOUD_3D_POINT@@PAUVERTEX@@PAUVEC3D@@@Z PROC ; transform_cloud_points, COMDAT

; 1056 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1057 : 
; 1058 : 	float
; 1059 : 		oxmax,
; 1060 : 		oxmin,
; 1061 : 		oymax,
; 1062 : 		oymin;
; 1063 : 
; 1064 : 	int
; 1065 : 		count,
; 1066 : 		ixmax,
; 1067 : 		ixmin,
; 1068 : 		iymax,
; 1069 : 		iymin;
; 1070 : 
; 1071 : 	//
; 1072 : 	// Now transform all the points.
; 1073 : 	//
; 1074 : 
; 1075 : 	for ( count = number_of_points; count > 0; count-- )

  00009	8b 45 08	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  0000c	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax
  0000f	eb 09		 jmp	 SHORT $LN4@transform_
$LN2@transform_:
  00011	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00014	83 e8 01	 sub	 eax, 1
  00017	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax
$LN4@transform_:
  0001a	83 7d ec 00	 cmp	 DWORD PTR _count$[ebp], 0
  0001e	0f 8e 3c 03 00
	00		 jle	 $LN3@transform_

; 1076 : 	{
; 1077 : 
; 1078 : 		float
; 1079 : 			x,
; 1080 : 			y,
; 1081 : 			z;
; 1082 : 
; 1083 : 		x = source_points->x * visual_3d_vp->attitude[0][0] +

  00024	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00029	6b c8 00	 imul	 ecx, eax, 0
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00032	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00036	b9 04 00 00 00	 mov	 ecx, 4
  0003b	6b d1 00	 imul	 edx, ecx, 0
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _source_points$[ebp]
  00041	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00045	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0004a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0004f	6b c2 00	 imul	 eax, edx, 0
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00058	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	c1 e0 00	 shl	 eax, 0
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _source_points$[ebp]
  00067	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  0006c	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00071	f3 0f 58 c1	 addss	 xmm0, xmm1
  00075	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0007a	6b c2 00	 imul	 eax, edx, 0
  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00083	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00087	b8 04 00 00 00	 mov	 eax, 4
  0008c	d1 e0		 shl	 eax, 1
  0008e	8b 4d 0c	 mov	 ecx, DWORD PTR _source_points$[ebp]
  00091	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00096	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0009b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009f	8b 55 14	 mov	 edx, DWORD PTR _position$[ebp]
  000a2	f3 0f 58 02	 addss	 xmm0, DWORD PTR [edx]
  000a6	f3 0f 11 45 d8	 movss	 DWORD PTR _x$6[ebp], xmm0

; 1084 : 				source_points->y * visual_3d_vp->attitude[0][1] +
; 1085 : 				source_points->z * visual_3d_vp->attitude[0][2] + position->x;
; 1086 : 
; 1087 : 		y = source_points->x * visual_3d_vp->attitude[1][0] +

  000ab	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b0	c1 e0 00	 shl	 eax, 0
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000b9	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  000bd	b8 04 00 00 00	 mov	 eax, 4
  000c2	6b c8 00	 imul	 ecx, eax, 0
  000c5	8b 45 0c	 mov	 eax, DWORD PTR _source_points$[ebp]
  000c8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000cc	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  000d1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000d6	c1 e1 00	 shl	 ecx, 0
  000d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000df	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  000e3	b9 04 00 00 00	 mov	 ecx, 4
  000e8	c1 e1 00	 shl	 ecx, 0
  000eb	8b 55 0c	 mov	 edx, DWORD PTR _source_points$[ebp]
  000ee	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  000f3	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  000f8	f3 0f 58 c1	 addss	 xmm0, xmm1
  000fc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00101	c1 e0 00	 shl	 eax, 0
  00104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0010a	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0010e	b8 04 00 00 00	 mov	 eax, 4
  00113	d1 e0		 shl	 eax, 1
  00115	8b 4d 0c	 mov	 ecx, DWORD PTR _source_points$[ebp]
  00118	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0011d	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00122	f3 0f 58 c1	 addss	 xmm0, xmm1
  00126	8b 55 14	 mov	 edx, DWORD PTR _position$[ebp]
  00129	f3 0f 58 42 04	 addss	 xmm0, DWORD PTR [edx+4]
  0012e	f3 0f 11 45 d4	 movss	 DWORD PTR _y$5[ebp], xmm0

; 1088 : 				source_points->y * visual_3d_vp->attitude[1][1] +
; 1089 : 				source_points->z * visual_3d_vp->attitude[1][2] + position->y;
; 1090 : 
; 1091 : 		z = source_points->x * visual_3d_vp->attitude[2][0] +

  00133	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00138	d1 e0		 shl	 eax, 1
  0013a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00140	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00144	b8 04 00 00 00	 mov	 eax, 4
  00149	6b c8 00	 imul	 ecx, eax, 0
  0014c	8b 45 0c	 mov	 eax, DWORD PTR _source_points$[ebp]
  0014f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00153	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00158	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0015d	d1 e1		 shl	 ecx, 1
  0015f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00165	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00169	b9 04 00 00 00	 mov	 ecx, 4
  0016e	c1 e1 00	 shl	 ecx, 0
  00171	8b 55 0c	 mov	 edx, DWORD PTR _source_points$[ebp]
  00174	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  00179	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  0017e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00182	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00187	d1 e0		 shl	 eax, 1
  00189	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0018f	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00193	b8 04 00 00 00	 mov	 eax, 4
  00198	d1 e0		 shl	 eax, 1
  0019a	8b 4d 0c	 mov	 ecx, DWORD PTR _source_points$[ebp]
  0019d	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  001a2	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  001a7	f3 0f 58 c1	 addss	 xmm0, xmm1
  001ab	8b 55 14	 mov	 edx, DWORD PTR _position$[ebp]
  001ae	f3 0f 58 42 08	 addss	 xmm0, DWORD PTR [edx+8]
  001b3	f3 0f 11 45 d0	 movss	 DWORD PTR _z$4[ebp], xmm0

; 1092 : 				source_points->y * visual_3d_vp->attitude[2][1] +
; 1093 : 				source_points->z * visual_3d_vp->attitude[2][2] + position->z;
; 1094 : 
; 1095 : 		x *= active_3d_environment->screen_i_scale;

  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001bd	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _x$6[ebp]
  001c2	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  001c6	f3 0f 11 45 d8	 movss	 DWORD PTR _x$6[ebp], xmm0

; 1096 : 		y *= active_3d_environment->screen_j_scale;

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001d0	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$5[ebp]
  001d5	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  001da	f3 0f 11 45 d4	 movss	 DWORD PTR _y$5[ebp], xmm0

; 1097 : 
; 1098 : 		result_points->colour = source_points->colour;

  001df	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  001e2	8b 4d 0c	 mov	 ecx, DWORD PTR _source_points$[ebp]
  001e5	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  001e8	89 50 30	 mov	 DWORD PTR [eax+48], edx

; 1099 : 
; 1100 : 		if ( *( ( int * ) &z ) >= *( ( int * ) &clip_hither ) )

  001eb	8b 45 d0	 mov	 eax, DWORD PTR _z$4[ebp]
  001ee	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?clip_hither@@3MA
  001f4	0f 8c 22 01 00
	00		 jl	 $LN5@transform_

; 1101 : 		{
; 1102 : 
; 1103 : 			float
; 1104 : 				q,
; 1105 : 				i,
; 1106 : 				j;
; 1107 : 
; 1108 : 			q = 1.0 / z;

  001fa	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _z$4[ebp]
  001ff	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00207	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0020b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0020f	f3 0f 11 45 cc	 movss	 DWORD PTR _q$3[ebp], xmm0

; 1109 : 
; 1110 : 			result_points->x = x;

  00214	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00217	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _x$6[ebp]
  0021c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1111 : 			result_points->y = y;

  00220	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00223	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$5[ebp]
  00228	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1112 : 			result_points->z = z;

  0022d	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00230	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _z$4[ebp]
  00235	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1113 : 
; 1114 : 			i = ( x * q );

  0023a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _x$6[ebp]
  0023f	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _q$3[ebp]
  00244	f3 0f 11 45 c8	 movss	 DWORD PTR _i$2[ebp], xmm0

; 1115 : 			j = ( y * q );

  00249	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$5[ebp]
  0024e	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _q$3[ebp]
  00253	f3 0f 11 45 c4	 movss	 DWORD PTR _j$1[ebp], xmm0

; 1116 : 
; 1117 : 			result_points->j = ( active_3d_environment->y_origin - j );

  00258	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0025d	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00262	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _j$1[ebp]
  00267	8b 4d 10	 mov	 ecx, DWORD PTR _result_points$[ebp]
  0026a	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 1118 : 			result_points->i = ( active_3d_environment->x_origin + i );

  0026f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00274	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00279	f3 0f 58 45 c8	 addss	 xmm0, DWORD PTR _i$2[ebp]
  0027e	8b 4d 10	 mov	 ecx, DWORD PTR _result_points$[ebp]
  00281	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 1119 : 			result_points->q = q;

  00286	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00289	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _q$3[ebp]
  0028e	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 1120 : 
; 1121 : 			oxmax = active_viewport.x_max - result_points->i;

  00293	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00296	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0029e	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  002a3	f3 0f 11 45 fc	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 1122 : 			oxmin = result_points->i - active_viewport.x_min;

  002a8	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  002ab	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  002b0	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  002b8	f3 0f 11 45 f8	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 1123 : 			oymax = active_viewport.y_max - result_points->j;

  002bd	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  002c0	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  002c8	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  002cd	f3 0f 11 45 f4	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 1124 : 			oymin = result_points->j - active_viewport.y_min;

  002d2	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  002d5	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  002da	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  002e2	f3 0f 11 45 f0	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 1125 : 
; 1126 : 			ixmax = *( ( int * ) &oxmax );

  002e7	8b 45 fc	 mov	 eax, DWORD PTR _oxmax$[ebp]
  002ea	89 45 e8	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1127 : 			ixmin = *( ( int * ) &oxmin );

  002ed	8b 45 f8	 mov	 eax, DWORD PTR _oxmin$[ebp]
  002f0	89 45 e4	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1128 : 			iymax = *( ( int * ) &oymax );

  002f3	8b 45 f4	 mov	 eax, DWORD PTR _oymax$[ebp]
  002f6	89 45 e0	 mov	 DWORD PTR _iymax$[ebp], eax

; 1129 : 			iymin = *( ( int * ) &oymin );

  002f9	8b 45 f0	 mov	 eax, DWORD PTR _oymin$[ebp]
  002fc	89 45 dc	 mov	 DWORD PTR _iymin$[ebp], eax

; 1130 : 
; 1131 : 			result_points->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  002ff	8b 45 e0	 mov	 eax, DWORD PTR _iymax$[ebp]
  00302	50		 push	 eax
  00303	8b 4d e8	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  00306	51		 push	 ecx
  00307	8b 55 dc	 mov	 edx, DWORD PTR _iymin$[ebp]
  0030a	52		 push	 edx
  0030b	8b 45 e4	 mov	 eax, DWORD PTR _ixmin$[ebp]
  0030e	50		 push	 eax
  0030f	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  00314	8b 4d 10	 mov	 ecx, DWORD PTR _result_points$[ebp]
  00317	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 1132 : 		}
; 1133 : 		else

  0031a	eb 2d		 jmp	 SHORT $LN6@transform_
$LN5@transform_:

; 1134 : 		{
; 1135 : 
; 1136 : 			result_points->outcode = CLIP_HITHER;

  0031c	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  0031f	c6 40 2c 20	 mov	 BYTE PTR [eax+44], 32	; 00000020H

; 1137 : 			result_points->z = z;

  00323	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00326	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _z$4[ebp]
  0032b	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1138 : 			result_points->x = x;

  00330	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  00333	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _x$6[ebp]
  00338	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1139 : 			result_points->y = y;

  0033c	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  0033f	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y$5[ebp]
  00344	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN6@transform_:

; 1140 : 		}
; 1141 : 
; 1142 : 		result_points++;

  00349	8b 45 10	 mov	 eax, DWORD PTR _result_points$[ebp]
  0034c	83 c0 40	 add	 eax, 64			; 00000040H
  0034f	89 45 10	 mov	 DWORD PTR _result_points$[ebp], eax

; 1143 : 	
; 1144 : 		source_points++;

  00352	8b 45 0c	 mov	 eax, DWORD PTR _source_points$[ebp]
  00355	83 c0 14	 add	 eax, 20			; 00000014H
  00358	89 45 0c	 mov	 DWORD PTR _source_points$[ebp], eax

; 1145 : 	}

  0035b	e9 b1 fc ff ff	 jmp	 $LN2@transform_
$LN3@transform_:

; 1146 : }

  00360	5f		 pop	 edi
  00361	5e		 pop	 esi
  00362	5b		 pop	 ebx
  00363	8b e5		 mov	 esp, ebp
  00365	5d		 pop	 ebp
  00366	c2 10 00	 ret	 16			; 00000010H
?transform_cloud_points@@YGXHPAUCLOUD_3D_POINT@@PAUVERTEX@@PAUVEC3D@@@Z ENDP ; transform_cloud_points
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?get_cloud_3d_sector@@YGXMMPAH0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_z$ = 12						; size = 4
_sectorx$ = 16						; size = 4
_sectorz$ = 20						; size = 4
?get_cloud_3d_sector@@YGXMMPAH0@Z PROC			; get_cloud_3d_sector, COMDAT

; 1313 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1314 : 
; 1315 : 	convert_float_to_int ( ( x / CLOUD_3D_SECTOR_SIDE_LENGTH ), sectorx );

  00009	8b 45 10	 mov	 eax, DWORD PTR _sectorx$[ebp]
  0000c	50		 push	 eax
  0000d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00012	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46800000
  0001a	51		 push	 ecx
  0001b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00020	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1316 : 
; 1317 : 	convert_float_to_int ( ( z / CLOUD_3D_SECTOR_SIDE_LENGTH ), sectorz );

  00025	8b 45 14	 mov	 eax, DWORD PTR _sectorz$[ebp]
  00028	50		 push	 eax
  00029	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _z$[ebp]
  0002e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46800000
  00036	51		 push	 ecx
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1318 : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 10 00	 ret	 16			; 00000010H
?get_cloud_3d_sector@@YGXMMPAH0@Z ENDP			; get_cloud_3d_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?draw_3d_cloud_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
tv580 = -6944						; size = 4
tv567 = -6944						; size = 4
tv558 = -6944						; size = 4
tv314 = -6944						; size = 4
tv226 = -6944						; size = 4
tv185 = -6944						; size = 4
tv581 = -6940						; size = 4
tv568 = -6940						; size = 4
tv559 = -6940						; size = 4
tv315 = -6940						; size = 4
tv227 = -6940						; size = 4
tv186 = -6940						; size = 4
_b$1 = -6424						; size = 4
_g$2 = -6420						; size = 4
_r$3 = -6416						; size = 4
_db$4 = -6412						; size = 4
_dg$5 = -6408						; size = 4
_dr$6 = -6404						; size = 4
_angle$7 = -6400					; size = 4
_distance$8 = -6396					; size = 4
_alpha$9 = -6392					; size = 4
_colour_t$10 = -6388					; size = 4
_ib$11 = -6384						; size = 4
_ig$12 = -6380						; size = 4
_ir$13 = -6376						; size = 4
_point_vector$14 = -6372				; size = 12
_z_top_point_offset$15 = -6360				; size = 4
_z_bottom_point_offset$16 = -6356			; size = 4
_tmp$17 = -6352						; size = 4
_ib$18 = -6348						; size = 4
_ig$19 = -6344						; size = 4
_ir$20 = -6340						; size = 4
_b$21 = -6336						; size = 4
_g$22 = -6332						; size = 4
_r$23 = -6328						; size = 4
_db$24 = -6324						; size = 4
_dg$25 = -6320						; size = 4
_dr$26 = -6316						; size = 4
_colour_t$27 = -6312					; size = 4
_distance$28 = -6308					; size = 4
_angle$29 = -6304					; size = 4
_point_vector$30 = -6300				; size = 12
_alpha$31 = -6288					; size = 4
_z_offset$32 = -6284					; size = 4
_x_offset$33 = -6280					; size = 4
_z$34 = -6276						; size = 4
_x$35 = -6272						; size = 4
_number_of_points$36 = -6268				; size = 4
_number_of_sub_sectors$37 = -6264			; size = 4
_point_references$ = -6260				; size = 64
_cloud_polygon_alphas$ = -6196				; size = 1024
_cloud_points$ = -5172					; size = 5120
_sector_relative_centre$ = -52				; size = 12
_sector_centre$ = -40					; size = 12
_tempz$ = -28						; size = 8
_tempx$ = -20						; size = 8
_current_sector_z_offset$ = -12				; size = 4
_current_sector_x_offset$ = -8				; size = 4
_count$ = -4						; size = 4
_slot$ = 8						; size = 4
?draw_3d_cloud_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_cloud_sector, COMDAT

; 632  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 20 1b 00 00	 mov	 eax, 6944		; 00001b20H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi

; 633  : 
; 634  : 	int
; 635  : 		count;
; 636  : 
; 637  : 	float
; 638  : 		current_sector_x_offset,
; 639  : 		current_sector_z_offset;
; 640  : 
; 641  : 	double
; 642  : 		tempx,
; 643  : 		tempz;
; 644  : 
; 645  : 	vec3d
; 646  : 		sector_centre,
; 647  : 		sector_relative_centre;
; 648  : 
; 649  : 	cloud_3d_point
; 650  : 		cloud_points[256];
; 651  : 
; 652  : 	float
; 653  : 		cloud_polygon_alphas[256];
; 654  : 
; 655  : 	cloud_3d_textured_reference
; 656  : 		point_references[4];
; 657  : 
; 658  : 	//
; 659  : 	// Set the fog intensity for clouds ( NO FOG )
; 660  : 	//
; 661  : 
; 662  : 	current_sector_x_offset = slot->cloud_sector.x * CLOUD_3D_SECTOR_SIDE_LENGTH;

  00010	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00013	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00016	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00019	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0001d	f3 0f 11 45 f8	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 663  : 	current_sector_z_offset = slot->cloud_sector.z * CLOUD_3D_SECTOR_SIDE_LENGTH;

  00022	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00025	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00028	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  0002b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0002f	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 664  : 
; 665  : 	sector_centre.x = current_sector_x_offset + ( CLOUD_3D_SECTOR_SIDE_LENGTH / 2 );

  00034	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  00039	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46000000
  00041	f3 0f 11 45 d8	 movss	 DWORD PTR _sector_centre$[ebp], xmm0

; 666  : 	sector_centre.y = cloud_3d_base_height;

  00046	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  0004e	f3 0f 11 45 dc	 movss	 DWORD PTR _sector_centre$[ebp+4], xmm0

; 667  : 	sector_centre.z = current_sector_z_offset + ( CLOUD_3D_SECTOR_SIDE_LENGTH / 2 );

  00053	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  00058	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46000000
  00060	f3 0f 11 45 e0	 movss	 DWORD PTR _sector_centre$[ebp+8], xmm0

; 668  : 
; 669  : 	sector_centre.x -= visual_3d_vp->x;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0006a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  0006f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00073	f3 0f 11 45 d8	 movss	 DWORD PTR _sector_centre$[ebp], xmm0

; 670  : 	sector_centre.y -= visual_3d_vp->y;

  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0007d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _sector_centre$[ebp+4]
  00082	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00087	f3 0f 11 45 dc	 movss	 DWORD PTR _sector_centre$[ebp+4], xmm0

; 671  : 	sector_centre.z -= visual_3d_vp->z;

  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00091	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sector_centre$[ebp+8]
  00096	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0009b	f3 0f 11 45 e0	 movss	 DWORD PTR _sector_centre$[ebp+8], xmm0

; 672  : 
; 673  : 	sector_relative_centre.x = (	( sector_centre.x ) * visual_3d_vp->xv.x +

  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000a5	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  000aa	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000b5	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _sector_centre$[ebp+4]
  000ba	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  000bf	f3 0f 58 c1	 addss	 xmm0, xmm1
  000c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000c9	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _sector_centre$[ebp+8]
  000ce	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  000d3	f3 0f 58 c1	 addss	 xmm0, xmm1
  000d7	f3 0f 11 45 cc	 movss	 DWORD PTR _sector_relative_centre$[ebp], xmm0

; 674  : 											( sector_centre.y ) * visual_3d_vp->xv.y +
; 675  : 											( sector_centre.z ) * visual_3d_vp->xv.z );
; 676  : 
; 677  : 	sector_relative_centre.y = (	( sector_centre.x ) * visual_3d_vp->yv.x +

  000dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000e1	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  000e6	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  000eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000f1	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _sector_centre$[ebp+4]
  000f6	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  000fb	f3 0f 58 c1	 addss	 xmm0, xmm1
  000ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00105	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _sector_centre$[ebp+8]
  0010a	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  0010f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00113	f3 0f 11 45 d0	 movss	 DWORD PTR _sector_relative_centre$[ebp+4], xmm0

; 678  : 											( sector_centre.y ) * visual_3d_vp->yv.y +
; 679  : 											( sector_centre.z ) * visual_3d_vp->yv.z );
; 680  : 
; 681  : 	sector_relative_centre.z = (	( sector_centre.x ) * visual_3d_vp->zv.x +

  00118	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0011d	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  00122	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0012d	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _sector_centre$[ebp+4]
  00132	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00137	f3 0f 58 c1	 addss	 xmm0, xmm1
  0013b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00141	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _sector_centre$[ebp+8]
  00146	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0014b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0014f	f3 0f 11 45 d4	 movss	 DWORD PTR _sector_relative_centre$[ebp+8], xmm0

; 682  : 											( sector_centre.y ) * visual_3d_vp->zv.y +
; 683  : 											( sector_centre.z ) * visual_3d_vp->zv.z );
; 684  : 
; 685  : 	set_d3d_fog_face_intensity ( 0 );

  00154	6a 00		 push	 0
  00156	e8 00 00 00 00	 call	 ?set_d3d_fog_face_intensity@@YGXH@Z ; set_d3d_fog_face_intensity

; 686  : 
; 687  : 	if ( d3d_flat_only_alpha )

  0015b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_flat_only_alpha@@3HA, 0 ; d3d_flat_only_alpha
  00162	0f 84 d0 0b 00
	00		 je	 $LN26@draw_3d_cl

; 688  : 	{
; 689  : 
; 690  : 		int
; 691  : 			number_of_sub_sectors,
; 692  : 			number_of_points,
; 693  : 			x,
; 694  : 			z;
; 695  : 
; 696  : 		float
; 697  : 			x_offset,
; 698  : 			z_offset,
; 699  : 			alpha;
; 700  : 
; 701  : 		number_of_sub_sectors = 1;

  00168	c7 85 88 e7 ff
	ff 01 00 00 00	 mov	 DWORD PTR _number_of_sub_sectors$37[ebp], 1

; 702  : 
; 703  : 		number_of_points = ( number_of_sub_sectors + 1 ) * ( number_of_sub_sectors + 1 );

  00172	8b 85 88 e7 ff
	ff		 mov	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  00178	83 c0 01	 add	 eax, 1
  0017b	8b 8d 88 e7 ff
	ff		 mov	 ecx, DWORD PTR _number_of_sub_sectors$37[ebp]
  00181	83 c1 01	 add	 ecx, 1
  00184	0f af c1	 imul	 eax, ecx
  00187	89 85 84 e7 ff
	ff		 mov	 DWORD PTR _number_of_points$36[ebp], eax

; 704  : 
; 705  : 		count = 0;

  0018d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 706  : 
; 707  : 		for ( z = 0; z <= number_of_sub_sectors; z++ )

  00194	c7 85 7c e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _z$34[ebp], 0
  0019e	eb 0f		 jmp	 SHORT $LN4@draw_3d_cl
$LN2@draw_3d_cl:
  001a0	8b 85 7c e7 ff
	ff		 mov	 eax, DWORD PTR _z$34[ebp]
  001a6	83 c0 01	 add	 eax, 1
  001a9	89 85 7c e7 ff
	ff		 mov	 DWORD PTR _z$34[ebp], eax
$LN4@draw_3d_cl:
  001af	8b 85 7c e7 ff
	ff		 mov	 eax, DWORD PTR _z$34[ebp]
  001b5	3b 85 88 e7 ff
	ff		 cmp	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  001bb	0f 8f 3a 04 00
	00		 jg	 $LN3@draw_3d_cl

; 708  : 		{
; 709  : 
; 710  : 			for ( x = 0; x <= number_of_sub_sectors; x++ )

  001c1	c7 85 80 e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _x$35[ebp], 0
  001cb	eb 0f		 jmp	 SHORT $LN7@draw_3d_cl
$LN5@draw_3d_cl:
  001cd	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  001d3	83 c0 01	 add	 eax, 1
  001d6	89 85 80 e7 ff
	ff		 mov	 DWORD PTR _x$35[ebp], eax
$LN7@draw_3d_cl:
  001dc	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  001e2	3b 85 88 e7 ff
	ff		 cmp	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  001e8	0f 8f 08 04 00
	00		 jg	 $LN6@draw_3d_cl

; 711  : 			{
; 712  : 
; 713  : 				vec3d
; 714  : 					point_vector;
; 715  : 
; 716  : 				float
; 717  : 					angle,
; 718  : 					distance,
; 719  : 					colour_t,
; 720  : 					dr,
; 721  : 					dg,
; 722  : 					db,
; 723  : 					r,
; 724  : 					g,
; 725  : 					b;
; 726  : 
; 727  : 				int
; 728  : 					ir,
; 729  : 					ig,
; 730  : 					ib;
; 731  : 
; 732  : 				x_offset = ( -CLOUD_3D_SECTOR_SIDE_LENGTH/2 ) + ( ( ( float ) x / ( float ) number_of_sub_sectors ) * CLOUD_3D_SECTOR_SIDE_LENGTH );

  001ee	f3 0f 2a 85 80
	e7 ff ff	 cvtsi2ss xmm0, DWORD PTR _x$35[ebp]
  001f6	f3 0f 2a 8d 88
	e7 ff ff	 cvtsi2ss xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  001fe	f3 0f 5e c1	 divss	 xmm0, xmm1
  00202	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@46800000
  0020a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@c6000000
  00212	f3 0f 11 85 78
	e7 ff ff	 movss	 DWORD PTR _x_offset$33[ebp], xmm0

; 733  : 				z_offset = ( -CLOUD_3D_SECTOR_SIDE_LENGTH/2 ) + ( ( ( float ) z / ( float ) number_of_sub_sectors ) * CLOUD_3D_SECTOR_SIDE_LENGTH );

  0021a	f3 0f 2a 85 7c
	e7 ff ff	 cvtsi2ss xmm0, DWORD PTR _z$34[ebp]
  00222	f3 0f 2a 8d 88
	e7 ff ff	 cvtsi2ss xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  0022a	f3 0f 5e c1	 divss	 xmm0, xmm1
  0022e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@46800000
  00236	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@c6000000
  0023e	f3 0f 11 85 74
	e7 ff ff	 movss	 DWORD PTR _z_offset$32[ebp], xmm0

; 734  : 
; 735  : 				cloud_points[count].x = x_offset;

  00246	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0024a	f3 0f 10 85 78
	e7 ff ff	 movss	 xmm0, DWORD PTR _x_offset$33[ebp]
  00252	f3 0f 11 84 05
	cc eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax], xmm0

; 736  : 				cloud_points[count].y = 0;

  0025b	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0025f	0f 57 c0	 xorps	 xmm0, xmm0
  00262	f3 0f 11 84 05
	d0 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+4], xmm0

; 737  : 				cloud_points[count].z = z_offset;

  0026b	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0026f	f3 0f 10 85 74
	e7 ff ff	 movss	 xmm0, DWORD PTR _z_offset$32[ebp]
  00277	f3 0f 11 84 05
	d4 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+8], xmm0

; 738  : 
; 739  : 				point_vector.x = sector_centre.x + x_offset;

  00280	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  00285	f3 0f 58 85 78
	e7 ff ff	 addss	 xmm0, DWORD PTR _x_offset$33[ebp]
  0028d	f3 0f 11 85 64
	e7 ff ff	 movss	 DWORD PTR _point_vector$30[ebp], xmm0

; 740  : 				point_vector.y = 0;

  00295	0f 57 c0	 xorps	 xmm0, xmm0
  00298	f3 0f 11 85 68
	e7 ff ff	 movss	 DWORD PTR _point_vector$30[ebp+4], xmm0

; 741  : 				point_vector.z = sector_centre.z + z_offset;

  002a0	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sector_centre$[ebp+8]
  002a5	f3 0f 58 85 74
	e7 ff ff	 addss	 xmm0, DWORD PTR _z_offset$32[ebp]
  002ad	f3 0f 11 85 6c
	e7 ff ff	 movss	 DWORD PTR _point_vector$30[ebp+8], xmm0

; 742  : 	
; 743  : 				distance = get_3d_vector_magnitude ( &point_vector );

  002b5	8d 85 64 e7 ff
	ff		 lea	 eax, DWORD PTR _point_vector$30[ebp]
  002bb	50		 push	 eax
  002bc	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  002c1	d9 9d 5c e7 ff
	ff		 fstp	 DWORD PTR _distance$28[ebp]

; 744  : 
; 745  : 				if ( distance > 1 )

  002c7	f3 0f 10 85 5c
	e7 ff ff	 movss	 xmm0, DWORD PTR _distance$28[ebp]
  002cf	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002d6	0f 86 84 01 00
	00		 jbe	 $LN28@draw_3d_cl

; 746  : 				{
; 747  : 	
; 748  : 					normalise_3d_vector_given_magnitude ( &point_vector, distance );

  002dc	51		 push	 ecx
  002dd	f3 0f 10 85 5c
	e7 ff ff	 movss	 xmm0, DWORD PTR _distance$28[ebp]
  002e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ea	8d 85 64 e7 ff
	ff		 lea	 eax, DWORD PTR _point_vector$30[ebp]
  002f0	50		 push	 eax
  002f1	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 749  : 		
; 750  : 					angle = ( ( point_vector.x * cloud_colour_blend_vector.x ) + ( point_vector.z * cloud_colour_blend_vector.z ) );

  002f6	f3 0f 10 85 64
	e7 ff ff	 movss	 xmm0, DWORD PTR _point_vector$30[ebp]
  002fe	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A
  00306	f3 0f 10 8d 6c
	e7 ff ff	 movss	 xmm1, DWORD PTR _point_vector$30[ebp+8]
  0030e	f3 0f 59 0d 08
	00 00 00	 mulss	 xmm1, DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A+8
  00316	f3 0f 58 c1	 addss	 xmm0, xmm1
  0031a	f3 0f 11 85 60
	e7 ff ff	 movss	 DWORD PTR _angle$29[ebp], xmm0

; 751  : 					angle = bound ( angle, 0, 1 );

  00322	0f 57 c0	 xorps	 xmm0, xmm0
  00325	0f 2f 85 60 e7
	ff ff		 comiss	 xmm0, DWORD PTR _angle$29[ebp]
  0032c	76 0d		 jbe	 SHORT $LN43@draw_3d_cl
  0032e	0f 57 c0	 xorps	 xmm0, xmm0
  00331	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv186[ebp], xmm0
  00339	eb 43		 jmp	 SHORT $LN44@draw_3d_cl
$LN43@draw_3d_cl:
  0033b	f3 0f 10 85 60
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$29[ebp]
  00343	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0034a	76 12		 jbe	 SHORT $LN41@draw_3d_cl
  0034c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00354	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv185[ebp], xmm0
  0035c	eb 10		 jmp	 SHORT $LN42@draw_3d_cl
$LN41@draw_3d_cl:
  0035e	f3 0f 10 85 60
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$29[ebp]
  00366	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv185[ebp], xmm0
$LN42@draw_3d_cl:
  0036e	f3 0f 10 85 e0
	e4 ff ff	 movss	 xmm0, DWORD PTR tv185[ebp]
  00376	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv186[ebp], xmm0
$LN44@draw_3d_cl:
  0037e	f3 0f 10 85 e4
	e4 ff ff	 movss	 xmm0, DWORD PTR tv186[ebp]
  00386	f3 0f 11 85 60
	e7 ff ff	 movss	 DWORD PTR _angle$29[ebp], xmm0

; 752  : 					angle *= angle;

  0038e	f3 0f 10 85 60
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$29[ebp]
  00396	f3 0f 59 85 60
	e7 ff ff	 mulss	 xmm0, DWORD PTR _angle$29[ebp]
  0039e	f3 0f 11 85 60
	e7 ff ff	 movss	 DWORD PTR _angle$29[ebp], xmm0

; 753  : 					angle *= angle;

  003a6	f3 0f 10 85 60
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$29[ebp]
  003ae	f3 0f 59 85 60
	e7 ff ff	 mulss	 xmm0, DWORD PTR _angle$29[ebp]
  003b6	f3 0f 11 85 60
	e7 ff ff	 movss	 DWORD PTR _angle$29[ebp], xmm0

; 754  : 		
; 755  : 					colour_t = ( distance / CLOUD_MAXIMUM_COLOUR_BLEND_DISTANCE );

  003be	f3 0f 5a 85 5c
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _distance$28[ebp]
  003c6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40a0000000000000
  003ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d2	f3 0f 11 85 58
	e7 ff ff	 movss	 DWORD PTR _colour_t$27[ebp], xmm0

; 756  : 					colour_t = bound ( colour_t, 0, 1 );

  003da	0f 57 c0	 xorps	 xmm0, xmm0
  003dd	0f 2f 85 58 e7
	ff ff		 comiss	 xmm0, DWORD PTR _colour_t$27[ebp]
  003e4	76 0d		 jbe	 SHORT $LN47@draw_3d_cl
  003e6	0f 57 c0	 xorps	 xmm0, xmm0
  003e9	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv227[ebp], xmm0
  003f1	eb 43		 jmp	 SHORT $LN48@draw_3d_cl
$LN47@draw_3d_cl:
  003f3	f3 0f 10 85 58
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$27[ebp]
  003fb	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00402	76 12		 jbe	 SHORT $LN45@draw_3d_cl
  00404	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0040c	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv226[ebp], xmm0
  00414	eb 10		 jmp	 SHORT $LN46@draw_3d_cl
$LN45@draw_3d_cl:
  00416	f3 0f 10 85 58
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$27[ebp]
  0041e	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv226[ebp], xmm0
$LN46@draw_3d_cl:
  00426	f3 0f 10 85 e0
	e4 ff ff	 movss	 xmm0, DWORD PTR tv226[ebp]
  0042e	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv227[ebp], xmm0
$LN48@draw_3d_cl:
  00436	f3 0f 10 85 e4
	e4 ff ff	 movss	 xmm0, DWORD PTR tv227[ebp]
  0043e	f3 0f 11 85 58
	e7 ff ff	 movss	 DWORD PTR _colour_t$27[ebp], xmm0

; 757  : 					colour_t *= angle;

  00446	f3 0f 10 85 58
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$27[ebp]
  0044e	f3 0f 59 85 60
	e7 ff ff	 mulss	 xmm0, DWORD PTR _angle$29[ebp]
  00456	f3 0f 11 85 58
	e7 ff ff	 movss	 DWORD PTR _colour_t$27[ebp], xmm0

; 758  : 				}
; 759  : 				else

  0045e	eb 0b		 jmp	 SHORT $LN29@draw_3d_cl
$LN28@draw_3d_cl:

; 760  : 				{
; 761  : 
; 762  : 					colour_t = 0;

  00460	0f 57 c0	 xorps	 xmm0, xmm0
  00463	f3 0f 11 85 58
	e7 ff ff	 movss	 DWORD PTR _colour_t$27[ebp], xmm0
$LN29@draw_3d_cl:

; 763  : 				}
; 764  : 
; 765  : 				dr = active_3d_environment->cloud_light.object_colour.red - active_3d_environment->cloud_light.light__colour.red;

  0046b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00470	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00476	f3 0f 10 80 74
	01 00 00	 movss	 xmm0, DWORD PTR [eax+372]
  0047e	f3 0f 5c 81 64
	01 00 00	 subss	 xmm0, DWORD PTR [ecx+356]
  00486	f3 0f 11 85 54
	e7 ff ff	 movss	 DWORD PTR _dr$26[ebp], xmm0

; 766  : 				dg = active_3d_environment->cloud_light.object_colour.green - active_3d_environment->cloud_light.light__colour.green;

  0048e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00493	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00499	f3 0f 10 80 78
	01 00 00	 movss	 xmm0, DWORD PTR [eax+376]
  004a1	f3 0f 5c 81 68
	01 00 00	 subss	 xmm0, DWORD PTR [ecx+360]
  004a9	f3 0f 11 85 50
	e7 ff ff	 movss	 DWORD PTR _dg$25[ebp], xmm0

; 767  : 				db = active_3d_environment->cloud_light.object_colour.blue - active_3d_environment->cloud_light.light__colour.blue;

  004b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  004b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  004bc	f3 0f 10 80 7c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+380]
  004c4	f3 0f 5c 81 6c
	01 00 00	 subss	 xmm0, DWORD PTR [ecx+364]
  004cc	f3 0f 11 85 4c
	e7 ff ff	 movss	 DWORD PTR _db$24[ebp], xmm0

; 768  : 	
; 769  : 				r = active_3d_environment->cloud_light.light__colour.red + ( colour_t * dr );

  004d4	f3 0f 10 85 58
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$27[ebp]
  004dc	f3 0f 59 85 54
	e7 ff ff	 mulss	 xmm0, DWORD PTR _dr$26[ebp]
  004e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  004e9	f3 0f 58 80 64
	01 00 00	 addss	 xmm0, DWORD PTR [eax+356]
  004f1	f3 0f 11 85 48
	e7 ff ff	 movss	 DWORD PTR _r$23[ebp], xmm0

; 770  : 				g = active_3d_environment->cloud_light.light__colour.green + ( colour_t * dg );

  004f9	f3 0f 10 85 58
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$27[ebp]
  00501	f3 0f 59 85 50
	e7 ff ff	 mulss	 xmm0, DWORD PTR _dg$25[ebp]
  00509	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0050e	f3 0f 58 80 68
	01 00 00	 addss	 xmm0, DWORD PTR [eax+360]
  00516	f3 0f 11 85 44
	e7 ff ff	 movss	 DWORD PTR _g$22[ebp], xmm0

; 771  : 				b = active_3d_environment->cloud_light.light__colour.blue + ( colour_t * db );

  0051e	f3 0f 10 85 58
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$27[ebp]
  00526	f3 0f 59 85 4c
	e7 ff ff	 mulss	 xmm0, DWORD PTR _db$24[ebp]
  0052e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00533	f3 0f 58 80 6c
	01 00 00	 addss	 xmm0, DWORD PTR [eax+364]
  0053b	f3 0f 11 85 40
	e7 ff ff	 movss	 DWORD PTR _b$21[ebp], xmm0

; 772  : 	
; 773  : 				convert_float_to_int ( r * 255.0, &ir );

  00543	8d 85 3c e7 ff
	ff		 lea	 eax, DWORD PTR _ir$20[ebp]
  00549	50		 push	 eax
  0054a	f3 0f 5a 85 48
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _r$23[ebp]
  00552	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  0055a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0055e	51		 push	 ecx
  0055f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00564	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 774  : 				convert_float_to_int ( g * 255.0, &ig );

  00569	8d 85 38 e7 ff
	ff		 lea	 eax, DWORD PTR _ig$19[ebp]
  0056f	50		 push	 eax
  00570	f3 0f 5a 85 44
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _g$22[ebp]
  00578	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  00580	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00584	51		 push	 ecx
  00585	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058a	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 775  : 				convert_float_to_int ( b * 255.0, &ib );

  0058f	8d 85 34 e7 ff
	ff		 lea	 eax, DWORD PTR _ib$18[ebp]
  00595	50		 push	 eax
  00596	f3 0f 5a 85 40
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _b$21[ebp]
  0059e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  005a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005aa	51		 push	 ecx
  005ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b0	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 776  : 	
; 777  : 				cloud_points[count].red = ir;

  005b5	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  005b9	8a 8d 3c e7 ff
	ff		 mov	 cl, BYTE PTR _ir$20[ebp]
  005bf	88 8c 05 de eb
	ff ff		 mov	 BYTE PTR _cloud_points$[ebp+eax+18], cl

; 778  : 				cloud_points[count].green = ig;

  005c6	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  005ca	8a 8d 38 e7 ff
	ff		 mov	 cl, BYTE PTR _ig$19[ebp]
  005d0	88 8c 05 dd eb
	ff ff		 mov	 BYTE PTR _cloud_points$[ebp+eax+17], cl

; 779  : 				cloud_points[count].blue = ib;

  005d7	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  005db	8a 8d 34 e7 ff
	ff		 mov	 cl, BYTE PTR _ib$18[ebp]
  005e1	88 8c 05 dc eb
	ff ff		 mov	 BYTE PTR _cloud_points$[ebp+eax+16], cl

; 780  : 
; 781  : 				count++;

  005e8	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  005eb	83 c0 01	 add	 eax, 1
  005ee	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 782  : 			}

  005f1	e9 d7 fb ff ff	 jmp	 $LN5@draw_3d_cl
$LN6@draw_3d_cl:

; 783  : 		}

  005f6	e9 a5 fb ff ff	 jmp	 $LN2@draw_3d_cl
$LN3@draw_3d_cl:

; 784  : 
; 785  : 		count = 0;

  005fb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 786  : 
; 787  : 		z_offset = -CLOUD_3D_SECTOR_SIDE_LENGTH/2 + ( CLOUD_3D_SECTOR_SIDE_LENGTH / ( number_of_sub_sectors * 2 ) );

  00602	8b 8d 88 e7 ff
	ff		 mov	 ecx, DWORD PTR _number_of_sub_sectors$37[ebp]
  00608	d1 e1		 shl	 ecx, 1
  0060a	b8 00 40 00 00	 mov	 eax, 16384		; 00004000H
  0060f	99		 cdq
  00610	f7 f9		 idiv	 ecx
  00612	2d 00 20 00 00	 sub	 eax, 8192		; 00002000H
  00617	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0061b	f3 0f 11 85 74
	e7 ff ff	 movss	 DWORD PTR _z_offset$32[ebp], xmm0

; 788  : 
; 789  : 		for ( z = 0; z < number_of_sub_sectors; z++ )

  00623	c7 85 7c e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _z$34[ebp], 0
  0062d	eb 0f		 jmp	 SHORT $LN10@draw_3d_cl
$LN8@draw_3d_cl:
  0062f	8b 85 7c e7 ff
	ff		 mov	 eax, DWORD PTR _z$34[ebp]
  00635	83 c0 01	 add	 eax, 1
  00638	89 85 7c e7 ff
	ff		 mov	 DWORD PTR _z$34[ebp], eax
$LN10@draw_3d_cl:
  0063e	8b 85 7c e7 ff
	ff		 mov	 eax, DWORD PTR _z$34[ebp]
  00644	3b 85 88 e7 ff
	ff		 cmp	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  0064a	0f 8d 95 01 00
	00		 jge	 $LN9@draw_3d_cl

; 790  : 		{
; 791  : 
; 792  : 			x_offset = -CLOUD_3D_SECTOR_SIDE_LENGTH/2 + ( CLOUD_3D_SECTOR_SIDE_LENGTH / ( number_of_sub_sectors * 2 ) );

  00650	8b 8d 88 e7 ff
	ff		 mov	 ecx, DWORD PTR _number_of_sub_sectors$37[ebp]
  00656	d1 e1		 shl	 ecx, 1
  00658	b8 00 40 00 00	 mov	 eax, 16384		; 00004000H
  0065d	99		 cdq
  0065e	f7 f9		 idiv	 ecx
  00660	2d 00 20 00 00	 sub	 eax, 8192		; 00002000H
  00665	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00669	f3 0f 11 85 78
	e7 ff ff	 movss	 DWORD PTR _x_offset$33[ebp], xmm0

; 793  : 
; 794  : 			for ( x = 0; x < number_of_sub_sectors; x++ )

  00671	c7 85 80 e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _x$35[ebp], 0
  0067b	eb 0f		 jmp	 SHORT $LN13@draw_3d_cl
$LN11@draw_3d_cl:
  0067d	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  00683	83 c0 01	 add	 eax, 1
  00686	89 85 80 e7 ff
	ff		 mov	 DWORD PTR _x$35[ebp], eax
$LN13@draw_3d_cl:
  0068c	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  00692	3b 85 88 e7 ff
	ff		 cmp	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  00698	0f 8d 22 01 00
	00		 jge	 $LN12@draw_3d_cl

; 795  : 			{
; 796  : 
; 797  : 				tempx = sector_centre.x + x_offset;

  0069e	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  006a3	f3 0f 58 85 78
	e7 ff ff	 addss	 xmm0, DWORD PTR _x_offset$33[ebp]
  006ab	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006af	f2 0f 11 45 ec	 movsd	 QWORD PTR _tempx$[ebp], xmm0

; 798  : 				tempz = sector_centre.z + z_offset;

  006b4	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sector_centre$[ebp+8]
  006b9	f3 0f 58 85 74
	e7 ff ff	 addss	 xmm0, DWORD PTR _z_offset$32[ebp]
  006c1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006c5	f2 0f 11 45 e4	 movsd	 QWORD PTR _tempz$[ebp], xmm0

; 799  : 
; 800  : 				tempx *= tempx;

  006ca	f2 0f 10 45 ec	 movsd	 xmm0, QWORD PTR _tempx$[ebp]
  006cf	f2 0f 59 45 ec	 mulsd	 xmm0, QWORD PTR _tempx$[ebp]
  006d4	f2 0f 11 45 ec	 movsd	 QWORD PTR _tempx$[ebp], xmm0

; 801  : 				tempz *= tempz;

  006d9	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR _tempz$[ebp]
  006de	f2 0f 59 45 e4	 mulsd	 xmm0, QWORD PTR _tempz$[ebp]
  006e3	f2 0f 11 45 e4	 movsd	 QWORD PTR _tempz$[ebp], xmm0

; 802  : 
; 803  : 				alpha = ( ( cloud_3d_blend_constant - ( tempx + tempz ) ) * cloud_3d_adjusted_blend_factor );

  006e8	f2 0f 10 45 ec	 movsd	 xmm0, QWORD PTR _tempx$[ebp]
  006ed	f2 0f 58 45 e4	 addsd	 xmm0, QWORD PTR _tempz$[ebp]
  006f2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR ?cloud_3d_blend_constant@@3NA
  006fa	f2 0f 5c c8	 subsd	 xmm1, xmm0
  006fe	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR ?cloud_3d_adjusted_blend_factor@@3NA
  00706	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0070a	f3 0f 11 85 70
	e7 ff ff	 movss	 DWORD PTR _alpha$31[ebp], xmm0

; 804  : 				alpha = bound ( alpha, 0, 1 );

  00712	0f 57 c0	 xorps	 xmm0, xmm0
  00715	0f 2f 85 70 e7
	ff ff		 comiss	 xmm0, DWORD PTR _alpha$31[ebp]
  0071c	76 0d		 jbe	 SHORT $LN51@draw_3d_cl
  0071e	0f 57 c0	 xorps	 xmm0, xmm0
  00721	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv315[ebp], xmm0
  00729	eb 43		 jmp	 SHORT $LN52@draw_3d_cl
$LN51@draw_3d_cl:
  0072b	f3 0f 10 85 70
	e7 ff ff	 movss	 xmm0, DWORD PTR _alpha$31[ebp]
  00733	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0073a	76 12		 jbe	 SHORT $LN49@draw_3d_cl
  0073c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00744	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv314[ebp], xmm0
  0074c	eb 10		 jmp	 SHORT $LN50@draw_3d_cl
$LN49@draw_3d_cl:
  0074e	f3 0f 10 85 70
	e7 ff ff	 movss	 xmm0, DWORD PTR _alpha$31[ebp]
  00756	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv314[ebp], xmm0
$LN50@draw_3d_cl:
  0075e	f3 0f 10 85 e0
	e4 ff ff	 movss	 xmm0, DWORD PTR tv314[ebp]
  00766	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv315[ebp], xmm0
$LN52@draw_3d_cl:
  0076e	f3 0f 10 85 e4
	e4 ff ff	 movss	 xmm0, DWORD PTR tv315[ebp]
  00776	f3 0f 11 85 70
	e7 ff ff	 movss	 DWORD PTR _alpha$31[ebp], xmm0

; 805  : 		
; 806  : 				cloud_polygon_alphas[count] = alpha;

  0077e	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00781	f3 0f 10 85 70
	e7 ff ff	 movss	 xmm0, DWORD PTR _alpha$31[ebp]
  00789	f3 0f 11 84 85
	cc e7 ff ff	 movss	 DWORD PTR _cloud_polygon_alphas$[ebp+eax*4], xmm0

; 807  : 
; 808  : 				x_offset += CLOUD_3D_SECTOR_SIDE_LENGTH / ( number_of_sub_sectors * 1 );

  00792	b8 00 40 00 00	 mov	 eax, 16384		; 00004000H
  00797	99		 cdq
  00798	f7 bd 88 e7 ff
	ff		 idiv	 DWORD PTR _number_of_sub_sectors$37[ebp]
  0079e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  007a2	f3 0f 58 85 78
	e7 ff ff	 addss	 xmm0, DWORD PTR _x_offset$33[ebp]
  007aa	f3 0f 11 85 78
	e7 ff ff	 movss	 DWORD PTR _x_offset$33[ebp], xmm0

; 809  : 
; 810  : 				count++;

  007b2	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  007b5	83 c0 01	 add	 eax, 1
  007b8	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 811  : 			}

  007bb	e9 bd fe ff ff	 jmp	 $LN11@draw_3d_cl
$LN12@draw_3d_cl:

; 812  : 
; 813  : 			z_offset += CLOUD_3D_SECTOR_SIDE_LENGTH / ( number_of_sub_sectors * 1 );

  007c0	b8 00 40 00 00	 mov	 eax, 16384		; 00004000H
  007c5	99		 cdq
  007c6	f7 bd 88 e7 ff
	ff		 idiv	 DWORD PTR _number_of_sub_sectors$37[ebp]
  007cc	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  007d0	f3 0f 58 85 74
	e7 ff ff	 addss	 xmm0, DWORD PTR _z_offset$32[ebp]
  007d8	f3 0f 11 85 74
	e7 ff ff	 movss	 DWORD PTR _z_offset$32[ebp], xmm0

; 814  : 		}

  007e0	e9 4a fe ff ff	 jmp	 $LN8@draw_3d_cl
$LN9@draw_3d_cl:

; 815  : 
; 816  : 		transform_cloud_points ( number_of_points, cloud_points, cloud_transformed_3d_points, &sector_relative_centre );

  007e5	8d 45 cc	 lea	 eax, DWORD PTR _sector_relative_centre$[ebp]
  007e8	50		 push	 eax
  007e9	68 00 00 00 00	 push	 OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  007ee	8d 8d cc eb ff
	ff		 lea	 ecx, DWORD PTR _cloud_points$[ebp]
  007f4	51		 push	 ecx
  007f5	8b 95 84 e7 ff
	ff		 mov	 edx, DWORD PTR _number_of_points$36[ebp]
  007fb	52		 push	 edx
  007fc	e8 00 00 00 00	 call	 ?transform_cloud_points@@YGXHPAUCLOUD_3D_POINT@@PAUVERTEX@@PAUVEC3D@@@Z ; transform_cloud_points

; 817  : 
; 818  : 		//
; 819  : 		// Render a quad twice, for the blending between cloud textures
; 820  : 		//
; 821  : 
; 822  : 		count = 0;

  00801	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 823  : 
; 824  : 		z_offset = 0;

  00808	0f 57 c0	 xorps	 xmm0, xmm0
  0080b	f3 0f 11 85 74
	e7 ff ff	 movss	 DWORD PTR _z_offset$32[ebp], xmm0

; 825  : 
; 826  : 		for ( z = 0; z < number_of_sub_sectors; z++ )

  00813	c7 85 7c e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _z$34[ebp], 0
  0081d	eb 0f		 jmp	 SHORT $LN16@draw_3d_cl
$LN14@draw_3d_cl:
  0081f	8b 85 7c e7 ff
	ff		 mov	 eax, DWORD PTR _z$34[ebp]
  00825	83 c0 01	 add	 eax, 1
  00828	89 85 7c e7 ff
	ff		 mov	 DWORD PTR _z$34[ebp], eax
$LN16@draw_3d_cl:
  0082e	8b 85 7c e7 ff
	ff		 mov	 eax, DWORD PTR _z$34[ebp]
  00834	3b 85 88 e7 ff
	ff		 cmp	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  0083a	0f 8d f3 04 00
	00		 jge	 $LN15@draw_3d_cl

; 827  : 		{
; 828  : 
; 829  : 			x_offset = 0;

  00840	0f 57 c0	 xorps	 xmm0, xmm0
  00843	f3 0f 11 85 78
	e7 ff ff	 movss	 DWORD PTR _x_offset$33[ebp], xmm0

; 830  : 
; 831  : 			for ( x = 0; x < number_of_sub_sectors; x++ )

  0084b	c7 85 80 e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _x$35[ebp], 0
  00855	eb 0f		 jmp	 SHORT $LN19@draw_3d_cl
$LN17@draw_3d_cl:
  00857	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  0085d	83 c0 01	 add	 eax, 1
  00860	89 85 80 e7 ff
	ff		 mov	 DWORD PTR _x$35[ebp], eax
$LN19@draw_3d_cl:
  00866	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  0086c	3b 85 88 e7 ff
	ff		 cmp	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  00872	0f 8d 8a 04 00
	00		 jge	 $LN18@draw_3d_cl

; 832  : 			{
; 833  : 
; 834  : 				int
; 835  : 					tmp,
; 836  : 					z_bottom_point_offset,
; 837  : 					z_top_point_offset;
; 838  : 
; 839  : 				z_bottom_point_offset = z * ( number_of_sub_sectors + 1 );

  00878	8b 85 88 e7 ff
	ff		 mov	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  0087e	83 c0 01	 add	 eax, 1
  00881	0f af 85 7c e7
	ff ff		 imul	 eax, DWORD PTR _z$34[ebp]
  00888	89 85 2c e7 ff
	ff		 mov	 DWORD PTR _z_bottom_point_offset$16[ebp], eax

; 840  : 
; 841  : 				z_top_point_offset = z_bottom_point_offset +  ( number_of_sub_sectors + 1 );

  0088e	8b 85 88 e7 ff
	ff		 mov	 eax, DWORD PTR _number_of_sub_sectors$37[ebp]
  00894	8b 8d 2c e7 ff
	ff		 mov	 ecx, DWORD PTR _z_bottom_point_offset$16[ebp]
  0089a	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  0089e	89 95 28 e7 ff
	ff		 mov	 DWORD PTR _z_top_point_offset$15[ebp], edx

; 842  : 
; 843  : 				if ( cloud_3d_base_height < visual_3d_vp->y )

  008a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  008a9	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  008ae	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  008b5	0f 86 ae 01 00
	00		 jbe	 $LN30@draw_3d_cl

; 844  : 				{
; 845  : 	
; 846  : 					point_references[3].point = x + z_bottom_point_offset;

  008bb	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  008c1	03 85 2c e7 ff
	ff		 add	 eax, DWORD PTR _z_bottom_point_offset$16[ebp]
  008c7	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  008cc	6b d1 03	 imul	 edx, ecx, 3
  008cf	89 84 15 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+edx], eax

; 847  : 					point_references[3].u = x_offset;

  008d6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  008db	6b c8 03	 imul	 ecx, eax, 3
  008de	f3 0f 10 85 78
	e7 ff ff	 movss	 xmm0, DWORD PTR _x_offset$33[ebp]
  008e6	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0

; 848  : 					point_references[3].v = z_offset;

  008ef	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  008f4	6b c8 03	 imul	 ecx, eax, 3
  008f7	f3 0f 10 85 74
	e7 ff ff	 movss	 xmm0, DWORD PTR _z_offset$32[ebp]
  008ff	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0

; 849  : 	
; 850  : 					point_references[2].point = x + z_bottom_point_offset + 1;

  00908	8b 85 2c e7 ff
	ff		 mov	 eax, DWORD PTR _z_bottom_point_offset$16[ebp]
  0090e	8b 8d 80 e7 ff
	ff		 mov	 ecx, DWORD PTR _x$35[ebp]
  00914	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00918	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0091d	d1 e0		 shl	 eax, 1
  0091f	89 94 05 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+eax], edx

; 851  : 					point_references[2].u = x_offset + ( 1.0 / number_of_sub_sectors );

  00926	f3 0f 5a 85 78
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _x_offset$33[ebp]
  0092e	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  00936	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  0093e	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00942	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00946	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0094a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0094f	d1 e0		 shl	 eax, 1
  00951	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0

; 852  : 					point_references[2].v = z_offset;

  0095a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0095f	d1 e0		 shl	 eax, 1
  00961	f3 0f 10 85 74
	e7 ff ff	 movss	 xmm0, DWORD PTR _z_offset$32[ebp]
  00969	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 853  : 	
; 854  : 					point_references[1].point = x + z_top_point_offset + 1;

  00972	8b 85 28 e7 ff
	ff		 mov	 eax, DWORD PTR _z_top_point_offset$15[ebp]
  00978	8b 8d 80 e7 ff
	ff		 mov	 ecx, DWORD PTR _x$35[ebp]
  0097e	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00982	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00987	c1 e0 00	 shl	 eax, 0
  0098a	89 94 05 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+eax], edx

; 855  : 					point_references[1].u = x_offset + ( 1.0 / number_of_sub_sectors );

  00991	f3 0f 5a 85 78
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _x_offset$33[ebp]
  00999	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  009a1	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  009a9	f2 0f 5e d1	 divsd	 xmm2, xmm1
  009ad	f2 0f 58 c2	 addsd	 xmm0, xmm2
  009b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009b5	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  009ba	c1 e0 00	 shl	 eax, 0
  009bd	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0

; 856  : 					point_references[1].v = z_offset + ( 1.0 / number_of_sub_sectors );

  009c6	f3 0f 5a 85 74
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _z_offset$32[ebp]
  009ce	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  009d6	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  009de	f2 0f 5e d1	 divsd	 xmm2, xmm1
  009e2	f2 0f 58 c2	 addsd	 xmm0, xmm2
  009e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009ea	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  009ef	c1 e0 00	 shl	 eax, 0
  009f2	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 857  : 	
; 858  : 					point_references[0].point = x + z_top_point_offset;

  009fb	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  00a01	03 85 28 e7 ff
	ff		 add	 eax, DWORD PTR _z_top_point_offset$15[ebp]
  00a07	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00a0c	6b d1 00	 imul	 edx, ecx, 0
  00a0f	89 84 15 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+edx], eax

; 859  : 					point_references[0].u = x_offset;

  00a16	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a1b	6b c8 00	 imul	 ecx, eax, 0
  00a1e	f3 0f 10 85 78
	e7 ff ff	 movss	 xmm0, DWORD PTR _x_offset$33[ebp]
  00a26	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0

; 860  : 					point_references[0].v = z_offset + ( 1.0 / number_of_sub_sectors );

  00a2f	f3 0f 5a 85 74
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _z_offset$32[ebp]
  00a37	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  00a3f	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00a47	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00a4b	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00a4f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a53	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a58	6b c8 00	 imul	 ecx, eax, 0
  00a5b	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0

; 861  : 				}
; 862  : 				else

  00a64	e9 a9 01 00 00	 jmp	 $LN31@draw_3d_cl
$LN30@draw_3d_cl:

; 863  : 				{
; 864  : 	
; 865  : 					point_references[0].point = x + z_bottom_point_offset;

  00a69	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  00a6f	03 85 2c e7 ff
	ff		 add	 eax, DWORD PTR _z_bottom_point_offset$16[ebp]
  00a75	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00a7a	6b d1 00	 imul	 edx, ecx, 0
  00a7d	89 84 15 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+edx], eax

; 866  : 					point_references[0].u = x_offset;

  00a84	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a89	6b c8 00	 imul	 ecx, eax, 0
  00a8c	f3 0f 10 85 78
	e7 ff ff	 movss	 xmm0, DWORD PTR _x_offset$33[ebp]
  00a94	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0

; 867  : 					point_references[0].v = z_offset;

  00a9d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00aa2	6b c8 00	 imul	 ecx, eax, 0
  00aa5	f3 0f 10 85 74
	e7 ff ff	 movss	 xmm0, DWORD PTR _z_offset$32[ebp]
  00aad	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0

; 868  : 	
; 869  : 					point_references[1].point = x + z_bottom_point_offset + 1;

  00ab6	8b 85 2c e7 ff
	ff		 mov	 eax, DWORD PTR _z_bottom_point_offset$16[ebp]
  00abc	8b 8d 80 e7 ff
	ff		 mov	 ecx, DWORD PTR _x$35[ebp]
  00ac2	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00ac6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00acb	c1 e0 00	 shl	 eax, 0
  00ace	89 94 05 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+eax], edx

; 870  : 					point_references[1].u = x_offset + ( 1.0 / number_of_sub_sectors );

  00ad5	f3 0f 5a 85 78
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _x_offset$33[ebp]
  00add	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  00ae5	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00aed	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00af1	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00af5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00af9	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00afe	c1 e0 00	 shl	 eax, 0
  00b01	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0

; 871  : 					point_references[1].v = z_offset;

  00b0a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b0f	c1 e0 00	 shl	 eax, 0
  00b12	f3 0f 10 85 74
	e7 ff ff	 movss	 xmm0, DWORD PTR _z_offset$32[ebp]
  00b1a	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 872  : 	
; 873  : 					point_references[2].point = x + z_top_point_offset + 1;

  00b23	8b 85 28 e7 ff
	ff		 mov	 eax, DWORD PTR _z_top_point_offset$15[ebp]
  00b29	8b 8d 80 e7 ff
	ff		 mov	 ecx, DWORD PTR _x$35[ebp]
  00b2f	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00b33	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b38	d1 e0		 shl	 eax, 1
  00b3a	89 94 05 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+eax], edx

; 874  : 					point_references[2].u = x_offset + ( 1.0 / number_of_sub_sectors );

  00b41	f3 0f 5a 85 78
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _x_offset$33[ebp]
  00b49	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  00b51	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00b59	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00b5d	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00b61	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b65	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b6a	d1 e0		 shl	 eax, 1
  00b6c	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0

; 875  : 					point_references[2].v = z_offset + ( 1.0 / number_of_sub_sectors );

  00b75	f3 0f 5a 85 74
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _z_offset$32[ebp]
  00b7d	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  00b85	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00b8d	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00b91	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00b95	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b99	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b9e	d1 e0		 shl	 eax, 1
  00ba0	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 876  : 	
; 877  : 					point_references[3].point = x + z_top_point_offset;

  00ba9	8b 85 80 e7 ff
	ff		 mov	 eax, DWORD PTR _x$35[ebp]
  00baf	03 85 28 e7 ff
	ff		 add	 eax, DWORD PTR _z_top_point_offset$15[ebp]
  00bb5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00bba	6b d1 03	 imul	 edx, ecx, 3
  00bbd	89 84 15 8c e7
	ff ff		 mov	 DWORD PTR _point_references$[ebp+edx], eax

; 878  : 					point_references[3].u = x_offset;

  00bc4	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00bc9	6b c8 03	 imul	 ecx, eax, 3
  00bcc	f3 0f 10 85 78
	e7 ff ff	 movss	 xmm0, DWORD PTR _x_offset$33[ebp]
  00bd4	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0

; 879  : 					point_references[3].v = z_offset + ( 1.0 / number_of_sub_sectors );

  00bdd	f3 0f 5a 85 74
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _z_offset$32[ebp]
  00be5	f2 0f 2a 8d 88
	e7 ff ff	 cvtsi2sd xmm1, DWORD PTR _number_of_sub_sectors$37[ebp]
  00bed	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00bf5	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00bf9	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00bfd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c01	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c06	6b c8 03	 imul	 ecx, eax, 3
  00c09	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0
$LN31@draw_3d_cl:

; 880  : 				}
; 881  : 
; 882  : 				for ( tmp = 0; tmp < 4; tmp++ )

  00c12	c7 85 30 e7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _tmp$17[ebp], 0
  00c1c	eb 0f		 jmp	 SHORT $LN22@draw_3d_cl
$LN20@draw_3d_cl:
  00c1e	8b 85 30 e7 ff
	ff		 mov	 eax, DWORD PTR _tmp$17[ebp]
  00c24	83 c0 01	 add	 eax, 1
  00c27	89 85 30 e7 ff
	ff		 mov	 DWORD PTR _tmp$17[ebp], eax
$LN22@draw_3d_cl:
  00c2d	83 bd 30 e7 ff
	ff 04		 cmp	 DWORD PTR _tmp$17[ebp], 4
  00c34	7d 24		 jge	 SHORT $LN21@draw_3d_cl

; 883  : 				{
; 884  : 		
; 885  : 					cloud_points[ point_references[tmp].point ].a = cloud_polygon_alphas[count];

  00c36	8b 85 30 e7 ff
	ff		 mov	 eax, DWORD PTR _tmp$17[ebp]
  00c3c	c1 e0 04	 shl	 eax, 4
  00c3f	6b 8c 05 8c e7
	ff ff 14	 imul	 ecx, DWORD PTR _point_references$[ebp+eax], 20
  00c47	8b 55 fc	 mov	 edx, DWORD PTR _count$[ebp]
  00c4a	8b 84 95 cc e7
	ff ff		 mov	 eax, DWORD PTR _cloud_polygon_alphas$[ebp+edx*4]
  00c51	89 84 0d d8 eb
	ff ff		 mov	 DWORD PTR _cloud_points$[ebp+ecx+12], eax

; 886  : 				}

  00c58	eb c4		 jmp	 SHORT $LN20@draw_3d_cl
$LN21@draw_3d_cl:

; 887  : 
; 888  : 				if ( current_weather_texture )

  00c5a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A, 0
  00c61	74 2e		 je	 SHORT $LN32@draw_3d_cl

; 889  : 				{
; 890  : 
; 891  : 					render_cloud_polygon ( 4, point_references, cloud_transformed_3d_points, cloud_points, cloud_weather_one_minus_blend_factor, current_weather_texture );

  00c63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A
  00c68	50		 push	 eax
  00c69	51		 push	 ecx
  00c6a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA
  00c72	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c77	8d 8d cc eb ff
	ff		 lea	 ecx, DWORD PTR _cloud_points$[ebp]
  00c7d	51		 push	 ecx
  00c7e	68 00 00 00 00	 push	 OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  00c83	8d 95 8c e7 ff
	ff		 lea	 edx, DWORD PTR _point_references$[ebp]
  00c89	52		 push	 edx
  00c8a	6a 04		 push	 4
  00c8c	e8 00 00 00 00	 call	 ?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z ; render_cloud_polygon
$LN32@draw_3d_cl:

; 892  : 				}
; 893  : 
; 894  : 				if ( target_weather_texture )

  00c91	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A, 0
  00c98	74 2e		 je	 SHORT $LN33@draw_3d_cl

; 895  : 				{
; 896  : 
; 897  : 					render_cloud_polygon ( 4, point_references, cloud_transformed_3d_points, cloud_points, cloud_weather_blend_factor, target_weather_texture );

  00c9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A
  00c9f	50		 push	 eax
  00ca0	51		 push	 ecx
  00ca1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_blend_factor@@3MA
  00ca9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cae	8d 8d cc eb ff
	ff		 lea	 ecx, DWORD PTR _cloud_points$[ebp]
  00cb4	51		 push	 ecx
  00cb5	68 00 00 00 00	 push	 OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  00cba	8d 95 8c e7 ff
	ff		 lea	 edx, DWORD PTR _point_references$[ebp]
  00cc0	52		 push	 edx
  00cc1	6a 04		 push	 4
  00cc3	e8 00 00 00 00	 call	 ?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z ; render_cloud_polygon
$LN33@draw_3d_cl:

; 898  : 				}
; 899  : 
; 900  : 				x_offset += ( 1.0 / number_of_sub_sectors );

  00cc8	f2 0f 2a 85 88
	e7 ff ff	 cvtsi2sd xmm0, DWORD PTR _number_of_sub_sectors$37[ebp]
  00cd0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00cd8	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00cdc	f3 0f 5a 85 78
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _x_offset$33[ebp]
  00ce4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00ce8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cec	f3 0f 11 85 78
	e7 ff ff	 movss	 DWORD PTR _x_offset$33[ebp], xmm0

; 901  : 
; 902  : 				count++;

  00cf4	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00cf7	83 c0 01	 add	 eax, 1
  00cfa	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 903  : 			}

  00cfd	e9 55 fb ff ff	 jmp	 $LN17@draw_3d_cl
$LN18@draw_3d_cl:

; 904  : 
; 905  : 			z_offset += ( 1.0 / number_of_sub_sectors );

  00d02	f2 0f 2a 85 88
	e7 ff ff	 cvtsi2sd xmm0, DWORD PTR _number_of_sub_sectors$37[ebp]
  00d0a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00d12	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00d16	f3 0f 5a 85 74
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _z_offset$32[ebp]
  00d1e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00d22	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d26	f3 0f 11 85 74
	e7 ff ff	 movss	 DWORD PTR _z_offset$32[ebp], xmm0

; 906  : 		}

  00d2e	e9 ec fa ff ff	 jmp	 $LN14@draw_3d_cl
$LN15@draw_3d_cl:

; 907  : 	}
; 908  : 	else

  00d33	e9 04 08 00 00	 jmp	 $LN39@draw_3d_cl
$LN26@draw_3d_cl:

; 909  : 	{
; 910  : 	
; 911  : 		cloud_points[0].x = -CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00d38	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00d3d	6b c8 00	 imul	 ecx, eax, 0
  00d40	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6000000
  00d48	f3 0f 11 84 0d
	cc eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+ecx], xmm0

; 912  : 		cloud_points[0].y = 0;

  00d51	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00d56	6b c8 00	 imul	 ecx, eax, 0
  00d59	0f 57 c0	 xorps	 xmm0, xmm0
  00d5c	f3 0f 11 84 0d
	d0 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+ecx+4], xmm0

; 913  : 		cloud_points[0].z = -CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00d65	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00d6a	6b c8 00	 imul	 ecx, eax, 0
  00d6d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6000000
  00d75	f3 0f 11 84 0d
	d4 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+ecx+8], xmm0

; 914  : 	
; 915  : 		cloud_points[1].x = +CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00d7e	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00d83	c1 e0 00	 shl	 eax, 0
  00d86	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46000000
  00d8e	f3 0f 11 84 05
	cc eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax], xmm0

; 916  : 		cloud_points[1].y = 0;

  00d97	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00d9c	c1 e0 00	 shl	 eax, 0
  00d9f	0f 57 c0	 xorps	 xmm0, xmm0
  00da2	f3 0f 11 84 05
	d0 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+4], xmm0

; 917  : 		cloud_points[1].z = -CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00dab	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00db0	c1 e0 00	 shl	 eax, 0
  00db3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6000000
  00dbb	f3 0f 11 84 05
	d4 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+8], xmm0

; 918  : 	
; 919  : 		cloud_points[2].x = +CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00dc4	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00dc9	d1 e0		 shl	 eax, 1
  00dcb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46000000
  00dd3	f3 0f 11 84 05
	cc eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax], xmm0

; 920  : 		cloud_points[2].y = 0;

  00ddc	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00de1	d1 e0		 shl	 eax, 1
  00de3	0f 57 c0	 xorps	 xmm0, xmm0
  00de6	f3 0f 11 84 05
	d0 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+4], xmm0

; 921  : 		cloud_points[2].z = +CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00def	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00df4	d1 e0		 shl	 eax, 1
  00df6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46000000
  00dfe	f3 0f 11 84 05
	d4 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+8], xmm0

; 922  : 	
; 923  : 		cloud_points[3].x = -CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00e07	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00e0c	6b c8 03	 imul	 ecx, eax, 3
  00e0f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c6000000
  00e17	f3 0f 11 84 0d
	cc eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+ecx], xmm0

; 924  : 		cloud_points[3].y = 0;

  00e20	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00e25	6b c8 03	 imul	 ecx, eax, 3
  00e28	0f 57 c0	 xorps	 xmm0, xmm0
  00e2b	f3 0f 11 84 0d
	d0 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+ecx+4], xmm0

; 925  : 		cloud_points[3].z = +CLOUD_3D_SECTOR_SIDE_LENGTH/2;

  00e34	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00e39	6b c8 03	 imul	 ecx, eax, 3
  00e3c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46000000
  00e44	f3 0f 11 84 0d
	d4 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+ecx+8], xmm0

; 926  : 
; 927  : 		for ( count = 0; count < 4; count++ )

  00e4d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00e54	eb 09		 jmp	 SHORT $LN25@draw_3d_cl
$LN23@draw_3d_cl:
  00e56	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00e59	83 c0 01	 add	 eax, 1
  00e5c	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN25@draw_3d_cl:
  00e5f	83 7d fc 04	 cmp	 DWORD PTR _count$[ebp], 4
  00e63	0f 8d 38 04 00
	00		 jge	 $LN24@draw_3d_cl

; 928  : 		{
; 929  : 
; 930  : 			vec3d
; 931  : 				point_vector;
; 932  : 
; 933  : 			int
; 934  : 				ir,
; 935  : 				ig,
; 936  : 				ib;
; 937  : 
; 938  : 			float
; 939  : 				colour_t,
; 940  : 				alpha,
; 941  : 				distance,
; 942  : 				angle,
; 943  : 				dr,
; 944  : 				dg,
; 945  : 				db,
; 946  : 				r,
; 947  : 				g,
; 948  : 				b;
; 949  : 
; 950  : 			tempx = sector_centre.x + cloud_points[count].x;

  00e69	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  00e6d	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _sector_centre$[ebp]
  00e72	f3 0f 58 84 05
	cc eb ff ff	 addss	 xmm0, DWORD PTR _cloud_points$[ebp+eax]
  00e7b	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00e7f	f2 0f 11 45 ec	 movsd	 QWORD PTR _tempx$[ebp], xmm0

; 951  : 			tempz = sector_centre.z + cloud_points[count].z;

  00e84	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  00e88	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sector_centre$[ebp+8]
  00e8d	f3 0f 58 84 05
	d4 eb ff ff	 addss	 xmm0, DWORD PTR _cloud_points$[ebp+eax+8]
  00e96	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00e9a	f2 0f 11 45 e4	 movsd	 QWORD PTR _tempz$[ebp], xmm0

; 952  : 
; 953  : 			point_vector.x = tempx;

  00e9f	f2 0f 5a 45 ec	 cvtsd2ss xmm0, QWORD PTR _tempx$[ebp]
  00ea4	f3 0f 11 85 1c
	e7 ff ff	 movss	 DWORD PTR _point_vector$14[ebp], xmm0

; 954  : 			point_vector.y = 0;

  00eac	0f 57 c0	 xorps	 xmm0, xmm0
  00eaf	f3 0f 11 85 20
	e7 ff ff	 movss	 DWORD PTR _point_vector$14[ebp+4], xmm0

; 955  : 			point_vector.z = tempz;

  00eb7	f2 0f 5a 45 e4	 cvtsd2ss xmm0, QWORD PTR _tempz$[ebp]
  00ebc	f3 0f 11 85 24
	e7 ff ff	 movss	 DWORD PTR _point_vector$14[ebp+8], xmm0

; 956  : 
; 957  : 			distance = get_3d_vector_magnitude ( &point_vector );

  00ec4	8d 85 1c e7 ff
	ff		 lea	 eax, DWORD PTR _point_vector$14[ebp]
  00eca	50		 push	 eax
  00ecb	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00ed0	d9 9d 04 e7 ff
	ff		 fstp	 DWORD PTR _distance$8[ebp]

; 958  : 
; 959  : 			if ( distance > 1 )

  00ed6	f3 0f 10 85 04
	e7 ff ff	 movss	 xmm0, DWORD PTR _distance$8[ebp]
  00ede	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00ee5	0f 86 84 01 00
	00		 jbe	 $LN34@draw_3d_cl

; 960  : 			{
; 961  : 	
; 962  : 				normalise_3d_vector_given_magnitude ( &point_vector, distance );

  00eeb	51		 push	 ecx
  00eec	f3 0f 10 85 04
	e7 ff ff	 movss	 xmm0, DWORD PTR _distance$8[ebp]
  00ef4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ef9	8d 85 1c e7 ff
	ff		 lea	 eax, DWORD PTR _point_vector$14[ebp]
  00eff	50		 push	 eax
  00f00	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 963  : 	
; 964  : 				angle = ( ( point_vector.x * cloud_colour_blend_vector.x ) + ( point_vector.z * cloud_colour_blend_vector.z ) );

  00f05	f3 0f 10 85 1c
	e7 ff ff	 movss	 xmm0, DWORD PTR _point_vector$14[ebp]
  00f0d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A
  00f15	f3 0f 10 8d 24
	e7 ff ff	 movss	 xmm1, DWORD PTR _point_vector$14[ebp+8]
  00f1d	f3 0f 59 0d 08
	00 00 00	 mulss	 xmm1, DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A+8
  00f25	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f29	f3 0f 11 85 00
	e7 ff ff	 movss	 DWORD PTR _angle$7[ebp], xmm0

; 965  : 				angle = bound ( angle, 0, 1 );

  00f31	0f 57 c0	 xorps	 xmm0, xmm0
  00f34	0f 2f 85 00 e7
	ff ff		 comiss	 xmm0, DWORD PTR _angle$7[ebp]
  00f3b	76 0d		 jbe	 SHORT $LN55@draw_3d_cl
  00f3d	0f 57 c0	 xorps	 xmm0, xmm0
  00f40	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv559[ebp], xmm0
  00f48	eb 43		 jmp	 SHORT $LN56@draw_3d_cl
$LN55@draw_3d_cl:
  00f4a	f3 0f 10 85 00
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$7[ebp]
  00f52	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00f59	76 12		 jbe	 SHORT $LN53@draw_3d_cl
  00f5b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00f63	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv558[ebp], xmm0
  00f6b	eb 10		 jmp	 SHORT $LN54@draw_3d_cl
$LN53@draw_3d_cl:
  00f6d	f3 0f 10 85 00
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$7[ebp]
  00f75	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv558[ebp], xmm0
$LN54@draw_3d_cl:
  00f7d	f3 0f 10 85 e0
	e4 ff ff	 movss	 xmm0, DWORD PTR tv558[ebp]
  00f85	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv559[ebp], xmm0
$LN56@draw_3d_cl:
  00f8d	f3 0f 10 85 e4
	e4 ff ff	 movss	 xmm0, DWORD PTR tv559[ebp]
  00f95	f3 0f 11 85 00
	e7 ff ff	 movss	 DWORD PTR _angle$7[ebp], xmm0

; 966  : 				angle *= angle;

  00f9d	f3 0f 10 85 00
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$7[ebp]
  00fa5	f3 0f 59 85 00
	e7 ff ff	 mulss	 xmm0, DWORD PTR _angle$7[ebp]
  00fad	f3 0f 11 85 00
	e7 ff ff	 movss	 DWORD PTR _angle$7[ebp], xmm0

; 967  : 				angle *= angle;

  00fb5	f3 0f 10 85 00
	e7 ff ff	 movss	 xmm0, DWORD PTR _angle$7[ebp]
  00fbd	f3 0f 59 85 00
	e7 ff ff	 mulss	 xmm0, DWORD PTR _angle$7[ebp]
  00fc5	f3 0f 11 85 00
	e7 ff ff	 movss	 DWORD PTR _angle$7[ebp], xmm0

; 968  : 	
; 969  : 				colour_t = ( distance / CLOUD_MAXIMUM_COLOUR_BLEND_DISTANCE );

  00fcd	f3 0f 5a 85 04
	e7 ff ff	 cvtss2sd xmm0, DWORD PTR _distance$8[ebp]
  00fd5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40a0000000000000
  00fdd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00fe1	f3 0f 11 85 0c
	e7 ff ff	 movss	 DWORD PTR _colour_t$10[ebp], xmm0

; 970  : 				colour_t = bound ( colour_t, 0, 1 );

  00fe9	0f 57 c0	 xorps	 xmm0, xmm0
  00fec	0f 2f 85 0c e7
	ff ff		 comiss	 xmm0, DWORD PTR _colour_t$10[ebp]
  00ff3	76 0d		 jbe	 SHORT $LN59@draw_3d_cl
  00ff5	0f 57 c0	 xorps	 xmm0, xmm0
  00ff8	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv568[ebp], xmm0
  01000	eb 43		 jmp	 SHORT $LN60@draw_3d_cl
$LN59@draw_3d_cl:
  01002	f3 0f 10 85 0c
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$10[ebp]
  0100a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  01011	76 12		 jbe	 SHORT $LN57@draw_3d_cl
  01013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0101b	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv567[ebp], xmm0
  01023	eb 10		 jmp	 SHORT $LN58@draw_3d_cl
$LN57@draw_3d_cl:
  01025	f3 0f 10 85 0c
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$10[ebp]
  0102d	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv567[ebp], xmm0
$LN58@draw_3d_cl:
  01035	f3 0f 10 85 e0
	e4 ff ff	 movss	 xmm0, DWORD PTR tv567[ebp]
  0103d	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv568[ebp], xmm0
$LN60@draw_3d_cl:
  01045	f3 0f 10 85 e4
	e4 ff ff	 movss	 xmm0, DWORD PTR tv568[ebp]
  0104d	f3 0f 11 85 0c
	e7 ff ff	 movss	 DWORD PTR _colour_t$10[ebp], xmm0

; 971  : 				colour_t *= angle;

  01055	f3 0f 10 85 0c
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$10[ebp]
  0105d	f3 0f 59 85 00
	e7 ff ff	 mulss	 xmm0, DWORD PTR _angle$7[ebp]
  01065	f3 0f 11 85 0c
	e7 ff ff	 movss	 DWORD PTR _colour_t$10[ebp], xmm0

; 972  : 			}
; 973  : 			else

  0106d	eb 0b		 jmp	 SHORT $LN35@draw_3d_cl
$LN34@draw_3d_cl:

; 974  : 			{
; 975  : 
; 976  : 				colour_t = 0;

  0106f	0f 57 c0	 xorps	 xmm0, xmm0
  01072	f3 0f 11 85 0c
	e7 ff ff	 movss	 DWORD PTR _colour_t$10[ebp], xmm0
$LN35@draw_3d_cl:

; 977  : 			}
; 978  : 	
; 979  : 			alpha = ( ( cloud_3d_blend_constant - ( distance * distance ) ) * cloud_3d_adjusted_blend_factor );

  0107a	f3 0f 10 85 04
	e7 ff ff	 movss	 xmm0, DWORD PTR _distance$8[ebp]
  01082	f3 0f 59 85 04
	e7 ff ff	 mulss	 xmm0, DWORD PTR _distance$8[ebp]
  0108a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0108e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR ?cloud_3d_blend_constant@@3NA
  01096	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0109a	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR ?cloud_3d_adjusted_blend_factor@@3NA
  010a2	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  010a6	f3 0f 11 85 08
	e7 ff ff	 movss	 DWORD PTR _alpha$9[ebp], xmm0

; 980  : 
; 981  : 			cloud_points[count].a = bound ( alpha, 0, 1 );

  010ae	0f 57 c0	 xorps	 xmm0, xmm0
  010b1	0f 2f 85 08 e7
	ff ff		 comiss	 xmm0, DWORD PTR _alpha$9[ebp]
  010b8	76 0d		 jbe	 SHORT $LN63@draw_3d_cl
  010ba	0f 57 c0	 xorps	 xmm0, xmm0
  010bd	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv581[ebp], xmm0
  010c5	eb 43		 jmp	 SHORT $LN64@draw_3d_cl
$LN63@draw_3d_cl:
  010c7	f3 0f 10 85 08
	e7 ff ff	 movss	 xmm0, DWORD PTR _alpha$9[ebp]
  010cf	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  010d6	76 12		 jbe	 SHORT $LN61@draw_3d_cl
  010d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  010e0	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv580[ebp], xmm0
  010e8	eb 10		 jmp	 SHORT $LN62@draw_3d_cl
$LN61@draw_3d_cl:
  010ea	f3 0f 10 85 08
	e7 ff ff	 movss	 xmm0, DWORD PTR _alpha$9[ebp]
  010f2	f3 0f 11 85 e0
	e4 ff ff	 movss	 DWORD PTR tv580[ebp], xmm0
$LN62@draw_3d_cl:
  010fa	f3 0f 10 85 e0
	e4 ff ff	 movss	 xmm0, DWORD PTR tv580[ebp]
  01102	f3 0f 11 85 e4
	e4 ff ff	 movss	 DWORD PTR tv581[ebp], xmm0
$LN64@draw_3d_cl:
  0110a	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0110e	f3 0f 10 85 e4
	e4 ff ff	 movss	 xmm0, DWORD PTR tv581[ebp]
  01116	f3 0f 11 84 05
	d8 eb ff ff	 movss	 DWORD PTR _cloud_points$[ebp+eax+12], xmm0

; 982  : 
; 983  : 			dr = active_3d_environment->cloud_light.object_colour.red - active_3d_environment->cloud_light.light__colour.red;

  0111f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  01124	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0112a	f3 0f 10 80 74
	01 00 00	 movss	 xmm0, DWORD PTR [eax+372]
  01132	f3 0f 5c 81 64
	01 00 00	 subss	 xmm0, DWORD PTR [ecx+356]
  0113a	f3 0f 11 85 fc
	e6 ff ff	 movss	 DWORD PTR _dr$6[ebp], xmm0

; 984  : 			dg = active_3d_environment->cloud_light.object_colour.green - active_3d_environment->cloud_light.light__colour.green;

  01142	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  01147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0114d	f3 0f 10 80 78
	01 00 00	 movss	 xmm0, DWORD PTR [eax+376]
  01155	f3 0f 5c 81 68
	01 00 00	 subss	 xmm0, DWORD PTR [ecx+360]
  0115d	f3 0f 11 85 f8
	e6 ff ff	 movss	 DWORD PTR _dg$5[ebp], xmm0

; 985  : 			db = active_3d_environment->cloud_light.object_colour.blue - active_3d_environment->cloud_light.light__colour.blue;

  01165	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0116a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  01170	f3 0f 10 80 7c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+380]
  01178	f3 0f 5c 81 6c
	01 00 00	 subss	 xmm0, DWORD PTR [ecx+364]
  01180	f3 0f 11 85 f4
	e6 ff ff	 movss	 DWORD PTR _db$4[ebp], xmm0

; 986  : 
; 987  : 			r = active_3d_environment->cloud_light.light__colour.red + ( colour_t * dr );

  01188	f3 0f 10 85 0c
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$10[ebp]
  01190	f3 0f 59 85 fc
	e6 ff ff	 mulss	 xmm0, DWORD PTR _dr$6[ebp]
  01198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0119d	f3 0f 58 80 64
	01 00 00	 addss	 xmm0, DWORD PTR [eax+356]
  011a5	f3 0f 11 85 f0
	e6 ff ff	 movss	 DWORD PTR _r$3[ebp], xmm0

; 988  : 			g = active_3d_environment->cloud_light.light__colour.green + ( colour_t * dg );

  011ad	f3 0f 10 85 0c
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$10[ebp]
  011b5	f3 0f 59 85 f8
	e6 ff ff	 mulss	 xmm0, DWORD PTR _dg$5[ebp]
  011bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  011c2	f3 0f 58 80 68
	01 00 00	 addss	 xmm0, DWORD PTR [eax+360]
  011ca	f3 0f 11 85 ec
	e6 ff ff	 movss	 DWORD PTR _g$2[ebp], xmm0

; 989  : 			b = active_3d_environment->cloud_light.light__colour.blue + ( colour_t * db );

  011d2	f3 0f 10 85 0c
	e7 ff ff	 movss	 xmm0, DWORD PTR _colour_t$10[ebp]
  011da	f3 0f 59 85 f4
	e6 ff ff	 mulss	 xmm0, DWORD PTR _db$4[ebp]
  011e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  011e7	f3 0f 58 80 6c
	01 00 00	 addss	 xmm0, DWORD PTR [eax+364]
  011ef	f3 0f 11 85 e8
	e6 ff ff	 movss	 DWORD PTR _b$1[ebp], xmm0

; 990  : 
; 991  : 			convert_float_to_int ( r * 255.0, &ir );

  011f7	8d 85 18 e7 ff
	ff		 lea	 eax, DWORD PTR _ir$13[ebp]
  011fd	50		 push	 eax
  011fe	f3 0f 5a 85 f0
	e6 ff ff	 cvtss2sd xmm0, DWORD PTR _r$3[ebp]
  01206	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  0120e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01212	51		 push	 ecx
  01213	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01218	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 992  : 			convert_float_to_int ( g * 255.0, &ig );

  0121d	8d 85 14 e7 ff
	ff		 lea	 eax, DWORD PTR _ig$12[ebp]
  01223	50		 push	 eax
  01224	f3 0f 5a 85 ec
	e6 ff ff	 cvtss2sd xmm0, DWORD PTR _g$2[ebp]
  0122c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  01234	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01238	51		 push	 ecx
  01239	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0123e	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 993  : 			convert_float_to_int ( b * 255.0, &ib );

  01243	8d 85 10 e7 ff
	ff		 lea	 eax, DWORD PTR _ib$11[ebp]
  01249	50		 push	 eax
  0124a	f3 0f 5a 85 e8
	e6 ff ff	 cvtss2sd xmm0, DWORD PTR _b$1[ebp]
  01252	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  0125a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0125e	51		 push	 ecx
  0125f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01264	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 994  : 
; 995  : 			cloud_points[count].red = ir;

  01269	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0126d	8a 8d 18 e7 ff
	ff		 mov	 cl, BYTE PTR _ir$13[ebp]
  01273	88 8c 05 de eb
	ff ff		 mov	 BYTE PTR _cloud_points$[ebp+eax+18], cl

; 996  : 			cloud_points[count].green = ig;

  0127a	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0127e	8a 8d 14 e7 ff
	ff		 mov	 cl, BYTE PTR _ig$12[ebp]
  01284	88 8c 05 dd eb
	ff ff		 mov	 BYTE PTR _cloud_points$[ebp+eax+17], cl

; 997  : 			cloud_points[count].blue = ib;

  0128b	6b 45 fc 14	 imul	 eax, DWORD PTR _count$[ebp], 20
  0128f	8a 8d 10 e7 ff
	ff		 mov	 cl, BYTE PTR _ib$11[ebp]
  01295	88 8c 05 dc eb
	ff ff		 mov	 BYTE PTR _cloud_points$[ebp+eax+16], cl

; 998  : /*
; 999  : 			debug_log ( "( %d, %d, %d ) -> ( %d, %d, %d ) d( %d, %d, %d ) blend = %f = %d, %d, %d",
; 1000 : 									active_3d_environment->cloud_light.light__colour.red * 255,
; 1001 : 									active_3d_environment->cloud_light.light__colour.green * 255,
; 1002 : 									active_3d_environment->cloud_light.light__colour.blue * 255,
; 1003 : 									active_3d_environment->cloud_light.object_colour.red * 255,
; 1004 : 									active_3d_environment->cloud_light.object_colour.green * 255,
; 1005 : 									active_3d_environment->cloud_light.object_colour.blue * 255,
; 1006 : 									dr * 255,
; 1007 : 									dg * 255,
; 1008 : 									db * 255,
; 1009 : 									colour_t,
; 1010 : 									ir, ig, ib );
; 1011 : */
; 1012 : 		}

  0129c	e9 b5 fb ff ff	 jmp	 $LN23@draw_3d_cl
$LN24@draw_3d_cl:

; 1013 : 
; 1014 : 		transform_cloud_points ( 4, cloud_points, cloud_transformed_3d_points, &sector_relative_centre );

  012a1	8d 45 cc	 lea	 eax, DWORD PTR _sector_relative_centre$[ebp]
  012a4	50		 push	 eax
  012a5	68 00 00 00 00	 push	 OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  012aa	8d 8d cc eb ff
	ff		 lea	 ecx, DWORD PTR _cloud_points$[ebp]
  012b0	51		 push	 ecx
  012b1	6a 04		 push	 4
  012b3	e8 00 00 00 00	 call	 ?transform_cloud_points@@YGXHPAUCLOUD_3D_POINT@@PAUVERTEX@@PAUVEC3D@@@Z ; transform_cloud_points

; 1015 : 
; 1016 : 		//
; 1017 : 		// Render a quad twice, for the blending between cloud textures
; 1018 : 		//
; 1019 : 
; 1020 : 		if ( cloud_3d_base_height < visual_3d_vp->y )

  012b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012bd	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  012c2	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  012c9	0f 86 02 01 00
	00		 jbe	 $LN36@draw_3d_cl

; 1021 : 		{
; 1022 : 	
; 1023 : 			point_references[3].point = 0; point_references[3].u = 0; point_references[3].v = 0;

  012cf	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  012d4	6b c8 03	 imul	 ecx, eax, 3
  012d7	c7 84 0d 8c e7
	ff ff 00 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+ecx], 0
  012e2	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  012e7	6b c8 03	 imul	 ecx, eax, 3
  012ea	0f 57 c0	 xorps	 xmm0, xmm0
  012ed	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0
  012f6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  012fb	6b c8 03	 imul	 ecx, eax, 3
  012fe	0f 57 c0	 xorps	 xmm0, xmm0
  01301	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0

; 1024 : 			point_references[2].point = 1; point_references[2].u = 1; point_references[2].v = 0;

  0130a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0130f	d1 e0		 shl	 eax, 1
  01311	c7 84 05 8c e7
	ff ff 01 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+eax], 1
  0131c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01321	d1 e0		 shl	 eax, 1
  01323	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0132b	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0
  01334	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01339	d1 e0		 shl	 eax, 1
  0133b	0f 57 c0	 xorps	 xmm0, xmm0
  0133e	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 1025 : 			point_references[1].point = 2; point_references[1].u = 1; point_references[1].v = 1;

  01347	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0134c	c1 e0 00	 shl	 eax, 0
  0134f	c7 84 05 8c e7
	ff ff 02 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+eax], 2
  0135a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0135f	c1 e0 00	 shl	 eax, 0
  01362	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0136a	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0
  01373	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01378	c1 e0 00	 shl	 eax, 0
  0137b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01383	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 1026 : 			point_references[0].point = 3; point_references[0].u = 0; point_references[0].v = 1;

  0138c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01391	6b c8 00	 imul	 ecx, eax, 0
  01394	c7 84 0d 8c e7
	ff ff 03 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+ecx], 3
  0139f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  013a4	6b c8 00	 imul	 ecx, eax, 0
  013a7	0f 57 c0	 xorps	 xmm0, xmm0
  013aa	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0
  013b3	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  013b8	6b c8 00	 imul	 ecx, eax, 0
  013bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  013c3	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0

; 1027 : 		}
; 1028 : 		else

  013cc	e9 fd 00 00 00	 jmp	 $LN37@draw_3d_cl
$LN36@draw_3d_cl:

; 1029 : 		{
; 1030 : 	
; 1031 : 			point_references[0].point = 0; point_references[0].u = 0; point_references[0].v = 0;

  013d1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  013d6	6b c8 00	 imul	 ecx, eax, 0
  013d9	c7 84 0d 8c e7
	ff ff 00 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+ecx], 0
  013e4	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  013e9	6b c8 00	 imul	 ecx, eax, 0
  013ec	0f 57 c0	 xorps	 xmm0, xmm0
  013ef	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0
  013f8	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  013fd	6b c8 00	 imul	 ecx, eax, 0
  01400	0f 57 c0	 xorps	 xmm0, xmm0
  01403	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0

; 1032 : 			point_references[1].point = 1; point_references[1].u = 1; point_references[1].v = 0;

  0140c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01411	c1 e0 00	 shl	 eax, 0
  01414	c7 84 05 8c e7
	ff ff 01 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+eax], 1
  0141f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01424	c1 e0 00	 shl	 eax, 0
  01427	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0142f	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0
  01438	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0143d	c1 e0 00	 shl	 eax, 0
  01440	0f 57 c0	 xorps	 xmm0, xmm0
  01443	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 1033 : 			point_references[2].point = 2; point_references[2].u = 1; point_references[2].v = 1;

  0144c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01451	d1 e0		 shl	 eax, 1
  01453	c7 84 05 8c e7
	ff ff 02 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+eax], 2
  0145e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01463	d1 e0		 shl	 eax, 1
  01465	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0146d	f3 0f 11 84 05
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+4], xmm0
  01476	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0147b	d1 e0		 shl	 eax, 1
  0147d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01485	f3 0f 11 84 05
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+eax+8], xmm0

; 1034 : 			point_references[3].point = 3; point_references[3].u = 0; point_references[3].v = 1;

  0148e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01493	6b c8 03	 imul	 ecx, eax, 3
  01496	c7 84 0d 8c e7
	ff ff 03 00 00
	00		 mov	 DWORD PTR _point_references$[ebp+ecx], 3
  014a1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  014a6	6b c8 03	 imul	 ecx, eax, 3
  014a9	0f 57 c0	 xorps	 xmm0, xmm0
  014ac	f3 0f 11 84 0d
	90 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+4], xmm0
  014b5	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  014ba	6b c8 03	 imul	 ecx, eax, 3
  014bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  014c5	f3 0f 11 84 0d
	94 e7 ff ff	 movss	 DWORD PTR _point_references$[ebp+ecx+8], xmm0
$LN37@draw_3d_cl:

; 1035 : 		}
; 1036 : 
; 1037 : 		if ( current_weather_texture )

  014ce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A, 0
  014d5	74 2e		 je	 SHORT $LN38@draw_3d_cl

; 1038 : 		{
; 1039 : 
; 1040 : 			render_cloud_polygon ( 4, point_references, cloud_transformed_3d_points, cloud_points, cloud_weather_one_minus_blend_factor, current_weather_texture );

  014d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A
  014dc	50		 push	 eax
  014dd	51		 push	 ecx
  014de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA
  014e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  014eb	8d 8d cc eb ff
	ff		 lea	 ecx, DWORD PTR _cloud_points$[ebp]
  014f1	51		 push	 ecx
  014f2	68 00 00 00 00	 push	 OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  014f7	8d 95 8c e7 ff
	ff		 lea	 edx, DWORD PTR _point_references$[ebp]
  014fd	52		 push	 edx
  014fe	6a 04		 push	 4
  01500	e8 00 00 00 00	 call	 ?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z ; render_cloud_polygon
$LN38@draw_3d_cl:

; 1041 : 		}
; 1042 : 
; 1043 : 		if ( target_weather_texture )

  01505	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A, 0
  0150c	74 2e		 je	 SHORT $LN39@draw_3d_cl

; 1044 : 		{
; 1045 : 
; 1046 : 			render_cloud_polygon ( 4, point_references, cloud_transformed_3d_points, cloud_points, cloud_weather_blend_factor, target_weather_texture );

  0150e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A
  01513	50		 push	 eax
  01514	51		 push	 ecx
  01515	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_blend_factor@@3MA
  0151d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01522	8d 8d cc eb ff
	ff		 lea	 ecx, DWORD PTR _cloud_points$[ebp]
  01528	51		 push	 ecx
  01529	68 00 00 00 00	 push	 OFFSET ?cloud_transformed_3d_points@@3PAUVERTEX@@A
  0152e	8d 95 8c e7 ff
	ff		 lea	 edx, DWORD PTR _point_references$[ebp]
  01534	52		 push	 edx
  01535	6a 04		 push	 4
  01537	e8 00 00 00 00	 call	 ?render_cloud_polygon@@YGXHPAUCLOUD_3D_TEXTURED_REFERENCE@@PAUVERTEX@@PAUCLOUD_3D_POINT@@MPAUSCREEN@@@Z ; render_cloud_polygon
$LN39@draw_3d_cl:

; 1047 : 		}
; 1048 : 	}
; 1049 : }

  0153c	5f		 pop	 edi
  0153d	5e		 pop	 esi
  0153e	5b		 pop	 ebx
  0153f	8b e5		 mov	 esp, ebp
  01541	5d		 pop	 ebp
  01542	c2 04 00	 ret	 4
?draw_3d_cloud_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_cloud_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?scan_3d_clouds@@YGXXZ
_TEXT	SEGMENT
tv326 = -220						; size = 4
_z_maximum_offset$1 = -152				; size = 4
_z_minimum_offset$2 = -148				; size = 4
_x_maximum_offset$3 = -144				; size = 4
_x_minimum_offset$4 = -140				; size = 4
_outcode2$5 = -136					; size = 4
_outcode1$6 = -132					; size = 4
_outcode$7 = -128					; size = 4
_sorting_slot$8 = -124					; size = 4
_sector_relative_centre$9 = -120			; size = 12
_sector_centre$10 = -108				; size = 12
_blend$11 = -96						; size = 4
_cloud_matrix$ = -92					; size = 36
_target_weathermode$ = -56				; size = 4
_current_weathermode$ = -52				; size = 4
_current_sector_z_offset$ = -48				; size = 4
_current_sector_x_offset$ = -44				; size = 4
_initial_sector_z_offset$ = -40				; size = 4
_initial_sector_x_offset$ = -36				; size = 4
_maximum_sector_z$ = -32				; size = 4
_maximum_sector_x$ = -28				; size = 4
_minimum_sector_z$ = -24				; size = 4
_minimum_sector_x$ = -20				; size = 4
_current_sector_z$ = -16				; size = 4
_current_sector_x$ = -12				; size = 4
_visual_sector_z$ = -8					; size = 4
_visual_sector_x$ = -4					; size = 4
?scan_3d_clouds@@YGXXZ PROC				; scan_3d_clouds, COMDAT

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 366  : 
; 367  : 	int
; 368  : 		visual_sector_x,
; 369  : 		visual_sector_z,
; 370  : 		current_sector_x,
; 371  : 		current_sector_z,
; 372  : 		minimum_sector_x,
; 373  : 		minimum_sector_z,
; 374  : 		maximum_sector_x,
; 375  : 		maximum_sector_z;
; 376  : 
; 377  : 	float
; 378  : 		initial_sector_x_offset,
; 379  : 		initial_sector_z_offset,
; 380  : 		current_sector_x_offset,
; 381  : 		current_sector_z_offset;
; 382  : 
; 383  : 	weathermodes
; 384  : 		current_weathermode,
; 385  : 		target_weathermode;
; 386  : 
; 387  : 	matrix3x3
; 388  : 		cloud_matrix;
; 389  : 
; 390  : 	//
; 391  : 	// Get the vector pointing to the colour blend
; 392  : 	//
; 393  : 
; 394  : 	get_3d_transformation_matrix ( cloud_matrix, active_3d_environment->cloud_light.heading, active_3d_environment->cloud_light.pitch, 0 );

  0000c	51		 push	 ecx
  0000d	0f 57 c0	 xorps	 xmm0, xmm0
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0001a	51		 push	 ecx
  0001b	f3 0f 10 80 88
	01 00 00	 movss	 xmm0, DWORD PTR [eax+392]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0002e	51		 push	 ecx
  0002f	f3 0f 10 81 84
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+388]
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	8d 55 a4	 lea	 edx, DWORD PTR _cloud_matrix$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 395  : 
; 396  : 	cloud_colour_blend_vector.x = cloud_matrix[2][0];

  00045	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0004a	d1 e0		 shl	 eax, 1
  0004c	8d 4c 05 a4	 lea	 ecx, DWORD PTR _cloud_matrix$[ebp+eax]
  00050	ba 04 00 00 00	 mov	 edx, 4
  00055	6b c2 00	 imul	 eax, edx, 0
  00058	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0005d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A, xmm0

; 397  : 	cloud_colour_blend_vector.y = 0;

  00065	0f 57 c0	 xorps	 xmm0, xmm0
  00068	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A+4, xmm0

; 398  : 	cloud_colour_blend_vector.z = cloud_matrix[2][2];

  00070	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00075	d1 e0		 shl	 eax, 1
  00077	8d 4c 05 a4	 lea	 ecx, DWORD PTR _cloud_matrix$[ebp+eax]
  0007b	ba 04 00 00 00	 mov	 edx, 4
  00080	d1 e2		 shl	 edx, 1
  00082	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00087	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?cloud_colour_blend_vector@@3UVEC3D@@A+8, xmm0

; 399  : 
; 400  : 	normalise_3d_vector ( &cloud_colour_blend_vector );

  0008f	68 00 00 00 00	 push	 OFFSET ?cloud_colour_blend_vector@@3UVEC3D@@A
  00094	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00099	dd d8		 fstp	 ST(0)

; 401  : 
; 402  : 	//
; 403  : 	// Adjust the cloud blend factor
; 404  : 	//
; 405  : 
; 406  : 	if ( ( visual_3d_vp->y > ( cloud_3d_base_height - 100 ) ) && ( visual_3d_vp->y < ( cloud_3d_base_height + 100 ) ) )

  0009b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  000a3	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@42c80000
  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000b0	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  000b5	0f 2f c8	 comiss	 xmm1, xmm0
  000b8	0f 86 85 00 00
	00		 jbe	 $LN8@scan_3d_cl
  000be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  000c6	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42c80000
  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000d3	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  000d7	76 6a		 jbe	 SHORT $LN8@scan_3d_cl

; 407  : 	{
; 408  : 
; 409  : 		float
; 410  : 			blend;
; 411  : 
; 412  : 		blend = ( ( fabs ( visual_3d_vp->y - cloud_3d_base_height ) ) / 100 );

  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000de	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000e3	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  000eb	51		 push	 ecx
  000ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f1	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000f6	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv326[ebp]
  000fc	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv326[ebp]
  00104	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42c80000
  0010c	f3 0f 11 45 a0	 movss	 DWORD PTR _blend$11[ebp], xmm0

; 413  : 
; 414  : 		if ( blend > 1 )

  00111	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _blend$11[ebp]
  00116	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0011d	76 0d		 jbe	 SHORT $LN10@scan_3d_cl

; 415  : 		{
; 416  : 
; 417  : 			blend = 1;

  0011f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00127	f3 0f 11 45 a0	 movss	 DWORD PTR _blend$11[ebp], xmm0
$LN10@scan_3d_cl:

; 418  : 		}
; 419  : 
; 420  : 		cloud_3d_adjusted_blend_factor = cloud_3d_blend_factor * blend;

  0012c	f3 0f 5a 45 a0	 cvtss2sd xmm0, DWORD PTR _blend$11[ebp]
  00131	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?cloud_3d_blend_factor@@3NA
  00139	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?cloud_3d_adjusted_blend_factor@@3NA, xmm0

; 421  : 	}
; 422  : 	else

  00141	eb 10		 jmp	 SHORT $LN9@scan_3d_cl
$LN8@scan_3d_cl:

; 423  : 	{
; 424  : 
; 425  : 		cloud_3d_adjusted_blend_factor = cloud_3d_blend_factor;

  00143	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?cloud_3d_blend_factor@@3NA
  0014b	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?cloud_3d_adjusted_blend_factor@@3NA, xmm0
$LN9@scan_3d_cl:

; 426  : 	}
; 427  : 
; 428  : 	//
; 429  : 	// Choose the two textures to be blending inbetween
; 430  : 	//
; 431  : 
; 432  : 	current_weathermode = get_3d_weathermode ( active_3d_environment );

  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  0015e	89 45 cc	 mov	 DWORD PTR _current_weathermode$[ebp], eax

; 433  : 
; 434  : 	target_weathermode = get_3d_target_weathermode ( active_3d_environment );

  00161	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  0016c	89 45 c8	 mov	 DWORD PTR _target_weathermode$[ebp], eax

; 435  : 
; 436  : 	if ( !cloud_textures[current_weathermode].valid )

  0016f	8b 45 cc	 mov	 eax, DWORD PTR _current_weathermode$[ebp]
  00172	83 3c c5 00 00
	00 00 00	 cmp	 DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8], 0
  0017a	75 11		 jne	 SHORT $LN11@scan_3d_cl

; 437  : 	{
; 438  : 
; 439  : 		debug_fatal ( "Unable to draw clouds - no texture set for current weathermode: %d", current_weathermode );

  0017c	8b 45 cc	 mov	 eax, DWORD PTR _current_weathermode$[ebp]
  0017f	50		 push	 eax
  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@FKAGIKKK@Unable?5to?5draw?5clouds?5?9?5no?5text@
  00185	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0018a	83 c4 08	 add	 esp, 8
$LN11@scan_3d_cl:

; 440  : 	}
; 441  : 
; 442  : 	if ( !cloud_textures[target_weathermode].texture_index )

  0018d	8b 45 c8	 mov	 eax, DWORD PTR _target_weathermode$[ebp]
  00190	83 3c c5 04 00
	00 00 00	 cmp	 DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4], 0
  00198	75 11		 jne	 SHORT $LN12@scan_3d_cl

; 443  : 	{
; 444  : 
; 445  : 		debug_fatal ( "Unable to draw clouds - no texture set for target weathermode: %d", target_weathermode );

  0019a	8b 45 c8	 mov	 eax, DWORD PTR _target_weathermode$[ebp]
  0019d	50		 push	 eax
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@PJBPEHMN@Unable?5to?5draw?5clouds?5?9?5no?5text@
  001a3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001a8	83 c4 08	 add	 esp, 8
$LN12@scan_3d_cl:

; 446  : 	}
; 447  : 
; 448  : 	cloud_weather_blend_factor = get_3d_target_weathermode_transitional_status ( active_3d_environment );

  001ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  001b6	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?cloud_weather_blend_factor@@3MA

; 449  : 
; 450  : 	cloud_weather_one_minus_blend_factor = 1.0 - cloud_weather_blend_factor;

  001bc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?cloud_weather_blend_factor@@3MA
  001c4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001cc	f2 0f 5c c8	 subsd	 xmm1, xmm0
  001d0	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001d4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA, xmm0

; 451  : 
; 452  : 	if ( current_weathermode != target_weathermode )

  001dc	8b 45 cc	 mov	 eax, DWORD PTR _current_weathermode$[ebp]
  001df	3b 45 c8	 cmp	 eax, DWORD PTR _target_weathermode$[ebp]
  001e2	0f 84 d9 00 00
	00		 je	 $LN13@scan_3d_cl

; 453  : 	{
; 454  : 
; 455  : 		if ( cloud_weather_blend_factor == 1 )

  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_blend_factor@@3MA
  001f0	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  001f7	9f		 lahf
  001f8	f6 c4 44	 test	 ah, 68			; 00000044H
  001fb	7a 41		 jp	 SHORT $LN15@scan_3d_cl

; 456  : 		{
; 457  : 
; 458  : 			current_weather_texture = system_textures[ cloud_textures[target_weathermode].texture_index ];

  001fd	8b 45 c8	 mov	 eax, DWORD PTR _target_weathermode$[ebp]
  00200	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4]
  00207	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  0020e	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A, edx

; 459  : 
; 460  : 			target_weather_texture = NULL;

  00214	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A, 0

; 461  : 
; 462  : 			cloud_weather_blend_factor = 0;

  0021e	0f 57 c0	 xorps	 xmm0, xmm0
  00221	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_blend_factor@@3MA, xmm0

; 463  : 		
; 464  : 			cloud_weather_one_minus_blend_factor = 1.0;

  00229	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00231	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA, xmm0
  00239	e9 81 00 00 00	 jmp	 $LN18@scan_3d_cl
$LN15@scan_3d_cl:

; 465  : 		}
; 466  : 		else if ( cloud_weather_blend_factor == 0 )

  0023e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_blend_factor@@3MA
  00246	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0024d	9f		 lahf
  0024e	f6 c4 44	 test	 ah, 68			; 00000044H
  00251	7a 3e		 jp	 SHORT $LN17@scan_3d_cl

; 467  : 		{
; 468  : 
; 469  : 			current_weather_texture = system_textures[ cloud_textures[current_weathermode].texture_index ];

  00253	8b 45 cc	 mov	 eax, DWORD PTR _current_weathermode$[ebp]
  00256	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4]
  0025d	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  00264	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A, edx

; 470  : 
; 471  : 			target_weather_texture = NULL;

  0026a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A, 0

; 472  : 
; 473  : 			cloud_weather_blend_factor = 0;

  00274	0f 57 c0	 xorps	 xmm0, xmm0
  00277	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_blend_factor@@3MA, xmm0

; 474  : 		
; 475  : 			cloud_weather_one_minus_blend_factor = 1.0;

  0027f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00287	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA, xmm0

; 476  : 		}
; 477  : 		else

  0028f	eb 2e		 jmp	 SHORT $LN18@scan_3d_cl
$LN17@scan_3d_cl:

; 478  : 		{
; 479  : 
; 480  : 			current_weather_texture = system_textures[ cloud_textures[current_weathermode].texture_index ];

  00291	8b 45 cc	 mov	 eax, DWORD PTR _current_weathermode$[ebp]
  00294	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4]
  0029b	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  002a2	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A, edx

; 481  : 
; 482  : 			target_weather_texture = system_textures[ cloud_textures[target_weathermode].texture_index ];

  002a8	8b 45 c8	 mov	 eax, DWORD PTR _target_weathermode$[ebp]
  002ab	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4]
  002b2	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  002b9	89 15 00 00 00
	00		 mov	 DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A, edx
$LN18@scan_3d_cl:

; 483  : 		}
; 484  : 	}
; 485  : 	else

  002bf	eb 3c		 jmp	 SHORT $LN14@scan_3d_cl
$LN13@scan_3d_cl:

; 486  : 	{
; 487  : 
; 488  : 		current_weather_texture = system_textures[ cloud_textures[current_weathermode].texture_index ];

  002c1	8b 45 cc	 mov	 eax, DWORD PTR _current_weathermode$[ebp]
  002c4	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4]
  002cb	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  002d2	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_weather_texture@@3PAUSCREEN@@A, edx

; 489  : 
; 490  : 		target_weather_texture = NULL;

  002d8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?target_weather_texture@@3PAUSCREEN@@A, 0

; 491  : 
; 492  : 		cloud_weather_blend_factor = 0;

  002e2	0f 57 c0	 xorps	 xmm0, xmm0
  002e5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_blend_factor@@3MA, xmm0

; 493  : 	
; 494  : 		cloud_weather_one_minus_blend_factor = 1.0;

  002ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002f5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA, xmm0
$LN14@scan_3d_cl:

; 495  : 	}
; 496  : 
; 497  : 	//
; 498  : 	// Now bias the blend factors, to take into account the transparency of each texture
; 499  : 	//
; 500  : 
; 501  : 	cloud_weather_one_minus_blend_factor *= active_3d_environment->cloud_light.light__colour.alpha;

  002fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00302	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA
  0030a	f3 0f 59 80 70
	01 00 00	 mulss	 xmm0, DWORD PTR [eax+368]
  00312	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_one_minus_blend_factor@@3MA, xmm0

; 502  : 
; 503  : 	cloud_weather_blend_factor *= active_3d_environment->cloud_light.light__colour.alpha;

  0031a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0031f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_weather_blend_factor@@3MA
  00327	f3 0f 59 80 70
	01 00 00	 mulss	 xmm0, DWORD PTR [eax+368]
  0032f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_weather_blend_factor@@3MA, xmm0

; 504  : 
; 505  : 	//
; 506  : 	// Get the sector the visual_3d_vp is currently in
; 507  : 	//
; 508  : 
; 509  : 	get_cloud_3d_sector ( visual_3d_vp->x, visual_3d_vp->z, &visual_sector_x, &visual_sector_z );

  00337	8d 45 f8	 lea	 eax, DWORD PTR _visual_sector_z$[ebp]
  0033a	50		 push	 eax
  0033b	8d 4d fc	 lea	 ecx, DWORD PTR _visual_sector_x$[ebp]
  0033e	51		 push	 ecx
  0033f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00345	51		 push	 ecx
  00346	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0034b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00350	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00355	51		 push	 ecx
  00356	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0035a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035f	e8 00 00 00 00	 call	 ?get_cloud_3d_sector@@YGXMMPAH0@Z ; get_cloud_3d_sector

; 510  : 
; 511  : 	minimum_sector_x = visual_sector_x - cloud_3d_sector_scan_radius;

  00364	8b 45 fc	 mov	 eax, DWORD PTR _visual_sector_x$[ebp]
  00367	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?cloud_3d_sector_scan_radius@@3HA
  0036d	89 45 ec	 mov	 DWORD PTR _minimum_sector_x$[ebp], eax

; 512  : 	minimum_sector_z = visual_sector_z - cloud_3d_sector_scan_radius;

  00370	8b 45 f8	 mov	 eax, DWORD PTR _visual_sector_z$[ebp]
  00373	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?cloud_3d_sector_scan_radius@@3HA
  00379	89 45 e8	 mov	 DWORD PTR _minimum_sector_z$[ebp], eax

; 513  : 
; 514  : 	maximum_sector_x = visual_sector_x + cloud_3d_sector_scan_radius;

  0037c	8b 45 fc	 mov	 eax, DWORD PTR _visual_sector_x$[ebp]
  0037f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?cloud_3d_sector_scan_radius@@3HA
  00385	89 45 e4	 mov	 DWORD PTR _maximum_sector_x$[ebp], eax

; 515  : 	maximum_sector_z = visual_sector_z + cloud_3d_sector_scan_radius;

  00388	8b 45 f8	 mov	 eax, DWORD PTR _visual_sector_z$[ebp]
  0038b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?cloud_3d_sector_scan_radius@@3HA
  00391	89 45 e0	 mov	 DWORD PTR _maximum_sector_z$[ebp], eax

; 516  : 
; 517  : 	initial_sector_x_offset = minimum_sector_x * CLOUD_3D_SECTOR_SIDE_LENGTH;

  00394	8b 45 ec	 mov	 eax, DWORD PTR _minimum_sector_x$[ebp]
  00397	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  0039a	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0039e	f3 0f 11 45 dc	 movss	 DWORD PTR _initial_sector_x_offset$[ebp], xmm0

; 518  : 	initial_sector_z_offset = minimum_sector_z * CLOUD_3D_SECTOR_SIDE_LENGTH;

  003a3	8b 45 e8	 mov	 eax, DWORD PTR _minimum_sector_z$[ebp]
  003a6	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  003a9	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003ad	f3 0f 11 45 d8	 movss	 DWORD PTR _initial_sector_z_offset$[ebp], xmm0

; 519  : 
; 520  : 	current_sector_z_offset = initial_sector_z_offset;

  003b2	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _initial_sector_z_offset$[ebp]
  003b7	f3 0f 11 45 d0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 521  : 
; 522  : 	for ( current_sector_z = minimum_sector_z; current_sector_z < maximum_sector_z; current_sector_z++ )

  003bc	8b 45 e8	 mov	 eax, DWORD PTR _minimum_sector_z$[ebp]
  003bf	89 45 f0	 mov	 DWORD PTR _current_sector_z$[ebp], eax
  003c2	eb 09		 jmp	 SHORT $LN4@scan_3d_cl
$LN2@scan_3d_cl:
  003c4	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  003c7	83 c0 01	 add	 eax, 1
  003ca	89 45 f0	 mov	 DWORD PTR _current_sector_z$[ebp], eax
$LN4@scan_3d_cl:
  003cd	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  003d0	3b 45 e0	 cmp	 eax, DWORD PTR _maximum_sector_z$[ebp]
  003d3	0f 8d d6 02 00
	00		 jge	 $LN3@scan_3d_cl

; 523  : 	{
; 524  : 
; 525  : 		current_sector_x_offset = initial_sector_x_offset;

  003d9	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _initial_sector_x_offset$[ebp]
  003de	f3 0f 11 45 d4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 526  : 
; 527  : 		for ( current_sector_x = minimum_sector_x; current_sector_x < maximum_sector_x; current_sector_x++ )

  003e3	8b 45 ec	 mov	 eax, DWORD PTR _minimum_sector_x$[ebp]
  003e6	89 45 f4	 mov	 DWORD PTR _current_sector_x$[ebp], eax
  003e9	eb 09		 jmp	 SHORT $LN7@scan_3d_cl
$LN5@scan_3d_cl:
  003eb	8b 45 f4	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  003ee	83 c0 01	 add	 eax, 1
  003f1	89 45 f4	 mov	 DWORD PTR _current_sector_x$[ebp], eax
$LN7@scan_3d_cl:
  003f4	8b 45 f4	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  003f7	3b 45 e4	 cmp	 eax, DWORD PTR _maximum_sector_x$[ebp]
  003fa	0f 8d 98 02 00
	00		 jge	 $LN6@scan_3d_cl

; 528  : 		{
; 529  : 
; 530  : 			vec3d
; 531  : 				sector_centre,
; 532  : 				sector_relative_centre;
; 533  : 
; 534  : 			scene_slot_drawing_list
; 535  : 				*sorting_slot;
; 536  : 
; 537  : 			sector_centre.x = current_sector_x_offset + ( CLOUD_3D_SECTOR_SIDE_LENGTH / 2 );

  00400	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  00405	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46000000
  0040d	f3 0f 11 45 94	 movss	 DWORD PTR _sector_centre$10[ebp], xmm0

; 538  : 			sector_centre.y = cloud_3d_base_height;

  00412	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  0041a	f3 0f 11 45 98	 movss	 DWORD PTR _sector_centre$10[ebp+4], xmm0

; 539  : 			sector_centre.z = current_sector_z_offset + ( CLOUD_3D_SECTOR_SIDE_LENGTH / 2 );

  0041f	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  00424	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46000000
  0042c	f3 0f 11 45 9c	 movss	 DWORD PTR _sector_centre$10[ebp+8], xmm0

; 540  : 
; 541  : 			sector_relative_centre.z = (	( sector_centre.x - visual_3d_vp->x ) * visual_3d_vp->zv.x +

  00431	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00436	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _sector_centre$10[ebp]
  0043b	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0043f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00445	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  0044a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00450	f3 0f 10 4d 98	 movss	 xmm1, DWORD PTR _sector_centre$10[ebp+4]
  00455	f3 0f 5c 4a 04	 subss	 xmm1, DWORD PTR [edx+4]
  0045a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0045f	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00464	f3 0f 58 c1	 addss	 xmm0, xmm1
  00468	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0046e	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _sector_centre$10[ebp+8]
  00473	f3 0f 5c 49 08	 subss	 xmm1, DWORD PTR [ecx+8]
  00478	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0047e	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00483	f3 0f 58 c1	 addss	 xmm0, xmm1
  00487	f3 0f 11 45 90	 movss	 DWORD PTR _sector_relative_centre$9[ebp+8], xmm0

; 542  : 													( sector_centre.y - visual_3d_vp->y ) * visual_3d_vp->zv.y +
; 543  : 													( sector_centre.z - visual_3d_vp->z ) * visual_3d_vp->zv.z );
; 544  : 
; 545  : 			if ( ( sector_relative_centre.z + ( CLOUD_3D_SECTOR_SIDE_LENGTH * 1.4142 ) ) < clip_hither )

  0048c	f3 0f 5a 45 90	 cvtss2sd xmm0, DWORD PTR _sector_relative_centre$9[ebp+8]
  00491	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40d6a0902de00d1b
  00499	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?clip_hither@@3MA
  004a1	66 0f 2f c8	 comisd	 xmm1, xmm0
  004a5	76 05		 jbe	 SHORT $LN19@scan_3d_cl

; 546  : 			{
; 547  : 
; 548  : 				//
; 549  : 				// Cloud sector is totally behind the view
; 550  : 				//
; 551  : 			}
; 552  : 			else

  004a7	e9 d5 01 00 00	 jmp	 $LN22@scan_3d_cl
$LN19@scan_3d_cl:

; 553  : 			{
; 554  : 
; 555  : 				unsigned int
; 556  : 					outcode,
; 557  : 					outcode1,
; 558  : 					outcode2;
; 559  : 
; 560  : 				float
; 561  : 					x_minimum_offset,
; 562  : 					x_maximum_offset,
; 563  : 					z_minimum_offset,
; 564  : 					z_maximum_offset;
; 565  : 
; 566  : 				x_minimum_offset = current_sector_x_offset;

  004ac	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  004b1	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _x_minimum_offset$4[ebp], xmm0

; 567  : 				x_maximum_offset = current_sector_x_offset + CLOUD_3D_SECTOR_SIDE_LENGTH;

  004b9	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  004be	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46800000
  004c6	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _x_maximum_offset$3[ebp], xmm0

; 568  : 
; 569  : 				z_minimum_offset = current_sector_z_offset;

  004ce	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  004d3	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _z_minimum_offset$2[ebp], xmm0

; 570  : 				z_maximum_offset = current_sector_z_offset + CLOUD_3D_SECTOR_SIDE_LENGTH;

  004db	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  004e0	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46800000
  004e8	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _z_maximum_offset$1[ebp], xmm0

; 571  : 
; 572  : 				outcode = get_3d_point_outcodes ( x_minimum_offset, cloud_3d_base_height, z_minimum_offset );

  004f0	51		 push	 ecx
  004f1	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _z_minimum_offset$2[ebp]
  004f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fe	51		 push	 ecx
  004ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  00507	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050c	51		 push	 ecx
  0050d	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _x_minimum_offset$4[ebp]
  00515	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0051a	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  0051f	89 45 80	 mov	 DWORD PTR _outcode$7[ebp], eax

; 573  : 				outcode1 = outcode;

  00522	8b 45 80	 mov	 eax, DWORD PTR _outcode$7[ebp]
  00525	89 85 7c ff ff
	ff		 mov	 DWORD PTR _outcode1$6[ebp], eax

; 574  : 				outcode2 = outcode;

  0052b	8b 45 80	 mov	 eax, DWORD PTR _outcode$7[ebp]
  0052e	89 85 78 ff ff
	ff		 mov	 DWORD PTR _outcode2$5[ebp], eax

; 575  : 
; 576  : 				outcode = get_3d_point_outcodes ( x_minimum_offset, cloud_3d_base_height, z_maximum_offset );

  00534	51		 push	 ecx
  00535	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _z_maximum_offset$1[ebp]
  0053d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00542	51		 push	 ecx
  00543	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  0054b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00550	51		 push	 ecx
  00551	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _x_minimum_offset$4[ebp]
  00559	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055e	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  00563	89 45 80	 mov	 DWORD PTR _outcode$7[ebp], eax

; 577  : 				outcode1 |= outcode;

  00566	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _outcode1$6[ebp]
  0056c	0b 45 80	 or	 eax, DWORD PTR _outcode$7[ebp]
  0056f	89 85 7c ff ff
	ff		 mov	 DWORD PTR _outcode1$6[ebp], eax

; 578  : 				outcode2 &= outcode;

  00575	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _outcode2$5[ebp]
  0057b	23 45 80	 and	 eax, DWORD PTR _outcode$7[ebp]
  0057e	89 85 78 ff ff
	ff		 mov	 DWORD PTR _outcode2$5[ebp], eax

; 579  : 
; 580  : 				outcode = get_3d_point_outcodes ( x_maximum_offset, cloud_3d_base_height, z_minimum_offset );

  00584	51		 push	 ecx
  00585	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _z_minimum_offset$2[ebp]
  0058d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00592	51		 push	 ecx
  00593	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  0059b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a0	51		 push	 ecx
  005a1	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _x_maximum_offset$3[ebp]
  005a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ae	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  005b3	89 45 80	 mov	 DWORD PTR _outcode$7[ebp], eax

; 581  : 				outcode1 |= outcode;

  005b6	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _outcode1$6[ebp]
  005bc	0b 45 80	 or	 eax, DWORD PTR _outcode$7[ebp]
  005bf	89 85 7c ff ff
	ff		 mov	 DWORD PTR _outcode1$6[ebp], eax

; 582  : 				outcode2 &= outcode;

  005c5	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _outcode2$5[ebp]
  005cb	23 45 80	 and	 eax, DWORD PTR _outcode$7[ebp]
  005ce	89 85 78 ff ff
	ff		 mov	 DWORD PTR _outcode2$5[ebp], eax

; 583  : 
; 584  : 				outcode = get_3d_point_outcodes ( x_maximum_offset, cloud_3d_base_height, z_maximum_offset );

  005d4	51		 push	 ecx
  005d5	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _z_maximum_offset$1[ebp]
  005dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e2	51		 push	 ecx
  005e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  005eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f0	51		 push	 ecx
  005f1	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _x_maximum_offset$3[ebp]
  005f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fe	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  00603	89 45 80	 mov	 DWORD PTR _outcode$7[ebp], eax

; 585  : 				outcode1 |= outcode;

  00606	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _outcode1$6[ebp]
  0060c	0b 45 80	 or	 eax, DWORD PTR _outcode$7[ebp]
  0060f	89 85 7c ff ff
	ff		 mov	 DWORD PTR _outcode1$6[ebp], eax

; 586  : 				outcode2 &= outcode;

  00615	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _outcode2$5[ebp]
  0061b	23 45 80	 and	 eax, DWORD PTR _outcode$7[ebp]
  0061e	89 85 78 ff ff
	ff		 mov	 DWORD PTR _outcode2$5[ebp], eax

; 587  : 
; 588  : //				if ( outcode2 == 0 )
; 589  : 				{
; 590  : 
; 591  : 					sorting_slot = get_3d_scene_slot ();

  00624	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  00629	89 45 84	 mov	 DWORD PTR _sorting_slot$8[ebp], eax

; 592  : 		
; 593  : 					if ( sorting_slot )

  0062c	83 7d 84 00	 cmp	 DWORD PTR _sorting_slot$8[ebp], 0
  00630	74 42		 je	 SHORT $LN21@scan_3d_cl

; 594  : 					{
; 595  : 		
; 596  : 						sorting_slot->type = OBJECT_3D_DRAW_TYPE_CLOUD_SECTOR;

  00632	8b 45 84	 mov	 eax, DWORD PTR _sorting_slot$8[ebp]
  00635	c7 40 08 0f 00
	00 00		 mov	 DWORD PTR [eax+8], 15	; 0000000fH

; 597  : 		
; 598  : 						//
; 599  : 						// Use the integer representation of the float value
; 600  : 						//
; 601  : 		
; 602  : 						sector_relative_centre.z += 32768;

  0063c	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _sector_relative_centre$9[ebp+8]
  00641	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@47000000
  00649	f3 0f 11 45 90	 movss	 DWORD PTR _sector_relative_centre$9[ebp+8], xmm0

; 603  : 		
; 604  : 						sorting_slot->z = *( ( int * ) &sector_relative_centre.z );

  0064e	8b 45 84	 mov	 eax, DWORD PTR _sorting_slot$8[ebp]
  00651	8b 4d 90	 mov	 ecx, DWORD PTR _sector_relative_centre$9[ebp+8]
  00654	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 605  : 		
; 606  : 						sorting_slot->cloud_sector.x = current_sector_x;

  00657	8b 45 84	 mov	 eax, DWORD PTR _sorting_slot$8[ebp]
  0065a	8b 4d f4	 mov	 ecx, DWORD PTR _current_sector_x$[ebp]
  0065d	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 607  : 		
; 608  : 						sorting_slot->cloud_sector.z = current_sector_z;

  00660	8b 45 84	 mov	 eax, DWORD PTR _sorting_slot$8[ebp]
  00663	8b 4d f0	 mov	 ecx, DWORD PTR _current_sector_z$[ebp]
  00666	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 609  : 		
; 610  : 						insert_middle_scene_slot_into_3d_scene ( sorting_slot );

  00669	8b 45 84	 mov	 eax, DWORD PTR _sorting_slot$8[ebp]
  0066c	50		 push	 eax
  0066d	e8 00 00 00 00	 call	 ?insert_middle_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_middle_scene_slot_into_3d_scene

; 611  : 					}
; 612  : 					else

  00672	eb 0d		 jmp	 SHORT $LN22@scan_3d_cl
$LN21@scan_3d_cl:

; 613  : 					{
; 614  : 		
; 615  : 						debug_log ( "Run out of object slots!" );

  00674	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KGEDCPOK@Run?5out?5of?5object?5slots?$CB@
  00679	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0067e	83 c4 04	 add	 esp, 4
$LN22@scan_3d_cl:

; 616  : 					}
; 617  : 				}
; 618  : 			}
; 619  : 
; 620  : 			current_sector_x_offset += CLOUD_3D_SECTOR_SIDE_LENGTH;

  00681	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  00686	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46800000
  0068e	f3 0f 11 45 d4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 621  : 		}

  00693	e9 53 fd ff ff	 jmp	 $LN5@scan_3d_cl
$LN6@scan_3d_cl:

; 622  : 
; 623  : 		current_sector_z_offset += CLOUD_3D_SECTOR_SIDE_LENGTH;

  00698	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  0069d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46800000
  006a5	f3 0f 11 45 d0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 624  : 	}

  006aa	e9 15 fd ff ff	 jmp	 $LN2@scan_3d_cl
$LN3@scan_3d_cl:

; 625  : }

  006af	5f		 pop	 edi
  006b0	5e		 pop	 esi
  006b1	5b		 pop	 ebx
  006b2	8b e5		 mov	 esp, ebp
  006b4	5d		 pop	 ebp
  006b5	c3		 ret	 0
?scan_3d_clouds@@YGXXZ ENDP				; scan_3d_clouds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?get_cloud_3d_scan_radius@@YGHXZ
_TEXT	SEGMENT
?get_cloud_3d_scan_radius@@YGHXZ PROC			; get_cloud_3d_scan_radius, COMDAT

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 356  : 
; 357  : 	return ( cloud_3d_sector_scan_radius );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cloud_3d_sector_scan_radius@@3HA

; 358  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_cloud_3d_scan_radius@@YGHXZ ENDP			; get_cloud_3d_scan_radius
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?set_cloud_3d_scan_radius@@YGXH@Z
_TEXT	SEGMENT
_scan_radius$ = 8					; size = 4
?set_cloud_3d_scan_radius@@YGXH@Z PROC			; set_cloud_3d_scan_radius, COMDAT

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 319  : 
; 320  : 	if ( ( scan_radius < 1 ) || ( scan_radius > 32 ) )

  00009	83 7d 08 01	 cmp	 DWORD PTR _scan_radius$[ebp], 1
  0000d	7c 06		 jl	 SHORT $LN4@set_cloud_
  0000f	83 7d 08 20	 cmp	 DWORD PTR _scan_radius$[ebp], 32 ; 00000020H
  00013	7e 16		 jle	 SHORT $LN2@set_cloud_
$LN4@set_cloud_:

; 321  : 	{
; 322  : 
; 323  : 		debug_fatal ( "Trying to set cloud scan radius to %d", scan_radius );

  00015	8b 45 08	 mov	 eax, DWORD PTR _scan_radius$[ebp]
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KNLJGFL@Trying?5to?5set?5cloud?5scan?5radius@
  0001e	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00023	83 c4 08	 add	 esp, 8

; 324  : 	}
; 325  : 	else

  00026	e9 a8 00 00 00	 jmp	 $LN3@set_cloud_
$LN2@set_cloud_:

; 326  : 	{
; 327  : 
; 328  : 		cloud_3d_sector_scan_radius = scan_radius;

  0002b	8b 45 08	 mov	 eax, DWORD PTR _scan_radius$[ebp]
  0002e	a3 00 00 00 00	 mov	 DWORD PTR ?cloud_3d_sector_scan_radius@@3HA, eax

; 329  : 
; 330  : 		//
; 331  : 		// Now set up the blending constants
; 332  : 		//
; 333  : 
; 334  : 		cloud_3d_blend_start = CLOUD_MINIMUM_BLEND_DISTANCE;

  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46800000
  0003b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_blend_start@@3MA, xmm0

; 335  : 
; 336  : 		cloud_3d_blend_end = CLOUD_MAXIMUM_BLEND_DISTANCE;

  00043	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47800000
  0004b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_blend_end@@3MA, xmm0

; 337  : 
; 338  : 		cloud_3d_blend_distance = cloud_3d_blend_end - cloud_3d_blend_start;

  00053	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_blend_end@@3MA
  0005b	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?cloud_3d_blend_start@@3MA
  00063	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_blend_distance@@3MA, xmm0

; 339  : 
; 340  : 		cloud_3d_blend_start_squared = cloud_3d_blend_start * cloud_3d_blend_start;

  0006b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_blend_start@@3MA
  00073	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?cloud_3d_blend_start@@3MA
  0007b	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0007f	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?cloud_3d_blend_start_squared@@3NA, xmm0

; 341  : 
; 342  : 		cloud_3d_blend_distance_squared = cloud_3d_blend_distance * cloud_3d_blend_distance;

  00087	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_blend_distance@@3MA
  0008f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?cloud_3d_blend_distance@@3MA
  00097	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0009b	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?cloud_3d_blend_distance_squared@@3NA, xmm0

; 343  : 
; 344  : 		cloud_3d_blend_constant = cloud_3d_blend_distance_squared - cloud_3d_blend_start_squared;

  000a3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?cloud_3d_blend_distance_squared@@3NA
  000ab	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR ?cloud_3d_blend_start_squared@@3NA
  000b3	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?cloud_3d_blend_constant@@3NA, xmm0

; 345  : 
; 346  : 		cloud_3d_blend_factor = 1.0 / cloud_3d_blend_distance_squared;

  000bb	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000c3	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR ?cloud_3d_blend_distance_squared@@3NA
  000cb	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?cloud_3d_blend_factor@@3NA, xmm0
$LN3@set_cloud_:

; 347  : 	}
; 348  : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?set_cloud_3d_scan_radius@@YGXH@Z ENDP			; set_cloud_3d_scan_radius
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?get_position_in_clouds@@YGHM@Z
_TEXT	SEGMENT
_height$ = 8						; size = 4
?get_position_in_clouds@@YGHM@Z PROC			; get_position_in_clouds, COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 
; 296  : 	if ( height > cloud_3d_base_height )

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _height$[ebp]
  0000e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  00015	76 09		 jbe	 SHORT $LN2@get_positi

; 297  : 	{
; 298  : 
; 299  : 		return ( POSITION_ABOVE_CLOUDS );

  00017	b8 02 00 00 00	 mov	 eax, 2
  0001c	eb 1b		 jmp	 SHORT $LN5@get_positi
  0001e	eb 19		 jmp	 SHORT $LN5@get_positi
$LN2@get_positi:

; 300  : 	}
; 301  : 	else if ( height < cloud_3d_base_height )

  00020	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  00028	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _height$[ebp]
  0002c	76 06		 jbe	 SHORT $LN4@get_positi

; 302  : 	{
; 303  : 
; 304  : 		return ( POSITION_BELOW_CLOUDS );

  0002e	33 c0		 xor	 eax, eax
  00030	eb 07		 jmp	 SHORT $LN5@get_positi

; 305  : 	}
; 306  : 	else

  00032	eb 05		 jmp	 SHORT $LN5@get_positi
$LN4@get_positi:

; 307  : 	{
; 308  : 
; 309  : 		return ( POSITION_IN_CLOUDS );

  00034	b8 01 00 00 00	 mov	 eax, 1
$LN5@get_positi:

; 310  : 	}
; 311  : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?get_position_in_clouds@@YGHM@Z ENDP			; get_position_in_clouds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?get_cloud_3d_base_height@@YGMXZ
_TEXT	SEGMENT
?get_cloud_3d_base_height@@YGMXZ PROC			; get_cloud_3d_base_height, COMDAT

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 
; 286  : 	return ( cloud_3d_base_height );

  00009	d9 05 00 00 00
	00		 fld	 DWORD PTR ?cloud_3d_base_height@@3MA ; cloud_3d_base_height

; 287  : }

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?get_cloud_3d_base_height@@YGMXZ ENDP			; get_cloud_3d_base_height
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?set_cloud_3d_base_height@@YGXM@Z
_TEXT	SEGMENT
_height$ = 8						; size = 4
?set_cloud_3d_base_height@@YGXM@Z PROC			; set_cloud_3d_base_height, COMDAT

; 272  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 273  : 
; 274  : 	cloud_3d_base_height = height;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _height$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_base_height@@3MA, xmm0

; 275  : 
; 276  : 	set_middle_scene_slot_height ( height );

  00016	51		 push	 ecx
  00017	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _height$[ebp]
  0001c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00021	e8 00 00 00 00	 call	 ?set_middle_scene_slot_height@@YGXM@Z ; set_middle_scene_slot_height

; 277  : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?set_cloud_3d_base_height@@YGXM@Z ENDP			; set_cloud_3d_base_height
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?add_3d_cloud_texture@@YGXHW4WEATHERMODES@@@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_weather$ = 12						; size = 4
?add_3d_cloud_texture@@YGXHW4WEATHERMODES@@@Z PROC	; add_3d_cloud_texture, COMDAT

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 261  : 
; 262  : 	cloud_textures[weather].texture_index = index;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _weather$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  0000f	89 0c c5 04 00
	00 00		 mov	 DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8+4], ecx

; 263  : 
; 264  : 	cloud_textures[weather].valid = TRUE;

  00016	8b 45 0c	 mov	 eax, DWORD PTR _weather$[ebp]
  00019	c7 04 c5 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8], 1

; 265  : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?add_3d_cloud_texture@@YGXHW4WEATHERMODES@@@Z ENDP	; add_3d_cloud_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\clouds.c
;	COMDAT ?initialise_3d_clouds@@YGXXZ
_TEXT	SEGMENT
_count$ = -4						; size = 4
?initialise_3d_clouds@@YGXXZ PROC			; initialise_3d_clouds, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 
; 245  : 	int
; 246  : 		count;
; 247  : 
; 248  : 	for ( count = WEATHERMODE_INVALID + 1; count < WEATHERMODE_LAST; count++ )

  00009	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
  00010	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@initialise:
  0001b	83 7d fc 05	 cmp	 DWORD PTR _count$[ebp], 5
  0001f	7d 10		 jge	 SHORT $LN1@initialise

; 249  : 	{
; 250  : 
; 251  : 		cloud_textures[count].valid = FALSE;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00024	c7 04 c5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?cloud_textures@@3PAUCLOUD_WEATHER_TEXTURE@@A[eax*8], 0

; 252  : 	}

  0002f	eb e1		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 253  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?initialise_3d_clouds@@YGXXZ ENDP			; initialise_3d_clouds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.h
;	COMDAT ?generate_lookup_outcode@@YGHHHHH@Z
_TEXT	SEGMENT
_xmin$ = 8						; size = 4
_ymin$ = 12						; size = 4
_xmax$ = 16						; size = 4
_ymax$ = 20						; size = 4
?generate_lookup_outcode@@YGHHHHH@Z PROC		; generate_lookup_outcode, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 
; 201  : 	__asm mov eax, xmin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _xmin$[ebp]
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _ymin$[ebp]
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR _xmax$[ebp]
  00012	8b 55 14	 mov	 edx, DWORD PTR _ymax$[ebp]
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	81 e3 00 00 00
	80		 and	 ebx, -2147483648	; 80000000H
  0001e	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00021	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  00027	c1 eb 1e	 shr	 ebx, 30			; 0000001eH
  0002a	83 e0 01	 and	 eax, 1
  0002d	c1 ea 1c	 shr	 edx, 28			; 0000001cH
  00030	83 e1 04	 and	 ecx, 4
  00033	0b c3		 or	 eax, ebx
  00035	0b ca		 or	 ecx, edx
  00037	0b c1		 or	 eax, ecx
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?generate_lookup_outcode@@YGHHHHH@Z ENDP		; generate_lookup_outcode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
END
