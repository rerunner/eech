; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\system\fpu.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__8087cw@@3GA					; __8087cw
PUBLIC	??_C@_08BEHKFNNO@disabled@			; `string'
PUBLIC	??_C@_07MHHIKOPA@enabled@			; `string'
;	COMDAT ??_C@_07MHHIKOPA@enabled@
CONST	SEGMENT
??_C@_07MHHIKOPA@enabled@ DB 'enabled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BEHKFNNO@disabled@
CONST	SEGMENT
??_C@_08BEHKFNNO@disabled@ DB 'disabled', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?status@@3QBQBDB DD FLAT:??_C@_08BEHKFNNO@disabled@	; status
	DD	FLAT:??_C@_07MHHIKOPA@enabled@
CONST	ENDS
_DATA	SEGMENT
?__8087cw@@3GA DW 037fH					; __8087cw
_DATA	ENDS
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?asm_convert_double_to_int@@YGXNPAH@Z		; asm_convert_double_to_int
PUBLIC	?convert_float_to_int@@YGXMPAH@Z		; convert_float_to_int
PUBLIC	?convert_double_to_int@@YGXNPAH@Z		; convert_double_to_int
PUBLIC	?report_fpu_exceptions@@YGXXZ			; report_fpu_exceptions
PUBLIC	?get_fpu_control_word_value@@YGGXZ		; get_fpu_control_word_value
PUBLIC	?set_fpu_mode_default@@YGXXZ			; set_fpu_mode_default
PUBLIC	?set_fpu_exceptions@@YGXXZ			; set_fpu_exceptions
PUBLIC	?set_fpu_rounding_mode_nearest@@YGXXZ		; set_fpu_rounding_mode_nearest
PUBLIC	?set_fpu_rounding_mode_up@@YGXXZ		; set_fpu_rounding_mode_up
PUBLIC	?set_fpu_rounding_mode_down@@YGXXZ		; set_fpu_rounding_mode_down
PUBLIC	?set_fpu_rounding_mode_zero@@YGXXZ		; set_fpu_rounding_mode_zero
PUBLIC	?set_fpu_precision_mode_single@@YGXXZ		; set_fpu_precision_mode_single
PUBLIC	?set_fpu_precision_mode_double@@YGXXZ		; set_fpu_precision_mode_double
PUBLIC	?set_fpu_precision_mode_extended@@YGXXZ		; set_fpu_precision_mode_extended
PUBLIC	?set_fpu_control_word_value@@YGXG@Z		; set_fpu_control_word_value
PUBLIC	??_C@_0CD@OHFCMPIB@Interrupt?5Exception?5Masks?5?$CI?5?$CF08@ ; `string'
PUBLIC	??_C@_0BP@IJCKDLBH@Invalid?5Operation?5exception?5?$CFs@ ; `string'
PUBLIC	??_C@_0BK@KMEIMGGA@Denormalized?5exception?5?$CFs@ ; `string'
PUBLIC	??_C@_0BM@FFMJKMEP@Divide?9By?9Zero?5exception?5?$CFs@ ; `string'
PUBLIC	??_C@_0BG@DDCNAAGH@Overflow?5exception?5?$CFs@	; `string'
PUBLIC	??_C@_0BH@EGKEKEGK@Underflow?5exception?5?$CFs@	; `string'
PUBLIC	??_C@_0BH@DPDFPHFC@Precision?5exception?5?$CFs@	; `string'
PUBLIC	??_C@_0BE@NGAIEEIH@Infinity?5Control?5?$DN?5@	; `string'
PUBLIC	??_C@_06JLGAMIDL@affine@			; `string'
PUBLIC	??_C@_0L@PHDNAHD@projective@			; `string'
PUBLIC	??_C@_0BE@DJDOPPAC@Rounding?5Control?5?$DN?5@	; `string'
PUBLIC	??_C@_04EHDLHMJM@near@				; `string'
PUBLIC	??_C@_04JMOKAGMG@down@				; `string'
PUBLIC	??_C@_02HNLLPFKA@up@				; `string'
PUBLIC	??_C@_04HFGJCPHI@chop@				; `string'
PUBLIC	??_C@_0BF@KOAKAEMF@Precision?5Control?5?$DN?5@	; `string'
PUBLIC	??_C@_07PEIDIGPM@24?5bits@			; `string'
PUBLIC	??_C@_07DLOBLBGL@53?5bits@			; `string'
PUBLIC	??_C@_07HAMJIIAG@64?5bits@			; `string'
PUBLIC	??_C@_0N@GIBIJPGC@FPU?3?5nearest@		; `string'
PUBLIC	??_C@_07DMBPEHFL@FPU?3?5up@			; `string'
PUBLIC	??_C@_09EOMNKNLE@FPU?3?5down@			; `string'
EXTRN	__imp___control87:PROC
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_09EOMNKNLE@FPU?3?5down@
CONST	SEGMENT
??_C@_09EOMNKNLE@FPU?3?5down@ DB 'FPU: down', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DMBPEHFL@FPU?3?5up@
CONST	SEGMENT
??_C@_07DMBPEHFL@FPU?3?5up@ DB 'FPU: up', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GIBIJPGC@FPU?3?5nearest@
CONST	SEGMENT
??_C@_0N@GIBIJPGC@FPU?3?5nearest@ DB 'FPU: nearest', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HAMJIIAG@64?5bits@
CONST	SEGMENT
??_C@_07HAMJIIAG@64?5bits@ DB '64 bits', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLOBLBGL@53?5bits@
CONST	SEGMENT
??_C@_07DLOBLBGL@53?5bits@ DB '53 bits', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PEIDIGPM@24?5bits@
CONST	SEGMENT
??_C@_07PEIDIGPM@24?5bits@ DB '24 bits', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KOAKAEMF@Precision?5Control?5?$DN?5@
CONST	SEGMENT
??_C@_0BF@KOAKAEMF@Precision?5Control?5?$DN?5@ DB 'Precision Control = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HFGJCPHI@chop@
CONST	SEGMENT
??_C@_04HFGJCPHI@chop@ DB 'chop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HNLLPFKA@up@
CONST	SEGMENT
??_C@_02HNLLPFKA@up@ DB 'up', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JMOKAGMG@down@
CONST	SEGMENT
??_C@_04JMOKAGMG@down@ DB 'down', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EHDLHMJM@near@
CONST	SEGMENT
??_C@_04EHDLHMJM@near@ DB 'near', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DJDOPPAC@Rounding?5Control?5?$DN?5@
CONST	SEGMENT
??_C@_0BE@DJDOPPAC@Rounding?5Control?5?$DN?5@ DB 'Rounding Control = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PHDNAHD@projective@
CONST	SEGMENT
??_C@_0L@PHDNAHD@projective@ DB 'projective', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JLGAMIDL@affine@
CONST	SEGMENT
??_C@_06JLGAMIDL@affine@ DB 'affine', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NGAIEEIH@Infinity?5Control?5?$DN?5@
CONST	SEGMENT
??_C@_0BE@NGAIEEIH@Infinity?5Control?5?$DN?5@ DB 'Infinity Control = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DPDFPHFC@Precision?5exception?5?$CFs@
CONST	SEGMENT
??_C@_0BH@DPDFPHFC@Precision?5exception?5?$CFs@ DB 'Precision exception %'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EGKEKEGK@Underflow?5exception?5?$CFs@
CONST	SEGMENT
??_C@_0BH@EGKEKEGK@Underflow?5exception?5?$CFs@ DB 'Underflow exception %'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DDCNAAGH@Overflow?5exception?5?$CFs@
CONST	SEGMENT
??_C@_0BG@DDCNAAGH@Overflow?5exception?5?$CFs@ DB 'Overflow exception %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FFMJKMEP@Divide?9By?9Zero?5exception?5?$CFs@
CONST	SEGMENT
??_C@_0BM@FFMJKMEP@Divide?9By?9Zero?5exception?5?$CFs@ DB 'Divide-By-Zero'
	DB	' exception %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KMEIMGGA@Denormalized?5exception?5?$CFs@
CONST	SEGMENT
??_C@_0BK@KMEIMGGA@Denormalized?5exception?5?$CFs@ DB 'Denormalized excep'
	DB	'tion %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IJCKDLBH@Invalid?5Operation?5exception?5?$CFs@
CONST	SEGMENT
??_C@_0BP@IJCKDLBH@Invalid?5Operation?5exception?5?$CFs@ DB 'Invalid Oper'
	DB	'ation exception %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OHFCMPIB@Interrupt?5Exception?5Masks?5?$CI?5?$CF08@
CONST	SEGMENT
??_C@_0CD@OHFCMPIB@Interrupt?5Exception?5Masks?5?$CI?5?$CF08@ DB 'Interru'
	DB	'pt Exception Masks ( %08x )', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_control_word_value@@YGXG@Z
_TEXT	SEGMENT
_value$ = 8						; size = 2
?set_fpu_control_word_value@@YGXG@Z PROC		; set_fpu_control_word_value, COMDAT

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 205  : 
; 206  : 	_control87 ( 0xffff, value );

  00009	0f b7 45 08	 movzx	 eax, WORD PTR _value$[ebp]
  0000d	50		 push	 eax
  0000e	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00019	83 c4 08	 add	 esp, 8

; 207  : }

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?set_fpu_control_word_value@@YGXG@Z ENDP		; set_fpu_control_word_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_precision_mode_extended@@YGXXZ
_TEXT	SEGMENT
?set_fpu_precision_mode_extended@@YGXXZ PROC		; set_fpu_precision_mode_extended, COMDAT

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 349  : 
; 350  : 	_control87 ( PC_64, MCW_PC );

  00009	68 00 00 03 00	 push	 196608			; 00030000H
  0000e	6a 00		 push	 0
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00016	83 c4 08	 add	 esp, 8

; 351  : }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?set_fpu_precision_mode_extended@@YGXXZ ENDP		; set_fpu_precision_mode_extended
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_precision_mode_double@@YGXXZ
_TEXT	SEGMENT
?set_fpu_precision_mode_double@@YGXXZ PROC		; set_fpu_precision_mode_double, COMDAT

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 339  : 
; 340  : 	_control87 ( PC_53, MCW_PC );

  00009	68 00 00 03 00	 push	 196608			; 00030000H
  0000e	68 00 00 01 00	 push	 65536			; 00010000H
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00019	83 c4 08	 add	 esp, 8

; 341  : }

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?set_fpu_precision_mode_double@@YGXXZ ENDP		; set_fpu_precision_mode_double
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_precision_mode_single@@YGXXZ
_TEXT	SEGMENT
?set_fpu_precision_mode_single@@YGXXZ PROC		; set_fpu_precision_mode_single, COMDAT

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 329  : 
; 330  : 	_control87 ( PC_24, MCW_PC );

  00009	68 00 00 03 00	 push	 196608			; 00030000H
  0000e	68 00 00 02 00	 push	 131072			; 00020000H
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00019	83 c4 08	 add	 esp, 8

; 331  : }

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?set_fpu_precision_mode_single@@YGXXZ ENDP		; set_fpu_precision_mode_single
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_rounding_mode_zero@@YGXXZ
_TEXT	SEGMENT
?set_fpu_rounding_mode_zero@@YGXXZ PROC			; set_fpu_rounding_mode_zero, COMDAT

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 319  : 
; 320  : 	_control87 ( RC_CHOP, MCW_RC );

  00009	68 00 03 00 00	 push	 768			; 00000300H
  0000e	68 00 03 00 00	 push	 768			; 00000300H
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00019	83 c4 08	 add	 esp, 8

; 321  : }

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?set_fpu_rounding_mode_zero@@YGXXZ ENDP			; set_fpu_rounding_mode_zero
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_rounding_mode_down@@YGXXZ
_TEXT	SEGMENT
?set_fpu_rounding_mode_down@@YGXXZ PROC			; set_fpu_rounding_mode_down, COMDAT

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 307  : 
; 308  : 	debug_log ( "FPU: down" );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_09EOMNKNLE@FPU?3?5down@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 309  : 
; 310  : 	_control87 ( RC_DOWN, MCW_RC );

  00016	68 00 03 00 00	 push	 768			; 00000300H
  0001b	68 00 01 00 00	 push	 256			; 00000100H
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00026	83 c4 08	 add	 esp, 8

; 311  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?set_fpu_rounding_mode_down@@YGXXZ ENDP			; set_fpu_rounding_mode_down
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_rounding_mode_up@@YGXXZ
_TEXT	SEGMENT
?set_fpu_rounding_mode_up@@YGXXZ PROC			; set_fpu_rounding_mode_up, COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 
; 296  : 	debug_log ( "FPU: up" );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_07DMBPEHFL@FPU?3?5up@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 297  : 
; 298  : 	_control87 ( RC_UP, MCW_RC );

  00016	68 00 03 00 00	 push	 768			; 00000300H
  0001b	68 00 02 00 00	 push	 512			; 00000200H
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00026	83 c4 08	 add	 esp, 8

; 299  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?set_fpu_rounding_mode_up@@YGXXZ ENDP			; set_fpu_rounding_mode_up
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_rounding_mode_nearest@@YGXXZ
_TEXT	SEGMENT
?set_fpu_rounding_mode_nearest@@YGXXZ PROC		; set_fpu_rounding_mode_nearest, COMDAT

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 283  : 
; 284  : 	debug_log ( "FPU: nearest" );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GIBIJPGC@FPU?3?5nearest@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 285  : 
; 286  : 	_control87 ( RC_NEAR, MCW_RC );

  00016	68 00 03 00 00	 push	 768			; 00000300H
  0001b	6a 00		 push	 0
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00023	83 c4 08	 add	 esp, 8

; 287  : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?set_fpu_rounding_mode_nearest@@YGXXZ ENDP		; set_fpu_rounding_mode_nearest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_exceptions@@YGXXZ
_TEXT	SEGMENT
?set_fpu_exceptions@@YGXXZ PROC				; set_fpu_exceptions, COMDAT

; 272  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 273  : 
; 274  : //	_control87 ( ~_EM_ZERODIVIDE, MCW_EM );
; 275  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?set_fpu_exceptions@@YGXXZ ENDP				; set_fpu_exceptions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?set_fpu_mode_default@@YGXXZ
_TEXT	SEGMENT
?set_fpu_mode_default@@YGXXZ PROC			; set_fpu_mode_default, COMDAT

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 215  : 
; 216  : //	initialise_fpu ();
; 217  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?set_fpu_mode_default@@YGXXZ ENDP			; set_fpu_mode_default
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?get_fpu_control_word_value@@YGGXZ
_TEXT	SEGMENT
_value$ = -4						; size = 4
?get_fpu_control_word_value@@YGGXZ PROC			; get_fpu_control_word_value, COMDAT

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 190  : 
; 191  : 	unsigned int
; 192  : 		value;
; 193  : 
; 194  : 	value = _control87 ( 0, 0 );

  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  00013	83 c4 08	 add	 esp, 8
  00016	89 45 fc	 mov	 DWORD PTR _value$[ebp], eax

; 195  : 
; 196  : 	return ( value );

  00019	66 8b 45 fc	 mov	 ax, WORD PTR _value$[ebp]

; 197  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?get_fpu_control_word_value@@YGGXZ ENDP			; get_fpu_control_word_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?report_fpu_exceptions@@YGXXZ
_TEXT	SEGMENT
tv139 = -76						; size = 4
tv132 = -76						; size = 4
tv93 = -76						; size = 4
tv86 = -76						; size = 4
tv79 = -76						; size = 4
tv72 = -76						; size = 4
_bits$ = -8						; size = 4
_fp_cw$ = -4						; size = 4
?report_fpu_exceptions@@YGXXZ PROC			; report_fpu_exceptions, COMDAT

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  : 
; 232  : 	unsigned int
; 233  : 		fp_cw = 0,

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _fp_cw$[ebp], 0

; 234  : 		bits;
; 235  : 	
; 236  : 	fp_cw = _control87 ( 0, 0 );

  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___control87
  0001a	83 c4 08	 add	 esp, 8
  0001d	89 45 fc	 mov	 DWORD PTR _fp_cw$[ebp], eax

; 237  : 	
; 238  : 	debug_log ( "Interrupt Exception Masks ( %08x )", fp_cw );

  00020	8b 45 fc	 mov	 eax, DWORD PTR _fp_cw$[ebp]
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OHFCMPIB@Interrupt?5Exception?5Masks?5?$CI?5?$CF08@
  00029	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0002e	83 c4 08	 add	 esp, 8

; 239  : 	bits = fp_cw & MCW_EM;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _fp_cw$[ebp]
  00034	25 1f 00 08 00	 and	 eax, 524319		; 0008001fH
  00039	89 45 f8	 mov	 DWORD PTR _bits$[ebp], eax

; 240  : 
; 241  : 	debug_log ( "Invalid Operation exception %s", status[ (bits & EM_INVALID) == 0 ] );

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _bits$[ebp]
  0003f	83 e0 10	 and	 eax, 16			; 00000010H
  00042	75 09		 jne	 SHORT $LN12@report_fpu
  00044	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  0004b	eb 07		 jmp	 SHORT $LN13@report_fpu
$LN12@report_fpu:
  0004d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN13@report_fpu:
  00054	8b 4d b4	 mov	 ecx, DWORD PTR tv72[ebp]
  00057	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?status@@3QBQBDB[ecx*4]
  0005e	52		 push	 edx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IJCKDLBH@Invalid?5Operation?5exception?5?$CFs@
  00064	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00069	83 c4 08	 add	 esp, 8

; 242  : 	debug_log ( "Denormalized exception %s", status[ (bits & EM_DENORMAL) == 0 ] );

  0006c	8b 45 f8	 mov	 eax, DWORD PTR _bits$[ebp]
  0006f	25 00 00 08 00	 and	 eax, 524288		; 00080000H
  00074	75 09		 jne	 SHORT $LN14@report_fpu
  00076	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
  0007d	eb 07		 jmp	 SHORT $LN15@report_fpu
$LN14@report_fpu:
  0007f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN15@report_fpu:
  00086	8b 4d b4	 mov	 ecx, DWORD PTR tv79[ebp]
  00089	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?status@@3QBQBDB[ecx*4]
  00090	52		 push	 edx
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KMEIMGGA@Denormalized?5exception?5?$CFs@
  00096	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0009b	83 c4 08	 add	 esp, 8

; 243  : 	debug_log ( "Divide-By-Zero exception %s", status[ (bits & EM_ZERODIVIDE) == 0 ] );

  0009e	8b 45 f8	 mov	 eax, DWORD PTR _bits$[ebp]
  000a1	83 e0 08	 and	 eax, 8
  000a4	75 09		 jne	 SHORT $LN16@report_fpu
  000a6	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv86[ebp], 1
  000ad	eb 07		 jmp	 SHORT $LN17@report_fpu
$LN16@report_fpu:
  000af	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN17@report_fpu:
  000b6	8b 4d b4	 mov	 ecx, DWORD PTR tv86[ebp]
  000b9	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?status@@3QBQBDB[ecx*4]
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@FFMJKMEP@Divide?9By?9Zero?5exception?5?$CFs@
  000c6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000cb	83 c4 08	 add	 esp, 8

; 244  : 	debug_log ( "Overflow exception %s", status[ (bits & EM_OVERFLOW) == 0 ] );

  000ce	8b 45 f8	 mov	 eax, DWORD PTR _bits$[ebp]
  000d1	83 e0 04	 and	 eax, 4
  000d4	75 09		 jne	 SHORT $LN18@report_fpu
  000d6	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv93[ebp], 1
  000dd	eb 07		 jmp	 SHORT $LN19@report_fpu
$LN18@report_fpu:
  000df	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN19@report_fpu:
  000e6	8b 4d b4	 mov	 ecx, DWORD PTR tv93[ebp]
  000e9	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?status@@3QBQBDB[ecx*4]
  000f0	52		 push	 edx
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DDCNAAGH@Overflow?5exception?5?$CFs@
  000f6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000fb	83 c4 08	 add	 esp, 8

; 245  : 	debug_log ( "Underflow exception %s", status[ (bits & EM_UNDERFLOW) == 0 ] );

  000fe	8b 45 f8	 mov	 eax, DWORD PTR _bits$[ebp]
  00101	83 e0 02	 and	 eax, 2
  00104	75 09		 jne	 SHORT $LN20@report_fpu
  00106	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv132[ebp], 1
  0010d	eb 07		 jmp	 SHORT $LN21@report_fpu
$LN20@report_fpu:
  0010f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN21@report_fpu:
  00116	8b 4d b4	 mov	 ecx, DWORD PTR tv132[ebp]
  00119	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?status@@3QBQBDB[ecx*4]
  00120	52		 push	 edx
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EGKEKEGK@Underflow?5exception?5?$CFs@
  00126	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0012b	83 c4 08	 add	 esp, 8

; 246  : 	debug_log ( "Precision exception %s", status[ (bits & EM_INEXACT) == 0 ] );

  0012e	8b 45 f8	 mov	 eax, DWORD PTR _bits$[ebp]
  00131	83 e0 01	 and	 eax, 1
  00134	75 09		 jne	 SHORT $LN22@report_fpu
  00136	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  0013d	eb 07		 jmp	 SHORT $LN23@report_fpu
$LN22@report_fpu:
  0013f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN23@report_fpu:
  00146	8b 4d b4	 mov	 ecx, DWORD PTR tv139[ebp]
  00149	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?status@@3QBQBDB[ecx*4]
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DPDFPHFC@Precision?5exception?5?$CFs@
  00156	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0015b	83 c4 08	 add	 esp, 8

; 247  : 	
; 248  : 	debug_log ( "Infinity Control = " );

  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NGAIEEIH@Infinity?5Control?5?$DN?5@
  00163	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00168	83 c4 04	 add	 esp, 4

; 249  : 	bits = fp_cw & MCW_IC;

  0016b	8b 45 fc	 mov	 eax, DWORD PTR _fp_cw$[ebp]
  0016e	25 00 00 04 00	 and	 eax, 262144		; 00040000H
  00173	89 45 f8	 mov	 DWORD PTR _bits$[ebp], eax

; 250  : 	if ( bits == IC_AFFINE )		{ debug_log ( "affine" );		}

  00176	74 0d		 je	 SHORT $LN2@report_fpu
  00178	68 00 00 00 00	 push	 OFFSET ??_C@_06JLGAMIDL@affine@
  0017d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00182	83 c4 04	 add	 esp, 4
$LN2@report_fpu:

; 251  : 	if ( bits == IC_PROJECTIVE )	{ debug_log ( "projective" ); }

  00185	83 7d f8 00	 cmp	 DWORD PTR _bits$[ebp], 0
  00189	75 0d		 jne	 SHORT $LN3@report_fpu
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PHDNAHD@projective@
  00190	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00195	83 c4 04	 add	 esp, 4
$LN3@report_fpu:

; 252  : 	
; 253  : 	debug_log ( "Rounding Control = " );

  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DJDOPPAC@Rounding?5Control?5?$DN?5@
  0019d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001a2	83 c4 04	 add	 esp, 4

; 254  : 	bits = fp_cw & MCW_RC;

  001a5	8b 45 fc	 mov	 eax, DWORD PTR _fp_cw$[ebp]
  001a8	25 00 03 00 00	 and	 eax, 768		; 00000300H
  001ad	89 45 f8	 mov	 DWORD PTR _bits$[ebp], eax

; 255  : 	if( bits == RC_NEAR )			{ debug_log ( "near" );	}

  001b0	75 0d		 jne	 SHORT $LN4@report_fpu
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_04EHDLHMJM@near@
  001b7	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001bc	83 c4 04	 add	 esp, 4
$LN4@report_fpu:

; 256  : 	if( bits == RC_DOWN )			{ debug_log ( "down" );	}

  001bf	81 7d f8 00 01
	00 00		 cmp	 DWORD PTR _bits$[ebp], 256 ; 00000100H
  001c6	75 0d		 jne	 SHORT $LN5@report_fpu
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_04JMOKAGMG@down@
  001cd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001d2	83 c4 04	 add	 esp, 4
$LN5@report_fpu:

; 257  : 	if( bits == RC_UP )				{ debug_log ( "up" );	}

  001d5	81 7d f8 00 02
	00 00		 cmp	 DWORD PTR _bits$[ebp], 512 ; 00000200H
  001dc	75 0d		 jne	 SHORT $LN6@report_fpu
  001de	68 00 00 00 00	 push	 OFFSET ??_C@_02HNLLPFKA@up@
  001e3	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001e8	83 c4 04	 add	 esp, 4
$LN6@report_fpu:

; 258  : 	if( bits == RC_CHOP )			{ debug_log ( "chop" );	}

  001eb	81 7d f8 00 03
	00 00		 cmp	 DWORD PTR _bits$[ebp], 768 ; 00000300H
  001f2	75 0d		 jne	 SHORT $LN7@report_fpu
  001f4	68 00 00 00 00	 push	 OFFSET ??_C@_04HFGJCPHI@chop@
  001f9	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001fe	83 c4 04	 add	 esp, 4
$LN7@report_fpu:

; 259  : 	
; 260  : 	debug_log ( "Precision Control = " );

  00201	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KOAKAEMF@Precision?5Control?5?$DN?5@
  00206	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0020b	83 c4 04	 add	 esp, 4

; 261  : 	bits = fp_cw & MCW_PC;

  0020e	8b 45 fc	 mov	 eax, DWORD PTR _fp_cw$[ebp]
  00211	25 00 00 03 00	 and	 eax, 196608		; 00030000H
  00216	89 45 f8	 mov	 DWORD PTR _bits$[ebp], eax

; 262  : 	if( bits == PC_24 )				{ debug_log ( "24 bits" );	}

  00219	81 7d f8 00 00
	02 00		 cmp	 DWORD PTR _bits$[ebp], 131072 ; 00020000H
  00220	75 0d		 jne	 SHORT $LN8@report_fpu
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_07PEIDIGPM@24?5bits@
  00227	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0022c	83 c4 04	 add	 esp, 4
$LN8@report_fpu:

; 263  : 	if( bits == PC_53 )				{ debug_log ( "53 bits" );	}

  0022f	81 7d f8 00 00
	01 00		 cmp	 DWORD PTR _bits$[ebp], 65536 ; 00010000H
  00236	75 0d		 jne	 SHORT $LN9@report_fpu
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_07DLOBLBGL@53?5bits@
  0023d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00242	83 c4 04	 add	 esp, 4
$LN9@report_fpu:

; 264  : 	if( bits == PC_64 )				{ debug_log ( "64 bits" );	}

  00245	83 7d f8 00	 cmp	 DWORD PTR _bits$[ebp], 0
  00249	75 0d		 jne	 SHORT $LN1@report_fpu
  0024b	68 00 00 00 00	 push	 OFFSET ??_C@_07HAMJIIAG@64?5bits@
  00250	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00255	83 c4 04	 add	 esp, 4
$LN1@report_fpu:

; 265  : }

  00258	5f		 pop	 edi
  00259	5e		 pop	 esi
  0025a	5b		 pop	 ebx
  0025b	8b e5		 mov	 esp, ebp
  0025d	5d		 pop	 ebp
  0025e	c3		 ret	 0
?report_fpu_exceptions@@YGXXZ ENDP			; report_fpu_exceptions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?convert_double_to_int@@YGXNPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 8
_integer$ = 16						; size = 4
?convert_double_to_int@@YGXNPAH@Z PROC			; convert_double_to_int, COMDAT

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 178  : 
; 179  : //	set_fpu_rounding_mode_zero ();
; 180  : 
; 181  : 	asm_convert_double_to_int ( value, integer );

  00009	8b 45 10	 mov	 eax, DWORD PTR _integer$[ebp]
  0000c	50		 push	 eax
  0000d	83 ec 08	 sub	 esp, 8
  00010	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _value$[ebp]
  00015	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001a	e8 00 00 00 00	 call	 ?asm_convert_double_to_int@@YGXNPAH@Z ; asm_convert_double_to_int

; 182  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 0c 00	 ret	 12			; 0000000cH
?convert_double_to_int@@YGXNPAH@Z ENDP			; convert_double_to_int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.c
;	COMDAT ?convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?convert_float_to_int@@YGXMPAH@Z PROC			; convert_float_to_int, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 166  : 
; 167  : //	set_fpu_rounding_mode_zero ();
; 168  : 
; 169  : 	asm_convert_float_to_int ( value, integer );

  00009	8b 45 0c	 mov	 eax, DWORD PTR _integer$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _value$[ebp]
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 170  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?convert_float_to_int@@YGXMPAH@Z ENDP			; convert_float_to_int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_double_to_int@@YGXNPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 8
_integer$ = 16						; size = 4
?asm_convert_double_to_int@@YGXNPAH@Z PROC		; asm_convert_double_to_int, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 
; 144  : 	__asm
; 145  : 	{
; 146  : 
; 147  : 		fld value

  00009	dd 45 08	 fld	 QWORD PTR _value$[ebp]

; 148  : 		mov edx, integer

  0000c	8b 55 10	 mov	 edx, DWORD PTR _integer$[ebp]

; 149  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 150  : 	}
; 151  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 0c 00	 ret	 12			; 0000000cH
?asm_convert_double_to_int@@YGXNPAH@Z ENDP		; asm_convert_double_to_int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
