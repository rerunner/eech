; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\zbuffer.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A	; zbuffer_default_comparison
PUBLIC	?zbuffer_shadow_comparison@@3W4_D3DCMPFUNC@@A	; zbuffer_shadow_comparison
PUBLIC	?zbuffer_factor@@3NA				; zbuffer_factor
PUBLIC	?zbuffer_constant@@3NA				; zbuffer_constant
PUBLIC	?zbuffer_constant_elevated_bias@@3NA		; zbuffer_constant_elevated_bias
PUBLIC	?zbuffer_constant_normal_bias@@3NA		; zbuffer_constant_normal_bias
PUBLIC	?zbuffer_constant_lowered_bias@@3NA		; zbuffer_constant_lowered_bias
PUBLIC	?zbuffer_constant_lowered_bias2@@3NA		; zbuffer_constant_lowered_bias2
PUBLIC	?zbuffer_constant_shadow_bias@@3NA		; zbuffer_constant_shadow_bias
PUBLIC	?zbuffer_constant_shadow_bias_decrement@@3NA	; zbuffer_constant_shadow_bias_decrement
_BSS	SEGMENT
?zbuffer_factor@@3NA DQ 01H DUP (?)			; zbuffer_factor
?zbuffer_constant@@3NA DQ 01H DUP (?)			; zbuffer_constant
?zbuffer_constant_elevated_bias@@3NA DQ 01H DUP (?)	; zbuffer_constant_elevated_bias
?zbuffer_constant_normal_bias@@3NA DQ 01H DUP (?)	; zbuffer_constant_normal_bias
?zbuffer_constant_lowered_bias@@3NA DQ 01H DUP (?)	; zbuffer_constant_lowered_bias
?zbuffer_constant_lowered_bias2@@3NA DQ 01H DUP (?)	; zbuffer_constant_lowered_bias2
?zbuffer_constant_shadow_bias@@3NA DQ 01H DUP (?)	; zbuffer_constant_shadow_bias
?zbuffer_constant_shadow_bias_decrement@@3NA DQ 01H DUP (?) ; zbuffer_constant_shadow_bias_decrement
_BSS	ENDS
_DATA	SEGMENT
?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A DD 04H	; zbuffer_default_comparison
?zbuffer_shadow_comparison@@3W4_D3DCMPFUNC@@A DD 02H	; zbuffer_shadow_comparison
_DATA	ENDS
PUBLIC	?set_zbuffer_parameters@@YGXMMMM@Z		; set_zbuffer_parameters
PUBLIC	?clear_zbuffer_screen@@YGXXZ			; clear_zbuffer_screen
PUBLIC	?clear_zbuffer_screen_using_viewport@@YGXXZ	; clear_zbuffer_screen_using_viewport
PUBLIC	__real@00000000
PUBLIC	__real@3f7ff972
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40800000
PUBLIC	__real@40efffe000000000
PUBLIC	__real@41400000
PUBLIC	__real@41900000
EXTRN	?f3d_zbuffer_clear@@YGXM@Z:PROC			; f3d_zbuffer_clear
EXTRN	?f3d_clear_zbuffer@@YGXXZ:PROC			; f3d_clear_zbuffer
EXTRN	?d3d_initialised@@3HA:DWORD			; d3d_initialised
EXTRN	?d3d_using_hardware_tnl@@3HA:DWORD		; d3d_using_hardware_tnl
EXTRN	?command_line_no_dx9zbuffer_fix@@3HA:DWORD	; command_line_no_dx9zbuffer_fix
EXTRN	__fltused:DWORD
;	COMDAT __real@41900000
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@40efffe000000000
CONST	SEGMENT
__real@40efffe000000000 DQ 040efffe000000000r	; 65535
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7ff972
CONST	SEGMENT
__real@3f7ff972 DD 03f7ff972r			; 0.9999
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\zbuffer.c
;	COMDAT ?clear_zbuffer_screen_using_viewport@@YGXXZ
_TEXT	SEGMENT
?clear_zbuffer_screen_using_viewport@@YGXXZ PROC	; clear_zbuffer_screen_using_viewport, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 138  : 
; 139  : //	ASSERT ( !d3d_in_3d_scene );
; 140  : 
; 141  : 	if ( d3d_initialised )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_initialised@@3HA, 0 ; d3d_initialised
  00010	74 13		 je	 SHORT $LN2@clear_zbuf

; 142  : 	{
; 143  : 		f3d_zbuffer_clear(1.0);

  00012	51		 push	 ecx
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0001b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00020	e8 00 00 00 00	 call	 ?f3d_zbuffer_clear@@YGXM@Z ; f3d_zbuffer_clear
$LN2@clear_zbuf:

; 144  : 	}
; 145  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?clear_zbuffer_screen_using_viewport@@YGXXZ ENDP	; clear_zbuffer_screen_using_viewport
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\zbuffer.c
;	COMDAT ?clear_zbuffer_screen@@YGXXZ
_TEXT	SEGMENT
?clear_zbuffer_screen@@YGXXZ PROC			; clear_zbuffer_screen, COMDAT

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 153  : 	// DirectDraw calls are emulated in DX9, since it's not supported any more.  But modern
; 154  : 	// graphics drivers have buggy support for it.  So rather use clear_zbuffer_screen_using_viewport
; 155  : 	// for clearing zbuffer.  Fix by Bodhammer.
; 156  : 	if (!command_line_no_dx9zbuffer_fix)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_no_dx9zbuffer_fix@@3HA, 0 ; command_line_no_dx9zbuffer_fix
  00010	75 07		 jne	 SHORT $LN2@clear_zbuf

; 157  : 	{
; 158  : 		clear_zbuffer_screen_using_viewport();

  00012	e8 00 00 00 00	 call	 ?clear_zbuffer_screen_using_viewport@@YGXXZ ; clear_zbuffer_screen_using_viewport

; 159  : 		return;

  00017	eb 05		 jmp	 SHORT $LN1@clear_zbuf
$LN2@clear_zbuf:

; 160  : 	}
; 161  : 
; 162  : 	f3d_clear_zbuffer ();

  00019	e8 00 00 00 00	 call	 ?f3d_clear_zbuffer@@YGXXZ ; f3d_clear_zbuffer
$LN1@clear_zbuf:

; 163  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?clear_zbuffer_screen@@YGXXZ ENDP			; clear_zbuffer_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\zbuffer.c
;	COMDAT ?set_zbuffer_parameters@@YGXMMMM@Z
_TEXT	SEGMENT
_zmin$ = 8						; size = 4
_zmax$ = 12						; size = 4
_scaled_zmin$ = 16					; size = 4
_scaled_zmax$ = 20					; size = 4
?set_zbuffer_parameters@@YGXMMMM@Z PROC			; set_zbuffer_parameters, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 96   : 
; 97   : 	//
; 98   : 	// The Z buffer is based on 1/Z
; 99   : 	//
; 100  : 
; 101  : 	if ( !d3d_using_hardware_tnl )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_using_hardware_tnl@@3HA, 0 ; d3d_using_hardware_tnl
  00010	75 40		 jne	 SHORT $LN4@set_zbuffe

; 102  : 	{
; 103  : 
; 104  : 		if ( scaled_zmin == 1.0 )

  00012	f3 0f 5a 45 10	 cvtss2sd xmm0, DWORD PTR _scaled_zmin$[ebp]
  00017	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  0001f	9f		 lahf
  00020	f6 c4 44	 test	 ah, 68			; 00000044H
  00023	7a 0d		 jp	 SHORT $LN3@set_zbuffe

; 105  : 		{
; 106  : 
; 107  : 			scaled_zmin = 0.9999;

  00025	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ff972
  0002d	f3 0f 11 45 10	 movss	 DWORD PTR _scaled_zmin$[ebp], xmm0
$LN3@set_zbuffe:

; 108  : 		}
; 109  : 
; 110  : 		if ( scaled_zmax == 1.0 )

  00032	f3 0f 5a 45 14	 cvtss2sd xmm0, DWORD PTR _scaled_zmax$[ebp]
  00037	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  0003f	9f		 lahf
  00040	f6 c4 44	 test	 ah, 68			; 00000044H
  00043	7a 0d		 jp	 SHORT $LN4@set_zbuffe

; 111  : 		{
; 112  : 
; 113  : 			scaled_zmax = 0.9999;

  00045	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ff972
  0004d	f3 0f 11 45 14	 movss	 DWORD PTR _scaled_zmax$[ebp], xmm0
$LN4@set_zbuffe:

; 114  : 		}
; 115  : 	}
; 116  : 
; 117  : 	zbuffer_factor = ( zmax * zmin * ( scaled_zmax - scaled_zmin ) ) / ( zmax - zmin );

  00052	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _zmax$[ebp]
  00057	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _zmin$[ebp]
  0005c	f3 0f 10 4d 14	 movss	 xmm1, DWORD PTR _scaled_zmax$[ebp]
  00061	f3 0f 5c 4d 10	 subss	 xmm1, DWORD PTR _scaled_zmin$[ebp]
  00066	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0006a	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _zmax$[ebp]
  0006f	f3 0f 5c 4d 08	 subss	 xmm1, DWORD PTR _zmin$[ebp]
  00074	f3 0f 5e c1	 divss	 xmm0, xmm1
  00078	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0007c	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_factor@@3NA, xmm0

; 118  : 	zbuffer_constant = scaled_zmax + ( zmax * ( scaled_zmin - scaled_zmax ) ) / ( zmax - zmin );

  00084	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _scaled_zmin$[ebp]
  00089	f3 0f 5c 45 14	 subss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  0008e	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _zmax$[ebp]
  00093	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _zmax$[ebp]
  00098	f3 0f 5c 4d 08	 subss	 xmm1, DWORD PTR _zmin$[ebp]
  0009d	f3 0f 5e c1	 divss	 xmm0, xmm1
  000a1	f3 0f 58 45 14	 addss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  000a6	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000aa	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 119  : 
; 120  : //VJ 051003 based on a tip by Tamlin: trying to solve flickering of shadow and runway.
; 121  : // used in terrgeom.c line 4420
; 122  : 	zbuffer_constant_elevated_bias = zbuffer_constant + ( ( ( scaled_zmax - scaled_zmin ) * 4 ) / 65535.0 );

  000b2	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  000b7	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _scaled_zmin$[ebp]
  000bc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  000c4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000c8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40efffe000000000
  000d0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  000d8	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant_elevated_bias@@3NA, xmm0

; 123  : 	zbuffer_constant_normal_bias = zbuffer_constant + ( ( ( scaled_zmax - scaled_zmin ) * 0 ) / 65535.0 );

  000e0	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  000e5	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _scaled_zmin$[ebp]
  000ea	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@00000000
  000f2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000f6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40efffe000000000
  000fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00106	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant_normal_bias@@3NA, xmm0

; 124  : 	zbuffer_constant_lowered_bias = zbuffer_constant - ( ( ( scaled_zmax - scaled_zmin ) * 4 ) / 65535.0 );

  0010e	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  00113	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _scaled_zmin$[ebp]
  00118	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  00120	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00124	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40efffe000000000
  0012c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR ?zbuffer_constant@@3NA
  00134	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00138	f2 0f 11 0d 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant_lowered_bias@@3NA, xmm1

; 125  : 	zbuffer_constant_lowered_bias2 = zbuffer_constant - ( ( ( scaled_zmax - scaled_zmin ) * 18 ) / 65535.0 );

  00140	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  00145	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _scaled_zmin$[ebp]
  0014a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41900000
  00152	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00156	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40efffe000000000
  0015e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR ?zbuffer_constant@@3NA
  00166	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0016a	f2 0f 11 0d 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant_lowered_bias2@@3NA, xmm1

; 126  : 	zbuffer_constant_shadow_bias = zbuffer_constant + ( ( ( scaled_zmax - scaled_zmin ) * 12 /*6*/ ) / 65535.0 );

  00172	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _scaled_zmax$[ebp]
  00177	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _scaled_zmin$[ebp]
  0017c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41400000
  00184	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00188	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40efffe000000000
  00190	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00198	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant_shadow_bias@@3NA, xmm0

; 127  : 
; 128  : 	//example values:zbuf:1.000125 -1.000125 0.000000 1.000000 1.000064 1.000125 1.000186 1.000308 1.000033
; 129  : 
; 130  : }

  001a0	5f		 pop	 edi
  001a1	5e		 pop	 esi
  001a2	5b		 pop	 ebx
  001a3	8b e5		 mov	 esp, ebp
  001a5	5d		 pop	 ebp
  001a6	c2 10 00	 ret	 16			; 00000010H
?set_zbuffer_parameters@@YGXMMMM@Z ENDP			; set_zbuffer_parameters
_TEXT	ENDS
END
