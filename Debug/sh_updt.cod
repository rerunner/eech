; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_ship_vehicle_update_functions@@YGXXZ	; overload_ship_vehicle_update_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_systems
EXTRN	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_system_weapon_and_target_vectors
EXTRN	?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z:PROC ; suppress_ineffective_ship_weapons
EXTRN	?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_loading_doors
EXTRN	?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_system_ready
EXTRN	?update_vehicle_radar@@YGXPAUENTITY@@@Z:PROC	; update_vehicle_radar
EXTRN	?update_vehicle_target_scan@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_target_scan
EXTRN	?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_fire
EXTRN	?ship_vehicle_movement@@YGXPAUENTITY@@@Z:PROC	; ship_vehicle_movement
EXTRN	?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z:PROC ; ship_vehicle_death_movement
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z:PROC ; write_tacview_unit_update
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?tacview_log_file@@3PAU_iobuf@@A:DWORD		; tacview_log_file
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 157  : 	ship_vehicle
; 158  : 		*raw;
; 159  : 
; 160  : 	int
; 161  : 		loop;
; 162  : 
; 163  : 	raw = (ship_vehicle *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 164  : 
; 165  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 166  : 
; 167  : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 168  : 
; 169  : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 170  : 
; 171  : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	74 7c		 je	 SHORT $LN8@update_cli

; 172  : 	{
; 173  : 
; 174  : 		////////////////////////////////////////
; 175  : 
; 176  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00071	eb 09		 jmp	 SHORT $LN4@update_cli
$LN2@update_cli:
  00073	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00076	83 c0 01	 add	 eax, 1
  00079	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_cli:
  0007c	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00080	7d 0b		 jge	 SHORT $LN3@update_cli

; 177  : 		{
; 178  : 
; 179  : 			ship_vehicle_movement (en);

  00082	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?ship_vehicle_movement@@YGXPAUENTITY@@@Z ; ship_vehicle_movement

; 180  : 		}

  0008b	eb e6		 jmp	 SHORT $LN2@update_cli
$LN3@update_cli:

; 181  : 
; 182  : 		////////////////////////////////////////
; 183  : 
; 184  : 		update_vehicle_loading_doors (en);

  0008d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z ; update_vehicle_loading_doors

; 185  : 
; 186  : 		update_vehicle_radar (en);

  00096	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?update_vehicle_radar@@YGXPAUENTITY@@@Z ; update_vehicle_radar

; 187  : 
; 188  : 		////////////////////////////////////////
; 189  : 		//
; 190  : 		// ORDER IS CRITICAL
; 191  : 		//
; 192  : 
; 193  : 		update_vehicle_weapon_system_ready (en);

  0009f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 194  : 
; 195  : 		suppress_ineffective_ship_weapons (en);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z ; suppress_ineffective_ship_weapons

; 196  : 
; 197  : 		update_entity_weapon_systems (en);

  000b1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 198  : 
; 199  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  000ba	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 200  : 
; 201  : 		//
; 202  : 		////////////////////////////////////////
; 203  : 		
; 204  : 		if (tacview_is_logging() && command_line_tacview_logging < 3)

  000c3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000ca	74 18		 je	 SHORT $LN10@update_cli
  000cc	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  000d3	7d 0f		 jge	 SHORT $LN10@update_cli

; 205  : 		{
; 206  : 			// for modes < 3 we have to check if it's visible now and add or remove it accordingly
; 207  : 			// ships never move, so no need to update for that
; 208  : 			write_tacview_unit_update(en, FALSE, FALSE, FALSE);

  000d5	6a 00		 push	 0
  000d7	6a 00		 push	 0
  000d9	6a 00		 push	 0
  000db	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN10@update_cli:

; 209  : 		}
; 210  : 	}
; 211  : 	else

  000e4	eb 23		 jmp	 SHORT $LN6@update_cli
$LN8@update_cli:

; 212  : 	{
; 213  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  000e6	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000ed	eb 09		 jmp	 SHORT $LN7@update_cli
$LN5@update_cli:
  000ef	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  000f2	83 c0 01	 add	 eax, 1
  000f5	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_cli:
  000f8	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  000fc	7d 0b		 jge	 SHORT $LN6@update_cli

; 214  : 		{
; 215  : 
; 216  : 			ship_vehicle_death_movement (en);

  000fe	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z ; ship_vehicle_death_movement

; 217  : 		}

  00107	eb e6		 jmp	 SHORT $LN5@update_cli
$LN6@update_cli:

; 218  : 	}
; 219  : }

  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 83   : 	ship_vehicle
; 84   : 		*raw;
; 85   : 
; 86   : 	int
; 87   : 		loop;
; 88   : 
; 89   : 	raw = (ship_vehicle *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 90   : 
; 91   : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 92   : 
; 93   : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 94   : 
; 95   : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 96   : 
; 97   : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	0f 84 8e 00 00
	00		 je	 $LN8@update_ser

; 98   : 	{
; 99   : 
; 100  : 		////////////////////////////////////////
; 101  : 
; 102  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00075	eb 09		 jmp	 SHORT $LN4@update_ser
$LN2@update_ser:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0007a	83 c0 01	 add	 eax, 1
  0007d	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_ser:
  00080	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00084	7d 0b		 jge	 SHORT $LN3@update_ser

; 103  : 		{
; 104  : 
; 105  : 			ship_vehicle_movement (en);

  00086	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?ship_vehicle_movement@@YGXPAUENTITY@@@Z ; ship_vehicle_movement

; 106  : 		}

  0008f	eb e6		 jmp	 SHORT $LN2@update_ser
$LN3@update_ser:

; 107  : 
; 108  : 		////////////////////////////////////////
; 109  : 
; 110  : 		update_vehicle_loading_doors (en);

  00091	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z ; update_vehicle_loading_doors

; 111  : 
; 112  : 		update_vehicle_radar (en);

  0009a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?update_vehicle_radar@@YGXPAUENTITY@@@Z ; update_vehicle_radar

; 113  : 
; 114  : 		////////////////////////////////////////
; 115  : 		//
; 116  : 		// ORDER IS CRITICAL
; 117  : 		//
; 118  : 
; 119  : 		update_vehicle_target_scan (en);

  000a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?update_vehicle_target_scan@@YGXPAUENTITY@@@Z ; update_vehicle_target_scan

; 120  : 
; 121  : 		update_vehicle_weapon_system_ready (en);

  000ac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 122  : 
; 123  : 		suppress_ineffective_ship_weapons (en);

  000b5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z ; suppress_ineffective_ship_weapons

; 124  : 
; 125  : 		update_entity_weapon_systems (en);

  000be	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 126  : 
; 127  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  000c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 128  : 
; 129  : 		update_vehicle_weapon_fire (en);

  000d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_fire

; 130  : 
; 131  : 		if (tacview_is_logging() && command_line_tacview_logging < 3)

  000d9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000e0	74 18		 je	 SHORT $LN10@update_ser
  000e2	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  000e9	7d 0f		 jge	 SHORT $LN10@update_ser

; 132  : 		{
; 133  : 			// for modes < 3 we have to check if it's visible now and add or remove it accordingly
; 134  : 			// ships never move, so no need to update for that
; 135  : 			write_tacview_unit_update(en, FALSE, FALSE, FALSE);

  000eb	6a 00		 push	 0
  000ed	6a 00		 push	 0
  000ef	6a 00		 push	 0
  000f1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN10@update_ser:

; 136  : 		}
; 137  : 
; 138  : 		//
; 139  : 		////////////////////////////////////////
; 140  : 	}
; 141  : 	else

  000fa	eb 23		 jmp	 SHORT $LN6@update_ser
$LN8@update_ser:

; 142  : 	{
; 143  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  000fc	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00103	eb 09		 jmp	 SHORT $LN7@update_ser
$LN5@update_ser:
  00105	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00108	83 c0 01	 add	 eax, 1
  0010b	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_ser:
  0010e	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00112	7d 0b		 jge	 SHORT $LN6@update_ser

; 144  : 		{
; 145  : 
; 146  : 			ship_vehicle_death_movement (en);

  00114	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z ; ship_vehicle_death_movement

; 147  : 		}

  0011d	eb e6		 jmp	 SHORT $LN5@update_ser
$LN6@update_ser:

; 148  : 	}
; 149  : }

  0011f	5f		 pop	 edi
  00120	5e		 pop	 esi
  00121	5b		 pop	 ebx
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_updt.c
;	COMDAT ?overload_ship_vehicle_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_ship_vehicle_update_functions@@YGXXZ PROC	; overload_ship_vehicle_update_functions, COMDAT

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 227  : 	fn_update_client_server_entity[ENTITY_TYPE_SHIP_VEHICLE][COMMS_MODEL_SERVER]	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 1c	 imul	 ecx, eax, 28
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 228  : 
; 229  : 	fn_update_client_server_entity[ENTITY_TYPE_SHIP_VEHICLE][COMMS_MODEL_CLIENT]	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 1c	 imul	 ecx, eax, 28
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 230  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_ship_vehicle_update_functions@@YGXXZ ENDP	; overload_ship_vehicle_update_functions
_TEXT	ENDS
END
