; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ai\highlevl\order.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_floorf
PUBLIC	?floor@@YGMM@Z					; floor
PUBLIC	?initialise_order_of_battle@@YGXXZ		; initialise_order_of_battle
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA ; `initialise_armoured_divisions'::`1'::__LINE__Var
PUBLIC	??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	??_C@_0BD@IJNDBEOK@division_count?5?$DO?50@	; `string'
PUBLIC	??_C@_0BB@NNDMIGHL@frontline_groups@		; `string'
PUBLIC	??_C@_0BB@JBINFODC@artillery_groups@		; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0BE@NFAJCMCB@frontline_count?5?$DO?50@	; `string'
PUBLIC	??_C@_0DC@KAINADLB@?$CBget_local_entity_parent?5?$CIen?0?5L@ ; `string'
PUBLIC	??_C@_0BE@FPMFFGCP@artillery_count?5?$DO?50@	; `string'
PUBLIC	?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA ; `initialise_airborne_divisions'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA ; `initialise_infantry_divisions'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA ; `initialise_carrier_divisions'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@ ; `string'
PUBLIC	?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA ; `assign_remaining_groups_to_divisions'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA ; `initialise_order_of_battle'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@7f7fffff
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp__floor:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z:PROC ; quicksort_entity_list
EXTRN	?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z:PROC ; create_new_division
EXTRN	?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z:PROC ; add_group_to_division
EXTRN	?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z:PROC ; get_closest_keysite
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA DD 02b1H ; `initialise_order_of_battle'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA DD 0275H ; `assign_remaining_groups_to_divisions'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@
CONST	SEGMENT
??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@ DB '!get_local'
	DB	'_entity_parent (group, LIST_TYPE_DIVISION)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA DD 023dH ; `initialise_carrier_divisions'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA DD 0219H ; `initialise_infantry_divisions'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA DD 01ddH ; `initialise_airborne_divisions'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@FPMFFGCP@artillery_count?5?$DO?50@
CONST	SEGMENT
??_C@_0BE@FPMFFGCP@artillery_count?5?$DO?50@ DB 'artillery_count > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KAINADLB@?$CBget_local_entity_parent?5?$CIen?0?5L@
CONST	SEGMENT
??_C@_0DC@KAINADLB@?$CBget_local_entity_parent?5?$CIen?0?5L@ DB '!get_loc'
	DB	'al_entity_parent (en, LIST_TYPE_DIVISION)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NFAJCMCB@frontline_count?5?$DO?50@
CONST	SEGMENT
??_C@_0BE@NFAJCMCB@frontline_count?5?$DO?50@ DB 'frontline_count > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JBINFODC@artillery_groups@
CONST	SEGMENT
??_C@_0BB@JBINFODC@artillery_groups@ DB 'artillery_groups', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NNDMIGHL@frontline_groups@
CONST	SEGMENT
??_C@_0BB@NNDMIGHL@frontline_groups@ DB 'frontline_groups', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IJNDBEOK@division_count?5?$DO?50@
CONST	SEGMENT
??_C@_0BD@IJNDBEOK@division_count?5?$DO?50@ DB 'division_count > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ai\highlevl\order.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA DD 05cH ; `initialise_armoured_divisions'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\highlevl\order.c
;	COMDAT ?assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv281 = -76						; size = 4
tv258 = -76						; size = 4
tv239 = -76						; size = 4
tv219 = -76						; size = 4
tv196 = -76						; size = 4
tv177 = -76						; size = 4
tv157 = -76						; size = 4
tv134 = -76						; size = 4
tv83 = -76						; size = 4
tv273 = -72						; size = 4
tv251 = -72						; size = 4
tv231 = -72						; size = 4
tv211 = -72						; size = 4
tv189 = -72						; size = 4
tv169 = -72						; size = 4
tv149 = -72						; size = 4
tv95 = -72						; size = 4
tv75 = -72						; size = 4
_group$ = -4						; size = 4
_force$ = 8						; size = 4
?assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z PROC ; assign_remaining_groups_to_divisions, COMDAT

; 629  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 630  : 	entity
; 631  : 		*group;
; 632  : 
; 633  : 	ASSERT (force);

  00009	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN8@assign_rem
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@assign_rem:

; 634  : 
; 635  : 	//
; 636  : 	// AIR
; 637  : 	//
; 638  : 	
; 639  : 	group = get_local_entity_first_child (force, LIST_TYPE_AIR_REGISTRY);

  00027	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN13@assign_rem
  0002d	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN14@assign_rem
$LN13@assign_rem:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN14@assign_rem:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN15@assign_rem
  00061	c7 45 b4 02 00
	00 00		 mov	 DWORD PTR tv83[ebp], 2
  00068	eb 21		 jmp	 SHORT $LN16@assign_rem
$LN15@assign_rem:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN16@assign_rem:
  0008b	6a 02		 push	 2
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00090	51		 push	 ecx
  00091	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  00098	8b 45 b4	 mov	 eax, DWORD PTR tv83[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax
$LN2@assign_rem:

; 640  : 
; 641  : 	while (group)

  000a7	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  000ab	0f 84 09 01 00
	00		 je	 $LN3@assign_rem

; 642  : 	{
; 643  : 		if (!get_local_entity_parent (group, LIST_TYPE_DIVISION))

  000b1	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  000b5	74 0a		 je	 SHORT $LN17@assign_rem
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	89 4d b8	 mov	 DWORD PTR tv95[ebp], ecx
  000bf	eb 1d		 jmp	 SHORT $LN18@assign_rem
$LN17@assign_rem:
  000c1	68 83 02 00 00	 push	 643			; 00000283H
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d1	52		 push	 edx
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN18@assign_rem:
  000de	b8 01 00 00 00	 mov	 eax, 1
  000e3	85 c0		 test	 eax, eax
  000e5	74 09		 je	 SHORT $LN19@assign_rem
  000e7	c7 45 b4 0b 00
	00 00		 mov	 DWORD PTR tv134[ebp], 11 ; 0000000bH
  000ee	eb 1d		 jmp	 SHORT $LN20@assign_rem
$LN19@assign_rem:
  000f0	68 83 02 00 00	 push	 643			; 00000283H
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00106	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN20@assign_rem:
  0010d	6a 0b		 push	 11			; 0000000bH
  0010f	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  00112	52		 push	 edx
  00113	69 45 b8 b4 00
	00 00		 imul	 eax, DWORD PTR tv95[ebp], 180
  0011a	8b 4d b4	 mov	 ecx, DWORD PTR tv134[ebp]
  0011d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00124	ff d2		 call	 edx
  00126	85 c0		 test	 eax, eax
  00128	75 0b		 jne	 SHORT $LN9@assign_rem

; 644  : 		{
; 645  : 			add_group_to_division (group, NULL);

  0012a	6a 00		 push	 0
  0012c	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ; add_group_to_division
$LN9@assign_rem:

; 646  : 		}
; 647  : 
; 648  : 		group = get_local_entity_child_succ (group, LIST_TYPE_AIR_REGISTRY);

  00135	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00139	74 0a		 je	 SHORT $LN21@assign_rem
  0013b	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  0013e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00140	89 4d b8	 mov	 DWORD PTR tv149[ebp], ecx
  00143	eb 21		 jmp	 SHORT $LN22@assign_rem
$LN21@assign_rem:
  00145	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  0014b	83 c2 13	 add	 edx, 19			; 00000013H
  0014e	52		 push	 edx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00154	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN22@assign_rem:
  00166	b9 01 00 00 00	 mov	 ecx, 1
  0016b	85 c9		 test	 ecx, ecx
  0016d	74 09		 je	 SHORT $LN23@assign_rem
  0016f	c7 45 b4 02 00
	00 00		 mov	 DWORD PTR tv157[ebp], 2
  00176	eb 21		 jmp	 SHORT $LN24@assign_rem
$LN23@assign_rem:
  00178	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  0017e	83 c2 13	 add	 edx, 19			; 00000013H
  00181	52		 push	 edx
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00192	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN24@assign_rem:
  00199	6a 02		 push	 2
  0019b	8b 4d fc	 mov	 ecx, DWORD PTR _group$[ebp]
  0019e	51		 push	 ecx
  0019f	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv149[ebp], 180
  001a6	8b 45 b4	 mov	 eax, DWORD PTR tv157[ebp]
  001a9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001b0	ff d1		 call	 ecx
  001b2	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 649  : 	}

  001b5	e9 ed fe ff ff	 jmp	 $LN2@assign_rem
$LN3@assign_rem:

; 650  : 
; 651  : 	//
; 652  : 	// GROUND 
; 653  : 	//
; 654  : 	
; 655  : 	group = get_local_entity_first_child (force, LIST_TYPE_GROUND_REGISTRY);

  001ba	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  001be	74 0a		 je	 SHORT $LN25@assign_rem
  001c0	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  001c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c5	89 4d b8	 mov	 DWORD PTR tv169[ebp], ecx
  001c8	eb 21		 jmp	 SHORT $LN26@assign_rem
$LN25@assign_rem:
  001ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  001d0	83 c2 1a	 add	 edx, 26			; 0000001aH
  001d3	52		 push	 edx
  001d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e4	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN26@assign_rem:
  001eb	b9 01 00 00 00	 mov	 ecx, 1
  001f0	85 c9		 test	 ecx, ecx
  001f2	74 09		 je	 SHORT $LN27@assign_rem
  001f4	c7 45 b4 0f 00
	00 00		 mov	 DWORD PTR tv177[ebp], 15 ; 0000000fH
  001fb	eb 21		 jmp	 SHORT $LN28@assign_rem
$LN27@assign_rem:
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00203	83 c2 1a	 add	 edx, 26			; 0000001aH
  00206	52		 push	 edx
  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00217	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN28@assign_rem:
  0021e	6a 0f		 push	 15			; 0000000fH
  00220	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00223	51		 push	 ecx
  00224	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv169[ebp], 180
  0022b	8b 45 b4	 mov	 eax, DWORD PTR tv177[ebp]
  0022e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00235	ff d1		 call	 ecx
  00237	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax
$LN4@assign_rem:

; 656  : 
; 657  : 	while (group)

  0023a	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  0023e	0f 84 09 01 00
	00		 je	 $LN5@assign_rem

; 658  : 	{
; 659  : 		if (!get_local_entity_parent (group, LIST_TYPE_DIVISION))

  00244	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00248	74 0a		 je	 SHORT $LN29@assign_rem
  0024a	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	89 4d b8	 mov	 DWORD PTR tv189[ebp], ecx
  00252	eb 1d		 jmp	 SHORT $LN30@assign_rem
$LN29@assign_rem:
  00254	68 93 02 00 00	 push	 659			; 00000293H
  00259	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00264	52		 push	 edx
  00265	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0026a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN30@assign_rem:
  00271	b8 01 00 00 00	 mov	 eax, 1
  00276	85 c0		 test	 eax, eax
  00278	74 09		 je	 SHORT $LN31@assign_rem
  0027a	c7 45 b4 0b 00
	00 00		 mov	 DWORD PTR tv196[ebp], 11 ; 0000000bH
  00281	eb 1d		 jmp	 SHORT $LN32@assign_rem
$LN31@assign_rem:
  00283	68 93 02 00 00	 push	 659			; 00000293H
  00288	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00293	51		 push	 ecx
  00294	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00299	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN32@assign_rem:
  002a0	6a 0b		 push	 11			; 0000000bH
  002a2	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  002a5	52		 push	 edx
  002a6	69 45 b8 b4 00
	00 00		 imul	 eax, DWORD PTR tv189[ebp], 180
  002ad	8b 4d b4	 mov	 ecx, DWORD PTR tv196[ebp]
  002b0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  002b7	ff d2		 call	 edx
  002b9	85 c0		 test	 eax, eax
  002bb	75 0b		 jne	 SHORT $LN10@assign_rem

; 660  : 		{
; 661  : 			add_group_to_division (group, NULL);

  002bd	6a 00		 push	 0
  002bf	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ; add_group_to_division
$LN10@assign_rem:

; 662  : 		}
; 663  : 
; 664  : 		group = get_local_entity_child_succ (group, LIST_TYPE_GROUND_REGISTRY);

  002c8	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  002cc	74 0a		 je	 SHORT $LN33@assign_rem
  002ce	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  002d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d3	89 4d b8	 mov	 DWORD PTR tv211[ebp], ecx
  002d6	eb 21		 jmp	 SHORT $LN34@assign_rem
$LN33@assign_rem:
  002d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  002de	83 c2 23	 add	 edx, 35			; 00000023H
  002e1	52		 push	 edx
  002e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ec	50		 push	 eax
  002ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv211[ebp], 0
$LN34@assign_rem:
  002f9	b9 01 00 00 00	 mov	 ecx, 1
  002fe	85 c9		 test	 ecx, ecx
  00300	74 09		 je	 SHORT $LN35@assign_rem
  00302	c7 45 b4 0f 00
	00 00		 mov	 DWORD PTR tv219[ebp], 15 ; 0000000fH
  00309	eb 21		 jmp	 SHORT $LN36@assign_rem
$LN35@assign_rem:
  0030b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00311	83 c2 23	 add	 edx, 35			; 00000023H
  00314	52		 push	 edx
  00315	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0031f	50		 push	 eax
  00320	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00325	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv219[ebp], 0
$LN36@assign_rem:
  0032c	6a 0f		 push	 15			; 0000000fH
  0032e	8b 4d fc	 mov	 ecx, DWORD PTR _group$[ebp]
  00331	51		 push	 ecx
  00332	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv211[ebp], 180
  00339	8b 45 b4	 mov	 eax, DWORD PTR tv219[ebp]
  0033c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00343	ff d1		 call	 ecx
  00345	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 665  : 	}

  00348	e9 ed fe ff ff	 jmp	 $LN4@assign_rem
$LN5@assign_rem:

; 666  : 
; 667  : 	//
; 668  : 	// SEA 
; 669  : 	//
; 670  : 	
; 671  : 	group = get_local_entity_first_child (force, LIST_TYPE_SEA_REGISTRY);

  0034d	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  00351	74 0a		 je	 SHORT $LN37@assign_rem
  00353	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00356	8b 08		 mov	 ecx, DWORD PTR [eax]
  00358	89 4d b8	 mov	 DWORD PTR tv231[ebp], ecx
  0035b	eb 21		 jmp	 SHORT $LN38@assign_rem
$LN37@assign_rem:
  0035d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00363	83 c2 2a	 add	 edx, 42			; 0000002aH
  00366	52		 push	 edx
  00367	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00371	50		 push	 eax
  00372	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00377	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv231[ebp], 0
$LN38@assign_rem:
  0037e	b9 01 00 00 00	 mov	 ecx, 1
  00383	85 c9		 test	 ecx, ecx
  00385	74 09		 je	 SHORT $LN39@assign_rem
  00387	c7 45 b4 20 00
	00 00		 mov	 DWORD PTR tv239[ebp], 32 ; 00000020H
  0038e	eb 21		 jmp	 SHORT $LN40@assign_rem
$LN39@assign_rem:
  00390	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00396	83 c2 2a	 add	 edx, 42			; 0000002aH
  00399	52		 push	 edx
  0039a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003aa	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv239[ebp], 0
$LN40@assign_rem:
  003b1	6a 20		 push	 32			; 00000020H
  003b3	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  003b6	51		 push	 ecx
  003b7	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv231[ebp], 180
  003be	8b 45 b4	 mov	 eax, DWORD PTR tv239[ebp]
  003c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003c8	ff d1		 call	 ecx
  003ca	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax
$LN6@assign_rem:

; 672  : 
; 673  : 	while (group)

  003cd	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  003d1	0f 84 09 01 00
	00		 je	 $LN1@assign_rem

; 674  : 	{
; 675  : 		if (!get_local_entity_parent (group, LIST_TYPE_DIVISION))

  003d7	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  003db	74 0a		 je	 SHORT $LN41@assign_rem
  003dd	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  003e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e2	89 4d b8	 mov	 DWORD PTR tv251[ebp], ecx
  003e5	eb 1d		 jmp	 SHORT $LN42@assign_rem
$LN41@assign_rem:
  003e7	68 a3 02 00 00	 push	 675			; 000002a3H
  003ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003f7	52		 push	 edx
  003f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003fd	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN42@assign_rem:
  00404	b8 01 00 00 00	 mov	 eax, 1
  00409	85 c0		 test	 eax, eax
  0040b	74 09		 je	 SHORT $LN43@assign_rem
  0040d	c7 45 b4 0b 00
	00 00		 mov	 DWORD PTR tv258[ebp], 11 ; 0000000bH
  00414	eb 1d		 jmp	 SHORT $LN44@assign_rem
$LN43@assign_rem:
  00416	68 a3 02 00 00	 push	 675			; 000002a3H
  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00420	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00426	51		 push	 ecx
  00427	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv258[ebp], 0
$LN44@assign_rem:
  00433	6a 0b		 push	 11			; 0000000bH
  00435	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  00438	52		 push	 edx
  00439	69 45 b8 b4 00
	00 00		 imul	 eax, DWORD PTR tv251[ebp], 180
  00440	8b 4d b4	 mov	 ecx, DWORD PTR tv258[ebp]
  00443	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0044a	ff d2		 call	 edx
  0044c	85 c0		 test	 eax, eax
  0044e	75 0b		 jne	 SHORT $LN11@assign_rem

; 676  : 		{
; 677  : 			add_group_to_division (group, NULL);

  00450	6a 00		 push	 0
  00452	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  00455	50		 push	 eax
  00456	e8 00 00 00 00	 call	 ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ; add_group_to_division
$LN11@assign_rem:

; 678  : 		}
; 679  : 
; 680  : 		group = get_local_entity_child_succ (group, LIST_TYPE_SEA_REGISTRY);

  0045b	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  0045f	74 0a		 je	 SHORT $LN45@assign_rem
  00461	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  00464	8b 08		 mov	 ecx, DWORD PTR [eax]
  00466	89 4d b8	 mov	 DWORD PTR tv273[ebp], ecx
  00469	eb 21		 jmp	 SHORT $LN46@assign_rem
$LN45@assign_rem:
  0046b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  00471	83 c2 33	 add	 edx, 51			; 00000033H
  00474	52		 push	 edx
  00475	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0047f	50		 push	 eax
  00480	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00485	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv273[ebp], 0
$LN46@assign_rem:
  0048c	b9 01 00 00 00	 mov	 ecx, 1
  00491	85 c9		 test	 ecx, ecx
  00493	74 09		 je	 SHORT $LN47@assign_rem
  00495	c7 45 b4 20 00
	00 00		 mov	 DWORD PTR tv281[ebp], 32 ; 00000020H
  0049c	eb 21		 jmp	 SHORT $LN48@assign_rem
$LN47@assign_rem:
  0049e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z@4JA
  004a4	83 c2 33	 add	 edx, 51			; 00000033H
  004a7	52		 push	 edx
  004a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004b2	50		 push	 eax
  004b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004b8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv281[ebp], 0
$LN48@assign_rem:
  004bf	6a 20		 push	 32			; 00000020H
  004c1	8b 4d fc	 mov	 ecx, DWORD PTR _group$[ebp]
  004c4	51		 push	 ecx
  004c5	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv273[ebp], 180
  004cc	8b 45 b4	 mov	 eax, DWORD PTR tv281[ebp]
  004cf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  004d6	ff d1		 call	 ecx
  004d8	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 681  : 	}

  004db	e9 ed fe ff ff	 jmp	 $LN6@assign_rem
$LN1@assign_rem:

; 682  : }

  004e0	5f		 pop	 edi
  004e1	5e		 pop	 esi
  004e2	5b		 pop	 ebx
  004e3	8b e5		 mov	 esp, ebp
  004e5	5d		 pop	 ebp
  004e6	c2 04 00	 ret	 4
?assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z ENDP ; assign_remaining_groups_to_divisions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\highlevl\order.c
;	COMDAT ?initialise_carrier_divisions@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv274 = -92						; size = 4
tv254 = -92						; size = 4
tv227 = -92						; size = 4
tv206 = -92						; size = 4
tv187 = -92						; size = 4
tv160 = -92						; size = 4
tv141 = -92						; size = 4
tv83 = -92						; size = 4
tv266 = -88						; size = 4
tv246 = -88						; size = 4
tv219 = -88						; size = 4
tv199 = -88						; size = 4
tv179 = -88						; size = 4
tv153 = -88						; size = 4
tv133 = -88						; size = 4
tv75 = -88						; size = 4
_side$ = -20						; size = 4
_division$ = -16					; size = 4
_company$ = -12						; size = 4
_group$ = -8						; size = 4
_keysite$ = -4						; size = 4
_force$ = 8						; size = 4
?initialise_carrier_divisions@@YGXPAUENTITY@@@Z PROC	; initialise_carrier_divisions, COMDAT

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 574  : 	entity
; 575  : 		*keysite,
; 576  : 		*group,
; 577  : 		*company,
; 578  : 		*division;
; 579  : 
; 580  : 	int
; 581  : 		side;
; 582  : 
; 583  : 	ASSERT (force);

  00009	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@initialise:

; 584  : 
; 585  : 	side = get_local_entity_int_value (force, INT_TYPE_SIDE);

  00027	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN11@initialise
  0002d	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN12@initialise
$LN11@initialise:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  0003d	83 c2 0c	 add	 edx, 12			; 0000000cH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN12@initialise:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN13@initialise
  00061	c7 45 a4 bb 00
	00 00		 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  00068	eb 21		 jmp	 SHORT $LN14@initialise
$LN13@initialise:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 0c	 add	 edx, 12			; 0000000cH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN14@initialise:
  0008b	68 bb 00 00 00	 push	 187			; 000000bbH
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00093	51		 push	 ecx
  00094	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 a4	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 ec	 mov	 DWORD PTR _side$[ebp], eax

; 586  : 
; 587  : 	division = create_new_division (ENTITY_SUB_TYPE_DIVISION_CARRIER_DIVISION, (entity_sides) side, force, NULL, TRUE);

  000aa	6a 01		 push	 1
  000ac	6a 00		 push	 0
  000ae	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000b1	50		 push	 eax
  000b2	8b 4d ec	 mov	 ecx, DWORD PTR _side$[ebp]
  000b5	51		 push	 ecx
  000b6	6a 04		 push	 4
  000b8	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  000bd	89 45 f0	 mov	 DWORD PTR _division$[ebp], eax

; 588  : 
; 589  : 	keysite = get_local_entity_first_child (force, LIST_TYPE_KEYSITE_FORCE);

  000c0	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  000c4	74 0a		 je	 SHORT $LN15@initialise
  000c6	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	89 4d a8	 mov	 DWORD PTR tv133[ebp], ecx
  000ce	eb 21		 jmp	 SHORT $LN16@initialise
$LN15@initialise:
  000d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  000d6	83 c2 10	 add	 edx, 16			; 00000010H
  000d9	52		 push	 edx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ea	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN16@initialise:
  000f1	b9 01 00 00 00	 mov	 ecx, 1
  000f6	85 c9		 test	 ecx, ecx
  000f8	74 09		 je	 SHORT $LN17@initialise
  000fa	c7 45 a4 15 00
	00 00		 mov	 DWORD PTR tv141[ebp], 21 ; 00000015H
  00101	eb 21		 jmp	 SHORT $LN18@initialise
$LN17@initialise:
  00103	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00109	83 c2 10	 add	 edx, 16			; 00000010H
  0010c	52		 push	 edx
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN18@initialise:
  00124	6a 15		 push	 21			; 00000015H
  00126	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00129	51		 push	 ecx
  0012a	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv133[ebp], 180
  00131	8b 45 a4	 mov	 eax, DWORD PTR tv141[ebp]
  00134	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0013b	ff d1		 call	 ecx
  0013d	89 45 fc	 mov	 DWORD PTR _keysite$[ebp], eax
$LN2@initialise:

; 590  : 
; 591  : 	while (keysite)

  00140	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00144	0f 84 51 03 00
	00		 je	 $LN1@initialise

; 592  : 	{
; 593  : 		if (get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE)

  0014a	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0014e	74 0a		 je	 SHORT $LN19@initialise
  00150	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  00153	8b 08		 mov	 ecx, DWORD PTR [eax]
  00155	89 4d a8	 mov	 DWORD PTR tv153[ebp], ecx
  00158	eb 1d		 jmp	 SHORT $LN20@initialise
$LN19@initialise:
  0015a	68 51 02 00 00	 push	 593			; 00000251H
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00164	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016a	52		 push	 edx
  0016b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00170	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN20@initialise:
  00177	b8 01 00 00 00	 mov	 eax, 1
  0017c	85 c0		 test	 eax, eax
  0017e	74 09		 je	 SHORT $LN21@initialise
  00180	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv160[ebp], 52 ; 00000034H
  00187	eb 1d		 jmp	 SHORT $LN22@initialise
$LN21@initialise:
  00189	68 51 02 00 00	 push	 593			; 00000251H
  0018e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00193	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00199	51		 push	 ecx
  0019a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN22@initialise:
  001a6	6a 34		 push	 52			; 00000034H
  001a8	8b 55 fc	 mov	 edx, DWORD PTR _keysite$[ebp]
  001ab	52		 push	 edx
  001ac	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv153[ebp], 1116
  001b3	8b 4d a4	 mov	 ecx, DWORD PTR tv160[ebp]
  001b6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001bd	ff d2		 call	 edx
  001bf	83 f8 01	 cmp	 eax, 1
  001c2	0f 85 4e 02 00
	00		 jne	 $LN7@initialise

; 594  : 		{
; 595  : 			//
; 596  : 			// Assign one company per carrier
; 597  : 			//
; 598  : 
; 599  : 			company = create_new_division (ENTITY_SUB_TYPE_DIVISION_CARRIER_COMPANY, (entity_sides) side, division, keysite, TRUE);

  001c8	6a 01		 push	 1
  001ca	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  001cd	50		 push	 eax
  001ce	8b 4d f0	 mov	 ecx, DWORD PTR _division$[ebp]
  001d1	51		 push	 ecx
  001d2	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  001d5	52		 push	 edx
  001d6	6a 0e		 push	 14			; 0000000eH
  001d8	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  001dd	89 45 f4	 mov	 DWORD PTR _company$[ebp], eax

; 600  : 
; 601  : 			//
; 602  : 			// Assign everything at that carrier to the company
; 603  : 			//
; 604  : 
; 605  : 			group = get_local_entity_first_child (keysite, LIST_TYPE_KEYSITE_GROUP);

  001e0	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  001e4	74 0a		 je	 SHORT $LN23@initialise
  001e6	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  001e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001eb	89 4d a8	 mov	 DWORD PTR tv179[ebp], ecx
  001ee	eb 21		 jmp	 SHORT $LN24@initialise
$LN23@initialise:
  001f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  001f6	83 c2 20	 add	 edx, 32			; 00000020H
  001f9	52		 push	 edx
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN24@initialise:
  00211	b9 01 00 00 00	 mov	 ecx, 1
  00216	85 c9		 test	 ecx, ecx
  00218	74 09		 je	 SHORT $LN25@initialise
  0021a	c7 45 a4 16 00
	00 00		 mov	 DWORD PTR tv187[ebp], 22 ; 00000016H
  00221	eb 21		 jmp	 SHORT $LN26@initialise
$LN25@initialise:
  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00229	83 c2 20	 add	 edx, 32			; 00000020H
  0022c	52		 push	 edx
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN26@initialise:
  00244	6a 16		 push	 22			; 00000016H
  00246	8b 4d fc	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00249	51		 push	 ecx
  0024a	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv179[ebp], 180
  00251	8b 45 a4	 mov	 eax, DWORD PTR tv187[ebp]
  00254	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0025b	ff d1		 call	 ecx
  0025d	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax
$LN4@initialise:

; 606  : 
; 607  : 			while (group)

  00260	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00264	0f 84 ac 01 00
	00		 je	 $LN7@initialise

; 608  : 			{
; 609  : 				if (get_local_entity_int_value (group, INT_TYPE_MOVEMENT_TYPE) == MOVEMENT_TYPE_SEA)

  0026a	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0026e	74 0a		 je	 SHORT $LN27@initialise
  00270	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00273	8b 08		 mov	 ecx, DWORD PTR [eax]
  00275	89 4d a8	 mov	 DWORD PTR tv199[ebp], ecx
  00278	eb 1d		 jmp	 SHORT $LN28@initialise
$LN27@initialise:
  0027a	68 61 02 00 00	 push	 609			; 00000261H
  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00284	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0028a	52		 push	 edx
  0028b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00290	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN28@initialise:
  00297	b8 01 00 00 00	 mov	 eax, 1
  0029c	85 c0		 test	 eax, eax
  0029e	74 09		 je	 SHORT $LN29@initialise
  002a0	c7 45 a4 90 00
	00 00		 mov	 DWORD PTR tv206[ebp], 144 ; 00000090H
  002a7	eb 1d		 jmp	 SHORT $LN30@initialise
$LN29@initialise:
  002a9	68 61 02 00 00	 push	 609			; 00000261H
  002ae	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002b9	51		 push	 ecx
  002ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bf	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv206[ebp], 0
$LN30@initialise:
  002c6	68 90 00 00 00	 push	 144			; 00000090H
  002cb	8b 55 f8	 mov	 edx, DWORD PTR _group$[ebp]
  002ce	52		 push	 edx
  002cf	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv199[ebp], 1116
  002d6	8b 4d a4	 mov	 ecx, DWORD PTR tv206[ebp]
  002d9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002e0	ff d2		 call	 edx
  002e2	83 f8 03	 cmp	 eax, 3
  002e5	0f 85 a6 00 00
	00		 jne	 $LN8@initialise

; 610  : 				{
; 611  : 					ASSERT (!get_local_entity_parent (group, LIST_TYPE_DIVISION));

  002eb	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  002ef	74 0a		 je	 SHORT $LN31@initialise
  002f1	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  002f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f6	89 4d a8	 mov	 DWORD PTR tv219[ebp], ecx
  002f9	eb 21		 jmp	 SHORT $LN32@initialise
$LN31@initialise:
  002fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00301	83 c2 26	 add	 edx, 38			; 00000026H
  00304	52		 push	 edx
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0030f	50		 push	 eax
  00310	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00315	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv219[ebp], 0
$LN32@initialise:
  0031c	b9 01 00 00 00	 mov	 ecx, 1
  00321	85 c9		 test	 ecx, ecx
  00323	74 09		 je	 SHORT $LN33@initialise
  00325	c7 45 a4 0b 00
	00 00		 mov	 DWORD PTR tv227[ebp], 11 ; 0000000bH
  0032c	eb 21		 jmp	 SHORT $LN34@initialise
$LN33@initialise:
  0032e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00334	83 c2 26	 add	 edx, 38			; 00000026H
  00337	52		 push	 edx
  00338	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00342	50		 push	 eax
  00343	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00348	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv227[ebp], 0
$LN34@initialise:
  0034f	6a 0b		 push	 11			; 0000000bH
  00351	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00354	51		 push	 ecx
  00355	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv219[ebp], 180
  0035c	8b 45 a4	 mov	 eax, DWORD PTR tv227[ebp]
  0035f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00366	ff d1		 call	 ecx
  00368	85 c0		 test	 eax, eax
  0036a	74 18		 je	 SHORT $LN9@initialise
  0036c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  00371	83 c0 26	 add	 eax, 38			; 00000026H
  00374	50		 push	 eax
  00375	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037a	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@
  0037f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@initialise:

; 612  : 	
; 613  : 					add_group_to_division (group, company);

  00384	8b 45 f4	 mov	 eax, DWORD PTR _company$[ebp]
  00387	50		 push	 eax
  00388	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  0038b	51		 push	 ecx
  0038c	e8 00 00 00 00	 call	 ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ; add_group_to_division
$LN8@initialise:

; 614  : 				}
; 615  : 
; 616  : 				group = get_local_entity_child_succ (group, LIST_TYPE_KEYSITE_GROUP);			

  00391	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00395	74 0a		 je	 SHORT $LN35@initialise
  00397	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0039a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039c	89 4d a8	 mov	 DWORD PTR tv246[ebp], ecx
  0039f	eb 21		 jmp	 SHORT $LN36@initialise
$LN35@initialise:
  003a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  003a7	83 c2 2b	 add	 edx, 43			; 0000002bH
  003aa	52		 push	 edx
  003ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b5	50		 push	 eax
  003b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003bb	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv246[ebp], 0
$LN36@initialise:
  003c2	b9 01 00 00 00	 mov	 ecx, 1
  003c7	85 c9		 test	 ecx, ecx
  003c9	74 09		 je	 SHORT $LN37@initialise
  003cb	c7 45 a4 16 00
	00 00		 mov	 DWORD PTR tv254[ebp], 22 ; 00000016H
  003d2	eb 21		 jmp	 SHORT $LN38@initialise
$LN37@initialise:
  003d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  003da	83 c2 2b	 add	 edx, 43			; 0000002bH
  003dd	52		 push	 edx
  003de	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003e8	50		 push	 eax
  003e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ee	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv254[ebp], 0
$LN38@initialise:
  003f5	6a 16		 push	 22			; 00000016H
  003f7	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  003fa	51		 push	 ecx
  003fb	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv246[ebp], 180
  00402	8b 45 a4	 mov	 eax, DWORD PTR tv254[ebp]
  00405	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0040c	ff d1		 call	 ecx
  0040e	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 617  : 			}

  00411	e9 4a fe ff ff	 jmp	 $LN4@initialise
$LN7@initialise:

; 618  : 		}
; 619  : 
; 620  : 		keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  00416	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0041a	74 0a		 je	 SHORT $LN39@initialise
  0041c	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  0041f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00421	89 4d a8	 mov	 DWORD PTR tv266[ebp], ecx
  00424	eb 21		 jmp	 SHORT $LN40@initialise
$LN39@initialise:
  00426	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  0042c	83 c2 2f	 add	 edx, 47			; 0000002fH
  0042f	52		 push	 edx
  00430	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00435	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0043a	50		 push	 eax
  0043b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00440	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv266[ebp], 0
$LN40@initialise:
  00447	b9 01 00 00 00	 mov	 ecx, 1
  0044c	85 c9		 test	 ecx, ecx
  0044e	74 09		 je	 SHORT $LN41@initialise
  00450	c7 45 a4 15 00
	00 00		 mov	 DWORD PTR tv274[ebp], 21 ; 00000015H
  00457	eb 21		 jmp	 SHORT $LN42@initialise
$LN41@initialise:
  00459	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_carrier_divisions@@YGXPAUENTITY@@@Z@4JA
  0045f	83 c2 2f	 add	 edx, 47			; 0000002fH
  00462	52		 push	 edx
  00463	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00468	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0046d	50		 push	 eax
  0046e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00473	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv274[ebp], 0
$LN42@initialise:
  0047a	6a 15		 push	 21			; 00000015H
  0047c	8b 4d fc	 mov	 ecx, DWORD PTR _keysite$[ebp]
  0047f	51		 push	 ecx
  00480	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv266[ebp], 180
  00487	8b 45 a4	 mov	 eax, DWORD PTR tv274[ebp]
  0048a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00491	ff d1		 call	 ecx
  00493	89 45 fc	 mov	 DWORD PTR _keysite$[ebp], eax

; 621  : 	}

  00496	e9 a5 fc ff ff	 jmp	 $LN2@initialise
$LN1@initialise:

; 622  : }

  0049b	5f		 pop	 edi
  0049c	5e		 pop	 esi
  0049d	5b		 pop	 ebx
  0049e	8b e5		 mov	 esp, ebp
  004a0	5d		 pop	 ebp
  004a1	c2 04 00	 ret	 4
?initialise_carrier_divisions@@YGXPAUENTITY@@@Z ENDP	; initialise_carrier_divisions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\highlevl\order.c
;	COMDAT ?initialise_infantry_divisions@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv186 = -84						; size = 4
tv160 = -84						; size = 4
tv141 = -84						; size = 4
tv83 = -84						; size = 4
tv178 = -80						; size = 4
tv153 = -80						; size = 4
tv133 = -80						; size = 4
tv75 = -80						; size = 4
_side$ = -12						; size = 4
_division$ = -8						; size = 4
_keysite$ = -4						; size = 4
_force$ = 8						; size = 4
?initialise_infantry_divisions@@YGXPAUENTITY@@@Z PROC	; initialise_infantry_divisions, COMDAT

; 537  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 538  : 	entity
; 539  : 		*keysite,
; 540  : 		*division;
; 541  : 
; 542  : 	int
; 543  : 		side;
; 544  : 
; 545  : 	ASSERT (force);

  00009	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@initialise:

; 546  : 
; 547  : 	side = get_local_entity_int_value (force, INT_TYPE_SIDE);

  00027	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN7@initialise
  0002d	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN8@initialise
$LN7@initialise:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@initialise:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN9@initialise
  00061	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  00068	eb 21		 jmp	 SHORT $LN10@initialise
$LN9@initialise:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN10@initialise:
  0008b	68 bb 00 00 00	 push	 187			; 000000bbH
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 f4	 mov	 DWORD PTR _side$[ebp], eax

; 548  : 
; 549  : 	division = create_new_division (ENTITY_SUB_TYPE_DIVISION_INFANTRY_DIVISION, (entity_sides) side, force, NULL, TRUE);

  000aa	6a 01		 push	 1
  000ac	6a 00		 push	 0
  000ae	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000b1	50		 push	 eax
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR _side$[ebp]
  000b5	51		 push	 ecx
  000b6	6a 05		 push	 5
  000b8	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  000bd	89 45 f8	 mov	 DWORD PTR _division$[ebp], eax

; 550  : 
; 551  : 	keysite = get_local_entity_first_child (force, LIST_TYPE_KEYSITE_FORCE);

  000c0	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  000c4	74 0a		 je	 SHORT $LN11@initialise
  000c6	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	89 4d b0	 mov	 DWORD PTR tv133[ebp], ecx
  000ce	eb 21		 jmp	 SHORT $LN12@initialise
$LN11@initialise:
  000d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  000d6	83 c2 0e	 add	 edx, 14			; 0000000eH
  000d9	52		 push	 edx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ea	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN12@initialise:
  000f1	b9 01 00 00 00	 mov	 ecx, 1
  000f6	85 c9		 test	 ecx, ecx
  000f8	74 09		 je	 SHORT $LN13@initialise
  000fa	c7 45 ac 15 00
	00 00		 mov	 DWORD PTR tv141[ebp], 21 ; 00000015H
  00101	eb 21		 jmp	 SHORT $LN14@initialise
$LN13@initialise:
  00103	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  00109	83 c2 0e	 add	 edx, 14			; 0000000eH
  0010c	52		 push	 edx
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN14@initialise:
  00124	6a 15		 push	 21			; 00000015H
  00126	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00129	51		 push	 ecx
  0012a	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv133[ebp], 180
  00131	8b 45 ac	 mov	 eax, DWORD PTR tv141[ebp]
  00134	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0013b	ff d1		 call	 ecx
  0013d	89 45 fc	 mov	 DWORD PTR _keysite$[ebp], eax
$LN2@initialise:

; 552  : 
; 553  : 	while (keysite)

  00140	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00144	0f 84 13 01 00
	00		 je	 $LN1@initialise

; 554  : 	{
; 555  : 		if (get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_KEYSITE_AIRBASE)

  0014a	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0014e	74 0a		 je	 SHORT $LN15@initialise
  00150	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  00153	8b 08		 mov	 ecx, DWORD PTR [eax]
  00155	89 4d b0	 mov	 DWORD PTR tv153[ebp], ecx
  00158	eb 1d		 jmp	 SHORT $LN16@initialise
$LN15@initialise:
  0015a	68 2b 02 00 00	 push	 555			; 0000022bH
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00164	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016a	52		 push	 edx
  0016b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00170	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN16@initialise:
  00177	b8 01 00 00 00	 mov	 eax, 1
  0017c	85 c0		 test	 eax, eax
  0017e	74 09		 je	 SHORT $LN17@initialise
  00180	c7 45 ac 34 00
	00 00		 mov	 DWORD PTR tv160[ebp], 52 ; 00000034H
  00187	eb 1d		 jmp	 SHORT $LN18@initialise
$LN17@initialise:
  00189	68 2b 02 00 00	 push	 555			; 0000022bH
  0018e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00193	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00199	51		 push	 ecx
  0019a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN18@initialise:
  001a6	6a 34		 push	 52			; 00000034H
  001a8	8b 55 fc	 mov	 edx, DWORD PTR _keysite$[ebp]
  001ab	52		 push	 edx
  001ac	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv153[ebp], 1116
  001b3	8b 4d ac	 mov	 ecx, DWORD PTR tv160[ebp]
  001b6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001bd	ff d2		 call	 edx
  001bf	85 c0		 test	 eax, eax
  001c1	75 15		 jne	 SHORT $LN5@initialise

; 556  : 		{
; 557  : 			//
; 558  : 			// Assign one company of each type per airbase
; 559  : 			//
; 560  : 
; 561  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_INFANTRY_COMPANY, (entity_sides) side, division, keysite, TRUE);

  001c3	6a 01		 push	 1
  001c5	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _division$[ebp]
  001cc	51		 push	 ecx
  001cd	8b 55 f4	 mov	 edx, DWORD PTR _side$[ebp]
  001d0	52		 push	 edx
  001d1	6a 0f		 push	 15			; 0000000fH
  001d3	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
$LN5@initialise:

; 562  : 		}
; 563  : 
; 564  : 		keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  001d8	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  001dc	74 0a		 je	 SHORT $LN19@initialise
  001de	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  001e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e3	89 4d b0	 mov	 DWORD PTR tv178[ebp], ecx
  001e6	eb 21		 jmp	 SHORT $LN20@initialise
$LN19@initialise:
  001e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  001ee	83 c2 1b	 add	 edx, 27			; 0000001bH
  001f1	52		 push	 edx
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00202	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN20@initialise:
  00209	b9 01 00 00 00	 mov	 ecx, 1
  0020e	85 c9		 test	 ecx, ecx
  00210	74 09		 je	 SHORT $LN21@initialise
  00212	c7 45 ac 15 00
	00 00		 mov	 DWORD PTR tv186[ebp], 21 ; 00000015H
  00219	eb 21		 jmp	 SHORT $LN22@initialise
$LN21@initialise:
  0021b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_infantry_divisions@@YGXPAUENTITY@@@Z@4JA
  00221	83 c2 1b	 add	 edx, 27			; 0000001bH
  00224	52		 push	 edx
  00225	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0022f	50		 push	 eax
  00230	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00235	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN22@initialise:
  0023c	6a 15		 push	 21			; 00000015H
  0023e	8b 4d fc	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00241	51		 push	 ecx
  00242	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv178[ebp], 180
  00249	8b 45 ac	 mov	 eax, DWORD PTR tv186[ebp]
  0024c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00253	ff d1		 call	 ecx
  00255	89 45 fc	 mov	 DWORD PTR _keysite$[ebp], eax

; 565  : 	}

  00258	e9 e3 fe ff ff	 jmp	 $LN2@initialise
$LN1@initialise:

; 566  : }

  0025d	5f		 pop	 edi
  0025e	5e		 pop	 esi
  0025f	5b		 pop	 ebx
  00260	8b e5		 mov	 esp, ebp
  00262	5d		 pop	 ebp
  00263	c2 04 00	 ret	 4
?initialise_infantry_divisions@@YGXPAUENTITY@@@Z ENDP	; initialise_infantry_divisions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\highlevl\order.c
;	COMDAT ?initialise_airborne_divisions@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv247 = -92						; size = 4
tv216 = -92						; size = 4
tv172 = -92						; size = 4
tv153 = -92						; size = 4
tv83 = -92						; size = 4
tv239 = -88						; size = 4
tv209 = -88						; size = 4
tv165 = -88						; size = 4
tv145 = -88						; size = 4
tv75 = -88						; size = 4
_side$ = -20						; size = 4
_transport_division$ = -16				; size = 4
_fw_division$ = -12					; size = 4
_hc_division$ = -8					; size = 4
_keysite$ = -4						; size = 4
_force$ = 8						; size = 4
?initialise_airborne_divisions@@YGXPAUENTITY@@@Z PROC	; initialise_airborne_divisions, COMDAT

; 477  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 478  : 	entity
; 479  : 		*keysite,
; 480  : 		*hc_division,
; 481  : 		*fw_division,
; 482  : 		*transport_division;
; 483  : 
; 484  : 	int
; 485  : 		side;
; 486  : 
; 487  : 	ASSERT (force);

  00009	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@initialise:

; 488  : 
; 489  : 	side = get_local_entity_int_value (force, INT_TYPE_SIDE);

  00027	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN9@initialise
  0002d	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN10@initialise
$LN9@initialise:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  0003d	83 c2 0c	 add	 edx, 12			; 0000000cH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN10@initialise:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN11@initialise
  00061	c7 45 a4 bb 00
	00 00		 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  00068	eb 21		 jmp	 SHORT $LN12@initialise
$LN11@initialise:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 0c	 add	 edx, 12			; 0000000cH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN12@initialise:
  0008b	68 bb 00 00 00	 push	 187			; 000000bbH
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00093	51		 push	 ecx
  00094	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 a4	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 ec	 mov	 DWORD PTR _side$[ebp], eax

; 490  : 
; 491  : 	hc_division = create_new_division (ENTITY_SUB_TYPE_DIVISION_AIRBORNE_HELICOPTER_DIVISION, (entity_sides) side, force, NULL, TRUE);

  000aa	6a 01		 push	 1
  000ac	6a 00		 push	 0
  000ae	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000b1	50		 push	 eax
  000b2	8b 4d ec	 mov	 ecx, DWORD PTR _side$[ebp]
  000b5	51		 push	 ecx
  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  000bd	89 45 f8	 mov	 DWORD PTR _hc_division$[ebp], eax

; 492  : 
; 493  : 	fw_division = create_new_division (ENTITY_SUB_TYPE_DIVISION_AIRBORNE_FIXED_WING_DIVISION, (entity_sides) side, force, NULL, TRUE);

  000c0	6a 01		 push	 1
  000c2	6a 00		 push	 0
  000c4	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000c7	50		 push	 eax
  000c8	8b 4d ec	 mov	 ecx, DWORD PTR _side$[ebp]
  000cb	51		 push	 ecx
  000cc	6a 01		 push	 1
  000ce	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  000d3	89 45 f4	 mov	 DWORD PTR _fw_division$[ebp], eax

; 494  : 
; 495  : 	transport_division = create_new_division (ENTITY_SUB_TYPE_DIVISION_AIRBORNE_TRANSPORT_DIVISION, (entity_sides) side, force, NULL, TRUE);

  000d6	6a 01		 push	 1
  000d8	6a 00		 push	 0
  000da	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _side$[ebp]
  000e1	51		 push	 ecx
  000e2	6a 02		 push	 2
  000e4	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  000e9	89 45 f0	 mov	 DWORD PTR _transport_division$[ebp], eax

; 496  : 
; 497  : 	keysite = get_local_entity_first_child (force, LIST_TYPE_KEYSITE_FORCE);

  000ec	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  000f0	74 0a		 je	 SHORT $LN13@initialise
  000f2	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f7	89 4d a8	 mov	 DWORD PTR tv145[ebp], ecx
  000fa	eb 21		 jmp	 SHORT $LN14@initialise
$LN13@initialise:
  000fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  00102	83 c2 14	 add	 edx, 20			; 00000014H
  00105	52		 push	 edx
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00116	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN14@initialise:
  0011d	b9 01 00 00 00	 mov	 ecx, 1
  00122	85 c9		 test	 ecx, ecx
  00124	74 09		 je	 SHORT $LN15@initialise
  00126	c7 45 a4 15 00
	00 00		 mov	 DWORD PTR tv153[ebp], 21 ; 00000015H
  0012d	eb 21		 jmp	 SHORT $LN16@initialise
$LN15@initialise:
  0012f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  00135	83 c2 14	 add	 edx, 20			; 00000014H
  00138	52		 push	 edx
  00139	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00143	50		 push	 eax
  00144	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00149	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN16@initialise:
  00150	6a 15		 push	 21			; 00000015H
  00152	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00155	51		 push	 ecx
  00156	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv145[ebp], 180
  0015d	8b 45 a4	 mov	 eax, DWORD PTR tv153[ebp]
  00160	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00167	ff d1		 call	 ecx
  00169	89 45 fc	 mov	 DWORD PTR _keysite$[ebp], eax
$LN2@initialise:

; 498  : 
; 499  : 	while (keysite)

  0016c	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00170	0f 84 10 02 00
	00		 je	 $LN1@initialise

; 500  : 	{
; 501  : 		if (get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_KEYSITE_AIRBASE)

  00176	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0017a	74 0a		 je	 SHORT $LN17@initialise
  0017c	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  0017f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00181	89 4d a8	 mov	 DWORD PTR tv165[ebp], ecx
  00184	eb 1d		 jmp	 SHORT $LN18@initialise
$LN17@initialise:
  00186	68 f5 01 00 00	 push	 501			; 000001f5H
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00190	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00196	52		 push	 edx
  00197	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN18@initialise:
  001a3	b8 01 00 00 00	 mov	 eax, 1
  001a8	85 c0		 test	 eax, eax
  001aa	74 09		 je	 SHORT $LN19@initialise
  001ac	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv172[ebp], 52 ; 00000034H
  001b3	eb 1d		 jmp	 SHORT $LN20@initialise
$LN19@initialise:
  001b5	68 f5 01 00 00	 push	 501			; 000001f5H
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001c5	51		 push	 ecx
  001c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN20@initialise:
  001d2	6a 34		 push	 52			; 00000034H
  001d4	8b 55 fc	 mov	 edx, DWORD PTR _keysite$[ebp]
  001d7	52		 push	 edx
  001d8	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv165[ebp], 1116
  001df	8b 4d a4	 mov	 ecx, DWORD PTR tv172[ebp]
  001e2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001e9	ff d2		 call	 edx
  001eb	85 c0		 test	 eax, eax
  001ed	75 6e		 jne	 SHORT $LN5@initialise

; 502  : 		{
; 503  : 			//
; 504  : 			// Assign one company of each type per airbase
; 505  : 			//
; 506  : 
; 507  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_HC_ATTACK_COMPANY, (entity_sides) side, hc_division, keysite, TRUE);

  001ef	6a 01		 push	 1
  001f1	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  001f4	50		 push	 eax
  001f5	8b 4d f8	 mov	 ecx, DWORD PTR _hc_division$[ebp]
  001f8	51		 push	 ecx
  001f9	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  001fc	52		 push	 edx
  001fd	6a 06		 push	 6
  001ff	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division

; 508  : 
; 509  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_HC_TRANSPORT_COMPANY, (entity_sides) side, transport_division, keysite, TRUE);

  00204	6a 01		 push	 1
  00206	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  00209	50		 push	 eax
  0020a	8b 4d f0	 mov	 ecx, DWORD PTR _transport_division$[ebp]
  0020d	51		 push	 ecx
  0020e	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  00211	52		 push	 edx
  00212	6a 07		 push	 7
  00214	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division

; 510  : 
; 511  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_FW_ATTACK_COMPANY, (entity_sides) side, fw_division, keysite, TRUE);

  00219	6a 01		 push	 1
  0021b	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  0021e	50		 push	 eax
  0021f	8b 4d f4	 mov	 ecx, DWORD PTR _fw_division$[ebp]
  00222	51		 push	 ecx
  00223	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  00226	52		 push	 edx
  00227	6a 08		 push	 8
  00229	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division

; 512  : 
; 513  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_FW_FIGHTER_COMPANY, (entity_sides) side, fw_division, keysite, TRUE);

  0022e	6a 01		 push	 1
  00230	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  00233	50		 push	 eax
  00234	8b 4d f4	 mov	 ecx, DWORD PTR _fw_division$[ebp]
  00237	51		 push	 ecx
  00238	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  0023b	52		 push	 edx
  0023c	6a 09		 push	 9
  0023e	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division

; 514  : 
; 515  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_FW_TRANSPORT_COMPANY, (entity_sides) side, transport_division, keysite, TRUE);

  00243	6a 01		 push	 1
  00245	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  00248	50		 push	 eax
  00249	8b 4d f0	 mov	 ecx, DWORD PTR _transport_division$[ebp]
  0024c	51		 push	 ecx
  0024d	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  00250	52		 push	 edx
  00251	6a 0a		 push	 10			; 0000000aH
  00253	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  00258	e9 a4 00 00 00	 jmp	 $LN6@initialise
$LN5@initialise:

; 516  : 		}
; 517  : 		else if (get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE)

  0025d	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00261	74 0a		 je	 SHORT $LN21@initialise
  00263	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  00266	8b 08		 mov	 ecx, DWORD PTR [eax]
  00268	89 4d a8	 mov	 DWORD PTR tv209[ebp], ecx
  0026b	eb 1d		 jmp	 SHORT $LN22@initialise
$LN21@initialise:
  0026d	68 05 02 00 00	 push	 517			; 00000205H
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00277	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00283	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN22@initialise:
  0028a	b8 01 00 00 00	 mov	 eax, 1
  0028f	85 c0		 test	 eax, eax
  00291	74 09		 je	 SHORT $LN23@initialise
  00293	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv216[ebp], 52 ; 00000034H
  0029a	eb 1d		 jmp	 SHORT $LN24@initialise
$LN23@initialise:
  0029c	68 05 02 00 00	 push	 517			; 00000205H
  002a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ac	51		 push	 ecx
  002ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b2	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN24@initialise:
  002b9	6a 34		 push	 52			; 00000034H
  002bb	8b 55 fc	 mov	 edx, DWORD PTR _keysite$[ebp]
  002be	52		 push	 edx
  002bf	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv209[ebp], 1116
  002c6	8b 4d a4	 mov	 ecx, DWORD PTR tv216[ebp]
  002c9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002d0	ff d2		 call	 edx
  002d2	83 f8 01	 cmp	 eax, 1
  002d5	75 2a		 jne	 SHORT $LN6@initialise

; 518  : 		{
; 519  : 			//
; 520  : 			// Assign one company of each type per carrier
; 521  : 			//
; 522  : 
; 523  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_HC_ATTACK_COMPANY, (entity_sides) side, hc_division, keysite, TRUE);

  002d7	6a 01		 push	 1
  002d9	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  002dc	50		 push	 eax
  002dd	8b 4d f8	 mov	 ecx, DWORD PTR _hc_division$[ebp]
  002e0	51		 push	 ecx
  002e1	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  002e4	52		 push	 edx
  002e5	6a 06		 push	 6
  002e7	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division

; 524  : 
; 525  : 			create_new_division (ENTITY_SUB_TYPE_DIVISION_HC_TRANSPORT_COMPANY, (entity_sides) side, hc_division, keysite, TRUE);

  002ec	6a 01		 push	 1
  002ee	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  002f1	50		 push	 eax
  002f2	8b 4d f8	 mov	 ecx, DWORD PTR _hc_division$[ebp]
  002f5	51		 push	 ecx
  002f6	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  002f9	52		 push	 edx
  002fa	6a 07		 push	 7
  002fc	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
$LN6@initialise:

; 526  : 		}
; 527  : 
; 528  : 		keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  00301	83 7d fc 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00305	74 0a		 je	 SHORT $LN25@initialise
  00307	8b 45 fc	 mov	 eax, DWORD PTR _keysite$[ebp]
  0030a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030c	89 4d a8	 mov	 DWORD PTR tv239[ebp], ecx
  0030f	eb 21		 jmp	 SHORT $LN26@initialise
$LN25@initialise:
  00311	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  00317	83 c2 33	 add	 edx, 51			; 00000033H
  0031a	52		 push	 edx
  0031b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00320	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00325	50		 push	 eax
  00326	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv239[ebp], 0
$LN26@initialise:
  00332	b9 01 00 00 00	 mov	 ecx, 1
  00337	85 c9		 test	 ecx, ecx
  00339	74 09		 je	 SHORT $LN27@initialise
  0033b	c7 45 a4 15 00
	00 00		 mov	 DWORD PTR tv247[ebp], 21 ; 00000015H
  00342	eb 21		 jmp	 SHORT $LN28@initialise
$LN27@initialise:
  00344	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_airborne_divisions@@YGXPAUENTITY@@@Z@4JA
  0034a	83 c2 33	 add	 edx, 51			; 00000033H
  0034d	52		 push	 edx
  0034e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00358	50		 push	 eax
  00359	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv247[ebp], 0
$LN28@initialise:
  00365	6a 15		 push	 21			; 00000015H
  00367	8b 4d fc	 mov	 ecx, DWORD PTR _keysite$[ebp]
  0036a	51		 push	 ecx
  0036b	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv239[ebp], 180
  00372	8b 45 a4	 mov	 eax, DWORD PTR tv247[ebp]
  00375	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0037c	ff d1		 call	 ecx
  0037e	89 45 fc	 mov	 DWORD PTR _keysite$[ebp], eax

; 529  : 	}

  00381	e9 e6 fd ff ff	 jmp	 $LN2@initialise
$LN1@initialise:

; 530  : }

  00386	5f		 pop	 edi
  00387	5e		 pop	 esi
  00388	5b		 pop	 ebx
  00389	8b e5		 mov	 esp, ebp
  0038b	5d		 pop	 ebp
  0038c	c2 04 00	 ret	 4
?initialise_airborne_divisions@@YGXPAUENTITY@@@Z ENDP	; initialise_airborne_divisions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\highlevl\order.c
;	COMDAT ?initialise_armoured_divisions@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv626 = -196						; size = 4
tv553 = -196						; size = 4
tv527 = -196						; size = 4
tv485 = -196						; size = 4
tv433 = -196						; size = 4
tv407 = -196						; size = 4
tv369 = -196						; size = 4
tv347 = -196						; size = 4
tv303 = -196						; size = 4
tv263 = -196						; size = 4
tv242 = -196						; size = 4
tv182 = -196						; size = 4
tv156 = -196						; size = 4
tv135 = -196						; size = 4
tv83 = -196						; size = 4
tv860 = -192						; size = 4
tv703 = -192						; size = 4
tv696 = -192						; size = 4
tv618 = -192						; size = 4
tv545 = -192						; size = 4
tv520 = -192						; size = 4
tv477 = -192						; size = 4
tv425 = -192						; size = 4
tv400 = -192						; size = 4
tv361 = -192						; size = 4
tv340 = -192						; size = 4
tv295 = -192						; size = 4
tv269 = -192						; size = 4
tv255 = -192						; size = 4
tv234 = -192						; size = 4
tv174 = -192						; size = 4
tv162 = -192						; size = 4
tv148 = -192						; size = 4
tv95 = -192						; size = 4
tv75 = -192						; size = 4
_company$1 = -124					; size = 4
_company_count$2 = -120					; size = 4
_c$3 = -116						; size = 4
_company$4 = -112					; size = 4
_company_count$5 = -108					; size = 4
_n$6 = -104						; size = 4
_c$7 = -100						; size = 4
_pos2$ = -96						; size = 4
_pos1$ = -92						; size = 4
_artillery_per_division$ = -88				; size = 4
_frontline_per_division$ = -84				; size = 4
_a_count$ = -80						; size = 4
_f_count$ = -76						; size = 4
_artillery_remainder$ = -72				; size = 4
_frontline_remainder$ = -68				; size = 4
_rating$ = -64						; size = 4
_artillery_groups$ = -60				; size = 4
_frontline_groups$ = -56				; size = 4
_list$ = -52						; size = 4
_keysite$ = -48						; size = 4
_division$ = -44					; size = 4
_first_group$ = -40					; size = 4
_en$ = -36						; size = 4
_artillery_count$ = -32					; size = 4
_frontline_count$ = -28					; size = 4
_division_count$ = -24					; size = 4
_side$ = -20						; size = 4
_group_type$ = -16					; size = 4
_count$ = -12						; size = 4
_d$ = -8						; size = 4
_loop$ = -4						; size = 4
_force$ = 8						; size = 4
?initialise_armoured_divisions@@YGXPAUENTITY@@@Z PROC	; initialise_armoured_divisions, COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 93   : 	int
; 94   : 		loop,
; 95   : 		d,
; 96   : 		count,
; 97   : 		group_type,
; 98   : 		side,
; 99   : 		division_count,
; 100  : 		frontline_count,
; 101  : 		artillery_count;
; 102  : 
; 103  : 	entity
; 104  : 		*en,
; 105  : 		*first_group,
; 106  : 		*division,
; 107  : 		*keysite,
; 108  : 		**list,
; 109  : 		**frontline_groups,
; 110  : 		**artillery_groups;
; 111  : 
; 112  : 	float
; 113  : 		*rating,
; 114  : 		frontline_remainder,
; 115  : 		artillery_remainder,
; 116  : 		f_count,
; 117  : 		a_count,
; 118  : 		frontline_per_division,
; 119  : 		artillery_per_division;
; 120  : 
; 121  : 	vec3d
; 122  : 		*pos1,
; 123  : 		*pos2;
; 124  : 
; 125  : 	ASSERT (force);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  00010	75 18		 jne	 SHORT $LN30@initialise
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 21	 add	 eax, 33			; 00000021H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@initialise:

; 126  : 
; 127  : 	side = get_local_entity_int_value (force, INT_TYPE_SIDE);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN65@initialise
  00030	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN66@initialise
$LN65@initialise:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00043	83 c2 23	 add	 edx, 35			; 00000023H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN66@initialise:
  00061	b9 01 00 00 00	 mov	 ecx, 1
  00066	85 c9		 test	 ecx, ecx
  00068	74 0c		 je	 SHORT $LN67@initialise
  0006a	c7 85 3c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  00074	eb 24		 jmp	 SHORT $LN68@initialise
$LN67@initialise:
  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  0007c	83 c2 23	 add	 edx, 35			; 00000023H
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN68@initialise:
  0009a	68 bb 00 00 00	 push	 187			; 000000bbH
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  000a2	51		 push	 ecx
  000a3	69 95 40 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000ad	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ba	ff d1		 call	 ecx
  000bc	89 45 ec	 mov	 DWORD PTR _side$[ebp], eax

; 128  : 
; 129  : 	//
; 130  : 	// Count up frontline / artillery groups
; 131  : 	//	
; 132  : 
; 133  : 	frontline_count = 0;

  000bf	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _frontline_count$[ebp], 0

; 134  : 	artillery_count = 0;

  000c6	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _artillery_count$[ebp], 0

; 135  : 
; 136  : 	en = get_local_entity_first_child (force, LIST_TYPE_GROUND_REGISTRY);

  000cd	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  000d1	74 0d		 je	 SHORT $LN69@initialise
  000d3	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  000d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d8	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000de	eb 24		 jmp	 SHORT $LN70@initialise
$LN69@initialise:
  000e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  000e6	83 c2 2c	 add	 edx, 44			; 0000002cH
  000e9	52		 push	 edx
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fa	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN70@initialise:
  00104	b9 01 00 00 00	 mov	 ecx, 1
  00109	85 c9		 test	 ecx, ecx
  0010b	74 0c		 je	 SHORT $LN71@initialise
  0010d	c7 85 3c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv135[ebp], 15 ; 0000000fH
  00117	eb 24		 jmp	 SHORT $LN72@initialise
$LN71@initialise:
  00119	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  0011f	83 c2 2c	 add	 edx, 44			; 0000002cH
  00122	52		 push	 edx
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00133	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN72@initialise:
  0013d	6a 0f		 push	 15			; 0000000fH
  0013f	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00142	51		 push	 ecx
  00143	69 95 40 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv95[ebp], 180
  0014d	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  00153	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0015a	ff d1		 call	 ecx
  0015c	89 45 dc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@initialise:

; 137  : 
; 138  : 	while (en)

  0015f	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00163	0f 84 63 01 00
	00		 je	 $LN3@initialise

; 139  : 	{
; 140  : 		group_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00169	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0016d	74 0d		 je	 SHORT $LN73@initialise
  0016f	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00172	8b 08		 mov	 ecx, DWORD PTR [eax]
  00174	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv148[ebp], ecx
  0017a	eb 24		 jmp	 SHORT $LN74@initialise
$LN73@initialise:
  0017c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00182	83 c2 30	 add	 edx, 48			; 00000030H
  00185	52		 push	 edx
  00186	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00196	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN74@initialise:
  001a0	b9 01 00 00 00	 mov	 ecx, 1
  001a5	85 c9		 test	 ecx, ecx
  001a7	74 0c		 je	 SHORT $LN75@initialise
  001a9	c7 85 3c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv156[ebp], 52 ; 00000034H
  001b3	eb 24		 jmp	 SHORT $LN76@initialise
$LN75@initialise:
  001b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  001bb	83 c2 30	 add	 edx, 48			; 00000030H
  001be	52		 push	 edx
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cf	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN76@initialise:
  001d9	6a 34		 push	 52			; 00000034H
  001db	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  001de	51		 push	 ecx
  001df	69 95 40 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv148[ebp], 1116
  001e9	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv156[ebp]
  001ef	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f6	ff d1		 call	 ecx
  001f8	89 45 f0	 mov	 DWORD PTR _group_type$[ebp], eax

; 141  : 
; 142  : 		switch (group_type)

  001fb	8b 45 f0	 mov	 eax, DWORD PTR _group_type$[ebp]
  001fe	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], eax
  00204	83 bd 40 ff ff
	ff 0f		 cmp	 DWORD PTR tv162[ebp], 15 ; 0000000fH
  0020b	7c 28		 jl	 SHORT $LN4@initialise
  0020d	83 bd 40 ff ff
	ff 10		 cmp	 DWORD PTR tv162[ebp], 16 ; 00000010H
  00214	7e 0b		 jle	 SHORT $LN31@initialise
  00216	83 bd 40 ff ff
	ff 11		 cmp	 DWORD PTR tv162[ebp], 17 ; 00000011H
  0021d	74 0d		 je	 SHORT $LN32@initialise
  0021f	eb 14		 jmp	 SHORT $LN4@initialise
$LN31@initialise:

; 143  : 		{
; 144  : 			case ENTITY_SUB_TYPE_GROUP_PRIMARY_FRONTLINE:
; 145  : 			case ENTITY_SUB_TYPE_GROUP_SECONDARY_FRONTLINE:
; 146  : 			{
; 147  : 				frontline_count ++;

  00221	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  00224	83 c0 01	 add	 eax, 1
  00227	89 45 e4	 mov	 DWORD PTR _frontline_count$[ebp], eax

; 148  : 
; 149  : 				break;

  0022a	eb 09		 jmp	 SHORT $LN4@initialise
$LN32@initialise:

; 150  : 			}
; 151  : 			case ENTITY_SUB_TYPE_GROUP_SELF_PROPELLED_ARTILLERY:
; 152  : 			{
; 153  : 				artillery_count ++;

  0022c	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  0022f	83 c0 01	 add	 eax, 1
  00232	89 45 e0	 mov	 DWORD PTR _artillery_count$[ebp], eax
$LN4@initialise:

; 154  : 
; 155  : 				break;
; 156  : 			}
; 157  : 		}
; 158  : 
; 159  : 		en = get_local_entity_child_succ (en, LIST_TYPE_GROUND_REGISTRY);

  00235	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00239	74 0d		 je	 SHORT $LN77@initialise
  0023b	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  0023e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00240	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv174[ebp], ecx
  00246	eb 24		 jmp	 SHORT $LN78@initialise
$LN77@initialise:
  00248	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  0024e	83 c2 43	 add	 edx, 67			; 00000043H
  00251	52		 push	 edx
  00252	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00257	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0025c	50		 push	 eax
  0025d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00262	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv174[ebp], 0
$LN78@initialise:
  0026c	b9 01 00 00 00	 mov	 ecx, 1
  00271	85 c9		 test	 ecx, ecx
  00273	74 0c		 je	 SHORT $LN79@initialise
  00275	c7 85 3c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv182[ebp], 15 ; 0000000fH
  0027f	eb 24		 jmp	 SHORT $LN80@initialise
$LN79@initialise:
  00281	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00287	83 c2 43	 add	 edx, 67			; 00000043H
  0028a	52		 push	 edx
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029b	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN80@initialise:
  002a5	6a 0f		 push	 15			; 0000000fH
  002a7	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  002aa	51		 push	 ecx
  002ab	69 95 40 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv174[ebp], 180
  002b5	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv182[ebp]
  002bb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002c2	ff d1		 call	 ecx
  002c4	89 45 dc	 mov	 DWORD PTR _en$[ebp], eax

; 160  : 	}

  002c7	e9 93 fe ff ff	 jmp	 $LN2@initialise
$LN3@initialise:

; 161  : 
; 162  : 	//
; 163  : 	// calculate required number of divisions
; 164  : 	//			
; 165  : 
; 166  : 	convert_float_to_int (ceil ((float)frontline_count / 12.0), &division_count);

  002cc	8d 45 e8	 lea	 eax, DWORD PTR _division_count$[ebp]
  002cf	50		 push	 eax
  002d0	f3 0f 2a 45 e4	 cvtsi2ss xmm0, DWORD PTR _frontline_count$[ebp]
  002d5	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002d9	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4028000000000000
  002e1	83 ec 08	 sub	 esp, 8
  002e4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  002ef	83 c4 08	 add	 esp, 8
  002f2	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR tv696[ebp]
  002f8	d9 85 40 ff ff
	ff		 fld	 DWORD PTR tv696[ebp]
  002fe	51		 push	 ecx
  002ff	d9 1c 24	 fstp	 DWORD PTR [esp]
  00302	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 167  : 
; 168  : 	convert_float_to_int (ceil ((float)artillery_count / 2.0), &count);

  00307	8d 45 f4	 lea	 eax, DWORD PTR _count$[ebp]
  0030a	50		 push	 eax
  0030b	f3 0f 2a 45 e0	 cvtsi2ss xmm0, DWORD PTR _artillery_count$[ebp]
  00310	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00314	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0031c	83 ec 08	 sub	 esp, 8
  0031f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00324	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  0032a	83 c4 08	 add	 esp, 8
  0032d	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR tv703[ebp]
  00333	d9 85 40 ff ff
	ff		 fld	 DWORD PTR tv703[ebp]
  00339	51		 push	 ecx
  0033a	d9 1c 24	 fstp	 DWORD PTR [esp]
  0033d	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 169  : 
; 170  : 	division_count = max (division_count, count);

  00342	8d 45 f4	 lea	 eax, DWORD PTR _count$[ebp]
  00345	50		 push	 eax
  00346	8d 4d e8	 lea	 ecx, DWORD PTR _division_count$[ebp]
  00349	51		 push	 ecx
  0034a	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0034f	8b 10		 mov	 edx, DWORD PTR [eax]
  00351	89 55 e8	 mov	 DWORD PTR _division_count$[ebp], edx

; 171  : 
; 172  : 	//
; 173  : 	// Store list of groups
; 174  : 	//
; 175  : 
; 176  : 	if (frontline_count > 0)

  00354	83 7d e4 00	 cmp	 DWORD PTR _frontline_count$[ebp], 0
  00358	7e 11		 jle	 SHORT $LN33@initialise

; 177  : 	{
; 178  : 		frontline_groups = (entity **) malloc_heap_mem (sizeof (entity *) * frontline_count);

  0035a	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  0035d	c1 e0 02	 shl	 eax, 2
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00366	89 45 c8	 mov	 DWORD PTR _frontline_groups$[ebp], eax

; 179  : 	}
; 180  : 	else

  00369	eb 07		 jmp	 SHORT $LN34@initialise
$LN33@initialise:

; 181  : 	{
; 182  : 		frontline_groups = NULL;

  0036b	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _frontline_groups$[ebp], 0
$LN34@initialise:

; 183  : 	}
; 184  : 
; 185  : 	if (artillery_count > 0)

  00372	83 7d e0 00	 cmp	 DWORD PTR _artillery_count$[ebp], 0
  00376	7e 11		 jle	 SHORT $LN35@initialise

; 186  : 	{
; 187  : 		artillery_groups = (entity **) malloc_heap_mem (sizeof (entity *) * artillery_count);

  00378	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  0037b	c1 e0 02	 shl	 eax, 2
  0037e	50		 push	 eax
  0037f	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00384	89 45 c4	 mov	 DWORD PTR _artillery_groups$[ebp], eax

; 188  : 	}
; 189  : 	else

  00387	eb 07		 jmp	 SHORT $LN36@initialise
$LN35@initialise:

; 190  : 	{
; 191  : 		artillery_groups = NULL;

  00389	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _artillery_groups$[ebp], 0
$LN36@initialise:

; 192  : 	}
; 193  : 
; 194  : 	if ((!frontline_groups) && (!artillery_groups))

  00390	83 7d c8 00	 cmp	 DWORD PTR _frontline_groups$[ebp], 0
  00394	75 0b		 jne	 SHORT $LN37@initialise
  00396	83 7d c4 00	 cmp	 DWORD PTR _artillery_groups$[ebp], 0
  0039a	75 05		 jne	 SHORT $LN37@initialise

; 195  : 	{
; 196  : 		return;

  0039c	e9 db 0b 00 00	 jmp	 $LN1@initialise
$LN37@initialise:

; 197  : 	}
; 198  : 
; 199  : 	ASSERT (division_count > 0);

  003a1	83 7d e8 00	 cmp	 DWORD PTR _division_count$[ebp], 0
  003a5	7f 18		 jg	 SHORT $LN38@initialise
  003a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  003ac	83 c0 6b	 add	 eax, 107		; 0000006bH
  003af	50		 push	 eax
  003b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IJNDBEOK@division_count?5?$DO?50@
  003ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN38@initialise:

; 200  : 
; 201  : 	frontline_per_division = (float)frontline_count / (float)division_count;

  003bf	f3 0f 2a 45 e4	 cvtsi2ss xmm0, DWORD PTR _frontline_count$[ebp]
  003c4	f3 0f 2a 4d e8	 cvtsi2ss xmm1, DWORD PTR _division_count$[ebp]
  003c9	f3 0f 5e c1	 divss	 xmm0, xmm1
  003cd	f3 0f 11 45 ac	 movss	 DWORD PTR _frontline_per_division$[ebp], xmm0

; 202  : 
; 203  : 	artillery_per_division = (float)artillery_count / (float)division_count;

  003d2	f3 0f 2a 45 e0	 cvtsi2ss xmm0, DWORD PTR _artillery_count$[ebp]
  003d7	f3 0f 2a 4d e8	 cvtsi2ss xmm1, DWORD PTR _division_count$[ebp]
  003dc	f3 0f 5e c1	 divss	 xmm0, xmm1
  003e0	f3 0f 11 45 a8	 movss	 DWORD PTR _artillery_per_division$[ebp], xmm0

; 204  : 
; 205  : 	frontline_count = 0;

  003e5	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _frontline_count$[ebp], 0

; 206  : 	artillery_count = 0;

  003ec	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _artillery_count$[ebp], 0

; 207  : 
; 208  : 	en = get_local_entity_first_child (force, LIST_TYPE_GROUND_REGISTRY);

  003f3	83 7d 08 00	 cmp	 DWORD PTR _force$[ebp], 0
  003f7	74 0d		 je	 SHORT $LN81@initialise
  003f9	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  003fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fe	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv234[ebp], ecx
  00404	eb 24		 jmp	 SHORT $LN82@initialise
$LN81@initialise:
  00406	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  0040c	83 c2 74	 add	 edx, 116		; 00000074H
  0040f	52		 push	 edx
  00410	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00415	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0041a	50		 push	 eax
  0041b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00420	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN82@initialise:
  0042a	b9 01 00 00 00	 mov	 ecx, 1
  0042f	85 c9		 test	 ecx, ecx
  00431	74 0c		 je	 SHORT $LN83@initialise
  00433	c7 85 3c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv242[ebp], 15 ; 0000000fH
  0043d	eb 24		 jmp	 SHORT $LN84@initialise
$LN83@initialise:
  0043f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00445	83 c2 74	 add	 edx, 116		; 00000074H
  00448	52		 push	 edx
  00449	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00453	50		 push	 eax
  00454	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00459	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN84@initialise:
  00463	6a 0f		 push	 15			; 0000000fH
  00465	8b 4d 08	 mov	 ecx, DWORD PTR _force$[ebp]
  00468	51		 push	 ecx
  00469	69 95 40 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv234[ebp], 180
  00473	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv242[ebp]
  00479	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00480	ff d1		 call	 ecx
  00482	89 45 dc	 mov	 DWORD PTR _en$[ebp], eax
$LN6@initialise:

; 209  : 
; 210  : 	while (en)

  00485	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00489	0f 84 bf 01 00
	00		 je	 $LN7@initialise

; 211  : 	{
; 212  : 		group_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  0048f	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00493	74 0d		 je	 SHORT $LN85@initialise
  00495	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00498	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049a	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv255[ebp], ecx
  004a0	eb 24		 jmp	 SHORT $LN86@initialise
$LN85@initialise:
  004a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  004a8	83 c2 78	 add	 edx, 120		; 00000078H
  004ab	52		 push	 edx
  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004b6	50		 push	 eax
  004b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004bc	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv255[ebp], 0
$LN86@initialise:
  004c6	b9 01 00 00 00	 mov	 ecx, 1
  004cb	85 c9		 test	 ecx, ecx
  004cd	74 0c		 je	 SHORT $LN87@initialise
  004cf	c7 85 3c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv263[ebp], 52 ; 00000034H
  004d9	eb 24		 jmp	 SHORT $LN88@initialise
$LN87@initialise:
  004db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  004e1	83 c2 78	 add	 edx, 120		; 00000078H
  004e4	52		 push	 edx
  004e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004ef	50		 push	 eax
  004f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f5	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv263[ebp], 0
$LN88@initialise:
  004ff	6a 34		 push	 52			; 00000034H
  00501	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00504	51		 push	 ecx
  00505	69 95 40 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv255[ebp], 1116
  0050f	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv263[ebp]
  00515	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0051c	ff d1		 call	 ecx
  0051e	89 45 f0	 mov	 DWORD PTR _group_type$[ebp], eax

; 213  : 
; 214  : 		switch (group_type)

  00521	8b 45 f0	 mov	 eax, DWORD PTR _group_type$[ebp]
  00524	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv269[ebp], eax
  0052a	83 bd 40 ff ff
	ff 0f		 cmp	 DWORD PTR tv269[ebp], 15 ; 0000000fH
  00531	7c 7e		 jl	 SHORT $LN8@initialise
  00533	83 bd 40 ff ff
	ff 10		 cmp	 DWORD PTR tv269[ebp], 16 ; 00000010H
  0053a	7e 0b		 jle	 SHORT $LN39@initialise
  0053c	83 bd 40 ff ff
	ff 11		 cmp	 DWORD PTR tv269[ebp], 17 ; 00000011H
  00543	74 37		 je	 SHORT $LN41@initialise
  00545	eb 6a		 jmp	 SHORT $LN8@initialise
$LN39@initialise:

; 215  : 		{
; 216  : 			case ENTITY_SUB_TYPE_GROUP_PRIMARY_FRONTLINE:
; 217  : 			case ENTITY_SUB_TYPE_GROUP_SECONDARY_FRONTLINE:
; 218  : 			{
; 219  : 				ASSERT (frontline_groups);

  00547	83 7d c8 00	 cmp	 DWORD PTR _frontline_groups$[ebp], 0
  0054b	75 18		 jne	 SHORT $LN40@initialise
  0054d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00552	83 c0 7f	 add	 eax, 127		; 0000007fH
  00555	50		 push	 eax
  00556	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0055b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NNDMIGHL@frontline_groups@
  00560	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN40@initialise:

; 220  : 
; 221  : 				frontline_groups [frontline_count] = en;

  00565	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  00568	8b 4d c8	 mov	 ecx, DWORD PTR _frontline_groups$[ebp]
  0056b	8b 55 dc	 mov	 edx, DWORD PTR _en$[ebp]
  0056e	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 222  : 
; 223  : 				frontline_count ++;

  00571	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  00574	83 c0 01	 add	 eax, 1
  00577	89 45 e4	 mov	 DWORD PTR _frontline_count$[ebp], eax

; 224  : 
; 225  : 				break;

  0057a	eb 35		 jmp	 SHORT $LN8@initialise
$LN41@initialise:

; 226  : 			}
; 227  : 			case ENTITY_SUB_TYPE_GROUP_SELF_PROPELLED_ARTILLERY:
; 228  : 			{
; 229  : 				ASSERT (artillery_groups);

  0057c	83 7d c4 00	 cmp	 DWORD PTR _artillery_groups$[ebp], 0
  00580	75 1a		 jne	 SHORT $LN42@initialise
  00582	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00587	05 89 00 00 00	 add	 eax, 137		; 00000089H
  0058c	50		 push	 eax
  0058d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00592	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JBINFODC@artillery_groups@
  00597	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN42@initialise:

; 230  : 
; 231  : 				artillery_groups [artillery_count] = en;

  0059c	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  0059f	8b 4d c4	 mov	 ecx, DWORD PTR _artillery_groups$[ebp]
  005a2	8b 55 dc	 mov	 edx, DWORD PTR _en$[ebp]
  005a5	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 232  : 
; 233  : 				artillery_count ++;

  005a8	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  005ab	83 c0 01	 add	 eax, 1
  005ae	89 45 e0	 mov	 DWORD PTR _artillery_count$[ebp], eax
$LN8@initialise:

; 234  : 
; 235  : 				break;
; 236  : 			}
; 237  : 		}
; 238  : 
; 239  : 		en = get_local_entity_child_succ (en, LIST_TYPE_GROUND_REGISTRY);

  005b1	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  005b5	74 0d		 je	 SHORT $LN89@initialise
  005b7	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  005ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  005bc	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv295[ebp], ecx
  005c2	eb 27		 jmp	 SHORT $LN90@initialise
$LN89@initialise:
  005c4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  005ca	81 c2 93 00 00
	00		 add	 edx, 147		; 00000093H
  005d0	52		 push	 edx
  005d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005db	50		 push	 eax
  005dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e1	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv295[ebp], 0
$LN90@initialise:
  005eb	b9 01 00 00 00	 mov	 ecx, 1
  005f0	85 c9		 test	 ecx, ecx
  005f2	74 0c		 je	 SHORT $LN91@initialise
  005f4	c7 85 3c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv303[ebp], 15 ; 0000000fH
  005fe	eb 27		 jmp	 SHORT $LN92@initialise
$LN91@initialise:
  00600	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00606	81 c2 93 00 00
	00		 add	 edx, 147		; 00000093H
  0060c	52		 push	 edx
  0060d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00617	50		 push	 eax
  00618	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0061d	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv303[ebp], 0
$LN92@initialise:
  00627	6a 0f		 push	 15			; 0000000fH
  00629	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  0062c	51		 push	 ecx
  0062d	69 95 40 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv295[ebp], 180
  00637	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv303[ebp]
  0063d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00644	ff d1		 call	 ecx
  00646	89 45 dc	 mov	 DWORD PTR _en$[ebp], eax

; 240  : 	}

  00649	e9 37 fe ff ff	 jmp	 $LN6@initialise
$LN7@initialise:

; 241  : 
; 242  : 	//
; 243  : 	// group together divisions
; 244  : 	//
; 245  : 
; 246  : 	frontline_remainder = 0;

  0064e	0f 57 c0	 xorps	 xmm0, xmm0
  00651	f3 0f 11 45 bc	 movss	 DWORD PTR _frontline_remainder$[ebp], xmm0

; 247  : 	artillery_remainder = 0;

  00656	0f 57 c0	 xorps	 xmm0, xmm0
  00659	f3 0f 11 45 b8	 movss	 DWORD PTR _artillery_remainder$[ebp], xmm0

; 248  : 
; 249  : 	for (d = 0; d < division_count; d ++)

  0065e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _d$[ebp], 0
  00665	eb 09		 jmp	 SHORT $LN12@initialise
$LN10@initialise:
  00667	8b 45 f8	 mov	 eax, DWORD PTR _d$[ebp]
  0066a	83 c0 01	 add	 eax, 1
  0066d	89 45 f8	 mov	 DWORD PTR _d$[ebp], eax
$LN12@initialise:
  00670	8b 45 f8	 mov	 eax, DWORD PTR _d$[ebp]
  00673	3b 45 e8	 cmp	 eax, DWORD PTR _division_count$[ebp]
  00676	0f 8d e2 08 00
	00		 jge	 $LN11@initialise

; 250  : 	{
; 251  : 		division = create_new_division (ENTITY_SUB_TYPE_DIVISION_ARMOURED_DIVISION, (entity_sides) side, force, NULL, TRUE);

  0067c	6a 01		 push	 1
  0067e	6a 00		 push	 0
  00680	8b 45 08	 mov	 eax, DWORD PTR _force$[ebp]
  00683	50		 push	 eax
  00684	8b 4d ec	 mov	 ecx, DWORD PTR _side$[ebp]
  00687	51		 push	 ecx
  00688	6a 03		 push	 3
  0068a	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  0068f	89 45 d4	 mov	 DWORD PTR _division$[ebp], eax

; 252  : 
; 253  : 		//
; 254  : 		// decide how many of each group type are to be added to this division
; 255  : 		//
; 256  : 
; 257  : 		f_count = floor (frontline_per_division + frontline_remainder);

  00692	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _frontline_per_division$[ebp]
  00697	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _frontline_remainder$[ebp]
  0069c	51		 push	 ecx
  0069d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a2	e8 00 00 00 00	 call	 ?floor@@YGMM@Z		; floor
  006a7	d9 5d b4	 fstp	 DWORD PTR _f_count$[ebp]

; 258  : 		a_count = floor (artillery_per_division + artillery_remainder);

  006aa	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _artillery_per_division$[ebp]
  006af	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _artillery_remainder$[ebp]
  006b4	51		 push	 ecx
  006b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ba	e8 00 00 00 00	 call	 ?floor@@YGMM@Z		; floor
  006bf	d9 5d b0	 fstp	 DWORD PTR _a_count$[ebp]

; 259  : 
; 260  : 		frontline_remainder = frontline_per_division - f_count;

  006c2	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _frontline_per_division$[ebp]
  006c7	f3 0f 5c 45 b4	 subss	 xmm0, DWORD PTR _f_count$[ebp]
  006cc	f3 0f 11 45 bc	 movss	 DWORD PTR _frontline_remainder$[ebp], xmm0

; 261  : 		artillery_remainder = artillery_per_division - a_count;

  006d1	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _artillery_per_division$[ebp]
  006d6	f3 0f 5c 45 b0	 subss	 xmm0, DWORD PTR _a_count$[ebp]
  006db	f3 0f 11 45 b8	 movss	 DWORD PTR _artillery_remainder$[ebp], xmm0

; 262  : 
; 263  : 		//
; 264  : 		// find first group NOT in a division, and sort remaining groups with regard to distance from chosen group
; 265  : 		//
; 266  : 
; 267  : 		first_group = NULL;

  006e0	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _first_group$[ebp], 0

; 268  : 
; 269  : 		if (frontline_groups)

  006e7	83 7d c8 00	 cmp	 DWORD PTR _frontline_groups$[ebp], 0
  006eb	74 0e		 je	 SHORT $LN43@initialise

; 270  : 		{
; 271  : 			list = frontline_groups;

  006ed	8b 45 c8	 mov	 eax, DWORD PTR _frontline_groups$[ebp]
  006f0	89 45 cc	 mov	 DWORD PTR _list$[ebp], eax

; 272  : 
; 273  : 			count = frontline_count;

  006f3	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  006f6	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax

; 274  : 		}
; 275  : 		else

  006f9	eb 0c		 jmp	 SHORT $LN44@initialise
$LN43@initialise:

; 276  : 		{
; 277  : 			list = artillery_groups;

  006fb	8b 45 c4	 mov	 eax, DWORD PTR _artillery_groups$[ebp]
  006fe	89 45 cc	 mov	 DWORD PTR _list$[ebp], eax

; 278  : 
; 279  : 			count = artillery_count;

  00701	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  00704	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax
$LN44@initialise:

; 280  : 		}
; 281  : 
; 282  : 		for (loop = 0; loop < count; loop ++)

  00707	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0070e	eb 09		 jmp	 SHORT $LN15@initialise
$LN13@initialise:
  00710	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00713	83 c0 01	 add	 eax, 1
  00716	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN15@initialise:
  00719	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0071c	3b 45 f4	 cmp	 eax, DWORD PTR _count$[ebp]
  0071f	0f 8d c4 00 00
	00		 jge	 $LN14@initialise

; 283  : 		{
; 284  : 			en = list [loop];

  00725	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00728	8b 4d cc	 mov	 ecx, DWORD PTR _list$[ebp]
  0072b	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0072e	89 55 dc	 mov	 DWORD PTR _en$[ebp], edx

; 285  : 
; 286  : 			ASSERT (en);

  00731	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00735	75 1a		 jne	 SHORT $LN45@initialise
  00737	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  0073c	05 c2 00 00 00	 add	 eax, 194		; 000000c2H
  00741	50		 push	 eax
  00742	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00747	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0074c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN45@initialise:

; 287  : 
; 288  : 			if (!get_local_entity_parent (en, LIST_TYPE_DIVISION))

  00751	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00755	74 0d		 je	 SHORT $LN93@initialise
  00757	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  0075a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0075c	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv340[ebp], ecx
  00762	eb 20		 jmp	 SHORT $LN94@initialise
$LN93@initialise:
  00764	68 20 01 00 00	 push	 288			; 00000120H
  00769	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0076e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00774	52		 push	 edx
  00775	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0077a	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv340[ebp], 0
$LN94@initialise:
  00784	b8 01 00 00 00	 mov	 eax, 1
  00789	85 c0		 test	 eax, eax
  0078b	74 0c		 je	 SHORT $LN95@initialise
  0078d	c7 85 3c ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv347[ebp], 11 ; 0000000bH
  00797	eb 20		 jmp	 SHORT $LN96@initialise
$LN95@initialise:
  00799	68 20 01 00 00	 push	 288			; 00000120H
  0079e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  007a9	51		 push	 ecx
  007aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007af	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv347[ebp], 0
$LN96@initialise:
  007b9	6a 0b		 push	 11			; 0000000bH
  007bb	8b 55 dc	 mov	 edx, DWORD PTR _en$[ebp]
  007be	52		 push	 edx
  007bf	69 85 40 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv340[ebp], 180
  007c9	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv347[ebp]
  007cf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  007d6	ff d2		 call	 edx
  007d8	85 c0		 test	 eax, eax
  007da	75 08		 jne	 SHORT $LN46@initialise

; 289  : 			{
; 290  : 				first_group = en;

  007dc	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  007df	89 45 d8	 mov	 DWORD PTR _first_group$[ebp], eax

; 291  : 
; 292  : 				break;

  007e2	eb 05		 jmp	 SHORT $LN14@initialise
$LN46@initialise:

; 293  : 			}
; 294  : 		}

  007e4	e9 27 ff ff ff	 jmp	 $LN13@initialise
$LN14@initialise:

; 295  : 
; 296  : 		if (!first_group)

  007e9	83 7d d8 00	 cmp	 DWORD PTR _first_group$[ebp], 0
  007ed	75 05		 jne	 SHORT $LN47@initialise

; 297  : 		{
; 298  : 			//
; 299  : 			// All checked groups are in a division, so break out and handle the remaining groups
; 300  : 			//
; 301  : 			
; 302  : 			break;

  007ef	e9 6a 07 00 00	 jmp	 $LN11@initialise
$LN47@initialise:

; 303  : 		}
; 304  : 
; 305  : 		pos1 = get_local_entity_vec3d_ptr (first_group, VEC3D_TYPE_POSITION);

  007f4	83 7d d8 00	 cmp	 DWORD PTR _first_group$[ebp], 0
  007f8	74 0d		 je	 SHORT $LN97@initialise
  007fa	8b 45 d8	 mov	 eax, DWORD PTR _first_group$[ebp]
  007fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  007ff	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv361[ebp], ecx
  00805	eb 27		 jmp	 SHORT $LN98@initialise
$LN97@initialise:
  00807	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  0080d	81 c2 d5 00 00
	00		 add	 edx, 213		; 000000d5H
  00813	52		 push	 edx
  00814	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00819	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0081e	50		 push	 eax
  0081f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00824	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv361[ebp], 0
$LN98@initialise:
  0082e	b9 01 00 00 00	 mov	 ecx, 1
  00833	85 c9		 test	 ecx, ecx
  00835	74 0c		 je	 SHORT $LN99@initialise
  00837	c7 85 3c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv369[ebp], 8
  00841	eb 27		 jmp	 SHORT $LN100@initialise
$LN99@initialise:
  00843	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00849	81 c2 d5 00 00
	00		 add	 edx, 213		; 000000d5H
  0084f	52		 push	 edx
  00850	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00855	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0085a	50		 push	 eax
  0085b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00860	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv369[ebp], 0
$LN100@initialise:
  0086a	6a 08		 push	 8
  0086c	8b 4d d8	 mov	 ecx, DWORD PTR _first_group$[ebp]
  0086f	51		 push	 ecx
  00870	6b 95 40 ff ff
	ff 60		 imul	 edx, DWORD PTR tv361[ebp], 96
  00877	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv369[ebp]
  0087d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00884	ff d1		 call	 ecx
  00886	89 45 a4	 mov	 DWORD PTR _pos1$[ebp], eax

; 306  : 
; 307  : 		keysite = get_closest_keysite (ENTITY_SUB_TYPE_KEYSITE_AIRBASE, (entity_sides) side, pos1, 0.0, NULL, NULL);

  00889	6a 00		 push	 0
  0088b	6a 00		 push	 0
  0088d	51		 push	 ecx
  0088e	0f 57 c0	 xorps	 xmm0, xmm0
  00891	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00896	8b 45 a4	 mov	 eax, DWORD PTR _pos1$[ebp]
  00899	50		 push	 eax
  0089a	8b 4d ec	 mov	 ecx, DWORD PTR _side$[ebp]
  0089d	51		 push	 ecx
  0089e	6a 00		 push	 0
  008a0	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  008a5	89 45 d0	 mov	 DWORD PTR _keysite$[ebp], eax

; 308  : 
; 309  : 		//
; 310  : 		// Sort Frontline groups
; 311  : 		//
; 312  : 
; 313  : 		if (frontline_groups)

  008a8	83 7d c8 00	 cmp	 DWORD PTR _frontline_groups$[ebp], 0
  008ac	0f 84 8f 03 00
	00		 je	 $LN48@initialise

; 314  : 		{
; 315  : 			int
; 316  : 				c,
; 317  : 				n,
; 318  : 				company_count;
; 319  : 
; 320  : 			entity
; 321  : 				*company;
; 322  : 
; 323  : 			ASSERT (frontline_count > 0);

  008b2	83 7d e4 00	 cmp	 DWORD PTR _frontline_count$[ebp], 0
  008b6	7f 1a		 jg	 SHORT $LN49@initialise
  008b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  008bd	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  008c2	50		 push	 eax
  008c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  008c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NFAJCMCB@frontline_count?5?$DO?50@
  008cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN49@initialise:

; 324  : 
; 325  : 			rating = (float*) malloc_heap_mem (sizeof (float) * frontline_count);

  008d2	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  008d5	c1 e0 02	 shl	 eax, 2
  008d8	50		 push	 eax
  008d9	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  008de	89 45 c0	 mov	 DWORD PTR _rating$[ebp], eax

; 326  : 			
; 327  : 			for (loop = 0; loop < frontline_count; loop ++)

  008e1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  008e8	eb 09		 jmp	 SHORT $LN18@initialise
$LN16@initialise:
  008ea	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  008ed	83 c0 01	 add	 eax, 1
  008f0	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN18@initialise:
  008f3	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  008f6	3b 45 e4	 cmp	 eax, DWORD PTR _frontline_count$[ebp]
  008f9	0f 8d 7a 01 00
	00		 jge	 $LN17@initialise

; 328  : 			{
; 329  : 				en = frontline_groups [loop];

  008ff	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00902	8b 4d c8	 mov	 ecx, DWORD PTR _frontline_groups$[ebp]
  00905	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00908	89 55 dc	 mov	 DWORD PTR _en$[ebp], edx

; 330  : 
; 331  : 				if (get_local_entity_parent (en, LIST_TYPE_DIVISION))

  0090b	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0090f	74 0d		 je	 SHORT $LN101@initialise
  00911	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00914	8b 08		 mov	 ecx, DWORD PTR [eax]
  00916	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv400[ebp], ecx
  0091c	eb 20		 jmp	 SHORT $LN102@initialise
$LN101@initialise:
  0091e	68 4b 01 00 00	 push	 331			; 0000014bH
  00923	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00928	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0092e	52		 push	 edx
  0092f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00934	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv400[ebp], 0
$LN102@initialise:
  0093e	b8 01 00 00 00	 mov	 eax, 1
  00943	85 c0		 test	 eax, eax
  00945	74 0c		 je	 SHORT $LN103@initialise
  00947	c7 85 3c ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv407[ebp], 11 ; 0000000bH
  00951	eb 20		 jmp	 SHORT $LN104@initialise
$LN103@initialise:
  00953	68 4b 01 00 00	 push	 331			; 0000014bH
  00958	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0095d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00963	51		 push	 ecx
  00964	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00969	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv407[ebp], 0
$LN104@initialise:
  00973	6a 0b		 push	 11			; 0000000bH
  00975	8b 55 dc	 mov	 edx, DWORD PTR _en$[ebp]
  00978	52		 push	 edx
  00979	69 85 40 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv400[ebp], 180
  00983	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv407[ebp]
  00989	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00990	ff d2		 call	 edx
  00992	85 c0		 test	 eax, eax
  00994	74 18		 je	 SHORT $LN50@initialise

; 332  : 				{
; 333  : 					rating [loop] = FLT_MAX;

  00996	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00999	8b 4d c0	 mov	 ecx, DWORD PTR _rating$[ebp]
  0099c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  009a4	f3 0f 11 04 81	 movss	 DWORD PTR [ecx+eax*4], xmm0
  009a9	e9 c6 00 00 00	 jmp	 $LN53@initialise
$LN50@initialise:

; 334  : 				}
; 335  : 				else if (en == first_group)

  009ae	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  009b1	3b 45 d8	 cmp	 eax, DWORD PTR _first_group$[ebp]
  009b4	75 13		 jne	 SHORT $LN52@initialise

; 336  : 				{
; 337  : 					rating [loop] = 0.0;

  009b6	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  009b9	8b 4d c0	 mov	 ecx, DWORD PTR _rating$[ebp]
  009bc	0f 57 c0	 xorps	 xmm0, xmm0
  009bf	f3 0f 11 04 81	 movss	 DWORD PTR [ecx+eax*4], xmm0

; 338  : 				}
; 339  : 				else

  009c4	e9 ab 00 00 00	 jmp	 $LN53@initialise
$LN52@initialise:

; 340  : 				{
; 341  : 					pos2 = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  009c9	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  009cd	74 0d		 je	 SHORT $LN105@initialise
  009cf	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  009d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  009d4	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv425[ebp], ecx
  009da	eb 27		 jmp	 SHORT $LN106@initialise
$LN105@initialise:
  009dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  009e2	81 c2 f9 00 00
	00		 add	 edx, 249		; 000000f9H
  009e8	52		 push	 edx
  009e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009f3	50		 push	 eax
  009f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f9	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
$LN106@initialise:
  00a03	b9 01 00 00 00	 mov	 ecx, 1
  00a08	85 c9		 test	 ecx, ecx
  00a0a	74 0c		 je	 SHORT $LN107@initialise
  00a0c	c7 85 3c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv433[ebp], 8
  00a16	eb 27		 jmp	 SHORT $LN108@initialise
$LN107@initialise:
  00a18	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00a1e	81 c2 f9 00 00
	00		 add	 edx, 249		; 000000f9H
  00a24	52		 push	 edx
  00a25	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a2a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00a2f	50		 push	 eax
  00a30	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a35	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv433[ebp], 0
$LN108@initialise:
  00a3f	6a 08		 push	 8
  00a41	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00a44	51		 push	 ecx
  00a45	6b 95 40 ff ff
	ff 60		 imul	 edx, DWORD PTR tv425[ebp], 96
  00a4c	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv433[ebp]
  00a52	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00a59	ff d1		 call	 ecx
  00a5b	89 45 a0	 mov	 DWORD PTR _pos2$[ebp], eax

; 342  : 
; 343  : 					rating [loop] = get_2d_range (pos1, pos2);

  00a5e	8b 45 a0	 mov	 eax, DWORD PTR _pos2$[ebp]
  00a61	50		 push	 eax
  00a62	8b 4d a4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00a65	51		 push	 ecx
  00a66	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00a6b	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00a6e	8b 45 c0	 mov	 eax, DWORD PTR _rating$[ebp]
  00a71	d9 1c 90	 fstp	 DWORD PTR [eax+edx*4]
$LN53@initialise:

; 344  : 				}
; 345  : 			}

  00a74	e9 71 fe ff ff	 jmp	 $LN16@initialise
$LN17@initialise:

; 346  : 
; 347  : 			quicksort_entity_list (frontline_groups, frontline_count, rating);

  00a79	8b 45 c0	 mov	 eax, DWORD PTR _rating$[ebp]
  00a7c	50		 push	 eax
  00a7d	8b 4d e4	 mov	 ecx, DWORD PTR _frontline_count$[ebp]
  00a80	51		 push	 ecx
  00a81	8b 55 c8	 mov	 edx, DWORD PTR _frontline_groups$[ebp]
  00a84	52		 push	 edx
  00a85	e8 00 00 00 00	 call	 ?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z ; quicksort_entity_list

; 348  : 
; 349  : 			//
; 350  : 			// organise division into companies
; 351  : 			//
; 352  : 			
; 353  : 			convert_float_to_int (ceil (f_count / 3.0), &company_count);

  00a8a	8d 45 94	 lea	 eax, DWORD PTR _company_count$5[ebp]
  00a8d	50		 push	 eax
  00a8e	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _f_count$[ebp]
  00a93	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4008000000000000
  00a9b	83 ec 08	 sub	 esp, 8
  00a9e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00aa3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  00aa9	83 c4 08	 add	 esp, 8
  00aac	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR tv860[ebp]
  00ab2	d9 85 40 ff ff
	ff		 fld	 DWORD PTR tv860[ebp]
  00ab8	51		 push	 ecx
  00ab9	d9 1c 24	 fstp	 DWORD PTR [esp]
  00abc	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 354  : 
; 355  : 			count = 0;

  00ac1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 356  : 
; 357  : 			loop = frontline_count - 1;

  00ac8	8b 45 e4	 mov	 eax, DWORD PTR _frontline_count$[ebp]
  00acb	83 e8 01	 sub	 eax, 1
  00ace	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 358  : 
; 359  : 			for (c = 0; c < company_count; c ++)

  00ad1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _c$7[ebp], 0
  00ad8	eb 09		 jmp	 SHORT $LN21@initialise
$LN19@initialise:
  00ada	8b 45 9c	 mov	 eax, DWORD PTR _c$7[ebp]
  00add	83 c0 01	 add	 eax, 1
  00ae0	89 45 9c	 mov	 DWORD PTR _c$7[ebp], eax
$LN21@initialise:
  00ae3	8b 45 9c	 mov	 eax, DWORD PTR _c$7[ebp]
  00ae6	3b 45 94	 cmp	 eax, DWORD PTR _company_count$5[ebp]
  00ae9	0f 8d 49 01 00
	00		 jge	 $LN20@initialise

; 360  : 			{
; 361  : 				company = create_new_division (ENTITY_SUB_TYPE_DIVISION_ARMOURED_COMPANY, (entity_sides) side, division, keysite, TRUE);

  00aef	6a 01		 push	 1
  00af1	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00af4	50		 push	 eax
  00af5	8b 4d d4	 mov	 ecx, DWORD PTR _division$[ebp]
  00af8	51		 push	 ecx
  00af9	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  00afc	52		 push	 edx
  00afd	6a 0c		 push	 12			; 0000000cH
  00aff	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  00b04	89 45 90	 mov	 DWORD PTR _company$4[ebp], eax

; 362  : 
; 363  : 				n = 0;

  00b07	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _n$6[ebp], 0
$LN22@initialise:

; 364  : 
; 365  : 				while ((rating [loop] != FLT_MAX) && (n < 3) && (count < f_count))

  00b0e	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00b11	8b 4d c0	 mov	 ecx, DWORD PTR _rating$[ebp]
  00b14	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00b19	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@7f7fffff
  00b20	9f		 lahf
  00b21	f6 c4 44	 test	 ah, 68			; 00000044H
  00b24	0f 8b 09 01 00
	00		 jnp	 $LN23@initialise
  00b2a	83 7d 98 03	 cmp	 DWORD PTR _n$6[ebp], 3
  00b2e	0f 8d ff 00 00
	00		 jge	 $LN23@initialise
  00b34	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _count$[ebp]
  00b39	f3 0f 10 4d b4	 movss	 xmm1, DWORD PTR _f_count$[ebp]
  00b3e	0f 2f c8	 comiss	 xmm1, xmm0
  00b41	0f 86 ec 00 00
	00		 jbe	 $LN23@initialise

; 366  : 				{
; 367  : 					//
; 368  : 					// link group to company
; 369  : 					//
; 370  : 	
; 371  : 					en = frontline_groups [loop];

  00b47	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00b4a	8b 4d c8	 mov	 ecx, DWORD PTR _frontline_groups$[ebp]
  00b4d	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00b50	89 55 dc	 mov	 DWORD PTR _en$[ebp], edx

; 372  : 	
; 373  : 					ASSERT (!get_local_entity_parent (en, LIST_TYPE_DIVISION));

  00b53	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b57	74 0d		 je	 SHORT $LN109@initialise
  00b59	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00b5c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b5e	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv477[ebp], ecx
  00b64	eb 27		 jmp	 SHORT $LN110@initialise
$LN109@initialise:
  00b66	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00b6c	81 c2 19 01 00
	00		 add	 edx, 281		; 00000119H
  00b72	52		 push	 edx
  00b73	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b78	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b7d	50		 push	 eax
  00b7e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b83	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv477[ebp], 0
$LN110@initialise:
  00b8d	b9 01 00 00 00	 mov	 ecx, 1
  00b92	85 c9		 test	 ecx, ecx
  00b94	74 0c		 je	 SHORT $LN111@initialise
  00b96	c7 85 3c ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv485[ebp], 11 ; 0000000bH
  00ba0	eb 27		 jmp	 SHORT $LN112@initialise
$LN111@initialise:
  00ba2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00ba8	81 c2 19 01 00
	00		 add	 edx, 281		; 00000119H
  00bae	52		 push	 edx
  00baf	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bb4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00bb9	50		 push	 eax
  00bba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bbf	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv485[ebp], 0
$LN112@initialise:
  00bc9	6a 0b		 push	 11			; 0000000bH
  00bcb	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00bce	51		 push	 ecx
  00bcf	69 95 40 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv477[ebp], 180
  00bd9	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv485[ebp]
  00bdf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00be6	ff d1		 call	 ecx
  00be8	85 c0		 test	 eax, eax
  00bea	74 1a		 je	 SHORT $LN54@initialise
  00bec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00bf1	05 19 01 00 00	 add	 eax, 281		; 00000119H
  00bf6	50		 push	 eax
  00bf7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bfc	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@KAINADLB@?$CBget_local_entity_parent?5?$CIen?0?5L@
  00c01	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN54@initialise:

; 374  : 
; 375  : 					add_group_to_division (en, company);

  00c06	8b 45 90	 mov	 eax, DWORD PTR _company$4[ebp]
  00c09	50		 push	 eax
  00c0a	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00c0d	51		 push	 ecx
  00c0e	e8 00 00 00 00	 call	 ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ; add_group_to_division

; 376  : 
; 377  : 					n ++;

  00c13	8b 45 98	 mov	 eax, DWORD PTR _n$6[ebp]
  00c16	83 c0 01	 add	 eax, 1
  00c19	89 45 98	 mov	 DWORD PTR _n$6[ebp], eax

; 378  : 
; 379  : 					count ++;

  00c1c	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00c1f	83 c0 01	 add	 eax, 1
  00c22	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax

; 380  : 
; 381  : 					loop --;

  00c25	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00c28	83 e8 01	 sub	 eax, 1
  00c2b	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 382  : 				}

  00c2e	e9 db fe ff ff	 jmp	 $LN22@initialise
$LN23@initialise:

; 383  : 			}

  00c33	e9 a2 fe ff ff	 jmp	 $LN19@initialise
$LN20@initialise:

; 384  : 
; 385  : 			free_mem (rating);					

  00c38	8b 45 c0	 mov	 eax, DWORD PTR _rating$[ebp]
  00c3b	50		 push	 eax
  00c3c	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN48@initialise:

; 386  : 		}
; 387  : 
; 388  : 		//
; 389  : 		// Sort Artillery groups
; 390  : 		//
; 391  : 
; 392  : 		if (artillery_groups)

  00c41	83 7d c4 00	 cmp	 DWORD PTR _artillery_groups$[ebp], 0
  00c45	0f 84 0e 03 00
	00		 je	 $LN55@initialise

; 393  : 		{
; 394  : 			int
; 395  : 				c,
; 396  : 				company_count;
; 397  : 
; 398  : 			entity
; 399  : 				*company;
; 400  : 
; 401  : 			ASSERT (artillery_count > 0);

  00c4b	83 7d e0 00	 cmp	 DWORD PTR _artillery_count$[ebp], 0
  00c4f	7f 1a		 jg	 SHORT $LN56@initialise
  00c51	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00c56	05 35 01 00 00	 add	 eax, 309		; 00000135H
  00c5b	50		 push	 eax
  00c5c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c61	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FPMFFGCP@artillery_count?5?$DO?50@
  00c66	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN56@initialise:

; 402  : 
; 403  : 			rating = (float*) malloc_heap_mem (sizeof (float) * artillery_count);

  00c6b	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  00c6e	c1 e0 02	 shl	 eax, 2
  00c71	50		 push	 eax
  00c72	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00c77	89 45 c0	 mov	 DWORD PTR _rating$[ebp], eax

; 404  : 			
; 405  : 			for (loop = 0; loop < artillery_count; loop ++)

  00c7a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00c81	eb 09		 jmp	 SHORT $LN26@initialise
$LN24@initialise:
  00c83	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00c86	83 c0 01	 add	 eax, 1
  00c89	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN26@initialise:
  00c8c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00c8f	3b 45 e0	 cmp	 eax, DWORD PTR _artillery_count$[ebp]
  00c92	0f 8d 7a 01 00
	00		 jge	 $LN25@initialise

; 406  : 			{
; 407  : 				en = artillery_groups [loop];

  00c98	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00c9b	8b 4d c4	 mov	 ecx, DWORD PTR _artillery_groups$[ebp]
  00c9e	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00ca1	89 55 dc	 mov	 DWORD PTR _en$[ebp], edx

; 408  : 
; 409  : 				if (get_local_entity_parent (en, LIST_TYPE_DIVISION))

  00ca4	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00ca8	74 0d		 je	 SHORT $LN113@initialise
  00caa	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00cad	8b 08		 mov	 ecx, DWORD PTR [eax]
  00caf	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv520[ebp], ecx
  00cb5	eb 20		 jmp	 SHORT $LN114@initialise
$LN113@initialise:
  00cb7	68 99 01 00 00	 push	 409			; 00000199H
  00cbc	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cc1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cc7	52		 push	 edx
  00cc8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ccd	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv520[ebp], 0
$LN114@initialise:
  00cd7	b8 01 00 00 00	 mov	 eax, 1
  00cdc	85 c0		 test	 eax, eax
  00cde	74 0c		 je	 SHORT $LN115@initialise
  00ce0	c7 85 3c ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv527[ebp], 11 ; 0000000bH
  00cea	eb 20		 jmp	 SHORT $LN116@initialise
$LN115@initialise:
  00cec	68 99 01 00 00	 push	 409			; 00000199H
  00cf1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cf6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00cfc	51		 push	 ecx
  00cfd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d02	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv527[ebp], 0
$LN116@initialise:
  00d0c	6a 0b		 push	 11			; 0000000bH
  00d0e	8b 55 dc	 mov	 edx, DWORD PTR _en$[ebp]
  00d11	52		 push	 edx
  00d12	69 85 40 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv520[ebp], 180
  00d1c	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv527[ebp]
  00d22	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00d29	ff d2		 call	 edx
  00d2b	85 c0		 test	 eax, eax
  00d2d	74 18		 je	 SHORT $LN57@initialise

; 410  : 				{
; 411  : 					rating [loop] = FLT_MAX;

  00d2f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00d32	8b 4d c0	 mov	 ecx, DWORD PTR _rating$[ebp]
  00d35	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  00d3d	f3 0f 11 04 81	 movss	 DWORD PTR [ecx+eax*4], xmm0
  00d42	e9 c6 00 00 00	 jmp	 $LN60@initialise
$LN57@initialise:

; 412  : 				}
; 413  : 				else if (en == first_group)

  00d47	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00d4a	3b 45 d8	 cmp	 eax, DWORD PTR _first_group$[ebp]
  00d4d	75 13		 jne	 SHORT $LN59@initialise

; 414  : 				{
; 415  : 					rating [loop] = 0.0;

  00d4f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00d52	8b 4d c0	 mov	 ecx, DWORD PTR _rating$[ebp]
  00d55	0f 57 c0	 xorps	 xmm0, xmm0
  00d58	f3 0f 11 04 81	 movss	 DWORD PTR [ecx+eax*4], xmm0

; 416  : 				}
; 417  : 				else

  00d5d	e9 ab 00 00 00	 jmp	 $LN60@initialise
$LN59@initialise:

; 418  : 				{
; 419  : 					pos2 = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00d62	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d66	74 0d		 je	 SHORT $LN117@initialise
  00d68	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00d6b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d6d	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv545[ebp], ecx
  00d73	eb 27		 jmp	 SHORT $LN118@initialise
$LN117@initialise:
  00d75	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00d7b	81 c2 47 01 00
	00		 add	 edx, 327		; 00000147H
  00d81	52		 push	 edx
  00d82	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d87	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d8c	50		 push	 eax
  00d8d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d92	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv545[ebp], 0
$LN118@initialise:
  00d9c	b9 01 00 00 00	 mov	 ecx, 1
  00da1	85 c9		 test	 ecx, ecx
  00da3	74 0c		 je	 SHORT $LN119@initialise
  00da5	c7 85 3c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv553[ebp], 8
  00daf	eb 27		 jmp	 SHORT $LN120@initialise
$LN119@initialise:
  00db1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00db7	81 c2 47 01 00
	00		 add	 edx, 327		; 00000147H
  00dbd	52		 push	 edx
  00dbe	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dc3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00dc8	50		 push	 eax
  00dc9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dce	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv553[ebp], 0
$LN120@initialise:
  00dd8	6a 08		 push	 8
  00dda	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00ddd	51		 push	 ecx
  00dde	6b 95 40 ff ff
	ff 60		 imul	 edx, DWORD PTR tv545[ebp], 96
  00de5	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv553[ebp]
  00deb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00df2	ff d1		 call	 ecx
  00df4	89 45 a0	 mov	 DWORD PTR _pos2$[ebp], eax

; 420  : 
; 421  : 					rating [loop] = get_2d_range (pos1, pos2);

  00df7	8b 45 a0	 mov	 eax, DWORD PTR _pos2$[ebp]
  00dfa	50		 push	 eax
  00dfb	8b 4d a4	 mov	 ecx, DWORD PTR _pos1$[ebp]
  00dfe	51		 push	 ecx
  00dff	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00e04	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00e07	8b 45 c0	 mov	 eax, DWORD PTR _rating$[ebp]
  00e0a	d9 1c 90	 fstp	 DWORD PTR [eax+edx*4]
$LN60@initialise:

; 422  : 				}
; 423  : 			}

  00e0d	e9 71 fe ff ff	 jmp	 $LN24@initialise
$LN25@initialise:

; 424  : 
; 425  : 			quicksort_entity_list (artillery_groups, artillery_count, rating);

  00e12	8b 45 c0	 mov	 eax, DWORD PTR _rating$[ebp]
  00e15	50		 push	 eax
  00e16	8b 4d e0	 mov	 ecx, DWORD PTR _artillery_count$[ebp]
  00e19	51		 push	 ecx
  00e1a	8b 55 c4	 mov	 edx, DWORD PTR _artillery_groups$[ebp]
  00e1d	52		 push	 edx
  00e1e	e8 00 00 00 00	 call	 ?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z ; quicksort_entity_list

; 426  : 
; 427  : 			//
; 428  : 			// organise division into companies
; 429  : 			//
; 430  : 			
; 431  : 			convert_float_to_int (a_count, &company_count);

  00e23	8d 45 88	 lea	 eax, DWORD PTR _company_count$2[ebp]
  00e26	50		 push	 eax
  00e27	51		 push	 ecx
  00e28	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _a_count$[ebp]
  00e2d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e32	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 432  : 
; 433  : 			loop = artillery_count - 1;

  00e37	8b 45 e0	 mov	 eax, DWORD PTR _artillery_count$[ebp]
  00e3a	83 e8 01	 sub	 eax, 1
  00e3d	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 434  : 
; 435  : 			for (c = 0; c < company_count; c ++)

  00e40	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _c$3[ebp], 0
  00e47	eb 09		 jmp	 SHORT $LN29@initialise
$LN27@initialise:
  00e49	8b 45 8c	 mov	 eax, DWORD PTR _c$3[ebp]
  00e4c	83 c0 01	 add	 eax, 1
  00e4f	89 45 8c	 mov	 DWORD PTR _c$3[ebp], eax
$LN29@initialise:
  00e52	8b 45 8c	 mov	 eax, DWORD PTR _c$3[ebp]
  00e55	3b 45 88	 cmp	 eax, DWORD PTR _company_count$2[ebp]
  00e58	0f 8d f2 00 00
	00		 jge	 $LN28@initialise

; 436  : 			{
; 437  : 				company = create_new_division (ENTITY_SUB_TYPE_DIVISION_ARTILLERY_COMPANY, (entity_sides) side, division, keysite, TRUE);

  00e5e	6a 01		 push	 1
  00e60	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00e63	50		 push	 eax
  00e64	8b 4d d4	 mov	 ecx, DWORD PTR _division$[ebp]
  00e67	51		 push	 ecx
  00e68	8b 55 ec	 mov	 edx, DWORD PTR _side$[ebp]
  00e6b	52		 push	 edx
  00e6c	6a 0d		 push	 13			; 0000000dH
  00e6e	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  00e73	89 45 84	 mov	 DWORD PTR _company$1[ebp], eax

; 438  : 
; 439  : 				en = artillery_groups [loop];

  00e76	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00e79	8b 4d c4	 mov	 ecx, DWORD PTR _artillery_groups$[ebp]
  00e7c	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00e7f	89 55 dc	 mov	 DWORD PTR _en$[ebp], edx

; 440  : 	
; 441  : 				ASSERT (!get_local_entity_parent (en, LIST_TYPE_DIVISION));

  00e82	83 7d dc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00e86	74 0d		 je	 SHORT $LN121@initialise
  00e88	8b 45 dc	 mov	 eax, DWORD PTR _en$[ebp]
  00e8b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e8d	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv618[ebp], ecx
  00e93	eb 27		 jmp	 SHORT $LN122@initialise
$LN121@initialise:
  00e95	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00e9b	81 c2 5d 01 00
	00		 add	 edx, 349		; 0000015dH
  00ea1	52		 push	 edx
  00ea2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ea7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00eac	50		 push	 eax
  00ead	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00eb2	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv618[ebp], 0
$LN122@initialise:
  00ebc	b9 01 00 00 00	 mov	 ecx, 1
  00ec1	85 c9		 test	 ecx, ecx
  00ec3	74 0c		 je	 SHORT $LN123@initialise
  00ec5	c7 85 3c ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv626[ebp], 11 ; 0000000bH
  00ecf	eb 27		 jmp	 SHORT $LN124@initialise
$LN123@initialise:
  00ed1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00ed7	81 c2 5d 01 00
	00		 add	 edx, 349		; 0000015dH
  00edd	52		 push	 edx
  00ede	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ee3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00ee8	50		 push	 eax
  00ee9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00eee	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv626[ebp], 0
$LN124@initialise:
  00ef8	6a 0b		 push	 11			; 0000000bH
  00efa	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00efd	51		 push	 ecx
  00efe	69 95 40 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv618[ebp], 180
  00f08	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv626[ebp]
  00f0e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00f15	ff d1		 call	 ecx
  00f17	85 c0		 test	 eax, eax
  00f19	74 1a		 je	 SHORT $LN61@initialise
  00f1b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_armoured_divisions@@YGXPAUENTITY@@@Z@4JA
  00f20	05 5d 01 00 00	 add	 eax, 349		; 0000015dH
  00f25	50		 push	 eax
  00f26	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f2b	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@KAINADLB@?$CBget_local_entity_parent?5?$CIen?0?5L@
  00f30	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN61@initialise:

; 442  : 
; 443  : 				add_group_to_division (en, company);

  00f35	8b 45 84	 mov	 eax, DWORD PTR _company$1[ebp]
  00f38	50		 push	 eax
  00f39	8b 4d dc	 mov	 ecx, DWORD PTR _en$[ebp]
  00f3c	51		 push	 ecx
  00f3d	e8 00 00 00 00	 call	 ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ; add_group_to_division

; 444  : 
; 445  : 				loop --;

  00f42	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00f45	83 e8 01	 sub	 eax, 1
  00f48	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 446  : 			}

  00f4b	e9 f9 fe ff ff	 jmp	 $LN27@initialise
$LN28@initialise:

; 447  : 
; 448  : 			free_mem (rating);					

  00f50	8b 45 c0	 mov	 eax, DWORD PTR _rating$[ebp]
  00f53	50		 push	 eax
  00f54	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN55@initialise:

; 449  : 		}
; 450  : 	}

  00f59	e9 09 f7 ff ff	 jmp	 $LN10@initialise
$LN11@initialise:

; 451  : 
; 452  : 	//
; 453  : 	// Check for any groups not in a division
; 454  : 	//
; 455  : 
; 456  : 
; 457  : 	//
; 458  : 	// Free memory
; 459  : 	//
; 460  : 
; 461  : 	if (frontline_groups)

  00f5e	83 7d c8 00	 cmp	 DWORD PTR _frontline_groups$[ebp], 0
  00f62	74 09		 je	 SHORT $LN62@initialise

; 462  : 	{
; 463  : 		free_mem (frontline_groups);

  00f64	8b 45 c8	 mov	 eax, DWORD PTR _frontline_groups$[ebp]
  00f67	50		 push	 eax
  00f68	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN62@initialise:

; 464  : 	}
; 465  : 
; 466  : 	if (artillery_groups)

  00f6d	83 7d c4 00	 cmp	 DWORD PTR _artillery_groups$[ebp], 0
  00f71	74 09		 je	 SHORT $LN63@initialise

; 467  : 	{
; 468  : 		free_mem (artillery_groups);

  00f73	8b 45 c4	 mov	 eax, DWORD PTR _artillery_groups$[ebp]
  00f76	50		 push	 eax
  00f77	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN63@initialise:
$LN1@initialise:

; 469  : 	}
; 470  : }

  00f7c	5f		 pop	 edi
  00f7d	5e		 pop	 esi
  00f7e	5b		 pop	 ebx
  00f7f	8b e5		 mov	 esp, ebp
  00f81	5d		 pop	 ebp
  00f82	c2 04 00	 ret	 4
?initialise_armoured_divisions@@YGXPAUENTITY@@@Z ENDP	; initialise_armoured_divisions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\highlevl\order.c
;	COMDAT ?initialise_order_of_battle@@YGXXZ
_TEXT	SEGMENT
tv146 = -76						; size = 4
tv88 = -76						; size = 4
tv138 = -72						; size = 4
tv80 = -72						; size = 4
_force$ = -4						; size = 4
?initialise_order_of_battle@@YGXXZ PROC			; initialise_order_of_battle, COMDAT

; 689  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 690  : 	entity
; 691  : 		*force;
; 692  : 
; 693  : 	ASSERT (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 18		 jne	 SHORT $LN4@initialise
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@initialise:

; 694  : 
; 695  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00031	74 18		 je	 SHORT $LN5@initialise
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
  00038	83 c0 06	 add	 eax, 6
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 696  : 
; 697  : 	force = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  0004b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00052	74 0c		 je	 SHORT $LN7@initialise
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	89 4d b8	 mov	 DWORD PTR tv80[ebp], ecx
  0005e	eb 21		 jmp	 SHORT $LN8@initialise
$LN7@initialise:
  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
  00066	83 c2 08	 add	 edx, 8
  00069	52		 push	 edx
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN8@initialise:
  00081	b9 01 00 00 00	 mov	 ecx, 1
  00086	85 c9		 test	 ecx, ecx
  00088	74 09		 je	 SHORT $LN9@initialise
  0008a	c7 45 b4 0e 00
	00 00		 mov	 DWORD PTR tv88[ebp], 14	; 0000000eH
  00091	eb 21		 jmp	 SHORT $LN10@initialise
$LN9@initialise:
  00093	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
  00099	83 c2 08	 add	 edx, 8
  0009c	52		 push	 edx
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ad	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN10@initialise:
  000b4	6a 0e		 push	 14			; 0000000eH
  000b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000bc	51		 push	 ecx
  000bd	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000c4	8b 45 b4	 mov	 eax, DWORD PTR tv88[ebp]
  000c7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000ce	ff d1		 call	 ecx
  000d0	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax
$LN2@initialise:

; 698  : 
; 699  : 	while (force)

  000d3	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000d7	0f 84 b2 00 00
	00		 je	 $LN1@initialise

; 700  : 	{
; 701  : 		initialise_armoured_divisions (force);

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?initialise_armoured_divisions@@YGXPAUENTITY@@@Z ; initialise_armoured_divisions

; 702  : 
; 703  : 		initialise_airborne_divisions (force);

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?initialise_airborne_divisions@@YGXPAUENTITY@@@Z ; initialise_airborne_divisions

; 704  : 
; 705  : 		initialise_carrier_divisions (force);

  000ef	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?initialise_carrier_divisions@@YGXPAUENTITY@@@Z ; initialise_carrier_divisions

; 706  : 
; 707  : 		initialise_infantry_divisions (force);

  000f8	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?initialise_infantry_divisions@@YGXPAUENTITY@@@Z ; initialise_infantry_divisions

; 708  : 
; 709  : 		assign_remaining_groups_to_divisions (force);

  00101	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?assign_remaining_groups_to_divisions@@YGXPAUENTITY@@@Z ; assign_remaining_groups_to_divisions

; 710  : 
; 711  : 		#if DEBUG_MODULE
; 712  : 		
; 713  : 		debug_output_force_order_of_battle (force);
; 714  : 
; 715  : 		#endif
; 716  : 
; 717  : 		force = get_local_entity_child_succ (force, LIST_TYPE_FORCE);

  0010a	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  0010e	74 0a		 je	 SHORT $LN11@initialise
  00110	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	89 4d b8	 mov	 DWORD PTR tv138[ebp], ecx
  00118	eb 21		 jmp	 SHORT $LN12@initialise
$LN11@initialise:
  0011a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
  00120	83 c2 1c	 add	 edx, 28			; 0000001cH
  00123	52		 push	 edx
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00129	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00134	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN12@initialise:
  0013b	b9 01 00 00 00	 mov	 ecx, 1
  00140	85 c9		 test	 ecx, ecx
  00142	74 09		 je	 SHORT $LN13@initialise
  00144	c7 45 b4 0e 00
	00 00		 mov	 DWORD PTR tv146[ebp], 14 ; 0000000eH
  0014b	eb 21		 jmp	 SHORT $LN14@initialise
$LN13@initialise:
  0014d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_order_of_battle@@YGXXZ@4JA
  00153	83 c2 1c	 add	 edx, 28			; 0000001cH
  00156	52		 push	 edx
  00157	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BHNANIAA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00167	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN14@initialise:
  0016e	6a 0e		 push	 14			; 0000000eH
  00170	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00173	51		 push	 ecx
  00174	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv138[ebp], 180
  0017b	8b 45 b4	 mov	 eax, DWORD PTR tv146[ebp]
  0017e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00185	ff d1		 call	 ecx
  00187	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 718  : 	}

  0018a	e9 44 ff ff ff	 jmp	 $LN2@initialise
$LN1@initialise:

; 719  : }

  0018f	5f		 pop	 edi
  00190	5e		 pop	 esi
  00191	5b		 pop	 ebx
  00192	8b e5		 mov	 esp, ebp
  00194	5d		 pop	 ebp
  00195	c3		 ret	 0
?initialise_order_of_battle@@YGXXZ ENDP			; initialise_order_of_battle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?floor@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?floor@@YGMM@Z PROC					; floor, COMDAT

; 122  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 123  : 	return (_CSTD floorf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _floorf
  00019	83 c4 04	 add	 esp, 4

; 124  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?floor@@YGMM@Z ENDP					; floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 685  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 686  :             return (float)floor(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__floor
  0001c	83 c4 08	 add	 esp, 8
  0001f	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00022	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 687  :         }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_floorf	ENDP
_TEXT	ENDS
END
