; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?hind_flir@@3UEO_PARAMS@@A			; hind_flir
PUBLIC	?hind_llltv@@3UEO_PARAMS@@A			; hind_llltv
_BSS	SEGMENT
?hind_flir@@3UEO_PARAMS@@A DB 0cH DUP (?)		; hind_flir
?hind_llltv@@3UEO_PARAMS@@A DB 0cH DUP (?)		; hind_llltv
_BSS	ENDS
PUBLIC	?initialise_hind_eo@@YGXXZ			; initialise_hind_eo
PUBLIC	?deinitialise_hind_eo@@YGXXZ			; deinitialise_hind_eo
PUBLIC	?get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_hind_eo_centred_viewpoint
PUBLIC	?update_hind_eo@@YGXPAUEO_PARAMS@@@Z		; update_hind_eo
PUBLIC	?centre_hind_eo@@YGXXZ				; centre_hind_eo
PUBLIC	?animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z	; animate_hind_eo
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA ; `get_hind_eo_centred_viewpoint'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02HPPNELPJ@vp@				; `string'
PUBLIC	??_C@_06DDNABPCD@inst3d@			; `string'
PUBLIC	?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `inc_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	??_C@_02KMMHFIEO@eo@				; `string'
PUBLIC	?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `fast_inc_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `dec_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `fast_dec_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4JA ; `update_hind_eo'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA ; `animate_hind_eo'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@3dd67750
PUBLIC	__real@3e32b8c2
PUBLIC	__real@3f060a92
PUBLIC	__real@3f4c987100000000
PUBLIC	__real@3f567750
PUBLIC	__real@3f71df46a0000000
PUBLIC	__real@3f81df46a0000000
PUBLIC	__real@3f857254c0000000
PUBLIC	__real@3f91df46a0000000
PUBLIC	__real@3fa6571848000000
PUBLIC	__real@3fb1df46a0000000
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fd6571848000000
PUBLIC	__real@3ff6571848000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@40b3880000000000
PUBLIC	__real@459c4000
PUBLIC	__real@bf060a92
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_mouse_update_flag@@YGHXZ:PROC		; get_mouse_update_flag
EXTRN	?get_mouse_move_delta_x@@YGHXZ:PROC		; get_mouse_move_delta_x
EXTRN	?get_mouse_move_delta_y@@YGHXZ:PROC		; get_mouse_move_delta_y
EXTRN	?get_joystick_axis@@YGHHH@Z:PROC		; get_joystick_axis
EXTRN	?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z:PROC ; get_3d_sub_object_world_viewpoint
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?select_next_eo_target@@YGXXZ:PROC		; select_next_eo_target
EXTRN	?select_previous_eo_target@@YGXXZ:PROC		; select_previous_eo_target
EXTRN	?select_next_designated_eo_target@@YGXXZ:PROC	; select_next_designated_eo_target
EXTRN	?select_previous_designated_eo_target@@YGXXZ:PROC ; select_previous_designated_eo_target
EXTRN	?keyboard_slew_eo_system@@YGXMMM@Z:PROC		; keyboard_slew_eo_system
EXTRN	?joystick_slew_eo_system@@YGXM@Z:PROC		; joystick_slew_eo_system
EXTRN	?toggle_ground_stabilisation@@YGXXZ:PROC	; toggle_ground_stabilisation
EXTRN	?handle_ground_stabilisation@@YGXXZ:PROC	; handle_ground_stabilisation
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_mouse_look@@3HA:DWORD		; command_line_mouse_look
EXTRN	?command_line_mouse_look_speed@@3HA:DWORD	; command_line_mouse_look_speed
EXTRN	?command_line_eo_pan_joystick_index@@3HA:DWORD	; command_line_eo_pan_joystick_index
EXTRN	?command_line_eo_zoom_joystick_index@@3HA:DWORD	; command_line_eo_zoom_joystick_index
EXTRN	?command_line_eo_zoom_joystick_axis@@3HA:DWORD	; command_line_eo_zoom_joystick_axis
EXTRN	?command_line_field_of_view_joystick_index@@3HA:DWORD ; command_line_field_of_view_joystick_index
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?joystick_pov_left@@3HA:DWORD			; joystick_pov_left
EXTRN	?joystick_pov_right@@3HA:DWORD			; joystick_pov_right
EXTRN	?joystick_pov_up@@3HA:DWORD			; joystick_pov_up
EXTRN	?joystick_pov_down@@3HA:DWORD			; joystick_pov_down
EXTRN	?single_target_acquisition_system_inc_range_key@@3HA:DWORD ; single_target_acquisition_system_inc_range_key
EXTRN	?single_target_acquisition_system_dec_range_key@@3HA:DWORD ; single_target_acquisition_system_dec_range_key
EXTRN	?single_target_acquisition_system_select_next_target_key@@3HA:DWORD ; single_target_acquisition_system_select_next_target_key
EXTRN	?single_target_acquisition_system_select_previous_target_key@@3HA:DWORD ; single_target_acquisition_system_select_previous_target_key
EXTRN	?single_target_acquisition_system_select_next_designated_key@@3HA:DWORD ; single_target_acquisition_system_select_next_designated_key
EXTRN	?single_target_acquisition_system_select_previous_designated_key@@3HA:DWORD ; single_target_acquisition_system_select_previous_designated_key
EXTRN	?single_target_acquisition_system_inc_range_fast_key@@3HA:DWORD ; single_target_acquisition_system_inc_range_fast_key
EXTRN	?single_target_acquisition_system_dec_range_fast_key@@3HA:DWORD ; single_target_acquisition_system_dec_range_fast_key
EXTRN	?toggle_ground_stabilisation_key@@3HA:DWORD	; toggle_ground_stabilisation_key
EXTRN	?mouse_wheel_up@@3HA:DWORD			; mouse_wheel_up
EXTRN	?mouse_wheel_down@@3HA:DWORD			; mouse_wheel_down
EXTRN	?eo_ground_stabilised@@3HA:DWORD		; eo_ground_stabilised
EXTRN	?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; eo_sensor
EXTRN	?eo_azimuth@@3MA:DWORD				; eo_azimuth
EXTRN	?eo_min_azimuth@@3MA:DWORD			; eo_min_azimuth
EXTRN	?eo_max_azimuth@@3MA:DWORD			; eo_max_azimuth
EXTRN	?eo_elevation@@3MA:DWORD			; eo_elevation
EXTRN	?eo_min_elevation@@3MA:DWORD			; eo_min_elevation
EXTRN	?eo_max_elevation@@3MA:DWORD			; eo_max_elevation
EXTRN	?eo_max_visual_range@@3MA:DWORD			; eo_max_visual_range
EXTRN	__fltused:DWORD
;	COMDAT __real@bf060a92
CONST	SEGMENT
__real@bf060a92 DD 0bf060a92r			; -0.523599
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@40b3880000000000
CONST	SEGMENT
__real@40b3880000000000 DQ 040b3880000000000r	; 5000
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@3ff6571848000000
CONST	SEGMENT
__real@3ff6571848000000 DQ 03ff6571848000000r	; 1.39626
CONST	ENDS
;	COMDAT __real@3fd6571848000000
CONST	SEGMENT
__real@3fd6571848000000 DQ 03fd6571848000000r	; 0.349066
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fb1df46a0000000
CONST	SEGMENT
__real@3fb1df46a0000000 DQ 03fb1df46a0000000r	; 0.0698132
CONST	ENDS
;	COMDAT __real@3fa6571848000000
CONST	SEGMENT
__real@3fa6571848000000 DQ 03fa6571848000000r	; 0.0436332
CONST	ENDS
;	COMDAT __real@3f91df46a0000000
CONST	SEGMENT
__real@3f91df46a0000000 DQ 03f91df46a0000000r	; 0.0174533
CONST	ENDS
;	COMDAT __real@3f857254c0000000
CONST	SEGMENT
__real@3f857254c0000000 DQ 03f857254c0000000r	; 0.010472
CONST	ENDS
;	COMDAT __real@3f81df46a0000000
CONST	SEGMENT
__real@3f81df46a0000000 DQ 03f81df46a0000000r	; 0.00872665
CONST	ENDS
;	COMDAT __real@3f71df46a0000000
CONST	SEGMENT
__real@3f71df46a0000000 DQ 03f71df46a0000000r	; 0.00436332
CONST	ENDS
;	COMDAT __real@3f567750
CONST	SEGMENT
__real@3f567750 DD 03f567750r			; 0.837758
CONST	ENDS
;	COMDAT __real@3f4c987100000000
CONST	SEGMENT
__real@3f4c987100000000 DQ 03f4c987100000000r	; 0.000872665
CONST	ENDS
;	COMDAT __real@3f060a92
CONST	SEGMENT
__real@3f060a92 DD 03f060a92r			; 0.523599
CONST	ENDS
;	COMDAT __real@3e32b8c2
CONST	SEGMENT
__real@3e32b8c2 DD 03e32b8c2r			; 0.174533
CONST	ENDS
;	COMDAT __real@3dd67750
CONST	SEGMENT
__real@3dd67750 DD 03dd67750r			; 0.10472
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA DD 01f6H ; `animate_hind_eo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@ DB 'Invalid fie'
	DB	'ld of view = %d', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?previous_mouse_update_flag@?DB@??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4HA DD 01H ; `update_hind_eo'::`49'::previous_mouse_update_flag
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4JA DD 0d5H ; `update_hind_eo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0caH ; `fast_dec_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0bcH ; `dec_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0b1H ; `fast_inc_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02KMMHFIEO@eo@
CONST	SEGMENT
??_C@_02KMMHFIEO@eo@ DB 'eo', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0a3H ; `inc_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06DDNABPCD@inst3d@
CONST	SEGMENT
??_C@_06DDNABPCD@inst3d@ DB 'inst3d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HPPNELPJ@vp@
CONST	SEGMENT
??_C@_02HPPNELPJ@vp@ DB 'vp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA DD 074H ; `get_hind_eo_centred_viewpoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC	; fast_dec_eo_field_of_view, COMDAT

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 203  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@fast_dec_e
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@fast_dec_e:

; 204  : 
; 205  : 	eo->field_of_view = eo->min_field_of_view;

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 10		 mov	 DWORD PTR [eax], edx

; 206  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP	; fast_dec_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC		; dec_eo_field_of_view, COMDAT

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 189  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@dec_eo_fie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dec_eo_fie:

; 190  : 
; 191  : 	if (eo->field_of_view > eo->min_field_of_view)

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00032	7e 0d		 jle	 SHORT $LN1@dec_eo_fie

; 192  : 	{
; 193  : 		eo->field_of_view--;

  00034	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	83 e9 01	 sub	 ecx, 1
  0003c	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  0003f	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@dec_eo_fie:

; 194  : 	}
; 195  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP		; dec_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC	; fast_inc_eo_field_of_view, COMDAT

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 178  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@fast_inc_e
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@fast_inc_e:

; 179  : 
; 180  : 	eo->field_of_view = eo->max_field_of_view;

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00030	89 10		 mov	 DWORD PTR [eax], edx

; 181  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP	; fast_inc_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC		; inc_eo_field_of_view, COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 164  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_eo_fie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_eo_fie:

; 165  : 
; 166  : 	if (eo->field_of_view < eo->max_field_of_view)

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00032	7d 0d		 jge	 SHORT $LN1@inc_eo_fie

; 167  : 	{
; 168  : 		eo->field_of_view++;

  00034	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	83 c1 01	 add	 ecx, 1
  0003c	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  0003f	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@inc_eo_fie:

; 169  : 	}
; 170  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP		; inc_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z
_TEXT	SEGMENT
_search$ = -56						; size = 56
_inst3d$ = 8						; size = 4
?animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z PROC	; animate_hind_eo, COMDAT

; 502  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 503  : 	object_3d_sub_object_search_data
; 504  : 		search;
; 505  : 
; 506  : 	ASSERT (inst3d);

  00009	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_hi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_hi:

; 507  : 
; 508  : 	search.search_depth = 0;

  00027	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 509  : 	search.search_object = inst3d;

  0002e	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00031	89 45 c8	 mov	 DWORD PTR _search$[ebp], eax

; 510  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_OPTICS;

  00034	c7 45 d4 3c 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 60 ; 0000003cH

; 511  : 
; 512  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0003b	8d 45 c8	 lea	 eax, DWORD PTR _search$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 10		 jne	 SHORT $LN3@animate_hi

; 513  : 	{
; 514  : 		search.result_sub_object->relative_heading = eo_azimuth;

  00049	8b 45 cc	 mov	 eax, DWORD PTR _search$[ebp+4]
  0004c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00054	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
$LN3@animate_hi:

; 515  : 	}
; 516  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ENDP	; animate_hind_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?centre_hind_eo@@YGXXZ
_TEXT	SEGMENT
?centre_hind_eo@@YGXXZ PROC				; centre_hind_eo, COMDAT

; 491  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 492  : 	eo_azimuth = rad (0.0);

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 493  : 
; 494  : 	eo_elevation = rad (0.0);

  00014	0f 57 c0	 xorps	 xmm0, xmm0
  00017	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 495  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?centre_hind_eo@@YGXXZ ENDP				; centre_hind_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?update_hind_eo@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
tv237 = -104						; size = 4
tv232 = -104						; size = 4
tv238 = -100						; size = 4
tv233 = -100						; size = 4
tv84 = -100						; size = 4
_pos$1 = -32						; size = 4
_dp$2 = -28						; size = 4
_dh$3 = -24						; size = 4
_ROTATE_RATE$4 = -20					; size = 4
_coarse_slew_rate$ = -16				; size = 4
_mouse_slew_rate$ = -12					; size = 4
_medium_slew_rate$ = -8					; size = 4
_fine_slew_rate$ = -4					; size = 4
_eo$ = 8						; size = 4
?update_hind_eo@@YGXPAUEO_PARAMS@@@Z PROC		; update_hind_eo, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 214  : 	float
; 215  : 		fine_slew_rate,
; 216  : 		medium_slew_rate,
; 217  : 		mouse_slew_rate, // Jabberwock 030930
; 218  : 		coarse_slew_rate;
; 219  : 
; 220  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN26@update_hin
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@update_hin:

; 221  : 
; 222  : 	////////////////////////////////////////
; 223  : 	//
; 224  : 	// field of view
; 225  : 	//
; 226  : 	////////////////////////////////////////
; 227  : 
; 228  : 	while (single_target_acquisition_system_inc_range_key)

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_inc_range_key@@3HA, 0 ; single_target_acquisition_system_inc_range_key
  0002e	74 18		 je	 SHORT $LN3@update_hin

; 229  : 	{
; 230  : 		dec_eo_field_of_view (eo);

  00030	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; dec_eo_field_of_view

; 231  : 
; 232  : 		single_target_acquisition_system_inc_range_key--;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_inc_range_key@@3HA ; single_target_acquisition_system_inc_range_key
  0003e	83 e8 01	 sub	 eax, 1
  00041	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_inc_range_key@@3HA, eax ; single_target_acquisition_system_inc_range_key

; 233  : 	}

  00046	eb df		 jmp	 SHORT $LN26@update_hin
$LN3@update_hin:

; 234  : 
; 235  : 	while (single_target_acquisition_system_inc_range_fast_key)

  00048	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_inc_range_fast_key@@3HA, 0 ; single_target_acquisition_system_inc_range_fast_key
  0004f	74 18		 je	 SHORT $LN5@update_hin

; 236  : 	{
; 237  : 		fast_dec_eo_field_of_view (eo);

  00051	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; fast_dec_eo_field_of_view

; 238  : 
; 239  : 		single_target_acquisition_system_inc_range_fast_key--;

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_inc_range_fast_key@@3HA ; single_target_acquisition_system_inc_range_fast_key
  0005f	83 e8 01	 sub	 eax, 1
  00062	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_inc_range_fast_key@@3HA, eax ; single_target_acquisition_system_inc_range_fast_key

; 240  : 	}

  00067	eb df		 jmp	 SHORT $LN3@update_hin
$LN5@update_hin:

; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	while (single_target_acquisition_system_dec_range_key)

  00069	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_dec_range_key@@3HA, 0 ; single_target_acquisition_system_dec_range_key
  00070	74 18		 je	 SHORT $LN7@update_hin

; 245  : 	{
; 246  : 		inc_eo_field_of_view (eo);

  00072	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; inc_eo_field_of_view

; 247  : 
; 248  : 		single_target_acquisition_system_dec_range_key--;

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_dec_range_key@@3HA ; single_target_acquisition_system_dec_range_key
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_dec_range_key@@3HA, eax ; single_target_acquisition_system_dec_range_key

; 249  : 	}

  00088	eb df		 jmp	 SHORT $LN5@update_hin
$LN7@update_hin:

; 250  : 
; 251  : 	while (single_target_acquisition_system_dec_range_fast_key)

  0008a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_dec_range_fast_key@@3HA, 0 ; single_target_acquisition_system_dec_range_fast_key
  00091	74 18		 je	 SHORT $LN9@update_hin

; 252  : 	{
; 253  : 		fast_inc_eo_field_of_view (eo);

  00093	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; fast_inc_eo_field_of_view

; 254  : 
; 255  : 		single_target_acquisition_system_dec_range_fast_key--;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_dec_range_fast_key@@3HA ; single_target_acquisition_system_dec_range_fast_key
  000a1	83 e8 01	 sub	 eax, 1
  000a4	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_dec_range_fast_key@@3HA, eax ; single_target_acquisition_system_dec_range_fast_key

; 256  : 	}

  000a9	eb df		 jmp	 SHORT $LN7@update_hin
$LN9@update_hin:

; 257  : 
; 258  : 	////////////////////////////////////////
; 259  : 
; 260  : 	while (toggle_ground_stabilisation_key)

  000ab	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?toggle_ground_stabilisation_key@@3HA, 0 ; toggle_ground_stabilisation_key
  000b2	74 14		 je	 SHORT $LN11@update_hin

; 261  : 	{
; 262  : 		toggle_ground_stabilisation ();

  000b4	e8 00 00 00 00	 call	 ?toggle_ground_stabilisation@@YGXXZ ; toggle_ground_stabilisation

; 263  : 
; 264  : 		toggle_ground_stabilisation_key--;

  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?toggle_ground_stabilisation_key@@3HA ; toggle_ground_stabilisation_key
  000be	83 e8 01	 sub	 eax, 1
  000c1	a3 00 00 00 00	 mov	 DWORD PTR ?toggle_ground_stabilisation_key@@3HA, eax ; toggle_ground_stabilisation_key

; 265  : 	}

  000c6	eb e3		 jmp	 SHORT $LN9@update_hin
$LN11@update_hin:

; 266  : 
; 267  : 	////////////////////////////////////////
; 268  : 
; 269  : 	////////////////////////////////////////
; 270  : 	//
; 271  : 	// slew optics
; 272  : 	//
; 273  : 	////////////////////////////////////////
; 274  : 
; 275  : 	switch (eo->field_of_view)

  000c8	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  000cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cd	89 4d 9c	 mov	 DWORD PTR tv84[ebp], ecx
  000d0	83 7d 9c 01	 cmp	 DWORD PTR tv84[ebp], 1
  000d4	74 15		 je	 SHORT $LN27@update_hin
  000d6	83 7d 9c 02	 cmp	 DWORD PTR tv84[ebp], 2
  000da	74 78		 je	 SHORT $LN28@update_hin
  000dc	83 7d 9c 03	 cmp	 DWORD PTR tv84[ebp], 3
  000e0	0f 84 d0 00 00
	00		 je	 $LN29@update_hin
  000e6	e9 2d 01 00 00	 jmp	 $LN30@update_hin
$LN27@update_hin:

; 276  : 	{
; 277  : 		////////////////////////////////////////
; 278  : 		case EO_FOV_NARROW:
; 279  : 		////////////////////////////////////////
; 280  : 		{
; 281  : 			fine_slew_rate = rad (0.05) * get_delta_time ();

  000eb	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  000f3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f4c987100000000
  000fb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ff	f3 0f 11 45 fc	 movss	 DWORD PTR _fine_slew_rate$[ebp], xmm0

; 282  : 
; 283  : 			medium_slew_rate = rad (0.25) * get_delta_time ();

  00104	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0010c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f71df46a0000000
  00114	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00118	f3 0f 11 45 f8	 movss	 DWORD PTR _medium_slew_rate$[ebp], xmm0

; 284  : 
; 285  : 			mouse_slew_rate = rad (0.6) * get_delta_time ();	// Jabberwock 030930

  0011d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00125	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f857254c0000000
  0012d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00131	f3 0f 11 45 f4	 movss	 DWORD PTR _mouse_slew_rate$[ebp], xmm0

; 286  : 
; 287  : 			coarse_slew_rate = rad (1.0) * get_delta_time ();

  00136	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0013e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  00146	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014a	f3 0f 11 45 f0	 movss	 DWORD PTR _coarse_slew_rate$[ebp], xmm0

; 288  : 
; 289  : 			break;

  0014f	e9 d7 00 00 00	 jmp	 $LN12@update_hin
$LN28@update_hin:

; 290  : 		}
; 291  : 		////////////////////////////////////////
; 292  : 		case EO_FOV_MEDIUM:
; 293  : 		////////////////////////////////////////
; 294  : 		{
; 295  : 			fine_slew_rate = rad (0.5) * get_delta_time ();

  00154	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0015c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f81df46a0000000
  00164	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00168	f3 0f 11 45 fc	 movss	 DWORD PTR _fine_slew_rate$[ebp], xmm0

; 296  : 
; 297  : 			medium_slew_rate = rad (2.5) * get_delta_time ();

  0016d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00175	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa6571848000000
  0017d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00181	f3 0f 11 45 f8	 movss	 DWORD PTR _medium_slew_rate$[ebp], xmm0

; 298  : 
; 299  : 			mouse_slew_rate = rad (6) * get_delta_time ();	// Jabberwock 030930

  00186	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dd67750
  0018e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00196	f3 0f 11 45 f4	 movss	 DWORD PTR _mouse_slew_rate$[ebp], xmm0

; 300  : 
; 301  : 			coarse_slew_rate = rad (10.0) * get_delta_time ();

  0019b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001a3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc6571848000000
  001ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001af	f3 0f 11 45 f0	 movss	 DWORD PTR _coarse_slew_rate$[ebp], xmm0

; 302  : 
; 303  : 			break;

  001b4	eb 75		 jmp	 SHORT $LN12@update_hin
$LN29@update_hin:

; 304  : 		}
; 305  : 		////////////////////////////////////////
; 306  : 		case EO_FOV_WIDE:
; 307  : 		////////////////////////////////////////
; 308  : 		{
; 309  : 			fine_slew_rate = rad (4.0) * get_delta_time ();

  001b6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001be	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb1df46a0000000
  001c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ca	f3 0f 11 45 fc	 movss	 DWORD PTR _fine_slew_rate$[ebp], xmm0

; 310  : 
; 311  : 			medium_slew_rate = rad (20.0) * get_delta_time ();

  001cf	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001d7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd6571848000000
  001df	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e3	f3 0f 11 45 f8	 movss	 DWORD PTR _medium_slew_rate$[ebp], xmm0

; 312  : 
; 313  : 			mouse_slew_rate = rad (48) * get_delta_time ();	// Jabberwock 030930

  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f567750
  001f0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  001f8	f3 0f 11 45 f4	 movss	 DWORD PTR _mouse_slew_rate$[ebp], xmm0

; 314  : 
; 315  : 			coarse_slew_rate = rad (80.0) * get_delta_time ();

  001fd	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00205	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff6571848000000
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	f3 0f 11 45 f0	 movss	 DWORD PTR _coarse_slew_rate$[ebp], xmm0

; 316  : 
; 317  : 			break;

  00216	eb 13		 jmp	 SHORT $LN12@update_hin
$LN30@update_hin:

; 318  : 		}
; 319  : 		////////////////////////////////////////
; 320  : 		default:
; 321  : 		////////////////////////////////////////
; 322  : 		{
; 323  : 			debug_fatal ("Invalid field of view = %d", eo->field_of_view);

  00218	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0021b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021d	51		 push	 ecx
  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@
  00223	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00228	83 c4 08	 add	 esp, 8
$LN12@update_hin:

; 324  : 
; 325  : 			break;
; 326  : 		}
; 327  : 	}
; 328  : 
; 329  : 	////////////////////////////////////////
; 330  : 
; 331  : 	keyboard_slew_eo_system(fine_slew_rate, medium_slew_rate, coarse_slew_rate);

  0022b	51		 push	 ecx
  0022c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00231	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00236	51		 push	 ecx
  00237	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  0023c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00241	51		 push	 ecx
  00242	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  00247	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024c	e8 00 00 00 00	 call	 ?keyboard_slew_eo_system@@YGXMMM@Z ; keyboard_slew_eo_system
$LN14@update_hin:

; 332  : 
; 333  : 	while (single_target_acquisition_system_select_next_target_key)

  00251	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_next_target_key@@3HA, 0 ; single_target_acquisition_system_select_next_target_key
  00258	74 14		 je	 SHORT $LN15@update_hin

; 334  : 	{
; 335  : 		select_next_eo_target ();

  0025a	e8 00 00 00 00	 call	 ?select_next_eo_target@@YGXXZ ; select_next_eo_target

; 336  : 
; 337  : 		single_target_acquisition_system_select_next_target_key--;

  0025f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_next_target_key@@3HA ; single_target_acquisition_system_select_next_target_key
  00264	83 e8 01	 sub	 eax, 1
  00267	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_next_target_key@@3HA, eax ; single_target_acquisition_system_select_next_target_key

; 338  : 	}

  0026c	eb e3		 jmp	 SHORT $LN14@update_hin
$LN15@update_hin:

; 339  : 
; 340  : 	////////////////////////////////////////
; 341  : 
; 342  : 	while (single_target_acquisition_system_select_previous_target_key)

  0026e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_previous_target_key@@3HA, 0 ; single_target_acquisition_system_select_previous_target_key
  00275	74 14		 je	 SHORT $LN17@update_hin

; 343  : 	{
; 344  : 		select_previous_eo_target ();

  00277	e8 00 00 00 00	 call	 ?select_previous_eo_target@@YGXXZ ; select_previous_eo_target

; 345  : 
; 346  : 		single_target_acquisition_system_select_previous_target_key--;

  0027c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_previous_target_key@@3HA ; single_target_acquisition_system_select_previous_target_key
  00281	83 e8 01	 sub	 eax, 1
  00284	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_previous_target_key@@3HA, eax ; single_target_acquisition_system_select_previous_target_key

; 347  : 	}

  00289	eb e3		 jmp	 SHORT $LN15@update_hin
$LN17@update_hin:

; 348  : 
; 349  : // Jabberwock 031107 Designated targets
; 350  : 
; 351  : 	while (single_target_acquisition_system_select_next_designated_key)

  0028b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_next_designated_key@@3HA, 0 ; single_target_acquisition_system_select_next_designated_key
  00292	74 14		 je	 SHORT $LN19@update_hin

; 352  : 	{
; 353  : 		select_next_designated_eo_target ();

  00294	e8 00 00 00 00	 call	 ?select_next_designated_eo_target@@YGXXZ ; select_next_designated_eo_target

; 354  : 
; 355  : 		single_target_acquisition_system_select_next_designated_key--;

  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_next_designated_key@@3HA ; single_target_acquisition_system_select_next_designated_key
  0029e	83 e8 01	 sub	 eax, 1
  002a1	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_next_designated_key@@3HA, eax ; single_target_acquisition_system_select_next_designated_key

; 356  : 	}

  002a6	eb e3		 jmp	 SHORT $LN17@update_hin
$LN19@update_hin:

; 357  : 
; 358  : 	////////////////////////////////////////
; 359  : 
; 360  : 	while (single_target_acquisition_system_select_previous_designated_key)

  002a8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_previous_designated_key@@3HA, 0 ; single_target_acquisition_system_select_previous_designated_key
  002af	74 14		 je	 SHORT $LN21@update_hin

; 361  : 	{
; 362  : 		select_previous_designated_eo_target ();

  002b1	e8 00 00 00 00	 call	 ?select_previous_designated_eo_target@@YGXXZ ; select_previous_designated_eo_target

; 363  : 
; 364  : 		single_target_acquisition_system_select_previous_designated_key--;

  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_previous_designated_key@@3HA ; single_target_acquisition_system_select_previous_designated_key
  002bb	83 e8 01	 sub	 eax, 1
  002be	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_previous_designated_key@@3HA, eax ; single_target_acquisition_system_select_previous_designated_key

; 365  : 	}

  002c3	eb e3		 jmp	 SHORT $LN19@update_hin
$LN21@update_hin:

; 366  : 
; 367  : 	 // POV flir control thealx 130215
; 368  : 		
; 369  : 		if ( (command_line_eo_pan_joystick_index == -1) && (command_line_mouse_look == MOUSELOOK_ON))

  002c5	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_pan_joystick_index@@3HA, -1 ; command_line_eo_pan_joystick_index
  002cc	0f 85 83 01 00
	00		 jne	 $LN31@update_hin
  002d2	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  002d9	0f 85 76 01 00
	00		 jne	 $LN31@update_hin

; 370  : 		{						
; 371  : 			float
; 372  : 				ROTATE_RATE;
; 373  : 
; 374  : 			ROTATE_RATE = (float) command_line_mouse_look_speed / 5.0;

  002df	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  002e7	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002eb	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4014000000000000
  002f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f7	f3 0f 11 45 ec	 movss	 DWORD PTR _ROTATE_RATE$4[ebp], xmm0

; 375  : 
; 376  : 			if (joystick_pov_left)

  002fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_left@@3HA, 0 ; joystick_pov_left
  00303	74 4f		 je	 SHORT $LN33@update_hin

; 377  : 			{
; 378  : 				eo_azimuth -= ROTATE_RATE * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  00305	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ROTATE_RATE$4[ebp]
  0030a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00312	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00317	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  0031f	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00323	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?eo_azimuth@@3MA
  0032b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0032f	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm1

; 379  : 
; 380  : 				eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  00337	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  0033c	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00341	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00346	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0034a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
  00352	eb 52		 jmp	 SHORT $LN35@update_hin
$LN33@update_hin:

; 381  : 			}
; 382  : 			else if (joystick_pov_right)

  00354	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_right@@3HA, 0 ; joystick_pov_right
  0035b	74 49		 je	 SHORT $LN35@update_hin

; 383  : 			{
; 384  : 				eo_azimuth += ROTATE_RATE * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  0035d	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ROTATE_RATE$4[ebp]
  00362	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0036a	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  0036f	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  00377	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0037b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00383	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 385  : 
; 386  : 				eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  0038b	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  00390	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00395	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0039a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0039e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
$LN35@update_hin:

; 387  : 			}
; 388  : 
; 389  : 			if (joystick_pov_up)

  003a6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_up@@3HA, 0 ; joystick_pov_up
  003ad	74 4b		 je	 SHORT $LN36@update_hin

; 390  : 			{
; 391  : 				eo_elevation += ROTATE_RATE * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  003af	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ROTATE_RATE$4[ebp]
  003b4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  003bc	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  003c1	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  003c9	f3 0f 59 c1	 mulss	 xmm0, xmm1
  003cd	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  003d5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 392  : 
; 393  : 				eo_elevation = min (eo_elevation, eo_max_elevation);

  003dd	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  003e2	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  003e7	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003ec	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003f0	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
  003f8	eb 56		 jmp	 SHORT $LN38@update_hin
$LN36@update_hin:

; 394  : 			}
; 395  : 			else if (joystick_pov_down)

  003fa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_down@@3HA, 0 ; joystick_pov_down
  00401	74 4d		 je	 SHORT $LN38@update_hin

; 396  : 			{
; 397  : 				eo_elevation -= ROTATE_RATE * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  00403	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ROTATE_RATE$4[ebp]
  00408	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00410	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00415	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  0041d	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00421	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?eo_elevation@@3MA
  00429	f3 0f 5c c8	 subss	 xmm1, xmm0
  0042d	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm1

; 398  : 
; 399  : 				eo_elevation = max (eo_elevation, eo_min_elevation);

  00435	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  0043a	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  0043f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00444	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00448	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
$LN38@update_hin:

; 400  : 			}
; 401  : 		}

  00450	e9 85 01 00 00	 jmp	 $LN40@update_hin
$LN31@update_hin:

; 402  :   
; 403  : 		// Jabberwock 030930 - Mouse FLIR control functions
; 404  : 		// Improved mouse control thealx 130215
; 405  : 
; 406  : 		else if ((command_line_eo_pan_joystick_index == -1)&&(command_line_mouse_look != MOUSELOOK_ON))

  00455	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_pan_joystick_index@@3HA, -1 ; command_line_eo_pan_joystick_index
  0045c	0f 85 78 01 00
	00		 jne	 $LN40@update_hin
  00462	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  00469	0f 84 6b 01 00
	00		 je	 $LN40@update_hin

; 407  : 		{
; 408  : 			static int previous_mouse_update_flag = 1;
; 409  : 			float dh, dp;
; 410  : 
; 411  : 			if (previous_mouse_update_flag != get_mouse_update_flag())

  0046f	e8 00 00 00 00	 call	 ?get_mouse_update_flag@@YGHXZ ; get_mouse_update_flag
  00474	39 05 00 00 00
	00		 cmp	 DWORD PTR ?previous_mouse_update_flag@?DB@??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4HA, eax
  0047a	0f 84 5a 01 00
	00		 je	 $LN40@update_hin

; 412  : 			{
; 413  : 				dh = get_mouse_move_delta_x() / 5000.0 * mouse_slew_rate * command_line_mouse_look_speed;

  00480	e8 00 00 00 00	 call	 ?get_mouse_move_delta_x@@YGHXZ ; get_mouse_move_delta_x
  00485	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00489	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40b3880000000000
  00491	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _mouse_slew_rate$[ebp]
  00496	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0049a	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  004a2	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  004a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004aa	f3 0f 11 45 e8	 movss	 DWORD PTR _dh$3[ebp], xmm0

; 414  : 				dp = get_mouse_move_delta_y() / 5000.0 * mouse_slew_rate * command_line_mouse_look_speed;

  004af	e8 00 00 00 00	 call	 ?get_mouse_move_delta_y@@YGHXZ ; get_mouse_move_delta_y
  004b4	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  004b8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40b3880000000000
  004c0	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _mouse_slew_rate$[ebp]
  004c5	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  004c9	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  004d1	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  004d5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d9	f3 0f 11 45 e4	 movss	 DWORD PTR _dp$2[ebp], xmm0

; 415  : 
; 416  : 				previous_mouse_update_flag = get_mouse_update_flag();

  004de	e8 00 00 00 00	 call	 ?get_mouse_update_flag@@YGHXZ ; get_mouse_update_flag
  004e3	a3 00 00 00 00	 mov	 DWORD PTR ?previous_mouse_update_flag@?DB@??update_hind_eo@@YGXPAUEO_PARAMS@@@Z@4HA, eax

; 417  : 
; 418  : 				eo_azimuth += dh;

  004e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  004f0	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _dh$3[ebp]
  004f5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 419  : 				eo_azimuth = bound (eo_azimuth, eo_min_azimuth, eo_max_azimuth);

  004fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  00505	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0050c	76 0f		 jbe	 SHORT $LN56@update_hin
  0050e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  00516	f3 0f 11 45 9c	 movss	 DWORD PTR tv233[ebp], xmm0
  0051b	eb 37		 jmp	 SHORT $LN57@update_hin
$LN56@update_hin:
  0051d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00525	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  0052c	76 0f		 jbe	 SHORT $LN54@update_hin
  0052e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  00536	f3 0f 11 45 98	 movss	 DWORD PTR tv232[ebp], xmm0
  0053b	eb 0d		 jmp	 SHORT $LN55@update_hin
$LN54@update_hin:
  0053d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00545	f3 0f 11 45 98	 movss	 DWORD PTR tv232[ebp], xmm0
$LN55@update_hin:
  0054a	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv232[ebp]
  0054f	f3 0f 11 45 9c	 movss	 DWORD PTR tv233[ebp], xmm0
$LN57@update_hin:
  00554	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv233[ebp]
  00559	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 420  : 				eo_elevation -= dp;

  00561	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00569	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _dp$2[ebp]
  0056e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 421  : 				eo_elevation = bound (eo_elevation, eo_min_elevation, eo_max_elevation);

  00576	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  0057e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00585	76 0f		 jbe	 SHORT $LN60@update_hin
  00587	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  0058f	f3 0f 11 45 9c	 movss	 DWORD PTR tv238[ebp], xmm0
  00594	eb 37		 jmp	 SHORT $LN61@update_hin
$LN60@update_hin:
  00596	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  0059e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  005a5	76 0f		 jbe	 SHORT $LN58@update_hin
  005a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  005af	f3 0f 11 45 98	 movss	 DWORD PTR tv237[ebp], xmm0
  005b4	eb 0d		 jmp	 SHORT $LN59@update_hin
$LN58@update_hin:
  005b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  005be	f3 0f 11 45 98	 movss	 DWORD PTR tv237[ebp], xmm0
$LN59@update_hin:
  005c3	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv237[ebp]
  005c8	f3 0f 11 45 9c	 movss	 DWORD PTR tv238[ebp], xmm0
$LN61@update_hin:
  005cd	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv238[ebp]
  005d2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
$LN40@update_hin:

; 422  : 			}
; 423  : 
; 424  : 		}
; 425  : 
; 426  : 			// "Old EO" Zoom control by Joystick thealx 130215 
; 427  : 
; 428  : 		if (command_line_eo_zoom_joystick_index != -1)

  005da	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_zoom_joystick_index@@3HA, -1 ; command_line_eo_zoom_joystick_index
  005e1	74 63		 je	 SHORT $LN41@update_hin

; 429  : 		{
; 430  : 			int pos = get_joystick_axis (command_line_eo_zoom_joystick_index, command_line_eo_zoom_joystick_axis);

  005e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_eo_zoom_joystick_axis@@3HA ; command_line_eo_zoom_joystick_axis
  005e8	50		 push	 eax
  005e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_eo_zoom_joystick_index@@3HA ; command_line_eo_zoom_joystick_index
  005ef	51		 push	 ecx
  005f0	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  005f5	89 45 e0	 mov	 DWORD PTR _pos$1[ebp], eax

; 431  : 
; 432  : 			if (pos < -5500)

  005f8	81 7d e0 84 ea
	ff ff		 cmp	 DWORD PTR _pos$1[ebp], -5500 ; ffffea84H
  005ff	7d 0d		 jge	 SHORT $LN43@update_hin

; 433  : 			{
; 434  : 				eo->field_of_view = eo->min_field_of_view;

  00601	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00604	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  00607	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0060a	89 10		 mov	 DWORD PTR [eax], edx
  0060c	eb 36		 jmp	 SHORT $LN47@update_hin
$LN43@update_hin:

; 435  : 			}
; 436  : 			else if ((pos > -5500) && (pos < 5000))

  0060e	81 7d e0 84 ea
	ff ff		 cmp	 DWORD PTR _pos$1[ebp], -5500 ; ffffea84H
  00615	7e 19		 jle	 SHORT $LN45@update_hin
  00617	81 7d e0 88 13
	00 00		 cmp	 DWORD PTR _pos$1[ebp], 5000 ; 00001388H
  0061e	7d 10		 jge	 SHORT $LN45@update_hin

; 437  : 			{
; 438  : 				eo->field_of_view = eo->min_field_of_view + 1;

  00620	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00623	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00626	83 c1 01	 add	 ecx, 1
  00629	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  0062c	89 0a		 mov	 DWORD PTR [edx], ecx
  0062e	eb 14		 jmp	 SHORT $LN47@update_hin
$LN45@update_hin:

; 439  : 			}
; 440  : 			else if (pos > 5000)

  00630	81 7d e0 88 13
	00 00		 cmp	 DWORD PTR _pos$1[ebp], 5000 ; 00001388H
  00637	7e 0b		 jle	 SHORT $LN47@update_hin

; 441  : 			{
; 442  : 				eo->field_of_view = eo->max_field_of_view;

  00639	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0063c	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0063f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00642	89 10		 mov	 DWORD PTR [eax], edx
$LN47@update_hin:

; 443  : 			}
; 444  : 		}

  00644	eb 76		 jmp	 SHORT $LN25@update_hin
$LN41@update_hin:

; 445  : 		else if ((command_line_mouse_look != MOUSELOOK_ON) || (command_line_field_of_view_joystick_index != -1))

  00646	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  0064d	75 09		 jne	 SHORT $LN49@update_hin
  0064f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_field_of_view_joystick_index@@3HA, -1 ; command_line_field_of_view_joystick_index
  00656	74 64		 je	 SHORT $LN25@update_hin
$LN49@update_hin:

; 446  : 		{
; 447  : 				while (mouse_wheel_down)

  00658	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_down@@3HA, 0 ; mouse_wheel_down
  0065f	74 29		 je	 SHORT $LN23@update_hin

; 448  : 				{
; 449  : 
; 450  : 								 if (eo->field_of_view < eo->max_field_of_view)

  00661	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00664	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  00667	8b 10		 mov	 edx, DWORD PTR [eax]
  00669	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0066c	7d 0d		 jge	 SHORT $LN50@update_hin

; 451  : 								{
; 452  : 										eo->field_of_view++;

  0066e	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00671	8b 08		 mov	 ecx, DWORD PTR [eax]
  00673	83 c1 01	 add	 ecx, 1
  00676	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  00679	89 0a		 mov	 DWORD PTR [edx], ecx
$LN50@update_hin:

; 453  : 								}
; 454  : 
; 455  : 						 mouse_wheel_down--;

  0067b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_down@@3HA ; mouse_wheel_down
  00680	83 e8 01	 sub	 eax, 1
  00683	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_down@@3HA, eax ; mouse_wheel_down

; 456  : 				}

  00688	eb ce		 jmp	 SHORT $LN49@update_hin
$LN23@update_hin:

; 457  : 
; 458  : 				while (mouse_wheel_up)

  0068a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_up@@3HA, 0 ; mouse_wheel_up
  00691	74 29		 je	 SHORT $LN25@update_hin

; 459  : 				{
; 460  : 								 if (eo->field_of_view > eo->min_field_of_view)

  00693	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00696	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  00699	8b 10		 mov	 edx, DWORD PTR [eax]
  0069b	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0069e	7e 0d		 jle	 SHORT $LN51@update_hin

; 461  : 								{
; 462  : 										eo->field_of_view--;

  006a0	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  006a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  006a5	83 e9 01	 sub	 ecx, 1
  006a8	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  006ab	89 0a		 mov	 DWORD PTR [edx], ecx
$LN51@update_hin:

; 463  : 								}
; 464  : 
; 465  : 						mouse_wheel_up--;

  006ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_up@@3HA ; mouse_wheel_up
  006b2	83 e8 01	 sub	 eax, 1
  006b5	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_up@@3HA, eax ; mouse_wheel_up

; 466  : 				}

  006ba	eb ce		 jmp	 SHORT $LN23@update_hin
$LN25@update_hin:

; 467  : 		}
; 468  : 
; 469  : 	// Jabberwock 030930 ends
; 470  : 
; 471  : 	joystick_slew_eo_system(medium_slew_rate);

  006bc	51		 push	 ecx
  006bd	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  006c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c7	e8 00 00 00 00	 call	 ?joystick_slew_eo_system@@YGXM@Z ; joystick_slew_eo_system

; 472  : 
; 473  : 	////////////////////////////////////////
; 474  : 	// loke 030322
; 475  : 	// handle the ground stabilisation
; 476  : 
; 477  : 	if (eo_ground_stabilised)

  006cc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_ground_stabilised@@3HA, 0 ; eo_ground_stabilised
  006d3	74 05		 je	 SHORT $LN52@update_hin

; 478  : 	{
; 479  : 		handle_ground_stabilisation();

  006d5	e8 00 00 00 00	 call	 ?handle_ground_stabilisation@@YGXXZ ; handle_ground_stabilisation
$LN52@update_hin:

; 480  : 	}
; 481  : 
; 482  : 	////////////////////////////////////////
; 483  : 
; 484  : }

  006da	5f		 pop	 edi
  006db	5e		 pop	 esi
  006dc	5b		 pop	 ebx
  006dd	8b e5		 mov	 esp, ebp
  006df	5d		 pop	 ebp
  006e0	c2 04 00	 ret	 4
?update_hind_eo@@YGXPAUEO_PARAMS@@@Z ENDP		; update_hind_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z
_TEXT	SEGMENT
tv140 = -136						; size = 4
tv83 = -136						; size = 4
tv154 = -132						; size = 4
tv132 = -132						; size = 4
tv75 = -132						; size = 4
_search$ = -64						; size = 56
_inst3d$ = -8						; size = 4
_source$ = -4						; size = 4
_vp$ = 8						; size = 4
?get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z PROC ; get_hind_eo_centred_viewpoint, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 117  : 	entity
; 118  : 		*source;
; 119  : 
; 120  : 	object_3d_instance
; 121  : 		*inst3d;
; 122  : 
; 123  : 	object_3d_sub_object_search_data
; 124  : 		search;
; 125  : 
; 126  : 	ASSERT (vp);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _vp$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@get_hind_e
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00017	83 c0 0a	 add	 eax, 10			; 0000000aH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02HPPNELPJ@vp@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_hind_e:

; 127  : 
; 128  : 	source = get_gunship_entity ();

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002f	89 45 fc	 mov	 DWORD PTR _source$[ebp], eax

; 129  : 
; 130  : 	inst3d = (object_3d_instance *) get_local_entity_ptr_value (source, PTR_TYPE_INSTANCE_3D_OBJECT);

  00032	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  00036	74 0d		 je	 SHORT $LN7@get_hind_e
  00038	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00043	eb 24		 jmp	 SHORT $LN8@get_hind_e
$LN7@get_hind_e:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  0004b	83 c2 0e	 add	 edx, 14			; 0000000eH
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN8@get_hind_e:
  00069	b9 01 00 00 00	 mov	 ecx, 1
  0006e	85 c9		 test	 ecx, ecx
  00070	74 0c		 je	 SHORT $LN9@get_hind_e
  00072	c7 85 78 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv83[ebp], 2
  0007c	eb 24		 jmp	 SHORT $LN10@get_hind_e
$LN9@get_hind_e:
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00084	83 c2 0e	 add	 edx, 14			; 0000000eH
  00087	52		 push	 edx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN10@get_hind_e:
  000a2	6a 02		 push	 2
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _source$[ebp]
  000a7	51		 push	 ecx
  000a8	6b 95 7c ff ff
	ff 50		 imul	 edx, DWORD PTR tv75[ebp], 80
  000af	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000bc	ff d1		 call	 ecx
  000be	89 45 f8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 131  : 
; 132  : 	ASSERT (inst3d);

  000c1	83 7d f8 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  000c5	75 18		 jne	 SHORT $LN3@get_hind_e
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  000cc	83 c0 10	 add	 eax, 16			; 00000010H
  000cf	50		 push	 eax
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_hind_e:

; 133  : 
; 134  : 	get_local_entity_vec3d (source, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  000df	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  000e3	74 0d		 je	 SHORT $LN11@get_hind_e
  000e5	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  000f0	eb 24		 jmp	 SHORT $LN12@get_hind_e
$LN11@get_hind_e:
  000f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  000f8	83 c2 12	 add	 edx, 18			; 00000012H
  000fb	52		 push	 edx
  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN12@get_hind_e:
  00116	b9 01 00 00 00	 mov	 ecx, 1
  0011b	85 c9		 test	 ecx, ecx
  0011d	74 0c		 je	 SHORT $LN13@get_hind_e
  0011f	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv140[ebp], 8
  00129	eb 24		 jmp	 SHORT $LN14@get_hind_e
$LN13@get_hind_e:
  0012b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00131	83 c2 12	 add	 edx, 18			; 00000012H
  00134	52		 push	 edx
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00145	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN14@get_hind_e:
  0014f	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00152	83 c1 08	 add	 ecx, 8
  00155	51		 push	 ecx
  00156	6a 08		 push	 8
  00158	8b 55 fc	 mov	 edx, DWORD PTR _source$[ebp]
  0015b	52		 push	 edx
  0015c	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv132[ebp], 96
  00163	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv140[ebp]
  00169	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00170	ff d2		 call	 edx

; 135  : 
; 136  : 	get_local_entity_attitude_matrix (source, inst3d->vp.attitude);

  00172	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  00176	74 0d		 je	 SHORT $LN15@get_hind_e
  00178	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  0017b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv154[ebp], ecx
  00183	eb 24		 jmp	 SHORT $LN16@get_hind_e
$LN15@get_hind_e:
  00185	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  0018b	83 c2 14	 add	 edx, 20			; 00000014H
  0018e	52		 push	 edx
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@KDOOHPIO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv154[ebp], 0
$LN16@get_hind_e:
  001a9	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  001ac	83 c1 14	 add	 ecx, 20			; 00000014H
  001af	51		 push	 ecx
  001b0	8b 55 fc	 mov	 edx, DWORD PTR _source$[ebp]
  001b3	52		 push	 edx
  001b4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv154[ebp]
  001ba	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  001c1	ff d1		 call	 ecx

; 137  : 
; 138  : 	search.search_depth = 0;

  001c3	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 139  : 	search.search_object = inst3d;

  001ca	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  001cd	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 140  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_OPTICS;

  001d0	c7 45 cc 3c 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 60 ; 0000003cH

; 141  : 
; 142  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  001d7	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  001e0	83 f8 01	 cmp	 eax, 1
  001e3	75 0f		 jne	 SHORT $LN4@get_hind_e

; 143  : 	{
; 144  : 		get_3d_sub_object_world_viewpoint (search.result_sub_object, vp);

  001e5	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  001e8	50		 push	 eax
  001e9	8b 4d c4	 mov	 ecx, DWORD PTR _search$[ebp+4]
  001ec	51		 push	 ecx
  001ed	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 145  : 	}
; 146  : 	else

  001f2	eb 15		 jmp	 SHORT $LN5@get_hind_e
$LN4@get_hind_e:

; 147  : 	{
; 148  : 		//
; 149  : 		// can happpen if the object is being destroyed
; 150  : 		//
; 151  : 
; 152  : 		memcpy (&vp->position, &inst3d->vp.position, sizeof (vec3d));

  001f4	6a 0c		 push	 12			; 0000000cH
  001f6	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  001f9	83 c0 08	 add	 eax, 8
  001fc	50		 push	 eax
  001fd	8b 4d 08	 mov	 ecx, DWORD PTR _vp$[ebp]
  00200	51		 push	 ecx
  00201	e8 00 00 00 00	 call	 _memcpy
  00206	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@get_hind_e:

; 153  : 	}
; 154  : 
; 155  : 	memcpy (&vp->attitude, &inst3d->vp.attitude, sizeof (matrix3x3));

  00209	6a 24		 push	 36			; 00000024H
  0020b	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0020e	83 c0 14	 add	 eax, 20			; 00000014H
  00211	50		 push	 eax
  00212	8b 4d 08	 mov	 ecx, DWORD PTR _vp$[ebp]
  00215	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00218	51		 push	 ecx
  00219	e8 00 00 00 00	 call	 _memcpy
  0021e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 156  : }

  00221	5f		 pop	 edi
  00222	5e		 pop	 esi
  00223	5b		 pop	 ebx
  00224	8b e5		 mov	 esp, ebp
  00226	5d		 pop	 ebp
  00227	c2 04 00	 ret	 4
?get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ENDP ; get_hind_eo_centred_viewpoint
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?deinitialise_hind_eo@@YGXXZ
_TEXT	SEGMENT
?deinitialise_hind_eo@@YGXXZ PROC			; deinitialise_hind_eo, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 109  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deinitialise_hind_eo@@YGXXZ ENDP			; deinitialise_hind_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_eo.c
;	COMDAT ?initialise_hind_eo@@YGXXZ
_TEXT	SEGMENT
?initialise_hind_eo@@YGXXZ PROC				; initialise_hind_eo, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 83   : 	eo_sensor							= TARGET_ACQUISITION_SYSTEM_FLIR;

  00009	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 3 ; eo_sensor

; 84   : 
; 85   : 	eo_azimuth							= rad (0.0);

  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 86   : 	eo_min_azimuth						= rad (-30.0);

  0001e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf060a92
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_min_azimuth@@3MA, xmm0

; 87   : 	eo_max_azimuth						= rad (30.0);

  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f060a92
  00036	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_azimuth@@3MA, xmm0

; 88   : 	eo_elevation						= rad (0.0);

  0003e	0f 57 c0	 xorps	 xmm0, xmm0
  00041	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 89   : 	eo_min_elevation					= rad (-30.0);

  00049	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf060a92
  00051	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_min_elevation@@3MA, xmm0

; 90   : 	eo_max_elevation					= rad (10.0);

  00059	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e32b8c2
  00061	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_elevation@@3MA, xmm0

; 91   : 	eo_max_visual_range				= 5000.0,

  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@459c4000
  00071	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_visual_range@@3MA, xmm0
  00079	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_ground_stabilised@@3HA, 0 ; eo_ground_stabilised

; 92   : 	eo_ground_stabilised					= 0;
; 93   : 
; 94   : 	hind_flir.field_of_view		= EO_FOV_WIDE;

  00083	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?hind_flir@@3UEO_PARAMS@@A, 3

; 95   : 	hind_flir.min_field_of_view	= EO_FOV_MEDIUM;

  0008d	c7 05 04 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?hind_flir@@3UEO_PARAMS@@A+4, 2

; 96   : 	hind_flir.max_field_of_view	= EO_FOV_WIDE;

  00097	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?hind_flir@@3UEO_PARAMS@@A+8, 3

; 97   : 
; 98   : 	hind_llltv.field_of_view		= EO_FOV_WIDE;

  000a1	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?hind_llltv@@3UEO_PARAMS@@A, 3

; 99   : 	hind_llltv.min_field_of_view	= EO_FOV_MEDIUM;

  000ab	c7 05 04 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?hind_llltv@@3UEO_PARAMS@@A+4, 2

; 100  : 	hind_llltv.max_field_of_view	= EO_FOV_WIDE;

  000b5	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?hind_llltv@@3UEO_PARAMS@@A+8, 3

; 101  : };

  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?initialise_hind_eo@@YGXXZ ENDP				; initialise_hind_eo
_TEXT	ENDS
END
