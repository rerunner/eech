; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\text\tx_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_text_ui_object_draw_functions@@YGXH@Z	; overload_text_ui_object_draw_functions
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?ui_save_current_font@@YGXXZ:PROC		; ui_save_current_font
EXTRN	?ui_restore_current_font@@YGXXZ:PROC		; ui_restore_current_font
EXTRN	?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z:PROC	; ui_set_object_font
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text_justify
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	__fltused:DWORD
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_draw.c
;	COMDAT ?draw_text_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv286 = -108						; size = 4
tv347 = -104						; size = 4
tv328 = -100						; size = 4
tv273 = -100						; size = 4
_old_active_screen$ = -32				; size = 4
_text_obj$ = -28					; size = 4
_y1$ = -24						; size = 4
_x1$ = -20						; size = 4
_y_origin$ = -16					; size = 4
_x_origin$ = -12					; size = 4
_y_size$ = -8						; size = 4
_x_size$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_text_ui_object@@YGXPAUUI_OBJECT@@@Z PROC		; draw_text_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : 		//hi_x1,
; 78   : 		//hi_y1,
; 79   : 		//hi_x2,
; 80   : 		//hi_y2,
; 81   : 		x_size,
; 82   : 		y_size,
; 83   : 		x_origin,
; 84   : 		y_origin,
; 85   : 		x1,
; 86   : 		y1;
; 87   : 
; 88   : 	text_ui_object
; 89   : 		*text_obj;
; 90   : 
; 91   : 	struct SCREEN
; 92   : 		*old_active_screen;
; 93   : 
; 94   : 	if (get_ui_object_redraw (obj))

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 5d 02 00
	00		 je	 $LN2@draw_text_

; 95   : 	{
; 96   : 	
; 97   : 		text_obj = (text_ui_object *) obj->data;

  00023	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	89 4d e4	 mov	 DWORD PTR _text_obj$[ebp], ecx

; 98   : 	
; 99   : 		x1 = get_ui_object_x (obj);

  0002c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d ec	 fstp	 DWORD PTR _x1$[ebp]

; 100  : 		
; 101  : 		y1 = get_ui_object_y (obj);

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00048	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00051	ff d0		 call	 eax
  00053	d9 5d e8	 fstp	 DWORD PTR _y1$[ebp]

; 102  : 
; 103  : 		x_size = get_ui_object_x_size (get_ui_object_parent (obj)) + get_ui_object_x (get_ui_object_parent (obj));

  00056	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00066	ff d0		 call	 eax
  00068	50		 push	 eax
  00069	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00070	8b 02		 mov	 eax, DWORD PTR [edx]
  00072	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4]
  00079	ff d1		 call	 ecx
  0007b	8b 10		 mov	 edx, DWORD PTR [eax]
  0007d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00084	ff d0		 call	 eax
  00086	d9 5d 9c	 fstp	 DWORD PTR tv273[ebp]
  00089	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv273[ebp]
  0008e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00091	51		 push	 ecx
  00092	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00095	8b 02		 mov	 eax, DWORD PTR [edx]
  00097	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4]
  0009e	f3 0f 11 45 98	 movss	 DWORD PTR tv347[ebp], xmm0
  000a3	ff d1		 call	 ecx
  000a5	50		 push	 eax
  000a6	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  000a9	52		 push	 edx
  000aa	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[ecx*4]
  000b6	ff d2		 call	 edx
  000b8	8b 00		 mov	 eax, DWORD PTR [eax]
  000ba	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000c1	ff d1		 call	 ecx
  000c3	d9 5d 94	 fstp	 DWORD PTR tv286[ebp]
  000c6	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv347[ebp]
  000cb	f3 0f 58 45 94	 addss	 xmm0, DWORD PTR tv286[ebp]
  000d0	f3 0f 11 45 fc	 movss	 DWORD PTR _x_size$[ebp], xmm0

; 104  : 
; 105  : 		y_size = get_ui_object_y_size (obj);

  000d5	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000d8	50		 push	 eax
  000d9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000de	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000e5	ff d0		 call	 eax
  000e7	d9 5d f8	 fstp	 DWORD PTR _y_size$[ebp]

; 106  : 	
; 107  : 		x_origin = get_ui_object_x_origin (obj);

  000ea	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000fa	ff d0		 call	 eax
  000fc	d9 5d f4	 fstp	 DWORD PTR _x_origin$[ebp]

; 108  : 
; 109  : 		y_origin = get_ui_object_y_origin (obj);

  000ff	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00102	50		 push	 eax
  00103	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00106	8b 11		 mov	 edx, DWORD PTR [ecx]
  00108	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0010f	ff d0		 call	 eax
  00111	d9 5d f0	 fstp	 DWORD PTR _y_origin$[ebp]

; 110  : 
; 111  : 		ui_set_origin (x_origin, y_origin);

  00114	51		 push	 ecx
  00115	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  0011a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011f	51		 push	 ecx
  00120	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_origin$[ebp]
  00125	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012a	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 112  : 
; 113  : 		old_active_screen = get_active_screen ();

  0012f	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  00134	89 45 e0	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 114  : 
; 115  : 		if (get_ui_object_active_screen (obj))

  00137	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0013a	50		 push	 eax
  0013b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0013e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00140	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  00147	ff d0		 call	 eax
  00149	85 c0		 test	 eax, eax
  0014b	74 1a		 je	 SHORT $LN3@draw_text_

; 116  : 		{
; 117  : 	
; 118  : 			set_active_screen (get_ui_object_active_screen (obj));

  0014d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00150	50		 push	 eax
  00151	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00154	8b 11		 mov	 edx, DWORD PTR [ecx]
  00156	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  0015d	ff d0		 call	 eax
  0015f	50		 push	 eax
  00160	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 119  : 		}
; 120  : 		else

  00165	eb 0b		 jmp	 SHORT $LN4@draw_text_
$LN3@draw_text_:

; 121  : 		{
; 122  : 
; 123  : 			set_active_screen (video_screen);

  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN4@draw_text_:

; 124  : 		}
; 125  : 
; 126  : 		// debug
; 127  : 		set_active_screen (video_screen);

  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 128  : 		// debug
; 129  : 
; 130  : //		if (lock_screen (active_screen))
; 131  : 		{
; 132  : 	
; 133  : 			//
; 134  : 			// hi-light text if selected
; 135  : 			//
; 136  : 
; 137  : 			ui_save_current_font ();

  0017d	e8 00 00 00 00	 call	 ?ui_save_current_font@@YGXXZ ; ui_save_current_font

; 138  : 
; 139  : 			ui_set_object_font (obj);

  00182	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z ; ui_set_object_font

; 140  : 		
; 141  : 			if ((get_ui_object_text_justify (obj) == TEXT_JUSTIFY_RIGHT_CENTRE) && (text_obj->area.text))

  0018b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0018e	50		 push	 eax
  0018f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00192	8b 11		 mov	 edx, DWORD PTR [ecx]
  00194	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0019b	ff d0		 call	 eax
  0019d	83 f8 02	 cmp	 eax, 2
  001a0	75 27		 jne	 SHORT $LN5@draw_text_
  001a2	8b 45 e4	 mov	 eax, DWORD PTR _text_obj$[ebp]
  001a5	83 78 68 00	 cmp	 DWORD PTR [eax+104], 0
  001a9	74 1e		 je	 SHORT $LN5@draw_text_

; 142  : 			{
; 143  : 
; 144  : 				x1 -= ui_get_string_length (text_obj->area.text);

  001ab	8b 45 e4	 mov	 eax, DWORD PTR _text_obj$[ebp]
  001ae	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  001b1	51		 push	 ecx
  001b2	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  001b7	d9 5d 9c	 fstp	 DWORD PTR tv328[ebp]
  001ba	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001bf	f3 0f 5c 45 9c	 subss	 xmm0, DWORD PTR tv328[ebp]
  001c4	f3 0f 11 45 ec	 movss	 DWORD PTR _x1$[ebp], xmm0
$LN5@draw_text_:

; 145  : 			}
; 146  : 	
; 147  : 			ui_display_text (text_obj->area.text, x1, y1);

  001c9	51		 push	 ecx
  001ca	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d4	51		 push	 ecx
  001d5	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001df	8b 45 e4	 mov	 eax, DWORD PTR _text_obj$[ebp]
  001e2	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  001e5	51		 push	 ecx
  001e6	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  001eb	dd d8		 fstp	 ST(0)

; 148  : 
; 149  : 			ui_restore_current_font ();

  001ed	e8 00 00 00 00	 call	 ?ui_restore_current_font@@YGXXZ ; ui_restore_current_font

; 150  : 	
; 151  : //			unlock_screen (active_screen);
; 152  : 		}
; 153  : 
; 154  : 		set_active_screen (old_active_screen);

  001f2	8b 45 e0	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 155  : 
; 156  : 		set_ui_repaint_area (x1 - 2, y1 - 1, x1 + x_size + 1, y1 + y_size + 1);

  001fb	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00200	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  00205	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0020d	f3 0f 2c c0	 cvttss2si eax, xmm0
  00211	50		 push	 eax
  00212	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00217	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  0021c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00224	f3 0f 2c c8	 cvttss2si ecx, xmm0
  00228	51		 push	 ecx
  00229	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0022e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00236	f3 0f 2c d0	 cvttss2si edx, xmm0
  0023a	52		 push	 edx
  0023b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00240	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40000000
  00248	f3 0f 2c c0	 cvttss2si eax, xmm0
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area

; 157  : 
; 158  : 		text_obj->area.redraw --;

  00252	8b 45 e4	 mov	 eax, DWORD PTR _text_obj$[ebp]
  00255	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00258	c1 e9 07	 shr	 ecx, 7
  0025b	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00261	83 e9 01	 sub	 ecx, 1
  00264	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0026a	c1 e1 07	 shl	 ecx, 7
  0026d	8b 55 e4	 mov	 edx, DWORD PTR _text_obj$[ebp]
  00270	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00273	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  00278	0b c1		 or	 eax, ecx
  0027a	8b 4d e4	 mov	 ecx, DWORD PTR _text_obj$[ebp]
  0027d	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
$LN2@draw_text_:

; 159  : 	}
; 160  : }

  00280	5f		 pop	 edi
  00281	5e		 pop	 esi
  00282	5b		 pop	 ebx
  00283	8b e5		 mov	 esp, ebp
  00285	5d		 pop	 ebp
  00286	c2 04 00	 ret	 4
?draw_text_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP		; draw_text_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_draw.c
;	COMDAT ?overload_text_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_text_ui_object_draw_functions@@YGXH@Z PROC	; overload_text_ui_object_draw_functions, COMDAT

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 168  : 
; 169  : 	fn_draw_ui_object [type] = draw_text_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_text_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_text_ui_object

; 170  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_text_ui_object_draw_functions@@YGXH@Z ENDP	; overload_text_ui_object_draw_functions
_TEXT	ENDS
END
