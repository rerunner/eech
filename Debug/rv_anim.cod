; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_anim.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z ; animate_routed_vehicle_wheels
PUBLIC	?set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z ; set_initial_rotation_angle_of_routed_vehicle_wheels
PUBLIC	?damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z ; damage_routed_vehicle_3d_object
PUBLIC	?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z	; set_routed_vehicle_id_number
PUBLIC	?__LINE__Var@?0??animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z@4JA ; `animate_routed_vehicle_wheels'::`1'::__LINE__Var
PUBLIC	??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z@4JA ; `set_initial_rotation_angle_of_routed_vehicle_wheels'::`1'::__LINE__Var
PUBLIC	??_C@_06DDNABPCD@inst3d@			; `string'
PUBLIC	?__LINE__Var@?0??damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z@4JA ; `damage_routed_vehicle_3d_object'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA ; `set_routed_vehicle_id_number'::`1'::__LINE__Var
PUBLIC	__real@0000000000000000
PUBLIC	__real@3e20d97c
PUBLIC	__real@3f10000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@400921fb60000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@c0000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?advance_texture_animation_frame_on_object@@YGHPAUOBJECT_3D_INSTANCE@@W4TEXTURE_ANIMATION_INDICES@@@Z:PROC ; advance_texture_animation_frame_on_object
EXTRN	?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; construct_3d_object
EXTRN	?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; destruct_3d_object
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z:PROC ; set_local_entity_id_number
EXTRN	?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z:PROC ; activate_and_modify_sub_object_type_heading_pitch_and_roll
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?get_time_acceleration@@YGHXZ:PROC		; get_time_acceleration
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?in_flight_articulation_test@@3HA:DWORD		; in_flight_articulation_test
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?test_speed@@3MA DD 01H DUP (?)				; test_speed
_BSS	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@400921fb60000000
CONST	SEGMENT
__real@400921fb60000000 DQ 0400921fb60000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3e20d97c
CONST	SEGMENT
__real@3e20d97c DD 03e20d97cr			; 0.15708
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA DD 0169H ; `set_routed_vehicle_id_number'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z@4JA DD 0147H ; `damage_routed_vehicle_3d_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06DDNABPCD@inst3d@
CONST	SEGMENT
??_C@_06DDNABPCD@inst3d@ DB 'inst3d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z@4JA DD 0fbH ; `set_initial_rotation_angle_of_routed_vehicle_wheels'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nhv'
	DB	'90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\'
	DB	'rv_anim.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z@4JA DD 05dH ; `animate_routed_vehicle_wheels'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?test_speed_inc@@3MA DD 040000000r		; 2	; test_speed_inc
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_anim.c
;	COMDAT ?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z PROC	; set_routed_vehicle_id_number, COMDAT

; 361  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 362  : 	routed_vehicle
; 363  : 		*raw;
; 364  : 
; 365  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_routed
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_routed:

; 366  : 
; 367  : 	raw = (routed_vehicle *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 368  : 
; 369  : 	if (raw->vh.mob.side == ENTITY_SIDE_BLUE_FORCE)

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00036	d1 e9		 shr	 ecx, 1
  00038	83 e1 03	 and	 ecx, 3
  0003b	83 f9 01	 cmp	 ecx, 1
  0003e	75 1b		 jne	 SHORT $LN3@set_routed

; 370  : 	{
; 371  : 		set_local_entity_id_number

  00040	68 92 00 00 00	 push	 146			; 00000092H
  00045	68 92 00 00 00	 push	 146			; 00000092H
  0004a	6a 71		 push	 113			; 00000071H
  0004c	6a 6c		 push	 108			; 0000006cH
  0004e	6a 6b		 push	 107			; 0000006bH
  00050	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z ; set_local_entity_id_number
  00059	eb 29		 jmp	 SHORT $LN1@set_routed
$LN3@set_routed:

; 372  : 		(
; 373  : 			en,
; 374  : 			TEXTURE_ANIMATION_INDEX_USA_TANK_DIGIT__000,
; 375  : 			TEXTURE_ANIMATION_INDEX_USA_TANK_DIGIT__001,
; 376  : 			TEXTURE_ANIMATION_INDEX_USA_TANK_DIGIT__002,
; 377  : 			TEXTURE_ANIMATION_INDEX_LAST,
; 378  : 			TEXTURE_ANIMATION_INDEX_LAST
; 379  : 		);
; 380  : 	}
; 381  : 	else if (raw->vh.mob.side == ENTITY_SIDE_RED_FORCE)

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005e	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00061	d1 e9		 shr	 ecx, 1
  00063	83 e1 03	 and	 ecx, 3
  00066	83 f9 02	 cmp	 ecx, 2
  00069	75 19		 jne	 SHORT $LN1@set_routed

; 382  : 	{
; 383  : 		set_local_entity_id_number

  0006b	68 92 00 00 00	 push	 146			; 00000092H
  00070	68 92 00 00 00	 push	 146			; 00000092H
  00075	6a 70		 push	 112			; 00000070H
  00077	6a 6f		 push	 111			; 0000006fH
  00079	6a 6e		 push	 110			; 0000006eH
  0007b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z ; set_local_entity_id_number
$LN1@set_routed:

; 384  : 		(
; 385  : 			en,
; 386  : 			TEXTURE_ANIMATION_INDEX_CIS_TANK_DIGIT__000,
; 387  : 			TEXTURE_ANIMATION_INDEX_CIS_TANK_DIGIT__001,
; 388  : 			TEXTURE_ANIMATION_INDEX_CIS_TANK_DIGIT__002,
; 389  : 			TEXTURE_ANIMATION_INDEX_LAST,
; 390  : 			TEXTURE_ANIMATION_INDEX_LAST
; 391  : 		);
; 392  : 	}
; 393  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z ENDP	; set_routed_vehicle_id_number
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_anim.c
;	COMDAT ?damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv89 = -76						; size = 4
tv81 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z PROC	; damage_routed_vehicle_3d_object, COMDAT

; 327  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 328  : 	routed_vehicle
; 329  : 		*raw;
; 330  : 
; 331  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@damage_rou
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@damage_rou:

; 332  : 
; 333  : 	raw = (routed_vehicle *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 334  : 
; 335  : 	//
; 336  : 	// destruct old object
; 337  : 	//
; 338  : 
; 339  : 	destruct_3d_object (raw->vh.inst3d);

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; destruct_3d_object

; 340  : 
; 341  : 	//
; 342  : 	// construct new (damaged) object
; 343  : 	//
; 344  : 
; 345  : 	raw->vh.object_3d_shape = get_local_entity_int_value (en, INT_TYPE_DESTROYED_3D_SHAPE);

  0003f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00043	74 0a		 je	 SHORT $LN4@damage_rou
  00045	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d b8	 mov	 DWORD PTR tv81[ebp], ecx
  0004d	eb 21		 jmp	 SHORT $LN5@damage_rou
$LN4@damage_rou:
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z@4JA
  00055	83 c2 12	 add	 edx, 18			; 00000012H
  00058	52		 push	 edx
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00069	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN5@damage_rou:
  00070	b9 01 00 00 00	 mov	 ecx, 1
  00075	85 c9		 test	 ecx, ecx
  00077	74 09		 je	 SHORT $LN6@damage_rou
  00079	c7 45 b4 2e 00
	00 00		 mov	 DWORD PTR tv89[ebp], 46	; 0000002eH
  00080	eb 21		 jmp	 SHORT $LN7@damage_rou
$LN6@damage_rou:
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z@4JA
  00088	83 c2 12	 add	 edx, 18			; 00000012H
  0008b	52		 push	 edx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN7@damage_rou:
  000a3	6a 2e		 push	 46			; 0000002eH
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a8	51		 push	 ecx
  000a9	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv81[ebp], 1116
  000b0	8b 45 b4	 mov	 eax, DWORD PTR tv89[ebp]
  000b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ba	ff d1		 call	 ecx
  000bc	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000bf	89 82 80 00 00
	00		 mov	 DWORD PTR [edx+128], eax

; 346  : 
; 347  : 	raw->vh.inst3d = construct_3d_object (raw->vh.object_3d_shape);

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c8	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 ?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z ; construct_3d_object
  000d4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000d7	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax

; 348  : 
; 349  : 	//
; 350  : 	// set id number for new object
; 351  : 	//
; 352  : 
; 353  : 	set_routed_vehicle_id_number (en);

  000dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z ; set_routed_vehicle_id_number

; 354  : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
?damage_routed_vehicle_3d_object@@YGXPAUENTITY@@@Z ENDP	; damage_routed_vehicle_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_anim.c
;	COMDAT ?set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z
_TEXT	SEGMENT
_ang$ = -64						; size = 4
_depth$ = -60						; size = 4
_search$ = -56						; size = 56
_inst3d$ = 8						; size = 4
?set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z PROC ; set_initial_rotation_angle_of_routed_vehicle_wheels, COMDAT

; 251  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 252  : 	object_3d_sub_object_search_data
; 253  : 		search;
; 254  : 
; 255  : 	int
; 256  : 		depth;
; 257  : 
; 258  : 	float
; 259  : 		ang;
; 260  : 
; 261  : 	//
; 262  : 	// vary wheel start positions (ok to use a random number as this is for visual effect only)
; 263  : 	//
; 264  : 
; 265  : 	ASSERT (inst3d);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@set_initia
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@set_initia:

; 266  : 
; 267  : 	//
; 268  : 	// fixed wheels
; 269  : 	//
; 270  : 
; 271  : 	depth = 0;

  0002a	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN2@set_initia:

; 272  : 
; 273  : 	while (TRUE)

  00031	b8 01 00 00 00	 mov	 eax, 1
  00036	85 c0		 test	 eax, eax
  00038	0f 84 86 00 00
	00		 je	 $LN3@set_initia

; 274  : 	{
; 275  : 		search.search_depth = depth;

  0003e	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  00041	89 45 d0	 mov	 DWORD PTR _search$[ebp+8], eax

; 276  : 		search.search_object = inst3d;

  00044	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00047	89 45 c8	 mov	 DWORD PTR _search$[ebp], eax

; 277  : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_FIXED_WHEEL;

  0004a	c7 45 d4 15 01
	00 00		 mov	 DWORD PTR _search$[ebp+12], 277 ; 00000115H

; 278  : 
; 279  : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00051	8d 45 c8	 lea	 eax, DWORD PTR _search$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0005a	83 f8 01	 cmp	 eax, 1
  0005d	75 55		 jne	 SHORT $LN7@set_initia

; 280  : 		{
; 281  : 			ang = sfrand1() * PI;

  0005f	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00069	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0006e	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00079	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0007c	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00082	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00088	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  0008c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00094	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb60000000
  0009c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a0	f3 0f 11 45 c0	 movss	 DWORD PTR _ang$[ebp], xmm0

; 282  : 
; 283  : 			search.result_sub_object->relative_pitch = ang;

  000a5	8b 45 cc	 mov	 eax, DWORD PTR _search$[ebp+4]
  000a8	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _ang$[ebp]
  000ad	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 284  : 		}
; 285  : 		else

  000b2	eb 02		 jmp	 SHORT $LN8@set_initia
$LN7@set_initia:

; 286  : 		{
; 287  : 			break;

  000b4	eb 0e		 jmp	 SHORT $LN3@set_initia
$LN8@set_initia:

; 288  : 		}
; 289  : 
; 290  : 		depth++;

  000b6	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  000b9	83 c0 01	 add	 eax, 1
  000bc	89 45 c4	 mov	 DWORD PTR _depth$[ebp], eax

; 291  : 	}

  000bf	e9 6d ff ff ff	 jmp	 $LN2@set_initia
$LN3@set_initia:

; 292  : 
; 293  : 	//
; 294  : 	// steerable wheels
; 295  : 	//
; 296  : 
; 297  : 	depth = 0;

  000c4	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN4@set_initia:

; 298  : 
; 299  : 	while (TRUE)

  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	85 c0		 test	 eax, eax
  000d2	0f 84 86 00 00
	00		 je	 $LN5@set_initia

; 300  : 	{
; 301  : 		search.search_depth = depth;

  000d8	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  000db	89 45 d0	 mov	 DWORD PTR _search$[ebp+8], eax

; 302  : 		search.search_object = inst3d;

  000de	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000e1	89 45 c8	 mov	 DWORD PTR _search$[ebp], eax

; 303  : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_STEERABLE_WHEEL;

  000e4	c7 45 d4 14 01
	00 00		 mov	 DWORD PTR _search$[ebp+12], 276 ; 00000114H

; 304  : 
; 305  : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000eb	8d 45 c8	 lea	 eax, DWORD PTR _search$[ebp]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  000f4	83 f8 01	 cmp	 eax, 1
  000f7	75 55		 jne	 SHORT $LN9@set_initia

; 306  : 		{
; 307  : 			ang = sfrand1() * PI;

  000f9	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00103	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00108	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0010d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00113	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00116	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0011c	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00122	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00126	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  0012e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb60000000
  00136	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013a	f3 0f 11 45 c0	 movss	 DWORD PTR _ang$[ebp], xmm0

; 308  : 
; 309  : 			search.result_sub_object->relative_pitch = ang;

  0013f	8b 45 cc	 mov	 eax, DWORD PTR _search$[ebp+4]
  00142	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _ang$[ebp]
  00147	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 310  : 		}
; 311  : 		else

  0014c	eb 02		 jmp	 SHORT $LN10@set_initia
$LN9@set_initia:

; 312  : 		{
; 313  : 			break;

  0014e	eb 0e		 jmp	 SHORT $LN5@set_initia
$LN10@set_initia:

; 314  : 		}
; 315  : 
; 316  : 		depth++;

  00150	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  00153	83 c0 01	 add	 eax, 1
  00156	89 45 c4	 mov	 DWORD PTR _depth$[ebp], eax

; 317  : 	}

  00159	e9 6d ff ff ff	 jmp	 $LN4@set_initia
$LN5@set_initia:

; 318  : 
; 319  : 	return TRUE;

  0015e	b8 01 00 00 00	 mov	 eax, 1

; 320  : }

  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 04 00	 ret	 4
?set_initial_rotation_angle_of_routed_vehicle_wheels@@YGHPAUOBJECT_3D_INSTANCE@@@Z ENDP ; set_initial_rotation_angle_of_routed_vehicle_wheels
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_anim.c
;	COMDAT ?animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv158 = -100						; size = 8
tv175 = -92						; size = 4
tv159 = -92						; size = 8
tv134 = -92						; size = 4
tv81 = -92						; size = 4
tv222 = -88						; size = 4
tv200 = -88						; size = 4
tv183 = -88						; size = 4
tv167 = -88						; size = 4
tv95 = -88						; size = 4
tv74 = -88						; size = 4
_blurred_flag$ = -20					; size = 4
_delta_pitch$ = -16					; size = 4
_speed$ = -12						; size = 4
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z PROC	; animate_routed_vehicle_wheels, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 	routed_vehicle
; 95   : 		*raw;
; 96   : 
; 97   : 	object_3d_instance
; 98   : 		*inst3d;
; 99   : 
; 100  : 	float
; 101  : 		speed,
; 102  : 		delta_pitch;
; 103  : 
; 104  : 	int
; 105  : 		blurred_flag;
; 106  : 
; 107  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_ro
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0e	 add	 eax, 14			; 0000000eH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ro:

; 108  : 
; 109  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@animate_ro
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d a8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1a		 jmp	 SHORT $LN20@animate_ro
$LN19@animate_ro:
  00037	6a 6d		 push	 109			; 0000006dH
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN20@animate_ro:
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	85 c0		 test	 eax, eax
  00058	74 09		 je	 SHORT $LN21@animate_ro
  0005a	c7 45 a4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00061	eb 1a		 jmp	 SHORT $LN22@animate_ro
$LN21@animate_ro:
  00063	6a 6d		 push	 109			; 0000006dH
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00076	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN22@animate_ro:
  0007d	68 93 00 00 00	 push	 147			; 00000093H
  00082	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00085	52		 push	 edx
  00086	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  0008d	8b 4d a4	 mov	 ecx, DWORD PTR tv81[ebp]
  00090	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00097	ff d2		 call	 edx
  00099	85 c0		 test	 eax, eax
  0009b	74 05		 je	 SHORT $LN3@animate_ro

; 110  : 	{
; 111  : 		return;

  0009d	e9 cf 03 00 00	 jmp	 $LN1@animate_ro
$LN3@animate_ro:

; 112  : 	}
; 113  : 
; 114  :    if (get_time_acceleration () == TIME_ACCELERATION_PAUSE)

  000a2	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  000a7	85 c0		 test	 eax, eax
  000a9	75 05		 jne	 SHORT $LN4@animate_ro

; 115  : 	{
; 116  : 		return;

  000ab	e9 c1 03 00 00	 jmp	 $LN1@animate_ro
$LN4@animate_ro:

; 117  : 	}
; 118  : 
; 119  : 	if (!get_local_entity_int_value (en, INT_TYPE_MOBILE_MOVING))

  000b0	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b4	74 0a		 je	 SHORT $LN23@animate_ro
  000b6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	89 4d a8	 mov	 DWORD PTR tv95[ebp], ecx
  000be	eb 1a		 jmp	 SHORT $LN24@animate_ro
$LN23@animate_ro:
  000c0	6a 77		 push	 119			; 00000077H
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d3	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN24@animate_ro:
  000da	b8 01 00 00 00	 mov	 eax, 1
  000df	85 c0		 test	 eax, eax
  000e1	74 09		 je	 SHORT $LN25@animate_ro
  000e3	c7 45 a4 8e 00
	00 00		 mov	 DWORD PTR tv134[ebp], 142 ; 0000008eH
  000ea	eb 1a		 jmp	 SHORT $LN26@animate_ro
$LN25@animate_ro:
  000ec	6a 77		 push	 119			; 00000077H
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f9	51		 push	 ecx
  000fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ff	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN26@animate_ro:
  00106	68 8e 00 00 00	 push	 142			; 0000008eH
  0010b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0010e	52		 push	 edx
  0010f	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv95[ebp], 1116
  00116	8b 4d a4	 mov	 ecx, DWORD PTR tv134[ebp]
  00119	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00120	ff d2		 call	 edx
  00122	85 c0		 test	 eax, eax
  00124	75 05		 jne	 SHORT $LN5@animate_ro

; 120  : 	{
; 121  : 		return;

  00126	e9 46 03 00 00	 jmp	 $LN1@animate_ro
$LN5@animate_ro:

; 122  : 	}
; 123  : 
; 124  : 	raw = (routed_vehicle *) get_local_entity_data (en);

  0012b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0012e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00131	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 125  : 
; 126  : 	inst3d = raw->vh.inst3d;

  00134	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00137	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0013d	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 127  : 
; 128  : 	if ( ( in_flight_articulation_test ) && ( get_external_view_entity() == en ) )

  00140	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  00147	0f 84 e5 00 00
	00		 je	 $LN6@animate_ro
  0014d	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00152	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  00155	0f 85 d7 00 00
	00		 jne	 $LN6@animate_ro

; 129  : 	{
; 130  : 		//
; 131  : 		// debug articulation test
; 132  : 		//
; 133  : 
; 134  : 		test_speed += ( test_speed_inc * get_delta_time() );

  0015b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?test_speed_inc@@3MA
  00163	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0016b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?test_speed@@3MA
  00173	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_speed@@3MA, xmm0

; 135  : 
; 136  : 		if ( test_speed > TEST_SPEED_MAX )

  0017b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_speed@@3MA
  00183	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4020000000000000
  0018b	76 12		 jbe	 SHORT $LN8@animate_ro

; 137  : 		{
; 138  : 			test_speed_inc = -TEST_SPEED_INC;

  0018d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0000000
  00195	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_speed_inc@@3MA, xmm0
  0019d	eb 21		 jmp	 SHORT $LN10@animate_ro
$LN8@animate_ro:

; 139  : 		}
; 140  : 		else if ( test_speed <= 0.0 )

  0019f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_speed@@3MA
  001a7	0f 57 c9	 xorps	 xmm1, xmm1
  001aa	66 0f 2f c8	 comisd	 xmm1, xmm0
  001ae	72 10		 jb	 SHORT $LN10@animate_ro

; 141  : 		{
; 142  : 			test_speed_inc = TEST_SPEED_INC;

  001b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  001b8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_speed_inc@@3MA, xmm0
$LN10@animate_ro:

; 143  : 		}
; 144  : 
; 145  : 		test_speed = bound( test_speed, 0.0, TEST_SPEED_MAX );

  001c0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_speed@@3MA
  001c8	0f 57 c9	 xorps	 xmm1, xmm1
  001cb	66 0f 2f c8	 comisd	 xmm1, xmm0
  001cf	76 0a		 jbe	 SHORT $LN29@animate_ro
  001d1	0f 57 c0	 xorps	 xmm0, xmm0
  001d4	f2 0f 11 45 a4	 movsd	 QWORD PTR tv159[ebp], xmm0
  001d9	eb 38		 jmp	 SHORT $LN30@animate_ro
$LN29@animate_ro:
  001db	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_speed@@3MA
  001e3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4020000000000000
  001eb	76 0f		 jbe	 SHORT $LN27@animate_ro
  001ed	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4020000000000000
  001f5	f2 0f 11 45 9c	 movsd	 QWORD PTR tv158[ebp], xmm0
  001fa	eb 0d		 jmp	 SHORT $LN28@animate_ro
$LN27@animate_ro:
  001fc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_speed@@3MA
  00204	f2 0f 11 45 9c	 movsd	 QWORD PTR tv158[ebp], xmm0
$LN28@animate_ro:
  00209	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv158[ebp]
  0020e	f2 0f 11 45 a4	 movsd	 QWORD PTR tv159[ebp], xmm0
$LN30@animate_ro:
  00213	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv159[ebp]
  00218	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_speed@@3MA, xmm0

; 146  : 
; 147  : 		speed = test_speed;

  00220	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?test_speed@@3MA
  00228	f3 0f 11 45 f4	 movss	 DWORD PTR _speed$[ebp], xmm0

; 148  : 	}
; 149  : 	else

  0022d	e9 83 00 00 00	 jmp	 $LN7@animate_ro
$LN6@animate_ro:

; 150  : 	{
; 151  : 		//
; 152  : 		// normal operation
; 153  : 		//
; 154  : 
; 155  : 		speed = get_local_entity_float_value( en, FLOAT_TYPE_VELOCITY );

  00232	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00236	74 0a		 je	 SHORT $LN31@animate_ro
  00238	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0023b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023d	89 4d a8	 mov	 DWORD PTR tv167[ebp], ecx
  00240	eb 21		 jmp	 SHORT $LN32@animate_ro
$LN31@animate_ro:
  00242	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z@4JA
  00248	83 c2 3e	 add	 edx, 62			; 0000003eH
  0024b	52		 push	 edx
  0024c	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00251	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN32@animate_ro:
  00263	b9 01 00 00 00	 mov	 ecx, 1
  00268	85 c9		 test	 ecx, ecx
  0026a	74 09		 je	 SHORT $LN33@animate_ro
  0026c	c7 45 a4 93 00
	00 00		 mov	 DWORD PTR tv175[ebp], 147 ; 00000093H
  00273	eb 21		 jmp	 SHORT $LN34@animate_ro
$LN33@animate_ro:
  00275	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z@4JA
  0027b	83 c2 3e	 add	 edx, 62			; 0000003eH
  0027e	52		 push	 edx
  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@OBNANDG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00284	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN34@animate_ro:
  00296	68 93 00 00 00	 push	 147			; 00000093H
  0029b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0029e	51		 push	 ecx
  0029f	69 55 a8 bc 02
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 700
  002a6	8b 45 a4	 mov	 eax, DWORD PTR tv175[ebp]
  002a9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002b0	ff d1		 call	 ecx
  002b2	d9 5d f4	 fstp	 DWORD PTR _speed$[ebp]
$LN7@animate_ro:

; 156  : 	}
; 157  : 
; 158  : 	blurred_flag = ( speed > BLURRED_WHEEL_THRESHOLD );

  002b5	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _speed$[ebp]
  002ba	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4008000000000000
  002c2	76 09		 jbe	 SHORT $LN35@animate_ro
  002c4	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv183[ebp], 1
  002cb	eb 07		 jmp	 SHORT $LN36@animate_ro
$LN35@animate_ro:
  002cd	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv183[ebp], 0
$LN36@animate_ro:
  002d4	8b 45 a8	 mov	 eax, DWORD PTR tv183[ebp]
  002d7	89 45 ec	 mov	 DWORD PTR _blurred_flag$[ebp], eax

; 159  : 
; 160  : 	if ( blurred_flag )

  002da	83 7d ec 00	 cmp	 DWORD PTR _blurred_flag$[ebp], 0
  002de	74 0f		 je	 SHORT $LN11@animate_ro

; 161  : 	{
; 162  : 		delta_pitch = PI / 20.0;

  002e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e20d97c
  002e8	f3 0f 11 45 f0	 movss	 DWORD PTR _delta_pitch$[ebp], xmm0

; 163  : 	}
; 164  : 	else

  002ed	eb 1a		 jmp	 SHORT $LN12@animate_ro
$LN11@animate_ro:

; 165  : 	{
; 166  : 		delta_pitch = 2 * speed * get_delta_time ();

  002ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  002f7	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _speed$[ebp]
  002fc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00304	f3 0f 11 45 f0	 movss	 DWORD PTR _delta_pitch$[ebp], xmm0
$LN12@animate_ro:

; 167  : 	}
; 168  : 
; 169  : 	//
; 170  : 	// rotate wheel objects
; 171  : 	//
; 172  : 	// if a blurred wheel type exists on the vehicle then set the correct wheel type visible status, and rotate it
; 173  : 	// otherwise just rotate the standard wheel type
; 174  : 	//
; 175  : 
; 176  : 	// fixed
; 177  : 	if ( activate_and_modify_sub_object_type_heading_pitch_and_roll
; 178  : 					(

  00309	51		 push	 ecx
  0030a	0f 57 c0	 xorps	 xmm0, xmm0
  0030d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00312	51		 push	 ecx
  00313	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _delta_pitch$[ebp]
  00318	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031d	51		 push	 ecx
  0031e	0f 57 c0	 xorps	 xmm0, xmm0
  00321	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00326	8b 45 ec	 mov	 eax, DWORD PTR _blurred_flag$[ebp]
  00329	50		 push	 eax
  0032a	68 17 01 00 00	 push	 279			; 00000117H
  0032f	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00332	51		 push	 ecx
  00333	e8 00 00 00 00	 call	 ?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z ; activate_and_modify_sub_object_type_heading_pitch_and_roll
  00338	85 c0		 test	 eax, eax
  0033a	74 47		 je	 SHORT $LN13@animate_ro

; 179  : 						inst3d,
; 180  : 						OBJECT_3D_SUB_OBJECT_FIXED_WHEEL_MOVING,
; 181  : 						blurred_flag,
; 182  : 						0.0, delta_pitch, 0.0
; 183  : 					) )
; 184  : 	{
; 185  : 		activate_and_modify_sub_object_type_heading_pitch_and_roll

  0033c	83 7d ec 00	 cmp	 DWORD PTR _blurred_flag$[ebp], 0
  00340	75 09		 jne	 SHORT $LN37@animate_ro
  00342	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  00349	eb 07		 jmp	 SHORT $LN38@animate_ro
$LN37@animate_ro:
  0034b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv200[ebp], 0
$LN38@animate_ro:
  00352	51		 push	 ecx
  00353	0f 57 c0	 xorps	 xmm0, xmm0
  00356	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035b	51		 push	 ecx
  0035c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _delta_pitch$[ebp]
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	51		 push	 ecx
  00367	0f 57 c0	 xorps	 xmm0, xmm0
  0036a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036f	8b 45 a8	 mov	 eax, DWORD PTR tv200[ebp]
  00372	50		 push	 eax
  00373	68 15 01 00 00	 push	 277			; 00000115H
  00378	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0037b	51		 push	 ecx
  0037c	e8 00 00 00 00	 call	 ?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z ; activate_and_modify_sub_object_type_heading_pitch_and_roll

; 186  : 					(
; 187  : 						inst3d,
; 188  : 						OBJECT_3D_SUB_OBJECT_FIXED_WHEEL,
; 189  : 						!blurred_flag,
; 190  : 						0.0, delta_pitch, 0.0
; 191  : 					);
; 192  : 	}
; 193  : 	else

  00381	eb 2d		 jmp	 SHORT $LN14@animate_ro
$LN13@animate_ro:

; 194  : 	{
; 195  : 		activate_and_modify_sub_object_type_heading_pitch_and_roll

  00383	51		 push	 ecx
  00384	0f 57 c0	 xorps	 xmm0, xmm0
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	51		 push	 ecx
  0038d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _delta_pitch$[ebp]
  00392	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00397	51		 push	 ecx
  00398	0f 57 c0	 xorps	 xmm0, xmm0
  0039b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a0	6a 01		 push	 1
  003a2	68 15 01 00 00	 push	 277			; 00000115H
  003a7	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z ; activate_and_modify_sub_object_type_heading_pitch_and_roll
$LN14@animate_ro:

; 196  : 					(
; 197  : 						inst3d,
; 198  : 						OBJECT_3D_SUB_OBJECT_FIXED_WHEEL,
; 199  : 						TRUE,
; 200  : 						0.0, delta_pitch, 0.0
; 201  : 					);
; 202  : 	}
; 203  : 
; 204  : 	// steerable
; 205  : 	if ( activate_and_modify_sub_object_type_heading_pitch_and_roll
; 206  : 					(

  003b0	51		 push	 ecx
  003b1	0f 57 c0	 xorps	 xmm0, xmm0
  003b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b9	51		 push	 ecx
  003ba	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _delta_pitch$[ebp]
  003bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c4	51		 push	 ecx
  003c5	0f 57 c0	 xorps	 xmm0, xmm0
  003c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cd	8b 45 ec	 mov	 eax, DWORD PTR _blurred_flag$[ebp]
  003d0	50		 push	 eax
  003d1	68 16 01 00 00	 push	 278			; 00000116H
  003d6	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  003d9	51		 push	 ecx
  003da	e8 00 00 00 00	 call	 ?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z ; activate_and_modify_sub_object_type_heading_pitch_and_roll
  003df	85 c0		 test	 eax, eax
  003e1	74 47		 je	 SHORT $LN15@animate_ro

; 207  : 						inst3d,
; 208  : 						OBJECT_3D_SUB_OBJECT_STEERABLE_WHEEL_MOVING,
; 209  : 						blurred_flag,
; 210  : 						0.0, delta_pitch, 0.0
; 211  : 					) )
; 212  : 	{
; 213  : 		activate_and_modify_sub_object_type_heading_pitch_and_roll

  003e3	83 7d ec 00	 cmp	 DWORD PTR _blurred_flag$[ebp], 0
  003e7	75 09		 jne	 SHORT $LN39@animate_ro
  003e9	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv222[ebp], 1
  003f0	eb 07		 jmp	 SHORT $LN40@animate_ro
$LN39@animate_ro:
  003f2	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv222[ebp], 0
$LN40@animate_ro:
  003f9	51		 push	 ecx
  003fa	0f 57 c0	 xorps	 xmm0, xmm0
  003fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00402	51		 push	 ecx
  00403	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _delta_pitch$[ebp]
  00408	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040d	51		 push	 ecx
  0040e	0f 57 c0	 xorps	 xmm0, xmm0
  00411	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00416	8b 45 a8	 mov	 eax, DWORD PTR tv222[ebp]
  00419	50		 push	 eax
  0041a	68 14 01 00 00	 push	 276			; 00000114H
  0041f	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z ; activate_and_modify_sub_object_type_heading_pitch_and_roll

; 214  : 					(
; 215  : 						inst3d,
; 216  : 						OBJECT_3D_SUB_OBJECT_STEERABLE_WHEEL,
; 217  : 						!blurred_flag,
; 218  : 						0.0, delta_pitch, 0.0
; 219  : 					);
; 220  : 	}
; 221  : 	else

  00428	eb 2d		 jmp	 SHORT $LN16@animate_ro
$LN15@animate_ro:

; 222  : 	{
; 223  : 		activate_and_modify_sub_object_type_heading_pitch_and_roll

  0042a	51		 push	 ecx
  0042b	0f 57 c0	 xorps	 xmm0, xmm0
  0042e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00433	51		 push	 ecx
  00434	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _delta_pitch$[ebp]
  00439	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043e	51		 push	 ecx
  0043f	0f 57 c0	 xorps	 xmm0, xmm0
  00442	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00447	6a 01		 push	 1
  00449	68 14 01 00 00	 push	 276			; 00000114H
  0044e	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00451	50		 push	 eax
  00452	e8 00 00 00 00	 call	 ?activate_and_modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HHMMM@Z ; activate_and_modify_sub_object_type_heading_pitch_and_roll
$LN16@animate_ro:

; 224  : 					(
; 225  : 						inst3d,
; 226  : 						OBJECT_3D_SUB_OBJECT_STEERABLE_WHEEL,
; 227  : 						TRUE,
; 228  : 						0.0, delta_pitch, 0.0
; 229  : 					);
; 230  : 	}
; 231  : 
; 232  : 	//
; 233  : 	// animate track textures
; 234  : 	//
; 235  : 
; 236  : 	if ( speed > 0.0 )

  00457	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _speed$[ebp]
  0045c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00464	76 0b		 jbe	 SHORT $LN17@animate_ro

; 237  : 	{
; 238  : 		//
; 239  : 		// debug articulation test
; 240  : 		//
; 241  : 
; 242  : 		advance_texture_animation_frame_on_object( inst3d, TEXTURE_ANIMATION_INDEX_TRAK0 );

  00466	6a 6d		 push	 109			; 0000006dH
  00468	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0046b	50		 push	 eax
  0046c	e8 00 00 00 00	 call	 ?advance_texture_animation_frame_on_object@@YGHPAUOBJECT_3D_INSTANCE@@W4TEXTURE_ANIMATION_INDICES@@@Z ; advance_texture_animation_frame_on_object
$LN17@animate_ro:
$LN1@animate_ro:

; 243  : 	}
; 244  : }

  00471	5f		 pop	 edi
  00472	5e		 pop	 esi
  00473	5b		 pop	 ebx
  00474	8b e5		 mov	 esp, ebp
  00476	5d		 pop	 ebp
  00477	c2 04 00	 ret	 4
?animate_routed_vehicle_wheels@@YGXPAUENTITY@@@Z ENDP	; animate_routed_vehicle_wheels
_TEXT	ENDS
END
