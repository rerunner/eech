; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\system\en_debug\en_dbmsg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_vsprintf
PUBLIC	_sprintf
PUBLIC	?debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; debug_log_entity_message
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0??debug_log_text@@YAXPAUENTITY@@0PADZZ@4JA ; `debug_log_text'::`1'::__LINE__Var
PUBLIC	??_C@_09BEMFOLKF@MESSAGE?3?5@			; `string'
PUBLIC	??_C@_0EO@CIINMPAG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BE@LIFJKPML@To?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?5@ ; `string'
PUBLIC	??_C@_0BH@NOOHDCPO@From?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@ ; `string'
PUBLIC	??_C@_0BB@FINKNFAN@From?5ANONYMOUS?3?5@		; `string'
PUBLIC	?__LINE__Var@?0??debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `debug_log_entity_message'::`1'::__LINE__Var
PUBLIC	??_C@_08DEKMJOIP@receiver@			; `string'
PUBLIC	??_C@_0BE@CBADKBKB@adjust?5land?5urgency@	; `string'
PUBLIC	??_C@_0L@NKLOMKMM@child?5move@			; `string'
PUBLIC	??_C@_0BM@NOKFCFHD@collision?5?$CIdistance?5?$DN?5?$CF?43f?$CJ@ ; `string'
PUBLIC	??_C@_0N@GDLHOFJC@decoy?5active@		; `string'
PUBLIC	??_C@_0O@OKJDPIKB@decoy?5expired@		; `string'
PUBLIC	??_C@_0BF@DALPNJMP@group?5return?5to?5base@	; `string'
PUBLIC	??_C@_0BA@KJFAOCGM@group?5taken?5off@		; `string'
PUBLIC	??_C@_0BF@DCEJJOGC@landing?5site?5request@	; `string'
PUBLIC	??_C@_0BA@HPFNPFJI@link?5child?5?$CI?$CFs?$CJ@	; `string'
PUBLIC	??_C@_0BI@NKAHFIDL@link?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BD@MGNOKFIK@lock?5landing?5route@	; `string'
PUBLIC	??_C@_0BC@KFLEJCKG@lock?5landing?5site@		; `string'
PUBLIC	??_C@_0BD@LAHEPNMB@lock?5takeoff?5route@	; `string'
PUBLIC	??_C@_0M@LNHGCCPI@prototype?51@			; `string'
PUBLIC	??_C@_0M@JGFLHBDL@prototype?52@			; `string'
PUBLIC	??_C@_0M@IPEAEAHK@prototype?53@			; `string'
PUBLIC	??_C@_0M@MAABNGLN@prototype?54@			; `string'
PUBLIC	??_C@_0BF@BMFFDNDK@reserve?5landing?5site@	; `string'
PUBLIC	??_C@_0BH@OOOAKBBM@set?5camera?5action?5?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0CA@IAFOHOMG@set?5camera?5action?5?$CIaction?5?$DN?5?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0BE@KLDAPBCE@set?5entity?5position@	; `string'
PUBLIC	??_C@_0O@EFEEODKA@task?5assigned@		; `string'
PUBLIC	??_C@_0BD@LFMBFLFO@task?5objective?5met@	; `string'
PUBLIC	??_C@_0BG@OMJFNPLK@task?5objective?5failed@	; `string'
PUBLIC	??_C@_0BA@ELAPOEJK@task?5terminated@		; `string'
PUBLIC	??_C@_0BJ@CHLKBFNJ@unlink?5child?5?$CIlist?5?$DN?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BK@LGCNLKLO@unlink?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BF@MOMAOPPE@unlock?5landing?5route@	; `string'
PUBLIC	??_C@_0BE@NGMDMBOL@unlock?5landing?5site@	; `string'
PUBLIC	??_C@_0BF@LIGKLHLP@unlock?5takeoff?5route@	; `string'
PUBLIC	??_C@_0BH@DLOAMJNC@unreserve?5landing?5site@	; `string'
PUBLIC	??_C@_0BI@BLAIMPNH@waypoint?5attack?5reached@	; `string'
PUBLIC	??_C@_0BK@PPJGFLGK@waypoint?5drop?9off?5reached@ ; `string'
PUBLIC	??_C@_0BF@BHIKLEGI@waypoint?5end?5reached@	; `string'
PUBLIC	??_C@_0BG@NFDFPAJL@waypoint?5land?5reached@	; `string'
PUBLIC	??_C@_0BI@KFCMJPI@waypoint?5landed?5reached@	; `string'
PUBLIC	??_C@_0BG@NDMPNNNH@waypoint?5loop?5reached@	; `string'
PUBLIC	??_C@_0BM@IHFHOJGP@waypoint?5navigation?5reached@ ; `string'
PUBLIC	??_C@_0CG@CFGKCNBN@waypoint?5sub_route?5navigation?5r@ ; `string'
PUBLIC	??_C@_0BJ@FLNNAJJH@waypoint?5pick?9up?5reached@	; `string'
PUBLIC	??_C@_0BB@HAJMBCO@waypoint?5reached@		; `string'
PUBLIC	??_C@_0BL@JMJEKPIB@waypoint?5taken?9off?5reached@ ; `string'
PUBLIC	??_C@_0BG@IIIMAABE@waypoint?5taxi?5reached@	; `string'
PUBLIC	??_C@_0BM@OPMNNLPI@Invalid?5entity?5message?5?$DN?5?$CFd@ ; `string'
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?list_type_database@@3PAULIST_TYPE_DATA@@A:BYTE	; list_type_database
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?camera_action_names@@3PAPBDA:BYTE		; camera_action_names
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_0BM@OPMNNLPI@Invalid?5entity?5message?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BM@OPMNNLPI@Invalid?5entity?5message?5?$DN?5?$CFd@ DB 'Invalid ent'
	DB	'ity message = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IIIMAABE@waypoint?5taxi?5reached@
CONST	SEGMENT
??_C@_0BG@IIIMAABE@waypoint?5taxi?5reached@ DB 'waypoint taxi reached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JMJEKPIB@waypoint?5taken?9off?5reached@
CONST	SEGMENT
??_C@_0BL@JMJEKPIB@waypoint?5taken?9off?5reached@ DB 'waypoint taken-off '
	DB	'reached', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HAJMBCO@waypoint?5reached@
CONST	SEGMENT
??_C@_0BB@HAJMBCO@waypoint?5reached@ DB 'waypoint reached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FLNNAJJH@waypoint?5pick?9up?5reached@
CONST	SEGMENT
??_C@_0BJ@FLNNAJJH@waypoint?5pick?9up?5reached@ DB 'waypoint pick-up reac'
	DB	'hed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@CFGKCNBN@waypoint?5sub_route?5navigation?5r@
CONST	SEGMENT
??_C@_0CG@CFGKCNBN@waypoint?5sub_route?5navigation?5r@ DB 'waypoint sub_r'
	DB	'oute navigation reached', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IHFHOJGP@waypoint?5navigation?5reached@
CONST	SEGMENT
??_C@_0BM@IHFHOJGP@waypoint?5navigation?5reached@ DB 'waypoint navigation'
	DB	' reached', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDMPNNNH@waypoint?5loop?5reached@
CONST	SEGMENT
??_C@_0BG@NDMPNNNH@waypoint?5loop?5reached@ DB 'waypoint loop reached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KFCMJPI@waypoint?5landed?5reached@
CONST	SEGMENT
??_C@_0BI@KFCMJPI@waypoint?5landed?5reached@ DB 'waypoint landed reached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NFDFPAJL@waypoint?5land?5reached@
CONST	SEGMENT
??_C@_0BG@NFDFPAJL@waypoint?5land?5reached@ DB 'waypoint land reached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BHIKLEGI@waypoint?5end?5reached@
CONST	SEGMENT
??_C@_0BF@BHIKLEGI@waypoint?5end?5reached@ DB 'waypoint end reached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PPJGFLGK@waypoint?5drop?9off?5reached@
CONST	SEGMENT
??_C@_0BK@PPJGFLGK@waypoint?5drop?9off?5reached@ DB 'waypoint drop-off re'
	DB	'ached', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BLAIMPNH@waypoint?5attack?5reached@
CONST	SEGMENT
??_C@_0BI@BLAIMPNH@waypoint?5attack?5reached@ DB 'waypoint attack reached'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DLOAMJNC@unreserve?5landing?5site@
CONST	SEGMENT
??_C@_0BH@DLOAMJNC@unreserve?5landing?5site@ DB 'unreserve landing site', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LIGKLHLP@unlock?5takeoff?5route@
CONST	SEGMENT
??_C@_0BF@LIGKLHLP@unlock?5takeoff?5route@ DB 'unlock takeoff route', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NGMDMBOL@unlock?5landing?5site@
CONST	SEGMENT
??_C@_0BE@NGMDMBOL@unlock?5landing?5site@ DB 'unlock landing site', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MOMAOPPE@unlock?5landing?5route@
CONST	SEGMENT
??_C@_0BF@MOMAOPPE@unlock?5landing?5route@ DB 'unlock landing route', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LGCNLKLO@unlink?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BK@LGCNLKLO@unlink?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@ DB 'unlink '
	DB	'parent (list = %s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHLKBFNJ@unlink?5child?5?$CIlist?5?$DN?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BJ@CHLKBFNJ@unlink?5child?5?$CIlist?5?$DN?5?$CFs?$CJ@ DB 'unlink c'
	DB	'hild (list = %s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELAPOEJK@task?5terminated@
CONST	SEGMENT
??_C@_0BA@ELAPOEJK@task?5terminated@ DB 'task terminated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OMJFNPLK@task?5objective?5failed@
CONST	SEGMENT
??_C@_0BG@OMJFNPLK@task?5objective?5failed@ DB 'task objective failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LFMBFLFO@task?5objective?5met@
CONST	SEGMENT
??_C@_0BD@LFMBFLFO@task?5objective?5met@ DB 'task objective met', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EFEEODKA@task?5assigned@
CONST	SEGMENT
??_C@_0O@EFEEODKA@task?5assigned@ DB 'task assigned', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KLDAPBCE@set?5entity?5position@
CONST	SEGMENT
??_C@_0BE@KLDAPBCE@set?5entity?5position@ DB 'set entity position', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IAFOHOMG@set?5camera?5action?5?$CIaction?5?$DN?5?$CFd?$CJ@
CONST	SEGMENT
??_C@_0CA@IAFOHOMG@set?5camera?5action?5?$CIaction?5?$DN?5?$CFd?$CJ@ DB 's'
	DB	'et camera action (action = %d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OOOAKBBM@set?5camera?5action?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BH@OOOAKBBM@set?5camera?5action?5?$CI?$CFs?$CJ@ DB 'set camera act'
	DB	'ion (%s)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BMFFDNDK@reserve?5landing?5site@
CONST	SEGMENT
??_C@_0BF@BMFFDNDK@reserve?5landing?5site@ DB 'reserve landing site', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MAABNGLN@prototype?54@
CONST	SEGMENT
??_C@_0M@MAABNGLN@prototype?54@ DB 'prototype 4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPEAEAHK@prototype?53@
CONST	SEGMENT
??_C@_0M@IPEAEAHK@prototype?53@ DB 'prototype 3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGFLHBDL@prototype?52@
CONST	SEGMENT
??_C@_0M@JGFLHBDL@prototype?52@ DB 'prototype 2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LNHGCCPI@prototype?51@
CONST	SEGMENT
??_C@_0M@LNHGCCPI@prototype?51@ DB 'prototype 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LAHEPNMB@lock?5takeoff?5route@
CONST	SEGMENT
??_C@_0BD@LAHEPNMB@lock?5takeoff?5route@ DB 'lock takeoff route', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KFLEJCKG@lock?5landing?5site@
CONST	SEGMENT
??_C@_0BC@KFLEJCKG@lock?5landing?5site@ DB 'lock landing site', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGNOKFIK@lock?5landing?5route@
CONST	SEGMENT
??_C@_0BD@MGNOKFIK@lock?5landing?5route@ DB 'lock landing route', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NKAHFIDL@link?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BI@NKAHFIDL@link?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@ DB 'link pare'
	DB	'nt (list = %s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HPFNPFJI@link?5child?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BA@HPFNPFJI@link?5child?5?$CI?$CFs?$CJ@ DB 'link child (%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DCEJJOGC@landing?5site?5request@
CONST	SEGMENT
??_C@_0BF@DCEJJOGC@landing?5site?5request@ DB 'landing site request', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KJFAOCGM@group?5taken?5off@
CONST	SEGMENT
??_C@_0BA@KJFAOCGM@group?5taken?5off@ DB 'group taken off', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DALPNJMP@group?5return?5to?5base@
CONST	SEGMENT
??_C@_0BF@DALPNJMP@group?5return?5to?5base@ DB 'group return to base', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKJDPIKB@decoy?5expired@
CONST	SEGMENT
??_C@_0O@OKJDPIKB@decoy?5expired@ DB 'decoy expired', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GDLHOFJC@decoy?5active@
CONST	SEGMENT
??_C@_0N@GDLHOFJC@decoy?5active@ DB 'decoy active', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NOKFCFHD@collision?5?$CIdistance?5?$DN?5?$CF?43f?$CJ@
CONST	SEGMENT
??_C@_0BM@NOKFCFHD@collision?5?$CIdistance?5?$DN?5?$CF?43f?$CJ@ DB 'colli'
	DB	'sion (distance = %.3f)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKLOMKMM@child?5move@
CONST	SEGMENT
??_C@_0L@NKLOMKMM@child?5move@ DB 'child move', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CBADKBKB@adjust?5land?5urgency@
CONST	SEGMENT
??_C@_0BE@CBADKBKB@adjust?5land?5urgency@ DB 'adjust land urgency', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DEKMJOIP@receiver@
CONST	SEGMENT
??_C@_08DEKMJOIP@receiver@ DB 'receiver', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 091H ; `debug_log_entity_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@FINKNFAN@From?5ANONYMOUS?3?5@
CONST	SEGMENT
??_C@_0BB@FINKNFAN@From?5ANONYMOUS?3?5@ DB 'From ANONYMOUS: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NOOHDCPO@From?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@
CONST	SEGMENT
??_C@_0BH@NOOHDCPO@From?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@ DB 'From '
	DB	'%s (index = %d): ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LIFJKPML@To?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?5@
CONST	SEGMENT
??_C@_0BE@LIFJKPML@To?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?5@ DB 'To %s (in'
	DB	'dex = %d) ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CIINMPAG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@CIINMPAG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_debug\en_db'
	DB	'msg.c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09BEMFOLKF@MESSAGE?3?5@
CONST	SEGMENT
??_C@_09BEMFOLKF@MESSAGE?3?5@ DB 'MESSAGE: ', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??debug_log_text@@YAXPAUENTITY@@0PADZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??debug_log_text@@YAXPAUENTITY@@0PADZZ@4JA DD 050H ; `debug_log_text'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_debug\en_dbmsg.c
;	COMDAT ?debug_log_text@@YAXPAUENTITY@@0PADZZ
_TEXT	SEGMENT
tv95 = -940						; size = 4
tv76 = -940						; size = 4
_s2$ = -804						; size = 400
_s1$ = -404						; size = 400
_pargs$ = -4						; size = 4
_receiver$ = 8						; size = 4
_sender$ = 12						; size = 4
_format$ = 16						; size = 4
?debug_log_text@@YAXPAUENTITY@@0PADZZ PROC		; debug_log_text, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 03 00
	00		 sub	 esp, 940		; 000003acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	va_list
; 82   : 		pargs;
; 83   : 
; 84   : 	char
; 85   : 		s1[400],
; 86   : 		s2[400];
; 87   : 
; 88   : 	//
; 89   : 	// prefix
; 90   : 	//
; 91   : 
; 92   : 	strcpy (s1, "MESSAGE: ");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_09BEMFOLKF@MESSAGE?3?5@
  00011	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _s1$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 _strcpy
  0001d	83 c4 08	 add	 esp, 8

; 93   : 
; 94   : 	//
; 95   : 	// receiver type and index
; 96   : 	//
; 97   : 
; 98   : 	sprintf (s2, "To %s (index = %d) ", get_local_entity_type_name (receiver), get_local_entity_index (receiver));

  00020	83 7d 08 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00024	74 0d		 je	 SHORT $LN5@debug_log_
  00026	8b 45 08	 mov	 eax, DWORD PTR _receiver$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 8d 54 fc ff
	ff		 mov	 DWORD PTR tv76[ebp], ecx
  00031	eb 24		 jmp	 SHORT $LN6@debug_log_
$LN5@debug_log_:
  00033	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??debug_log_text@@YAXPAUENTITY@@0PADZZ@4JA
  00039	83 c2 12	 add	 edx, 18			; 00000012H
  0003c	52		 push	 edx
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CIINMPAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 85 54 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN6@debug_log_:
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0005a	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00060	c1 f9 04	 sar	 ecx, 4
  00063	51		 push	 ecx
  00064	6b 95 54 fc ff
	ff 0c		 imul	 edx, DWORD PTR tv76[ebp], 12
  0006b	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00071	50		 push	 eax
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LIFJKPML@To?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?5@
  00077	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _s2$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 _sprintf
  00083	83 c4 10	 add	 esp, 16			; 00000010H

; 99   : 
; 100  : 	strcat (s1, s2);

  00086	8d 85 dc fc ff
	ff		 lea	 eax, DWORD PTR _s2$[ebp]
  0008c	50		 push	 eax
  0008d	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _s1$[ebp]
  00093	51		 push	 ecx
  00094	e8 00 00 00 00	 call	 _strcat
  00099	83 c4 08	 add	 esp, 8

; 101  : 
; 102  : 	//
; 103  : 	// sender type and index (if known)
; 104  : 	//
; 105  : 
; 106  : 	if (sender)

  0009c	83 7d 0c 00	 cmp	 DWORD PTR _sender$[ebp], 0
  000a0	74 7e		 je	 SHORT $LN2@debug_log_

; 107  : 	{
; 108  : 		sprintf (s2, "From %s (index = %d): ", get_local_entity_type_name (sender), get_local_entity_index (sender));

  000a2	83 7d 0c 00	 cmp	 DWORD PTR _sender$[ebp], 0
  000a6	74 0d		 je	 SHORT $LN7@debug_log_
  000a8	8b 45 0c	 mov	 eax, DWORD PTR _sender$[ebp]
  000ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ad	89 8d 54 fc ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000b3	eb 24		 jmp	 SHORT $LN8@debug_log_
$LN7@debug_log_:
  000b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??debug_log_text@@YAXPAUENTITY@@0PADZZ@4JA
  000bb	83 c2 1c	 add	 edx, 28			; 0000001cH
  000be	52		 push	 edx
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CIINMPAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cf	c7 85 54 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN8@debug_log_:
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR _sender$[ebp]
  000dc	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000e2	c1 f9 04	 sar	 ecx, 4
  000e5	51		 push	 ecx
  000e6	6b 95 54 fc ff
	ff 0c		 imul	 edx, DWORD PTR tv95[ebp], 12
  000ed	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000f3	50		 push	 eax
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NOOHDCPO@From?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@
  000f9	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _s2$[ebp]
  000ff	51		 push	 ecx
  00100	e8 00 00 00 00	 call	 _sprintf
  00105	83 c4 10	 add	 esp, 16			; 00000010H

; 109  : 
; 110  : 		strcat (s1, s2);

  00108	8d 85 dc fc ff
	ff		 lea	 eax, DWORD PTR _s2$[ebp]
  0010e	50		 push	 eax
  0010f	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _s1$[ebp]
  00115	51		 push	 ecx
  00116	e8 00 00 00 00	 call	 _strcat
  0011b	83 c4 08	 add	 esp, 8

; 111  : 	}
; 112  : 	else

  0011e	eb 14		 jmp	 SHORT $LN3@debug_log_
$LN2@debug_log_:

; 113  : 	{
; 114  : 		strcat (s1, "From ANONYMOUS: ");

  00120	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FINKNFAN@From?5ANONYMOUS?3?5@
  00125	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _s1$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 _strcat
  00131	83 c4 08	 add	 esp, 8
$LN3@debug_log_:

; 115  : 	}
; 116  : 
; 117  : 	//
; 118  : 	// args
; 119  : 	//
; 120  : 
; 121  : 	va_start (pargs, format);

  00134	8d 45 14	 lea	 eax, DWORD PTR _format$[ebp+4]
  00137	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax

; 122  : 
; 123  : 	vsprintf (s2, format, pargs);

  0013a	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0013d	50		 push	 eax
  0013e	8b 4d 10	 mov	 ecx, DWORD PTR _format$[ebp]
  00141	51		 push	 ecx
  00142	8d 95 dc fc ff
	ff		 lea	 edx, DWORD PTR _s2$[ebp]
  00148	52		 push	 edx
  00149	e8 00 00 00 00	 call	 _vsprintf
  0014e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 124  : 
; 125  : 	va_end (pargs);

  00151	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pargs$[ebp], 0

; 126  : 
; 127  : 	strcat (s1, s2);

  00158	8d 85 dc fc ff
	ff		 lea	 eax, DWORD PTR _s2$[ebp]
  0015e	50		 push	 eax
  0015f	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _s1$[ebp]
  00165	51		 push	 ecx
  00166	e8 00 00 00 00	 call	 _strcat
  0016b	83 c4 08	 add	 esp, 8

; 128  : 
; 129  : 	debug_log (s1);

  0016e	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _s1$[ebp]
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0017a	83 c4 04	 add	 esp, 4

; 130  : }

  0017d	5f		 pop	 edi
  0017e	5e		 pop	 esi
  0017f	5b		 pop	 ebx
  00180	8b e5		 mov	 esp, ebp
  00182	5d		 pop	 ebp
  00183	c3		 ret	 0
?debug_log_text@@YAXPAUENTITY@@0PADZZ ENDP		; debug_log_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_debug\en_dbmsg.c
;	COMDAT ?debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv69 = -100						; size = 4
_type$1 = -32						; size = 4
_type$2 = -28						; size = 4
_type$3 = -24						; size = 4
_action$4 = -20						; size = 4
_type$5 = -16						; size = 4
_type$6 = -12						; size = 4
_distance$7 = -8					; size = 4
_tmp$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; debug_log_entity_message, COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 146  : 	va_list
; 147  : 		tmp;
; 148  : 
; 149  : 	ASSERT (receiver);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@debug_log_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CIINMPAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08DEKMJOIP@receiver@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@debug_log_:

; 150  : 
; 151  : 	//
; 152  : 	// store pargs
; 153  : 	//
; 154  : 
; 155  : 	memcpy (&tmp, &pargs, sizeof (va_list));

  00027	6a 04		 push	 4
  00029	8d 45 14	 lea	 eax, DWORD PTR _pargs$[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d fc	 lea	 ecx, DWORD PTR _tmp$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 _memcpy
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 156  : 
; 157  : 	////////////////////////////////////////
; 158  : 	//
; 159  : 	// sort debug log text
; 160  : 	//
; 161  : 	////////////////////////////////////////
; 162  : 
; 163  : 	switch (message)

  00039	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0003c	89 45 9c	 mov	 DWORD PTR tv69[ebp], eax
  0003f	83 7d 9c 57	 cmp	 DWORD PTR tv69[ebp], 87	; 00000057H
  00043	0f 87 33 05 00
	00		 ja	 $LN49@debug_log_
  00049	8b 4d 9c	 mov	 ecx, DWORD PTR tv69[ebp]
  0004c	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN51@debug_log_[ecx]
  00053	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN52@debug_log_[edx*4]
$LN5@debug_log_:

; 164  : 	{
; 165  : 		////////////////////////////////////////
; 166  : 		case ENTITY_MESSAGE_ADJUST_LAND_URGENCY:
; 167  : 		////////////////////////////////////////
; 168  : 		{
; 169  : 
; 170  : 			debug_log_text (receiver, sender, "adjust land urgency");

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CBADKBKB@adjust?5land?5urgency@
  0005f	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 
; 172  : 			break;

  0006f	e9 19 05 00 00	 jmp	 $LN2@debug_log_
$LN6@debug_log_:

; 173  : 		}
; 174  : 		////////////////////////////////////////
; 175  : 		case ENTITY_MESSAGE_CHILD_MOVE:
; 176  : 		////////////////////////////////////////
; 177  : 		{
; 178  : 
; 179  : 			debug_log_text (receiver, sender, "child move");

  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NKLOMKMM@child?5move@
  00079	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0007c	50		 push	 eax
  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH

; 180  : 
; 181  : 			break;

  00089	e9 ff 04 00 00	 jmp	 $LN2@debug_log_
$LN7@debug_log_:

; 182  : 		}
; 183  : 		////////////////////////////////////////
; 184  : 		case ENTITY_MESSAGE_COLLISION:
; 185  : 		////////////////////////////////////////
; 186  : 		{
; 187  : 			float
; 188  : 				distance;
; 189  : 
; 190  : 			distance = va_arg (pargs, double);

  0008e	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00091	83 c0 08	 add	 eax, 8
  00094	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00097	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0009a	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0009f	f3 0f 11 45 f8	 movss	 DWORD PTR _distance$7[ebp], xmm0

; 191  : 
; 192  : 			debug_log_text (receiver, sender, "collision (distance = %.3f)", distance);

  000a4	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _distance$7[ebp]
  000a9	83 ec 08	 sub	 esp, 8
  000ac	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NOKFCFHD@collision?5?$CIdistance?5?$DN?5?$CF?43f?$CJ@
  000b6	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000b9	50		 push	 eax
  000ba	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  000c3	83 c4 14	 add	 esp, 20			; 00000014H

; 193  : 
; 194  : 			break;

  000c6	e9 c2 04 00 00	 jmp	 $LN2@debug_log_
$LN8@debug_log_:

; 195  : 		}
; 196  : 		////////////////////////////////////////
; 197  : 		case ENTITY_MESSAGE_DECOY_ACTIVE:
; 198  : 		////////////////////////////////////////
; 199  : 		{
; 200  : 			debug_log_text (receiver, sender, "decoy active");

  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GDLHOFJC@decoy?5active@
  000d0	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000d3	50		 push	 eax
  000d4	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000d7	51		 push	 ecx
  000d8	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  000dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 201  : 
; 202  : 			break;

  000e0	e9 a8 04 00 00	 jmp	 $LN2@debug_log_
$LN9@debug_log_:

; 203  : 		}
; 204  : 		////////////////////////////////////////
; 205  : 		case ENTITY_MESSAGE_DECOY_EXPIRED:
; 206  : 		////////////////////////////////////////
; 207  : 		{
; 208  : 			debug_log_text (receiver, sender, "decoy expired");

  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OKJDPIKB@decoy?5expired@
  000ea	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  000f7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 209  : 
; 210  : 			break;

  000fa	e9 8e 04 00 00	 jmp	 $LN2@debug_log_
$LN10@debug_log_:

; 211  : 		}
; 212  : 		////////////////////////////////////////
; 213  : 		case ENTITY_MESSAGE_GROUP_KILLED:
; 214  : 		////////////////////////////////////////
; 215  : 		{
; 216  : 
; 217  : 			debug_log_text (receiver, sender, "group return to base");

  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DALPNJMP@group?5return?5to?5base@
  00104	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00107	50		 push	 eax
  00108	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0010b	51		 push	 ecx
  0010c	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00111	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 
; 219  : 			break;

  00114	e9 74 04 00 00	 jmp	 $LN2@debug_log_
$LN11@debug_log_:

; 220  : 		}
; 221  : 		////////////////////////////////////////
; 222  : 		case ENTITY_MESSAGE_GROUP_TAKEN_OFF:
; 223  : 		////////////////////////////////////////
; 224  : 		{
; 225  : 
; 226  : 			debug_log_text (receiver, sender, "group taken off");

  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KJFAOCGM@group?5taken?5off@
  0011e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00121	50		 push	 eax
  00122	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00125	51		 push	 ecx
  00126	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0012b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 227  : 
; 228  : 			break;

  0012e	e9 5a 04 00 00	 jmp	 $LN2@debug_log_
$LN12@debug_log_:

; 229  : 		}
; 230  : 		////////////////////////////////////////
; 231  : 		case ENTITY_MESSAGE_LANDING_SITE_REQUEST:
; 232  : 		////////////////////////////////////////
; 233  : 		{
; 234  : 
; 235  : 			debug_log_text (receiver, sender, "landing site request");

  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DCEJJOGC@landing?5site?5request@
  00138	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0013b	50		 push	 eax
  0013c	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0013f	51		 push	 ecx
  00140	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00145	83 c4 0c	 add	 esp, 12			; 0000000cH

; 236  : 
; 237  : 			break;

  00148	e9 40 04 00 00	 jmp	 $LN2@debug_log_
$LN13@debug_log_:

; 238  : 		}
; 239  : 		////////////////////////////////////////
; 240  : 		case ENTITY_MESSAGE_LINK_CHILD:
; 241  : 		////////////////////////////////////////
; 242  : 		{
; 243  : 			list_types
; 244  : 				type;
; 245  : 
; 246  : 			type = va_arg (pargs, list_types);

  0014d	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00150	83 c0 04	 add	 eax, 4
  00153	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00156	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00159	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0015c	89 55 f4	 mov	 DWORD PTR _type$6[ebp], edx

; 247  : 
; 248  : 			debug_log_text (receiver, sender, "link child (%s)", get_list_type_name (type));

  0015f	8b 45 f4	 mov	 eax, DWORD PTR _type$6[ebp]
  00162	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[eax*8]
  00169	51		 push	 ecx
  0016a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HPFNPFJI@link?5child?5?$CI?$CFs?$CJ@
  0016f	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  00172	52		 push	 edx
  00173	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0017c	83 c4 10	 add	 esp, 16			; 00000010H

; 249  : 
; 250  : 			break;

  0017f	e9 09 04 00 00	 jmp	 $LN2@debug_log_
$LN14@debug_log_:

; 251  : 		}
; 252  : 		////////////////////////////////////////
; 253  : 		case ENTITY_MESSAGE_LINK_PARENT:
; 254  : 		////////////////////////////////////////
; 255  : 		{
; 256  : 			list_types
; 257  : 				type;
; 258  : 
; 259  : 			type = va_arg (pargs, list_types);

  00184	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00187	83 c0 04	 add	 eax, 4
  0018a	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0018d	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00190	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00193	89 55 f0	 mov	 DWORD PTR _type$5[ebp], edx

; 260  : 
; 261  : 			debug_log_text (receiver, sender, "link parent (list = %s)", get_list_type_name (type));

  00196	8b 45 f0	 mov	 eax, DWORD PTR _type$5[ebp]
  00199	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[eax*8]
  001a0	51		 push	 ecx
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NKAHFIDL@link?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@
  001a6	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  001a9	52		 push	 edx
  001aa	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  001b3	83 c4 10	 add	 esp, 16			; 00000010H

; 262  : 
; 263  : 			break;

  001b6	e9 d2 03 00 00	 jmp	 $LN2@debug_log_
$LN15@debug_log_:

; 264  : 		}
; 265  : 		////////////////////////////////////////
; 266  : 		case ENTITY_MESSAGE_LOCK_LANDING_ROUTE:
; 267  : 		////////////////////////////////////////
; 268  : 		{
; 269  : 
; 270  : 			debug_log_text (receiver, sender, "lock landing route");

  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MGNOKFIK@lock?5landing?5route@
  001c0	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  001c3	50		 push	 eax
  001c4	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  001c7	51		 push	 ecx
  001c8	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  001cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 271  : 
; 272  : 			break;

  001d0	e9 b8 03 00 00	 jmp	 $LN2@debug_log_
$LN16@debug_log_:

; 273  : 		}
; 274  : 		////////////////////////////////////////
; 275  : 		case ENTITY_MESSAGE_LOCK_LANDING_SITE:
; 276  : 		////////////////////////////////////////
; 277  : 		{
; 278  : 
; 279  : 			debug_log_text (receiver, sender, "lock landing site");

  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KFLEJCKG@lock?5landing?5site@
  001da	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  001dd	50		 push	 eax
  001de	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  001e1	51		 push	 ecx
  001e2	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  001e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 280  : 
; 281  : 			break;

  001ea	e9 9e 03 00 00	 jmp	 $LN2@debug_log_
$LN17@debug_log_:

; 282  : 		}
; 283  : 		////////////////////////////////////////
; 284  : 		case ENTITY_MESSAGE_LOCK_TAKEOFF_ROUTE:
; 285  : 		////////////////////////////////////////
; 286  : 		{
; 287  : 
; 288  : 			debug_log_text (receiver, sender, "lock takeoff route");

  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LAHEPNMB@lock?5takeoff?5route@
  001f4	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  001f7	50		 push	 eax
  001f8	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  001fb	51		 push	 ecx
  001fc	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00201	83 c4 0c	 add	 esp, 12			; 0000000cH

; 289  : 
; 290  : 			break;

  00204	e9 84 03 00 00	 jmp	 $LN2@debug_log_
$LN18@debug_log_:

; 291  : 		}
; 292  : 		////////////////////////////////////////
; 293  : 		case ENTITY_MESSAGE_PROTOTYPE_1:
; 294  : 		////////////////////////////////////////
; 295  : 		{
; 296  : 			debug_log_text (receiver, sender, "prototype 1");

  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LNHGCCPI@prototype?51@
  0020e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00211	50		 push	 eax
  00212	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00215	51		 push	 ecx
  00216	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0021b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 297  : 
; 298  : 			break;

  0021e	e9 6a 03 00 00	 jmp	 $LN2@debug_log_
$LN19@debug_log_:

; 299  : 		}
; 300  : 		////////////////////////////////////////
; 301  : 		case ENTITY_MESSAGE_PROTOTYPE_2:
; 302  : 		////////////////////////////////////////
; 303  : 		{
; 304  : 			debug_log_text (receiver, sender, "prototype 2");

  00223	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JGFLHBDL@prototype?52@
  00228	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0022b	50		 push	 eax
  0022c	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0022f	51		 push	 ecx
  00230	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00235	83 c4 0c	 add	 esp, 12			; 0000000cH

; 305  : 
; 306  : 			break;

  00238	e9 50 03 00 00	 jmp	 $LN2@debug_log_
$LN20@debug_log_:

; 307  : 		}
; 308  : 		////////////////////////////////////////
; 309  : 		case ENTITY_MESSAGE_PROTOTYPE_3:
; 310  : 		////////////////////////////////////////
; 311  : 		{
; 312  : 			debug_log_text (receiver, sender, "prototype 3");

  0023d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IPEAEAHK@prototype?53@
  00242	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00245	50		 push	 eax
  00246	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00249	51		 push	 ecx
  0024a	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0024f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 313  : 
; 314  : 			break;

  00252	e9 36 03 00 00	 jmp	 $LN2@debug_log_
$LN21@debug_log_:

; 315  : 		}
; 316  : 		////////////////////////////////////////
; 317  : 		case ENTITY_MESSAGE_PROTOTYPE_4:
; 318  : 		////////////////////////////////////////
; 319  : 		{
; 320  : 			debug_log_text (receiver, sender, "prototype 4");

  00257	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MAABNGLN@prototype?54@
  0025c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0025f	50		 push	 eax
  00260	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00263	51		 push	 ecx
  00264	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00269	83 c4 0c	 add	 esp, 12			; 0000000cH

; 321  : 
; 322  : 			break;

  0026c	e9 1c 03 00 00	 jmp	 $LN2@debug_log_
$LN22@debug_log_:

; 323  : 		}
; 324  : 		////////////////////////////////////////
; 325  : 		case ENTITY_MESSAGE_RESERVE_LANDING_SITE:
; 326  : 		////////////////////////////////////////
; 327  : 		{
; 328  : 
; 329  : 			debug_log_text (receiver, sender, "reserve landing site");

  00271	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BMFFDNDK@reserve?5landing?5site@
  00276	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00279	50		 push	 eax
  0027a	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0027d	51		 push	 ecx
  0027e	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00283	83 c4 0c	 add	 esp, 12			; 0000000cH

; 330  : 
; 331  : 			break;

  00286	e9 02 03 00 00	 jmp	 $LN2@debug_log_
$LN23@debug_log_:

; 332  : 		}
; 333  : 		////////////////////////////////////////
; 334  : 		case ENTITY_MESSAGE_SET_CAMERA_ACTION:
; 335  : 		////////////////////////////////////////
; 336  : 		{
; 337  : 			camera_actions
; 338  : 				action;
; 339  : 
; 340  : 			action = (camera_actions) va_arg (pargs, int);

  0028b	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0028e	83 c0 04	 add	 eax, 4
  00291	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00294	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00297	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0029a	89 55 ec	 mov	 DWORD PTR _action$4[ebp], edx

; 341  : 
; 342  : 			if ((action >= 0) && (action < NUM_CAMERA_ACTIONS))

  0029d	83 7d ec 00	 cmp	 DWORD PTR _action$4[ebp], 0
  002a1	7c 28		 jl	 SHORT $LN24@debug_log_
  002a3	83 7d ec 14	 cmp	 DWORD PTR _action$4[ebp], 20 ; 00000014H
  002a7	7d 22		 jge	 SHORT $LN24@debug_log_

; 343  : 			{
; 344  : 				debug_log_text (receiver, sender, "set camera action (%s)", camera_action_names[action]);

  002a9	8b 45 ec	 mov	 eax, DWORD PTR _action$4[ebp]
  002ac	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?camera_action_names@@3PAPBDA[eax*4]
  002b3	51		 push	 ecx
  002b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OOOAKBBM@set?5camera?5action?5?$CI?$CFs?$CJ@
  002b9	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  002bc	52		 push	 edx
  002bd	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  002c0	50		 push	 eax
  002c1	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  002c6	83 c4 10	 add	 esp, 16			; 00000010H

; 345  : 			}
; 346  : 			else

  002c9	eb 19		 jmp	 SHORT $LN25@debug_log_
$LN24@debug_log_:

; 347  : 			{
; 348  : 				debug_log_text (receiver, sender, "set camera action (action = %d)", action);

  002cb	8b 45 ec	 mov	 eax, DWORD PTR _action$4[ebp]
  002ce	50		 push	 eax
  002cf	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IAFOHOMG@set?5camera?5action?5?$CIaction?5?$DN?5?$CFd?$CJ@
  002d4	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  002d7	51		 push	 ecx
  002d8	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  002db	52		 push	 edx
  002dc	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  002e1	83 c4 10	 add	 esp, 16			; 00000010H
$LN25@debug_log_:

; 349  : 			}
; 350  : 
; 351  : 			break;

  002e4	e9 a4 02 00 00	 jmp	 $LN2@debug_log_
$LN26@debug_log_:

; 352  : 		}
; 353  : 		////////////////////////////////////////
; 354  : 		case ENTITY_MESSAGE_SET_ENTITY_POSITION:
; 355  : 		////////////////////////////////////////
; 356  : 		{
; 357  : 
; 358  : 			debug_log_text (receiver, sender, "set entity position");

  002e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KLDAPBCE@set?5entity?5position@
  002ee	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  002f1	50		 push	 eax
  002f2	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002f5	51		 push	 ecx
  002f6	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  002fb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 359  : 
; 360  : 			break;

  002fe	e9 8a 02 00 00	 jmp	 $LN2@debug_log_
$LN27@debug_log_:

; 361  : 		}
; 362  : 		////////////////////////////////////////
; 363  : 		case ENTITY_MESSAGE_TASK_ASSIGNED:
; 364  : 		////////////////////////////////////////
; 365  : 		{
; 366  : 
; 367  : 			debug_log_text (receiver, sender, "task assigned");

  00303	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EFEEODKA@task?5assigned@
  00308	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0030b	50		 push	 eax
  0030c	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0030f	51		 push	 ecx
  00310	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00315	83 c4 0c	 add	 esp, 12			; 0000000cH

; 368  : 
; 369  : 			break;

  00318	e9 70 02 00 00	 jmp	 $LN2@debug_log_
$LN28@debug_log_:

; 370  : 		}
; 371  : 		////////////////////////////////////////
; 372  : 		case ENTITY_MESSAGE_TASK_OBJECTIVE_MET:
; 373  : 		////////////////////////////////////////
; 374  : 		{
; 375  : 
; 376  : 			debug_log_text (receiver, sender, "task objective met");

  0031d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LFMBFLFO@task?5objective?5met@
  00322	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00325	50		 push	 eax
  00326	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00329	51		 push	 ecx
  0032a	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0032f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 377  : 
; 378  : 			break;

  00332	e9 56 02 00 00	 jmp	 $LN2@debug_log_
$LN29@debug_log_:

; 379  : 		}
; 380  : 		////////////////////////////////////////
; 381  : 		case ENTITY_MESSAGE_TASK_OBJECTIVE_FAILED:
; 382  : 		////////////////////////////////////////
; 383  : 		{
; 384  : 
; 385  : 			debug_log_text (receiver, sender, "task objective failed");

  00337	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OMJFNPLK@task?5objective?5failed@
  0033c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0033f	50		 push	 eax
  00340	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00343	51		 push	 ecx
  00344	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00349	83 c4 0c	 add	 esp, 12			; 0000000cH

; 386  : 
; 387  : 			break;

  0034c	e9 3c 02 00 00	 jmp	 $LN2@debug_log_
$LN30@debug_log_:

; 388  : 		}
; 389  : 		////////////////////////////////////////
; 390  : 		case ENTITY_MESSAGE_TASK_TERMINATED:
; 391  : 		////////////////////////////////////////
; 392  : 		{
; 393  : 			list_types
; 394  : 				type;
; 395  : 
; 396  : 			type = va_arg (pargs, list_types);

  00351	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00354	83 c0 04	 add	 eax, 4
  00357	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0035a	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0035d	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00360	89 55 e8	 mov	 DWORD PTR _type$3[ebp], edx

; 397  : 
; 398  : 			debug_log_text (receiver, sender, "task terminated");

  00363	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ELAPOEJK@task?5terminated@
  00368	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0036b	50		 push	 eax
  0036c	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0036f	51		 push	 ecx
  00370	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00375	83 c4 0c	 add	 esp, 12			; 0000000cH

; 399  : 
; 400  : 			break;

  00378	e9 10 02 00 00	 jmp	 $LN2@debug_log_
$LN31@debug_log_:

; 401  : 		}
; 402  : 		////////////////////////////////////////
; 403  : 		case ENTITY_MESSAGE_UNLINK_CHILD:
; 404  : 		////////////////////////////////////////
; 405  : 		{
; 406  : 			list_types
; 407  : 				type;
; 408  : 
; 409  : 			type = va_arg (pargs, list_types);

  0037d	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00380	83 c0 04	 add	 eax, 4
  00383	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00386	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00389	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0038c	89 55 e4	 mov	 DWORD PTR _type$2[ebp], edx

; 410  : 
; 411  : 			debug_log_text (receiver, sender, "unlink child (list = %s)", get_list_type_name (type));

  0038f	8b 45 e4	 mov	 eax, DWORD PTR _type$2[ebp]
  00392	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[eax*8]
  00399	51		 push	 ecx
  0039a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CHLKBFNJ@unlink?5child?5?$CIlist?5?$DN?5?$CFs?$CJ@
  0039f	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  003a2	52		 push	 edx
  003a3	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003a6	50		 push	 eax
  003a7	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  003ac	83 c4 10	 add	 esp, 16			; 00000010H

; 412  : 
; 413  : 			break;

  003af	e9 d9 01 00 00	 jmp	 $LN2@debug_log_
$LN32@debug_log_:

; 414  : 		}
; 415  : 		////////////////////////////////////////
; 416  : 		case ENTITY_MESSAGE_UNLINK_PARENT:
; 417  : 		////////////////////////////////////////
; 418  : 		{
; 419  : 			list_types
; 420  : 				type;
; 421  : 
; 422  : 			type = va_arg (pargs, list_types);

  003b4	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  003b7	83 c0 04	 add	 eax, 4
  003ba	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  003bd	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  003c0	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  003c3	89 55 e0	 mov	 DWORD PTR _type$1[ebp], edx

; 423  : 
; 424  : 			debug_log_text (receiver, sender, "unlink parent (list = %s)", get_list_type_name (type));

  003c6	8b 45 e0	 mov	 eax, DWORD PTR _type$1[ebp]
  003c9	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[eax*8]
  003d0	51		 push	 ecx
  003d1	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LGCNLKLO@unlink?5parent?5?$CIlist?5?$DN?5?$CFs?$CJ@
  003d6	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  003d9	52		 push	 edx
  003da	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003dd	50		 push	 eax
  003de	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  003e3	83 c4 10	 add	 esp, 16			; 00000010H

; 425  : 
; 426  : 			break;

  003e6	e9 a2 01 00 00	 jmp	 $LN2@debug_log_
$LN33@debug_log_:

; 427  : 		}
; 428  : 		////////////////////////////////////////
; 429  : 		case ENTITY_MESSAGE_UNLOCK_LANDING_ROUTE:
; 430  : 		////////////////////////////////////////
; 431  : 		{
; 432  : 
; 433  : 			debug_log_text (receiver, sender, "unlock landing route");

  003eb	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MOMAOPPE@unlock?5landing?5route@
  003f0	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  003f3	50		 push	 eax
  003f4	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  003f7	51		 push	 ecx
  003f8	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  003fd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 434  : 
; 435  : 			break;

  00400	e9 88 01 00 00	 jmp	 $LN2@debug_log_
$LN34@debug_log_:

; 436  : 		}
; 437  : 		////////////////////////////////////////
; 438  : 		case ENTITY_MESSAGE_UNLOCK_LANDING_SITE:
; 439  : 		////////////////////////////////////////
; 440  : 		{
; 441  : 
; 442  : 			debug_log_text (receiver, sender, "unlock landing site");

  00405	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NGMDMBOL@unlock?5landing?5site@
  0040a	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0040d	50		 push	 eax
  0040e	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00411	51		 push	 ecx
  00412	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00417	83 c4 0c	 add	 esp, 12			; 0000000cH

; 443  : 
; 444  : 			break;

  0041a	e9 6e 01 00 00	 jmp	 $LN2@debug_log_
$LN35@debug_log_:

; 445  : 		}
; 446  : 		////////////////////////////////////////
; 447  : 		case ENTITY_MESSAGE_UNLOCK_TAKEOFF_ROUTE:
; 448  : 		////////////////////////////////////////
; 449  : 		{
; 450  : 
; 451  : 			debug_log_text (receiver, sender, "unlock takeoff route");

  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@LIGKLHLP@unlock?5takeoff?5route@
  00424	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00427	50		 push	 eax
  00428	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0042b	51		 push	 ecx
  0042c	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00431	83 c4 0c	 add	 esp, 12			; 0000000cH

; 452  : 
; 453  : 			break;

  00434	e9 54 01 00 00	 jmp	 $LN2@debug_log_
$LN36@debug_log_:

; 454  : 		}
; 455  : 		////////////////////////////////////////
; 456  : 		case ENTITY_MESSAGE_UNRESERVE_LANDING_SITE:
; 457  : 		////////////////////////////////////////
; 458  : 		{
; 459  : 
; 460  : 			debug_log_text (receiver, sender, "unreserve landing site");

  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DLOAMJNC@unreserve?5landing?5site@
  0043e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00441	50		 push	 eax
  00442	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00445	51		 push	 ecx
  00446	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0044b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 461  : 
; 462  : 			break;

  0044e	e9 3a 01 00 00	 jmp	 $LN2@debug_log_
$LN37@debug_log_:

; 463  : 		}
; 464  : 		////////////////////////////////////////
; 465  : 		case ENTITY_MESSAGE_WAYPOINT_ATTACK_ACTION:
; 466  : 		////////////////////////////////////////
; 467  : 		{
; 468  : 
; 469  : 			debug_log_text (receiver, sender, "waypoint attack reached");

  00453	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BLAIMPNH@waypoint?5attack?5reached@
  00458	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0045b	50		 push	 eax
  0045c	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0045f	51		 push	 ecx
  00460	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00465	83 c4 0c	 add	 esp, 12			; 0000000cH

; 470  : 
; 471  : 			break;

  00468	e9 20 01 00 00	 jmp	 $LN2@debug_log_
$LN38@debug_log_:

; 472  : 		}
; 473  : 		////////////////////////////////////////
; 474  : 		case ENTITY_MESSAGE_WAYPOINT_DROP_OFF_REACHED:
; 475  : 		////////////////////////////////////////
; 476  : 		{
; 477  : 
; 478  : 			debug_log_text (receiver, sender, "waypoint drop-off reached");

  0046d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@PPJGFLGK@waypoint?5drop?9off?5reached@
  00472	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00475	50		 push	 eax
  00476	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00479	51		 push	 ecx
  0047a	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0047f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 479  : 
; 480  : 			break;

  00482	e9 06 01 00 00	 jmp	 $LN2@debug_log_
$LN39@debug_log_:

; 481  : 		}
; 482  : 		////////////////////////////////////////
; 483  : 		case ENTITY_MESSAGE_WAYPOINT_END_REACHED:
; 484  : 		////////////////////////////////////////
; 485  : 		{
; 486  : 
; 487  : 			debug_log_text (receiver, sender, "waypoint end reached");

  00487	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BHIKLEGI@waypoint?5end?5reached@
  0048c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0048f	50		 push	 eax
  00490	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00493	51		 push	 ecx
  00494	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00499	83 c4 0c	 add	 esp, 12			; 0000000cH

; 488  : 
; 489  : 			break;

  0049c	e9 ec 00 00 00	 jmp	 $LN2@debug_log_
$LN40@debug_log_:

; 490  : 		}
; 491  : 		////////////////////////////////////////
; 492  : 		case ENTITY_MESSAGE_WAYPOINT_LAND_REACHED:
; 493  : 		////////////////////////////////////////
; 494  : 		{
; 495  : 
; 496  : 			debug_log_text (receiver, sender, "waypoint land reached");

  004a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NFDFPAJL@waypoint?5land?5reached@
  004a6	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  004a9	50		 push	 eax
  004aa	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  004ad	51		 push	 ecx
  004ae	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  004b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 497  : 
; 498  : 			break;

  004b6	e9 d2 00 00 00	 jmp	 $LN2@debug_log_
$LN41@debug_log_:

; 499  : 		}
; 500  : 		////////////////////////////////////////
; 501  : 		case ENTITY_MESSAGE_WAYPOINT_LANDED_REACHED:
; 502  : 		////////////////////////////////////////
; 503  : 		{
; 504  : 
; 505  : 			debug_log_text (receiver, sender, "waypoint landed reached");

  004bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KFCMJPI@waypoint?5landed?5reached@
  004c0	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  004c3	50		 push	 eax
  004c4	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  004c7	51		 push	 ecx
  004c8	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  004cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 506  : 
; 507  : 			break;

  004d0	e9 b8 00 00 00	 jmp	 $LN2@debug_log_
$LN42@debug_log_:

; 508  : 		}
; 509  : 		////////////////////////////////////////
; 510  : 		case ENTITY_MESSAGE_WAYPOINT_LOOP_REACHED:
; 511  : 		////////////////////////////////////////
; 512  : 		{
; 513  : 
; 514  : 			debug_log_text (receiver, sender, "waypoint loop reached");

  004d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NDMPNNNH@waypoint?5loop?5reached@
  004da	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  004dd	50		 push	 eax
  004de	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  004e1	51		 push	 ecx
  004e2	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  004e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 515  : 
; 516  : 			break;

  004ea	e9 9e 00 00 00	 jmp	 $LN2@debug_log_
$LN43@debug_log_:

; 517  : 		}
; 518  : 		////////////////////////////////////////
; 519  : 		case ENTITY_MESSAGE_WAYPOINT_NAVIGATION_REACHED:
; 520  : 		////////////////////////////////////////
; 521  : 		{
; 522  : 
; 523  : 			debug_log_text (receiver, sender, "waypoint navigation reached");

  004ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IHFHOJGP@waypoint?5navigation?5reached@
  004f4	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  004f7	50		 push	 eax
  004f8	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  004fb	51		 push	 ecx
  004fc	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00501	83 c4 0c	 add	 esp, 12			; 0000000cH

; 524  : 
; 525  : 			break;

  00504	e9 84 00 00 00	 jmp	 $LN2@debug_log_
$LN44@debug_log_:

; 526  : 		}
; 527  : 		////////////////////////////////////////
; 528  : 		case ENTITY_MESSAGE_WAYPOINT_SUB_ROUTE_NAVIGATION_REACHED:
; 529  : 		////////////////////////////////////////
; 530  : 		{
; 531  : 
; 532  : 			debug_log_text (receiver, sender, "waypoint sub_route navigation reached");

  00509	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@CFGKCNBN@waypoint?5sub_route?5navigation?5r@
  0050e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00511	50		 push	 eax
  00512	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00515	51		 push	 ecx
  00516	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  0051b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 533  : 
; 534  : 			break;

  0051e	eb 6d		 jmp	 SHORT $LN2@debug_log_
$LN45@debug_log_:

; 535  : 		}
; 536  : 		////////////////////////////////////////
; 537  : 		case ENTITY_MESSAGE_WAYPOINT_PICK_UP_REACHED:
; 538  : 		////////////////////////////////////////
; 539  : 		{
; 540  : 
; 541  : 			debug_log_text (receiver, sender, "waypoint pick-up reached");

  00520	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FLNNAJJH@waypoint?5pick?9up?5reached@
  00525	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00528	50		 push	 eax
  00529	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0052c	51		 push	 ecx
  0052d	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00532	83 c4 0c	 add	 esp, 12			; 0000000cH

; 542  : 
; 543  : 			break;

  00535	eb 56		 jmp	 SHORT $LN2@debug_log_
$LN46@debug_log_:

; 544  : 		}
; 545  : 		////////////////////////////////////////
; 546  : 		case ENTITY_MESSAGE_WAYPOINT_REACHED:
; 547  : 		////////////////////////////////////////
; 548  : 		{
; 549  : 
; 550  : 			debug_log_text (receiver, sender, "waypoint reached");

  00537	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HAJMBCO@waypoint?5reached@
  0053c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0053f	50		 push	 eax
  00540	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00543	51		 push	 ecx
  00544	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00549	83 c4 0c	 add	 esp, 12			; 0000000cH

; 551  : 
; 552  : 			break;

  0054c	eb 3f		 jmp	 SHORT $LN2@debug_log_
$LN47@debug_log_:

; 553  : 		}
; 554  : 		////////////////////////////////////////
; 555  : 		case ENTITY_MESSAGE_WAYPOINT_TAKEN_OFF_REACHED:
; 556  : 		////////////////////////////////////////
; 557  : 		{
; 558  : 
; 559  : 			debug_log_text (receiver, sender, "waypoint taken-off reached");

  0054e	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JMJEKPIB@waypoint?5taken?9off?5reached@
  00553	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00556	50		 push	 eax
  00557	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0055a	51		 push	 ecx
  0055b	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00560	83 c4 0c	 add	 esp, 12			; 0000000cH

; 560  : 
; 561  : 			break;

  00563	eb 28		 jmp	 SHORT $LN2@debug_log_
$LN48@debug_log_:

; 562  : 		}
; 563  : 		////////////////////////////////////////
; 564  : 		case ENTITY_MESSAGE_WAYPOINT_TAXI_REACHED:
; 565  : 		////////////////////////////////////////
; 566  : 		{
; 567  : 
; 568  : 			debug_log_text (receiver, sender, "waypoint taxi reached");

  00565	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IIIMAABE@waypoint?5taxi?5reached@
  0056a	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0056d	50		 push	 eax
  0056e	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00571	51		 push	 ecx
  00572	e8 00 00 00 00	 call	 ?debug_log_text@@YAXPAUENTITY@@0PADZZ ; debug_log_text
  00577	83 c4 0c	 add	 esp, 12			; 0000000cH

; 569  : 
; 570  : 			break;

  0057a	eb 11		 jmp	 SHORT $LN2@debug_log_
$LN49@debug_log_:

; 571  : 		}
; 572  : 		////////////////////////////////////////
; 573  : 		default:
; 574  : 		////////////////////////////////////////
; 575  : 		{
; 576  : 			debug_fatal ("Invalid entity message = %d", message);

  0057c	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0057f	50		 push	 eax
  00580	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OPMNNLPI@Invalid?5entity?5message?5?$DN?5?$CFd@
  00585	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0058a	83 c4 08	 add	 esp, 8
$LN2@debug_log_:

; 577  : 
; 578  : 			break;
; 579  : 		}
; 580  : 	}
; 581  : 
; 582  : 	//
; 583  : 	// restore pargs
; 584  : 	//
; 585  : 
; 586  : 	memcpy (&pargs, &tmp, sizeof (va_list));

  0058d	6a 04		 push	 4
  0058f	8d 45 fc	 lea	 eax, DWORD PTR _tmp$[ebp]
  00592	50		 push	 eax
  00593	8d 4d 14	 lea	 ecx, DWORD PTR _pargs$[ebp]
  00596	51		 push	 ecx
  00597	e8 00 00 00 00	 call	 _memcpy
  0059c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 587  : }

  0059f	5f		 pop	 edi
  005a0	5e		 pop	 esi
  005a1	5b		 pop	 ebx
  005a2	8b e5		 mov	 esp, ebp
  005a4	5d		 pop	 ebp
  005a5	c2 10 00	 ret	 16			; 00000010H
$LN52@debug_log_:
  005a8	00 00 00 00	 DD	 $LN5@debug_log_
  005ac	00 00 00 00	 DD	 $LN6@debug_log_
  005b0	00 00 00 00	 DD	 $LN7@debug_log_
  005b4	00 00 00 00	 DD	 $LN8@debug_log_
  005b8	00 00 00 00	 DD	 $LN9@debug_log_
  005bc	00 00 00 00	 DD	 $LN10@debug_log_
  005c0	00 00 00 00	 DD	 $LN11@debug_log_
  005c4	00 00 00 00	 DD	 $LN12@debug_log_
  005c8	00 00 00 00	 DD	 $LN13@debug_log_
  005cc	00 00 00 00	 DD	 $LN14@debug_log_
  005d0	00 00 00 00	 DD	 $LN15@debug_log_
  005d4	00 00 00 00	 DD	 $LN16@debug_log_
  005d8	00 00 00 00	 DD	 $LN17@debug_log_
  005dc	00 00 00 00	 DD	 $LN18@debug_log_
  005e0	00 00 00 00	 DD	 $LN19@debug_log_
  005e4	00 00 00 00	 DD	 $LN20@debug_log_
  005e8	00 00 00 00	 DD	 $LN21@debug_log_
  005ec	00 00 00 00	 DD	 $LN22@debug_log_
  005f0	00 00 00 00	 DD	 $LN23@debug_log_
  005f4	00 00 00 00	 DD	 $LN26@debug_log_
  005f8	00 00 00 00	 DD	 $LN27@debug_log_
  005fc	00 00 00 00	 DD	 $LN28@debug_log_
  00600	00 00 00 00	 DD	 $LN29@debug_log_
  00604	00 00 00 00	 DD	 $LN30@debug_log_
  00608	00 00 00 00	 DD	 $LN31@debug_log_
  0060c	00 00 00 00	 DD	 $LN32@debug_log_
  00610	00 00 00 00	 DD	 $LN33@debug_log_
  00614	00 00 00 00	 DD	 $LN34@debug_log_
  00618	00 00 00 00	 DD	 $LN35@debug_log_
  0061c	00 00 00 00	 DD	 $LN36@debug_log_
  00620	00 00 00 00	 DD	 $LN37@debug_log_
  00624	00 00 00 00	 DD	 $LN38@debug_log_
  00628	00 00 00 00	 DD	 $LN39@debug_log_
  0062c	00 00 00 00	 DD	 $LN40@debug_log_
  00630	00 00 00 00	 DD	 $LN41@debug_log_
  00634	00 00 00 00	 DD	 $LN42@debug_log_
  00638	00 00 00 00	 DD	 $LN43@debug_log_
  0063c	00 00 00 00	 DD	 $LN45@debug_log_
  00640	00 00 00 00	 DD	 $LN46@debug_log_
  00644	00 00 00 00	 DD	 $LN44@debug_log_
  00648	00 00 00 00	 DD	 $LN47@debug_log_
  0064c	00 00 00 00	 DD	 $LN48@debug_log_
  00650	00 00 00 00	 DD	 $LN49@debug_log_
$LN51@debug_log_:
  00654	00		 DB	 0
  00655	2a		 DB	 42			; 0000002aH
  00656	2a		 DB	 42			; 0000002aH
  00657	2a		 DB	 42			; 0000002aH
  00658	2a		 DB	 42			; 0000002aH
  00659	2a		 DB	 42			; 0000002aH
  0065a	01		 DB	 1
  0065b	02		 DB	 2
  0065c	03		 DB	 3
  0065d	04		 DB	 4
  0065e	2a		 DB	 42			; 0000002aH
  0065f	2a		 DB	 42			; 0000002aH
  00660	2a		 DB	 42			; 0000002aH
  00661	2a		 DB	 42			; 0000002aH
  00662	2a		 DB	 42			; 0000002aH
  00663	2a		 DB	 42			; 0000002aH
  00664	2a		 DB	 42			; 0000002aH
  00665	2a		 DB	 42			; 0000002aH
  00666	2a		 DB	 42			; 0000002aH
  00667	2a		 DB	 42			; 0000002aH
  00668	2a		 DB	 42			; 0000002aH
  00669	2a		 DB	 42			; 0000002aH
  0066a	2a		 DB	 42			; 0000002aH
  0066b	2a		 DB	 42			; 0000002aH
  0066c	2a		 DB	 42			; 0000002aH
  0066d	2a		 DB	 42			; 0000002aH
  0066e	2a		 DB	 42			; 0000002aH
  0066f	2a		 DB	 42			; 0000002aH
  00670	2a		 DB	 42			; 0000002aH
  00671	2a		 DB	 42			; 0000002aH
  00672	2a		 DB	 42			; 0000002aH
  00673	05		 DB	 5
  00674	06		 DB	 6
  00675	2a		 DB	 42			; 0000002aH
  00676	07		 DB	 7
  00677	08		 DB	 8
  00678	09		 DB	 9
  00679	0a		 DB	 10			; 0000000aH
  0067a	0b		 DB	 11			; 0000000bH
  0067b	0c		 DB	 12			; 0000000cH
  0067c	2a		 DB	 42			; 0000002aH
  0067d	0d		 DB	 13			; 0000000dH
  0067e	0e		 DB	 14			; 0000000eH
  0067f	0f		 DB	 15			; 0000000fH
  00680	10		 DB	 16			; 00000010H
  00681	2a		 DB	 42			; 0000002aH
  00682	11		 DB	 17			; 00000011H
  00683	12		 DB	 18			; 00000012H
  00684	13		 DB	 19			; 00000013H
  00685	14		 DB	 20			; 00000014H
  00686	2a		 DB	 42			; 0000002aH
  00687	2a		 DB	 42			; 0000002aH
  00688	15		 DB	 21			; 00000015H
  00689	16		 DB	 22			; 00000016H
  0068a	17		 DB	 23			; 00000017H
  0068b	18		 DB	 24			; 00000018H
  0068c	19		 DB	 25			; 00000019H
  0068d	1a		 DB	 26			; 0000001aH
  0068e	1b		 DB	 27			; 0000001bH
  0068f	1c		 DB	 28			; 0000001cH
  00690	1d		 DB	 29			; 0000001dH
  00691	2a		 DB	 42			; 0000002aH
  00692	2a		 DB	 42			; 0000002aH
  00693	1e		 DB	 30			; 0000001eH
  00694	2a		 DB	 42			; 0000002aH
  00695	2a		 DB	 42			; 0000002aH
  00696	1f		 DB	 31			; 0000001fH
  00697	20		 DB	 32			; 00000020H
  00698	2a		 DB	 42			; 0000002aH
  00699	2a		 DB	 42			; 0000002aH
  0069a	21		 DB	 33			; 00000021H
  0069b	22		 DB	 34			; 00000022H
  0069c	2a		 DB	 42			; 0000002aH
  0069d	23		 DB	 35			; 00000023H
  0069e	2a		 DB	 42			; 0000002aH
  0069f	24		 DB	 36			; 00000024H
  006a0	2a		 DB	 42			; 0000002aH
  006a1	25		 DB	 37			; 00000025H
  006a2	2a		 DB	 42			; 0000002aH
  006a3	26		 DB	 38			; 00000026H
  006a4	2a		 DB	 42			; 0000002aH
  006a5	2a		 DB	 42			; 0000002aH
  006a6	2a		 DB	 42			; 0000002aH
  006a7	2a		 DB	 42			; 0000002aH
  006a8	2a		 DB	 42			; 0000002aH
  006a9	27		 DB	 39			; 00000027H
  006aa	28		 DB	 40			; 00000028H
  006ab	29		 DB	 41			; 00000029H
?debug_log_entity_message@@YGXW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; debug_log_entity_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1477 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1478 :         #pragma warning(push)
; 1479 :         #pragma warning(disable: 4996) // Deprecation
; 1480 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);

  00009	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	6a ff		 push	 -1
  00015	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 __vsnprintf_l
  0001e	83 c4 14	 add	 esp, 20			; 00000014H

; 1481 :         #pragma warning(pop)
; 1482 :     }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
