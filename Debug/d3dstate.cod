; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\d3dstate.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?running_total_number_of_d3d_triangles@@3HA	; running_total_number_of_d3d_triangles
PUBLIC	?total_number_of_d3d_triangles@@3HA		; total_number_of_d3d_triangles
PUBLIC	?running_total_number_of_d3d_flushes@@3HA	; running_total_number_of_d3d_flushes
PUBLIC	?total_number_of_d3d_flushes@@3HA		; total_number_of_d3d_flushes
PUBLIC	?number_of_d3d_degenerate_triangles@@3HA	; number_of_d3d_degenerate_triangles
PUBLIC	?number_of_d3d_triangles_drawn@@3HA		; number_of_d3d_triangles_drawn
PUBLIC	?number_of_d3d_lines_drawn@@3HA			; number_of_d3d_lines_drawn
PUBLIC	?d3d_transparency_enabled@@3HA			; d3d_transparency_enabled
PUBLIC	?d3d_in_order_rendering@@3HA			; d3d_in_order_rendering
PUBLIC	?state_list_pointer@@3PAXA			; state_list_pointer
PUBLIC	?state_data_pointer@@3PAXA			; state_data_pointer
PUBLIC	?state_list_number_of_states@@3HA		; state_list_number_of_states
PUBLIC	?render_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A ; render_state_names
PUBLIC	??_C@_0BN@KJGEMGKM@D3DRENDERSTATE_TEXTUREHANDLE@ ; `string'
PUBLIC	??_C@_0BJ@HNPHBJHA@D3DRENDERSTATE_ANTIALIAS@	; `string'
PUBLIC	??_C@_0BO@CILAGABC@D3DRENDERSTATE_TEXTUREADDRESS@ ; `string'
PUBLIC	??_C@_0CC@PFHMMKBH@D3DRENDERSTATE_TEXTUREPERSPECTI@ ; `string'
PUBLIC	??_C@_0BF@MBJBPMAO@D3DRENDERSTATE_WRAPU@	; `string'
PUBLIC	??_C@_0BF@OKLMKPMN@D3DRENDERSTATE_WRAPV@	; `string'
PUBLIC	??_C@_0BH@IGGCEJJM@D3DRENDERSTATE_ZENABLE@	; `string'
PUBLIC	??_C@_0BI@NDEMPCLD@D3DRENDERSTATE_FILLMODE@	; `string'
PUBLIC	??_C@_0BJ@OBPDCMOG@D3DRENDERSTATE_SHADEMODE@	; `string'
PUBLIC	??_C@_0BL@JIEGJDEN@D3DRENDERSTATE_LINEPATTERN@	; `string'
PUBLIC	??_C@_0BK@ELBHIAIO@D3DRENDERSTATE_MONOENABLE@	; `string'
PUBLIC	??_C@_0BE@MLFMMABF@D3DRENDERSTATE_ROP2@		; `string'
PUBLIC	??_C@_0BJ@JEGNHGOP@D3DRENDERSTATE_PLANEMASK@	; `string'
PUBLIC	??_C@_0BM@NGLPPNNJ@D3DRENDERSTATE_ZWRITEENABLE@	; `string'
PUBLIC	??_C@_0BP@EIGNHDKH@D3DRENDERSTATE_ALPHATESTENABLE@ ; `string'
PUBLIC	??_C@_0BJ@HJOAGBPA@D3DRENDERSTATE_LASTPIXEL@	; `string'
PUBLIC	??_C@_0BK@PDECOFOG@D3DRENDERSTATE_TEXTUREMAG@	; `string'
PUBLIC	??_C@_0BK@CMJDAPBH@D3DRENDERSTATE_TEXTUREMIN@	; `string'
PUBLIC	??_C@_0BI@JONJLECK@D3DRENDERSTATE_SRCBLEND@	; `string'
PUBLIC	??_C@_0BJ@NHNKLGED@D3DRENDERSTATE_DESTBLEND@	; `string'
PUBLIC	??_C@_0BP@DFILFGAO@D3DRENDERSTATE_TEXTUREMAPBLEND@ ; `string'
PUBLIC	??_C@_0BI@LCMPJDJI@D3DRENDERSTATE_CULLMODE@	; `string'
PUBLIC	??_C@_0BF@DNDECFPH@D3DRENDERSTATE_ZFUNC@	; `string'
PUBLIC	??_C@_0BI@IJEOHOAF@D3DRENDERSTATE_ALPHAREF@	; `string'
PUBLIC	??_C@_0BJ@GANNJBFC@D3DRENDERSTATE_ALPHAFUNC@	; `string'
PUBLIC	??_C@_0BM@LHMFKGCM@D3DRENDERSTATE_DITHERENABLE@	; `string'
PUBLIC	??_C@_0CA@NJJHHPHM@D3DRENDERSTATE_ALPHABLENDENABLE@ ; `string'
PUBLIC	??_C@_0BJ@HHEDJNBH@D3DRENDERSTATE_FOGENABLE@	; `string'
PUBLIC	??_C@_0BO@PKCNIFOC@D3DRENDERSTATE_SPECULARENABLE@ ; `string'
PUBLIC	??_C@_0BI@JFGCNABN@D3DRENDERSTATE_ZVISIBLE@	; `string'
PUBLIC	??_C@_0BI@NCGKHAMM@D3DRENDERSTATE_SUBPIXEL@	; `string'
PUBLIC	??_C@_0BJ@OAGCDDLH@D3DRENDERSTATE_SUBPIXELX@	; `string'
PUBLIC	??_C@_0BN@BAJAHIB@D3DRENDERSTATE_STIPPLEDALPHA@	; `string'
PUBLIC	??_C@_0BI@IHNBIKOC@D3DRENDERSTATE_FOGCOLOR@	; `string'
PUBLIC	??_C@_0BM@NFKDMEHI@D3DRENDERSTATE_FOGTABLEMODE@	; `string'
PUBLIC	??_C@_0BN@IAIHECCF@D3DRENDERSTATE_FOGTABLESTART@ ; `string'
PUBLIC	??_C@_0BL@BEFGLOF@D3DRENDERSTATE_FOGTABLEEND@	; `string'
PUBLIC	??_C@_0BP@KJHPKLMC@D3DRENDERSTATE_FOGTABLEDENSITY@ ; `string'
PUBLIC	??_C@_0BN@DHMNIIJN@D3DRENDERSTATE_STIPPLEENABLE@ ; `string'
PUBLIC	??_C@_0BN@HAIGKMHK@D3DRENDERSTATE_EDGEANTIALIAS@ ; `string'
PUBLIC	??_C@_0BO@MHJHJGPO@D3DRENDERSTATE_COLORKEYENABLE@ ; `string'
PUBLIC	??_C@_0BL@FHCEPAGN@D3DRENDERSTATE_BORDERCOLOR@	; `string'
PUBLIC	??_C@_0BP@DEFNGIDJ@D3DRENDERSTATE_TEXTUREADDRESSU@ ; `string'
PUBLIC	??_C@_0BP@BPHADLPK@D3DRENDERSTATE_TEXTUREADDRESSV@ ; `string'
PUBLIC	??_C@_0BN@IBMBJOJB@D3DRENDERSTATE_MIPMAPLODBIAS@ ; `string'
PUBLIC	??_C@_0BF@JDOFDOHM@D3DRENDERSTATE_ZBIAS@	; `string'
PUBLIC	??_C@_0BO@BJOJLHBD@D3DRENDERSTATE_RANGEFOGENABLE@ ; `string'
PUBLIC	??_C@_0BK@MBOGHMKP@D3DRENDERSTATE_ANISOTROPY@	; `string'
PUBLIC	??_C@_0BK@FLBFNEIJ@D3DRENDERSTATE_FLUSHBATCH@	; `string'
PUBLIC	??_C@_0CK@KFBFDIJK@D3DRENDERSTATE_TRANSLUCENTSORTI@ ; `string'
PUBLIC	??_C@_0BN@FHAGEOFO@D3DRENDERSTATE_STENCILENABLE@ ; `string'
PUBLIC	??_C@_0BL@GAEEIINJ@D3DRENDERSTATE_STENCILFAIL@	; `string'
PUBLIC	??_C@_0BM@KGOINKAF@D3DRENDERSTATE_STENCILZFAIL@	; `string'
PUBLIC	??_C@_0BL@FDAPMCMD@D3DRENDERSTATE_STENCILPASS@	; `string'
PUBLIC	??_C@_0BL@DNOIECFL@D3DRENDERSTATE_STENCILFUNC@	; `string'
PUBLIC	??_C@_0BK@NEIGHFPP@D3DRENDERSTATE_STENCILREF@	; `string'
PUBLIC	??_C@_0BL@EJGEAJKJ@D3DRENDERSTATE_STENCILMASK@	; `string'
PUBLIC	??_C@_0CA@BGFPLFNE@D3DRENDERSTATE_STENCILWRITEMASK@ ; `string'
PUBLIC	??_C@_0BN@FGBHBEBA@D3DRENDERSTATE_TEXTUREFACTOR@ ; `string'
PUBLIC	??_C@_0CA@LIAGHCCL@D3DRENDERSTATE_STIPPLEPATTERN00@ ; `string'
PUBLIC	??_C@_0CA@KBBNEDGK@D3DRENDERSTATE_STIPPLEPATTERN01@ ; `string'
PUBLIC	??_C@_0CA@IKDABAKJ@D3DRENDERSTATE_STIPPLEPATTERN02@ ; `string'
PUBLIC	??_C@_0CA@JDCLCBOI@D3DRENDERSTATE_STIPPLEPATTERN03@ ; `string'
PUBLIC	??_C@_0CA@NMGKLHCP@D3DRENDERSTATE_STIPPLEPATTERN04@ ; `string'
PUBLIC	??_C@_0CA@MFHBIGGO@D3DRENDERSTATE_STIPPLEPATTERN05@ ; `string'
PUBLIC	??_C@_0CA@OOFMNFKN@D3DRENDERSTATE_STIPPLEPATTERN06@ ; `string'
PUBLIC	??_C@_0CA@PHEHOEOM@D3DRENDERSTATE_STIPPLEPATTERN07@ ; `string'
PUBLIC	??_C@_0CA@HANPPICD@D3DRENDERSTATE_STIPPLEPATTERN08@ ; `string'
PUBLIC	??_C@_0CA@GJMEMJGC@D3DRENDERSTATE_STIPPLEPATTERN09@ ; `string'
PUBLIC	??_C@_0CA@LJMEBIBM@D3DRENDERSTATE_STIPPLEPATTERN10@ ; `string'
PUBLIC	??_C@_0CA@KANPCJFN@D3DRENDERSTATE_STIPPLEPATTERN11@ ; `string'
PUBLIC	??_C@_0CA@ILPCHKJO@D3DRENDERSTATE_STIPPLEPATTERN12@ ; `string'
PUBLIC	??_C@_0CA@JCOJELNP@D3DRENDERSTATE_STIPPLEPATTERN13@ ; `string'
PUBLIC	??_C@_0CA@NNKINNBI@D3DRENDERSTATE_STIPPLEPATTERN14@ ; `string'
PUBLIC	??_C@_0CA@MELDOMFJ@D3DRENDERSTATE_STIPPLEPATTERN15@ ; `string'
PUBLIC	??_C@_0CA@OPJOLPJK@D3DRENDERSTATE_STIPPLEPATTERN16@ ; `string'
PUBLIC	??_C@_0CA@PGIFIONL@D3DRENDERSTATE_STIPPLEPATTERN17@ ; `string'
PUBLIC	??_C@_0CA@HBBNJCBE@D3DRENDERSTATE_STIPPLEPATTERN18@ ; `string'
PUBLIC	??_C@_0CA@GIAGKDFF@D3DRENDERSTATE_STIPPLEPATTERN19@ ; `string'
PUBLIC	??_C@_0CA@LLICKGEF@D3DRENDERSTATE_STIPPLEPATTERN20@ ; `string'
PUBLIC	??_C@_0CA@KCJJJHAE@D3DRENDERSTATE_STIPPLEPATTERN21@ ; `string'
PUBLIC	??_C@_0CA@IJLEMEMH@D3DRENDERSTATE_STIPPLEPATTERN22@ ; `string'
PUBLIC	??_C@_0CA@JAKPPFIG@D3DRENDERSTATE_STIPPLEPATTERN23@ ; `string'
PUBLIC	??_C@_0CA@NPOOGDEB@D3DRENDERSTATE_STIPPLEPATTERN24@ ; `string'
PUBLIC	??_C@_0CA@MGPFFCAA@D3DRENDERSTATE_STIPPLEPATTERN25@ ; `string'
PUBLIC	??_C@_0CA@ONNIABMD@D3DRENDERSTATE_STIPPLEPATTERN26@ ; `string'
PUBLIC	??_C@_0CA@PEMDDAIC@D3DRENDERSTATE_STIPPLEPATTERN27@ ; `string'
PUBLIC	??_C@_0CA@HDFLCMEN@D3DRENDERSTATE_STIPPLEPATTERN28@ ; `string'
PUBLIC	??_C@_0CA@GKEABNAM@D3DRENDERSTATE_STIPPLEPATTERN29@ ; `string'
PUBLIC	??_C@_0CA@LKEAMMHC@D3DRENDERSTATE_STIPPLEPATTERN30@ ; `string'
PUBLIC	??_C@_0CA@KDFLPNDD@D3DRENDERSTATE_STIPPLEPATTERN31@ ; `string'
PUBLIC	??_C@_0BF@NJBLGDOM@D3DRENDERSTATE_WRAP0@	; `string'
PUBLIC	??_C@_0BF@MAAAFCKN@D3DRENDERSTATE_WRAP1@	; `string'
PUBLIC	??_C@_0BF@OLCNABGO@D3DRENDERSTATE_WRAP2@	; `string'
PUBLIC	??_C@_0BF@PCDGDACP@D3DRENDERSTATE_WRAP3@	; `string'
PUBLIC	??_C@_0BF@LNHHKGOI@D3DRENDERSTATE_WRAP4@	; `string'
PUBLIC	??_C@_0BF@KEGMJHKJ@D3DRENDERSTATE_WRAP5@	; `string'
PUBLIC	??_C@_0BF@IPEBMEGK@D3DRENDERSTATE_WRAP6@	; `string'
PUBLIC	??_C@_0BF@JGFKPFCL@D3DRENDERSTATE_WRAP7@	; `string'
PUBLIC	?texture_stage_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A ; texture_stage_state_names
PUBLIC	??_C@_0P@PENAIEHP@D3DTSS_COLOROP@		; `string'
PUBLIC	??_C@_0BB@OEMDDMMN@D3DTSS_COLORARG1@		; `string'
PUBLIC	??_C@_0BB@MPOOGPAO@D3DTSS_COLORARG2@		; `string'
PUBLIC	??_C@_0P@DIFHPBO@D3DTSS_ALPHAOP@		; `string'
PUBLIC	??_C@_0BB@LCEKLKOK@D3DTSS_ALPHAARG1@		; `string'
PUBLIC	??_C@_0BB@JJGHOJCJ@D3DTSS_ALPHAARG2@		; `string'
PUBLIC	??_C@_0BE@MGLOKHIH@D3DTSS_BUMPENVMAT00@		; `string'
PUBLIC	??_C@_0BE@NPKFJGMG@D3DTSS_BUMPENVMAT01@		; `string'
PUBLIC	??_C@_0BE@MHHMMNLA@D3DTSS_BUMPENVMAT10@		; `string'
PUBLIC	??_C@_0BE@NOGHPMPB@D3DTSS_BUMPENVMAT11@		; `string'
PUBLIC	??_C@_0BF@OJEPMJMD@D3DTSS_TEXCOORDINDEX@	; `string'
PUBLIC	??_C@_0P@DDAOGAFH@D3DTSS_ADDRESS@		; `string'
PUBLIC	??_C@_0BA@DCPAGDCG@D3DTSS_ADDRESSU@		; `string'
PUBLIC	??_C@_0BA@BJNNDAOF@D3DTSS_ADDRESSV@		; `string'
PUBLIC	??_C@_0BD@MDAAPLFK@D3DTSS_BORDERCOLOR@		; `string'
PUBLIC	??_C@_0BB@DIEALFG@D3DTSS_MAGFILTER@		; `string'
PUBLIC	??_C@_0BB@KHBDLCGF@D3DTSS_MINFILTER@		; `string'
PUBLIC	??_C@_0BB@MOCCJBHM@D3DTSS_MIPFILTER@		; `string'
PUBLIC	??_C@_0BF@IGBEHDAJ@D3DTSS_MIPMAPLODBIAS@	; `string'
PUBLIC	??_C@_0BD@MFMHMKFP@D3DTSS_MAXMIPLEVEL@		; `string'
PUBLIC	??_C@_0BF@CFKECDHF@D3DTSS_MAXANISOTROPY@	; `string'
PUBLIC	??_C@_0BF@EKNFKGBP@D3DTSS_BUMPENVLSCALE@	; `string'
PUBLIC	??_C@_0BG@BJHMLMND@D3DTSS_BUMPENVLOFFSET@	; `string'
_BSS	SEGMENT
?running_total_number_of_d3d_triangles@@3HA DD 01H DUP (?) ; running_total_number_of_d3d_triangles
?total_number_of_d3d_triangles@@3HA DD 01H DUP (?)	; total_number_of_d3d_triangles
?running_total_number_of_d3d_flushes@@3HA DD 01H DUP (?) ; running_total_number_of_d3d_flushes
?total_number_of_d3d_flushes@@3HA DD 01H DUP (?)	; total_number_of_d3d_flushes
?number_of_d3d_degenerate_triangles@@3HA DD 01H DUP (?)	; number_of_d3d_degenerate_triangles
?number_of_d3d_triangles_drawn@@3HA DD 01H DUP (?)	; number_of_d3d_triangles_drawn
?number_of_d3d_lines_drawn@@3HA DD 01H DUP (?)		; number_of_d3d_lines_drawn
?d3d_transparency_enabled@@3HA DD 01H DUP (?)		; d3d_transparency_enabled
?d3d_in_order_rendering@@3HA DD 01H DUP (?)		; d3d_in_order_rendering
?state_list_pointer@@3PAXA DD 01H DUP (?)		; state_list_pointer
?state_data_pointer@@3PAXA DD 01H DUP (?)		; state_data_pointer
?state_list_number_of_states@@3HA DD 01H DUP (?)	; state_list_number_of_states
_BSS	ENDS
;	COMDAT ??_C@_0BG@BJHMLMND@D3DTSS_BUMPENVLOFFSET@
CONST	SEGMENT
??_C@_0BG@BJHMLMND@D3DTSS_BUMPENVLOFFSET@ DB 'D3DTSS_BUMPENVLOFFSET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EKNFKGBP@D3DTSS_BUMPENVLSCALE@
CONST	SEGMENT
??_C@_0BF@EKNFKGBP@D3DTSS_BUMPENVLSCALE@ DB 'D3DTSS_BUMPENVLSCALE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CFKECDHF@D3DTSS_MAXANISOTROPY@
CONST	SEGMENT
??_C@_0BF@CFKECDHF@D3DTSS_MAXANISOTROPY@ DB 'D3DTSS_MAXANISOTROPY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MFMHMKFP@D3DTSS_MAXMIPLEVEL@
CONST	SEGMENT
??_C@_0BD@MFMHMKFP@D3DTSS_MAXMIPLEVEL@ DB 'D3DTSS_MAXMIPLEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IGBEHDAJ@D3DTSS_MIPMAPLODBIAS@
CONST	SEGMENT
??_C@_0BF@IGBEHDAJ@D3DTSS_MIPMAPLODBIAS@ DB 'D3DTSS_MIPMAPLODBIAS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOCCJBHM@D3DTSS_MIPFILTER@
CONST	SEGMENT
??_C@_0BB@MOCCJBHM@D3DTSS_MIPFILTER@ DB 'D3DTSS_MIPFILTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KHBDLCGF@D3DTSS_MINFILTER@
CONST	SEGMENT
??_C@_0BB@KHBDLCGF@D3DTSS_MINFILTER@ DB 'D3DTSS_MINFILTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIEALFG@D3DTSS_MAGFILTER@
CONST	SEGMENT
??_C@_0BB@DIEALFG@D3DTSS_MAGFILTER@ DB 'D3DTSS_MAGFILTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MDAAPLFK@D3DTSS_BORDERCOLOR@
CONST	SEGMENT
??_C@_0BD@MDAAPLFK@D3DTSS_BORDERCOLOR@ DB 'D3DTSS_BORDERCOLOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJNNDAOF@D3DTSS_ADDRESSV@
CONST	SEGMENT
??_C@_0BA@BJNNDAOF@D3DTSS_ADDRESSV@ DB 'D3DTSS_ADDRESSV', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DCPAGDCG@D3DTSS_ADDRESSU@
CONST	SEGMENT
??_C@_0BA@DCPAGDCG@D3DTSS_ADDRESSU@ DB 'D3DTSS_ADDRESSU', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DDAOGAFH@D3DTSS_ADDRESS@
CONST	SEGMENT
??_C@_0P@DDAOGAFH@D3DTSS_ADDRESS@ DB 'D3DTSS_ADDRESS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OJEPMJMD@D3DTSS_TEXCOORDINDEX@
CONST	SEGMENT
??_C@_0BF@OJEPMJMD@D3DTSS_TEXCOORDINDEX@ DB 'D3DTSS_TEXCOORDINDEX', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NOGHPMPB@D3DTSS_BUMPENVMAT11@
CONST	SEGMENT
??_C@_0BE@NOGHPMPB@D3DTSS_BUMPENVMAT11@ DB 'D3DTSS_BUMPENVMAT11', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MHHMMNLA@D3DTSS_BUMPENVMAT10@
CONST	SEGMENT
??_C@_0BE@MHHMMNLA@D3DTSS_BUMPENVMAT10@ DB 'D3DTSS_BUMPENVMAT10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NPKFJGMG@D3DTSS_BUMPENVMAT01@
CONST	SEGMENT
??_C@_0BE@NPKFJGMG@D3DTSS_BUMPENVMAT01@ DB 'D3DTSS_BUMPENVMAT01', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MGLOKHIH@D3DTSS_BUMPENVMAT00@
CONST	SEGMENT
??_C@_0BE@MGLOKHIH@D3DTSS_BUMPENVMAT00@ DB 'D3DTSS_BUMPENVMAT00', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JJGHOJCJ@D3DTSS_ALPHAARG2@
CONST	SEGMENT
??_C@_0BB@JJGHOJCJ@D3DTSS_ALPHAARG2@ DB 'D3DTSS_ALPHAARG2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LCEKLKOK@D3DTSS_ALPHAARG1@
CONST	SEGMENT
??_C@_0BB@LCEKLKOK@D3DTSS_ALPHAARG1@ DB 'D3DTSS_ALPHAARG1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DIFHPBO@D3DTSS_ALPHAOP@
CONST	SEGMENT
??_C@_0P@DIFHPBO@D3DTSS_ALPHAOP@ DB 'D3DTSS_ALPHAOP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MPOOGPAO@D3DTSS_COLORARG2@
CONST	SEGMENT
??_C@_0BB@MPOOGPAO@D3DTSS_COLORARG2@ DB 'D3DTSS_COLORARG2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OEMDDMMN@D3DTSS_COLORARG1@
CONST	SEGMENT
??_C@_0BB@OEMDDMMN@D3DTSS_COLORARG1@ DB 'D3DTSS_COLORARG1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PENAIEHP@D3DTSS_COLOROP@
CONST	SEGMENT
??_C@_0P@PENAIEHP@D3DTSS_COLOROP@ DB 'D3DTSS_COLOROP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JGFKPFCL@D3DRENDERSTATE_WRAP7@
CONST	SEGMENT
??_C@_0BF@JGFKPFCL@D3DRENDERSTATE_WRAP7@ DB 'D3DRENDERSTATE_WRAP7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IPEBMEGK@D3DRENDERSTATE_WRAP6@
CONST	SEGMENT
??_C@_0BF@IPEBMEGK@D3DRENDERSTATE_WRAP6@ DB 'D3DRENDERSTATE_WRAP6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KEGMJHKJ@D3DRENDERSTATE_WRAP5@
CONST	SEGMENT
??_C@_0BF@KEGMJHKJ@D3DRENDERSTATE_WRAP5@ DB 'D3DRENDERSTATE_WRAP5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LNHHKGOI@D3DRENDERSTATE_WRAP4@
CONST	SEGMENT
??_C@_0BF@LNHHKGOI@D3DRENDERSTATE_WRAP4@ DB 'D3DRENDERSTATE_WRAP4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PCDGDACP@D3DRENDERSTATE_WRAP3@
CONST	SEGMENT
??_C@_0BF@PCDGDACP@D3DRENDERSTATE_WRAP3@ DB 'D3DRENDERSTATE_WRAP3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OLCNABGO@D3DRENDERSTATE_WRAP2@
CONST	SEGMENT
??_C@_0BF@OLCNABGO@D3DRENDERSTATE_WRAP2@ DB 'D3DRENDERSTATE_WRAP2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MAAAFCKN@D3DRENDERSTATE_WRAP1@
CONST	SEGMENT
??_C@_0BF@MAAAFCKN@D3DRENDERSTATE_WRAP1@ DB 'D3DRENDERSTATE_WRAP1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NJBLGDOM@D3DRENDERSTATE_WRAP0@
CONST	SEGMENT
??_C@_0BF@NJBLGDOM@D3DRENDERSTATE_WRAP0@ DB 'D3DRENDERSTATE_WRAP0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KDFLPNDD@D3DRENDERSTATE_STIPPLEPATTERN31@
CONST	SEGMENT
??_C@_0CA@KDFLPNDD@D3DRENDERSTATE_STIPPLEPATTERN31@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN31', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LKEAMMHC@D3DRENDERSTATE_STIPPLEPATTERN30@
CONST	SEGMENT
??_C@_0CA@LKEAMMHC@D3DRENDERSTATE_STIPPLEPATTERN30@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN30', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GKEABNAM@D3DRENDERSTATE_STIPPLEPATTERN29@
CONST	SEGMENT
??_C@_0CA@GKEABNAM@D3DRENDERSTATE_STIPPLEPATTERN29@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN29', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HDFLCMEN@D3DRENDERSTATE_STIPPLEPATTERN28@
CONST	SEGMENT
??_C@_0CA@HDFLCMEN@D3DRENDERSTATE_STIPPLEPATTERN28@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN28', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PEMDDAIC@D3DRENDERSTATE_STIPPLEPATTERN27@
CONST	SEGMENT
??_C@_0CA@PEMDDAIC@D3DRENDERSTATE_STIPPLEPATTERN27@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN27', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ONNIABMD@D3DRENDERSTATE_STIPPLEPATTERN26@
CONST	SEGMENT
??_C@_0CA@ONNIABMD@D3DRENDERSTATE_STIPPLEPATTERN26@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN26', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MGPFFCAA@D3DRENDERSTATE_STIPPLEPATTERN25@
CONST	SEGMENT
??_C@_0CA@MGPFFCAA@D3DRENDERSTATE_STIPPLEPATTERN25@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN25', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NPOOGDEB@D3DRENDERSTATE_STIPPLEPATTERN24@
CONST	SEGMENT
??_C@_0CA@NPOOGDEB@D3DRENDERSTATE_STIPPLEPATTERN24@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN24', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JAKPPFIG@D3DRENDERSTATE_STIPPLEPATTERN23@
CONST	SEGMENT
??_C@_0CA@JAKPPFIG@D3DRENDERSTATE_STIPPLEPATTERN23@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN23', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IJLEMEMH@D3DRENDERSTATE_STIPPLEPATTERN22@
CONST	SEGMENT
??_C@_0CA@IJLEMEMH@D3DRENDERSTATE_STIPPLEPATTERN22@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN22', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KCJJJHAE@D3DRENDERSTATE_STIPPLEPATTERN21@
CONST	SEGMENT
??_C@_0CA@KCJJJHAE@D3DRENDERSTATE_STIPPLEPATTERN21@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN21', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LLICKGEF@D3DRENDERSTATE_STIPPLEPATTERN20@
CONST	SEGMENT
??_C@_0CA@LLICKGEF@D3DRENDERSTATE_STIPPLEPATTERN20@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN20', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GIAGKDFF@D3DRENDERSTATE_STIPPLEPATTERN19@
CONST	SEGMENT
??_C@_0CA@GIAGKDFF@D3DRENDERSTATE_STIPPLEPATTERN19@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN19', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HBBNJCBE@D3DRENDERSTATE_STIPPLEPATTERN18@
CONST	SEGMENT
??_C@_0CA@HBBNJCBE@D3DRENDERSTATE_STIPPLEPATTERN18@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN18', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PGIFIONL@D3DRENDERSTATE_STIPPLEPATTERN17@
CONST	SEGMENT
??_C@_0CA@PGIFIONL@D3DRENDERSTATE_STIPPLEPATTERN17@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN17', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OPJOLPJK@D3DRENDERSTATE_STIPPLEPATTERN16@
CONST	SEGMENT
??_C@_0CA@OPJOLPJK@D3DRENDERSTATE_STIPPLEPATTERN16@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN16', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MELDOMFJ@D3DRENDERSTATE_STIPPLEPATTERN15@
CONST	SEGMENT
??_C@_0CA@MELDOMFJ@D3DRENDERSTATE_STIPPLEPATTERN15@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN15', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NNKINNBI@D3DRENDERSTATE_STIPPLEPATTERN14@
CONST	SEGMENT
??_C@_0CA@NNKINNBI@D3DRENDERSTATE_STIPPLEPATTERN14@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN14', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JCOJELNP@D3DRENDERSTATE_STIPPLEPATTERN13@
CONST	SEGMENT
??_C@_0CA@JCOJELNP@D3DRENDERSTATE_STIPPLEPATTERN13@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN13', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ILPCHKJO@D3DRENDERSTATE_STIPPLEPATTERN12@
CONST	SEGMENT
??_C@_0CA@ILPCHKJO@D3DRENDERSTATE_STIPPLEPATTERN12@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN12', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KANPCJFN@D3DRENDERSTATE_STIPPLEPATTERN11@
CONST	SEGMENT
??_C@_0CA@KANPCJFN@D3DRENDERSTATE_STIPPLEPATTERN11@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN11', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LJMEBIBM@D3DRENDERSTATE_STIPPLEPATTERN10@
CONST	SEGMENT
??_C@_0CA@LJMEBIBM@D3DRENDERSTATE_STIPPLEPATTERN10@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GJMEMJGC@D3DRENDERSTATE_STIPPLEPATTERN09@
CONST	SEGMENT
??_C@_0CA@GJMEMJGC@D3DRENDERSTATE_STIPPLEPATTERN09@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN09', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HANPPICD@D3DRENDERSTATE_STIPPLEPATTERN08@
CONST	SEGMENT
??_C@_0CA@HANPPICD@D3DRENDERSTATE_STIPPLEPATTERN08@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN08', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PHEHOEOM@D3DRENDERSTATE_STIPPLEPATTERN07@
CONST	SEGMENT
??_C@_0CA@PHEHOEOM@D3DRENDERSTATE_STIPPLEPATTERN07@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN07', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OOFMNFKN@D3DRENDERSTATE_STIPPLEPATTERN06@
CONST	SEGMENT
??_C@_0CA@OOFMNFKN@D3DRENDERSTATE_STIPPLEPATTERN06@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN06', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MFHBIGGO@D3DRENDERSTATE_STIPPLEPATTERN05@
CONST	SEGMENT
??_C@_0CA@MFHBIGGO@D3DRENDERSTATE_STIPPLEPATTERN05@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN05', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NMGKLHCP@D3DRENDERSTATE_STIPPLEPATTERN04@
CONST	SEGMENT
??_C@_0CA@NMGKLHCP@D3DRENDERSTATE_STIPPLEPATTERN04@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN04', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JDCLCBOI@D3DRENDERSTATE_STIPPLEPATTERN03@
CONST	SEGMENT
??_C@_0CA@JDCLCBOI@D3DRENDERSTATE_STIPPLEPATTERN03@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN03', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IKDABAKJ@D3DRENDERSTATE_STIPPLEPATTERN02@
CONST	SEGMENT
??_C@_0CA@IKDABAKJ@D3DRENDERSTATE_STIPPLEPATTERN02@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN02', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KBBNEDGK@D3DRENDERSTATE_STIPPLEPATTERN01@
CONST	SEGMENT
??_C@_0CA@KBBNEDGK@D3DRENDERSTATE_STIPPLEPATTERN01@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN01', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LIAGHCCL@D3DRENDERSTATE_STIPPLEPATTERN00@
CONST	SEGMENT
??_C@_0CA@LIAGHCCL@D3DRENDERSTATE_STIPPLEPATTERN00@ DB 'D3DRENDERSTATE_ST'
	DB	'IPPLEPATTERN00', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FGBHBEBA@D3DRENDERSTATE_TEXTUREFACTOR@
CONST	SEGMENT
??_C@_0BN@FGBHBEBA@D3DRENDERSTATE_TEXTUREFACTOR@ DB 'D3DRENDERSTATE_TEXTU'
	DB	'REFACTOR', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BGFPLFNE@D3DRENDERSTATE_STENCILWRITEMASK@
CONST	SEGMENT
??_C@_0CA@BGFPLFNE@D3DRENDERSTATE_STENCILWRITEMASK@ DB 'D3DRENDERSTATE_ST'
	DB	'ENCILWRITEMASK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EJGEAJKJ@D3DRENDERSTATE_STENCILMASK@
CONST	SEGMENT
??_C@_0BL@EJGEAJKJ@D3DRENDERSTATE_STENCILMASK@ DB 'D3DRENDERSTATE_STENCIL'
	DB	'MASK', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NEIGHFPP@D3DRENDERSTATE_STENCILREF@
CONST	SEGMENT
??_C@_0BK@NEIGHFPP@D3DRENDERSTATE_STENCILREF@ DB 'D3DRENDERSTATE_STENCILR'
	DB	'EF', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DNOIECFL@D3DRENDERSTATE_STENCILFUNC@
CONST	SEGMENT
??_C@_0BL@DNOIECFL@D3DRENDERSTATE_STENCILFUNC@ DB 'D3DRENDERSTATE_STENCIL'
	DB	'FUNC', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FDAPMCMD@D3DRENDERSTATE_STENCILPASS@
CONST	SEGMENT
??_C@_0BL@FDAPMCMD@D3DRENDERSTATE_STENCILPASS@ DB 'D3DRENDERSTATE_STENCIL'
	DB	'PASS', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KGOINKAF@D3DRENDERSTATE_STENCILZFAIL@
CONST	SEGMENT
??_C@_0BM@KGOINKAF@D3DRENDERSTATE_STENCILZFAIL@ DB 'D3DRENDERSTATE_STENCI'
	DB	'LZFAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GAEEIINJ@D3DRENDERSTATE_STENCILFAIL@
CONST	SEGMENT
??_C@_0BL@GAEEIINJ@D3DRENDERSTATE_STENCILFAIL@ DB 'D3DRENDERSTATE_STENCIL'
	DB	'FAIL', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FHAGEOFO@D3DRENDERSTATE_STENCILENABLE@
CONST	SEGMENT
??_C@_0BN@FHAGEOFO@D3DRENDERSTATE_STENCILENABLE@ DB 'D3DRENDERSTATE_STENC'
	DB	'ILENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KFBFDIJK@D3DRENDERSTATE_TRANSLUCENTSORTI@
CONST	SEGMENT
??_C@_0CK@KFBFDIJK@D3DRENDERSTATE_TRANSLUCENTSORTI@ DB 'D3DRENDERSTATE_TR'
	DB	'ANSLUCENTSORTINDEPENDENT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FLBFNEIJ@D3DRENDERSTATE_FLUSHBATCH@
CONST	SEGMENT
??_C@_0BK@FLBFNEIJ@D3DRENDERSTATE_FLUSHBATCH@ DB 'D3DRENDERSTATE_FLUSHBAT'
	DB	'CH', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MBOGHMKP@D3DRENDERSTATE_ANISOTROPY@
CONST	SEGMENT
??_C@_0BK@MBOGHMKP@D3DRENDERSTATE_ANISOTROPY@ DB 'D3DRENDERSTATE_ANISOTRO'
	DB	'PY', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BJOJLHBD@D3DRENDERSTATE_RANGEFOGENABLE@
CONST	SEGMENT
??_C@_0BO@BJOJLHBD@D3DRENDERSTATE_RANGEFOGENABLE@ DB 'D3DRENDERSTATE_RANG'
	DB	'EFOGENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDOFDOHM@D3DRENDERSTATE_ZBIAS@
CONST	SEGMENT
??_C@_0BF@JDOFDOHM@D3DRENDERSTATE_ZBIAS@ DB 'D3DRENDERSTATE_ZBIAS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IBMBJOJB@D3DRENDERSTATE_MIPMAPLODBIAS@
CONST	SEGMENT
??_C@_0BN@IBMBJOJB@D3DRENDERSTATE_MIPMAPLODBIAS@ DB 'D3DRENDERSTATE_MIPMA'
	DB	'PLODBIAS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BPHADLPK@D3DRENDERSTATE_TEXTUREADDRESSV@
CONST	SEGMENT
??_C@_0BP@BPHADLPK@D3DRENDERSTATE_TEXTUREADDRESSV@ DB 'D3DRENDERSTATE_TEX'
	DB	'TUREADDRESSV', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DEFNGIDJ@D3DRENDERSTATE_TEXTUREADDRESSU@
CONST	SEGMENT
??_C@_0BP@DEFNGIDJ@D3DRENDERSTATE_TEXTUREADDRESSU@ DB 'D3DRENDERSTATE_TEX'
	DB	'TUREADDRESSU', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FHCEPAGN@D3DRENDERSTATE_BORDERCOLOR@
CONST	SEGMENT
??_C@_0BL@FHCEPAGN@D3DRENDERSTATE_BORDERCOLOR@ DB 'D3DRENDERSTATE_BORDERC'
	DB	'OLOR', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MHJHJGPO@D3DRENDERSTATE_COLORKEYENABLE@
CONST	SEGMENT
??_C@_0BO@MHJHJGPO@D3DRENDERSTATE_COLORKEYENABLE@ DB 'D3DRENDERSTATE_COLO'
	DB	'RKEYENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HAIGKMHK@D3DRENDERSTATE_EDGEANTIALIAS@
CONST	SEGMENT
??_C@_0BN@HAIGKMHK@D3DRENDERSTATE_EDGEANTIALIAS@ DB 'D3DRENDERSTATE_EDGEA'
	DB	'NTIALIAS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DHMNIIJN@D3DRENDERSTATE_STIPPLEENABLE@
CONST	SEGMENT
??_C@_0BN@DHMNIIJN@D3DRENDERSTATE_STIPPLEENABLE@ DB 'D3DRENDERSTATE_STIPP'
	DB	'LEENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KJHPKLMC@D3DRENDERSTATE_FOGTABLEDENSITY@
CONST	SEGMENT
??_C@_0BP@KJHPKLMC@D3DRENDERSTATE_FOGTABLEDENSITY@ DB 'D3DRENDERSTATE_FOG'
	DB	'TABLEDENSITY', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BEFGLOF@D3DRENDERSTATE_FOGTABLEEND@
CONST	SEGMENT
??_C@_0BL@BEFGLOF@D3DRENDERSTATE_FOGTABLEEND@ DB 'D3DRENDERSTATE_FOGTABLE'
	DB	'END', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IAIHECCF@D3DRENDERSTATE_FOGTABLESTART@
CONST	SEGMENT
??_C@_0BN@IAIHECCF@D3DRENDERSTATE_FOGTABLESTART@ DB 'D3DRENDERSTATE_FOGTA'
	DB	'BLESTART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NFKDMEHI@D3DRENDERSTATE_FOGTABLEMODE@
CONST	SEGMENT
??_C@_0BM@NFKDMEHI@D3DRENDERSTATE_FOGTABLEMODE@ DB 'D3DRENDERSTATE_FOGTAB'
	DB	'LEMODE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IHNBIKOC@D3DRENDERSTATE_FOGCOLOR@
CONST	SEGMENT
??_C@_0BI@IHNBIKOC@D3DRENDERSTATE_FOGCOLOR@ DB 'D3DRENDERSTATE_FOGCOLOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BAJAHIB@D3DRENDERSTATE_STIPPLEDALPHA@
CONST	SEGMENT
??_C@_0BN@BAJAHIB@D3DRENDERSTATE_STIPPLEDALPHA@ DB 'D3DRENDERSTATE_STIPPL'
	DB	'EDALPHA', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OAGCDDLH@D3DRENDERSTATE_SUBPIXELX@
CONST	SEGMENT
??_C@_0BJ@OAGCDDLH@D3DRENDERSTATE_SUBPIXELX@ DB 'D3DRENDERSTATE_SUBPIXELX'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NCGKHAMM@D3DRENDERSTATE_SUBPIXEL@
CONST	SEGMENT
??_C@_0BI@NCGKHAMM@D3DRENDERSTATE_SUBPIXEL@ DB 'D3DRENDERSTATE_SUBPIXEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JFGCNABN@D3DRENDERSTATE_ZVISIBLE@
CONST	SEGMENT
??_C@_0BI@JFGCNABN@D3DRENDERSTATE_ZVISIBLE@ DB 'D3DRENDERSTATE_ZVISIBLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PKCNIFOC@D3DRENDERSTATE_SPECULARENABLE@
CONST	SEGMENT
??_C@_0BO@PKCNIFOC@D3DRENDERSTATE_SPECULARENABLE@ DB 'D3DRENDERSTATE_SPEC'
	DB	'ULARENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HHEDJNBH@D3DRENDERSTATE_FOGENABLE@
CONST	SEGMENT
??_C@_0BJ@HHEDJNBH@D3DRENDERSTATE_FOGENABLE@ DB 'D3DRENDERSTATE_FOGENABLE'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NJJHHPHM@D3DRENDERSTATE_ALPHABLENDENABLE@
CONST	SEGMENT
??_C@_0CA@NJJHHPHM@D3DRENDERSTATE_ALPHABLENDENABLE@ DB 'D3DRENDERSTATE_AL'
	DB	'PHABLENDENABLE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LHMFKGCM@D3DRENDERSTATE_DITHERENABLE@
CONST	SEGMENT
??_C@_0BM@LHMFKGCM@D3DRENDERSTATE_DITHERENABLE@ DB 'D3DRENDERSTATE_DITHER'
	DB	'ENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GANNJBFC@D3DRENDERSTATE_ALPHAFUNC@
CONST	SEGMENT
??_C@_0BJ@GANNJBFC@D3DRENDERSTATE_ALPHAFUNC@ DB 'D3DRENDERSTATE_ALPHAFUNC'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IJEOHOAF@D3DRENDERSTATE_ALPHAREF@
CONST	SEGMENT
??_C@_0BI@IJEOHOAF@D3DRENDERSTATE_ALPHAREF@ DB 'D3DRENDERSTATE_ALPHAREF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DNDECFPH@D3DRENDERSTATE_ZFUNC@
CONST	SEGMENT
??_C@_0BF@DNDECFPH@D3DRENDERSTATE_ZFUNC@ DB 'D3DRENDERSTATE_ZFUNC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LCMPJDJI@D3DRENDERSTATE_CULLMODE@
CONST	SEGMENT
??_C@_0BI@LCMPJDJI@D3DRENDERSTATE_CULLMODE@ DB 'D3DRENDERSTATE_CULLMODE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DFILFGAO@D3DRENDERSTATE_TEXTUREMAPBLEND@
CONST	SEGMENT
??_C@_0BP@DFILFGAO@D3DRENDERSTATE_TEXTUREMAPBLEND@ DB 'D3DRENDERSTATE_TEX'
	DB	'TUREMAPBLEND', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NHNKLGED@D3DRENDERSTATE_DESTBLEND@
CONST	SEGMENT
??_C@_0BJ@NHNKLGED@D3DRENDERSTATE_DESTBLEND@ DB 'D3DRENDERSTATE_DESTBLEND'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JONJLECK@D3DRENDERSTATE_SRCBLEND@
CONST	SEGMENT
??_C@_0BI@JONJLECK@D3DRENDERSTATE_SRCBLEND@ DB 'D3DRENDERSTATE_SRCBLEND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CMJDAPBH@D3DRENDERSTATE_TEXTUREMIN@
CONST	SEGMENT
??_C@_0BK@CMJDAPBH@D3DRENDERSTATE_TEXTUREMIN@ DB 'D3DRENDERSTATE_TEXTUREM'
	DB	'IN', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PDECOFOG@D3DRENDERSTATE_TEXTUREMAG@
CONST	SEGMENT
??_C@_0BK@PDECOFOG@D3DRENDERSTATE_TEXTUREMAG@ DB 'D3DRENDERSTATE_TEXTUREM'
	DB	'AG', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HJOAGBPA@D3DRENDERSTATE_LASTPIXEL@
CONST	SEGMENT
??_C@_0BJ@HJOAGBPA@D3DRENDERSTATE_LASTPIXEL@ DB 'D3DRENDERSTATE_LASTPIXEL'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EIGNHDKH@D3DRENDERSTATE_ALPHATESTENABLE@
CONST	SEGMENT
??_C@_0BP@EIGNHDKH@D3DRENDERSTATE_ALPHATESTENABLE@ DB 'D3DRENDERSTATE_ALP'
	DB	'HATESTENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NGLPPNNJ@D3DRENDERSTATE_ZWRITEENABLE@
CONST	SEGMENT
??_C@_0BM@NGLPPNNJ@D3DRENDERSTATE_ZWRITEENABLE@ DB 'D3DRENDERSTATE_ZWRITE'
	DB	'ENABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JEGNHGOP@D3DRENDERSTATE_PLANEMASK@
CONST	SEGMENT
??_C@_0BJ@JEGNHGOP@D3DRENDERSTATE_PLANEMASK@ DB 'D3DRENDERSTATE_PLANEMASK'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MLFMMABF@D3DRENDERSTATE_ROP2@
CONST	SEGMENT
??_C@_0BE@MLFMMABF@D3DRENDERSTATE_ROP2@ DB 'D3DRENDERSTATE_ROP2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ELBHIAIO@D3DRENDERSTATE_MONOENABLE@
CONST	SEGMENT
??_C@_0BK@ELBHIAIO@D3DRENDERSTATE_MONOENABLE@ DB 'D3DRENDERSTATE_MONOENAB'
	DB	'LE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JIEGJDEN@D3DRENDERSTATE_LINEPATTERN@
CONST	SEGMENT
??_C@_0BL@JIEGJDEN@D3DRENDERSTATE_LINEPATTERN@ DB 'D3DRENDERSTATE_LINEPAT'
	DB	'TERN', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OBPDCMOG@D3DRENDERSTATE_SHADEMODE@
CONST	SEGMENT
??_C@_0BJ@OBPDCMOG@D3DRENDERSTATE_SHADEMODE@ DB 'D3DRENDERSTATE_SHADEMODE'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NDEMPCLD@D3DRENDERSTATE_FILLMODE@
CONST	SEGMENT
??_C@_0BI@NDEMPCLD@D3DRENDERSTATE_FILLMODE@ DB 'D3DRENDERSTATE_FILLMODE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IGGCEJJM@D3DRENDERSTATE_ZENABLE@
CONST	SEGMENT
??_C@_0BH@IGGCEJJM@D3DRENDERSTATE_ZENABLE@ DB 'D3DRENDERSTATE_ZENABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OKLMKPMN@D3DRENDERSTATE_WRAPV@
CONST	SEGMENT
??_C@_0BF@OKLMKPMN@D3DRENDERSTATE_WRAPV@ DB 'D3DRENDERSTATE_WRAPV', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MBJBPMAO@D3DRENDERSTATE_WRAPU@
CONST	SEGMENT
??_C@_0BF@MBJBPMAO@D3DRENDERSTATE_WRAPU@ DB 'D3DRENDERSTATE_WRAPU', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PFHMMKBH@D3DRENDERSTATE_TEXTUREPERSPECTI@
CONST	SEGMENT
??_C@_0CC@PFHMMKBH@D3DRENDERSTATE_TEXTUREPERSPECTI@ DB 'D3DRENDERSTATE_TE'
	DB	'XTUREPERSPECTIVE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CILAGABC@D3DRENDERSTATE_TEXTUREADDRESS@
CONST	SEGMENT
??_C@_0BO@CILAGABC@D3DRENDERSTATE_TEXTUREADDRESS@ DB 'D3DRENDERSTATE_TEXT'
	DB	'UREADDRESS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HNPHBJHA@D3DRENDERSTATE_ANTIALIAS@
CONST	SEGMENT
??_C@_0BJ@HNPHBJHA@D3DRENDERSTATE_ANTIALIAS@ DB 'D3DRENDERSTATE_ANTIALIAS'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KJGEMGKM@D3DRENDERSTATE_TEXTUREHANDLE@
CONST	SEGMENT
??_C@_0BN@KJGEMGKM@D3DRENDERSTATE_TEXTUREHANDLE@ DB 'D3DRENDERSTATE_TEXTU'
	DB	'REHANDLE', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?render_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A DD 01H ; render_state_names
	DD	FLAT:??_C@_0BN@KJGEMGKM@D3DRENDERSTATE_TEXTUREHANDLE@
	DD	02H
	DD	FLAT:??_C@_0BJ@HNPHBJHA@D3DRENDERSTATE_ANTIALIAS@
	DD	03H
	DD	FLAT:??_C@_0BO@CILAGABC@D3DRENDERSTATE_TEXTUREADDRESS@
	DD	04H
	DD	FLAT:??_C@_0CC@PFHMMKBH@D3DRENDERSTATE_TEXTUREPERSPECTI@
	DD	05H
	DD	FLAT:??_C@_0BF@MBJBPMAO@D3DRENDERSTATE_WRAPU@
	DD	06H
	DD	FLAT:??_C@_0BF@OKLMKPMN@D3DRENDERSTATE_WRAPV@
	DD	07H
	DD	FLAT:??_C@_0BH@IGGCEJJM@D3DRENDERSTATE_ZENABLE@
	DD	08H
	DD	FLAT:??_C@_0BI@NDEMPCLD@D3DRENDERSTATE_FILLMODE@
	DD	09H
	DD	FLAT:??_C@_0BJ@OBPDCMOG@D3DRENDERSTATE_SHADEMODE@
	DD	0aH
	DD	FLAT:??_C@_0BL@JIEGJDEN@D3DRENDERSTATE_LINEPATTERN@
	DD	0bH
	DD	FLAT:??_C@_0BK@ELBHIAIO@D3DRENDERSTATE_MONOENABLE@
	DD	0cH
	DD	FLAT:??_C@_0BE@MLFMMABF@D3DRENDERSTATE_ROP2@
	DD	0dH
	DD	FLAT:??_C@_0BJ@JEGNHGOP@D3DRENDERSTATE_PLANEMASK@
	DD	0eH
	DD	FLAT:??_C@_0BM@NGLPPNNJ@D3DRENDERSTATE_ZWRITEENABLE@
	DD	0fH
	DD	FLAT:??_C@_0BP@EIGNHDKH@D3DRENDERSTATE_ALPHATESTENABLE@
	DD	010H
	DD	FLAT:??_C@_0BJ@HJOAGBPA@D3DRENDERSTATE_LASTPIXEL@
	DD	011H
	DD	FLAT:??_C@_0BK@PDECOFOG@D3DRENDERSTATE_TEXTUREMAG@
	DD	012H
	DD	FLAT:??_C@_0BK@CMJDAPBH@D3DRENDERSTATE_TEXTUREMIN@
	DD	013H
	DD	FLAT:??_C@_0BI@JONJLECK@D3DRENDERSTATE_SRCBLEND@
	DD	014H
	DD	FLAT:??_C@_0BJ@NHNKLGED@D3DRENDERSTATE_DESTBLEND@
	DD	015H
	DD	FLAT:??_C@_0BP@DFILFGAO@D3DRENDERSTATE_TEXTUREMAPBLEND@
	DD	016H
	DD	FLAT:??_C@_0BI@LCMPJDJI@D3DRENDERSTATE_CULLMODE@
	DD	017H
	DD	FLAT:??_C@_0BF@DNDECFPH@D3DRENDERSTATE_ZFUNC@
	DD	018H
	DD	FLAT:??_C@_0BI@IJEOHOAF@D3DRENDERSTATE_ALPHAREF@
	DD	019H
	DD	FLAT:??_C@_0BJ@GANNJBFC@D3DRENDERSTATE_ALPHAFUNC@
	DD	01aH
	DD	FLAT:??_C@_0BM@LHMFKGCM@D3DRENDERSTATE_DITHERENABLE@
	DD	01bH
	DD	FLAT:??_C@_0CA@NJJHHPHM@D3DRENDERSTATE_ALPHABLENDENABLE@
	DD	01cH
	DD	FLAT:??_C@_0BJ@HHEDJNBH@D3DRENDERSTATE_FOGENABLE@
	DD	01dH
	DD	FLAT:??_C@_0BO@PKCNIFOC@D3DRENDERSTATE_SPECULARENABLE@
	DD	01eH
	DD	FLAT:??_C@_0BI@JFGCNABN@D3DRENDERSTATE_ZVISIBLE@
	DD	01fH
	DD	FLAT:??_C@_0BI@NCGKHAMM@D3DRENDERSTATE_SUBPIXEL@
	DD	020H
	DD	FLAT:??_C@_0BJ@OAGCDDLH@D3DRENDERSTATE_SUBPIXELX@
	DD	021H
	DD	FLAT:??_C@_0BN@BAJAHIB@D3DRENDERSTATE_STIPPLEDALPHA@
	DD	022H
	DD	FLAT:??_C@_0BI@IHNBIKOC@D3DRENDERSTATE_FOGCOLOR@
	DD	023H
	DD	FLAT:??_C@_0BM@NFKDMEHI@D3DRENDERSTATE_FOGTABLEMODE@
	DD	024H
	DD	FLAT:??_C@_0BN@IAIHECCF@D3DRENDERSTATE_FOGTABLESTART@
	DD	025H
	DD	FLAT:??_C@_0BL@BEFGLOF@D3DRENDERSTATE_FOGTABLEEND@
	DD	026H
	DD	FLAT:??_C@_0BP@KJHPKLMC@D3DRENDERSTATE_FOGTABLEDENSITY@
	DD	027H
	DD	FLAT:??_C@_0BN@DHMNIIJN@D3DRENDERSTATE_STIPPLEENABLE@
	DD	028H
	DD	FLAT:??_C@_0BN@HAIGKMHK@D3DRENDERSTATE_EDGEANTIALIAS@
	DD	029H
	DD	FLAT:??_C@_0BO@MHJHJGPO@D3DRENDERSTATE_COLORKEYENABLE@
	DD	02bH
	DD	FLAT:??_C@_0BL@FHCEPAGN@D3DRENDERSTATE_BORDERCOLOR@
	DD	02cH
	DD	FLAT:??_C@_0BP@DEFNGIDJ@D3DRENDERSTATE_TEXTUREADDRESSU@
	DD	02dH
	DD	FLAT:??_C@_0BP@BPHADLPK@D3DRENDERSTATE_TEXTUREADDRESSV@
	DD	02eH
	DD	FLAT:??_C@_0BN@IBMBJOJB@D3DRENDERSTATE_MIPMAPLODBIAS@
	DD	02fH
	DD	FLAT:??_C@_0BF@JDOFDOHM@D3DRENDERSTATE_ZBIAS@
	DD	030H
	DD	FLAT:??_C@_0BO@BJOJLHBD@D3DRENDERSTATE_RANGEFOGENABLE@
	DD	031H
	DD	FLAT:??_C@_0BK@MBOGHMKP@D3DRENDERSTATE_ANISOTROPY@
	DD	032H
	DD	FLAT:??_C@_0BK@FLBFNEIJ@D3DRENDERSTATE_FLUSHBATCH@
	DD	033H
	DD	FLAT:??_C@_0CK@KFBFDIJK@D3DRENDERSTATE_TRANSLUCENTSORTI@
	DD	034H
	DD	FLAT:??_C@_0BN@FHAGEOFO@D3DRENDERSTATE_STENCILENABLE@
	DD	035H
	DD	FLAT:??_C@_0BL@GAEEIINJ@D3DRENDERSTATE_STENCILFAIL@
	DD	036H
	DD	FLAT:??_C@_0BM@KGOINKAF@D3DRENDERSTATE_STENCILZFAIL@
	DD	037H
	DD	FLAT:??_C@_0BL@FDAPMCMD@D3DRENDERSTATE_STENCILPASS@
	DD	038H
	DD	FLAT:??_C@_0BL@DNOIECFL@D3DRENDERSTATE_STENCILFUNC@
	DD	039H
	DD	FLAT:??_C@_0BK@NEIGHFPP@D3DRENDERSTATE_STENCILREF@
	DD	03aH
	DD	FLAT:??_C@_0BL@EJGEAJKJ@D3DRENDERSTATE_STENCILMASK@
	DD	03bH
	DD	FLAT:??_C@_0CA@BGFPLFNE@D3DRENDERSTATE_STENCILWRITEMASK@
	DD	03cH
	DD	FLAT:??_C@_0BN@FGBHBEBA@D3DRENDERSTATE_TEXTUREFACTOR@
	DD	040H
	DD	FLAT:??_C@_0CA@LIAGHCCL@D3DRENDERSTATE_STIPPLEPATTERN00@
	DD	041H
	DD	FLAT:??_C@_0CA@KBBNEDGK@D3DRENDERSTATE_STIPPLEPATTERN01@
	DD	042H
	DD	FLAT:??_C@_0CA@IKDABAKJ@D3DRENDERSTATE_STIPPLEPATTERN02@
	DD	043H
	DD	FLAT:??_C@_0CA@JDCLCBOI@D3DRENDERSTATE_STIPPLEPATTERN03@
	DD	044H
	DD	FLAT:??_C@_0CA@NMGKLHCP@D3DRENDERSTATE_STIPPLEPATTERN04@
	DD	045H
	DD	FLAT:??_C@_0CA@MFHBIGGO@D3DRENDERSTATE_STIPPLEPATTERN05@
	DD	046H
	DD	FLAT:??_C@_0CA@OOFMNFKN@D3DRENDERSTATE_STIPPLEPATTERN06@
	DD	047H
	DD	FLAT:??_C@_0CA@PHEHOEOM@D3DRENDERSTATE_STIPPLEPATTERN07@
	DD	048H
	DD	FLAT:??_C@_0CA@HANPPICD@D3DRENDERSTATE_STIPPLEPATTERN08@
	DD	049H
	DD	FLAT:??_C@_0CA@GJMEMJGC@D3DRENDERSTATE_STIPPLEPATTERN09@
	DD	04aH
	DD	FLAT:??_C@_0CA@LJMEBIBM@D3DRENDERSTATE_STIPPLEPATTERN10@
	DD	04bH
	DD	FLAT:??_C@_0CA@KANPCJFN@D3DRENDERSTATE_STIPPLEPATTERN11@
	DD	04cH
	DD	FLAT:??_C@_0CA@ILPCHKJO@D3DRENDERSTATE_STIPPLEPATTERN12@
	DD	04dH
	DD	FLAT:??_C@_0CA@JCOJELNP@D3DRENDERSTATE_STIPPLEPATTERN13@
	DD	04eH
	DD	FLAT:??_C@_0CA@NNKINNBI@D3DRENDERSTATE_STIPPLEPATTERN14@
	DD	04fH
	DD	FLAT:??_C@_0CA@MELDOMFJ@D3DRENDERSTATE_STIPPLEPATTERN15@
	DD	050H
	DD	FLAT:??_C@_0CA@OPJOLPJK@D3DRENDERSTATE_STIPPLEPATTERN16@
	DD	051H
	DD	FLAT:??_C@_0CA@PGIFIONL@D3DRENDERSTATE_STIPPLEPATTERN17@
	DD	052H
	DD	FLAT:??_C@_0CA@HBBNJCBE@D3DRENDERSTATE_STIPPLEPATTERN18@
	DD	053H
	DD	FLAT:??_C@_0CA@GIAGKDFF@D3DRENDERSTATE_STIPPLEPATTERN19@
	DD	054H
	DD	FLAT:??_C@_0CA@LLICKGEF@D3DRENDERSTATE_STIPPLEPATTERN20@
	DD	055H
	DD	FLAT:??_C@_0CA@KCJJJHAE@D3DRENDERSTATE_STIPPLEPATTERN21@
	DD	056H
	DD	FLAT:??_C@_0CA@IJLEMEMH@D3DRENDERSTATE_STIPPLEPATTERN22@
	DD	057H
	DD	FLAT:??_C@_0CA@JAKPPFIG@D3DRENDERSTATE_STIPPLEPATTERN23@
	DD	058H
	DD	FLAT:??_C@_0CA@NPOOGDEB@D3DRENDERSTATE_STIPPLEPATTERN24@
	DD	059H
	DD	FLAT:??_C@_0CA@MGPFFCAA@D3DRENDERSTATE_STIPPLEPATTERN25@
	DD	05aH
	DD	FLAT:??_C@_0CA@ONNIABMD@D3DRENDERSTATE_STIPPLEPATTERN26@
	DD	05bH
	DD	FLAT:??_C@_0CA@PEMDDAIC@D3DRENDERSTATE_STIPPLEPATTERN27@
	DD	05cH
	DD	FLAT:??_C@_0CA@HDFLCMEN@D3DRENDERSTATE_STIPPLEPATTERN28@
	DD	05dH
	DD	FLAT:??_C@_0CA@GKEABNAM@D3DRENDERSTATE_STIPPLEPATTERN29@
	DD	05eH
	DD	FLAT:??_C@_0CA@LKEAMMHC@D3DRENDERSTATE_STIPPLEPATTERN30@
	DD	05fH
	DD	FLAT:??_C@_0CA@KDFLPNDD@D3DRENDERSTATE_STIPPLEPATTERN31@
	DD	080H
	DD	FLAT:??_C@_0BF@NJBLGDOM@D3DRENDERSTATE_WRAP0@
	DD	081H
	DD	FLAT:??_C@_0BF@MAAAFCKN@D3DRENDERSTATE_WRAP1@
	DD	082H
	DD	FLAT:??_C@_0BF@OLCNABGO@D3DRENDERSTATE_WRAP2@
	DD	083H
	DD	FLAT:??_C@_0BF@PCDGDACP@D3DRENDERSTATE_WRAP3@
	DD	084H
	DD	FLAT:??_C@_0BF@LNHHKGOI@D3DRENDERSTATE_WRAP4@
	DD	085H
	DD	FLAT:??_C@_0BF@KEGMJHKJ@D3DRENDERSTATE_WRAP5@
	DD	086H
	DD	FLAT:??_C@_0BF@IPEBMEGK@D3DRENDERSTATE_WRAP6@
	DD	087H
	DD	FLAT:??_C@_0BF@JGFKPFCL@D3DRENDERSTATE_WRAP7@
?texture_stage_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A DD 01H ; texture_stage_state_names
	DD	FLAT:??_C@_0P@PENAIEHP@D3DTSS_COLOROP@
	DD	02H
	DD	FLAT:??_C@_0BB@OEMDDMMN@D3DTSS_COLORARG1@
	DD	03H
	DD	FLAT:??_C@_0BB@MPOOGPAO@D3DTSS_COLORARG2@
	DD	04H
	DD	FLAT:??_C@_0P@DIFHPBO@D3DTSS_ALPHAOP@
	DD	05H
	DD	FLAT:??_C@_0BB@LCEKLKOK@D3DTSS_ALPHAARG1@
	DD	06H
	DD	FLAT:??_C@_0BB@JJGHOJCJ@D3DTSS_ALPHAARG2@
	DD	07H
	DD	FLAT:??_C@_0BE@MGLOKHIH@D3DTSS_BUMPENVMAT00@
	DD	08H
	DD	FLAT:??_C@_0BE@NPKFJGMG@D3DTSS_BUMPENVMAT01@
	DD	09H
	DD	FLAT:??_C@_0BE@MHHMMNLA@D3DTSS_BUMPENVMAT10@
	DD	0aH
	DD	FLAT:??_C@_0BE@NOGHPMPB@D3DTSS_BUMPENVMAT11@
	DD	0bH
	DD	FLAT:??_C@_0BF@OJEPMJMD@D3DTSS_TEXCOORDINDEX@
	DD	0cH
	DD	FLAT:??_C@_0P@DDAOGAFH@D3DTSS_ADDRESS@
	DD	0dH
	DD	FLAT:??_C@_0BA@DCPAGDCG@D3DTSS_ADDRESSU@
	DD	0eH
	DD	FLAT:??_C@_0BA@BJNNDAOF@D3DTSS_ADDRESSV@
	DD	0fH
	DD	FLAT:??_C@_0BD@MDAAPLFK@D3DTSS_BORDERCOLOR@
	DD	010H
	DD	FLAT:??_C@_0BB@DIEALFG@D3DTSS_MAGFILTER@
	DD	011H
	DD	FLAT:??_C@_0BB@KHBDLCGF@D3DTSS_MINFILTER@
	DD	012H
	DD	FLAT:??_C@_0BB@MOCCJBHM@D3DTSS_MIPFILTER@
	DD	013H
	DD	FLAT:??_C@_0BF@IGBEHDAJ@D3DTSS_MIPMAPLODBIAS@
	DD	014H
	DD	FLAT:??_C@_0BD@MFMHMKFP@D3DTSS_MAXMIPLEVEL@
	DD	015H
	DD	FLAT:??_C@_0BF@CFKECDHF@D3DTSS_MAXANISOTROPY@
	DD	016H
	DD	FLAT:??_C@_0BF@EKNFKGBP@D3DTSS_BUMPENVLSCALE@
	DD	017H
	DD	FLAT:??_C@_0BG@BJHMLMND@D3DTSS_BUMPENVLOFFSET@
_DATA	ENDS
PUBLIC	?initialise_d3d_state@@YGXXZ			; initialise_d3d_state
PUBLIC	?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z		; set_d3d_alpha_fog_zbuffer
PUBLIC	?set_d3d_transparency_on@@YGXXZ			; set_d3d_transparency_on
PUBLIC	?set_d3d_transparency_off@@YGXXZ		; set_d3d_transparency_off
PUBLIC	?set_d3d_in_order_rendering@@YGXH@Z		; set_d3d_in_order_rendering
PUBLIC	?set_d3d_zbuffer_comparison@@YGXH@Z		; set_d3d_zbuffer_comparison
PUBLIC	?set_d3d_culling@@YGXH@Z			; set_d3d_culling
PUBLIC	?set_d3d_texture_wrapping@@YGXHH@Z		; set_d3d_texture_wrapping
PUBLIC	?set_d3d_texture_filtering@@YGXH@Z		; set_d3d_texture_filtering
PUBLIC	?set_d3d_texture_mag_filtering@@YGXH@Z		; set_d3d_texture_mag_filtering
PUBLIC	?set_d3d_texture_min_filtering@@YGXH@Z		; set_d3d_texture_min_filtering
PUBLIC	?set_d3d_texture_mip_filtering@@YGXH@Z		; set_d3d_texture_mip_filtering
PUBLIC	?set_d3d_plain_renderstate@@YGXXZ		; set_d3d_plain_renderstate
PUBLIC	?set_d3d_material_colour@@YGXHHHHH@Z		; set_d3d_material_colour
PUBLIC	?set_d3d_material_emissive_colour@@YGXHHHH@Z	; set_d3d_material_emissive_colour
PUBLIC	?set_d3d_material_default@@YGXXZ		; set_d3d_material_default
PUBLIC	?set_d3d_gouraud_shaded_renderstate@@YGXXZ	; set_d3d_gouraud_shaded_renderstate
PUBLIC	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate
PUBLIC	?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_gouraud_shaded_textured_renderstate
PUBLIC	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
PUBLIC	?set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state_no_flush
PUBLIC	?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; set_d3d_float_state
PUBLIC	?set_d3d_texture@@YGXHPAUSCREEN@@@Z		; set_d3d_texture
PUBLIC	?set_d3d_texture_stage_state@@YGXHHH@Z		; set_d3d_texture_stage_state
PUBLIC	?set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state_immediate
PUBLIC	?set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; set_d3d_float_state_immediate
PUBLIC	?set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z	; set_d3d_texture_immediate
PUBLIC	?set_d3d_texture_stage_state_immediate@@YGXHHH@Z ; set_d3d_texture_stage_state_immediate
PUBLIC	?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state
PUBLIC	?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; force_set_d3d_float_state
PUBLIC	?force_set_d3d_texture@@YGXHPAUSCREEN@@@Z	; force_set_d3d_texture
PUBLIC	?force_set_d3d_texture_stage_state@@YGXHHH@Z	; force_set_d3d_texture_stage_state
PUBLIC	?set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_deferred_d3d_int_state
PUBLIC	?set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; set_deferred_d3d_float_state
PUBLIC	?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z	; set_deferred_d3d_texture
PUBLIC	?set_deferred_d3d_texture_stage_state@@YGXHHH@Z	; set_deferred_d3d_texture_stage_state
PUBLIC	?reset_deferred_state_changes@@YGXXZ		; reset_deferred_state_changes
PUBLIC	?commit_deferred_state_changes@@YGXXZ		; commit_deferred_state_changes
PUBLIC	?get_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z ; get_d3d_current_texture_pointer
PUBLIC	?set_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z ; set_d3d_current_texture_pointer
PUBLIC	?assert_not_alpha_blending@@YGXXZ		; assert_not_alpha_blending
PUBLIC	?assert_check_texture_match@@YGXXZ		; assert_check_texture_match
PUBLIC	?reset_d3d_state_performance@@YGXXZ		; reset_d3d_state_performance
PUBLIC	?report_d3d_state_performance@@YGXXZ		; report_d3d_state_performance
PUBLIC	?report_all_d3d_states@@YGXXZ			; report_all_d3d_states
PUBLIC	?get_render_state_name@@YGPBDH@Z		; get_render_state_name
PUBLIC	?get_texture_stage_state_name@@YGPBDH@Z		; get_texture_stage_state_name
PUBLIC	?immediate_set_render_state@@YGXKK@Z		; immediate_set_render_state
PUBLIC	?immediate_set_texture@@YGXHPAUSCREEN@@@Z	; immediate_set_texture
PUBLIC	?immediate_set_texture_state@@YGXHKK@Z		; immediate_set_texture_state
PUBLIC	?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z ; immediate_set_material
PUBLIC	?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z	; set_d3d_texture_stage_state_no_flush
PUBLIC	??_C@_0BM@FCKIEJFO@Number?5of?5d3d?5triangles?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0BK@LKODGDJJ@Number?5of?5d3d?5flushes?3?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??force_set_d3d_texture_stage_state@@YGXHHH@Z@4JA ; `force_set_d3d_texture_stage_state'::`1'::__LINE__Var
PUBLIC	??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA ; `set_d3d_int_state'::`1'::__LINE__Var
PUBLIC	??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@ ; `string'
PUBLIC	?__LINE__Var@?0??set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA ; `set_d3d_int_state_no_flush'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA ; `set_d3d_float_state'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA ; `set_d3d_texture'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_texture_stage_state@@YGXHHH@Z@4JA ; `set_d3d_texture_stage_state'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_texture_stage_state_no_flush@@YGXHHH@Z@4JA ; `set_d3d_texture_stage_state_no_flush'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA ; `set_d3d_int_state_immediate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA ; `set_d3d_float_state_immediate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z@4JA ; `set_d3d_texture_immediate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_d3d_texture_stage_state_immediate@@YGXHHH@Z@4JA ; `set_d3d_texture_stage_state_immediate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA ; `set_deferred_d3d_int_state'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA ; `set_deferred_d3d_float_state'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA ; `set_deferred_d3d_texture'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_deferred_d3d_texture_stage_state@@YGXHHH@Z@4JA ; `set_deferred_d3d_texture_stage_state'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??assert_check_texture_match@@YGXXZ@4JA ; `assert_check_texture_match'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@ILPDACOI@d3d?4triangle_buffer?9?$DOtexture?4te@ ; `string'
PUBLIC	?__LINE__Var@?0??assert_not_alpha_blending@@YGXXZ@4JA ; `assert_not_alpha_blending'::`1'::__LINE__Var
PUBLIC	??_C@_0ED@NEPCHFJE@render_d3d_state_table?$FLD3DRENDE@ ; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@41200000
PUBLIC	__real@437f0000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_colour_watch@@YGXW4DEBUG_COLOURS@@PBDW4mt_type@@PAX@Z:PROC ; debug_colour_watch
EXTRN	?set_d3d_texture_batching@@YGXH@Z:PROC		; set_d3d_texture_batching
EXTRN	?flush_triangle_primitives@@YGXXZ:PROC		; flush_triangle_primitives
EXTRN	?flush_line_primitives@@YGXXZ:PROC		; flush_line_primitives
EXTRN	?f3d_render_state@@YGXII@Z:PROC			; f3d_render_state
EXTRN	?f3d_set_texture_state@@YGXIII@Z:PROC		; f3d_set_texture_state
EXTRN	?f3d_set_texture@@YGXIPAUSCREEN@@@Z:PROC	; f3d_set_texture
EXTRN	?f3d_set_material@@YGXPAU_D3DMATERIAL7@@@Z:PROC	; f3d_set_material
EXTRN	?f3d_scene_begin@@YGHXZ:PROC			; f3d_scene_begin
EXTRN	?f3d_scene_end@@YGHXZ:PROC			; f3d_scene_end
EXTRN	?d3d@@3UDIRECT_3D_VECTORS@@A:BYTE		; d3d
EXTRN	?d3d_initialised@@3HA:DWORD			; d3d_initialised
EXTRN	?d3d_fog_start@@3MA:DWORD			; d3d_fog_start
EXTRN	?d3d_fog_end@@3MA:DWORD				; d3d_fog_end
EXTRN	?d3d_fog_density@@3MA:DWORD			; d3d_fog_density
EXTRN	?d3d_fog_colour@@3UREAL_COLOUR@@A:DWORD		; d3d_fog_colour
EXTRN	?number_of_d3d_triangle_primitives_drawn@@3HA:DWORD ; number_of_d3d_triangle_primitives_drawn
EXTRN	?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A:DWORD ; zbuffer_default_comparison
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A DQ 0100H DUP (?) ; render_d3d_state_table
?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A DQ 0100H DUP (?) ; render_d3d_texture_stage_state_table
?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A DQ 08H DUP (?) ; texture_stage_interfaces
?d3d_material@@3U_D3DMATERIAL7@@A DB 044H DUP (?)	; d3d_material
	ALIGN	8

?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A DQ 0100H DUP (?) ; deferred_renderstate_changes
?deferred_texture_changes@@3PAUDEFERRED_TEXTURE_CHANGE@@A DB 060H DUP (?) ; deferred_texture_changes
?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A DB 0c00H DUP (?) ; deferred_texture_stage_state_changes
?number_of_deferred_d3d_renderstate_changes@@3HA DD 01H DUP (?) ; number_of_deferred_d3d_renderstate_changes
?number_of_deferred_d3d_texture_changes@@3HA DD 01H DUP (?) ; number_of_deferred_d3d_texture_changes
?number_of_deferred_d3d_texture_stage_state_changes@@3HA DD 01H DUP (?) ; number_of_deferred_d3d_texture_stage_state_changes
?deferred_d3d_changes@@3HA DD 01H DUP (?)		; deferred_d3d_changes
_BSS	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_0ED@NEPCHFJE@render_d3d_state_table?$FLD3DRENDE@
CONST	SEGMENT
??_C@_0ED@NEPCHFJE@render_d3d_state_table?$FLD3DRENDE@ DB 'render_d3d_sta'
	DB	'te_table[D3DRENDERSTATE_ALPHABLENDENABLE].value == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assert_not_alpha_blending@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assert_not_alpha_blending@@YGXXZ@4JA DD 05f7H ; `assert_not_alpha_blending'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@ILPDACOI@d3d?4triangle_buffer?9?$DOtexture?4te@
CONST	SEGMENT
??_C@_0EM@ILPDACOI@d3d?4triangle_buffer?9?$DOtexture?4te@ DB 'd3d.triangl'
	DB	'e_buffer->texture.texture == texture_stage_interfaces[0].text'
	DB	'ure', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assert_check_texture_match@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assert_check_texture_match@@YGXXZ@4JA DD 05e9H ; `assert_check_texture_match'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_deferred_d3d_texture_stage_state@@YGXHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_deferred_d3d_texture_stage_state@@YGXHHH@Z@4JA DD 0537H ; `set_deferred_d3d_texture_stage_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA DD 051eH ; `set_deferred_d3d_texture'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA DD 0508H ; `set_deferred_d3d_float_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA DD 04e8H ; `set_deferred_d3d_int_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_texture_stage_state_immediate@@YGXHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_texture_stage_state_immediate@@YGXHHH@Z@4JA DD 0479H ; `set_d3d_texture_stage_state_immediate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z@4JA DD 0465H ; `set_d3d_texture_immediate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA DD 0455H ; `set_d3d_float_state_immediate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA DD 0445H ; `set_d3d_int_state_immediate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_texture_stage_state_no_flush@@YGXHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_texture_stage_state_no_flush@@YGXHHH@Z@4JA DD 0430H ; `set_d3d_texture_stage_state_no_flush'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_texture_stage_state@@YGXHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_texture_stage_state@@YGXHHH@Z@4JA DD 041cH ; `set_d3d_texture_stage_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA DD 0400H ; `set_d3d_texture'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA DD 03e8H ; `set_d3d_float_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA DD 03d3H ; `set_d3d_int_state_no_flush'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
CONST	SEGMENT
??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@ DB 'state < MAX_RENDER'
	DB	'_STATES', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA DD 03bfH ; `set_d3d_int_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
CONST	SEGMENT
??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@ DB '('
	DB	' stage >= 0 ) && ( stage < 8 )', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\graphics\d3dstate.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??force_set_d3d_texture_stage_state@@YGXHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??force_set_d3d_texture_stage_state@@YGXHHH@Z@4JA DD 03abH ; `force_set_d3d_texture_stage_state'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BK@LKODGDJJ@Number?5of?5d3d?5flushes?3?5?$CFd@
CONST	SEGMENT
??_C@_0BK@LKODGDJJ@Number?5of?5d3d?5flushes?3?5?$CFd@ DB 'Number of d3d f'
	DB	'lushes: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FCKIEJFO@Number?5of?5d3d?5triangles?3?5?$CFd@
CONST	SEGMENT
??_C@_0BM@FCKIEJFO@Number?5of?5d3d?5triangles?3?5?$CFd@ DB 'Number of d3d'
	DB	' triangles: %d', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_state$ = 12						; size = 4
_data$ = 16						; size = 4
?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z PROC	; set_d3d_texture_stage_state_no_flush, COMDAT

; 1072 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1073 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_d3d_te
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_d3d_te
$LN3@set_d3d_te:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_texture_stage_state_no_flush@@YGXHHH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_te:

; 1074 : 
; 1075 : #if ( !DEBUG_SEND_ALL_STATES )
; 1076 : 	if ( render_d3d_texture_stage_state_table[stage][state].value != data )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	c1 e0 08	 shl	 eax, 8
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00036	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[eax+ecx*8]
  0003d	3b 55 10	 cmp	 edx, DWORD PTR _data$[ebp]
  00040	74 11		 je	 SHORT $LN1@set_d3d_te

; 1077 : #endif
; 1078 : 	{
; 1079 : 	
; 1080 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1081 : 		debug_log ( "Texture stage state %s change caused flush", get_texture_stage_state_name ( state ) );
; 1082 : #endif
; 1083 : 
; 1084 : 		immediate_set_texture_state ( stage, state, data );

  00042	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00045	50		 push	 eax
  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00049	51		 push	 ecx
  0004a	8b 55 08	 mov	 edx, DWORD PTR _stage$[ebp]
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ?immediate_set_texture_state@@YGXHKK@Z ; immediate_set_texture_state
$LN1@set_d3d_te:

; 1085 : 	}
; 1086 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ENDP	; set_d3d_texture_stage_state_no_flush
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z
_TEXT	SEGMENT
_material$ = 8						; size = 4
?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z PROC	; immediate_set_material, COMDAT

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 240  : 	f3d_set_material ( material );

  00009	8b 45 08	 mov	 eax, DWORD PTR _material$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?f3d_set_material@@YGXPAU_D3DMATERIAL7@@@Z ; f3d_set_material

; 241  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z ENDP	; immediate_set_material
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?immediate_set_texture_state@@YGXHKK@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_state$ = 12						; size = 4
_data$ = 16						; size = 4
?immediate_set_texture_state@@YGXHKK@Z PROC		; immediate_set_texture_state, COMDAT

; 231  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 232  : 	render_d3d_texture_stage_state_table[stage][state].value = data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  0000c	c1 e0 08	 shl	 eax, 8
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00012	8b 55 10	 mov	 edx, DWORD PTR _data$[ebp]
  00015	89 94 c8 00 00
	00 00		 mov	 DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[eax+ecx*8], edx

; 233  : 
; 234  : 	f3d_set_texture_state(stage, state, data);

  0001c	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 08	 mov	 edx, DWORD PTR _stage$[ebp]
  00027	52		 push	 edx
  00028	e8 00 00 00 00	 call	 ?f3d_set_texture_state@@YGXIII@Z ; f3d_set_texture_state

; 235  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
?immediate_set_texture_state@@YGXHKK@Z ENDP		; immediate_set_texture_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?immediate_set_texture@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_texture$ = 12						; size = 4
?immediate_set_texture@@YGXHPAUSCREEN@@@Z PROC		; immediate_set_texture, COMDAT

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 223  : 	texture_stage_interfaces[stage].texture = texture;

  00009	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000f	89 0c c5 00 00
	00 00		 mov	 DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[eax*8], ecx

; 224  : 	texture_stage_interfaces[stage].count++;

  00016	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00019	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[eax*8+4]
  00020	83 c1 01	 add	 ecx, 1
  00023	8b 55 08	 mov	 edx, DWORD PTR _stage$[ebp]
  00026	89 0c d5 04 00
	00 00		 mov	 DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[edx*8+4], ecx

; 225  : 
; 226  : 	f3d_set_texture ( stage, texture );

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _stage$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ?f3d_set_texture@@YGXIPAUSCREEN@@@Z ; f3d_set_texture

; 227  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?immediate_set_texture@@YGXHPAUSCREEN@@@Z ENDP		; immediate_set_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?immediate_set_render_state@@YGXKK@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?immediate_set_render_state@@YGXKK@Z PROC		; immediate_set_render_state, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 214  : 	render_d3d_state_table[state].value = data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  0000f	89 0c c5 00 00
	00 00		 mov	 DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8], ecx

; 215  : 	render_d3d_state_table[state].count++;

  00016	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  00019	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8+4]
  00020	83 c1 01	 add	 ecx, 1
  00023	8b 55 08	 mov	 edx, DWORD PTR _state$[ebp]
  00026	89 0c d5 04 00
	00 00		 mov	 DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[edx*8+4], ecx

; 216  : 
; 217  : 	f3d_render_state ( state, data );

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ?f3d_render_state@@YGXII@Z ; f3d_render_state

; 218  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?immediate_set_render_state@@YGXKK@Z ENDP		; immediate_set_render_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?get_texture_stage_state_name@@YGPBDH@Z
_TEXT	SEGMENT
_count$ = -4						; size = 4
_state$ = 8						; size = 4
?get_texture_stage_state_name@@YGPBDH@Z PROC		; get_texture_stage_state_name, COMDAT

; 1710 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1711 : 
; 1712 : 	int
; 1713 : 		count;
; 1714 : 
; 1715 : 	for ( count = 0; count < ( sizeof ( texture_stage_state_names ) ); count++ )

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@get_textur
$LN2@get_textur:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@get_textur:
  0001b	81 7d fc b8 00
	00 00		 cmp	 DWORD PTR _count$[ebp], 184 ; 000000b8H
  00022	73 1d		 jae	 SHORT $LN3@get_textur

; 1716 : 	{
; 1717 : 
; 1718 : 		if ( texture_stage_state_names[count].state == state )

  00024	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00027	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?texture_stage_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A[eax*8]
  0002e	3b 4d 08	 cmp	 ecx, DWORD PTR _state$[ebp]
  00031	75 0c		 jne	 SHORT $LN5@get_textur

; 1719 : 		{
; 1720 : 
; 1721 : 			return ( texture_stage_state_names[count].name );

  00033	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00036	8b 04 c5 04 00
	00 00		 mov	 eax, DWORD PTR ?texture_stage_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A[eax*8+4]
  0003d	eb 04		 jmp	 SHORT $LN1@get_textur
$LN5@get_textur:

; 1722 : 		}
; 1723 : 	}

  0003f	eb d1		 jmp	 SHORT $LN2@get_textur
$LN3@get_textur:

; 1724 : 
; 1725 : 	return ( NULL );

  00041	33 c0		 xor	 eax, eax
$LN1@get_textur:

; 1726 : }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?get_texture_stage_state_name@@YGPBDH@Z ENDP		; get_texture_stage_state_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?get_render_state_name@@YGPBDH@Z
_TEXT	SEGMENT
_count$ = -4						; size = 4
_state$ = 8						; size = 4
?get_render_state_name@@YGPBDH@Z PROC			; get_render_state_name, COMDAT

; 1687 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1688 : 
; 1689 : 	int
; 1690 : 		count;
; 1691 : 
; 1692 : 	for ( count = 0; count < ( sizeof ( render_state_names ) ); count++ )

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@get_render
$LN2@get_render:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@get_render:
  0001b	81 7d fc 18 03
	00 00		 cmp	 DWORD PTR _count$[ebp], 792 ; 00000318H
  00022	73 1d		 jae	 SHORT $LN3@get_render

; 1693 : 	{
; 1694 : 
; 1695 : 		if ( render_state_names[count].state == state )

  00024	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00027	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A[eax*8]
  0002e	3b 4d 08	 cmp	 ecx, DWORD PTR _state$[ebp]
  00031	75 0c		 jne	 SHORT $LN5@get_render

; 1696 : 		{
; 1697 : 
; 1698 : 			return ( render_state_names[count].name );

  00033	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00036	8b 04 c5 04 00
	00 00		 mov	 eax, DWORD PTR ?render_state_names@@3PAURENDER_STATE_TABLE_NAMES@@A[eax*8+4]
  0003d	eb 04		 jmp	 SHORT $LN1@get_render
$LN5@get_render:

; 1699 : 		}
; 1700 : 	}

  0003f	eb d1		 jmp	 SHORT $LN2@get_render
$LN3@get_render:

; 1701 : 
; 1702 : 	return ( NULL );

  00041	33 c0		 xor	 eax, eax
$LN1@get_render:

; 1703 : }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?get_render_state_name@@YGPBDH@Z ENDP			; get_render_state_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?report_all_d3d_states@@YGXXZ
_TEXT	SEGMENT
?report_all_d3d_states@@YGXXZ PROC			; report_all_d3d_states, COMDAT

; 1733 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1734 : #if 0
; 1735 : 
; 1736 : 	int
; 1737 : 		count,
; 1738 : 		size;
; 1739 : 
; 1740 : 	size = sizeof ( render_state_names ) / sizeof ( struct RENDER_STATE_TABLE_NAMES );
; 1741 : 
; 1742 : 	for ( count = 0; count < size; count++ )
; 1743 : 	{
; 1744 : 
; 1745 : 		DWORD
; 1746 : 			value;
; 1747 : 
; 1748 : 		I//Direct3DDevice7_GetRenderState ( d3d.device, render_state_names[count].state, &value );
; 1749 : 
; 1750 : 		debug_log ( "%s: %d", render_state_names[count].name, value );
; 1751 : 	}
; 1752 : #endif
; 1753 : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?report_all_d3d_states@@YGXXZ ENDP			; report_all_d3d_states
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?report_d3d_state_performance@@YGXXZ
_TEXT	SEGMENT
?report_d3d_state_performance@@YGXXZ PROC		; report_d3d_state_performance, COMDAT

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 648  : 
; 649  : 	running_total_number_of_d3d_triangles += number_of_d3d_triangles_drawn;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?running_total_number_of_d3d_triangles@@3HA ; running_total_number_of_d3d_triangles
  0000e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?number_of_d3d_triangles_drawn@@3HA ; number_of_d3d_triangles_drawn
  00014	a3 00 00 00 00	 mov	 DWORD PTR ?running_total_number_of_d3d_triangles@@3HA, eax ; running_total_number_of_d3d_triangles

; 650  : 
; 651  : 	running_total_number_of_d3d_flushes += number_of_d3d_triangle_primitives_drawn;

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?running_total_number_of_d3d_flushes@@3HA ; running_total_number_of_d3d_flushes
  0001e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?number_of_d3d_triangle_primitives_drawn@@3HA ; number_of_d3d_triangle_primitives_drawn
  00024	a3 00 00 00 00	 mov	 DWORD PTR ?running_total_number_of_d3d_flushes@@3HA, eax ; running_total_number_of_d3d_flushes

; 652  : 
; 653  : #if DEBUG_REPORT_STATES
; 654  : 
; 655  : 	debug_log ( "Called DrawPrimitive %d times", number_of_d3d_triangle_primitives_drawn );
; 656  : 
; 657  : 	{
; 658  : 
; 659  : 		int
; 660  : 			count;
; 661  : 	
; 662  : 	
; 663  : 		if ( number_of_d3d_degenerate_triangles )
; 664  : 		{
; 665  : 	
; 666  : 			debug_log ( "%d DEGENERATE polygons", number_of_d3d_degenerate_triangles );
; 667  : 		}
; 668  : 	
; 669  : 		for ( count = 0; count < MAX_RENDER_STATES; count++ )
; 670  : 		{
; 671  : 	
; 672  : 			if ( render_d3d_state_table[count].count )
; 673  : 			{
; 674  : 	
; 675  : 				debug_log ( "State: %s, count: %d", get_render_state_name ( count ), render_d3d_state_table[count].count );
; 676  : 			}
; 677  : 		}
; 678  : 
; 679  : 		for ( count = 0; count < MAX_TEXTURE_STAGES; count++ )
; 680  : 		{
; 681  : 
; 682  : 			int
; 683  : 				state;
; 684  : 
; 685  : 			for ( state = 0; state < MAX_TEXTURE_STAGE_STATES; state++ )
; 686  : 			{
; 687  : 
; 688  : 				if ( render_d3d_texture_stage_state_table[count][state].count )
; 689  : 				{
; 690  : 					
; 691  : 					debug_log ( "Stage: %d, State: %s, count: %d", count,
; 692  : 																					get_texture_stage_state_name ( state ),
; 693  : 																					render_d3d_texture_stage_state_table[count][state].count );
; 694  : 				}
; 695  : 			}
; 696  : 		}
; 697  : 
; 698  : 		for ( count = 0; count < MAX_TEXTURE_STAGES; count++ )
; 699  : 		{
; 700  : 
; 701  : 			if ( texture_stage_interfaces[count].count )
; 702  : 			{
; 703  : 
; 704  : 				debug_log ( "Texture stage %d, count %d", count, texture_stage_interfaces[count].count );
; 705  : 			}
; 706  : 		}
; 707  : 	}
; 708  : 
; 709  : #endif
; 710  : 
; 711  : #if DEBUG_REPORT_RENDERSTATE_VALUES
; 712  : 
; 713  : 	{
; 714  : 
; 715  : 		int
; 716  : 			count;
; 717  : 	
; 718  : 		for ( count = 0; count < D3DRENDERSTATE_STIPPLEPATTERN00; count++ )
; 719  : 		{
; 720  : 
; 721  : 			DWORD
; 722  : 				value;
; 723  : 
; 724  : 			I//Direct3DDevice7_GetRenderState ( d3d.device3, count, &value );
; 725  : 
; 726  : 			debug_log ( "State: %s, value: %d", get_render_state_name ( count ), value );
; 727  : 		}
; 728  : 
; 729  : 		for ( count = 0; count < MAX_TEXTURE_STAGES; count++ )
; 730  : 		{
; 731  : 
; 732  : 			int
; 733  : 				state;
; 734  : 
; 735  : 			for ( state = 0; state < MAX_TEXTURE_STAGE_STATES; state++ )
; 736  : 			{
; 737  : 
; 738  : 				DWORD
; 739  : 					value;
; 740  : 
; 741  : 				I//Direct3DDevice7_GetTextureStageState ( d3d.device3, count, state, &value );
; 742  : 
; 743  : 				debug_log ( "Stage: %d, State: %s, value: %d", count, get_texture_stage_state_name ( state ), value );
; 744  : 			}
; 745  : 		}
; 746  : 
; 747  : 	}
; 748  : 
; 749  : #endif
; 750  : 
; 751  : 	number_of_d3d_triangle_primitives_drawn = 0;

  00029	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_d3d_triangle_primitives_drawn@@3HA, 0 ; number_of_d3d_triangle_primitives_drawn

; 752  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?report_d3d_state_performance@@YGXXZ ENDP		; report_d3d_state_performance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?reset_d3d_state_performance@@YGXXZ
_TEXT	SEGMENT
_state$1 = -8						; size = 4
_count$ = -4						; size = 4
?reset_d3d_state_performance@@YGXXZ PROC		; reset_d3d_state_performance, COMDAT

; 607  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 608  : 
; 609  : 	int
; 610  : 		count;
; 611  : 
; 612  : 	for ( count = 0; count < MAX_RENDER_STATES; count++ )

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@reset_d3d_
$LN2@reset_d3d_:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@reset_d3d_:
  0001b	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR _count$[ebp], 256 ; 00000100H
  00022	7d 10		 jge	 SHORT $LN3@reset_d3d_

; 613  : 	{
; 614  : 
; 615  : 		render_d3d_state_table[count].count = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00027	c7 04 c5 04 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8+4], 0

; 616  : 	}

  00032	eb de		 jmp	 SHORT $LN2@reset_d3d_
$LN3@reset_d3d_:

; 617  : 
; 618  : 	for ( count = 0; count < MAX_TEXTURE_STAGES; count++ )

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0003b	eb 09		 jmp	 SHORT $LN7@reset_d3d_
$LN5@reset_d3d_:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00040	83 c0 01	 add	 eax, 1
  00043	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN7@reset_d3d_:
  00046	83 7d fc 08	 cmp	 DWORD PTR _count$[ebp], 8
  0004a	7d 30		 jge	 SHORT $LN6@reset_d3d_

; 619  : 	{
; 620  : 
; 621  : 		int
; 622  : 			state;
; 623  : 
; 624  : 		for ( state = 0; state < MAX_TEXTURE_STAGE_STATES; state++ )

  0004c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _state$1[ebp], 0
  00053	eb 09		 jmp	 SHORT $LN10@reset_d3d_
$LN8@reset_d3d_:
  00055	8b 45 f8	 mov	 eax, DWORD PTR _state$1[ebp]
  00058	83 c0 01	 add	 eax, 1
  0005b	89 45 f8	 mov	 DWORD PTR _state$1[ebp], eax
$LN10@reset_d3d_:
  0005e	83 7d f8 20	 cmp	 DWORD PTR _state$1[ebp], 32 ; 00000020H
  00062	7d 16		 jge	 SHORT $LN9@reset_d3d_

; 625  : 		{
; 626  : 
; 627  : 			render_d3d_texture_stage_state_table[count][state].count = 0;

  00064	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00067	c1 e0 08	 shl	 eax, 8
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _state$1[ebp]
  0006d	c7 84 c8 04 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[eax+ecx*8+4], 0

; 628  : 		}

  00078	eb db		 jmp	 SHORT $LN8@reset_d3d_
$LN9@reset_d3d_:

; 629  : 	}

  0007a	eb c1		 jmp	 SHORT $LN5@reset_d3d_
$LN6@reset_d3d_:

; 630  : 
; 631  : 	for ( count = 0; count < MAX_TEXTURE_STAGES; count++ )

  0007c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00083	eb 09		 jmp	 SHORT $LN13@reset_d3d_
$LN11@reset_d3d_:
  00085	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00088	83 c0 01	 add	 eax, 1
  0008b	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN13@reset_d3d_:
  0008e	83 7d fc 08	 cmp	 DWORD PTR _count$[ebp], 8
  00092	7d 10		 jge	 SHORT $LN12@reset_d3d_

; 632  : 	{
; 633  : 
; 634  : 		texture_stage_interfaces[count].count = 0;

  00094	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00097	c7 04 c5 04 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[eax*8+4], 0

; 635  : 	}

  000a2	eb e1		 jmp	 SHORT $LN11@reset_d3d_
$LN12@reset_d3d_:

; 636  : 
; 637  : 	number_of_d3d_triangles_drawn = 0;

  000a4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_d3d_triangles_drawn@@3HA, 0 ; number_of_d3d_triangles_drawn

; 638  : 
; 639  : 	number_of_d3d_degenerate_triangles = 0;

  000ae	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_d3d_degenerate_triangles@@3HA, 0 ; number_of_d3d_degenerate_triangles

; 640  : }

  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
?reset_d3d_state_performance@@YGXXZ ENDP		; reset_d3d_state_performance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?assert_check_texture_match@@YGXXZ
_TEXT	SEGMENT
?assert_check_texture_match@@YGXXZ PROC			; assert_check_texture_match, COMDAT

; 1513 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1514 : 
; 1515 : 	if ( d3d.triangle_buffer->texture.texture )

  00009	a1 40 24 02 00	 mov	 eax, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140352
  0000e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00012	74 31		 je	 SHORT $LN1@assert_che

; 1516 : 	{
; 1517 : 
; 1518 : 		ASSERT ( d3d.triangle_buffer->texture.texture == texture_stage_interfaces[0].texture );

  00014	b8 08 00 00 00	 mov	 eax, 8
  00019	6b c8 00	 imul	 ecx, eax, 0
  0001c	8b 15 40 24 02
	00		 mov	 edx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140352
  00022	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00025	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[ecx]
  0002b	74 18		 je	 SHORT $LN1@assert_che
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assert_check_texture_match@@YGXXZ@4JA
  00032	83 c0 05	 add	 eax, 5
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@ILPDACOI@d3d?4triangle_buffer?9?$DOtexture?4te@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN1@assert_che:

; 1519 : 	}
; 1520 : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?assert_check_texture_match@@YGXXZ ENDP			; assert_check_texture_match
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?assert_not_alpha_blending@@YGXXZ
_TEXT	SEGMENT
?assert_not_alpha_blending@@YGXXZ PROC			; assert_not_alpha_blending, COMDAT

; 1527 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1528 : 
; 1529 : 	ASSERT ( render_d3d_state_table[D3DRENDERSTATE_ALPHABLENDENABLE].value == 0 );

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 1b	 imul	 ecx, eax, 27
  00011	83 b9 00 00 00
	00 00		 cmp	 DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[ecx], 0
  00018	74 18		 je	 SHORT $LN1@assert_not
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assert_not_alpha_blending@@YGXXZ@4JA
  0001f	83 c0 02	 add	 eax, 2
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@NEPCHFJE@render_d3d_state_table?$FLD3DRENDE@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN1@assert_not:

; 1530 : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?assert_not_alpha_blending@@YGXXZ ENDP			; assert_not_alpha_blending
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?set_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z PROC ; set_d3d_current_texture_pointer, COMDAT

; 1481 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1482 : 	if ( data->texture )

  00009	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	0f 84 84 00 00
	00		 je	 $LN2@set_d3d_cu

; 1483 : 	{
; 1484 : 
; 1485 : 		if ( texture_stage_interfaces[0].texture != data->texture )

  00015	b8 08 00 00 00	 mov	 eax, 8
  0001a	6b c8 00	 imul	 ecx, eax, 0
  0001d	8b 55 08	 mov	 edx, DWORD PTR _data$[ebp]
  00020	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[ecx]
  00026	3b 02		 cmp	 eax, DWORD PTR [edx]
  00028	74 0d		 je	 SHORT $LN4@set_d3d_cu

; 1486 : 		{
; 1487 : 			immediate_set_texture ( 0, data->texture );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	51		 push	 ecx
  00030	6a 00		 push	 0
  00032	e8 00 00 00 00	 call	 ?immediate_set_texture@@YGXHPAUSCREEN@@@Z ; immediate_set_texture
$LN4@set_d3d_cu:

; 1488 : 		}
; 1489 : 
; 1490 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00037	6a 04		 push	 4
  00039	6a 01		 push	 1
  0003b	6a 00		 push	 0
  0003d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush

; 1491 : 
; 1492 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_MIPFILTER, data->mipmap_filter );

  00042	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00045	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00049	51		 push	 ecx
  0004a	6a 12		 push	 18			; 00000012H
  0004c	6a 00		 push	 0
  0004e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush

; 1493 : 
; 1494 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_MAGFILTER, data->linear_filter );

  00053	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00056	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0005a	51		 push	 ecx
  0005b	6a 10		 push	 16			; 00000010H
  0005d	6a 00		 push	 0
  0005f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush

; 1495 : 
; 1496 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_MINFILTER, data->linear_filter );

  00064	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00067	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0006b	51		 push	 ecx
  0006c	6a 11		 push	 17			; 00000011H
  0006e	6a 00		 push	 0
  00070	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush

; 1497 : 
; 1498 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_ADDRESSU, data->clamp_u );

  00075	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00078	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  0007c	51		 push	 ecx
  0007d	6a 0d		 push	 13			; 0000000dH
  0007f	6a 00		 push	 0
  00081	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush

; 1499 : 
; 1500 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_ADDRESSV, data->clamp_v );

  00086	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00089	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  0008d	51		 push	 ecx
  0008e	6a 0e		 push	 14			; 0000000eH
  00090	6a 00		 push	 0
  00092	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush

; 1501 : 	}
; 1502 : 	else

  00097	eb 0b		 jmp	 SHORT $LN1@set_d3d_cu
$LN2@set_d3d_cu:

; 1503 : 	{
; 1504 : 		set_d3d_texture_stage_state_no_flush ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  00099	6a 01		 push	 1
  0009b	6a 01		 push	 1
  0009d	6a 00		 push	 0
  0009f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state_no_flush@@YGXHHH@Z ; set_d3d_texture_stage_state_no_flush
$LN1@set_d3d_cu:

; 1505 : 	}
; 1506 : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?set_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z ENDP ; set_d3d_current_texture_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?get_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?get_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z PROC ; get_d3d_current_texture_pointer, COMDAT

; 1453 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1454 : 
; 1455 : //	ASSERT ( !deferred_d3d_changes );
; 1456 : //	raw_commit_deferred_state_changes ();
; 1457 : 
; 1458 : 	if ( render_d3d_texture_stage_state_table[0][D3DTSS_COLOROP].value == D3DTOP_DISABLE )

  00009	b8 00 01 00 00	 mov	 eax, 256		; 00000100H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	ba 08 00 00 00	 mov	 edx, 8
  00016	c1 e2 00	 shl	 edx, 0
  00019	83 bc 11 00 00
	00 00 01	 cmp	 DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[ecx+edx], 1
  00021	75 18		 jne	 SHORT $LN2@get_d3d_cu

; 1459 : 	{
; 1460 : 
; 1461 : 		data->texture = 0;

  00023	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1462 : 		data->texture_settings = 0;

  0002c	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1463 : 	}
; 1464 : 	else

  00036	e9 87 00 00 00	 jmp	 $LN1@get_d3d_cu
$LN2@get_d3d_cu:

; 1465 : 	{
; 1466 : 
; 1467 : 		data->texture = texture_stage_interfaces[0].texture;

  0003b	b8 08 00 00 00	 mov	 eax, 8
  00040	6b c8 00	 imul	 ecx, eax, 0
  00043	8b 55 08	 mov	 edx, DWORD PTR _data$[ebp]
  00046	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[ecx]
  0004c	89 02		 mov	 DWORD PTR [edx], eax

; 1468 : 
; 1469 : 		data->mipmap_filter = render_d3d_texture_stage_state_table[0][D3DTSS_MIPFILTER].value;

  0004e	b8 00 01 00 00	 mov	 eax, 256		; 00000100H
  00053	6b c8 00	 imul	 ecx, eax, 0
  00056	ba 08 00 00 00	 mov	 edx, 8
  0005b	6b c2 12	 imul	 eax, edx, 18
  0005e	8b 55 08	 mov	 edx, DWORD PTR _data$[ebp]
  00061	8a 84 01 00 00
	00 00		 mov	 al, BYTE PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[ecx+eax]
  00068	88 42 04	 mov	 BYTE PTR [edx+4], al

; 1470 : 		data->linear_filter = render_d3d_texture_stage_state_table[0][D3DTSS_MAGFILTER].value;

  0006b	b8 00 01 00 00	 mov	 eax, 256		; 00000100H
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	ba 08 00 00 00	 mov	 edx, 8
  00078	c1 e2 04	 shl	 edx, 4
  0007b	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0007e	8a 8c 11 00 00
	00 00		 mov	 cl, BYTE PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[ecx+edx]
  00085	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 1471 : 		data->clamp_u = render_d3d_texture_stage_state_table[0][D3DTSS_ADDRESSU].value;

  00088	b8 00 01 00 00	 mov	 eax, 256		; 00000100H
  0008d	6b c8 00	 imul	 ecx, eax, 0
  00090	ba 08 00 00 00	 mov	 edx, 8
  00095	6b c2 0d	 imul	 eax, edx, 13
  00098	8b 55 08	 mov	 edx, DWORD PTR _data$[ebp]
  0009b	8a 84 01 00 00
	00 00		 mov	 al, BYTE PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[ecx+eax]
  000a2	88 42 06	 mov	 BYTE PTR [edx+6], al

; 1472 : 		data->clamp_v = render_d3d_texture_stage_state_table[0][D3DTSS_ADDRESSV].value;

  000a5	b8 00 01 00 00	 mov	 eax, 256		; 00000100H
  000aa	6b c8 00	 imul	 ecx, eax, 0
  000ad	ba 08 00 00 00	 mov	 edx, 8
  000b2	6b c2 0e	 imul	 eax, edx, 14
  000b5	8b 55 08	 mov	 edx, DWORD PTR _data$[ebp]
  000b8	8a 84 01 00 00
	00 00		 mov	 al, BYTE PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[ecx+eax]
  000bf	88 42 07	 mov	 BYTE PTR [edx+7], al
$LN1@get_d3d_cu:

; 1473 : 	}
; 1474 : }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 04 00	 ret	 4
?get_d3d_current_texture_pointer@@YGXPAUVERTEX_BUFFER_TEXTURE_DATA@@@Z ENDP ; get_d3d_current_texture_pointer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?commit_deferred_state_changes@@YGXXZ
_TEXT	SEGMENT
_count$1 = -4						; size = 4
?commit_deferred_state_changes@@YGXXZ PROC		; commit_deferred_state_changes, COMDAT

; 1378 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1379 : 
; 1380 : #if ALLOW_DEFERRED_CHANGES
; 1381 : 
; 1382 : 	if ( deferred_d3d_changes )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?deferred_d3d_changes@@3HA, 0
  00010	0f 84 cd 00 00
	00		 je	 $LN1@commit_def

; 1383 : 	{
; 1384 : 		int
; 1385 : 			count;
; 1386 : 
; 1387 : 		flush_triangle_primitives ();

  00016	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 1388 : 		flush_line_primitives ();

  0001b	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 1389 : 	
; 1390 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1391 : 
; 1392 : 		debug_log ( "Deferred state changes causing flush" );
; 1393 : 
; 1394 : #endif
; 1395 : 
; 1396 : 		for ( count = 0; count < number_of_deferred_d3d_renderstate_changes; count++ )

  00020	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00027	eb 09		 jmp	 SHORT $LN4@commit_def
$LN2@commit_def:
  00029	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  0002c	83 c0 01	 add	 eax, 1
  0002f	89 45 fc	 mov	 DWORD PTR _count$1[ebp], eax
$LN4@commit_def:
  00032	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  00035	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  0003b	7d 1d		 jge	 SHORT $LN3@commit_def

; 1397 : 		{
; 1398 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1399 : 			debug_log ( "Renderstate: %s: %d", get_render_state_name ( deferred_renderstate_changes[count].state ), deferred_renderstate_changes[count].int_data );
; 1400 : #endif
; 1401 : 
; 1402 : 			immediate_set_render_state ( deferred_renderstate_changes[count].state,

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  00040	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A[eax*8+4]
  00047	51		 push	 ecx
  00048	8b 55 fc	 mov	 edx, DWORD PTR _count$1[ebp]
  0004b	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A[edx*8]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state

; 1403 : 				deferred_renderstate_changes[count].int_data );
; 1404 : 		}

  00058	eb cf		 jmp	 SHORT $LN2@commit_def
$LN3@commit_def:

; 1405 : 
; 1406 : 		for ( count = 0; count < number_of_deferred_d3d_texture_changes; count++ )

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00061	eb 09		 jmp	 SHORT $LN7@commit_def
$LN5@commit_def:
  00063	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  00066	83 c0 01	 add	 eax, 1
  00069	89 45 fc	 mov	 DWORD PTR _count$1[ebp], eax
$LN7@commit_def:
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  0006f	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_deferred_d3d_texture_changes@@3HA
  00075	7d 1d		 jge	 SHORT $LN6@commit_def

; 1407 : 		{
; 1408 : #if ALLOW_SET_TEXTURE
; 1409 : 
; 1410 : 			immediate_set_texture ( deferred_texture_changes[count].stage,

  00077	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0007b	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?deferred_texture_changes@@3PAUDEFERRED_TEXTURE_CHANGE@@A[eax+4]
  00081	51		 push	 ecx
  00082	6b 55 fc 0c	 imul	 edx, DWORD PTR _count$1[ebp], 12
  00086	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?deferred_texture_changes@@3PAUDEFERRED_TEXTURE_CHANGE@@A[edx]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?immediate_set_texture@@YGXHPAUSCREEN@@@Z ; immediate_set_texture

; 1411 : 				deferred_texture_changes[count].texture );
; 1412 : 
; 1413 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1414 : 
; 1415 : 			debug_log ( "Texture change to %08x", deferred_texture_changes[count].texture );
; 1416 : 
; 1417 : #endif
; 1418 : 
; 1419 : #endif
; 1420 : 		}

  00092	eb cf		 jmp	 SHORT $LN5@commit_def
$LN6@commit_def:

; 1421 : 
; 1422 : 		for ( count = 0; count < number_of_deferred_d3d_texture_stage_state_changes; count++ )

  00094	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  0009b	eb 09		 jmp	 SHORT $LN10@commit_def
$LN8@commit_def:
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  000a0	83 c0 01	 add	 eax, 1
  000a3	89 45 fc	 mov	 DWORD PTR _count$1[ebp], eax
$LN10@commit_def:
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  000a9	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA
  000af	7d 28		 jge	 SHORT $LN9@commit_def

; 1423 : 		{
; 1424 : 			immediate_set_texture_state ( deferred_texture_stage_state_changes[count].stage,

  000b1	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  000b5	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A[eax+8]
  000bb	51		 push	 ecx
  000bc	6b 55 fc 0c	 imul	 edx, DWORD PTR _count$1[ebp], 12
  000c0	8b 82 04 00 00
	00		 mov	 eax, DWORD PTR ?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A[edx+4]
  000c6	50		 push	 eax
  000c7	6b 4d fc 0c	 imul	 ecx, DWORD PTR _count$1[ebp], 12
  000cb	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A[ecx]
  000d1	52		 push	 edx
  000d2	e8 00 00 00 00	 call	 ?immediate_set_texture_state@@YGXHKK@Z ; immediate_set_texture_state

; 1425 : 				deferred_texture_stage_state_changes[count].state,
; 1426 : 				deferred_texture_stage_state_changes[count].data );
; 1427 : 
; 1428 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1429 : 
; 1430 : 			debug_log ( "Texture stage %d state %s value %d", stage, get_texture_stage_state_name ( state ), deferred_texture_stage_state_changes[count].data );
; 1431 : 
; 1432 : #endif
; 1433 : 
; 1434 : 		}

  000d7	eb c4		 jmp	 SHORT $LN8@commit_def
$LN9@commit_def:

; 1435 : 
; 1436 : 		deferred_d3d_changes = FALSE;

  000d9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?deferred_d3d_changes@@3HA, 0
$LN1@commit_def:

; 1437 : 	}
; 1438 : 
; 1439 : #endif
; 1440 : 
; 1441 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
?commit_deferred_state_changes@@YGXXZ ENDP		; commit_deferred_state_changes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?reset_deferred_state_changes@@YGXXZ
_TEXT	SEGMENT
?reset_deferred_state_changes@@YGXXZ PROC		; reset_deferred_state_changes, COMDAT

; 1362 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1363 : 
; 1364 : 	number_of_deferred_d3d_renderstate_changes = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA, 0

; 1365 : 
; 1366 : 	number_of_deferred_d3d_texture_changes = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_texture_changes@@3HA, 0

; 1367 : 
; 1368 : 	number_of_deferred_d3d_texture_stage_state_changes = 0;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA, 0

; 1369 : 
; 1370 : 	deferred_d3d_changes = FALSE;

  00027	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?deferred_d3d_changes@@3HA, 0

; 1371 : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?reset_deferred_state_changes@@YGXXZ ENDP		; reset_deferred_state_changes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_deferred_d3d_texture_stage_state@@YGXHHH@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_state$ = 12						; size = 4
_data$ = 16						; size = 4
?set_deferred_d3d_texture_stage_state@@YGXHHH@Z PROC	; set_deferred_d3d_texture_stage_state, COMDAT

; 1335 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1336 : 
; 1337 : #if ALLOW_SET_TEXTURE
; 1338 : 
; 1339 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_deferr
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_deferr
$LN3@set_deferr:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_deferred_d3d_texture_stage_state@@YGXHHH@Z@4JA
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_deferr:

; 1340 : 
; 1341 : #if ( !DEBUG_SEND_ALL_STATES )
; 1342 : 	if ( render_d3d_texture_stage_state_table[stage][state].value != data )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	c1 e0 08	 shl	 eax, 8
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00036	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[eax+ecx*8]
  0003d	3b 55 10	 cmp	 edx, DWORD PTR _data$[ebp]
  00040	74 47		 je	 SHORT $LN1@set_deferr

; 1343 : #endif
; 1344 : 	{
; 1345 : 
; 1346 : 		deferred_texture_stage_state_changes[number_of_deferred_d3d_texture_stage_state_changes].stage = stage;

  00042	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA, 12
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _stage$[ebp]
  0004c	89 88 00 00 00
	00		 mov	 DWORD PTR ?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A[eax], ecx

; 1347 : 		deferred_texture_stage_state_changes[number_of_deferred_d3d_texture_stage_state_changes].state = state;

  00052	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA, 12
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  0005c	89 88 04 00 00
	00		 mov	 DWORD PTR ?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A[eax+4], ecx

; 1348 : 		deferred_texture_stage_state_changes[number_of_deferred_d3d_texture_stage_state_changes].data = data;

  00062	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA, 12
  00069	8b 4d 10	 mov	 ecx, DWORD PTR _data$[ebp]
  0006c	89 88 08 00 00
	00		 mov	 DWORD PTR ?deferred_texture_stage_state_changes@@3PAUDEFERRED_TEXTURE_STAGE_STATE_CHANGE@@A[eax+8], ecx

; 1349 : 
; 1350 : 		number_of_deferred_d3d_texture_stage_state_changes++;

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA
  00077	83 c0 01	 add	 eax, 1
  0007a	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_texture_stage_state_changes@@3HA, eax

; 1351 : 		deferred_d3d_changes = TRUE;

  0007f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?deferred_d3d_changes@@3HA, 1
$LN1@set_deferr:

; 1352 : 	}
; 1353 : 
; 1354 : #endif
; 1355 : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 0c 00	 ret	 12			; 0000000cH
?set_deferred_d3d_texture_stage_state@@YGXHHH@Z ENDP	; set_deferred_d3d_texture_stage_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_texture$ = 12						; size = 4
?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z PROC	; set_deferred_d3d_texture, COMDAT

; 1310 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1311 : 
; 1312 : #if ALLOW_SET_TEXTURE
; 1313 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_deferr
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_deferr
$LN3@set_deferr:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA
  0001a	83 c0 03	 add	 eax, 3
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_deferr:

; 1314 : 
; 1315 : #if ( !DEBUG_SEND_ALL_STATES )
; 1316 : 	if ( texture_stage_interfaces[stage].texture != texture )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[eax*8]
  00037	3b 4d 0c	 cmp	 ecx, DWORD PTR _texture$[ebp]
  0003a	74 37		 je	 SHORT $LN1@set_deferr

; 1317 : #endif
; 1318 : 	{
; 1319 : 
; 1320 : 		deferred_texture_changes[number_of_deferred_d3d_texture_changes].stage = stage;

  0003c	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_deferred_d3d_texture_changes@@3HA, 12
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _stage$[ebp]
  00046	89 88 00 00 00
	00		 mov	 DWORD PTR ?deferred_texture_changes@@3PAUDEFERRED_TEXTURE_CHANGE@@A[eax], ecx

; 1321 : 		deferred_texture_changes[number_of_deferred_d3d_texture_changes].texture = texture;

  0004c	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_deferred_d3d_texture_changes@@3HA, 12
  00053	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  00056	89 88 04 00 00
	00		 mov	 DWORD PTR ?deferred_texture_changes@@3PAUDEFERRED_TEXTURE_CHANGE@@A[eax+4], ecx

; 1322 : 
; 1323 : 		number_of_deferred_d3d_texture_changes++;

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_texture_changes@@3HA
  00061	83 c0 01	 add	 eax, 1
  00064	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_texture_changes@@3HA, eax

; 1324 : 		deferred_d3d_changes = TRUE;

  00069	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?deferred_d3d_changes@@3HA, 1
$LN1@set_deferr:

; 1325 : 	}
; 1326 : 
; 1327 : #endif
; 1328 : }

  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ENDP	; set_deferred_d3d_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z PROC ; set_deferred_d3d_float_state, COMDAT

; 1288 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1289 : 
; 1290 : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_deferr
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_deferr:

; 1291 : 
; 1292 : #if ( !DEBUG_SEND_ALL_STATES )
; 1293 : 	if ( render_d3d_state_table[state].value != *( ( DWORD * ) &data ) )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 39		 je	 SHORT $LN3@set_deferr

; 1294 : #endif
; 1295 : 	{
; 1296 : 
; 1297 : 		deferred_renderstate_changes[number_of_deferred_d3d_renderstate_changes].state = state;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  00041	89 0c c5 00 00
	00 00		 mov	 DWORD PTR ?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A[eax*8], ecx

; 1298 : 		deferred_renderstate_changes[number_of_deferred_d3d_renderstate_changes].float_data = data;

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  0004d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _data$[ebp]
  00052	f3 0f 11 04 c5
	04 00 00 00	 movss	 DWORD PTR ?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A[eax*8+4], xmm0

; 1299 : 
; 1300 : 		number_of_deferred_d3d_renderstate_changes++;

  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  00060	83 c0 01	 add	 eax, 1
  00063	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA, eax

; 1301 : 		deferred_d3d_changes = TRUE;

  00068	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?deferred_d3d_changes@@3HA, 1
$LN3@set_deferr:

; 1302 : 	}
; 1303 : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
?set_deferred_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ENDP ; set_deferred_d3d_float_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z PROC ; set_deferred_d3d_int_state, COMDAT

; 1256 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1257 : 
; 1258 : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_deferr
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_deferr:

; 1259 : 
; 1260 : #if ( !ALLOW_RENDERSTATE_SHADEMODE_CHANGES )
; 1261 : 
; 1262 : 	if ( state == D3DRENDERSTATE_SHADEMODE )
; 1263 : 	{
; 1264 : 
; 1265 : 		return;
; 1266 : 	}
; 1267 : 
; 1268 : #endif
; 1269 : 
; 1270 : #if ( !DEBUG_SEND_ALL_STATES )
; 1271 : 	if ( render_d3d_state_table[state].value != data )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 35		 je	 SHORT $LN1@set_deferr

; 1272 : #endif
; 1273 : 	{
; 1274 : 
; 1275 : 		deferred_renderstate_changes[number_of_deferred_d3d_renderstate_changes].state = state;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  00041	89 0c c5 00 00
	00 00		 mov	 DWORD PTR ?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A[eax*8], ecx

; 1276 : 		deferred_renderstate_changes[number_of_deferred_d3d_renderstate_changes].int_data = data;

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  0004d	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  00050	89 0c c5 04 00
	00 00		 mov	 DWORD PTR ?deferred_renderstate_changes@@3PAUDEFERRED_RENDERSTATE_CHANGE@@A[eax*8+4], ecx

; 1277 : 
; 1278 : 		number_of_deferred_d3d_renderstate_changes++;

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA
  0005c	83 c0 01	 add	 eax, 1
  0005f	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_deferred_d3d_renderstate_changes@@3HA, eax

; 1279 : 		deferred_d3d_changes = TRUE;

  00064	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?deferred_d3d_changes@@3HA, 1
$LN1@set_deferr:

; 1280 : 	}
; 1281 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 08 00	 ret	 8
?set_deferred_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ENDP ; set_deferred_d3d_int_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?force_set_d3d_texture_stage_state@@YGXHHH@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_state$ = 12						; size = 4
_data$ = 16						; size = 4
?force_set_d3d_texture_stage_state@@YGXHHH@Z PROC	; force_set_d3d_texture_stage_state, COMDAT

; 939  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 940  : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@force_set_
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@force_set_
$LN3@force_set_:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??force_set_d3d_texture_stage_state@@YGXHHH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@force_set_:

; 941  : 
; 942  : 	flush_triangle_primitives ();

  0002d	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 943  : 	flush_line_primitives ();

  00032	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 944  : 
; 945  : #if DEBUG_STATE_CHANGE_FLUSHES
; 946  : 	debug_log ( "[FORCED] Texture stage state %s change caused flush", get_texture_stage_state_name ( state ) );
; 947  : #endif
; 948  : 
; 949  : 	immediate_set_texture_state ( stage, state, data );

  00037	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR _stage$[ebp]
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ?immediate_set_texture_state@@YGXHKK@Z ; immediate_set_texture_state

; 950  : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 0c 00	 ret	 12			; 0000000cH
?force_set_d3d_texture_stage_state@@YGXHHH@Z ENDP	; force_set_d3d_texture_stage_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?force_set_d3d_texture@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_texture$ = 12						; size = 4
?force_set_d3d_texture@@YGXHPAUSCREEN@@@Z PROC		; force_set_d3d_texture, COMDAT

; 919  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 920  : #if ALLOW_SET_TEXTURE
; 921  : 
; 922  : 	flush_triangle_primitives ();

  00009	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 923  : 	flush_line_primitives ();

  0000e	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 924  : 
; 925  : #if DEBUG_STATE_CHANGE_FLUSHES
; 926  : 	debug_log ( "[FORCED] SetTexture %08x change caused flush", texture );
; 927  : #endif
; 928  : 
; 929  : 	immediate_set_texture ( stage, texture );

  00013	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _stage$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?immediate_set_texture@@YGXHPAUSCREEN@@@Z ; immediate_set_texture

; 930  : 
; 931  : #endif
; 932  : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?force_set_d3d_texture@@YGXHPAUSCREEN@@@Z ENDP		; force_set_d3d_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z PROC ; force_set_d3d_float_state, COMDAT

; 903  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 904  : 	flush_triangle_primitives ();

  00009	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 905  : 	flush_line_primitives ();

  0000e	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 906  : 
; 907  : #if DEBUG_STATE_CHANGE_FLUSHES
; 908  : 	debug_log ( "[FORCED] Renderstate %s change caused flush", get_render_state_name ( state ) );
; 909  : #endif
; 910  : 
; 911  : 	immediate_set_render_state ( state, * ( DWORD * ) &data );

  00013	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state

; 912  : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ENDP ; force_set_d3d_float_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z PROC ; force_set_d3d_int_state, COMDAT

; 887  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 888  : 	flush_triangle_primitives ();

  00009	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 889  : 	flush_line_primitives ();

  0000e	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 890  : 
; 891  : #if DEBUG_STATE_CHANGE_FLUSHES
; 892  : 	debug_log ( "[FORCED] Renderstate %s change caused flush", get_render_state_name ( state ) );
; 893  : #endif
; 894  : 
; 895  : 	immediate_set_render_state ( state, data );

  00013	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state

; 896  : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ENDP ; force_set_d3d_int_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_stage_state_immediate@@YGXHHH@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_state$ = 12						; size = 4
_data$ = 16						; size = 4
?set_d3d_texture_stage_state_immediate@@YGXHHH@Z PROC	; set_d3d_texture_stage_state_immediate, COMDAT

; 1145 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1146 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_d3d_te
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_d3d_te
$LN3@set_d3d_te:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_texture_stage_state_immediate@@YGXHHH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_te:

; 1147 : 
; 1148 : #if ( !DEBUG_SEND_ALL_STATES )
; 1149 : 	if ( render_d3d_texture_stage_state_table[stage][state].value != data )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	c1 e0 08	 shl	 eax, 8
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00036	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[eax+ecx*8]
  0003d	3b 55 10	 cmp	 edx, DWORD PTR _data$[ebp]
  00040	74 11		 je	 SHORT $LN1@set_d3d_te

; 1150 : #endif
; 1151 : 	{
; 1152 : 		immediate_set_texture_state ( stage, state, data );

  00042	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00045	50		 push	 eax
  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00049	51		 push	 ecx
  0004a	8b 55 08	 mov	 edx, DWORD PTR _stage$[ebp]
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ?immediate_set_texture_state@@YGXHKK@Z ; immediate_set_texture_state
$LN1@set_d3d_te:

; 1153 : 	}
; 1154 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
?set_d3d_texture_stage_state_immediate@@YGXHHH@Z ENDP	; set_d3d_texture_stage_state_immediate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_texture$ = 12						; size = 4
?set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z PROC	; set_d3d_texture_immediate, COMDAT

; 1125 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1126 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_d3d_te
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_d3d_te
$LN3@set_d3d_te:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_te:

; 1127 : 
; 1128 : #if ALLOW_SET_TEXTURE
; 1129 : 
; 1130 : #if ( !DEBUG_SEND_ALL_STATES )
; 1131 : 	if ( texture_stage_interfaces[stage].texture != texture )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[eax*8]
  00037	3b 4d 0c	 cmp	 ecx, DWORD PTR _texture$[ebp]
  0003a	74 0d		 je	 SHORT $LN1@set_d3d_te

; 1132 : #endif
; 1133 : 	{
; 1134 : 		immediate_set_texture ( stage, texture );

  0003c	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _stage$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?immediate_set_texture@@YGXHPAUSCREEN@@@Z ; immediate_set_texture
$LN1@set_d3d_te:

; 1135 : 	}
; 1136 : 
; 1137 : #endif
; 1138 : }

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
?set_d3d_texture_immediate@@YGXHPAUSCREEN@@@Z ENDP	; set_d3d_texture_immediate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z PROC ; set_d3d_float_state_immediate, COMDAT

; 1109 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1110 : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_d3d_fl
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_fl:

; 1111 : 
; 1112 : #if ( !DEBUG_SEND_ALL_STATES )
; 1113 : 	if ( render_d3d_state_table[state].value != *( ( DWORD * ) &data ) )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 0d		 je	 SHORT $LN1@set_d3d_fl

; 1114 : #endif
; 1115 : 	{
; 1116 : 		immediate_set_render_state ( state, *( ( DWORD * ) &data ) );

  00039	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state
$LN1@set_d3d_fl:

; 1117 : 	}
; 1118 : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?set_d3d_float_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@M@Z ENDP ; set_d3d_float_state_immediate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z PROC ; set_d3d_int_state_immediate, COMDAT

; 1093 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1094 : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_d3d_in
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_in:

; 1095 : 
; 1096 : #if ( !DEBUG_SEND_ALL_STATES )
; 1097 : 	if ( render_d3d_state_table[state].value != data )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 0d		 je	 SHORT $LN1@set_d3d_in

; 1098 : #endif
; 1099 : 	{
; 1100 : 		immediate_set_render_state ( state, data );

  00039	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state
$LN1@set_d3d_in:

; 1101 : 	}
; 1102 : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?set_d3d_int_state_immediate@@YGXW4_D3DRENDERSTATETYPE@@K@Z ENDP ; set_d3d_int_state_immediate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_stage_state@@YGXHHH@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_state$ = 12						; size = 4
_data$ = 16						; size = 4
?set_d3d_texture_stage_state@@YGXHHH@Z PROC		; set_d3d_texture_stage_state, COMDAT

; 1052 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1053 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_d3d_te
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_d3d_te
$LN3@set_d3d_te:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_texture_stage_state@@YGXHHH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_te:

; 1054 : 
; 1055 : #if ( !DEBUG_SEND_ALL_STATES )
; 1056 : 	if ( render_d3d_texture_stage_state_table[stage][state].value != data )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	c1 e0 08	 shl	 eax, 8
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00036	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?render_d3d_texture_stage_state_table@@3PAY0CA@URENDER_STATE_INFORMATION@@A[eax+ecx*8]
  0003d	3b 55 10	 cmp	 edx, DWORD PTR _data$[ebp]
  00040	74 1b		 je	 SHORT $LN1@set_d3d_te

; 1057 : #endif
; 1058 : 	{
; 1059 : 	
; 1060 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1061 : 		debug_log ( "Texture stage state %s change caused flush", get_texture_stage_state_name ( state ) );
; 1062 : #endif
; 1063 : 
; 1064 : 		flush_triangle_primitives ();

  00042	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 1065 : 		flush_line_primitives ();

  00047	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 1066 : 
; 1067 : 		immediate_set_texture_state ( stage, state, data );

  0004c	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00053	51		 push	 ecx
  00054	8b 55 08	 mov	 edx, DWORD PTR _stage$[ebp]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 ?immediate_set_texture_state@@YGXHKK@Z ; immediate_set_texture_state
$LN1@set_d3d_te:

; 1068 : 	}
; 1069 : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
?set_d3d_texture_stage_state@@YGXHHH@Z ENDP		; set_d3d_texture_stage_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_texture$ = 12						; size = 4
?set_d3d_texture@@YGXHPAUSCREEN@@@Z PROC		; set_d3d_texture, COMDAT

; 1024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1025 : 	ASSERT ( ( stage >= 0 ) && ( stage < 8 ) );

  00009	83 7d 08 00	 cmp	 DWORD PTR _stage$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_d3d_te
  0000f	83 7d 08 08	 cmp	 DWORD PTR _stage$[ebp], 8
  00013	7c 18		 jl	 SHORT $LN2@set_d3d_te
$LN3@set_d3d_te:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_texture@@YGXHPAUSCREEN@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LJAMGBM@?$CI?5stage?5?$DO?$DN?50?5?$CJ?5?$CG?$CG?5?$CI?5stage?5?$DM?58?5?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_te:

; 1026 : 
; 1027 : #if ALLOW_SET_TEXTURE
; 1028 : 
; 1029 : #if ( !DEBUG_SEND_ALL_STATES )
; 1030 : 	if ( texture_stage_interfaces[stage].texture != texture )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00030	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?texture_stage_interfaces@@3PAUTEXTURE_STATE_INFORMATION@@A[eax*8]
  00037	3b 4d 0c	 cmp	 ecx, DWORD PTR _texture$[ebp]
  0003a	74 17		 je	 SHORT $LN1@set_d3d_te

; 1031 : #endif
; 1032 : 	{
; 1033 : 	
; 1034 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1035 : 		debug_log ( "Texture change to %08x caused flush", texture );
; 1036 : #endif
; 1037 : 
; 1038 : 		flush_triangle_primitives ();

  0003c	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 1039 : 		flush_line_primitives ();

  00041	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 1040 : 
; 1041 : 		immediate_set_texture ( stage, texture );

  00046	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _stage$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ?immediate_set_texture@@YGXHPAUSCREEN@@@Z ; immediate_set_texture
$LN1@set_d3d_te:

; 1042 : 	}
; 1043 : 
; 1044 : #endif
; 1045 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 08 00	 ret	 8
?set_d3d_texture@@YGXHPAUSCREEN@@@Z ENDP		; set_d3d_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z PROC ; set_d3d_float_state, COMDAT

; 1000 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1001 : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_d3d_fl
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_fl:

; 1002 : 
; 1003 : #if ( !DEBUG_SEND_ALL_STATES )
; 1004 : 	if ( render_d3d_state_table[state].value != *( ( DWORD * ) &data ) )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 17		 je	 SHORT $LN1@set_d3d_fl

; 1005 : #endif
; 1006 : 	{
; 1007 : 	
; 1008 : #if DEBUG_STATE_CHANGE_FLUSHES
; 1009 : 		debug_log ( "Renderstate %s change caused flush", get_render_state_name ( state ) );
; 1010 : #endif
; 1011 : 
; 1012 : 		flush_triangle_primitives ();

  00039	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 1013 : 		flush_line_primitives ();

  0003e	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 1014 : 
; 1015 : 		immediate_set_render_state ( state, *( ( DWORD * ) &data ) );

  00043	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state
$LN1@set_d3d_fl:

; 1016 : 	}
; 1017 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ENDP ; set_d3d_float_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z PROC ; set_d3d_int_state_no_flush, COMDAT

; 979  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 980  : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_d3d_in
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_in:

; 981  : 
; 982  : #if ( !DEBUG_SEND_ALL_STATES )
; 983  : 	if ( render_d3d_state_table[state].value != data )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 0d		 je	 SHORT $LN1@set_d3d_in

; 984  : #endif
; 985  : 	{
; 986  : 
; 987  : #if DEBUG_STATE_CHANGE_FLUSHES
; 988  : 		debug_log ( "Renderstate %s change caused flush", get_render_state_name ( state ) );
; 989  : #endif
; 990  : 
; 991  : 		immediate_set_render_state ( state, data );

  00039	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state
$LN1@set_d3d_in:

; 992  : 	}
; 993  : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?set_d3d_int_state_no_flush@@YGXW4_D3DRENDERSTATETYPE@@K@Z ENDP ; set_d3d_int_state_no_flush
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_state$ = 8						; size = 4
_data$ = 12						; size = 4
?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z PROC	; set_d3d_int_state, COMDAT

; 959  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 960  : 	ASSERT ( state < MAX_RENDER_STATES );

  00009	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _state$[ebp], 256 ; 00000100H
  00010	7c 18		 jl	 SHORT $LN2@set_d3d_in
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JLPLFGBH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OFDHAPIL@state?5?$DM?5MAX_RENDER_STATES@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_d3d_in:

; 961  : 
; 962  : #if ( !DEBUG_SEND_ALL_STATES )
; 963  : 	if ( render_d3d_state_table[state].value != data )

  0002a	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0002d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?render_d3d_state_table@@3PAURENDER_STATE_INFORMATION@@A[eax*8]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _data$[ebp]
  00037	74 17		 je	 SHORT $LN1@set_d3d_in

; 964  : #endif
; 965  : 	{
; 966  : 
; 967  : #if DEBUG_STATE_CHANGE_FLUSHES
; 968  : 		debug_log ( "Renderstate %s change caused flush", get_render_state_name ( state ) );
; 969  : #endif
; 970  : 
; 971  : 		flush_triangle_primitives ();

  00039	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 972  : 		flush_line_primitives ();

  0003e	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 973  : 
; 974  : 		immediate_set_render_state ( state, data );

  00043	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _state$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?immediate_set_render_state@@YGXKK@Z ; immediate_set_render_state
$LN1@set_d3d_in:

; 975  : 	}
; 976  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ENDP	; set_d3d_int_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z
_TEXT	SEGMENT
_texture$ = 8						; size = 4
?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z PROC ; set_d3d_gouraud_shaded_textured_renderstate, COMDAT

; 873  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 874  : 
; 875  : 	set_d3d_texture ( 0, texture );

  00009	8b 45 08	 mov	 eax, DWORD PTR _texture$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 876  : 
; 877  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00014	6a 04		 push	 4
  00016	6a 01		 push	 1
  00018	6a 00		 push	 0
  0001a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 878  : 
; 879  : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  0001f	6a 02		 push	 2
  00021	6a 09		 push	 9
  00023	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 880  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ENDP ; set_d3d_gouraud_shaded_textured_renderstate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z
_TEXT	SEGMENT
_texture$ = 8						; size = 4
?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z PROC ; set_d3d_flat_shaded_textured_renderstate, COMDAT

; 859  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 860  : 
; 861  : 	set_d3d_texture ( 0, texture );

  00009	8b 45 08	 mov	 eax, DWORD PTR _texture$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 862  : 
; 863  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00014	6a 04		 push	 4
  00016	6a 01		 push	 1
  00018	6a 00		 push	 0
  0001a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 864  : 
; 865  : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_FLAT );

  0001f	6a 01		 push	 1
  00021	6a 09		 push	 9
  00023	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 866  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ENDP ; set_d3d_flat_shaded_textured_renderstate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_gouraud_shaded_renderstate@@YGXXZ
_TEXT	SEGMENT
?set_d3d_gouraud_shaded_renderstate@@YGXXZ PROC		; set_d3d_gouraud_shaded_renderstate, COMDAT

; 846  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 847  : 
; 848  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  00009	6a 01		 push	 1
  0000b	6a 01		 push	 1
  0000d	6a 00		 push	 0
  0000f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 849  : 	set_d3d_texture ( 0, NULL );

  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 850  : 
; 851  : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  0001d	6a 02		 push	 2
  0001f	6a 09		 push	 9
  00021	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 852  : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?set_d3d_gouraud_shaded_renderstate@@YGXXZ ENDP		; set_d3d_gouraud_shaded_renderstate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_material_default@@YGXXZ
_TEXT	SEGMENT
?set_d3d_material_default@@YGXXZ PROC			; set_d3d_material_default, COMDAT

; 819  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 820  : 	d3d_material.dcvDiffuse.r = 1;	d3d_material.dcvDiffuse.g = 1;	d3d_material.dcvDiffuse.b = 1;	d3d_material.dcvDiffuse.a = 1;

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00011	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A, xmm0
  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00021	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+4, xmm0
  00029	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00031	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+8, xmm0
  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00041	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+12, xmm0

; 821  : 	d3d_material.dcvAmbient.r = 1;	d3d_material.dcvAmbient.g = 1;	d3d_material.dcvAmbient.b = 1;	d3d_material.dcvAmbient.a = 1;

  00049	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00051	f3 0f 11 05 10
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+16, xmm0
  00059	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00061	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+20, xmm0
  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00071	f3 0f 11 05 18
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+24, xmm0
  00079	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00081	f3 0f 11 05 1c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+28, xmm0

; 822  : 	d3d_material.dcvEmissive.r = 0;	d3d_material.dcvEmissive.g = 0;	d3d_material.dcvEmissive.b = 0;	d3d_material.dcvEmissive.a = 1;

  00089	0f 57 c0	 xorps	 xmm0, xmm0
  0008c	f3 0f 11 05 30
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+48, xmm0
  00094	0f 57 c0	 xorps	 xmm0, xmm0
  00097	f3 0f 11 05 34
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+52, xmm0
  0009f	0f 57 c0	 xorps	 xmm0, xmm0
  000a2	f3 0f 11 05 38
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+56, xmm0
  000aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000b2	f3 0f 11 05 3c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+60, xmm0

; 823  : 	d3d_material.dcvSpecular.r = 1;	d3d_material.dcvSpecular.g = 1;	d3d_material.dcvSpecular.b = 1;	d3d_material.dcvSpecular.a = 1;

  000ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000c2	f3 0f 11 05 20
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+32, xmm0
  000ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000d2	f3 0f 11 05 24
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+36, xmm0
  000da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000e2	f3 0f 11 05 28
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+40, xmm0
  000ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000f2	f3 0f 11 05 2c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+44, xmm0

; 824  : 	d3d_material.dvPower = 1;

  000fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00102	f3 0f 11 05 40
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+64, xmm0

; 825  : 
; 826  : 	immediate_set_material ( &d3d_material );

  0010a	68 00 00 00 00	 push	 OFFSET ?d3d_material@@3U_D3DMATERIAL7@@A
  0010f	e8 00 00 00 00	 call	 ?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z ; immediate_set_material

; 827  : }

  00114	5f		 pop	 edi
  00115	5e		 pop	 esi
  00116	5b		 pop	 ebx
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
?set_d3d_material_default@@YGXXZ ENDP			; set_d3d_material_default
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_material_emissive_colour@@YGXHHHH@Z
_TEXT	SEGMENT
_a$ = -16						; size = 4
_b$ = -12						; size = 4
_g$ = -8						; size = 4
_r$ = -4						; size = 4
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
?set_d3d_material_emissive_colour@@YGXHHHH@Z PROC	; set_d3d_material_emissive_colour, COMDAT

; 793  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 794  : 	float
; 795  : 		r,
; 796  : 		g,
; 797  : 		b,
; 798  : 		a;
; 799  : 
; 800  : 	r = red;

  00009	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _red$[ebp]
  0000e	f3 0f 11 45 fc	 movss	 DWORD PTR _r$[ebp], xmm0

; 801  : 	g = green;

  00013	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _green$[ebp]
  00018	f3 0f 11 45 f8	 movss	 DWORD PTR _g$[ebp], xmm0

; 802  : 	b = blue;

  0001d	f3 0f 2a 45 10	 cvtsi2ss xmm0, DWORD PTR _blue$[ebp]
  00022	f3 0f 11 45 f4	 movss	 DWORD PTR _b$[ebp], xmm0

; 803  : 	a = alpha;

  00027	f3 0f 2a 45 14	 cvtsi2ss xmm0, DWORD PTR _alpha$[ebp]
  0002c	f3 0f 11 45 f0	 movss	 DWORD PTR _a$[ebp], xmm0

; 804  : 
; 805  : 	r /= 255;

  00031	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _r$[ebp]
  00036	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  0003e	f3 0f 11 45 fc	 movss	 DWORD PTR _r$[ebp], xmm0

; 806  : 	g /= 255;

  00043	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _g$[ebp]
  00048	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  00050	f3 0f 11 45 f8	 movss	 DWORD PTR _g$[ebp], xmm0

; 807  : 	b /= 255;

  00055	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _b$[ebp]
  0005a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  00062	f3 0f 11 45 f4	 movss	 DWORD PTR _b$[ebp], xmm0

; 808  : 	a /= 255;

  00067	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  0006c	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  00074	f3 0f 11 45 f0	 movss	 DWORD PTR _a$[ebp], xmm0

; 809  : 
; 810  : 	d3d_material.dcvDiffuse.r = 0;	d3d_material.dcvDiffuse.g = 0;	d3d_material.dcvDiffuse.b = 0;	d3d_material.dcvDiffuse.a = a;

  00079	0f 57 c0	 xorps	 xmm0, xmm0
  0007c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A, xmm0
  00084	0f 57 c0	 xorps	 xmm0, xmm0
  00087	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+4, xmm0
  0008f	0f 57 c0	 xorps	 xmm0, xmm0
  00092	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+8, xmm0
  0009a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  0009f	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+12, xmm0

; 811  : 	d3d_material.dcvAmbient.r = 0;	d3d_material.dcvAmbient.g = 0;	d3d_material.dcvAmbient.b = 0;	d3d_material.dcvAmbient.a = a;

  000a7	0f 57 c0	 xorps	 xmm0, xmm0
  000aa	f3 0f 11 05 10
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+16, xmm0
  000b2	0f 57 c0	 xorps	 xmm0, xmm0
  000b5	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+20, xmm0
  000bd	0f 57 c0	 xorps	 xmm0, xmm0
  000c0	f3 0f 11 05 18
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+24, xmm0
  000c8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  000cd	f3 0f 11 05 1c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+28, xmm0

; 812  : 	d3d_material.dcvEmissive.r = r;	d3d_material.dcvEmissive.g = g;	d3d_material.dcvEmissive.b = b;	d3d_material.dcvEmissive.a = a;

  000d5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _r$[ebp]
  000da	f3 0f 11 05 30
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+48, xmm0
  000e2	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _g$[ebp]
  000e7	f3 0f 11 05 34
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+52, xmm0
  000ef	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _b$[ebp]
  000f4	f3 0f 11 05 38
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+56, xmm0
  000fc	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  00101	f3 0f 11 05 3c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+60, xmm0

; 813  : 	d3d_material.dcvSpecular.r = 0;	d3d_material.dcvSpecular.g = 0;	d3d_material.dcvSpecular.b = 0;	d3d_material.dcvSpecular.a = a;

  00109	0f 57 c0	 xorps	 xmm0, xmm0
  0010c	f3 0f 11 05 20
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+32, xmm0
  00114	0f 57 c0	 xorps	 xmm0, xmm0
  00117	f3 0f 11 05 24
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+36, xmm0
  0011f	0f 57 c0	 xorps	 xmm0, xmm0
  00122	f3 0f 11 05 28
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+40, xmm0
  0012a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  0012f	f3 0f 11 05 2c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+44, xmm0

; 814  : 
; 815  : 	immediate_set_material ( &d3d_material );

  00137	68 00 00 00 00	 push	 OFFSET ?d3d_material@@3U_D3DMATERIAL7@@A
  0013c	e8 00 00 00 00	 call	 ?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z ; immediate_set_material

; 816  : }

  00141	5f		 pop	 edi
  00142	5e		 pop	 esi
  00143	5b		 pop	 ebx
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 10 00	 ret	 16			; 00000010H
?set_d3d_material_emissive_colour@@YGXHHHH@Z ENDP	; set_d3d_material_emissive_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_material_colour@@YGXHHHHH@Z
_TEXT	SEGMENT
_s$ = -20						; size = 4
_a$ = -16						; size = 4
_b$ = -12						; size = 4
_g$ = -8						; size = 4
_r$ = -4						; size = 4
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
_alpha$ = 20						; size = 4
_specular$ = 24						; size = 4
?set_d3d_material_colour@@YGXHHHHH@Z PROC		; set_d3d_material_colour, COMDAT

; 759  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  : 	float
; 761  : 		r,
; 762  : 		g,
; 763  : 		b,
; 764  : 		a,
; 765  : 		s;
; 766  : 
; 767  : 	r = red;

  00009	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _red$[ebp]
  0000e	f3 0f 11 45 fc	 movss	 DWORD PTR _r$[ebp], xmm0

; 768  : 	g = green;

  00013	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _green$[ebp]
  00018	f3 0f 11 45 f8	 movss	 DWORD PTR _g$[ebp], xmm0

; 769  : 	b = blue;

  0001d	f3 0f 2a 45 10	 cvtsi2ss xmm0, DWORD PTR _blue$[ebp]
  00022	f3 0f 11 45 f4	 movss	 DWORD PTR _b$[ebp], xmm0

; 770  : 	a = alpha;

  00027	f3 0f 2a 45 14	 cvtsi2ss xmm0, DWORD PTR _alpha$[ebp]
  0002c	f3 0f 11 45 f0	 movss	 DWORD PTR _a$[ebp], xmm0

; 771  : 	s = specular;

  00031	f3 0f 2a 45 18	 cvtsi2ss xmm0, DWORD PTR _specular$[ebp]
  00036	f3 0f 11 45 ec	 movss	 DWORD PTR _s$[ebp], xmm0

; 772  : 
; 773  : 	r /= 255;

  0003b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _r$[ebp]
  00040	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  00048	f3 0f 11 45 fc	 movss	 DWORD PTR _r$[ebp], xmm0

; 774  : 	g /= 255;

  0004d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _g$[ebp]
  00052	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  0005a	f3 0f 11 45 f8	 movss	 DWORD PTR _g$[ebp], xmm0

; 775  : 	b /= 255;

  0005f	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _b$[ebp]
  00064	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  0006c	f3 0f 11 45 f4	 movss	 DWORD PTR _b$[ebp], xmm0

; 776  : 	a /= 255;

  00071	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  00076	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  0007e	f3 0f 11 45 f0	 movss	 DWORD PTR _a$[ebp], xmm0

; 777  : 	s /= 255;

  00083	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _s$[ebp]
  00088	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  00090	f3 0f 11 45 ec	 movss	 DWORD PTR _s$[ebp], xmm0

; 778  : 
; 779  : 	d3d_material.dcvDiffuse.r = r;	d3d_material.dcvDiffuse.g = g;	d3d_material.dcvDiffuse.b = b;	d3d_material.dcvDiffuse.a = a;

  00095	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _r$[ebp]
  0009a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A, xmm0
  000a2	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _g$[ebp]
  000a7	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+4, xmm0
  000af	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _b$[ebp]
  000b4	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+8, xmm0
  000bc	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  000c1	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+12, xmm0

; 780  : 	d3d_material.dcvAmbient.r = r;	d3d_material.dcvAmbient.g = g;	d3d_material.dcvAmbient.b = b;	d3d_material.dcvAmbient.a = a;

  000c9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _r$[ebp]
  000ce	f3 0f 11 05 10
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+16, xmm0
  000d6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _g$[ebp]
  000db	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+20, xmm0
  000e3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _b$[ebp]
  000e8	f3 0f 11 05 18
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+24, xmm0
  000f0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  000f5	f3 0f 11 05 1c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+28, xmm0

; 781  : 	d3d_material.dcvEmissive.r = 0;	d3d_material.dcvEmissive.g = 0;	d3d_material.dcvEmissive.b = 0;	d3d_material.dcvEmissive.a = 0;

  000fd	0f 57 c0	 xorps	 xmm0, xmm0
  00100	f3 0f 11 05 30
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+48, xmm0
  00108	0f 57 c0	 xorps	 xmm0, xmm0
  0010b	f3 0f 11 05 34
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+52, xmm0
  00113	0f 57 c0	 xorps	 xmm0, xmm0
  00116	f3 0f 11 05 38
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+56, xmm0
  0011e	0f 57 c0	 xorps	 xmm0, xmm0
  00121	f3 0f 11 05 3c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+60, xmm0

; 782  : 	d3d_material.dcvSpecular.r = s;	d3d_material.dcvSpecular.g = s;	d3d_material.dcvSpecular.b = s;	d3d_material.dcvSpecular.a = a;

  00129	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _s$[ebp]
  0012e	f3 0f 11 05 20
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+32, xmm0
  00136	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _s$[ebp]
  0013b	f3 0f 11 05 24
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+36, xmm0
  00143	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _s$[ebp]
  00148	f3 0f 11 05 28
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+40, xmm0
  00150	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _a$[ebp]
  00155	f3 0f 11 05 2c
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+44, xmm0

; 783  : 	d3d_material.dvPower = 10.0;

  0015d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00165	f3 0f 11 05 40
	00 00 00	 movss	 DWORD PTR ?d3d_material@@3U_D3DMATERIAL7@@A+64, xmm0

; 784  : 
; 785  : 	immediate_set_material ( &d3d_material );

  0016d	68 00 00 00 00	 push	 OFFSET ?d3d_material@@3U_D3DMATERIAL7@@A
  00172	e8 00 00 00 00	 call	 ?immediate_set_material@@YGXPAU_D3DMATERIAL7@@@Z ; immediate_set_material

; 786  : }

  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 14 00	 ret	 20			; 00000014H
?set_d3d_material_colour@@YGXHHHHH@Z ENDP		; set_d3d_material_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_plain_renderstate@@YGXXZ
_TEXT	SEGMENT
?set_d3d_plain_renderstate@@YGXXZ PROC			; set_d3d_plain_renderstate, COMDAT

; 833  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 834  : 
; 835  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  00009	6a 01		 push	 1
  0000b	6a 01		 push	 1
  0000d	6a 00		 push	 0
  0000f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 836  : 	set_d3d_texture ( 0, NULL );

  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 837  : 
; 838  : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_FLAT );

  0001d	6a 01		 push	 1
  0001f	6a 09		 push	 9
  00021	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 839  : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?set_d3d_plain_renderstate@@YGXXZ ENDP			; set_d3d_plain_renderstate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_mip_filtering@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_texture_mip_filtering@@YGXH@Z PROC		; set_d3d_texture_mip_filtering, COMDAT

; 588  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 589  : 
; 590  : 	if ( flag )

  00009	83 7d 08 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 0d		 je	 SHORT $LN2@set_d3d_te

; 591  : 	{
; 592  : 
; 593  : 		set_d3d_texture_stage_state (0, D3DTSS_MIPFILTER, D3DTFP_POINT);

  0000f	6a 02		 push	 2
  00011	6a 12		 push	 18			; 00000012H
  00013	6a 00		 push	 0
  00015	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 594  : 	}
; 595  : 	else

  0001a	eb 0b		 jmp	 SHORT $LN1@set_d3d_te
$LN2@set_d3d_te:

; 596  : 	{
; 597  : 
; 598  : 		set_d3d_texture_stage_state (0, D3DTSS_MIPFILTER, D3DTFP_NONE);

  0001c	6a 01		 push	 1
  0001e	6a 12		 push	 18			; 00000012H
  00020	6a 00		 push	 0
  00022	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN1@set_d3d_te:

; 599  : 	}
; 600  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?set_d3d_texture_mip_filtering@@YGXH@Z ENDP		; set_d3d_texture_mip_filtering
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_min_filtering@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_texture_min_filtering@@YGXH@Z PROC		; set_d3d_texture_min_filtering, COMDAT

; 569  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 570  : 
; 571  : 	if ( flag )

  00009	83 7d 08 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 0d		 je	 SHORT $LN2@set_d3d_te

; 572  : 	{
; 573  : 
; 574  : 		set_d3d_texture_stage_state (0, D3DTSS_MINFILTER, D3DTFN_LINEAR);

  0000f	6a 02		 push	 2
  00011	6a 11		 push	 17			; 00000011H
  00013	6a 00		 push	 0
  00015	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 575  : 	}
; 576  : 	else

  0001a	eb 0b		 jmp	 SHORT $LN1@set_d3d_te
$LN2@set_d3d_te:

; 577  : 	{
; 578  : 
; 579  : 		set_d3d_texture_stage_state (0, D3DTSS_MINFILTER, D3DTFN_POINT);

  0001c	6a 01		 push	 1
  0001e	6a 11		 push	 17			; 00000011H
  00020	6a 00		 push	 0
  00022	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN1@set_d3d_te:

; 580  : 	}
; 581  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?set_d3d_texture_min_filtering@@YGXH@Z ENDP		; set_d3d_texture_min_filtering
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_mag_filtering@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_texture_mag_filtering@@YGXH@Z PROC		; set_d3d_texture_mag_filtering, COMDAT

; 550  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 551  : 
; 552  : 	if ( flag )

  00009	83 7d 08 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 0d		 je	 SHORT $LN2@set_d3d_te

; 553  : 	{
; 554  : 
; 555  : 		set_d3d_texture_stage_state (0, D3DTSS_MAGFILTER, D3DTFG_LINEAR);

  0000f	6a 02		 push	 2
  00011	6a 10		 push	 16			; 00000010H
  00013	6a 00		 push	 0
  00015	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 556  : 	}
; 557  : 	else

  0001a	eb 0b		 jmp	 SHORT $LN1@set_d3d_te
$LN2@set_d3d_te:

; 558  : 	{
; 559  : 
; 560  : 		set_d3d_texture_stage_state (0, D3DTSS_MAGFILTER, D3DTFG_POINT);

  0001c	6a 01		 push	 1
  0001e	6a 10		 push	 16			; 00000010H
  00020	6a 00		 push	 0
  00022	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN1@set_d3d_te:

; 561  : 	}
; 562  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?set_d3d_texture_mag_filtering@@YGXH@Z ENDP		; set_d3d_texture_mag_filtering
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_filtering@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_texture_filtering@@YGXH@Z PROC			; set_d3d_texture_filtering, COMDAT

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 528  : 
; 529  : 	if ( flag )

  00009	83 7d 08 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 23		 je	 SHORT $LN2@set_d3d_te

; 530  : 	{
; 531  : 
; 532  : 		set_d3d_texture_stage_state (0, D3DTSS_MAGFILTER, D3DTFG_LINEAR);

  0000f	6a 02		 push	 2
  00011	6a 10		 push	 16			; 00000010H
  00013	6a 00		 push	 0
  00015	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 533  : 		set_d3d_texture_stage_state (0, D3DTSS_MINFILTER, D3DTFN_LINEAR);

  0001a	6a 02		 push	 2
  0001c	6a 11		 push	 17			; 00000011H
  0001e	6a 00		 push	 0
  00020	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 534  : 		set_d3d_texture_stage_state (0, D3DTSS_MIPFILTER, D3DTFP_LINEAR);

  00025	6a 03		 push	 3
  00027	6a 12		 push	 18			; 00000012H
  00029	6a 00		 push	 0
  0002b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 535  : 	}
; 536  : 	else

  00030	eb 21		 jmp	 SHORT $LN1@set_d3d_te
$LN2@set_d3d_te:

; 537  : 	{
; 538  : 
; 539  : 		set_d3d_texture_stage_state (0, D3DTSS_MAGFILTER, D3DTFG_POINT);

  00032	6a 01		 push	 1
  00034	6a 10		 push	 16			; 00000010H
  00036	6a 00		 push	 0
  00038	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 540  : 		set_d3d_texture_stage_state (0, D3DTSS_MINFILTER, D3DTFN_POINT);

  0003d	6a 01		 push	 1
  0003f	6a 11		 push	 17			; 00000011H
  00041	6a 00		 push	 0
  00043	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 541  : 		set_d3d_texture_stage_state (0, D3DTSS_MIPFILTER, D3DTFP_NONE);

  00048	6a 01		 push	 1
  0004a	6a 12		 push	 18			; 00000012H
  0004c	6a 00		 push	 0
  0004e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN1@set_d3d_te:

; 542  : 	}
; 543  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?set_d3d_texture_filtering@@YGXH@Z ENDP			; set_d3d_texture_filtering
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_texture_wrapping@@YGXHH@Z
_TEXT	SEGMENT
_stage$ = 8						; size = 4
_flag$ = 12						; size = 4
?set_d3d_texture_wrapping@@YGXHH@Z PROC			; set_d3d_texture_wrapping, COMDAT

; 506  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 507  : 
; 508  : 	if ( flag )

  00009	83 7d 0c 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 1c		 je	 SHORT $LN2@set_d3d_te

; 509  : 	{
; 510  : 
; 511  : 		set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  0000f	6a 01		 push	 1
  00011	6a 0d		 push	 13			; 0000000dH
  00013	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 512  : 		set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  0001c	6a 01		 push	 1
  0001e	6a 0e		 push	 14			; 0000000eH
  00020	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 513  : 	}
; 514  : 	else

  00029	eb 1a		 jmp	 SHORT $LN1@set_d3d_te
$LN2@set_d3d_te:

; 515  : 	{
; 516  : 
; 517  : 		set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESSU, D3DTADDRESS_CLAMP );

  0002b	6a 03		 push	 3
  0002d	6a 0d		 push	 13			; 0000000dH
  0002f	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 518  : 		set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESSV, D3DTADDRESS_CLAMP );

  00038	6a 03		 push	 3
  0003a	6a 0e		 push	 14			; 0000000eH
  0003c	8b 45 08	 mov	 eax, DWORD PTR _stage$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN1@set_d3d_te:

; 519  : 	}
; 520  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?set_d3d_texture_wrapping@@YGXHH@Z ENDP			; set_d3d_texture_wrapping
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_culling@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_culling@@YGXH@Z PROC				; set_d3d_culling, COMDAT

; 487  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 488  : 
; 489  : 	if ( flag )

  00009	83 7d 08 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 0b		 je	 SHORT $LN2@set_d3d_cu

; 490  : 	{
; 491  : 
; 492  : 		set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  0000f	6a 03		 push	 3
  00011	6a 16		 push	 22			; 00000016H
  00013	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 493  : 	}
; 494  : 	else

  00018	eb 09		 jmp	 SHORT $LN1@set_d3d_cu
$LN2@set_d3d_cu:

; 495  : 	{
; 496  : 
; 497  : 		set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_NONE );

  0001a	6a 01		 push	 1
  0001c	6a 16		 push	 22			; 00000016H
  0001e	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN1@set_d3d_cu:

; 498  : 	}
; 499  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?set_d3d_culling@@YGXH@Z ENDP				; set_d3d_culling
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_zbuffer_comparison@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_zbuffer_comparison@@YGXH@Z PROC		; set_d3d_zbuffer_comparison, COMDAT

; 468  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 469  : 
; 470  : 	if ( flag )

  00009	83 7d 08 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN2@set_d3d_zb

; 471  : 	{
; 472  : 
; 473  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  00014	50		 push	 eax
  00015	6a 17		 push	 23			; 00000017H
  00017	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 474  : 	}
; 475  : 	else

  0001c	eb 09		 jmp	 SHORT $LN1@set_d3d_zb
$LN2@set_d3d_zb:

; 476  : 	{
; 477  : 
; 478  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, D3DCMP_ALWAYS );

  0001e	6a 08		 push	 8
  00020	6a 17		 push	 23			; 00000017H
  00022	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN1@set_d3d_zb:

; 479  : 	}
; 480  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?set_d3d_zbuffer_comparison@@YGXH@Z ENDP		; set_d3d_zbuffer_comparison
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_in_order_rendering@@YGXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?set_d3d_in_order_rendering@@YGXH@Z PROC		; set_d3d_in_order_rendering, COMDAT

; 458  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 459  : 
; 460  : 	d3d_in_order_rendering = flag;

  00009	8b 45 08	 mov	 eax, DWORD PTR _flag$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?d3d_in_order_rendering@@3HA, eax ; d3d_in_order_rendering

; 461  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_d3d_in_order_rendering@@YGXH@Z ENDP		; set_d3d_in_order_rendering
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_transparency_off@@YGXXZ
_TEXT	SEGMENT
?set_d3d_transparency_off@@YGXXZ PROC			; set_d3d_transparency_off, COMDAT

; 448  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 449  : 
; 450  : 	set_d3d_alpha_fog_zbuffer ( FALSE, TRUE, TRUE, TRUE );

  00009	6a 01		 push	 1
  0000b	6a 01		 push	 1
  0000d	6a 01		 push	 1
  0000f	6a 00		 push	 0
  00011	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer

; 451  : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?set_d3d_transparency_off@@YGXXZ ENDP			; set_d3d_transparency_off
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_transparency_on@@YGXXZ
_TEXT	SEGMENT
?set_d3d_transparency_on@@YGXXZ PROC			; set_d3d_transparency_on, COMDAT

; 438  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 439  : 
; 440  : 	set_d3d_alpha_fog_zbuffer ( TRUE, FALSE, TRUE, FALSE );

  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	6a 00		 push	 0
  0000f	6a 01		 push	 1
  00011	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer

; 441  : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?set_d3d_transparency_on@@YGXXZ ENDP			; set_d3d_transparency_on
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z
_TEXT	SEGMENT
_alpha$ = 8						; size = 4
_fog$ = 12						; size = 4
_ztest$ = 16						; size = 4
_zwrite$ = 20						; size = 4
?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z PROC		; set_d3d_alpha_fog_zbuffer, COMDAT

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 358  : 
; 359  : 	if ( alpha )

  00009	83 7d 08 00	 cmp	 DWORD PTR _alpha$[ebp], 0
  0000d	74 3e		 je	 SHORT $LN2@set_d3d_al

; 360  : 	{
; 361  : 
; 362  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, TRUE );

  0000f	6a 01		 push	 1
  00011	6a 1b		 push	 27			; 0000001bH
  00013	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 363  : 	
; 364  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE );

  00018	6a 04		 push	 4
  0001a	6a 04		 push	 4
  0001c	6a 00		 push	 0
  0001e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 365  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE );

  00023	6a 02		 push	 2
  00025	6a 05		 push	 5
  00027	6a 00		 push	 0
  00029	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 366  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE );

  0002e	6a 00		 push	 0
  00030	6a 06		 push	 6
  00032	6a 00		 push	 0
  00034	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 367  : 
; 368  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  00039	6a 05		 push	 5
  0003b	6a 13		 push	 19			; 00000013H
  0003d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 369  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  00042	6a 06		 push	 6
  00044	6a 14		 push	 20			; 00000014H
  00046	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 370  : 	}
; 371  : 	else

  0004b	eb 14		 jmp	 SHORT $LN3@set_d3d_al
$LN2@set_d3d_al:

; 372  : 	{
; 373  : 
; 374  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  0004d	6a 00		 push	 0
  0004f	6a 1b		 push	 27			; 0000001bH
  00051	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 375  : 
; 376  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_DISABLE );

  00056	6a 01		 push	 1
  00058	6a 04		 push	 4
  0005a	6a 00		 push	 0
  0005c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN3@set_d3d_al:

; 377  : 	}
; 378  : 
; 379  : 	if ( fog )

  00061	83 7d 0c 00	 cmp	 DWORD PTR _fog$[ebp], 0
  00065	74 60		 je	 SHORT $LN4@set_d3d_al

; 380  : 	{
; 381  : 
; 382  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, TRUE );

  00067	6a 01		 push	 1
  00069	6a 1c		 push	 28			; 0000001cH
  0006b	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 383  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGTABLEMODE, D3DFOG_NONE );

  00070	6a 00		 push	 0
  00072	6a 23		 push	 35			; 00000023H
  00074	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 384  : 		set_d3d_float_state ( D3DRENDERSTATE_FOGTABLESTART, d3d_fog_start );

  00079	51		 push	 ecx
  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_start@@3MA
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	6a 24		 push	 36			; 00000024H
  00089	e8 00 00 00 00	 call	 ?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; set_d3d_float_state

; 385  : 		set_d3d_float_state ( D3DRENDERSTATE_FOGTABLEEND, d3d_fog_end );

  0008e	51		 push	 ecx
  0008f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_end@@3MA
  00097	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009c	6a 25		 push	 37			; 00000025H
  0009e	e8 00 00 00 00	 call	 ?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; set_d3d_float_state

; 386  : 		set_d3d_float_state ( D3DRENDERSTATE_FOGTABLEDENSITY, d3d_fog_density );

  000a3	51		 push	 ecx
  000a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_density@@3MA
  000ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b1	6a 26		 push	 38			; 00000026H
  000b3	e8 00 00 00 00	 call	 ?set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; set_d3d_float_state

; 387  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGCOLOR, d3d_fog_colour.colour );

  000b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A ; d3d_fog_colour
  000bd	50		 push	 eax
  000be	6a 22		 push	 34			; 00000022H
  000c0	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 388  : 	}
; 389  : 	else

  000c5	eb 09		 jmp	 SHORT $LN5@set_d3d_al
$LN4@set_d3d_al:

; 390  : 	{
; 391  : 
; 392  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, FALSE );

  000c7	6a 00		 push	 0
  000c9	6a 1c		 push	 28			; 0000001cH
  000cb	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN5@set_d3d_al:

; 393  : 	}
; 394  : 
; 395  : 	if ( ztest )

  000d0	83 7d 10 00	 cmp	 DWORD PTR _ztest$[ebp], 0
  000d4	74 18		 je	 SHORT $LN6@set_d3d_al

; 396  : 	{
; 397  : 
; 398  : 		set_d3d_int_state ( D3DRENDERSTATE_ZENABLE, TRUE);

  000d6	6a 01		 push	 1
  000d8	6a 07		 push	 7
  000da	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 399  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  000e4	50		 push	 eax
  000e5	6a 17		 push	 23			; 00000017H
  000e7	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 400  : 	}
; 401  : 	else

  000ec	eb 16		 jmp	 SHORT $LN7@set_d3d_al
$LN6@set_d3d_al:

; 402  : 	{
; 403  : 
; 404  : 		set_d3d_int_state ( D3DRENDERSTATE_ZENABLE, FALSE);

  000ee	6a 00		 push	 0
  000f0	6a 07		 push	 7
  000f2	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 405  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  000fc	50		 push	 eax
  000fd	6a 17		 push	 23			; 00000017H
  000ff	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN7@set_d3d_al:

; 406  : 	}
; 407  : 
; 408  : 	if ( zwrite )

  00104	83 7d 14 00	 cmp	 DWORD PTR _zwrite$[ebp], 0
  00108	74 0b		 je	 SHORT $LN8@set_d3d_al

; 409  : 	{
; 410  : 
; 411  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, TRUE );

  0010a	6a 01		 push	 1
  0010c	6a 0e		 push	 14			; 0000000eH
  0010e	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 412  : 	}
; 413  : 	else

  00113	eb 09		 jmp	 SHORT $LN9@set_d3d_al
$LN8@set_d3d_al:

; 414  : 	{
; 415  : 
; 416  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, FALSE );

  00115	6a 00		 push	 0
  00117	6a 0e		 push	 14			; 0000000eH
  00119	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN9@set_d3d_al:

; 417  : 	}
; 418  : 
; 419  : 	d3d_transparency_enabled = alpha;

  0011e	8b 45 08	 mov	 eax, DWORD PTR _alpha$[ebp]
  00121	a3 00 00 00 00	 mov	 DWORD PTR ?d3d_transparency_enabled@@3HA, eax ; d3d_transparency_enabled

; 420  : 
; 421  : 	if ( ( !alpha ) && ( ztest ) && ( zwrite ) )

  00126	83 7d 08 00	 cmp	 DWORD PTR _alpha$[ebp], 0
  0012a	75 15		 jne	 SHORT $LN10@set_d3d_al
  0012c	83 7d 10 00	 cmp	 DWORD PTR _ztest$[ebp], 0
  00130	74 0f		 je	 SHORT $LN10@set_d3d_al
  00132	83 7d 14 00	 cmp	 DWORD PTR _zwrite$[ebp], 0
  00136	74 09		 je	 SHORT $LN10@set_d3d_al

; 422  : 	{
; 423  : 
; 424  : 		set_d3d_texture_batching ( TRUE );

  00138	6a 01		 push	 1
  0013a	e8 00 00 00 00	 call	 ?set_d3d_texture_batching@@YGXH@Z ; set_d3d_texture_batching

; 425  : 	}
; 426  : 	else

  0013f	eb 07		 jmp	 SHORT $LN11@set_d3d_al
$LN10@set_d3d_al:

; 427  : 	{
; 428  : 
; 429  : 		set_d3d_texture_batching ( FALSE );

  00141	6a 00		 push	 0
  00143	e8 00 00 00 00	 call	 ?set_d3d_texture_batching@@YGXH@Z ; set_d3d_texture_batching
$LN11@set_d3d_al:

; 430  : 	}
; 431  : }

  00148	5f		 pop	 edi
  00149	5e		 pop	 esi
  0014a	5b		 pop	 ebx
  0014b	8b e5		 mov	 esp, ebp
  0014d	5d		 pop	 ebp
  0014e	c2 10 00	 ret	 16			; 00000010H
?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ENDP		; set_d3d_alpha_fog_zbuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dstate.c
;	COMDAT ?initialise_d3d_state@@YGXXZ
_TEXT	SEGMENT
_bias$1 = -8						; size = 4
_stage$ = -4						; size = 4
?initialise_d3d_state@@YGXXZ PROC			; initialise_d3d_state, COMDAT

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 246  : 	int
; 247  : 		stage;
; 248  : 
; 249  : #if DEBUG_REPORT_TRIANGLES
; 250  : 
; 251  : 	debug_colour_watch ( DEBUG_COLOUR_RED, "Number of d3d triangles: %d", MT_INT, &total_number_of_d3d_triangles );

  00009	68 00 00 00 00	 push	 OFFSET ?total_number_of_d3d_triangles@@3HA ; total_number_of_d3d_triangles
  0000e	6a 01		 push	 1
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@FCKIEJFO@Number?5of?5d3d?5triangles?3?5?$CFd@
  00015	6a 04		 push	 4
  00017	e8 00 00 00 00	 call	 ?debug_colour_watch@@YGXW4DEBUG_COLOURS@@PBDW4mt_type@@PAX@Z ; debug_colour_watch

; 252  : 
; 253  : 	debug_colour_watch ( DEBUG_COLOUR_RED, "Number of d3d flushes: %d", MT_INT, &total_number_of_d3d_flushes );

  0001c	68 00 00 00 00	 push	 OFFSET ?total_number_of_d3d_flushes@@3HA ; total_number_of_d3d_flushes
  00021	6a 01		 push	 1
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LKODGDJJ@Number?5of?5d3d?5flushes?3?5?$CFd@
  00028	6a 04		 push	 4
  0002a	e8 00 00 00 00	 call	 ?debug_colour_watch@@YGXW4DEBUG_COLOURS@@PBDW4mt_type@@PAX@Z ; debug_colour_watch

; 254  : 
; 255  : #endif
; 256  : 
; 257  : 	//
; 258  : 	// Set the default state of d3d
; 259  : 	//
; 260  : 
; 261  : 	if ( d3d_initialised /*d3d_data.device*/ )

  0002f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_initialised@@3HA, 0 ; d3d_initialised
  00036	0f 84 00 03 00
	00		 je	 $LN5@initialise

; 262  : 	{
; 263  : 		f3d_scene_begin ();

  0003c	e8 00 00 00 00	 call	 ?f3d_scene_begin@@YGHXZ	; f3d_scene_begin

; 264  : 	
; 265  : 		force_set_d3d_int_state ( D3DRENDERSTATE_LASTPIXEL, TRUE );

  00041	6a 01		 push	 1
  00043	6a 10		 push	 16			; 00000010H
  00045	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 266  : 		force_set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_FLAT );

  0004a	6a 01		 push	 1
  0004c	6a 09		 push	 9
  0004e	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 267  : 		force_set_d3d_int_state ( D3DRENDERSTATE_FILLMODE, D3DFILL_SOLID );

  00053	6a 03		 push	 3
  00055	6a 08		 push	 8
  00057	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 268  : 		force_set_d3d_int_state ( D3DRENDERSTATE_DITHERENABLE, TRUE );

  0005c	6a 01		 push	 1
  0005e	6a 1a		 push	 26			; 0000001aH
  00060	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 269  : 		force_set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  00065	6a 00		 push	 0
  00067	6a 1d		 push	 29			; 0000001dH
  00069	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 270  : 		force_set_d3d_int_state ( D3DRENDERSTATE_ANTIALIAS, D3DANTIALIAS_NONE );

  0006e	6a 00		 push	 0
  00070	6a 02		 push	 2
  00072	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 271  : 		force_set_d3d_int_state ( D3DRENDERSTATE_BLENDENABLE, FALSE );

  00077	6a 00		 push	 0
  00079	6a 1b		 push	 27			; 0000001bH
  0007b	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 272  : 		force_set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  00080	6a 00		 push	 0
  00082	6a 1b		 push	 27			; 0000001bH
  00084	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 273  : 		force_set_d3d_int_state ( D3DRENDERSTATE_COLORKEYENABLE, FALSE );

  00089	6a 00		 push	 0
  0008b	6a 29		 push	 41			; 00000029H
  0008d	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 274  : 		force_set_d3d_int_state ( D3DRENDERSTATE_ALPHATESTENABLE, FALSE );

  00092	6a 00		 push	 0
  00094	6a 0f		 push	 15			; 0000000fH
  00096	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 275  : 		force_set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  0009b	6a 05		 push	 5
  0009d	6a 13		 push	 19			; 00000013H
  0009f	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 276  : 		force_set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  000a4	6a 06		 push	 6
  000a6	6a 14		 push	 20			; 00000014H
  000a8	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 277  : 		force_set_d3d_int_state ( D3DRENDERSTATE_TEXTUREPERSPECTIVE, TRUE );

  000ad	6a 01		 push	 1
  000af	6a 04		 push	 4
  000b1	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 278  : 		force_set_d3d_int_state ( D3DRENDERSTATE_STIPPLEDALPHA, FALSE );

  000b6	6a 00		 push	 0
  000b8	6a 21		 push	 33			; 00000021H
  000ba	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 279  : 		force_set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  000bf	6a 03		 push	 3
  000c1	6a 16		 push	 22			; 00000016H
  000c3	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 280  : 		force_set_d3d_int_state ( D3DRENDERSTATE_ZVISIBLE, FALSE );

  000c8	6a 00		 push	 0
  000ca	6a 1e		 push	 30			; 0000001eH
  000cc	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 281  : 		force_set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, FALSE );

  000d1	6a 00		 push	 0
  000d3	6a 1c		 push	 28			; 0000001cH
  000d5	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 282  : 		force_set_d3d_int_state ( D3DRENDERSTATE_FOGTABLEMODE, D3DFOG_NONE );

  000da	6a 00		 push	 0
  000dc	6a 23		 push	 35			; 00000023H
  000de	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 283  : 		force_set_d3d_int_state ( D3DRENDERSTATE_FOGCOLOR, RGB_MAKE ( 255, 255, 255 ) );

  000e3	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  000e8	6a 22		 push	 34			; 00000022H
  000ea	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 284  : 		force_set_d3d_float_state ( D3DRENDERSTATE_FOGTABLESTART, 0.0 );

  000ef	51		 push	 ecx
  000f0	0f 57 c0	 xorps	 xmm0, xmm0
  000f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f8	6a 24		 push	 36			; 00000024H
  000fa	e8 00 00 00 00	 call	 ?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; force_set_d3d_float_state

; 285  : 		force_set_d3d_float_state ( D3DRENDERSTATE_FOGTABLEDENSITY, 0.0 );

  000ff	51		 push	 ecx
  00100	0f 57 c0	 xorps	 xmm0, xmm0
  00103	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00108	6a 26		 push	 38			; 00000026H
  0010a	e8 00 00 00 00	 call	 ?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; force_set_d3d_float_state

; 286  : 		force_set_d3d_float_state ( D3DRENDERSTATE_FOGTABLEEND, 0.0 );

  0010f	51		 push	 ecx
  00110	0f 57 c0	 xorps	 xmm0, xmm0
  00113	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00118	6a 25		 push	 37			; 00000025H
  0011a	e8 00 00 00 00	 call	 ?force_set_d3d_float_state@@YGXW4_D3DRENDERSTATETYPE@@M@Z ; force_set_d3d_float_state

; 287  : 	
; 288  : 		if ( TRUE /*ddraw.lpZBuffer*/ )

  0011f	b8 01 00 00 00	 mov	 eax, 1
  00124	85 c0		 test	 eax, eax
  00126	74 21		 je	 SHORT $LN6@initialise

; 289  : 		{
; 290  : 	
; 291  : 			force_set_d3d_int_state ( D3DRENDERSTATE_ZENABLE, TRUE );

  00128	6a 01		 push	 1
  0012a	6a 07		 push	 7
  0012c	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 292  : 			force_set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, TRUE );

  00131	6a 01		 push	 1
  00133	6a 0e		 push	 14			; 0000000eH
  00135	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 293  : 			force_set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  0013f	50		 push	 eax
  00140	6a 17		 push	 23			; 00000017H
  00142	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 294  : 		}
; 295  : 		else

  00147	eb 1f		 jmp	 SHORT $LN7@initialise
$LN6@initialise:

; 296  : 		{
; 297  : 	
; 298  : 			force_set_d3d_int_state ( D3DRENDERSTATE_ZENABLE, FALSE);

  00149	6a 00		 push	 0
  0014b	6a 07		 push	 7
  0014d	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 299  : 			force_set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, FALSE);

  00152	6a 00		 push	 0
  00154	6a 0e		 push	 14			; 0000000eH
  00156	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 300  : 			force_set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  00160	50		 push	 eax
  00161	6a 17		 push	 23			; 00000017H
  00163	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state
$LN7@initialise:

; 301  : 		}
; 302  : 	
; 303  : 		for ( stage = 0; stage < MAX_TEXTURE_STAGES; stage++ )

  00168	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _stage$[ebp], 0
  0016f	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00171	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00174	83 c0 01	 add	 eax, 1
  00177	89 45 fc	 mov	 DWORD PTR _stage$[ebp], eax
$LN4@initialise:
  0017a	83 7d fc 08	 cmp	 DWORD PTR _stage$[ebp], 8
  0017e	0f 8d 47 01 00
	00		 jge	 $LN3@initialise

; 304  : 		{
; 305  : 	
; 306  : 			float
; 307  : 				bias;
; 308  : 	
; 309  : 			bias = 0.0;

  00184	0f 57 c0	 xorps	 xmm0, xmm0
  00187	f3 0f 11 45 f8	 movss	 DWORD PTR _bias$1[ebp], xmm0

; 310  : 	
; 311  : 			force_set_d3d_texture ( stage, NULL );

  0018c	6a 00		 push	 0
  0018e	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 ?force_set_d3d_texture@@YGXHPAUSCREEN@@@Z ; force_set_d3d_texture

; 312  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_COLOROP, D3DTOP_DISABLE );

  00197	6a 01		 push	 1
  00199	6a 01		 push	 1
  0019b	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  0019e	50		 push	 eax
  0019f	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 313  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_COLORARG1, D3DTA_TEXTURE );

  001a4	6a 02		 push	 2
  001a6	6a 02		 push	 2
  001a8	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001ab	50		 push	 eax
  001ac	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 314  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_COLORARG2, D3DTA_DIFFUSE );

  001b1	6a 00		 push	 0
  001b3	6a 03		 push	 3
  001b5	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 315  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_ALPHAOP, D3DTOP_DISABLE );

  001be	6a 01		 push	 1
  001c0	6a 04		 push	 4
  001c2	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001c5	50		 push	 eax
  001c6	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 316  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_ALPHAARG1, D3DTA_TEXTURE );

  001cb	6a 02		 push	 2
  001cd	6a 05		 push	 5
  001cf	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 317  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE );

  001d8	6a 00		 push	 0
  001da	6a 06		 push	 6
  001dc	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 318  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BUMPENVMAT00, 0 );

  001e5	6a 00		 push	 0
  001e7	6a 07		 push	 7
  001e9	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 319  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BUMPENVMAT01, 0 );

  001f2	6a 00		 push	 0
  001f4	6a 08		 push	 8
  001f6	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 320  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BUMPENVMAT10, 0 );

  001ff	6a 00		 push	 0
  00201	6a 09		 push	 9
  00203	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 321  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BUMPENVMAT11, 0 );

  0020c	6a 00		 push	 0
  0020e	6a 0a		 push	 10			; 0000000aH
  00210	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 322  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_TEXCOORDINDEX, stage );

  00219	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  0021c	50		 push	 eax
  0021d	6a 0b		 push	 11			; 0000000bH
  0021f	8b 4d fc	 mov	 ecx, DWORD PTR _stage$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 323  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  00228	6a 01		 push	 1
  0022a	6a 0c		 push	 12			; 0000000cH
  0022c	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  0022f	50		 push	 eax
  00230	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 324  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  00235	6a 01		 push	 1
  00237	6a 0d		 push	 13			; 0000000dH
  00239	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  0023c	50		 push	 eax
  0023d	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 325  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  00242	6a 01		 push	 1
  00244	6a 0e		 push	 14			; 0000000eH
  00246	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00249	50		 push	 eax
  0024a	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 326  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BORDERCOLOR, 0 );

  0024f	6a 00		 push	 0
  00251	6a 0f		 push	 15			; 0000000fH
  00253	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 327  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_MAGFILTER, D3DTFG_POINT );

  0025c	6a 01		 push	 1
  0025e	6a 10		 push	 16			; 00000010H
  00260	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00263	50		 push	 eax
  00264	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 328  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_MINFILTER, D3DTFN_POINT );

  00269	6a 01		 push	 1
  0026b	6a 11		 push	 17			; 00000011H
  0026d	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 329  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_MIPFILTER, D3DTFP_NONE );

  00276	6a 01		 push	 1
  00278	6a 12		 push	 18			; 00000012H
  0027a	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  0027d	50		 push	 eax
  0027e	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 330  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_MIPMAPLODBIAS, *( ( int * ) &bias ) );

  00283	8b 45 f8	 mov	 eax, DWORD PTR _bias$1[ebp]
  00286	50		 push	 eax
  00287	6a 13		 push	 19			; 00000013H
  00289	8b 4d fc	 mov	 ecx, DWORD PTR _stage$[ebp]
  0028c	51		 push	 ecx
  0028d	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 331  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_MAXMIPLEVEL, 0 );

  00292	6a 00		 push	 0
  00294	6a 14		 push	 20			; 00000014H
  00296	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 332  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_MAXANISOTROPY, 1 );

  0029f	6a 01		 push	 1
  002a1	6a 15		 push	 21			; 00000015H
  002a3	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 333  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BUMPENVLSCALE, 0 );

  002ac	6a 00		 push	 0
  002ae	6a 16		 push	 22			; 00000016H
  002b0	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  002b3	50		 push	 eax
  002b4	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 334  : 			force_set_d3d_texture_stage_state ( stage, D3DTSS_BUMPENVLOFFSET, 0 );

  002b9	6a 00		 push	 0
  002bb	6a 17		 push	 23			; 00000017H
  002bd	8b 45 fc	 mov	 eax, DWORD PTR _stage$[ebp]
  002c0	50		 push	 eax
  002c1	e8 00 00 00 00	 call	 ?force_set_d3d_texture_stage_state@@YGXHHH@Z ; force_set_d3d_texture_stage_state

; 335  : 		}

  002c6	e9 a6 fe ff ff	 jmp	 $LN2@initialise
$LN3@initialise:

; 336  : 	
; 337  : 		force_set_d3d_int_state ( D3DRENDERSTATE_CLIPPING, FALSE );

  002cb	6a 00		 push	 0
  002cd	68 88 00 00 00	 push	 136			; 00000088H
  002d2	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 338  : 		force_set_d3d_int_state ( D3DRENDERSTATE_LIGHTING, FALSE );

  002d7	6a 00		 push	 0
  002d9	68 89 00 00 00	 push	 137			; 00000089H
  002de	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 339  : 		force_set_d3d_int_state ( D3DRENDERSTATE_EXTENTS, FALSE );

  002e3	6a 00		 push	 0
  002e5	68 8a 00 00 00	 push	 138			; 0000008aH
  002ea	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 340  : 		force_set_d3d_int_state ( D3DRENDERSTATE_NORMALIZENORMALS, TRUE );

  002ef	6a 01		 push	 1
  002f1	68 8f 00 00 00	 push	 143			; 0000008fH
  002f6	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 341  : 		force_set_d3d_int_state ( D3DRENDERSTATE_LOCALVIEWER, FALSE );

  002fb	6a 00		 push	 0
  002fd	68 8e 00 00 00	 push	 142			; 0000008eH
  00302	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 342  : 	
; 343  : 		force_set_d3d_int_state ( D3DRENDERSTATE_DIFFUSEMATERIALSOURCE, D3DMCS_MATERIAL );

  00307	6a 00		 push	 0
  00309	68 91 00 00 00	 push	 145			; 00000091H
  0030e	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 344  : 		force_set_d3d_int_state ( D3DRENDERSTATE_AMBIENTMATERIALSOURCE, D3DMCS_MATERIAL );

  00313	6a 00		 push	 0
  00315	68 93 00 00 00	 push	 147			; 00000093H
  0031a	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 345  : 		force_set_d3d_int_state ( D3DRENDERSTATE_SPECULARMATERIALSOURCE, D3DMCS_MATERIAL );

  0031f	6a 00		 push	 0
  00321	68 92 00 00 00	 push	 146			; 00000092H
  00326	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 346  : 		force_set_d3d_int_state ( D3DRENDERSTATE_EMISSIVEMATERIALSOURCE, D3DMCS_MATERIAL );

  0032b	6a 00		 push	 0
  0032d	68 94 00 00 00	 push	 148			; 00000094H
  00332	e8 00 00 00 00	 call	 ?force_set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; force_set_d3d_int_state

; 347  : 
; 348  : 		f3d_scene_end();

  00337	e8 00 00 00 00	 call	 ?f3d_scene_end@@YGHXZ	; f3d_scene_end
$LN5@initialise:

; 349  : 	}
; 350  : }

  0033c	5f		 pop	 edi
  0033d	5e		 pop	 esi
  0033e	5b		 pop	 ebx
  0033f	8b e5		 mov	 esp, ebp
  00341	5d		 pop	 ebp
  00342	c3		 ret	 0
?initialise_d3d_state@@YGXXZ ENDP			; initialise_d3d_state
_TEXT	ENDS
END
