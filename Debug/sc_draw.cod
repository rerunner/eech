; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\screen\sc_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_screen_ui_object_draw_functions@@YGXH@Z ; overload_screen_ui_object_draw_functions
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f800000
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@4000000000000000
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?clear_screen@@YGXXZ:PROC			; clear_screen
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?get_ui_screen_stack_head@@YGPAUUI_OBJECT@@XZ:PROC ; get_ui_screen_stack_head
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z:PROC	; ui_draw_area
EXTRN	?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z:PROC ; ui_draw_texture_graphic
EXTRN	?application_video_width@@3HA:DWORD		; application_video_width
EXTRN	?application_video_height@@3HA:DWORD		; application_video_height
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_set_ui_object_redraw_all@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw_all
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_colour
EXTRN	?fn_call_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_draw_function
EXTRN	?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic
EXTRN	?fn_get_ui_object_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_texture_graphic
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	?fn_get_ui_object_graphic_type@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic_type
EXTRN	__fltused:DWORD
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\screen\sc_draw.c
;	COMDAT ?draw_screen_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv404 = -132						; size = 4
tv397 = -132						; size = 4
tv131 = -132						; size = 4
$T1 = -128						; size = 4
_diff$2 = -60						; size = 4
_text_colour$3 = -56					; size = 4
_colour$4 = -52						; size = 4
_y_size$5 = -48						; size = 4
_x_size$6 = -44						; size = 4
_graphic$7 = -40					; size = 4
_y_size$8 = -36						; size = 4
_x_size$9 = -32						; size = 4
_graphic$10 = -28					; size = 4
_old_active_screen$ = -24				; size = 4
_area$ = -20						; size = 4
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_screen_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; draw_screen_ui_object, COMDAT

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 76   : 
; 77   : 	float
; 78   : 		x1,
; 79   : 		y1,
; 80   : 		x2,
; 81   : 		y2;
; 82   : 
; 83   : 	area_ui_object
; 84   : 		*area;
; 85   : 
; 86   : 	struct SCREEN
; 87   : 		*old_active_screen;
; 88   : 
; 89   : 	if (get_ui_object_redraw (obj))

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	85 c0		 test	 eax, eax
  00020	0f 84 c0 04 00
	00		 je	 $LN4@draw_scree

; 90   : 	{
; 91   : 
; 92   : 		//if (!get_ui_object_draw_function (obj))
; 93   : 		{
; 94   : 	
; 95   : 			if (get_ui_object_redraw (obj) == MAX_UI_REDRAW_NUMBER)

  00026	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00036	ff d0		 call	 eax
  00038	83 f8 02	 cmp	 eax, 2
  0003b	75 18		 jne	 SHORT $LN5@draw_scree

; 96   : 			{
; 97   : 	
; 98   : 				set_ui_object_redraw_all (get_ui_screen_stack_head (), TRUE);

  0003d	6a 01		 push	 1
  0003f	e8 00 00 00 00	 call	 ?get_ui_screen_stack_head@@YGPAUUI_OBJECT@@XZ ; get_ui_screen_stack_head
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?get_ui_screen_stack_head@@YGPAUUI_OBJECT@@XZ ; get_ui_screen_stack_head
  0004a	8b 00		 mov	 eax, DWORD PTR [eax]
  0004c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_redraw_all@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00053	ff d1		 call	 ecx
$LN5@draw_scree:

; 99   : 			}
; 100  : 	
; 101  : 			area = (area_ui_object *) obj->data;

  00055	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00058	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005b	89 4d ec	 mov	 DWORD PTR _area$[ebp], ecx

; 102  : 	
; 103  : 			//debug_log ("SC_DRAW: drawing screen %f, %f  %f, %f", area->x, area->y, area->x_size, area->y_size);
; 104  : 		
; 105  : 			x1 = get_ui_object_x (obj);

  0005e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0006e	ff d0		 call	 eax
  00070	d9 5d fc	 fstp	 DWORD PTR _x1$[ebp]

; 106  : 			
; 107  : 			y1 = get_ui_object_y (obj);

  00073	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00076	50		 push	 eax
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00083	ff d0		 call	 eax
  00085	d9 5d f8	 fstp	 DWORD PTR _y1$[ebp]

; 108  : 	
; 109  : 			switch (get_ui_object_graphic_type (obj))

  00088	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic_type@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00098	ff d0		 call	 eax
  0009a	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv131[ebp], eax
  000a0	83 bd 7c ff ff
	ff 01		 cmp	 DWORD PTR tv131[ebp], 1
  000a7	74 12		 je	 SHORT $LN6@draw_scree
  000a9	83 bd 7c ff ff
	ff 05		 cmp	 DWORD PTR tv131[ebp], 5
  000b0	0f 84 42 01 00
	00		 je	 $LN9@draw_scree
  000b6	e9 12 04 00 00	 jmp	 $LN14@draw_scree
$LN6@draw_scree:

; 110  : 			{
; 111  : 
; 112  : 				case UI_OBJECT_GRAPHIC:
; 113  : 				{
; 114  : 		
; 115  : 					unsigned short int
; 116  : 						*graphic;
; 117  : 				
; 118  : 					int
; 119  : 						x_size,
; 120  : 						y_size;
; 121  : 
; 122  : 					graphic = get_ui_object_graphic (obj);

  000bb	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000be	50		 push	 eax
  000bf	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000c2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  000cb	ff d0		 call	 eax
  000cd	89 45 e4	 mov	 DWORD PTR _graphic$10[ebp], eax

; 123  : 			
; 124  : 					old_active_screen = get_active_screen ();

  000d0	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  000d5	89 45 e8	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 125  : 			
; 126  : 					if (get_ui_object_active_screen (obj))

  000d8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000df	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000e8	ff d0		 call	 eax
  000ea	85 c0		 test	 eax, eax
  000ec	74 1a		 je	 SHORT $LN7@draw_scree

; 127  : 					{
; 128  : 				
; 129  : 						set_active_screen (get_ui_object_active_screen (obj));

  000ee	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000f1	50		 push	 eax
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000fe	ff d0		 call	 eax
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 130  : 					}
; 131  : 					else

  00106	eb 0b		 jmp	 SHORT $LN8@draw_scree
$LN7@draw_scree:

; 132  : 					{
; 133  : 			
; 134  : 						set_active_screen (video_screen);

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN8@draw_scree:

; 135  : 					}
; 136  : 			
; 137  : 					// debug for userint2
; 138  : 					set_active_screen (video_screen);

  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 139  : 					// debug
; 140  : 			
; 141  : 					clear_screen ();

  0011e	e8 00 00 00 00	 call	 ?clear_screen@@YGXXZ	; clear_screen

; 142  : 
; 143  : 					x_size = get_ui_object_x_size (obj) - 1;

  00123	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00126	50		 push	 eax
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0012a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00133	ff d0		 call	 eax
  00135	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv397[ebp]
  0013b	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv397[ebp]
  00143	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0014b	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0014f	89 4d e0	 mov	 DWORD PTR _x_size$9[ebp], ecx

; 144  : 			
; 145  : 					y_size = get_ui_object_y_size (obj) - 1;

  00152	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00159	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00162	ff d0		 call	 eax
  00164	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv404[ebp]
  0016a	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv404[ebp]
  00172	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0017a	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0017e	89 4d dc	 mov	 DWORD PTR _y_size$8[ebp], ecx

; 146  : 				
; 147  : 					x2 = x1 + x_size;

  00181	f3 0f 2a 45 e0	 cvtsi2ss xmm0, DWORD PTR _x_size$9[ebp]
  00186	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x1$[ebp]
  0018b	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 148  : 				
; 149  : 					y2 = y1 + y_size;

  00190	f3 0f 2a 45 dc	 cvtsi2ss xmm0, DWORD PTR _y_size$8[ebp]
  00195	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y1$[ebp]
  0019a	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 150  : 
; 151  : 			/*
; 152  : 					if (lock_screen (active_screen))
; 153  : 					{
; 154  : 					
; 155  : 						set_viewport (x1, y1, x2, y2);
; 156  : 					
; 157  : 						ui_set_origin (x1, y1);
; 158  : 				
; 159  : 						if (!get_ui_object_clear (obj))
; 160  : 						{
; 161  : 						
; 162  : 							if (graphic)
; 163  : 							{
; 164  : 					
; 165  : 								ui_draw_graphic (x1, y1, x2, y2, graphic);
; 166  : 							}
; 167  : 							else
; 168  : 							{
; 169  : 					
; 170  : 								ui_draw_area (0, 0, x2 - x1, y2 - y1, obj);
; 171  : 							}
; 172  : 						}
; 173  : 				
; 174  : 						set_viewport (x1 + 1, y1 + 1, x2 - 1, y2 - 1);
; 175  : 					
; 176  : 						ui_set_origin (x1 + 1, y1 + 1);
; 177  : 					
; 178  : 						unlock_screen (active_screen);
; 179  : 					}
; 180  : 			*/
; 181  : 					set_active_screen (old_active_screen);

  0019f	8b 45 e8	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 182  : 			
; 183  : 					set_ui_repaint_area (x1, y1, x2, y2);

  001a8	f3 0f 2c 45 f0	 cvttss2si eax, DWORD PTR _y2$[ebp]
  001ad	50		 push	 eax
  001ae	f3 0f 2c 4d f4	 cvttss2si ecx, DWORD PTR _x2$[ebp]
  001b3	51		 push	 ecx
  001b4	f3 0f 2c 55 f8	 cvttss2si edx, DWORD PTR _y1$[ebp]
  001b9	52		 push	 edx
  001ba	f3 0f 2c 45 fc	 cvttss2si eax, DWORD PTR _x1$[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area

; 184  : 			
; 185  : 					area->redraw --;

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _area$[ebp]
  001c8	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  001cb	c1 e9 07	 shr	 ecx, 7
  001ce	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  001d4	83 e9 01	 sub	 ecx, 1
  001d7	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  001dd	c1 e1 07	 shl	 ecx, 7
  001e0	8b 55 ec	 mov	 edx, DWORD PTR _area$[ebp]
  001e3	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  001e6	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  001eb	0b c1		 or	 eax, ecx
  001ed	8b 4d ec	 mov	 ecx, DWORD PTR _area$[ebp]
  001f0	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 186  : 
; 187  : 					break;

  001f3	e9 da 02 00 00	 jmp	 $LN2@draw_scree
$LN9@draw_scree:

; 188  : 				}
; 189  : 
; 190  : 				case UI_OBJECT_TEXTURE_GRAPHIC:
; 191  : 				{
; 192  : 		
; 193  : 					texture_graphic
; 194  : 						*graphic;
; 195  : 				
; 196  : 					float
; 197  : 						x_size,
; 198  : 						y_size;
; 199  : 
; 200  : 					graphic = get_ui_object_texture_graphic (obj);

  001f8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001fb	50		 push	 eax
  001fc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001ff	8b 11		 mov	 edx, DWORD PTR [ecx]
  00201	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  00208	ff d0		 call	 eax
  0020a	89 45 d8	 mov	 DWORD PTR _graphic$7[ebp], eax

; 201  : 			
; 202  : 					x_size = get_ui_object_x_size (obj);

  0020d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00210	50		 push	 eax
  00211	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00214	8b 11		 mov	 edx, DWORD PTR [ecx]
  00216	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0021d	ff d0		 call	 eax
  0021f	d9 5d d4	 fstp	 DWORD PTR _x_size$6[ebp]

; 203  : 			
; 204  : 					y_size = get_ui_object_y_size (obj);

  00222	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00225	50		 push	 eax
  00226	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00229	8b 11		 mov	 edx, DWORD PTR [ecx]
  0022b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00232	ff d0		 call	 eax
  00234	d9 5d d0	 fstp	 DWORD PTR _y_size$5[ebp]

; 205  : 
; 206  : 					x_size -= 0.001;

  00237	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _x_size$6[ebp]
  0023c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00244	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00248	f3 0f 11 45 d4	 movss	 DWORD PTR _x_size$6[ebp], xmm0

; 207  : 
; 208  : 					y_size -= 0.001;

  0024d	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _y_size$5[ebp]
  00252	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0025a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0025e	f3 0f 11 45 d0	 movss	 DWORD PTR _y_size$5[ebp], xmm0

; 209  : 				
; 210  : 					x2 = x1 + x_size;

  00263	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00268	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _x_size$6[ebp]
  0026d	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 211  : 				
; 212  : 					y2 = y1 + y_size;

  00272	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00277	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _y_size$5[ebp]
  0027c	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 213  : 
; 214  : 					set_viewport (x1, y1, x2, y2);

  00281	51		 push	 ecx
  00282	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00287	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028c	51		 push	 ecx
  0028d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00292	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00297	51		 push	 ecx
  00298	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0029d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a2	51		 push	 ecx
  002a3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  002a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ad	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 215  : 
; 216  : 					ui_set_origin (x1, y1);

  002b2	51		 push	 ecx
  002b3	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  002b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bd	51		 push	 ecx
  002be	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 217  : 			
; 218  : 					if (!get_ui_object_clear (obj))

  002cd	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002d0	50		 push	 eax
  002d1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  002dd	ff d0		 call	 eax
  002df	85 c0		 test	 eax, eax
  002e1	0f 85 1d 01 00
	00		 jne	 $LN12@draw_scree

; 219  : 					{
; 220  : 					
; 221  : 						if (graphic)

  002e7	83 7d d8 00	 cmp	 DWORD PTR _graphic$7[ebp], 0
  002eb	0f 84 d8 00 00
	00		 je	 $LN11@draw_scree

; 222  : 						{
; 223  : 
; 224  : 							rgb_colour
; 225  : 								colour;
; 226  : 
; 227  : 							real_colour
; 228  : 								text_colour;
; 229  : 
; 230  : 							colour = get_ui_object_colour ( obj );

  002f1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002f4	50		 push	 eax
  002f5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  002fa	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[edx*4]
  00301	ff d0		 call	 eax
  00303	89 45 80	 mov	 DWORD PTR $T1[ebp], eax
  00306	8b 4d 80	 mov	 ecx, DWORD PTR $T1[ebp]
  00309	89 4d cc	 mov	 DWORD PTR _colour$4[ebp], ecx

; 231  : 
; 232  : 							text_colour.red = colour.r;

  0030c	8a 45 ce	 mov	 al, BYTE PTR _colour$4[ebp+2]
  0030f	88 45 ca	 mov	 BYTE PTR _text_colour$3[ebp+2], al

; 233  : 							text_colour.green = colour.g;

  00312	8a 45 cd	 mov	 al, BYTE PTR _colour$4[ebp+1]
  00315	88 45 c9	 mov	 BYTE PTR _text_colour$3[ebp+1], al

; 234  : 							text_colour.blue = colour.b;

  00318	8a 45 cc	 mov	 al, BYTE PTR _colour$4[ebp]
  0031b	88 45 c8	 mov	 BYTE PTR _text_colour$3[ebp], al

; 235  : 							text_colour.alpha = colour.a;

  0031e	8a 45 cf	 mov	 al, BYTE PTR _colour$4[ebp+3]
  00321	88 45 cb	 mov	 BYTE PTR _text_colour$3[ebp+3], al

; 236  : 
; 237  : 							if (4 * application_video_height < 3 * application_video_width)

  00324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?application_video_height@@3HA ; application_video_height
  00329	c1 e0 02	 shl	 eax, 2
  0032c	6b 0d 00 00 00
	00 03		 imul	 ecx, DWORD PTR ?application_video_width@@3HA, 3 ; application_video_width
  00333	3b c1		 cmp	 eax, ecx
  00335	7d 57		 jge	 SHORT $LN13@draw_scree

; 238  : 							{
; 239  : 								float
; 240  : 									diff = ((x2 - x1) * 0.75 - (y2 - y1)) / 2;

  00337	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0033c	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  00341	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00345	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe8000000000000
  0034d	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _y2$[ebp]
  00352	f3 0f 5c 4d f8	 subss	 xmm1, DWORD PTR _y1$[ebp]
  00357	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0035b	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0035f	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00367	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036b	f3 0f 11 45 c4	 movss	 DWORD PTR _diff$2[ebp], xmm0

; 241  : 								y1 -= diff;

  00370	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00375	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _diff$2[ebp]
  0037a	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 242  : 								y2 += diff;

  0037f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00384	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _diff$2[ebp]
  00389	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0
$LN13@draw_scree:

; 243  : 							}
; 244  : 
; 245  : 							ui_draw_texture_graphic (x1, y1, x2, y2, graphic, text_colour);

  0038e	8b 45 c8	 mov	 eax, DWORD PTR _text_colour$3[ebp]
  00391	50		 push	 eax
  00392	8b 4d d8	 mov	 ecx, DWORD PTR _graphic$7[ebp]
  00395	51		 push	 ecx
  00396	51		 push	 ecx
  00397	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0039c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a1	51		 push	 ecx
  003a2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	51		 push	 ecx
  003ad	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  003b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b7	51		 push	 ecx
  003b8	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  003bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c2	e8 00 00 00 00	 call	 ?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z ; ui_draw_texture_graphic

; 246  : 						}
; 247  : 						else

  003c7	eb 3b		 jmp	 SHORT $LN12@draw_scree
$LN11@draw_scree:

; 248  : 						{
; 249  : 				
; 250  : 							ui_draw_area (0, 0, x2 - x1, y2 - y1, obj);

  003c9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003cc	50		 push	 eax
  003cd	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  003d2	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  003d7	51		 push	 ecx
  003d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dd	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  003e2	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  003e7	51		 push	 ecx
  003e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ed	51		 push	 ecx
  003ee	0f 57 c0	 xorps	 xmm0, xmm0
  003f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f6	51		 push	 ecx
  003f7	0f 57 c0	 xorps	 xmm0, xmm0
  003fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ff	e8 00 00 00 00	 call	 ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ; ui_draw_area
$LN12@draw_scree:

; 251  : 						}
; 252  : 					}
; 253  : 			
; 254  : 					set_viewport (x1 + 1, y1 + 1, x2 - 1, y2 - 1);

  00404	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00409	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00411	51		 push	 ecx
  00412	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00417	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0041c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00424	51		 push	 ecx
  00425	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0042f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00437	51		 push	 ecx
  00438	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00442	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0044a	51		 push	 ecx
  0044b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00450	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 255  : 				
; 256  : 					ui_set_origin (x1 + 1, y1 + 1);

  00455	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0045a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00462	51		 push	 ecx
  00463	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00468	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0046d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00475	51		 push	 ecx
  00476	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047b	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 257  : 				
; 258  : 					set_ui_repaint_area (x1, y1, x2, y2);

  00480	f3 0f 2c 45 f0	 cvttss2si eax, DWORD PTR _y2$[ebp]
  00485	50		 push	 eax
  00486	f3 0f 2c 4d f4	 cvttss2si ecx, DWORD PTR _x2$[ebp]
  0048b	51		 push	 ecx
  0048c	f3 0f 2c 55 f8	 cvttss2si edx, DWORD PTR _y1$[ebp]
  00491	52		 push	 edx
  00492	f3 0f 2c 45 fc	 cvttss2si eax, DWORD PTR _x1$[ebp]
  00497	50		 push	 eax
  00498	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area

; 259  : 			
; 260  : 					area->redraw --;

  0049d	8b 45 ec	 mov	 eax, DWORD PTR _area$[ebp]
  004a0	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  004a3	c1 e9 07	 shr	 ecx, 7
  004a6	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  004ac	83 e9 01	 sub	 ecx, 1
  004af	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  004b5	c1 e1 07	 shl	 ecx, 7
  004b8	8b 55 ec	 mov	 edx, DWORD PTR _area$[ebp]
  004bb	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  004be	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  004c3	0b c1		 or	 eax, ecx
  004c5	8b 4d ec	 mov	 ecx, DWORD PTR _area$[ebp]
  004c8	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 261  : 
; 262  : 					break;

  004cb	eb 05		 jmp	 SHORT $LN2@draw_scree
$LN14@draw_scree:

; 263  : 				}
; 264  : 
; 265  : 				default:
; 266  : 				{
; 267  : 
; 268  : 					clear_screen ();

  004cd	e8 00 00 00 00	 call	 ?clear_screen@@YGXXZ	; clear_screen
$LN2@draw_scree:

; 269  : 
; 270  : 					break;
; 271  : 				}
; 272  : 			}
; 273  : 		}
; 274  : 		//else
; 275  : 		{
; 276  : 
; 277  : 			call_ui_object_draw_function (obj, NULL);

  004d2	6a 00		 push	 0
  004d4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  004d7	50		 push	 eax
  004d8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  004db	8b 11		 mov	 edx, DWORD PTR [ecx]
  004dd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_call_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[edx*4]
  004e4	ff d0		 call	 eax
$LN4@draw_scree:

; 278  : 		}
; 279  : 	}
; 280  : }

  004e6	5f		 pop	 edi
  004e7	5e		 pop	 esi
  004e8	5b		 pop	 ebx
  004e9	8b e5		 mov	 esp, ebp
  004eb	5d		 pop	 ebp
  004ec	c2 04 00	 ret	 4
?draw_screen_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; draw_screen_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\screen\sc_draw.c
;	COMDAT ?overload_screen_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_screen_ui_object_draw_functions@@YGXH@Z PROC	; overload_screen_ui_object_draw_functions, COMDAT

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 288  : 
; 289  : 	fn_draw_ui_object [type] = draw_screen_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_screen_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_screen_ui_object

; 290  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_screen_ui_object_draw_functions@@YGXH@Z ENDP	; overload_screen_ui_object_draw_functions
_TEXT	ENDS
END
