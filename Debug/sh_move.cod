; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_move.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_fabsf
PUBLIC	_sqrtf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?sqrt@@YGMM@Z					; sqrt
PUBLIC	?ship_vehicle_movement@@YGXPAUENTITY@@@Z	; ship_vehicle_movement
PUBLIC	?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z	; ship_vehicle_death_movement
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA ; `ship_movement_get_waypoint_position'::`1'::__LINE__Var
PUBLIC	??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_06NGJLJNEL@wp_pos@			; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_05HLIEEKJG@guide@				; `string'
PUBLIC	??_C@_02HODPCBMO@wp@				; `string'
PUBLIC	??_C@_0M@CKFOJOAF@task_leader@			; `string'
PUBLIC	??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@ ; `string'
PUBLIC	??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@ ; `string'
PUBLIC	?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA ; `ship_vehicle_movement'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@GMNHMODA@current_waypoint@		; `string'
PUBLIC	?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA ; `ship_vehicle_death_movement'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA ; `clear_ship_fires'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3c8efa35
PUBLIC	__real@3f5c987100000000
PUBLIC	__real@3f800000
PUBLIC	__real@3f81df46a0000000
PUBLIC	__real@3faeb851eb851eb8
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe69fbe76c8b439
PUBLIC	__real@40490fdb
PUBLIC	__real@40c90fdb
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_fabs:PROC
EXTRN	_sqrt:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z:PROC ; get_object_3d_bounding_box
EXTRN	?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z:PROC ; get_formation
EXTRN	?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_volume
EXTRN	?get_local_entity_primary_guide@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_primary_guide
EXTRN	?get_local_entity_formation_position_offset@@YGXPAUENTITY@@0PAUVEC3D@@@Z:PROC ; get_local_entity_formation_position_offset
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?system_one_over_delta_time@@3MA:DWORD		; system_one_over_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity_family
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3fe69fbe76c8b439
CONST	SEGMENT
__real@3fe69fbe76c8b439 DQ 03fe69fbe76c8b439r	; 0.707
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3faeb851eb851eb8
CONST	SEGMENT
__real@3faeb851eb851eb8 DQ 03faeb851eb851eb8r	; 0.06
CONST	ENDS
;	COMDAT __real@3f81df46a0000000
CONST	SEGMENT
__real@3f81df46a0000000 DQ 03f81df46a0000000r	; 0.00872665
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f5c987100000000
CONST	SEGMENT
__real@3f5c987100000000 DQ 03f5c987100000000r	; 0.00174533
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA DD 0238H ; `clear_ship_fires'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA DD 01cdH ; `ship_vehicle_death_movement'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@GMNHMODA@current_waypoint@
CONST	SEGMENT
??_C@_0BB@GMNHMODA@current_waypoint@ DB 'current_waypoint', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA DD 0eeH ; `ship_vehicle_movement'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@
CONST	SEGMENT
??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@ DB 'leader_forma'
	DB	'tion_index < formation_count', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@
CONST	SEGMENT
??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@ DB 'formation_in'
	DB	'dex < formation_count', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CKFOJOAF@task_leader@
CONST	SEGMENT
??_C@_0M@CKFOJOAF@task_leader@ DB 'task_leader', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HODPCBMO@wp@
CONST	SEGMENT
??_C@_02HODPCBMO@wp@ DB 'wp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HLIEEKJG@guide@
CONST	SEGMENT
??_C@_05HLIEEKJG@guide@ DB 'guide', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NGJLJNEL@wp_pos@
CONST	SEGMENT
??_C@_06NGJLJNEL@wp_pos@ DB 'wp_pos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\s'
	DB	'h_move.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA DD 056H ; `ship_movement_get_waypoint_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_move.c
;	COMDAT ?ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv512 = -136						; size = 4
tv489 = -136						; size = 4
tv404 = -136						; size = 4
tv384 = -136						; size = 4
tv354 = -136						; size = 4
tv334 = -136						; size = 4
tv310 = -136						; size = 4
tv285 = -136						; size = 4
tv265 = -136						; size = 4
tv244 = -136						; size = 4
tv214 = -136						; size = 4
tv193 = -136						; size = 4
tv170 = -136						; size = 4
tv145 = -136						; size = 4
tv88 = -136						; size = 4
tv504 = -132						; size = 4
tv481 = -132						; size = 4
tv396 = -132						; size = 4
tv376 = -132						; size = 4
tv346 = -132						; size = 4
tv326 = -132						; size = 4
tv302 = -132						; size = 4
tv277 = -132						; size = 4
tv257 = -132						; size = 4
tv237 = -132						; size = 4
tv206 = -132						; size = 4
tv186 = -132						; size = 4
tv162 = -132						; size = 4
tv137 = -132						; size = 4
tv80 = -132						; size = 4
_leader_formation_index$1 = -64				; size = 4
_formation_index$2 = -60				; size = 4
_formation_count$3 = -56				; size = 4
_type$4 = -52						; size = 4
_formation$5 = -48					; size = 4
_leader_pos$6 = -44					; size = 4
_xv$7 = -40						; size = 4
_task_leader$8 = -36					; size = 4
_offset$9 = -32						; size = 12
_pos$ = -20						; size = 4
_distance$ = -16					; size = 4
_guide$ = -12						; size = 4
_group$ = -8						; size = 4
_wp$ = -4						; size = 4
_en$ = 8						; size = 4
_wp_pos$ = 12						; size = 4
?ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z PROC ; ship_movement_get_waypoint_position, COMDAT

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 87   : 	entity
; 88   : 		*wp,
; 89   : 		*group,
; 90   : 		*guide;
; 91   : 
; 92   : 	float
; 93   : 		distance;
; 94   : 
; 95   : 	vec3d
; 96   : 		*pos;
; 97   : 
; 98   : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@ship_movem
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@ship_movem:

; 99   : 
; 100  : 	ASSERT (wp_pos);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _wp_pos$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@ship_movem
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00035	83 c0 0e	 add	 eax, 14			; 0000000eH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06NGJLJNEL@wp_pos@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@ship_movem:

; 101  : 
; 102  : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0d		 je	 SHORT $LN15@ship_movem
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv80[ebp], ecx
  00059	eb 24		 jmp	 SHORT $LN16@ship_movem
$LN15@ship_movem:
  0005b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00061	83 c2 10	 add	 edx, 16			; 00000010H
  00064	52		 push	 edx
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00075	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
$LN16@ship_movem:
  0007f	b9 01 00 00 00	 mov	 ecx, 1
  00084	85 c9		 test	 ecx, ecx
  00086	74 0c		 je	 SHORT $LN17@ship_movem
  00088	c7 85 78 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv88[ebp], 25	; 00000019H
  00092	eb 24		 jmp	 SHORT $LN18@ship_movem
$LN17@ship_movem:
  00094	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0009a	83 c2 10	 add	 edx, 16			; 00000010H
  0009d	52		 push	 edx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ae	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN18@ship_movem:
  000b8	6a 19		 push	 25			; 00000019H
  000ba	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000bd	51		 push	 ecx
  000be	69 95 7c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv80[ebp], 180
  000c8	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv88[ebp]
  000ce	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000d5	ff d1		 call	 ecx
  000d7	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 103  : 
; 104  : 	ASSERT (group);

  000da	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  000de	75 18		 jne	 SHORT $LN4@ship_movem
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  000e5	83 c0 12	 add	 eax, 18			; 00000012H
  000e8	50		 push	 eax
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@ship_movem:

; 105  : 
; 106  : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  000f8	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000fc	74 0d		 je	 SHORT $LN19@ship_movem
  000fe	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00101	8b 08		 mov	 ecx, DWORD PTR [eax]
  00103	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv137[ebp], ecx
  00109	eb 24		 jmp	 SHORT $LN20@ship_movem
$LN19@ship_movem:
  0010b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00111	83 c2 14	 add	 edx, 20			; 00000014H
  00114	52		 push	 edx
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00125	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN20@ship_movem:
  0012f	b9 01 00 00 00	 mov	 ecx, 1
  00134	85 c9		 test	 ecx, ecx
  00136	74 0c		 je	 SHORT $LN21@ship_movem
  00138	c7 85 78 ff ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv145[ebp], 13 ; 0000000dH
  00142	eb 24		 jmp	 SHORT $LN22@ship_movem
$LN21@ship_movem:
  00144	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0014a	83 c2 14	 add	 edx, 20			; 00000014H
  0014d	52		 push	 edx
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv145[ebp], 0
$LN22@ship_movem:
  00168	6a 0d		 push	 13			; 0000000dH
  0016a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0016d	51		 push	 ecx
  0016e	69 95 7c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv137[ebp], 180
  00178	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv145[ebp]
  0017e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00185	ff d1		 call	 ecx
  00187	89 45 f4	 mov	 DWORD PTR _guide$[ebp], eax

; 107  : 
; 108  : 	ASSERT (guide);

  0018a	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0018e	75 18		 jne	 SHORT $LN5@ship_movem
  00190	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00195	83 c0 16	 add	 eax, 22			; 00000016H
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_05HLIEEKJG@guide@
  001a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@ship_movem:

; 109  : 
; 110  : 	wp = get_local_entity_parent (guide, LIST_TYPE_CURRENT_WAYPOINT);

  001a8	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  001ac	74 0d		 je	 SHORT $LN23@ship_movem
  001ae	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  001b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b3	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv162[ebp], ecx
  001b9	eb 24		 jmp	 SHORT $LN24@ship_movem
$LN23@ship_movem:
  001bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  001c1	83 c2 18	 add	 edx, 24			; 00000018H
  001c4	52		 push	 edx
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d5	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN24@ship_movem:
  001df	b9 01 00 00 00	 mov	 ecx, 1
  001e4	85 c9		 test	 ecx, ecx
  001e6	74 0c		 je	 SHORT $LN25@ship_movem
  001e8	c7 85 78 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv170[ebp], 9
  001f2	eb 24		 jmp	 SHORT $LN26@ship_movem
$LN25@ship_movem:
  001f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  001fa	83 c2 18	 add	 edx, 24			; 00000018H
  001fd	52		 push	 edx
  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00203	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN26@ship_movem:
  00218	6a 09		 push	 9
  0021a	8b 4d f4	 mov	 ecx, DWORD PTR _guide$[ebp]
  0021d	51		 push	 ecx
  0021e	69 95 7c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv162[ebp], 180
  00228	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv170[ebp]
  0022e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00235	ff d1		 call	 ecx
  00237	89 45 fc	 mov	 DWORD PTR _wp$[ebp], eax

; 111  : 
; 112  : 	ASSERT (wp);

  0023a	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0023e	75 18		 jne	 SHORT $LN6@ship_movem
  00240	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00245	83 c0 1a	 add	 eax, 26			; 0000001aH
  00248	50		 push	 eax
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024e	68 00 00 00 00	 push	 OFFSET ??_C@_02HODPCBMO@wp@
  00253	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@ship_movem:

; 113  : 
; 114  : 	//
; 115  : 	// Should vehicle follow leader, or follow guide in set waypoint formation?
; 116  : 	//
; 117  : 	
; 118  : 	if (get_local_entity_int_value (wp, INT_TYPE_MOBILE_FOLLOW_WAYPOINT_OFFSET))

  00258	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0025c	74 0d		 je	 SHORT $LN27@ship_movem
  0025e	8b 45 fc	 mov	 eax, DWORD PTR _wp$[ebp]
  00261	8b 08		 mov	 ecx, DWORD PTR [eax]
  00263	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv186[ebp], ecx
  00269	eb 1d		 jmp	 SHORT $LN28@ship_movem
$LN27@ship_movem:
  0026b	6a 76		 push	 118			; 00000076H
  0026d	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00272	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00278	52		 push	 edx
  00279	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv186[ebp], 0
$LN28@ship_movem:
  00288	b8 01 00 00 00	 mov	 eax, 1
  0028d	85 c0		 test	 eax, eax
  0028f	74 0c		 je	 SHORT $LN29@ship_movem
  00291	c7 85 78 ff ff
	ff 8d 00 00 00	 mov	 DWORD PTR tv193[ebp], 141 ; 0000008dH
  0029b	eb 1d		 jmp	 SHORT $LN30@ship_movem
$LN29@ship_movem:
  0029d	6a 76		 push	 118			; 00000076H
  0029f	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002aa	51		 push	 ecx
  002ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b0	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv193[ebp], 0
$LN30@ship_movem:
  002ba	68 8d 00 00 00	 push	 141			; 0000008dH
  002bf	8b 55 fc	 mov	 edx, DWORD PTR _wp$[ebp]
  002c2	52		 push	 edx
  002c3	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv186[ebp], 1116
  002cd	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv193[ebp]
  002d3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002da	ff d2		 call	 edx
  002dc	85 c0		 test	 eax, eax
  002de	0f 84 e3 00 00
	00		 je	 $LN7@ship_movem

; 119  : 	{
; 120  : 		vec3d
; 121  : 			offset;
; 122  : 
; 123  : 		get_local_entity_vec3d (guide, VEC3D_TYPE_GUIDE_POSITION, wp_pos);

  002e4	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  002e8	74 0d		 je	 SHORT $LN31@ship_movem
  002ea	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  002ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ef	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv206[ebp], ecx
  002f5	eb 24		 jmp	 SHORT $LN32@ship_movem
$LN31@ship_movem:
  002f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  002fd	83 c2 25	 add	 edx, 37			; 00000025H
  00300	52		 push	 edx
  00301	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00306	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0030b	50		 push	 eax
  0030c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00311	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
$LN32@ship_movem:
  0031b	b9 01 00 00 00	 mov	 ecx, 1
  00320	85 c9		 test	 ecx, ecx
  00322	74 0c		 je	 SHORT $LN33@ship_movem
  00324	c7 85 78 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv214[ebp], 4
  0032e	eb 24		 jmp	 SHORT $LN34@ship_movem
$LN33@ship_movem:
  00330	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00336	83 c2 25	 add	 edx, 37			; 00000025H
  00339	52		 push	 edx
  0033a	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00344	50		 push	 eax
  00345	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034a	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN34@ship_movem:
  00354	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00357	51		 push	 ecx
  00358	6a 04		 push	 4
  0035a	8b 55 f4	 mov	 edx, DWORD PTR _guide$[ebp]
  0035d	52		 push	 edx
  0035e	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv206[ebp], 96
  00365	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv214[ebp]
  0036b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00372	ff d2		 call	 edx

; 124  : 
; 125  : 		get_local_entity_formation_position_offset (en, wp, &offset);

  00374	8d 45 e0	 lea	 eax, DWORD PTR _offset$9[ebp]
  00377	50		 push	 eax
  00378	8b 4d fc	 mov	 ecx, DWORD PTR _wp$[ebp]
  0037b	51		 push	 ecx
  0037c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0037f	52		 push	 edx
  00380	e8 00 00 00 00	 call	 ?get_local_entity_formation_position_offset@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_local_entity_formation_position_offset

; 126  : 
; 127  : 		wp_pos->x += offset.x;

  00385	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00388	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0038c	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _offset$9[ebp]
  00391	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00394	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 128  : 		wp_pos->y += offset.y;

  00398	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  0039b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003a0	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _offset$9[ebp+4]
  003a5	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  003a8	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 129  : 		wp_pos->z += offset.z;

  003ad	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  003b0	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003b5	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _offset$9[ebp+8]
  003ba	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  003bd	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 130  : 	}
; 131  : 	else

  003c2	e9 15 06 00 00	 jmp	 $LN10@ship_movem
$LN7@ship_movem:

; 132  : 	{
; 133  : 		//
; 134  : 		// Task leader follows guide,.... other members follow task leader
; 135  : 		//
; 136  : 	
; 137  : 		if (get_local_entity_int_value (en, INT_TYPE_TASK_LEADER))

  003c7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003cb	74 0d		 je	 SHORT $LN35@ship_movem
  003cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d2	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv237[ebp], ecx
  003d8	eb 20		 jmp	 SHORT $LN36@ship_movem
$LN35@ship_movem:
  003da	68 89 00 00 00	 push	 137			; 00000089H
  003df	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003ea	52		 push	 edx
  003eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f0	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN36@ship_movem:
  003fa	b8 01 00 00 00	 mov	 eax, 1
  003ff	85 c0		 test	 eax, eax
  00401	74 0c		 je	 SHORT $LN37@ship_movem
  00403	c7 85 78 ff ff
	ff dd 00 00 00	 mov	 DWORD PTR tv244[ebp], 221 ; 000000ddH
  0040d	eb 20		 jmp	 SHORT $LN38@ship_movem
$LN37@ship_movem:
  0040f	68 89 00 00 00	 push	 137			; 00000089H
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00419	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0041f	51		 push	 ecx
  00420	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00425	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv244[ebp], 0
$LN38@ship_movem:
  0042f	68 dd 00 00 00	 push	 221			; 000000ddH
  00434	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00437	52		 push	 edx
  00438	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv237[ebp], 1116
  00442	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv244[ebp]
  00448	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0044f	ff d2		 call	 edx
  00451	85 c0		 test	 eax, eax
  00453	0f 84 95 00 00
	00		 je	 $LN9@ship_movem

; 138  : 		{
; 139  : 			get_local_entity_vec3d (guide, VEC3D_TYPE_GUIDE_POSITION, wp_pos);

  00459	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0045d	74 0d		 je	 SHORT $LN39@ship_movem
  0045f	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  00462	8b 08		 mov	 ecx, DWORD PTR [eax]
  00464	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv257[ebp], ecx
  0046a	eb 24		 jmp	 SHORT $LN40@ship_movem
$LN39@ship_movem:
  0046c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00472	83 c2 35	 add	 edx, 53			; 00000035H
  00475	52		 push	 edx
  00476	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00480	50		 push	 eax
  00481	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00486	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv257[ebp], 0
$LN40@ship_movem:
  00490	b9 01 00 00 00	 mov	 ecx, 1
  00495	85 c9		 test	 ecx, ecx
  00497	74 0c		 je	 SHORT $LN41@ship_movem
  00499	c7 85 78 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv265[ebp], 4
  004a3	eb 24		 jmp	 SHORT $LN42@ship_movem
$LN41@ship_movem:
  004a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  004ab	83 c2 35	 add	 edx, 53			; 00000035H
  004ae	52		 push	 edx
  004af	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  004b9	50		 push	 eax
  004ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004bf	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv265[ebp], 0
$LN42@ship_movem:
  004c9	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  004cc	51		 push	 ecx
  004cd	6a 04		 push	 4
  004cf	8b 55 f4	 mov	 edx, DWORD PTR _guide$[ebp]
  004d2	52		 push	 edx
  004d3	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv257[ebp], 96
  004da	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv265[ebp]
  004e0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  004e7	ff d2		 call	 edx

; 140  : 		}
; 141  : 		else

  004e9	e9 ee 04 00 00	 jmp	 $LN10@ship_movem
$LN9@ship_movem:

; 142  : 		{
; 143  : 			//
; 144  : 			// set wp pos to offset from task leader
; 145  : 			//
; 146  : 	
; 147  : 			entity
; 148  : 				*task_leader;
; 149  : 	
; 150  : 			vec3d
; 151  : 				*xv,
; 152  : 				*leader_pos;
; 153  : 	
; 154  : 			formation_type
; 155  : 				*formation;
; 156  : 	
; 157  : 			int
; 158  : 				type,
; 159  : 				formation_count,
; 160  : 				formation_index,
; 161  : 				leader_formation_index;
; 162  : 	
; 163  : 			//
; 164  : 			// find task leader
; 165  : 			//
; 166  : 
; 167  : 			task_leader = (entity *) get_local_entity_ptr_value (guide, PTR_TYPE_TASK_LEADER);

  004ee	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  004f2	74 0d		 je	 SHORT $LN43@ship_movem
  004f4	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  004f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  004f9	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv277[ebp], ecx
  004ff	eb 24		 jmp	 SHORT $LN44@ship_movem
$LN43@ship_movem:
  00501	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00507	83 c2 51	 add	 edx, 81			; 00000051H
  0050a	52		 push	 edx
  0050b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00510	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv277[ebp], 0
$LN44@ship_movem:
  00525	b9 01 00 00 00	 mov	 ecx, 1
  0052a	85 c9		 test	 ecx, ecx
  0052c	74 0c		 je	 SHORT $LN45@ship_movem
  0052e	c7 85 78 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv285[ebp], 15 ; 0000000fH
  00538	eb 24		 jmp	 SHORT $LN46@ship_movem
$LN45@ship_movem:
  0053a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00540	83 c2 51	 add	 edx, 81			; 00000051H
  00543	52		 push	 edx
  00544	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00549	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0054e	50		 push	 eax
  0054f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00554	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv285[ebp], 0
$LN46@ship_movem:
  0055e	6a 0f		 push	 15			; 0000000fH
  00560	8b 4d f4	 mov	 ecx, DWORD PTR _guide$[ebp]
  00563	51		 push	 ecx
  00564	6b 95 7c ff ff
	ff 50		 imul	 edx, DWORD PTR tv277[ebp], 80
  0056b	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv285[ebp]
  00571	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00578	ff d1		 call	 ecx
  0057a	89 45 dc	 mov	 DWORD PTR _task_leader$8[ebp], eax

; 168  : 
; 169  : 			ASSERT (task_leader);

  0057d	83 7d dc 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  00581	75 18		 jne	 SHORT $LN11@ship_movem
  00583	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00588	83 c0 53	 add	 eax, 83			; 00000053H
  0058b	50		 push	 eax
  0058c	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00591	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CKFOJOAF@task_leader@
  00596	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@ship_movem:

; 170  : 	
; 171  : 			//
; 172  : 			// get formation
; 173  : 			//
; 174  : 	
; 175  : 			type = get_local_entity_int_value (group, INT_TYPE_GROUP_FORMATION);

  0059b	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0059f	74 0d		 je	 SHORT $LN47@ship_movem
  005a1	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  005a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a6	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv302[ebp], ecx
  005ac	eb 24		 jmp	 SHORT $LN48@ship_movem
$LN47@ship_movem:
  005ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  005b4	83 c2 59	 add	 edx, 89			; 00000059H
  005b7	52		 push	 edx
  005b8	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c2	50		 push	 eax
  005c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c8	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv302[ebp], 0
$LN48@ship_movem:
  005d2	b9 01 00 00 00	 mov	 ecx, 1
  005d7	85 c9		 test	 ecx, ecx
  005d9	74 0c		 je	 SHORT $LN49@ship_movem
  005db	c7 85 78 ff ff
	ff 47 00 00 00	 mov	 DWORD PTR tv310[ebp], 71 ; 00000047H
  005e5	eb 24		 jmp	 SHORT $LN50@ship_movem
$LN49@ship_movem:
  005e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  005ed	83 c2 59	 add	 edx, 89			; 00000059H
  005f0	52		 push	 edx
  005f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005fb	50		 push	 eax
  005fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00601	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv310[ebp], 0
$LN50@ship_movem:
  0060b	6a 47		 push	 71			; 00000047H
  0060d	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00610	51		 push	 ecx
  00611	69 95 7c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv302[ebp], 1116
  0061b	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv310[ebp]
  00621	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00628	ff d1		 call	 ecx
  0062a	89 45 cc	 mov	 DWORD PTR _type$4[ebp], eax

; 176  : 	
; 177  : 			formation = get_formation ((formation_types) type);

  0062d	8b 45 cc	 mov	 eax, DWORD PTR _type$4[ebp]
  00630	50		 push	 eax
  00631	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  00636	89 45 d0	 mov	 DWORD PTR _formation$5[ebp], eax

; 178  : 	
; 179  : 			formation_count = formation->number_in_formation;

  00639	8b 45 d0	 mov	 eax, DWORD PTR _formation$5[ebp]
  0063c	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00640	89 4d c8	 mov	 DWORD PTR _formation_count$3[ebp], ecx

; 180  : 	
; 181  : 			formation_index = get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_NUMBER);

  00643	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00647	74 0d		 je	 SHORT $LN51@ship_movem
  00649	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0064c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0064e	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv326[ebp], ecx
  00654	eb 24		 jmp	 SHORT $LN52@ship_movem
$LN51@ship_movem:
  00656	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0065c	83 c2 5f	 add	 edx, 95			; 0000005fH
  0065f	52		 push	 edx
  00660	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00665	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0066a	50		 push	 eax
  0066b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00670	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv326[ebp], 0
$LN52@ship_movem:
  0067a	b9 01 00 00 00	 mov	 ecx, 1
  0067f	85 c9		 test	 ecx, ecx
  00681	74 0c		 je	 SHORT $LN53@ship_movem
  00683	c7 85 78 ff ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv334[ebp], 75 ; 0000004bH
  0068d	eb 24		 jmp	 SHORT $LN54@ship_movem
$LN53@ship_movem:
  0068f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00695	83 c2 5f	 add	 edx, 95			; 0000005fH
  00698	52		 push	 edx
  00699	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0069e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006a3	50		 push	 eax
  006a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv334[ebp], 0
$LN54@ship_movem:
  006b3	6a 4b		 push	 75			; 0000004bH
  006b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  006b8	51		 push	 ecx
  006b9	69 95 7c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv326[ebp], 1116
  006c3	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv334[ebp]
  006c9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  006d0	ff d1		 call	 ecx
  006d2	89 45 c4	 mov	 DWORD PTR _formation_index$2[ebp], eax

; 182  : 	
; 183  : 			leader_formation_index = get_local_entity_int_value (task_leader, INT_TYPE_GROUP_MEMBER_NUMBER);

  006d5	83 7d dc 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  006d9	74 0d		 je	 SHORT $LN55@ship_movem
  006db	8b 45 dc	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  006de	8b 08		 mov	 ecx, DWORD PTR [eax]
  006e0	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv346[ebp], ecx
  006e6	eb 24		 jmp	 SHORT $LN56@ship_movem
$LN55@ship_movem:
  006e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  006ee	83 c2 61	 add	 edx, 97			; 00000061H
  006f1	52		 push	 edx
  006f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  006f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006fc	50		 push	 eax
  006fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00702	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv346[ebp], 0
$LN56@ship_movem:
  0070c	b9 01 00 00 00	 mov	 ecx, 1
  00711	85 c9		 test	 ecx, ecx
  00713	74 0c		 je	 SHORT $LN57@ship_movem
  00715	c7 85 78 ff ff
	ff 4b 00 00 00	 mov	 DWORD PTR tv354[ebp], 75 ; 0000004bH
  0071f	eb 24		 jmp	 SHORT $LN58@ship_movem
$LN57@ship_movem:
  00721	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00727	83 c2 61	 add	 edx, 97			; 00000061H
  0072a	52		 push	 edx
  0072b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00730	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00735	50		 push	 eax
  00736	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073b	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv354[ebp], 0
$LN58@ship_movem:
  00745	6a 4b		 push	 75			; 0000004bH
  00747	8b 4d dc	 mov	 ecx, DWORD PTR _task_leader$8[ebp]
  0074a	51		 push	 ecx
  0074b	69 95 7c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv346[ebp], 1116
  00755	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv354[ebp]
  0075b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00762	ff d1		 call	 ecx
  00764	89 45 c0	 mov	 DWORD PTR _leader_formation_index$1[ebp], eax

; 184  : 	
; 185  : 			ASSERT (formation_index < formation_count);

  00767	8b 45 c4	 mov	 eax, DWORD PTR _formation_index$2[ebp]
  0076a	3b 45 c8	 cmp	 eax, DWORD PTR _formation_count$3[ebp]
  0076d	7c 18		 jl	 SHORT $LN12@ship_movem
  0076f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00774	83 c0 63	 add	 eax, 99			; 00000063H
  00777	50		 push	 eax
  00778	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0077d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@BJNBCHGF@formation_index?5?$DM?5formation_cou@
  00782	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@ship_movem:

; 186  : 			ASSERT (leader_formation_index < formation_count);

  00787	8b 45 c0	 mov	 eax, DWORD PTR _leader_formation_index$1[ebp]
  0078a	3b 45 c8	 cmp	 eax, DWORD PTR _formation_count$3[ebp]
  0078d	7c 18		 jl	 SHORT $LN13@ship_movem
  0078f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00794	83 c0 64	 add	 eax, 100		; 00000064H
  00797	50		 push	 eax
  00798	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@LGIIPGBA@leader_formation_index?5?$DM?5format@
  007a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@ship_movem:

; 187  : 	
; 188  : 			//
; 189  : 			// calculate position
; 190  : 			//
; 191  : 	
; 192  : 			leader_pos = get_local_entity_vec3d_ptr (task_leader, VEC3D_TYPE_POSITION);

  007a7	83 7d dc 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  007ab	74 0d		 je	 SHORT $LN59@ship_movem
  007ad	8b 45 dc	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  007b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  007b2	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv376[ebp], ecx
  007b8	eb 24		 jmp	 SHORT $LN60@ship_movem
$LN59@ship_movem:
  007ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  007c0	83 c2 6a	 add	 edx, 106		; 0000006aH
  007c3	52		 push	 edx
  007c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  007c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ce	50		 push	 eax
  007cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d4	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv376[ebp], 0
$LN60@ship_movem:
  007de	b9 01 00 00 00	 mov	 ecx, 1
  007e3	85 c9		 test	 ecx, ecx
  007e5	74 0c		 je	 SHORT $LN61@ship_movem
  007e7	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv384[ebp], 8
  007f1	eb 24		 jmp	 SHORT $LN62@ship_movem
$LN61@ship_movem:
  007f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  007f9	83 c2 6a	 add	 edx, 106		; 0000006aH
  007fc	52		 push	 edx
  007fd	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00802	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00807	50		 push	 eax
  00808	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0080d	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv384[ebp], 0
$LN62@ship_movem:
  00817	6a 08		 push	 8
  00819	8b 4d dc	 mov	 ecx, DWORD PTR _task_leader$8[ebp]
  0081c	51		 push	 ecx
  0081d	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv376[ebp], 96
  00824	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv384[ebp]
  0082a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00831	ff d1		 call	 ecx
  00833	89 45 d4	 mov	 DWORD PTR _leader_pos$6[ebp], eax

; 193  : 	
; 194  : 			xv = get_local_entity_vec3d_ptr (task_leader, VEC3D_TYPE_XV);

  00836	83 7d dc 00	 cmp	 DWORD PTR _task_leader$8[ebp], 0
  0083a	74 0d		 je	 SHORT $LN63@ship_movem
  0083c	8b 45 dc	 mov	 eax, DWORD PTR _task_leader$8[ebp]
  0083f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00841	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv396[ebp], ecx
  00847	eb 24		 jmp	 SHORT $LN64@ship_movem
$LN63@ship_movem:
  00849	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0084f	83 c2 6c	 add	 edx, 108		; 0000006cH
  00852	52		 push	 edx
  00853	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00858	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0085d	50		 push	 eax
  0085e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00863	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv396[ebp], 0
$LN64@ship_movem:
  0086d	b9 01 00 00 00	 mov	 ecx, 1
  00872	85 c9		 test	 ecx, ecx
  00874	74 0c		 je	 SHORT $LN65@ship_movem
  00876	c7 85 78 ff ff
	ff 14 00 00 00	 mov	 DWORD PTR tv404[ebp], 20 ; 00000014H
  00880	eb 24		 jmp	 SHORT $LN66@ship_movem
$LN65@ship_movem:
  00882	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00888	83 c2 6c	 add	 edx, 108		; 0000006cH
  0088b	52		 push	 edx
  0088c	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00891	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00896	50		 push	 eax
  00897	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0089c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv404[ebp], 0
$LN66@ship_movem:
  008a6	6a 14		 push	 20			; 00000014H
  008a8	8b 4d dc	 mov	 ecx, DWORD PTR _task_leader$8[ebp]
  008ab	51		 push	 ecx
  008ac	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv396[ebp], 96
  008b3	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv404[ebp]
  008b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  008c0	ff d1		 call	 ecx
  008c2	89 45 d8	 mov	 DWORD PTR _xv$7[ebp], eax

; 195  : 	
; 196  : 			//
; 197  : 			// take leader position and SUBTRACT leaders formation position (coz leader is not necessarily formation pos 0)
; 198  : 			//
; 199  : 			
; 200  : 			wp_pos->x = leader_pos->x - ((xv->x * formation->sites [leader_formation_index].x) + (xv->z * formation->sites [leader_formation_index].z));

  008c5	6b 45 c0 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  008c9	8b 4d d0	 mov	 ecx, DWORD PTR _formation$5[ebp]
  008cc	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  008cf	8b 4d d8	 mov	 ecx, DWORD PTR _xv$7[ebp]
  008d2	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  008d6	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  008db	6b 55 c0 0c	 imul	 edx, DWORD PTR _leader_formation_index$1[ebp], 12
  008df	8b 45 d0	 mov	 eax, DWORD PTR _formation$5[ebp]
  008e2	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  008e5	8b 45 d8	 mov	 eax, DWORD PTR _xv$7[ebp]
  008e8	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  008ed	f3 0f 59 4c 11
	08		 mulss	 xmm1, DWORD PTR [ecx+edx+8]
  008f3	f3 0f 58 c1	 addss	 xmm0, xmm1
  008f7	8b 4d d4	 mov	 ecx, DWORD PTR _leader_pos$6[ebp]
  008fa	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  008fe	f3 0f 5c c8	 subss	 xmm1, xmm0
  00902	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  00905	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 201  : 			wp_pos->y = 0;

  00909	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  0090c	0f 57 c0	 xorps	 xmm0, xmm0
  0090f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 202  : 			wp_pos->z = leader_pos->z - ((xv->z * formation->sites [leader_formation_index].x) + (xv->x * formation->sites [leader_formation_index].z));

  00914	6b 45 c0 0c	 imul	 eax, DWORD PTR _leader_formation_index$1[ebp], 12
  00918	8b 4d d0	 mov	 ecx, DWORD PTR _formation$5[ebp]
  0091b	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0091e	8b 4d d8	 mov	 ecx, DWORD PTR _xv$7[ebp]
  00921	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00926	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  0092b	6b 55 c0 0c	 imul	 edx, DWORD PTR _leader_formation_index$1[ebp], 12
  0092f	8b 45 d0	 mov	 eax, DWORD PTR _formation$5[ebp]
  00932	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00935	8b 45 d8	 mov	 eax, DWORD PTR _xv$7[ebp]
  00938	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0093c	f3 0f 59 4c 11
	08		 mulss	 xmm1, DWORD PTR [ecx+edx+8]
  00942	f3 0f 58 c1	 addss	 xmm0, xmm1
  00946	8b 4d d4	 mov	 ecx, DWORD PTR _leader_pos$6[ebp]
  00949	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0094e	f3 0f 5c c8	 subss	 xmm1, xmm0
  00952	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  00955	f3 0f 11 4a 08	 movss	 DWORD PTR [edx+8], xmm1

; 203  : 	
; 204  : 			//
; 205  : 			// then ADD members formation position
; 206  : 			//
; 207  : 	
; 208  : 			wp_pos->x += ((xv->x * formation->sites [formation_index].x) + (xv->z * formation->sites [formation_index].z));

  0095a	6b 45 c4 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  0095e	8b 4d d0	 mov	 ecx, DWORD PTR _formation$5[ebp]
  00961	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00964	8b 4d d8	 mov	 ecx, DWORD PTR _xv$7[ebp]
  00967	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0096b	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  00970	6b 55 c4 0c	 imul	 edx, DWORD PTR _formation_index$2[ebp], 12
  00974	8b 45 d0	 mov	 eax, DWORD PTR _formation$5[ebp]
  00977	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0097a	8b 45 d8	 mov	 eax, DWORD PTR _xv$7[ebp]
  0097d	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00982	f3 0f 59 4c 11
	08		 mulss	 xmm1, DWORD PTR [ecx+edx+8]
  00988	f3 0f 58 c1	 addss	 xmm0, xmm1
  0098c	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  0098f	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00993	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  00996	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 209  : 			wp_pos->z += ((xv->z * formation->sites [formation_index].x) + (xv->x * formation->sites [formation_index].z));

  0099a	6b 45 c4 0c	 imul	 eax, DWORD PTR _formation_index$2[ebp], 12
  0099e	8b 4d d0	 mov	 ecx, DWORD PTR _formation$5[ebp]
  009a1	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  009a4	8b 4d d8	 mov	 ecx, DWORD PTR _xv$7[ebp]
  009a7	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  009ac	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  009b1	6b 55 c4 0c	 imul	 edx, DWORD PTR _formation_index$2[ebp], 12
  009b5	8b 45 d0	 mov	 eax, DWORD PTR _formation$5[ebp]
  009b8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  009bb	8b 45 d8	 mov	 eax, DWORD PTR _xv$7[ebp]
  009be	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  009c2	f3 0f 59 4c 11
	08		 mulss	 xmm1, DWORD PTR [ecx+edx+8]
  009c8	f3 0f 58 c1	 addss	 xmm0, xmm1
  009cc	8b 4d 0c	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  009cf	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  009d4	8b 55 0c	 mov	 edx, DWORD PTR _wp_pos$[ebp]
  009d7	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
$LN10@ship_movem:

; 210  : 		}
; 211  : 	}
; 212  : 
; 213  : 	//
; 214  : 	// calculate distance of entity to desired position
; 215  : 	//
; 216  : 
; 217  : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  009dc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009e0	74 0d		 je	 SHORT $LN67@ship_movem
  009e2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  009e7	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv481[ebp], ecx
  009ed	eb 27		 jmp	 SHORT $LN68@ship_movem
$LN67@ship_movem:
  009ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  009f5	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  009fb	52		 push	 edx
  009fc	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a01	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a06	50		 push	 eax
  00a07	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a0c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv481[ebp], 0
$LN68@ship_movem:
  00a16	b9 01 00 00 00	 mov	 ecx, 1
  00a1b	85 c9		 test	 ecx, ecx
  00a1d	74 0c		 je	 SHORT $LN69@ship_movem
  00a1f	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv489[ebp], 8
  00a29	eb 27		 jmp	 SHORT $LN70@ship_movem
$LN69@ship_movem:
  00a2b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00a31	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  00a37	52		 push	 edx
  00a38	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a3d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00a42	50		 push	 eax
  00a43	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a48	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv489[ebp], 0
$LN70@ship_movem:
  00a52	6a 08		 push	 8
  00a54	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00a57	51		 push	 ecx
  00a58	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv481[ebp], 96
  00a5f	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv489[ebp]
  00a65	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00a6c	ff d1		 call	 ecx
  00a6e	89 45 ec	 mov	 DWORD PTR _pos$[ebp], eax

; 218  : 
; 219  : 	distance = get_2d_range (pos, wp_pos);

  00a71	8b 45 0c	 mov	 eax, DWORD PTR _wp_pos$[ebp]
  00a74	50		 push	 eax
  00a75	8b 4d ec	 mov	 ecx, DWORD PTR _pos$[ebp]
  00a78	51		 push	 ecx
  00a79	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00a7e	d9 5d f0	 fstp	 DWORD PTR _distance$[ebp]

; 220  : 
; 221  : 	#if DEBUG_WAYPOINT_VECTOR
; 222  : 	
; 223  : 	if (distance > 0.0)
; 224  : 	{
; 225  : 		create_debug_3d_line (pos, wp_pos, sys_col_black, 0.0);
; 226  : 	}
; 227  : 
; 228  : 	#endif
; 229  : 
; 230  : 	set_local_entity_float_value (en, FLOAT_TYPE_DISTANCE, distance);

  00a81	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a85	74 0d		 je	 SHORT $LN71@ship_movem
  00a87	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a8a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a8c	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv504[ebp], ecx
  00a92	eb 27		 jmp	 SHORT $LN72@ship_movem
$LN71@ship_movem:
  00a94	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00a9a	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  00aa0	52		 push	 edx
  00aa1	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aa6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00aab	50		 push	 eax
  00aac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ab1	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv504[ebp], 0
$LN72@ship_movem:
  00abb	b9 01 00 00 00	 mov	 ecx, 1
  00ac0	85 c9		 test	 ecx, ecx
  00ac2	74 0c		 je	 SHORT $LN73@ship_movem
  00ac4	c7 85 78 ff ff
	ff 1f 00 00 00	 mov	 DWORD PTR tv512[ebp], 31 ; 0000001fH
  00ace	eb 27		 jmp	 SHORT $LN74@ship_movem
$LN73@ship_movem:
  00ad0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00ad6	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  00adc	52		 push	 edx
  00add	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ae2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00ae7	50		 push	 eax
  00ae8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aed	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv512[ebp], 0
$LN74@ship_movem:
  00af7	51		 push	 ecx
  00af8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00afd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b02	6a 1f		 push	 31			; 0000001fH
  00b04	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00b07	51		 push	 ecx
  00b08	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv504[ebp], 700
  00b12	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv512[ebp]
  00b18	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00b1f	ff d1		 call	 ecx

; 231  : }

  00b21	5f		 pop	 edi
  00b22	5e		 pop	 esi
  00b23	5b		 pop	 ebx
  00b24	8b e5		 mov	 esp, ebp
  00b26	5d		 pop	 ebp
  00b27	c2 08 00	 ret	 8
?ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z ENDP ; ship_movement_get_waypoint_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_move.c
;	COMDAT ?clear_ship_fires@@YGHPAUENTITY@@H@Z
_TEXT	SEGMENT
tv195 = -80						; size = 4
tv175 = -80						; size = 4
tv152 = -80						; size = 4
tv131 = -80						; size = 4
tv78 = -80						; size = 4
tv187 = -76						; size = 4
tv167 = -76						; size = 4
tv144 = -76						; size = 4
tv92 = -76						; size = 4
tv70 = -76						; size = 4
_pos$ = -8						; size = 4
_en$ = -4						; size = 4
_ship_en$ = 8						; size = 4
_type$ = 12						; size = 4
?clear_ship_fires@@YGHPAUENTITY@@H@Z PROC		; clear_ship_fires, COMDAT

; 568  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 569  : 	entity
; 570  : 		*en;
; 571  : 
; 572  : 	vec3d
; 573  : 		*pos;
; 574  : 
; 575  : 	en = get_local_entity_first_child (ship_en, LIST_TYPE_SPECIAL_EFFECT);

  00009	83 7d 08 00	 cmp	 DWORD PTR _ship_en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN8@clear_ship
  0000f	8b 45 08	 mov	 eax, DWORD PTR _ship_en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN9@clear_ship
$LN8@clear_ship:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  0001f	83 c2 07	 add	 edx, 7
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@clear_ship:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN10@clear_ship
  00043	c7 45 b0 24 00
	00 00		 mov	 DWORD PTR tv78[ebp], 36	; 00000024H
  0004a	eb 21		 jmp	 SHORT $LN11@clear_ship
$LN10@clear_ship:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  00052	83 c2 07	 add	 edx, 7
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@clear_ship:
  0006d	6a 24		 push	 36			; 00000024H
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _ship_en$[ebp]
  00072	51		 push	 ecx
  00073	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  0007a	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  0007d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00084	ff d1		 call	 ecx
  00086	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@clear_ship:

; 576  : 
; 577  : 	while (en)

  00089	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0008d	0f 84 27 02 00
	00		 je	 $LN3@clear_ship

; 578  : 	{
; 579  : 		if (en->type == ENTITY_TYPE_SMOKE_LIST)

  00093	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00096	83 38 1f	 cmp	 DWORD PTR [eax], 31	; 0000001fH
  00099	0f 85 96 01 00
	00		 jne	 $LN6@clear_ship

; 580  : 		{
; 581  : 			if (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE) == type)

  0009f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a3	74 0a		 je	 SHORT $LN12@clear_ship
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	89 4d b4	 mov	 DWORD PTR tv92[ebp], ecx
  000ad	eb 1d		 jmp	 SHORT $LN13@clear_ship
$LN12@clear_ship:
  000af	68 45 02 00 00	 push	 581			; 00000245H
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000bf	52		 push	 edx
  000c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN13@clear_ship:
  000cc	b8 01 00 00 00	 mov	 eax, 1
  000d1	85 c0		 test	 eax, eax
  000d3	74 09		 je	 SHORT $LN14@clear_ship
  000d5	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv131[ebp], 52 ; 00000034H
  000dc	eb 1d		 jmp	 SHORT $LN15@clear_ship
$LN14@clear_ship:
  000de	68 45 02 00 00	 push	 581			; 00000245H
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ee	51		 push	 ecx
  000ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN15@clear_ship:
  000fb	6a 34		 push	 52			; 00000034H
  000fd	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00100	52		 push	 edx
  00101	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv92[ebp], 1116
  00108	8b 4d b0	 mov	 ecx, DWORD PTR tv131[ebp]
  0010b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00112	ff d2		 call	 edx
  00114	3b 45 0c	 cmp	 eax, DWORD PTR _type$[ebp]
  00117	0f 85 18 01 00
	00		 jne	 $LN6@clear_ship

; 582  : 			{
; 583  : 				pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0011d	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00121	74 0a		 je	 SHORT $LN16@clear_ship
  00123	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00126	8b 08		 mov	 ecx, DWORD PTR [eax]
  00128	89 4d b4	 mov	 DWORD PTR tv144[ebp], ecx
  0012b	eb 21		 jmp	 SHORT $LN17@clear_ship
$LN16@clear_ship:
  0012d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  00133	83 c2 0f	 add	 edx, 15			; 0000000fH
  00136	52		 push	 edx
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00147	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN17@clear_ship:
  0014e	b9 01 00 00 00	 mov	 ecx, 1
  00153	85 c9		 test	 ecx, ecx
  00155	74 09		 je	 SHORT $LN18@clear_ship
  00157	c7 45 b0 08 00
	00 00		 mov	 DWORD PTR tv152[ebp], 8
  0015e	eb 21		 jmp	 SHORT $LN19@clear_ship
$LN18@clear_ship:
  00160	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  00166	83 c2 0f	 add	 edx, 15			; 0000000fH
  00169	52		 push	 edx
  0016a	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN19@clear_ship:
  00181	6a 08		 push	 8
  00183	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00186	51		 push	 ecx
  00187	6b 55 b4 60	 imul	 edx, DWORD PTR tv144[ebp], 96
  0018b	8b 45 b0	 mov	 eax, DWORD PTR tv152[ebp]
  0018e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00195	ff d1		 call	 ecx
  00197	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 584  : 
; 585  : 				if (pos->y < 0.0)

  0019a	8b 45 f8	 mov	 eax, DWORD PTR _pos$[ebp]
  0019d	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  001a2	0f 57 c9	 xorps	 xmm1, xmm1
  001a5	66 0f 2f c8	 comisd	 xmm1, xmm0
  001a9	0f 86 86 00 00
	00		 jbe	 $LN6@clear_ship

; 586  : 				{
; 587  : 					set_local_entity_float_value (en, FLOAT_TYPE_GENERATOR_LIFETIME, 0.0);

  001af	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  001b3	74 0a		 je	 SHORT $LN20@clear_ship
  001b5	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ba	89 4d b4	 mov	 DWORD PTR tv167[ebp], ecx
  001bd	eb 21		 jmp	 SHORT $LN21@clear_ship
$LN20@clear_ship:
  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  001c5	83 c2 13	 add	 edx, 19			; 00000013H
  001c8	52		 push	 edx
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN21@clear_ship:
  001e0	b9 01 00 00 00	 mov	 ecx, 1
  001e5	85 c9		 test	 ecx, ecx
  001e7	74 09		 je	 SHORT $LN22@clear_ship
  001e9	c7 45 b0 32 00
	00 00		 mov	 DWORD PTR tv175[ebp], 50 ; 00000032H
  001f0	eb 21		 jmp	 SHORT $LN23@clear_ship
$LN22@clear_ship:
  001f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  001f8	83 c2 13	 add	 edx, 19			; 00000013H
  001fb	52		 push	 edx
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00201	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN23@clear_ship:
  00213	51		 push	 ecx
  00214	0f 57 c0	 xorps	 xmm0, xmm0
  00217	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021c	6a 32		 push	 50			; 00000032H
  0021e	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00221	51		 push	 ecx
  00222	69 55 b4 bc 02
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 700
  00229	8b 45 b0	 mov	 eax, DWORD PTR tv175[ebp]
  0022c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00233	ff d1		 call	 ecx
$LN6@clear_ship:

; 588  : 				}
; 589  : 			}
; 590  :       }
; 591  : 
; 592  : 		en = get_local_entity_child_succ (en, LIST_TYPE_SPECIAL_EFFECT);

  00235	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00239	74 0a		 je	 SHORT $LN24@clear_ship
  0023b	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0023e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00240	89 4d b4	 mov	 DWORD PTR tv187[ebp], ecx
  00243	eb 21		 jmp	 SHORT $LN25@clear_ship
$LN24@clear_ship:
  00245	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  0024b	83 c2 18	 add	 edx, 24			; 00000018H
  0024e	52		 push	 edx
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00254	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00259	50		 push	 eax
  0025a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN25@clear_ship:
  00266	b9 01 00 00 00	 mov	 ecx, 1
  0026b	85 c9		 test	 ecx, ecx
  0026d	74 09		 je	 SHORT $LN26@clear_ship
  0026f	c7 45 b0 24 00
	00 00		 mov	 DWORD PTR tv195[ebp], 36 ; 00000024H
  00276	eb 21		 jmp	 SHORT $LN27@clear_ship
$LN26@clear_ship:
  00278	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??clear_ship_fires@@YGHPAUENTITY@@H@Z@4JA
  0027e	83 c2 18	 add	 edx, 24			; 00000018H
  00281	52		 push	 edx
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0028c	50		 push	 eax
  0028d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00292	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv195[ebp], 0
$LN27@clear_ship:
  00299	6a 24		 push	 36			; 00000024H
  0029b	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0029e	51		 push	 ecx
  0029f	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv187[ebp], 180
  002a6	8b 45 b0	 mov	 eax, DWORD PTR tv195[ebp]
  002a9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002b0	ff d1		 call	 ecx
  002b2	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 593  : 	}

  002b5	e9 cf fd ff ff	 jmp	 $LN2@clear_ship
$LN3@clear_ship:

; 594  : 
; 595  : 	return TRUE;

  002ba	b8 01 00 00 00	 mov	 eax, 1

; 596  : }

  002bf	5f		 pop	 edi
  002c0	5e		 pop	 esi
  002c1	5b		 pop	 ebx
  002c2	8b e5		 mov	 esp, ebp
  002c4	5d		 pop	 ebp
  002c5	c2 08 00	 ret	 8
?clear_ship_fires@@YGHPAUENTITY@@H@Z ENDP		; clear_ship_fires
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_move.c
;	COMDAT ?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv506 = -132						; size = 8
tv299 = -132						; size = 4
tv273 = -132						; size = 4
tv192 = -132						; size = 4
tv131 = -132						; size = 4
tv79 = -132						; size = 4
tv329 = -128						; size = 4
tv291 = -128						; size = 4
tv265 = -128						; size = 4
tv184 = -128						; size = 4
tv91 = -128						; size = 4
tv71 = -128						; size = 4
_obscured_altitude$1 = -60				; size = 4
_d$2 = -56						; size = 12
_bounding_box$3 = -44					; size = 4
_new_pos$ = -40						; size = 12
_velocity$ = -28					; size = 4
_pos$ = -24						; size = 4
_roll$ = -20						; size = 4
_pitch$ = -16						; size = 4
_heading$ = -12						; size = 4
_speed$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z PROC	; ship_vehicle_death_movement, COMDAT

; 461  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 462  : 
; 463  : 	ship_vehicle
; 464  : 		*raw;
; 465  : 
; 466  : 	float
; 467  : 		speed,
; 468  : 		heading,
; 469  : 		pitch,
; 470  : 		roll;
; 471  : 
; 472  : 	vec3d
; 473  : 		*pos,
; 474  : 		*velocity,
; 475  : 		new_pos;
; 476  : 
; 477  : 	raw = (ship_vehicle *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 478  : 
; 479  : 	//
; 480  : 	// work out new position 
; 481  : 	//
; 482  : 
; 483  : 	velocity = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  00015	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00019	74 0a		 je	 SHORT $LN5@ship_vehic
  0001b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d 80	 mov	 DWORD PTR tv71[ebp], ecx
  00023	eb 21		 jmp	 SHORT $LN6@ship_vehic
$LN5@ship_vehic:
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  0002b	83 c2 16	 add	 edx, 22			; 00000016H
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003f	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN6@ship_vehic:
  00046	b9 01 00 00 00	 mov	 ecx, 1
  0004b	85 c9		 test	 ecx, ecx
  0004d	74 0c		 je	 SHORT $LN7@ship_vehic
  0004f	c7 85 7c ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv79[ebp], 6
  00059	eb 24		 jmp	 SHORT $LN8@ship_vehic
$LN7@ship_vehic:
  0005b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  00061	83 c2 16	 add	 edx, 22			; 00000016H
  00064	52		 push	 edx
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00075	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN8@ship_vehic:
  0007f	6a 06		 push	 6
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00084	51		 push	 ecx
  00085	6b 55 80 60	 imul	 edx, DWORD PTR tv71[ebp], 96
  00089	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0008f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00096	ff d1		 call	 ecx
  00098	89 45 e4	 mov	 DWORD PTR _velocity$[ebp], eax

; 484  : 
; 485  : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0009b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009f	74 0a		 je	 SHORT $LN9@ship_vehic
  000a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	89 4d 80	 mov	 DWORD PTR tv91[ebp], ecx
  000a9	eb 21		 jmp	 SHORT $LN10@ship_vehic
$LN9@ship_vehic:
  000ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  000b1	83 c2 18	 add	 edx, 24			; 00000018H
  000b4	52		 push	 edx
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c5	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN10@ship_vehic:
  000cc	b9 01 00 00 00	 mov	 ecx, 1
  000d1	85 c9		 test	 ecx, ecx
  000d3	74 0c		 je	 SHORT $LN11@ship_vehic
  000d5	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv131[ebp], 8
  000df	eb 24		 jmp	 SHORT $LN12@ship_vehic
$LN11@ship_vehic:
  000e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  000e7	83 c2 18	 add	 edx, 24			; 00000018H
  000ea	52		 push	 edx
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fb	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN12@ship_vehic:
  00105	6a 08		 push	 8
  00107	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0010a	51		 push	 ecx
  0010b	6b 55 80 60	 imul	 edx, DWORD PTR tv91[ebp], 96
  0010f	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv131[ebp]
  00115	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0011c	ff d1		 call	 ecx
  0011e	89 45 e8	 mov	 DWORD PTR _pos$[ebp], eax

; 486  : 
; 487  : 	new_pos.x = pos->x + (velocity->x * get_entity_movement_delta_time());

  00121	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  00124	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00128	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00130	8b 4d e8	 mov	 ecx, DWORD PTR _pos$[ebp]
  00133	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00137	f3 0f 11 45 d8	 movss	 DWORD PTR _new_pos$[ebp], xmm0

; 488  : 	new_pos.y = pos->y + (velocity->y * get_entity_movement_delta_time());

  0013c	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  0013f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00144	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0014c	8b 4d e8	 mov	 ecx, DWORD PTR _pos$[ebp]
  0014f	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  00154	f3 0f 11 45 dc	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 489  : 	new_pos.z = pos->z + (velocity->z * get_entity_movement_delta_time());

  00159	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  0015c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00161	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00169	8b 4d e8	 mov	 ecx, DWORD PTR _pos$[ebp]
  0016c	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00171	f3 0f 11 45 e0	 movss	 DWORD PTR _new_pos$[ebp+8], xmm0

; 490  : 	
; 491  : 	//
; 492  : 	// update velocity
; 493  : 	//
; 494  : 
; 495  : 	velocity->x -= (velocity->x * 0.2 * get_entity_movement_delta_time ());

  00176	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  00179	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0017d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00185	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0018d	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00191	8b 4d e4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  00194	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  00198	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0019c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001a0	8b 55 e4	 mov	 edx, DWORD PTR _velocity$[ebp]
  001a3	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 496  : 	velocity->z -= (velocity->z * 0.2 * get_entity_movement_delta_time ());

  001a7	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  001aa	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001af	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001b7	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  001bf	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  001c3	8b 4d e4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  001c6	f3 0f 5a 49 08	 cvtss2sd xmm1, DWORD PTR [ecx+8]
  001cb	f2 0f 5c c8	 subsd	 xmm1, xmm0
  001cf	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001d3	8b 55 e4	 mov	 edx, DWORD PTR _velocity$[ebp]
  001d6	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0

; 497  : 	velocity->y -= (SHIP_SINK_RATE * get_entity_movement_delta_time ());

  001db	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001e3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3faeb851eb851eb8
  001eb	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  001ee	f3 0f 5a 48 04	 cvtss2sd xmm1, DWORD PTR [eax+4]
  001f3	f2 0f 5c c8	 subsd	 xmm1, xmm0
  001f7	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001fb	8b 4d e4	 mov	 ecx, DWORD PTR _velocity$[ebp]
  001fe	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 498  : 
; 499  : 	speed = get_3d_vector_magnitude (velocity);

  00203	8b 45 e4	 mov	 eax, DWORD PTR _velocity$[ebp]
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  0020c	d9 5d f8	 fstp	 DWORD PTR _speed$[ebp]

; 500  : 
; 501  : 	set_local_entity_float_value (en, FLOAT_TYPE_VELOCITY, speed);

  0020f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00213	74 0a		 je	 SHORT $LN13@ship_vehic
  00215	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00218	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021a	89 4d 80	 mov	 DWORD PTR tv184[ebp], ecx
  0021d	eb 21		 jmp	 SHORT $LN14@ship_vehic
$LN13@ship_vehic:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  00225	83 c2 28	 add	 edx, 40			; 00000028H
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN14@ship_vehic:
  00240	b9 01 00 00 00	 mov	 ecx, 1
  00245	85 c9		 test	 ecx, ecx
  00247	74 0c		 je	 SHORT $LN15@ship_vehic
  00249	c7 85 7c ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv192[ebp], 147 ; 00000093H
  00253	eb 24		 jmp	 SHORT $LN16@ship_vehic
$LN15@ship_vehic:
  00255	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  0025b	83 c2 28	 add	 edx, 40			; 00000028H
  0025e	52		 push	 edx
  0025f	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00264	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00269	50		 push	 eax
  0026a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0026f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
$LN16@ship_vehic:
  00279	51		 push	 ecx
  0027a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _speed$[ebp]
  0027f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00284	68 93 00 00 00	 push	 147			; 00000093H
  00289	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0028c	51		 push	 ecx
  0028d	69 55 80 bc 02
	00 00		 imul	 edx, DWORD PTR tv184[ebp], 700
  00294	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv192[ebp]
  0029a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  002a1	ff d1		 call	 ecx

; 502  : 
; 503  : 	//
; 504  : 	// update attitude
; 505  : 	//
; 506  : 		
; 507  : 	heading = get_heading_from_attitude_matrix (raw->vh.mob.attitude);

  002a3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002a8	d1 e0		 shl	 eax, 1
  002aa	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002ad	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  002b1	b8 04 00 00 00	 mov	 eax, 4
  002b6	d1 e0		 shl	 eax, 1
  002b8	51		 push	 ecx
  002b9	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  002be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c3	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002c8	d1 e1		 shl	 ecx, 1
  002ca	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  002cd	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  002d1	b9 04 00 00 00	 mov	 ecx, 4
  002d6	6b d1 00	 imul	 edx, ecx, 0
  002d9	51		 push	 ecx
  002da	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  002df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e4	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002e9	d9 5d f4	 fstp	 DWORD PTR _heading$[ebp]

; 508  : 
; 509  : 	pitch = get_pitch_from_attitude_matrix (raw->vh.mob.attitude);

  002ec	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002f1	d1 e0		 shl	 eax, 1
  002f3	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002f6	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  002fa	b8 04 00 00 00	 mov	 eax, 4
  002ff	c1 e0 00	 shl	 eax, 0
  00302	51		 push	 ecx
  00303	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00308	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030d	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  00312	d9 5d f0	 fstp	 DWORD PTR _pitch$[ebp]

; 510  : 
; 511  : 	pitch += (SHIP_SINK_DELTA_PITCH_RATE * get_entity_movement_delta_time());

  00315	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0031d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f5c987100000000
  00325	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _pitch$[ebp]
  0032a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0032e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00332	f3 0f 11 45 f0	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 512  : 
; 513  : 	roll = get_roll_from_attitude_matrix (raw->vh.mob.attitude);

  00337	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0033c	c1 e0 00	 shl	 eax, 0
  0033f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00342	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00346	b8 04 00 00 00	 mov	 eax, 4
  0034b	c1 e0 00	 shl	 eax, 0
  0034e	51		 push	 ecx
  0034f	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00354	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00359	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0035e	6b d1 00	 imul	 edx, ecx, 0
  00361	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00364	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00368	ba 04 00 00 00	 mov	 edx, 4
  0036d	c1 e2 00	 shl	 edx, 0
  00370	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00375	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0037c	51		 push	 ecx
  0037d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00382	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00387	d9 5d ec	 fstp	 DWORD PTR _roll$[ebp]

; 514  : 	
; 515  : 	roll += (SHIP_SINK_DELTA_ROLL_RATE * get_entity_movement_delta_time());

  0038a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00392	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f81df46a0000000
  0039a	f3 0f 5a 4d ec	 cvtss2sd xmm1, DWORD PTR _roll$[ebp]
  0039f	f2 0f 58 c8	 addsd	 xmm1, xmm0
  003a3	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  003a7	f3 0f 11 45 ec	 movss	 DWORD PTR _roll$[ebp], xmm0

; 516  : 
; 517  : 	get_3d_transformation_matrix (raw->vh.mob.attitude, heading, pitch, roll);

  003ac	51		 push	 ecx
  003ad	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _roll$[ebp]
  003b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b7	51		 push	 ecx
  003b8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  003bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c2	51		 push	 ecx
  003c3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  003c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cd	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003d0	83 c0 10	 add	 eax, 16			; 00000010H
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 518  : 
; 519  : 	//
; 520  : 	// set new position
; 521  : 	//
; 522  : 
; 523  : 	set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &new_pos);

  003d9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003dd	74 0a		 je	 SHORT $LN17@ship_vehic
  003df	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e4	89 4d 80	 mov	 DWORD PTR tv265[ebp], ecx
  003e7	eb 21		 jmp	 SHORT $LN18@ship_vehic
$LN17@ship_vehic:
  003e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  003ef	83 c2 3e	 add	 edx, 62			; 0000003eH
  003f2	52		 push	 edx
  003f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003fd	50		 push	 eax
  003fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00403	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv265[ebp], 0
$LN18@ship_vehic:
  0040a	b9 01 00 00 00	 mov	 ecx, 1
  0040f	85 c9		 test	 ecx, ecx
  00411	74 0c		 je	 SHORT $LN19@ship_vehic
  00413	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv273[ebp], 8
  0041d	eb 24		 jmp	 SHORT $LN20@ship_vehic
$LN19@ship_vehic:
  0041f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  00425	83 c2 3e	 add	 edx, 62			; 0000003eH
  00428	52		 push	 edx
  00429	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00439	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv273[ebp], 0
$LN20@ship_vehic:
  00443	8d 4d d8	 lea	 ecx, DWORD PTR _new_pos$[ebp]
  00446	51		 push	 ecx
  00447	6a 08		 push	 8
  00449	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0044c	52		 push	 edx
  0044d	6b 45 80 60	 imul	 eax, DWORD PTR tv265[ebp], 96
  00451	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv273[ebp]
  00457	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0045e	ff d2		 call	 edx

; 524  : 
; 525  : 	clear_ship_fires (en, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_FIRE);

  00460	6a 04		 push	 4
  00462	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 ?clear_ship_fires@@YGHPAUENTITY@@H@Z ; clear_ship_fires

; 526  : 	clear_ship_fires (en, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_EXPLOSION_TRAIL);

  0046b	6a 03		 push	 3
  0046d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00470	50		 push	 eax
  00471	e8 00 00 00 00	 call	 ?clear_ship_fires@@YGHPAUENTITY@@H@Z ; clear_ship_fires

; 527  : 
; 528  : 	//
; 529  : 	// remove ship if totally obscured (i.e. sunk)
; 530  : 	//
; 531  : 
; 532  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00476	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0047d	0f 85 54 01 00
	00		 jne	 $LN3@ship_vehic

; 533  : 	{
; 534  : 
; 535  : 		struct OBJECT_3D_BOUNDS
; 536  : 			*bounding_box;
; 537  : 
; 538  : 		vec3d
; 539  : 			d;
; 540  : 
; 541  : 		float
; 542  : 			obscured_altitude;
; 543  : 
; 544  : 		bounding_box = get_object_3d_bounding_box (get_local_entity_int_value (en, INT_TYPE_OBJECT_3D_SHAPE));

  00483	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00487	74 0a		 je	 SHORT $LN21@ship_vehic
  00489	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0048c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048e	89 4d 80	 mov	 DWORD PTR tv291[ebp], ecx
  00491	eb 21		 jmp	 SHORT $LN22@ship_vehic
$LN21@ship_vehic:
  00493	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  00499	83 c2 53	 add	 edx, 83			; 00000053H
  0049c	52		 push	 edx
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ad	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv291[ebp], 0
$LN22@ship_vehic:
  004b4	b9 01 00 00 00	 mov	 ecx, 1
  004b9	85 c9		 test	 ecx, ecx
  004bb	74 0c		 je	 SHORT $LN23@ship_vehic
  004bd	c7 85 7c ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv299[ebp], 146 ; 00000092H
  004c7	eb 24		 jmp	 SHORT $LN24@ship_vehic
$LN23@ship_vehic:
  004c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  004cf	83 c2 53	 add	 edx, 83			; 00000053H
  004d2	52		 push	 edx
  004d3	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004dd	50		 push	 eax
  004de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e3	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv299[ebp], 0
$LN24@ship_vehic:
  004ed	68 92 00 00 00	 push	 146			; 00000092H
  004f2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004f5	51		 push	 ecx
  004f6	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv291[ebp], 1116
  004fd	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv299[ebp]
  00503	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0050a	ff d1		 call	 ecx
  0050c	50		 push	 eax
  0050d	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box
  00512	89 45 d4	 mov	 DWORD PTR _bounding_box$3[ebp], eax

; 545  : 
; 546  : 		d.x = bounding_box->xmax - bounding_box->xmin;

  00515	8b 45 d4	 mov	 eax, DWORD PTR _bounding_box$3[ebp]
  00518	8b 4d d4	 mov	 ecx, DWORD PTR _bounding_box$3[ebp]
  0051b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00520	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00524	f3 0f 11 45 c8	 movss	 DWORD PTR _d$2[ebp], xmm0

; 547  : 		d.y = bounding_box->ymax - bounding_box->ymin;

  00529	8b 45 d4	 mov	 eax, DWORD PTR _bounding_box$3[ebp]
  0052c	8b 4d d4	 mov	 ecx, DWORD PTR _bounding_box$3[ebp]
  0052f	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00534	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00539	f3 0f 11 45 cc	 movss	 DWORD PTR _d$2[ebp+4], xmm0

; 548  : 		d.z = bounding_box->zmax - bounding_box->zmin;

  0053e	8b 45 d4	 mov	 eax, DWORD PTR _bounding_box$3[ebp]
  00541	8b 4d d4	 mov	 ecx, DWORD PTR _bounding_box$3[ebp]
  00544	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00549	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  0054e	f3 0f 11 45 d0	 movss	 DWORD PTR _d$2[ebp+8], xmm0

; 549  : 
; 550  : 		obscured_altitude = -(0.5 * get_3d_vector_magnitude (&d));

  00553	8d 45 c8	 lea	 eax, DWORD PTR _d$2[ebp]
  00556	50		 push	 eax
  00557	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  0055c	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv506[ebp]
  00562	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv506[ebp]
  0056a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00572	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  00579	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0057d	f3 0f 11 45 c4	 movss	 DWORD PTR _obscured_altitude$1[ebp], xmm0

; 551  : 
; 552  : 		if (new_pos.y < obscured_altitude)

  00582	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _obscured_altitude$1[ebp]
  00587	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _new_pos$[ebp+4]
  0058b	76 4a		 jbe	 SHORT $LN3@ship_vehic

; 553  : 		{
; 554  : 			//
; 555  : 			// ship is no longer visible
; 556  : 			//
; 557  : 
; 558  : 			destroy_client_server_entity_family (en);

  0058d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00591	74 0a		 je	 SHORT $LN25@ship_vehic
  00593	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00596	8b 08		 mov	 ecx, DWORD PTR [eax]
  00598	89 4d 80	 mov	 DWORD PTR tv329[ebp], ecx
  0059b	eb 21		 jmp	 SHORT $LN26@ship_vehic
$LN25@ship_vehic:
  0059d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_death_movement@@YGXPAUENTITY@@@Z@4JA
  005a3	83 c2 61	 add	 edx, 97			; 00000061H
  005a6	52		 push	 edx
  005a7	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005b1	50		 push	 eax
  005b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005b7	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv329[ebp], 0
$LN26@ship_vehic:
  005be	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005c1	51		 push	 ecx
  005c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  005c8	c1 e2 02	 shl	 edx, 2
  005cb	8b 45 80	 mov	 eax, DWORD PTR tv329[ebp]
  005ce	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  005d5	ff d1		 call	 ecx
$LN3@ship_vehic:

; 559  : 		}
; 560  : 	}
; 561  : }

  005d7	5f		 pop	 edi
  005d8	5e		 pop	 esi
  005d9	5b		 pop	 ebx
  005da	8b e5		 mov	 esp, ebp
  005dc	5d		 pop	 ebp
  005dd	c2 04 00	 ret	 4
?ship_vehicle_death_movement@@YGXPAUENTITY@@@Z ENDP	; ship_vehicle_death_movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_move.c
;	COMDAT ?ship_vehicle_movement@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv265 = -200						; size = 4
tv258 = -196						; size = 4
tv250 = -192						; size = 4
tv575 = -188						; size = 4
tv236 = -184						; size = 4
tv228 = -180						; size = 4
tv464 = -176						; size = 4
tv348 = -176						; size = 4
tv315 = -176						; size = 4
tv283 = -176						; size = 4
tv267 = -176						; size = 8
tv133 = -176						; size = 4
tv77 = -176						; size = 4
tv516 = -172						; size = 4
tv456 = -172						; size = 4
tv340 = -172						; size = 4
tv316 = -172						; size = 4
tv275 = -172						; size = 4
tv93 = -172						; size = 4
tv70 = -172						; size = 4
_required_acceleration$1 = -104				; size = 4
_maximum_acceleration$2 = -100				; size = 4
_v$3 = -96						; size = 4
_range$4 = -92						; size = 4
_angle$5 = -88						; size = 4
_new_velocity$ = -84					; size = 4
_current_velocity$ = -80				; size = 4
_delta_heading$ = -76					; size = 4
_required_heading$ = -72				; size = 4
_turn_rate$ = -68					; size = 4
_sqr_range$ = -64					; size = 4
_heading$ = -60						; size = 4
_pitch$ = -56						; size = 4
_roll$ = -52						; size = 4
_new_pos$ = -48						; size = 12
_wp_vec$ = -36						; size = 12
_wp_pos$ = -24						; size = 12
_current_waypoint$ = -12				; size = 4
_guide$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?ship_vehicle_movement@@YGXPAUENTITY@@@Z PROC		; ship_vehicle_movement, COMDAT

; 238  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 239  : 	ship_vehicle
; 240  : 		*raw;
; 241  : 
; 242  : 	entity
; 243  : 		*guide,
; 244  : 		*current_waypoint;
; 245  : 
; 246  : 	vec3d
; 247  : 		wp_pos,
; 248  : 		wp_vec,
; 249  : 		new_pos;
; 250  : 
; 251  : 	float
; 252  : 		roll,
; 253  : 		pitch,
; 254  : 		heading,
; 255  : 		sqr_range,
; 256  : 		turn_rate,
; 257  : 		required_heading,
; 258  : 		delta_heading,
; 259  : 		current_velocity,
; 260  : 		new_velocity;
; 261  : 
; 262  : 	raw = (ship_vehicle *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 263  : 
; 264  : 	//
; 265  : 	// abort if mobile is not moving (i.e. landed, or dead)
; 266  : 	//
; 267  : 
; 268  : 	if (!get_local_entity_int_value (en, INT_TYPE_MOBILE_MOVING))

  00015	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00019	74 0d		 je	 SHORT $LN12@ship_vehic
  0001b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00026	eb 20		 jmp	 SHORT $LN13@ship_vehic
$LN12@ship_vehic:
  00028	68 0c 01 00 00	 push	 268			; 0000010cH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00038	52		 push	 edx
  00039	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003e	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN13@ship_vehic:
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	85 c0		 test	 eax, eax
  0004f	74 0c		 je	 SHORT $LN14@ship_vehic
  00051	c7 85 50 ff ff
	ff 8e 00 00 00	 mov	 DWORD PTR tv77[ebp], 142 ; 0000008eH
  0005b	eb 20		 jmp	 SHORT $LN15@ship_vehic
$LN14@ship_vehic:
  0005d	68 0c 01 00 00	 push	 268			; 0000010cH
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00073	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv77[ebp], 0
$LN15@ship_vehic:
  0007d	68 8e 00 00 00	 push	 142			; 0000008eH
  00082	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00085	52		 push	 edx
  00086	69 85 54 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv70[ebp], 1116
  00090	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv77[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	75 05		 jne	 SHORT $LN2@ship_vehic

; 269  : 	{
; 270  : 
; 271  : 		return;

  000a3	e9 2a 08 00 00	 jmp	 $LN1@ship_vehic
$LN2@ship_vehic:

; 272  : 	}
; 273  : 
; 274  : 	//
; 275  : 	// abort if the mobile has no PRIMARY guide (also stops ships from moving if just engaging)
; 276  : 	//
; 277  : 
; 278  : 	guide = get_local_entity_primary_guide (en);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?get_local_entity_primary_guide@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_guide
  000b1	89 45 f8	 mov	 DWORD PTR _guide$[ebp], eax

; 279  : 
; 280  : 	if (!guide)

  000b4	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000b8	75 05		 jne	 SHORT $LN3@ship_vehic

; 281  : 	{
; 282  : 		return;

  000ba	e9 13 08 00 00	 jmp	 $LN1@ship_vehic
$LN3@ship_vehic:

; 283  : 	}
; 284  : 
; 285  : 	current_waypoint = get_local_entity_parent (guide, LIST_TYPE_CURRENT_WAYPOINT);

  000bf	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000c3	74 0d		 je	 SHORT $LN16@ship_vehic
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv93[ebp], ecx
  000d0	eb 24		 jmp	 SHORT $LN17@ship_vehic
$LN16@ship_vehic:
  000d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  000d8	83 c2 2f	 add	 edx, 47			; 0000002fH
  000db	52		 push	 edx
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ec	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN17@ship_vehic:
  000f6	b9 01 00 00 00	 mov	 ecx, 1
  000fb	85 c9		 test	 ecx, ecx
  000fd	74 0c		 je	 SHORT $LN18@ship_vehic
  000ff	c7 85 50 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv133[ebp], 9
  00109	eb 24		 jmp	 SHORT $LN19@ship_vehic
$LN18@ship_vehic:
  0010b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00111	83 c2 2f	 add	 edx, 47			; 0000002fH
  00114	52		 push	 edx
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00125	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN19@ship_vehic:
  0012f	6a 09		 push	 9
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  00134	51		 push	 ecx
  00135	69 95 54 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv93[ebp], 180
  0013f	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv133[ebp]
  00145	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0014c	ff d1		 call	 ecx
  0014e	89 45 f4	 mov	 DWORD PTR _current_waypoint$[ebp], eax

; 286  : 
; 287  : 	ASSERT (current_waypoint);

  00151	83 7d f4 00	 cmp	 DWORD PTR _current_waypoint$[ebp], 0
  00155	75 18		 jne	 SHORT $LN4@ship_vehic
  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  0015c	83 c0 31	 add	 eax, 49			; 00000031H
  0015f	50		 push	 eax
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GMNHMODA@current_waypoint@
  0016a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@ship_vehic:

; 288  : 
; 289  : 	current_velocity = raw->vh.mob.velocity;

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00172	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  00177	f3 0f 11 45 b0	 movss	 DWORD PTR _current_velocity$[ebp], xmm0

; 290  : 
; 291  : 	//
; 292  : 	// GET WAYPOINT POSITION
; 293  : 	//
; 294  : 
; 295  : 	ship_movement_get_waypoint_position (en, &wp_pos);

  0017c	8d 45 e8	 lea	 eax, DWORD PTR _wp_pos$[ebp]
  0017f	50		 push	 eax
  00180	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ?ship_movement_get_waypoint_position@@YGXPAUENTITY@@PAUVEC3D@@@Z ; ship_movement_get_waypoint_position

; 296  : 
; 297  : 	wp_vec.x = wp_pos.x - raw->vh.mob.position.x;

  00189	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0018c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _wp_pos$[ebp]
  00191	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00196	f3 0f 11 45 dc	 movss	 DWORD PTR _wp_vec$[ebp], xmm0

; 298  : 	wp_vec.y = 0;

  0019b	0f 57 c0	 xorps	 xmm0, xmm0
  0019e	f3 0f 11 45 e0	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 299  : 	wp_vec.z = wp_pos.z - raw->vh.mob.position.z;

  001a3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001a6	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _wp_pos$[ebp+8]
  001ab	f3 0f 5c 40 0c	 subss	 xmm0, DWORD PTR [eax+12]
  001b0	f3 0f 11 45 e4	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0

; 300  : 
; 301  : 	sqr_range = ((wp_vec.x * wp_vec.x) + (wp_vec.z * wp_vec.z));

  001b5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  001ba	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _wp_vec$[ebp]
  001bf	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _wp_vec$[ebp+8]
  001c4	f3 0f 59 4d e4	 mulss	 xmm1, DWORD PTR _wp_vec$[ebp+8]
  001c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  001cd	f3 0f 11 45 c0	 movss	 DWORD PTR _sqr_range$[ebp], xmm0

; 302  : 
; 303  : 	#if DEBUG_MODULE
; 304  : 
; 305  : 	create_vectored_debug_3d_object (&wp_pos, (vec3d *) &raw->vh.mob.attitude [1], OBJECT_3D_RED_ARROW, 0, 0.20);
; 306  : 
; 307  : 	#endif
; 308  : 	
; 309  : 	// ????
; 310  : 	if (fabs (sqr_range) < 1 * CENTIMETRE)

  001d2	51		 push	 ecx
  001d3	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _sqr_range$[ebp]
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  001e2	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv516[ebp]
  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3c23d70a
  001f0	0f 2f 85 54 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv516[ebp]
  001f7	76 1d		 jbe	 SHORT $LN5@ship_vehic

; 311  : 	{
; 312  : 		wp_vec.z = 0;

  001f9	0f 57 c0	 xorps	 xmm0, xmm0
  001fc	f3 0f 11 45 e4	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0

; 313  : 		wp_vec.y = 0;

  00201	0f 57 c0	 xorps	 xmm0, xmm0
  00204	f3 0f 11 45 e0	 movss	 DWORD PTR _wp_vec$[ebp+4], xmm0

; 314  : 		wp_vec.z = 1;

  00209	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00211	f3 0f 11 45 e4	 movss	 DWORD PTR _wp_vec$[ebp+8], xmm0
$LN5@ship_vehic:

; 315  : 	}
; 316  : 
; 317  : 	////////////////////////////////////////
; 318  : 	//
; 319  : 	// angles
; 320  : 	//
; 321  : 	////////////////////////////////////////
; 322  : 
; 323  : 	// heading
; 324  : 
; 325  : 	normalise_3d_vector (&wp_vec);

  00216	8d 45 dc	 lea	 eax, DWORD PTR _wp_vec$[ebp]
  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  0021f	dd d8		 fstp	 ST(0)

; 326  : 
; 327  : 	heading = get_heading_from_attitude_matrix (raw->vh.mob.attitude);

  00221	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00226	d1 e0		 shl	 eax, 1
  00228	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0022b	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  0022f	b8 04 00 00 00	 mov	 eax, 4
  00234	d1 e0		 shl	 eax, 1
  00236	51		 push	 ecx
  00237	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0023c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00241	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00246	d1 e1		 shl	 ecx, 1
  00248	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0024b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  0024f	b9 04 00 00 00	 mov	 ecx, 4
  00254	6b d1 00	 imul	 edx, ecx, 0
  00257	51		 push	 ecx
  00258	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0025d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00262	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00267	d9 5d c4	 fstp	 DWORD PTR _heading$[ebp]

; 328  : 
; 329  : 	required_heading = atan2 (wp_vec.x, wp_vec.z);

  0026a	51		 push	 ecx
  0026b	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _wp_vec$[ebp+8]
  00270	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00275	51		 push	 ecx
  00276	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp_vec$[ebp]
  0027b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00280	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00285	d9 5d b8	 fstp	 DWORD PTR _required_heading$[ebp]

; 330  : 
; 331  : 	{
; 332  : 
; 333  : 		float
; 334  : 			angle,
; 335  : 			range,
; 336  : 			v;
; 337  : 
; 338  : 		range = sqrt (sqr_range);

  00288	51		 push	 ecx
  00289	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _sqr_range$[ebp]
  0028e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00293	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00298	d9 5d a4	 fstp	 DWORD PTR _range$4[ebp]

; 339  : 	
; 340  : 		v = sqrt (0.5 * range * vehicle_database [raw->vh.mob.sub_type].g_max);

  0029b	f3 0f 5a 45 a4	 cvtss2sd xmm0, DWORD PTR _range$4[ebp]
  002a0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002a8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002ab	69 08 bc 00 00
	00		 imul	 ecx, DWORD PTR [eax], 188
  002b1	f3 0f 5a 89 6c
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+108]
  002b9	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  002bd	83 ec 08	 sub	 esp, 8
  002c0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002c5	e8 00 00 00 00	 call	 _sqrt
  002ca	83 c4 08	 add	 esp, 8
  002cd	d9 5d a0	 fstp	 DWORD PTR _v$3[ebp]

; 341  : 
; 342  : 		angle = ((raw->vh.mob.attitude [2][0] * wp_vec.x) + (raw->vh.mob.attitude [2][2] * wp_vec.z));

  002d0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002d5	d1 e0		 shl	 eax, 1
  002d7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002da	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  002de	b8 04 00 00 00	 mov	 eax, 4
  002e3	6b c8 00	 imul	 ecx, eax, 0
  002e6	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  002eb	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _wp_vec$[ebp]
  002f0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002f5	d1 e2		 shl	 edx, 1
  002f7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002fa	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  002fe	ba 04 00 00 00	 mov	 edx, 4
  00303	d1 e2		 shl	 edx, 1
  00305	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  0030a	f3 0f 59 4d e4	 mulss	 xmm1, DWORD PTR _wp_vec$[ebp+8]
  0030f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00313	f3 0f 11 45 a8	 movss	 DWORD PTR _angle$5[ebp], xmm0

; 343  : 
; 344  : 		if (angle < 0.707) // 45 degs.

  00318	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _angle$5[ebp]
  0031d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe69fbe76c8b439
  00325	66 0f 2f c8	 comisd	 xmm1, xmm0
  00329	0f 86 93 01 00
	00		 jbe	 $LN6@ship_vehic

; 345  : 		{
; 346  : 
; 347  : 			// wp behind ship
; 348  : 	
; 349  : 			#if DEBUG_MODULE
; 350  : 		
; 351  : 			debug_log ("SH_MOVE: ship cannot reach wp at vel %f m/s (max v %f), range %f, g %f", raw->vh.mob.velocity, v, range, vehicle_database [raw->vh.mob.sub_type].g_max);
; 352  : 
; 353  : 			#endif
; 354  : 
; 355  : 			new_velocity = bound (v, 0.0, get_local_entity_float_value (guide, FLOAT_TYPE_VELOCITY));

  0032f	f3 0f 5a 45 a0	 cvtss2sd xmm0, DWORD PTR _v$3[ebp]
  00334	0f 57 c9	 xorps	 xmm1, xmm1
  00337	66 0f 2f c8	 comisd	 xmm1, xmm0
  0033b	76 10		 jbe	 SHORT $LN30@ship_vehic
  0033d	0f 57 c0	 xorps	 xmm0, xmm0
  00340	f2 0f 11 85 50
	ff ff ff	 movsd	 QWORD PTR tv267[ebp], xmm0
  00348	e9 63 01 00 00	 jmp	 $LN31@ship_vehic
$LN30@ship_vehic:
  0034d	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00351	74 0d		 je	 SHORT $LN20@ship_vehic
  00353	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  00356	8b 08		 mov	 ecx, DWORD PTR [eax]
  00358	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv228[ebp], ecx
  0035e	eb 24		 jmp	 SHORT $LN21@ship_vehic
$LN20@ship_vehic:
  00360	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00366	83 c2 75	 add	 edx, 117		; 00000075H
  00369	52		 push	 edx
  0036a	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00374	50		 push	 eax
  00375	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0037a	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv228[ebp], 0
$LN21@ship_vehic:
  00384	b9 01 00 00 00	 mov	 ecx, 1
  00389	85 c9		 test	 ecx, ecx
  0038b	74 0c		 je	 SHORT $LN22@ship_vehic
  0038d	c7 85 48 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv236[ebp], 147 ; 00000093H
  00397	eb 24		 jmp	 SHORT $LN23@ship_vehic
$LN22@ship_vehic:
  00399	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  0039f	83 c2 75	 add	 edx, 117		; 00000075H
  003a2	52		 push	 edx
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  003ad	50		 push	 eax
  003ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b3	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv236[ebp], 0
$LN23@ship_vehic:
  003bd	68 93 00 00 00	 push	 147			; 00000093H
  003c2	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  003c5	51		 push	 ecx
  003c6	69 95 4c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv228[ebp], 700
  003d0	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv236[ebp]
  003d6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  003dd	ff d1		 call	 ecx
  003df	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv575[ebp]
  003e5	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _v$3[ebp]
  003ea	0f 2f 85 44 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv575[ebp]
  003f1	0f 86 9c 00 00
	00		 jbe	 $LN28@ship_vehic
  003f7	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  003fb	74 0d		 je	 SHORT $LN24@ship_vehic
  003fd	8b 55 f8	 mov	 edx, DWORD PTR _guide$[ebp]
  00400	8b 02		 mov	 eax, DWORD PTR [edx]
  00402	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv250[ebp], eax
  00408	eb 25		 jmp	 SHORT $LN25@ship_vehic
$LN24@ship_vehic:
  0040a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00410	83 c1 75	 add	 ecx, 117		; 00000075H
  00413	51		 push	 ecx
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00419	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0041f	52		 push	 edx
  00420	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00425	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN25@ship_vehic:
  0042f	b8 01 00 00 00	 mov	 eax, 1
  00434	85 c0		 test	 eax, eax
  00436	74 0c		 je	 SHORT $LN26@ship_vehic
  00438	c7 85 3c ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv258[ebp], 147 ; 00000093H
  00442	eb 25		 jmp	 SHORT $LN27@ship_vehic
$LN26@ship_vehic:
  00444	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  0044a	83 c1 75	 add	 ecx, 117		; 00000075H
  0044d	51		 push	 ecx
  0044e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00453	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00459	52		 push	 edx
  0045a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045f	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], 0
$LN27@ship_vehic:
  00469	68 93 00 00 00	 push	 147			; 00000093H
  0046e	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  00471	50		 push	 eax
  00472	69 8d 40 ff ff
	ff bc 02 00 00	 imul	 ecx, DWORD PTR tv250[ebp], 700
  0047c	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv258[ebp]
  00482	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[ecx+edx*4]
  00489	ff d0		 call	 eax
  0048b	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR tv265[ebp]
  00491	eb 0d		 jmp	 SHORT $LN29@ship_vehic
$LN28@ship_vehic:
  00493	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _v$3[ebp]
  00498	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv265[ebp], xmm0
$LN29@ship_vehic:
  004a0	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv265[ebp]
  004a8	f2 0f 11 85 50
	ff ff ff	 movsd	 QWORD PTR tv267[ebp], xmm0
$LN31@ship_vehic:
  004b0	f2 0f 5a 85 50
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv267[ebp]
  004b8	f3 0f 11 45 ac	 movss	 DWORD PTR _new_velocity$[ebp], xmm0

; 356  : 		}
; 357  : 		else

  004bd	e9 9b 00 00 00	 jmp	 $LN7@ship_vehic
$LN6@ship_vehic:

; 358  : 		{
; 359  : 	
; 360  : 			#if DEBUG_MODULE
; 361  : 		
; 362  : 			debug_log ("SH_MOVE: ship can reach wp at vel %f m/s (max v %f), range %f, g %f", raw->vh.mob.velocity, v, range, vehicle_database [raw->vh.mob.sub_type].g_max);
; 363  : 
; 364  : 			#endif
; 365  : 
; 366  : 			new_velocity = get_local_entity_float_value (guide, FLOAT_TYPE_VELOCITY);

  004c2	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  004c6	74 0d		 je	 SHORT $LN32@ship_vehic
  004c8	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  004cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  004cd	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv275[ebp], ecx
  004d3	eb 27		 jmp	 SHORT $LN33@ship_vehic
$LN32@ship_vehic:
  004d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  004db	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  004e1	52		 push	 edx
  004e2	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ec	50		 push	 eax
  004ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f2	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv275[ebp], 0
$LN33@ship_vehic:
  004fc	b9 01 00 00 00	 mov	 ecx, 1
  00501	85 c9		 test	 ecx, ecx
  00503	74 0c		 je	 SHORT $LN34@ship_vehic
  00505	c7 85 50 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv283[ebp], 147 ; 00000093H
  0050f	eb 27		 jmp	 SHORT $LN35@ship_vehic
$LN34@ship_vehic:
  00511	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00517	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  0051d	52		 push	 edx
  0051e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00523	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00528	50		 push	 eax
  00529	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0052e	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv283[ebp], 0
$LN35@ship_vehic:
  00538	68 93 00 00 00	 push	 147			; 00000093H
  0053d	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  00540	51		 push	 ecx
  00541	69 95 54 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv275[ebp], 700
  0054b	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv283[ebp]
  00551	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00558	ff d1		 call	 ecx
  0055a	d9 5d ac	 fstp	 DWORD PTR _new_velocity$[ebp]
$LN7@ship_vehic:

; 367  : 		}
; 368  : 	}
; 369  : 
; 370  : 	turn_rate = 0.0;

  0055d	0f 57 c0	 xorps	 xmm0, xmm0
  00560	f3 0f 11 45 bc	 movss	 DWORD PTR _turn_rate$[ebp], xmm0

; 371  : 
; 372  : 	if (raw->vh.mob.velocity != 0.0)

  00565	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00568	f3 0f 5a 40 40	 cvtss2sd xmm0, DWORD PTR [eax+64]
  0056d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00575	9f		 lahf
  00576	f6 c4 44	 test	 ah, 68			; 00000044H
  00579	7b 27		 jnp	 SHORT $LN8@ship_vehic

; 373  : 	{
; 374  : 
; 375  : 		turn_rate = fabs (vehicle_database [raw->vh.mob.sub_type].g_max / raw->vh.mob.velocity);

  0057b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0057e	69 08 bc 00 00
	00		 imul	 ecx, DWORD PTR [eax], 188
  00584	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00587	f3 0f 10 81 6c
	00 00 00	 movss	 xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+108]
  0058f	f3 0f 5e 42 40	 divss	 xmm0, DWORD PTR [edx+64]
  00594	51		 push	 ecx
  00595	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0059a	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0059f	d9 5d bc	 fstp	 DWORD PTR _turn_rate$[ebp]
$LN8@ship_vehic:

; 376  : 	}
; 377  : 
; 378  : 	delta_heading = required_heading - heading;

  005a2	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _required_heading$[ebp]
  005a7	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _heading$[ebp]
  005ac	f3 0f 11 45 b4	 movss	 DWORD PTR _delta_heading$[ebp], xmm0

; 379  : 
; 380  : 	if (delta_heading <= -PI)

  005b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0490fdb
  005b9	0f 2f 45 b4	 comiss	 xmm0, DWORD PTR _delta_heading$[ebp]
  005bd	72 12		 jb	 SHORT $LN9@ship_vehic

; 381  : 	{
; 382  : 
; 383  : 		delta_heading += PI2;

  005bf	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  005c4	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  005cc	f3 0f 11 45 b4	 movss	 DWORD PTR _delta_heading$[ebp], xmm0
$LN9@ship_vehic:

; 384  : 	}
; 385  : 
; 386  : 	if (delta_heading >= PI)

  005d1	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  005d6	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@40490fdb
  005dd	72 12		 jb	 SHORT $LN10@ship_vehic

; 387  : 	{
; 388  : 
; 389  : 		delta_heading -= PI2;

  005df	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  005e4	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40c90fdb
  005ec	f3 0f 11 45 b4	 movss	 DWORD PTR _delta_heading$[ebp], xmm0
$LN10@ship_vehic:

; 390  : 	}
; 391  : 
; 392  : 	delta_heading = bound (delta_heading, -turn_rate, turn_rate);

  005f1	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _turn_rate$[ebp]
  005f6	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005fd	0f 2f 45 b4	 comiss	 xmm0, DWORD PTR _delta_heading$[ebp]
  00601	76 16		 jbe	 SHORT $LN38@ship_vehic
  00603	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _turn_rate$[ebp]
  00608	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0060f	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv316[ebp], xmm0
  00617	eb 37		 jmp	 SHORT $LN39@ship_vehic
$LN38@ship_vehic:
  00619	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  0061e	0f 2f 45 bc	 comiss	 xmm0, DWORD PTR _turn_rate$[ebp]
  00622	76 0f		 jbe	 SHORT $LN36@ship_vehic
  00624	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _turn_rate$[ebp]
  00629	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv315[ebp], xmm0
  00631	eb 0d		 jmp	 SHORT $LN37@ship_vehic
$LN36@ship_vehic:
  00633	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  00638	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv315[ebp], xmm0
$LN37@ship_vehic:
  00640	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv315[ebp]
  00648	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv316[ebp], xmm0
$LN39@ship_vehic:
  00650	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv316[ebp]
  00658	f3 0f 11 45 b4	 movss	 DWORD PTR _delta_heading$[ebp], xmm0

; 393  : 
; 394  : 	heading += delta_heading * get_entity_movement_delta_time ();

  0065d	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_heading$[ebp]
  00662	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0066a	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _heading$[ebp]
  0066f	f3 0f 11 45 c4	 movss	 DWORD PTR _heading$[ebp], xmm0

; 395  : 
; 396  : 	pitch = 0.0;

  00674	0f 57 c0	 xorps	 xmm0, xmm0
  00677	f3 0f 11 45 c8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 397  : 
; 398  : 	roll = 0.0;

  0067c	0f 57 c0	 xorps	 xmm0, xmm0
  0067f	f3 0f 11 45 cc	 movss	 DWORD PTR _roll$[ebp], xmm0

; 399  : 
; 400  : 	////////////////////////////////////////
; 401  : 	//
; 402  : 	// attitude
; 403  : 	//
; 404  : 	////////////////////////////////////////
; 405  : 
; 406  : 	get_3d_transformation_matrix (raw->vh.mob.attitude, heading, rad (pitch), rad (roll));

  00684	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _roll$[ebp]
  00689	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00691	51		 push	 ecx
  00692	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00697	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0069c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  006a4	51		 push	 ecx
  006a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006aa	51		 push	 ecx
  006ab	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  006b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006b8	83 c0 10	 add	 eax, 16			; 00000010H
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 407  : 
; 408  : 	////////////////////////////////////////
; 409  : 	//
; 410  : 	// velocity
; 411  : 	//
; 412  : 	////////////////////////////////////////
; 413  : 
; 414  : 	{
; 415  : 		float
; 416  : 			maximum_acceleration,
; 417  : 			required_acceleration;
; 418  : 
; 419  : 		required_acceleration = (new_velocity - raw->vh.mob.velocity);

  006c1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006c4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _new_velocity$[ebp]
  006c9	f3 0f 5c 40 40	 subss	 xmm0, DWORD PTR [eax+64]
  006ce	f3 0f 11 45 98	 movss	 DWORD PTR _required_acceleration$1[ebp], xmm0

; 420  : 
; 421  : 		maximum_acceleration = get_local_entity_float_value (en, FLOAT_TYPE_MAX_ACCELERATION);

  006d3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  006d7	74 0d		 je	 SHORT $LN40@ship_vehic
  006d9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  006de	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv340[ebp], ecx
  006e4	eb 27		 jmp	 SHORT $LN41@ship_vehic
$LN40@ship_vehic:
  006e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  006ec	81 c2 b7 00 00
	00		 add	 edx, 183		; 000000b7H
  006f2	52		 push	 edx
  006f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  006f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006fd	50		 push	 eax
  006fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00703	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv340[ebp], 0
$LN41@ship_vehic:
  0070d	b9 01 00 00 00	 mov	 ecx, 1
  00712	85 c9		 test	 ecx, ecx
  00714	74 0c		 je	 SHORT $LN42@ship_vehic
  00716	c7 85 50 ff ff
	ff 4c 00 00 00	 mov	 DWORD PTR tv348[ebp], 76 ; 0000004cH
  00720	eb 27		 jmp	 SHORT $LN43@ship_vehic
$LN42@ship_vehic:
  00722	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00728	81 c2 b7 00 00
	00		 add	 edx, 183		; 000000b7H
  0072e	52		 push	 edx
  0072f	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00734	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00739	50		 push	 eax
  0073a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073f	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv348[ebp], 0
$LN43@ship_vehic:
  00749	6a 4c		 push	 76			; 0000004cH
  0074b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0074e	51		 push	 ecx
  0074f	69 95 54 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv340[ebp], 700
  00759	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv348[ebp]
  0075f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00766	ff d1		 call	 ecx
  00768	d9 5d 9c	 fstp	 DWORD PTR _maximum_acceleration$2[ebp]

; 422  : 		
; 423  : 		raw->vh.mob.velocity += min (required_acceleration, maximum_acceleration) * get_entity_movement_delta_time ();

  0076b	8d 45 9c	 lea	 eax, DWORD PTR _maximum_acceleration$2[ebp]
  0076e	50		 push	 eax
  0076f	8d 4d 98	 lea	 ecx, DWORD PTR _required_acceleration$1[ebp]
  00772	51		 push	 ecx
  00773	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00778	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0077c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00784	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00787	f3 0f 58 42 40	 addss	 xmm0, DWORD PTR [edx+64]
  0078c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0078f	f3 0f 11 40 40	 movss	 DWORD PTR [eax+64], xmm0

; 424  : 	}
; 425  : 
; 426  : 	////////////////////////////////////////
; 427  : 	//
; 428  : 	// position
; 429  : 	//
; 430  : 	////////////////////////////////////////
; 431  : 
; 432  : 	new_pos.x = raw->vh.mob.position.x + (raw->vh.mob.velocity * raw->vh.mob.zv.x * get_entity_movement_delta_time ());

  00794	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00797	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0079a	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  0079f	f3 0f 59 41 28	 mulss	 xmm0, DWORD PTR [ecx+40]
  007a4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  007ac	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  007af	f3 0f 58 42 04	 addss	 xmm0, DWORD PTR [edx+4]
  007b4	f3 0f 11 45 d0	 movss	 DWORD PTR _new_pos$[ebp], xmm0

; 433  : 	new_pos.y = 0.0;

  007b9	0f 57 c0	 xorps	 xmm0, xmm0
  007bc	f3 0f 11 45 d4	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 434  : 	new_pos.z = raw->vh.mob.position.z + (raw->vh.mob.velocity * raw->vh.mob.zv.z * get_entity_movement_delta_time ());

  007c1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007c4	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  007c7	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  007cc	f3 0f 59 41 30	 mulss	 xmm0, DWORD PTR [ecx+48]
  007d1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  007d9	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  007dc	f3 0f 58 42 0c	 addss	 xmm0, DWORD PTR [edx+12]
  007e1	f3 0f 11 45 d8	 movss	 DWORD PTR _new_pos$[ebp+8], xmm0

; 435  : 
; 436  : 	bound_position_to_map_volume (&new_pos);

  007e6	8d 45 d0	 lea	 eax, DWORD PTR _new_pos$[ebp]
  007e9	50		 push	 eax
  007ea	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 437  : 
; 438  : 	//
; 439  : 	// Calculate motion vector for view system
; 440  : 	//
; 441  : 
; 442  : 	raw->vh.mob.motion_vector.x = (new_pos.x - raw->vh.mob.position.x) * get_one_over_delta_time ();

  007ef	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007f2	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _new_pos$[ebp]
  007f7	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  007fc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_one_over_delta_time@@3MA
  00804	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00807	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0

; 443  : 	raw->vh.mob.motion_vector.y = 0.0;

  0080c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0080f	0f 57 c0	 xorps	 xmm0, xmm0
  00812	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 444  : 	raw->vh.mob.motion_vector.z = (new_pos.z - raw->vh.mob.position.z) * get_one_over_delta_time ();

  00817	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0081a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _new_pos$[ebp+8]
  0081f	f3 0f 5c 40 0c	 subss	 xmm0, DWORD PTR [eax+12]
  00824	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_one_over_delta_time@@3MA
  0082c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0082f	f3 0f 11 41 3c	 movss	 DWORD PTR [ecx+60], xmm0

; 445  : 
; 446  : 	new_pos.y = 0.0;

  00834	0f 57 c0	 xorps	 xmm0, xmm0
  00837	f3 0f 11 45 d4	 movss	 DWORD PTR _new_pos$[ebp+4], xmm0

; 447  : 
; 448  : 	set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &new_pos);

  0083c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00840	74 0d		 je	 SHORT $LN44@ship_vehic
  00842	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00845	8b 08		 mov	 ecx, DWORD PTR [eax]
  00847	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv456[ebp], ecx
  0084d	eb 27		 jmp	 SHORT $LN45@ship_vehic
$LN44@ship_vehic:
  0084f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00855	81 c2 d2 00 00
	00		 add	 edx, 210		; 000000d2H
  0085b	52		 push	 edx
  0085c	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00861	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00866	50		 push	 eax
  00867	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0086c	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv456[ebp], 0
$LN45@ship_vehic:
  00876	b9 01 00 00 00	 mov	 ecx, 1
  0087b	85 c9		 test	 ecx, ecx
  0087d	74 0c		 je	 SHORT $LN46@ship_vehic
  0087f	c7 85 50 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv464[ebp], 8
  00889	eb 27		 jmp	 SHORT $LN47@ship_vehic
$LN46@ship_vehic:
  0088b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ship_vehicle_movement@@YGXPAUENTITY@@@Z@4JA
  00891	81 c2 d2 00 00
	00		 add	 edx, 210		; 000000d2H
  00897	52		 push	 edx
  00898	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@KMEJFOHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0089d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  008a2	50		 push	 eax
  008a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008a8	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv464[ebp], 0
$LN47@ship_vehic:
  008b2	8d 4d d0	 lea	 ecx, DWORD PTR _new_pos$[ebp]
  008b5	51		 push	 ecx
  008b6	6a 08		 push	 8
  008b8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  008bb	52		 push	 edx
  008bc	6b 85 54 ff ff
	ff 60		 imul	 eax, DWORD PTR tv456[ebp], 96
  008c3	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv464[ebp]
  008c9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  008d0	ff d2		 call	 edx
$LN1@ship_vehic:

; 449  : }

  008d2	5f		 pop	 edi
  008d3	5e		 pop	 esi
  008d4	5b		 pop	 ebx
  008d5	8b e5		 mov	 esp, ebp
  008d7	5d		 pop	 ebp
  008d8	c2 04 00	 ret	 4
?ship_vehicle_movement@@YGXPAUENTITY@@@Z ENDP		; ship_vehicle_movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sqrt@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sqrt@@YGMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	return (_CSTD sqrtf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sqrtf
  00019	83 c4 04	 add	 esp, 4

; 296  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sqrt@@YGMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  :             return (float)sqrt(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sqrt
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 761  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
END
