; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\update.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A ; update_function_list
PUBLIC	?update_counter@@3HA				; update_counter
_BSS	SEGMENT
?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A DD 01H DUP (?) ; update_function_list
?update_counter@@3HA DD 01H DUP (?)			; update_counter
_BSS	ENDS
PUBLIC	?initialise_update_function_list@@YGXXZ		; initialise_update_function_list
PUBLIC	?deinitialise_update_function_list@@YGXXZ	; deinitialise_update_function_list
PUBLIC	?add_update_function@@YGHP6GXXZMM@Z		; add_update_function
PUBLIC	?remove_update_function@@YGHP6GXXZ@Z		; remove_update_function
PUBLIC	?update_update_functions@@YGXXZ			; update_update_functions
PUBLIC	?__LINE__Var@?0??reset_update_function_list@@YGXXZ@4JA ; `reset_update_function_list'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@DDCJOLIB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BE@CDLNONBE@update_counter?5?$DN?$DN?50@	; `string'
PUBLIC	??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0DA@NDNKLGIC@UPDATE?3?5WARNING?5FUNCTION?5ALREAD@ ; `string'
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0DA@NDNKLGIC@UPDATE?3?5WARNING?5FUNCTION?5ALREAD@
CONST	SEGMENT
??_C@_0DA@NDNKLGIC@UPDATE?3?5WARNING?5FUNCTION?5ALREAD@ DB 'UPDATE: WARNI'
	DB	'NG FUNCTION ALREADY ON UPDATE LIST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ DB 'ASSERT %s (%s'
	DB	':%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CDLNONBE@update_counter?5?$DN?$DN?50@
CONST	SEGMENT
??_C@_0BE@CDLNONBE@update_counter?5?$DN?$DN?50@ DB 'update_counter == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DDCJOLIB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0DF@DDCJOLIB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\update.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_update_function_list@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_update_function_list@@YGXXZ@4JA DD 084H ; `reset_update_function_list'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\update.c
;	COMDAT ?reset_update_function_list@@YGXXZ
_TEXT	SEGMENT
?reset_update_function_list@@YGXXZ PROC			; reset_update_function_list, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@reset_upda:

; 133  : 
; 134  : 	#if UPDATE_FUNCTION_DEBUG
; 135  : 
; 136  : 	debug_log ("UPDATE FUNCTION: reset update function list");
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	while (update_function_list)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A, 0 ; update_function_list
  00010	74 0f		 je	 SHORT $LN3@reset_upda

; 141  : 	{
; 142  : 
; 143  : 		remove_update_function (update_function_list->function);

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A ; update_function_list
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?remove_update_function@@YGHP6GXXZ@Z ; remove_update_function

; 144  : 	}

  0001f	eb e8		 jmp	 SHORT $LN2@reset_upda
$LN3@reset_upda:

; 145  : 
; 146  : 	debug_assert (update_counter == 0);

  00021	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?update_counter@@3HA, 0 ; update_counter
  00028	74 20		 je	 SHORT $LN4@reset_upda
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_update_function_list@@YGXXZ@4JA
  0002f	83 c0 0e	 add	 eax, 14			; 0000000eH
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DDCJOLIB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CDLNONBE@update_counter?5?$DN?$DN?50@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00042	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00047	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@reset_upda:

; 147  : 
; 148  : 	update_function_list = NULL;

  0004a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A, 0 ; update_function_list

; 149  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?reset_update_function_list@@YGXXZ ENDP			; reset_update_function_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\update.c
;	COMDAT ?update_update_functions@@YGXXZ
_TEXT	SEGMENT
_update_function$ = -4					; size = 4
?update_update_functions@@YGXXZ PROC			; update_update_functions, COMDAT

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 283  : 
; 284  : 	update_function_data_type
; 285  : 		*update_function;
; 286  : 
; 287  : 	update_function = update_function_list;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A ; update_function_list
  0000e	89 45 fc	 mov	 DWORD PTR _update_function$[ebp], eax
$LN2@update_upd:

; 288  : 
; 289  : 	while (update_function)

  00011	83 7d fc 00	 cmp	 DWORD PTR _update_function$[ebp], 0
  00015	74 47		 je	 SHORT $LN3@update_upd

; 290  : 	{
; 291  : 
; 292  : 		update_function->last_update_timer -= get_delta_time ();

  00017	8b 45 fc	 mov	 eax, DWORD PTR _update_function$[ebp]
  0001a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0001f	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _update_function$[ebp]
  0002a	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 293  : 
; 294  : 		if (update_function->last_update_timer <= 0.0)

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _update_function$[ebp]
  00032	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00037	0f 57 c9	 xorps	 xmm1, xmm1
  0003a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0003e	72 13		 jb	 SHORT $LN4@update_upd

; 295  : 		{
; 296  : 
; 297  : 			#if UPDATE_FUNCTION_DEBUG >= 2
; 298  : 
; 299  : 			debug_log ("UPDATE FUNCTION: updating function %d, last updated %d, sleep time %d", update_function->function, update_function->last_update_timer, update_function->sleep_time);
; 300  : 
; 301  : 			#endif
; 302  : 
; 303  : 			update_function->function ();

  00040	8b 45 fc	 mov	 eax, DWORD PTR _update_function$[ebp]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	ff d1		 call	 ecx

; 304  : 
; 305  : 			update_function->last_update_timer = update_function->sleep_time;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _update_function$[ebp]
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _update_function$[ebp]
  0004d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00050	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN4@update_upd:

; 306  : 		}
; 307  : 
; 308  : 		update_function = update_function->next;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _update_function$[ebp]
  00056	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00059	89 4d fc	 mov	 DWORD PTR _update_function$[ebp], ecx

; 309  : 	}

  0005c	eb b3		 jmp	 SHORT $LN2@update_upd
$LN3@update_upd:

; 310  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?update_update_functions@@YGXXZ ENDP			; update_update_functions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\update.c
;	COMDAT ?remove_update_function@@YGHP6GXXZ@Z
_TEXT	SEGMENT
_update_function$ = -8					; size = 4
_prev_update_function$ = -4				; size = 4
_function$ = 8						; size = 4
?remove_update_function@@YGHP6GXXZ@Z PROC		; remove_update_function, COMDAT

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 224  : 
; 225  : 	update_function_data_type
; 226  : 		*prev_update_function,
; 227  : 		*update_function;
; 228  : 
; 229  : 	if (!function)

  00009	83 7d 08 00	 cmp	 DWORD PTR _function$[ebp], 0
  0000d	75 04		 jne	 SHORT $LN4@remove_upd

; 230  : 	{
; 231  : 
; 232  : 		return FALSE;

  0000f	33 c0		 xor	 eax, eax
  00011	eb 62		 jmp	 SHORT $LN1@remove_upd
$LN4@remove_upd:

; 233  : 	}
; 234  : 
; 235  : 	update_function = update_function_list;

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A ; update_function_list
  00018	89 45 f8	 mov	 DWORD PTR _update_function$[ebp], eax

; 236  : 
; 237  : 	prev_update_function = NULL;

  0001b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _prev_update_function$[ebp], 0
$LN2@remove_upd:

; 238  : 
; 239  : 	while (update_function)

  00022	83 7d f8 00	 cmp	 DWORD PTR _update_function$[ebp], 0
  00026	74 4b		 je	 SHORT $LN3@remove_upd

; 240  : 	{
; 241  : 
; 242  : 		if (update_function->function == function)

  00028	8b 45 f8	 mov	 eax, DWORD PTR _update_function$[ebp]
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 4d 08	 cmp	 ecx, DWORD PTR _function$[ebp]
  00030	75 30		 jne	 SHORT $LN5@remove_upd

; 243  : 		{
; 244  : 
; 245  : 			if (prev_update_function)

  00032	83 7d fc 00	 cmp	 DWORD PTR _prev_update_function$[ebp], 0
  00036	74 0e		 je	 SHORT $LN6@remove_upd

; 246  : 			{
; 247  : 
; 248  : 				prev_update_function->next = update_function->next;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _prev_update_function$[ebp]
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _update_function$[ebp]
  0003e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00041	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 249  : 			}
; 250  : 			else

  00044	eb 0c		 jmp	 SHORT $LN7@remove_upd
$LN6@remove_upd:

; 251  : 			{
; 252  : 
; 253  : 				update_function_list = update_function->next;

  00046	8b 45 f8	 mov	 eax, DWORD PTR _update_function$[ebp]
  00049	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A, ecx ; update_function_list
$LN7@remove_upd:

; 254  : 			}
; 255  : 
; 256  : 			#if UPDATE_FUNCTION_DEBUG
; 257  : 
; 258  : 			update_counter --;
; 259  : 		
; 260  : 			debug_log ("UPDATE FUNCTION: remove function %d, counter = %d", update_function, update_counter);
; 261  : 		
; 262  : 			#endif
; 263  : 
; 264  : 			free_mem (update_function);

  00052	8b 45 f8	 mov	 eax, DWORD PTR _update_function$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 265  : 
; 266  : 			return TRUE;

  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	eb 13		 jmp	 SHORT $LN1@remove_upd
$LN5@remove_upd:

; 267  : 		}
; 268  : 
; 269  : 		prev_update_function = update_function;

  00062	8b 45 f8	 mov	 eax, DWORD PTR _update_function$[ebp]
  00065	89 45 fc	 mov	 DWORD PTR _prev_update_function$[ebp], eax

; 270  : 
; 271  : 		update_function = update_function->next;

  00068	8b 45 f8	 mov	 eax, DWORD PTR _update_function$[ebp]
  0006b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0006e	89 4d f8	 mov	 DWORD PTR _update_function$[ebp], ecx

; 272  : 	}

  00071	eb af		 jmp	 SHORT $LN2@remove_upd
$LN3@remove_upd:

; 273  : 
; 274  : 	return FALSE;

  00073	33 c0		 xor	 eax, eax
$LN1@remove_upd:

; 275  : }

  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
?remove_update_function@@YGHP6GXXZ@Z ENDP		; remove_update_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\update.c
;	COMDAT ?add_update_function@@YGHP6GXXZMM@Z
_TEXT	SEGMENT
_unique_in_list_flag$ = -12				; size = 4
_new_update_function$ = -8				; size = 4
_list_ptr$ = -4						; size = 4
_function$ = 8						; size = 4
_sleep_time$ = 12					; size = 4
_offset_time$ = 16					; size = 4
?add_update_function@@YGHP6GXXZMM@Z PROC		; add_update_function, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 157  : 
; 158  : 	update_function_data_type
; 159  : 		*list_ptr,
; 160  : 		*new_update_function;
; 161  : 
; 162  : 	int
; 163  : 		unique_in_list_flag = TRUE;

  00009	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _unique_in_list_flag$[ebp], 1

; 164  : 
; 165  : 	if (!function)

  00010	83 7d 08 00	 cmp	 DWORD PTR _function$[ebp], 0
  00014	75 04		 jne	 SHORT $LN4@add_update

; 166  : 	{
; 167  : 
; 168  : 		return FALSE;

  00016	33 c0		 xor	 eax, eax
  00018	eb 7a		 jmp	 SHORT $LN1@add_update
$LN4@add_update:

; 169  : 	}
; 170  : 
; 171  : 	#if UPDATE_FUNCTION_DEBUG
; 172  : 
; 173  : 	update_counter ++;
; 174  : 
; 175  : 	debug_log ("UPDATE FUNCTION: add function %d count = %d", function, update_counter);
; 176  : 
; 177  : 	#endif
; 178  : 
; 179  : 	list_ptr = update_function_list;

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A ; update_function_list
  0001f	89 45 fc	 mov	 DWORD PTR _list_ptr$[ebp], eax
$LN2@add_update:

; 180  : 
; 181  : 	//
; 182  : 	// Check for duplications, BUT only warn on them
; 183  : 	//
; 184  : 
; 185  : 	while (list_ptr)

  00022	83 7d fc 00	 cmp	 DWORD PTR _list_ptr$[ebp], 0
  00026	74 29		 je	 SHORT $LN3@add_update

; 186  : 	{
; 187  : 
; 188  : 		if (list_ptr->function == function)

  00028	8b 45 fc	 mov	 eax, DWORD PTR _list_ptr$[ebp]
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 4d 08	 cmp	 ecx, DWORD PTR _function$[ebp]
  00030	75 14		 jne	 SHORT $LN5@add_update

; 189  : 		{
; 190  : 
; 191  : 			debug_log ("UPDATE: WARNING FUNCTION ALREADY ON UPDATE LIST");

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NDNKLGIC@UPDATE?3?5WARNING?5FUNCTION?5ALREAD@
  00037	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0003c	83 c4 04	 add	 esp, 4

; 192  : 
; 193  : 			unique_in_list_flag = FALSE;

  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _unique_in_list_flag$[ebp], 0
$LN5@add_update:

; 194  : 		}
; 195  : 
; 196  : 		list_ptr = list_ptr->next;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _list_ptr$[ebp]
  00049	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004c	89 4d fc	 mov	 DWORD PTR _list_ptr$[ebp], ecx

; 197  : 	}

  0004f	eb d1		 jmp	 SHORT $LN2@add_update
$LN3@add_update:

; 198  : 
; 199  : 	//
; 200  : 	//
; 201  : 	//
; 202  : 
; 203  : 	new_update_function = (update_function_data_type *) malloc_heap_mem (sizeof (update_function_data_type));

  00051	6a 10		 push	 16			; 00000010H
  00053	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00058	89 45 f8	 mov	 DWORD PTR _new_update_function$[ebp], eax

; 204  : 
; 205  : 	new_update_function->function = function;

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _new_update_function$[ebp]
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _function$[ebp]
  00061	89 08		 mov	 DWORD PTR [eax], ecx

; 206  : 
; 207  : 	new_update_function->sleep_time = sleep_time;

  00063	8b 45 f8	 mov	 eax, DWORD PTR _new_update_function$[ebp]
  00066	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _sleep_time$[ebp]
  0006b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 208  : 
; 209  : 	new_update_function->last_update_timer = offset_time;

  00070	8b 45 f8	 mov	 eax, DWORD PTR _new_update_function$[ebp]
  00073	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _offset_time$[ebp]
  00078	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 210  : 
; 211  : 	new_update_function->next = update_function_list;

  0007d	8b 45 f8	 mov	 eax, DWORD PTR _new_update_function$[ebp]
  00080	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A ; update_function_list
  00086	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 212  : 
; 213  : 	update_function_list = new_update_function;

  00089	8b 45 f8	 mov	 eax, DWORD PTR _new_update_function$[ebp]
  0008c	a3 00 00 00 00	 mov	 DWORD PTR ?update_function_list@@3PAUUPDATE_FUNCTION_DATA_TYPE@@A, eax ; update_function_list

; 214  : 
; 215  : 	return unique_in_list_flag;

  00091	8b 45 f4	 mov	 eax, DWORD PTR _unique_in_list_flag$[ebp]
$LN1@add_update:

; 216  : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 0c 00	 ret	 12			; 0000000cH
?add_update_function@@YGHP6GXXZMM@Z ENDP		; add_update_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\update.c
;	COMDAT ?deinitialise_update_function_list@@YGXXZ
_TEXT	SEGMENT
?deinitialise_update_function_list@@YGXXZ PROC		; deinitialise_update_function_list, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 117  : 
; 118  : 	#if UPDATE_FUNCTION_DEBUG
; 119  : 
; 120  : 	debug_log ("UPDATE FUNCTION: deinitialise");
; 121  : 
; 122  : 	#endif
; 123  : 
; 124  : 	reset_update_function_list ();

  00009	e8 00 00 00 00	 call	 ?reset_update_function_list@@YGXXZ ; reset_update_function_list

; 125  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?deinitialise_update_function_list@@YGXXZ ENDP		; deinitialise_update_function_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\update.c
;	COMDAT ?initialise_update_function_list@@YGXXZ
_TEXT	SEGMENT
?initialise_update_function_list@@YGXXZ PROC		; initialise_update_function_list, COMDAT

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 99   : 
; 100  : 	#if UPDATE_FUNCTION_DEBUG
; 101  : 
; 102  : 	debug_log ("UPDATE FUNCTION: initialise");
; 103  : 
; 104  : 	#endif
; 105  : 
; 106  : 	update_counter = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?update_counter@@3HA, 0 ; update_counter

; 107  : 
; 108  : 	reset_update_function_list ();

  00013	e8 00 00 00 00	 call	 ?reset_update_function_list@@YGXXZ ; reset_update_function_list

; 109  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?initialise_update_function_list@@YGXXZ ENDP		; initialise_update_function_list
_TEXT	ENDS
END
