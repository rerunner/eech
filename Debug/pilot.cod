; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\pilot\pilot.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?pilot_entity@@3PAUENTITY@@A			; pilot_entity
PUBLIC	?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
_BSS	SEGMENT
?pilot_entity@@3PAUENTITY@@A DD 01H DUP (?)		; pilot_entity
?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A DB 0aa0H DUP (?) ; pilot_high_score_table
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?set_pilot_entity@@YGXPAUENTITY@@@Z		; set_pilot_entity
PUBLIC	?create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z ; create_new_pilot_entity
PUBLIC	?create_server_pilot@@YGXXZ			; create_server_pilot
PUBLIC	?create_client_pilot@@YGXXZ			; create_client_pilot
PUBLIC	?get_player_task@@YGPAUENTITY@@PAU1@@Z		; get_player_task
PUBLIC	?send_pilot_quit_message@@YGXPAUENTITY@@@Z	; send_pilot_quit_message
PUBLIC	?initialise_pilot_high_score_table@@YGXXZ	; initialise_pilot_high_score_table
PUBLIC	?update_pilot_high_score_table@@YGHXZ		; update_pilot_high_score_table
PUBLIC	?draw_high_score_table@@YGXXZ			; draw_high_score_table
PUBLIC	?draw_high_score_table_to_ui_object_list@@YGXPAUUI_OBJECT@@0@Z ; draw_high_score_table_to_ui_object_list
PUBLIC	?get_high_score_table_entry@@YGPBDHPAH0@Z	; get_high_score_table_entry
PUBLIC	?get_high_score_table_first_name@@YGPBDXZ	; get_high_score_table_first_name
PUBLIC	?draw_special_restart_text@@YGXXZ		; draw_special_restart_text
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA ; `set_pilot_entity'::`1'::__LINE__Var
PUBLIC	??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CC@LGMEOGFL@PILOT?3?5Setting?5pilot_entity?5to?5@ ; `string'
PUBLIC	??_C@_0BF@FLODHLAO@pilot_entity?5?$DN?$DN?5NULL@ ; `string'
PUBLIC	??_C@_0DA@NDIHHFDN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	??_C@_06HAFCIKEH@ENGAGE@			; `string'
PUBLIC	??_C@_0CE@FONBLHAF@PILOT?3?5Setting?5pilot_entity?5to?5@ ; `string'
PUBLIC	??_C@_0N@KIOGEKAM@pilot_entity@			; `string'
PUBLIC	?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA ; `send_pilot_joined_message'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@KEJDMCGB@player?5connected@		; `string'
PUBLIC	??_C@_06LEKBLMMB@joined@			; `string'
PUBLIC	??_C@_0N@LNJPAFMG@?$CFs?5?$CFs?5?9?51?5?$CFs@	; `string'
PUBLIC	??_C@_0BC@NNHBMJMI@players?5connected@		; `string'
PUBLIC	??_C@_0O@BMHDMOIB@?$CFs?5?$CFs?5?9?5?$CFd?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA ; `send_pilot_quit_message'::`1'::__LINE__Var
PUBLIC	??_C@_04KNNLNNGO@quit@				; `string'
PUBLIC	??_C@_0O@IAAMALKI@Server?5paused@		; `string'
PUBLIC	?__LINE__Var@?0??create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z@4JA ; `create_new_pilot_entity'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_04MEMAJGDJ@name@				; `string'
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	?__LINE__Var@?0??create_server_pilot@@YGXXZ@4JA	; `create_server_pilot'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??create_client_pilot@@YGXXZ@4JA	; `create_client_pilot'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@HDFJMCJJ@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA ; `get_session_pilot_count'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA ; `get_player_task'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA ; `update_pilot_high_score_table'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@KHEBNCJD@PILOT?3?5Updating?5High?5Score?5Tabl@ ; `string'
PUBLIC	??_C@_0DA@NOLCJCPA@PILOT?3?5Adding?5?$CFs?5?$CIkills?5?$CFd?$CJ?5to?5@ ; `string'
PUBLIC	??_C@_0BE@BIALEBEE@count?5?$DN?$DN?5num_pilots@	; `string'
PUBLIC	??_C@_07IFNDKGJF@?$CFs?5?3?5?$CFd@		; `string'
PUBLIC	??_C@_06GBEGMGE@?$CFs?3?5?$CFd@			; `string'
PUBLIC	?__LINE__Var@?0??get_high_score_table_entry@@YGPBDHPAH0@Z@4JA ; `get_high_score_table_entry'::`1'::__LINE__Var
PUBLIC	??_C@_04JGNFNGGK@side@				; `string'
PUBLIC	??_C@_05IMADOEDD@kills@				; `string'
PUBLIC	??_C@_0CM@PIHALMDP@?$CIindex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIindex?5?$DM?5NUM_TA@ ; `string'
PUBLIC	??_C@_0M@NBKIHJIE@PRESS?5SPACE@			; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3fe54fdf3b645a1d
PUBLIC	__real@3ff0000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?server_log@@YAXPBDZZ:PROC			; server_log
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?frac@@YGMM@Z:PROC				; frac
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?direct_play_get_player_id@@YGHXZ:PROC		; direct_play_get_player_id
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_ui_font_colour
EXTRN	?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z:PROC ; add_to_pop_up_list
EXTRN	?set_comms_data_flow@@YGXW4COMMS_DATA_FLOW_TYPES@@@Z:PROC ; set_comms_data_flow
EXTRN	?send_packet@@YGXKW4PACKET_TYPES@@PAEHW4SEND_TYPES@@@Z:PROC ; send_packet
EXTRN	?net_set_hostname@@YGXPBD@Z:PROC		; net_set_hostname
EXTRN	?create_client_server_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_client_server_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?get_integer_screen_x_mid@@YGHXZ:PROC		; get_integer_screen_x_mid
EXTRN	?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z:PROC ; send_text_message
EXTRN	?force_pause_acceleration@@YGXXZ:PROC		; force_pause_acceleration
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ:PROC ; get_current_player_log
EXTRN	?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z:PROC ; get_player_log_name
EXTRN	?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z:PROC ; get_player_log_rank
EXTRN	?set_display_gunship_buttons@@YGXHPAD@Z:PROC	; set_display_gunship_buttons
EXTRN	__ftol2_sse:PROC
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?active_screen@@3PAUSCREEN@@A:DWORD		; active_screen
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?ui_colour_orange@@3UREAL_COLOUR@@A:DWORD	; ui_colour_orange
EXTRN	?ui_colour_yellow@@3UREAL_COLOUR@@A:DWORD	; ui_colour_yellow
EXTRN	?ui_colour_blue@@3UREAL_COLOUR@@A:DWORD		; ui_colour_blue
EXTRN	?command_line_pause_server@@3HA:DWORD		; command_line_pause_server
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A:DWORD ; system_comms_data_flow
EXTRN	?system_server_id@@3KA:DWORD			; system_server_id
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_destroy_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?iy_640_480@@3HA:DWORD				; iy_640_480
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	?gunship_screen_next_button@@3PAUUI_OBJECT@@A:DWORD ; gunship_screen_next_button
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?flash_timer@@3MA DD 01H DUP (?)			; flash_timer
_BSS	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe54fdf3b645a1d
CONST	SEGMENT
__real@3fe54fdf3b645a1d DQ 03fe54fdf3b645a1dr	; 0.666
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBKIHJIE@PRESS?5SPACE@
CONST	SEGMENT
??_C@_0M@NBKIHJIE@PRESS?5SPACE@ DB 'PRESS SPACE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PIHALMDP@?$CIindex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIindex?5?$DM?5NUM_TA@
CONST	SEGMENT
??_C@_0CM@PIHALMDP@?$CIindex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIindex?5?$DM?5NUM_TA@ DB '('
	DB	'index >= 0) && (index < NUM_TABLE_ENTRIES)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IMADOEDD@kills@
CONST	SEGMENT
??_C@_05IMADOEDD@kills@ DB 'kills', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JGNFNGGK@side@
CONST	SEGMENT
??_C@_04JGNFNGGK@side@ DB 'side', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_high_score_table_entry@@YGPBDHPAH0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_high_score_table_entry@@YGPBDHPAH0@Z@4JA DD 02b7H ; `get_high_score_table_entry'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06GBEGMGE@?$CFs?3?5?$CFd@
CONST	SEGMENT
??_C@_06GBEGMGE@?$CFs?3?5?$CFd@ DB '%s: %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IFNDKGJF@?$CFs?5?3?5?$CFd@
CONST	SEGMENT
??_C@_07IFNDKGJF@?$CFs?5?3?5?$CFd@ DB '%s : %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BIALEBEE@count?5?$DN?$DN?5num_pilots@
CONST	SEGMENT
??_C@_0BE@BIALEBEE@count?5?$DN?$DN?5num_pilots@ DB 'count == num_pilots', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NOLCJCPA@PILOT?3?5Adding?5?$CFs?5?$CIkills?5?$CFd?$CJ?5to?5@
CONST	SEGMENT
??_C@_0DA@NOLCJCPA@PILOT?3?5Adding?5?$CFs?5?$CIkills?5?$CFd?$CJ?5to?5@ DB 'P'
	DB	'ILOT: Adding %s (kills %d) to High Score Table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KHEBNCJD@PILOT?3?5Updating?5High?5Score?5Tabl@
CONST	SEGMENT
??_C@_0CB@KHEBNCJD@PILOT?3?5Updating?5High?5Score?5Tabl@ DB 'PILOT: Updat'
	DB	'ing High Score Table', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA DD 01aeH ; `update_pilot_high_score_table'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA DD 019cH ; `get_player_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA DD 016fH ; `get_session_pilot_count'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@HDFJMCJJ@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@HDFJMCJJ@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_CLIENT', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_client_pilot@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_client_pilot@@YGXXZ@4JA DD 014bH ; `create_client_pilot'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??create_server_pilot@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_server_pilot@@YGXXZ@4JA DD 0133H ; `create_server_pilot'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name@ DB 'name', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z@4JA DD 010eH ; `create_new_pilot_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0O@IAAMALKI@Server?5paused@
CONST	SEGMENT
??_C@_0O@IAAMALKI@Server?5paused@ DB 'Server paused', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KNNLNNGO@quit@
CONST	SEGMENT
??_C@_04KNNLNNGO@quit@ DB 'quit', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA DD 0e0H ; `send_pilot_quit_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0O@BMHDMOIB@?$CFs?5?$CFs?5?9?5?$CFd?5?$CFs@
CONST	SEGMENT
??_C@_0O@BMHDMOIB@?$CFs?5?$CFs?5?9?5?$CFd?5?$CFs@ DB '%s %s - %d %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NNHBMJMI@players?5connected@
CONST	SEGMENT
??_C@_0BC@NNHBMJMI@players?5connected@ DB 'players connected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LNJPAFMG@?$CFs?5?$CFs?5?9?51?5?$CFs@
CONST	SEGMENT
??_C@_0N@LNJPAFMG@?$CFs?5?$CFs?5?9?51?5?$CFs@ DB '%s %s - 1 %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LEKBLMMB@joined@
CONST	SEGMENT
??_C@_06LEKBLMMB@joined@ DB 'joined', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KEJDMCGB@player?5connected@
CONST	SEGMENT
??_C@_0BB@KEJDMCGB@player?5connected@ DB 'player connected', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA DD 0b9H ; `send_pilot_joined_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@KIOGEKAM@pilot_entity@
CONST	SEGMENT
??_C@_0N@KIOGEKAM@pilot_entity@ DB 'pilot_entity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FONBLHAF@PILOT?3?5Setting?5pilot_entity?5to?5@
CONST	SEGMENT
??_C@_0CE@FONBLHAF@PILOT?3?5Setting?5pilot_entity?5to?5@ DB 'PILOT: Setti'
	DB	'ng pilot_entity to NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HAFCIKEH@ENGAGE@
CONST	SEGMENT
??_C@_06HAFCIKEH@ENGAGE@ DB 'ENGAGE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NDIHHFDN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DA@NDIHHFDN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_PILOT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FLODHLAO@pilot_entity?5?$DN?$DN?5NULL@
CONST	SEGMENT
??_C@_0BF@FLODHLAO@pilot_entity?5?$DN?$DN?5NULL@ DB 'pilot_entity == NULL'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LGMEOGFL@PILOT?3?5Setting?5pilot_entity?5to?5@
CONST	SEGMENT
??_C@_0CC@LGMEOGFL@PILOT?3?5Setting?5pilot_entity?5to?5@ DB 'PILOT: Setti'
	DB	'ng pilot_entity to %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA DD 07fH ; `set_pilot_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?get_session_pilot_count@@YGHXZ
_TEXT	SEGMENT
tv178 = -84						; size = 4
tv158 = -84						; size = 4
tv136 = -84						; size = 4
tv83 = -84						; size = 4
tv170 = -80						; size = 4
tv150 = -80						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_count$ = -12						; size = 4
_pilot$ = -8						; size = 4
_force$ = -4						; size = 4
?get_session_pilot_count@@YGHXZ PROC			; get_session_pilot_count, COMDAT

; 367  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 368  : 	entity
; 369  : 		*force,
; 370  : 		*pilot;
; 371  : 
; 372  : 	int
; 373  : 		count;
; 374  : 	
; 375  : 	ASSERT (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 18		 jne	 SHORT $LN6@get_sessio
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_sessio:

; 376  : 
; 377  : 	count = 0;

  0002a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 378  : 
; 379  : 	force = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00038	74 0c		 je	 SHORT $LN8@get_sessio
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00044	eb 21		 jmp	 SHORT $LN9@get_sessio
$LN8@get_sessio:
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  0004c	83 c2 0c	 add	 edx, 12			; 0000000cH
  0004f	52		 push	 edx
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00060	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@get_sessio:
  00067	b9 01 00 00 00	 mov	 ecx, 1
  0006c	85 c9		 test	 ecx, ecx
  0006e	74 09		 je	 SHORT $LN10@get_sessio
  00070	c7 45 ac 0e 00
	00 00		 mov	 DWORD PTR tv83[ebp], 14	; 0000000eH
  00077	eb 21		 jmp	 SHORT $LN11@get_sessio
$LN10@get_sessio:
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  0007f	83 c2 0c	 add	 edx, 12			; 0000000cH
  00082	52		 push	 edx
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00093	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@get_sessio:
  0009a	6a 0e		 push	 14			; 0000000eH
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000a2	51		 push	 ecx
  000a3	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  000aa	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  000ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000b4	ff d1		 call	 ecx
  000b6	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax
$LN2@get_sessio:

; 380  : 
; 381  : 	while (force)

  000b9	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000bd	0f 84 9d 01 00
	00		 je	 $LN3@get_sessio

; 382  : 	{
; 383  : 		pilot = get_local_entity_first_child (force, LIST_TYPE_PILOT);

  000c3	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000c7	74 0a		 je	 SHORT $LN12@get_sessio
  000c9	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ce	89 4d b0	 mov	 DWORD PTR tv128[ebp], ecx
  000d1	eb 21		 jmp	 SHORT $LN13@get_sessio
$LN12@get_sessio:
  000d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  000d9	83 c2 10	 add	 edx, 16			; 00000010H
  000dc	52		 push	 edx
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ed	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@get_sessio:
  000f4	b9 01 00 00 00	 mov	 ecx, 1
  000f9	85 c9		 test	 ecx, ecx
  000fb	74 09		 je	 SHORT $LN14@get_sessio
  000fd	c7 45 ac 1c 00
	00 00		 mov	 DWORD PTR tv136[ebp], 28 ; 0000001cH
  00104	eb 21		 jmp	 SHORT $LN15@get_sessio
$LN14@get_sessio:
  00106	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  0010c	83 c2 10	 add	 edx, 16			; 00000010H
  0010f	52		 push	 edx
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00115	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00120	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN15@get_sessio:
  00127	6a 1c		 push	 28			; 0000001cH
  00129	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  0012c	51		 push	 ecx
  0012d	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 180
  00134	8b 45 ac	 mov	 eax, DWORD PTR tv136[ebp]
  00137	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0013e	ff d1		 call	 ecx
  00140	89 45 f8	 mov	 DWORD PTR _pilot$[ebp], eax
$LN4@get_sessio:

; 384  : 
; 385  : 		while (pilot)

  00143	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00147	0f 84 8e 00 00
	00		 je	 $LN5@get_sessio

; 386  : 		{
; 387  : 			count ++;

  0014d	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00150	83 c0 01	 add	 eax, 1
  00153	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax

; 388  : 
; 389  : 			pilot = get_local_entity_child_succ (pilot, LIST_TYPE_PILOT);

  00156	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  0015a	74 0a		 je	 SHORT $LN16@get_sessio
  0015c	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  0015f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00161	89 4d b0	 mov	 DWORD PTR tv150[ebp], ecx
  00164	eb 21		 jmp	 SHORT $LN17@get_sessio
$LN16@get_sessio:
  00166	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  0016c	83 c2 16	 add	 edx, 22			; 00000016H
  0016f	52		 push	 edx
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00180	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN17@get_sessio:
  00187	b9 01 00 00 00	 mov	 ecx, 1
  0018c	85 c9		 test	 ecx, ecx
  0018e	74 09		 je	 SHORT $LN18@get_sessio
  00190	c7 45 ac 1c 00
	00 00		 mov	 DWORD PTR tv158[ebp], 28 ; 0000001cH
  00197	eb 21		 jmp	 SHORT $LN19@get_sessio
$LN18@get_sessio:
  00199	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  0019f	83 c2 16	 add	 edx, 22			; 00000016H
  001a2	52		 push	 edx
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN19@get_sessio:
  001ba	6a 1c		 push	 28			; 0000001cH
  001bc	8b 4d f8	 mov	 ecx, DWORD PTR _pilot$[ebp]
  001bf	51		 push	 ecx
  001c0	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv150[ebp], 180
  001c7	8b 45 ac	 mov	 eax, DWORD PTR tv158[ebp]
  001ca	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001d1	ff d1		 call	 ecx
  001d3	89 45 f8	 mov	 DWORD PTR _pilot$[ebp], eax

; 390  : 		}

  001d6	e9 68 ff ff ff	 jmp	 $LN4@get_sessio
$LN5@get_sessio:

; 391  : 
; 392  : 		force = get_local_entity_child_succ (force, LIST_TYPE_FORCE);

  001db	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  001df	74 0a		 je	 SHORT $LN20@get_sessio
  001e1	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  001e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e6	89 4d b0	 mov	 DWORD PTR tv170[ebp], ecx
  001e9	eb 21		 jmp	 SHORT $LN21@get_sessio
$LN20@get_sessio:
  001eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  001f1	83 c2 19	 add	 edx, 25			; 00000019H
  001f4	52		 push	 edx
  001f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00205	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv170[ebp], 0
$LN21@get_sessio:
  0020c	b9 01 00 00 00	 mov	 ecx, 1
  00211	85 c9		 test	 ecx, ecx
  00213	74 09		 je	 SHORT $LN22@get_sessio
  00215	c7 45 ac 0e 00
	00 00		 mov	 DWORD PTR tv178[ebp], 14 ; 0000000eH
  0021c	eb 21		 jmp	 SHORT $LN23@get_sessio
$LN22@get_sessio:
  0021e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_session_pilot_count@@YGHXZ@4JA
  00224	83 c2 19	 add	 edx, 25			; 00000019H
  00227	52		 push	 edx
  00228	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00238	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN23@get_sessio:
  0023f	6a 0e		 push	 14			; 0000000eH
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00244	51		 push	 ecx
  00245	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv170[ebp], 180
  0024c	8b 45 ac	 mov	 eax, DWORD PTR tv178[ebp]
  0024f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00256	ff d1		 call	 ecx
  00258	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 393  : 	}

  0025b	e9 59 fe ff ff	 jmp	 $LN2@get_sessio
$LN3@get_sessio:

; 394  : 
; 395  : 	return count;

  00260	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]

; 396  : }

  00263	5f		 pop	 edi
  00264	5e		 pop	 esi
  00265	5b		 pop	 ebx
  00266	8b e5		 mov	 esp, ebp
  00268	5d		 pop	 ebp
  00269	c3		 ret	 0
?get_session_pilot_count@@YGHXZ ENDP			; get_session_pilot_count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?send_pilot_joined_message@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv149 = -276						; size = 4
tv87 = -276						; size = 4
tv141 = -272						; size = 4
tv79 = -272						; size = 4
_text$ = -204						; size = 200
_player_count$ = -4					; size = 4
_en$ = 8						; size = 4
?send_pilot_joined_message@@YGXPAUENTITY@@@Z PROC	; send_pilot_joined_message, COMDAT

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 186  : 	int
; 187  : 		player_count;
; 188  : 
; 189  : 	char
; 190  : 		text [200];
; 191  : 
; 192  : 	//
; 193  : 	// Client now joined in..... send system message to other players
; 194  : 	//
; 195  : 
; 196  : 	player_count = get_session_pilot_count ();

  0000c	e8 00 00 00 00	 call	 ?get_session_pilot_count@@YGHXZ ; get_session_pilot_count
  00011	89 45 fc	 mov	 DWORD PTR _player_count$[ebp], eax

; 197  : 
; 198  : 	if (player_count == 1)

  00014	83 7d fc 01	 cmp	 DWORD PTR _player_count$[ebp], 1
  00018	0f 85 bc 00 00
	00		 jne	 $LN2@send_pilot

; 199  : 	{
; 200  : 		sprintf (text, "%s %s - 1 %s",

  0001e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00022	74 0d		 je	 SHORT $LN5@send_pilot
  00024	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00027	8b 08		 mov	 ecx, DWORD PTR [eax]
  00029	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv79[ebp], ecx
  0002f	eb 24		 jmp	 SHORT $LN6@send_pilot
$LN5@send_pilot:
  00031	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA
  00037	83 c2 10	 add	 edx, 16			; 00000010H
  0003a	52		 push	 edx
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004b	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN6@send_pilot:
  00055	b9 01 00 00 00	 mov	 ecx, 1
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 0c		 je	 SHORT $LN7@send_pilot
  0005e	c7 85 ec fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv87[ebp], 10	; 0000000aH
  00068	eb 24		 jmp	 SHORT $LN8@send_pilot
$LN7@send_pilot:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 10	 add	 edx, 16			; 00000010H
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv87[ebp], 0
$LN8@send_pilot:
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KEJDMCGB@player?5connected@
  00093	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00098	50		 push	 eax
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_06LEKBLMMB@joined@
  0009e	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000a3	50		 push	 eax
  000a4	6a 0a		 push	 10			; 0000000aH
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a9	51		 push	 ecx
  000aa	6b 95 f0 fe ff
	ff 34		 imul	 edx, DWORD PTR tv79[ebp], 52
  000b1	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv87[ebp]
  000b7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  000be	ff d1		 call	 ecx
  000c0	50		 push	 eax
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LNJPAFMG@?$CFs?5?$CFs?5?9?51?5?$CFs@
  000c6	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _text$[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 _sprintf
  000d2	83 c4 14	 add	 esp, 20			; 00000014H

; 201  : 							get_local_entity_string (en, STRING_TYPE_PILOTS_NAME),
; 202  : 							get_trans ("joined"),
; 203  : 							get_trans ("player connected"));
; 204  : 	}
; 205  : 	else

  000d5	e9 bb 00 00 00	 jmp	 $LN3@send_pilot
$LN2@send_pilot:

; 206  : 	{
; 207  : 		sprintf (text, "%s %s - %d %s",

  000da	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000de	74 0d		 je	 SHORT $LN9@send_pilot
  000e0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e5	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv141[ebp], ecx
  000eb	eb 24		 jmp	 SHORT $LN10@send_pilot
$LN9@send_pilot:
  000ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA
  000f3	83 c2 17	 add	 edx, 23			; 00000017H
  000f6	52		 push	 edx
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00107	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN10@send_pilot:
  00111	b9 01 00 00 00	 mov	 ecx, 1
  00116	85 c9		 test	 ecx, ecx
  00118	74 0c		 je	 SHORT $LN11@send_pilot
  0011a	c7 85 ec fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv149[ebp], 10 ; 0000000aH
  00124	eb 24		 jmp	 SHORT $LN12@send_pilot
$LN11@send_pilot:
  00126	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_joined_message@@YGXPAUENTITY@@@Z@4JA
  0012c	83 c2 17	 add	 edx, 23			; 00000017H
  0012f	52		 push	 edx
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00135	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00140	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv149[ebp], 0
$LN12@send_pilot:
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NNHBMJMI@players?5connected@
  0014f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00154	50		 push	 eax
  00155	8b 4d fc	 mov	 ecx, DWORD PTR _player_count$[ebp]
  00158	51		 push	 ecx
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_06LEKBLMMB@joined@
  0015e	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00163	50		 push	 eax
  00164	6a 0a		 push	 10			; 0000000aH
  00166	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00169	52		 push	 edx
  0016a	6b 85 f0 fe ff
	ff 34		 imul	 eax, DWORD PTR tv141[ebp], 52
  00171	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv149[ebp]
  00177	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  0017e	ff d2		 call	 edx
  00180	50		 push	 eax
  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BMHDMOIB@?$CFs?5?$CFs?5?9?5?$CFd?5?$CFs@
  00186	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 _sprintf
  00192	83 c4 18	 add	 esp, 24			; 00000018H
$LN3@send_pilot:

; 208  : 							get_local_entity_string (en, STRING_TYPE_PILOTS_NAME),
; 209  : 							get_trans ("joined"),
; 210  : 							player_count,
; 211  : 							get_trans ("players connected"));
; 212  : 	}
; 213  : 
; 214  : 	send_text_message (en, NULL, MESSAGE_TEXT_SYSTEM_NEW_PILOT, text);

  00195	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0019b	50		 push	 eax
  0019c	6a 00		 push	 0
  0019e	6a 00		 push	 0
  001a0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a3	51		 push	 ecx
  001a4	e8 00 00 00 00	 call	 ?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ; send_text_message

; 215  : 	
; 216  : 	server_log (text); // Jabberwock Server log

  001a9	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ?server_log@@YAXPBDZZ	; server_log
  001b5	83 c4 04	 add	 esp, 4

; 217  : }

  001b8	5f		 pop	 edi
  001b9	5e		 pop	 esi
  001ba	5b		 pop	 ebx
  001bb	8b e5		 mov	 esp, ebp
  001bd	5d		 pop	 ebp
  001be	c2 04 00	 ret	 4
?send_pilot_joined_message@@YGXPAUENTITY@@@Z ENDP	; send_pilot_joined_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?qs_table@@YGXPAUPILOT_SCORE_TYPE@@HH@Z
_TEXT	SEGMENT
_temp$ = -284						; size = 272
_x$ = -12						; size = 4
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_list$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
?qs_table@@YGXPAUPILOT_SCORE_TYPE@@HH@Z PROC		; qs_table, COMDAT

; 539  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 540  :    int
; 541  :       i, j, x;
; 542  : 
; 543  :    pilot_score_type
; 544  :       temp;
; 545  : 
; 546  :    i = left;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _left$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 547  :    j = right;

  00012	8b 45 10	 mov	 eax, DWORD PTR _right$[ebp]
  00015	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax

; 548  : 
; 549  :    x = list [(left + right) / 2].kills;

  00018	8b 45 0c	 mov	 eax, DWORD PTR _left$[ebp]
  0001b	03 45 10	 add	 eax, DWORD PTR _right$[ebp]
  0001e	99		 cdq
  0001f	2b c2		 sub	 eax, edx
  00021	d1 f8		 sar	 eax, 1
  00023	69 c0 10 01 00
	00		 imul	 eax, eax, 272
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  0002c	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  0002f	89 55 f4	 mov	 DWORD PTR _x$[ebp], edx
$LN5@qs_table:

; 550  : 
; 551  :    do
; 552  :    {
; 553  :       while (list [i].kills > x && i < right) i++;

  00032	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 272
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  0003c	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  0003f	3b 55 f4	 cmp	 edx, DWORD PTR _x$[ebp]
  00042	7e 13		 jle	 SHORT $LN7@qs_table
  00044	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00047	3b 45 10	 cmp	 eax, DWORD PTR _right$[ebp]
  0004a	7d 0b		 jge	 SHORT $LN7@qs_table
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0004f	83 c0 01	 add	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
  00055	eb db		 jmp	 SHORT $LN5@qs_table
$LN7@qs_table:

; 554  :       while (x > list [j].kills && j > left) j--;

  00057	69 45 f8 10 01
	00 00		 imul	 eax, DWORD PTR _j$[ebp], 272
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00061	8b 55 f4	 mov	 edx, DWORD PTR _x$[ebp]
  00064	3b 14 01	 cmp	 edx, DWORD PTR [ecx+eax]
  00067	7e 13		 jle	 SHORT $LN8@qs_table
  00069	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  0006c	3b 45 0c	 cmp	 eax, DWORD PTR _left$[ebp]
  0006f	7e 0b		 jle	 SHORT $LN8@qs_table
  00071	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  00074	83 e8 01	 sub	 eax, 1
  00077	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax
  0007a	eb db		 jmp	 SHORT $LN7@qs_table
$LN8@qs_table:

; 555  : 
; 556  :       if (i <= j)

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0007f	3b 45 f8	 cmp	 eax, DWORD PTR _j$[ebp]
  00082	7f 5b		 jg	 SHORT $LN2@qs_table

; 557  :       {
; 558  :          temp = list [i];

  00084	69 75 fc 10 01
	00 00		 imul	 esi, DWORD PTR _i$[ebp], 272
  0008b	03 75 08	 add	 esi, DWORD PTR _list$[ebp]
  0008e	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  00093	8d bd e4 fe ff
	ff		 lea	 edi, DWORD PTR _temp$[ebp]
  00099	f3 a5		 rep movsd

; 559  :          list [i] = list [j];

  0009b	69 75 f8 10 01
	00 00		 imul	 esi, DWORD PTR _j$[ebp], 272
  000a2	03 75 08	 add	 esi, DWORD PTR _list$[ebp]
  000a5	69 7d fc 10 01
	00 00		 imul	 edi, DWORD PTR _i$[ebp], 272
  000ac	03 7d 08	 add	 edi, DWORD PTR _list$[ebp]
  000af	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  000b4	f3 a5		 rep movsd

; 560  :          list [j] = temp;

  000b6	69 7d f8 10 01
	00 00		 imul	 edi, DWORD PTR _j$[ebp], 272
  000bd	03 7d 08	 add	 edi, DWORD PTR _list$[ebp]
  000c0	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  000c5	8d b5 e4 fe ff
	ff		 lea	 esi, DWORD PTR _temp$[ebp]
  000cb	f3 a5		 rep movsd

; 561  :          
; 562  :          i++;

  000cd	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000d0	83 c0 01	 add	 eax, 1
  000d3	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 563  :          j--;

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  000d9	83 e8 01	 sub	 eax, 1
  000dc	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax
$LN2@qs_table:

; 564  :       }
; 565  : 
; 566  :    } while (i <= j);

  000df	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000e2	3b 45 f8	 cmp	 eax, DWORD PTR _j$[ebp]
  000e5	0f 8e 47 ff ff
	ff		 jle	 $LN5@qs_table

; 567  : 
; 568  :    if (left < j) qs_table (list, left, j);

  000eb	8b 45 0c	 mov	 eax, DWORD PTR _left$[ebp]
  000ee	3b 45 f8	 cmp	 eax, DWORD PTR _j$[ebp]
  000f1	7d 11		 jge	 SHORT $LN10@qs_table
  000f3	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  000f6	50		 push	 eax
  000f7	8b 4d 0c	 mov	 ecx, DWORD PTR _left$[ebp]
  000fa	51		 push	 ecx
  000fb	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  000fe	52		 push	 edx
  000ff	e8 00 00 00 00	 call	 ?qs_table@@YGXPAUPILOT_SCORE_TYPE@@HH@Z ; qs_table
$LN10@qs_table:

; 569  :    if (i < right) qs_table (list, i, right);

  00104	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00107	3b 45 10	 cmp	 eax, DWORD PTR _right$[ebp]
  0010a	7d 11		 jge	 SHORT $LN1@qs_table
  0010c	8b 45 10	 mov	 eax, DWORD PTR _right$[ebp]
  0010f	50		 push	 eax
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00113	51		 push	 ecx
  00114	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ?qs_table@@YGXPAUPILOT_SCORE_TYPE@@HH@Z ; qs_table
$LN1@qs_table:

; 570  : }

  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 0c 00	 ret	 12			; 0000000cH
?qs_table@@YGXPAUPILOT_SCORE_TYPE@@HH@Z ENDP		; qs_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?draw_special_restart_text@@YGXXZ
_TEXT	SEGMENT
_x$ = -72						; size = 4
_string_length$ = -68					; size = 4
_buffer$ = -64						; size = 64
?draw_special_restart_text@@YGXXZ PROC			; draw_special_restart_text, COMDAT

; 747  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 748  : 	char
; 749  : 		buffer [64];
; 750  : 
; 751  : 	int
; 752  : 		string_length;
; 753  : 	
; 754  : 	float
; 755  : 		x;
; 756  : 
; 757  : 	//
; 758  : 	// display game name
; 759  : 	//
; 760  : 
; 761  : 	if (current_game_session)

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A, 0 ; current_game_session
  00013	74 6d		 je	 SHORT $LN2@draw_speci

; 762  : 	{
; 763  : 		sprintf (buffer, "%s", current_game_session->title);

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  0001a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001d	51		 push	 ecx
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00023	8d 55 c0	 lea	 edx, DWORD PTR _buffer$[ebp]
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 _sprintf
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 764  : 		string_length = ui_get_string_length ( buffer );

  0002f	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00038	e8 00 00 00 00	 call	 __ftol2_sse
  0003d	89 45 bc	 mov	 DWORD PTR _string_length$[ebp], eax

; 765  : 
; 766  : 		x = get_integer_screen_x_mid () - (string_length / 2);

  00040	e8 00 00 00 00	 call	 ?get_integer_screen_x_mid@@YGHXZ ; get_integer_screen_x_mid
  00045	8b c8		 mov	 ecx, eax
  00047	8b 45 bc	 mov	 eax, DWORD PTR _string_length$[ebp]
  0004a	99		 cdq
  0004b	2b c2		 sub	 eax, edx
  0004d	d1 f8		 sar	 eax, 1
  0004f	2b c8		 sub	 ecx, eax
  00051	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00055	f3 0f 11 45 b8	 movss	 DWORD PTR _x$[ebp], xmm0

; 767  : 
; 768  : 		ui_display_text (buffer, x, 73 + iy_640_480);

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0005f	83 c0 49	 add	 eax, 73			; 00000049H
  00062	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00066	51		 push	 ecx
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	51		 push	 ecx
  0006d	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	8d 4d c0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  0007a	51		 push	 ecx
  0007b	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00080	dd d8		 fstp	 ST(0)
$LN2@draw_speci:

; 769  : 	}
; 770  : 
; 771  : 	//
; 772  : 	// display flashing message
; 773  : 	//
; 774  : 
; 775  : 	if (flash_timer < 0.666)

  00082	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?flash_timer@@3MA
  0008a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe54fdf3b645a1d
  00092	66 0f 2f c8	 comisd	 xmm1, xmm0
  00096	76 74		 jbe	 SHORT $LN3@draw_speci

; 776  : 	{
; 777  : 		set_ui_font_type (UI_FONT_ARIAL_14);

  00098	6a 01		 push	 1
  0009a	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 778  : 
; 779  : 		set_ui_font_colour (ui_colour_yellow);

  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_yellow@@3UREAL_COLOUR@@A ; ui_colour_yellow
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 780  : 
; 781  : 		sprintf ( buffer, get_trans ("PRESS SPACE") );

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NBKIHJIE@PRESS?5SPACE@
  000af	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000b4	50		 push	 eax
  000b5	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 _sprintf
  000be	83 c4 08	 add	 esp, 8

; 782  : 
; 783  : 		string_length = ui_get_string_length (buffer);

  000c1	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  000ca	e8 00 00 00 00	 call	 __ftol2_sse
  000cf	89 45 bc	 mov	 DWORD PTR _string_length$[ebp], eax

; 784  : 
; 785  : 		ui_display_text (buffer, get_integer_screen_x_mid () - (string_length / 2), 420 + iy_640_480);

  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  000d7	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  000dc	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000e0	51		 push	 ecx
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	e8 00 00 00 00	 call	 ?get_integer_screen_x_mid@@YGHXZ ; get_integer_screen_x_mid
  000eb	8b c8		 mov	 ecx, eax
  000ed	8b 45 bc	 mov	 eax, DWORD PTR _string_length$[ebp]
  000f0	99		 cdq
  000f1	2b c2		 sub	 eax, edx
  000f3	d1 f8		 sar	 eax, 1
  000f5	2b c8		 sub	 ecx, eax
  000f7	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000fb	51		 push	 ecx
  000fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00101	8d 55 c0	 lea	 edx, DWORD PTR _buffer$[ebp]
  00104	52		 push	 edx
  00105	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0010a	dd d8		 fstp	 ST(0)
$LN3@draw_speci:

; 786  : 	}
; 787  : }

  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
?draw_special_restart_text@@YGXXZ ENDP			; draw_special_restart_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?get_high_score_table_first_name@@YGPBDXZ
_TEXT	SEGMENT
_item$ = -4						; size = 4
?get_high_score_table_first_name@@YGPBDXZ PROC		; get_high_score_table_first_name, COMDAT

; 726  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 727  : 	pilot_score_type
; 728  : 		*item;
; 729  : 		
; 730  : 	item = &pilot_high_score_table [0];

  00009	b8 10 01 00 00	 mov	 eax, 272		; 00000110H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
  00017	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 731  : 		
; 732  : 	if (item->valid)

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0001d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00021	74 0a		 je	 SHORT $LN2@get_high_s

; 733  : 	{
; 734  : 		return (item->name);

  00023	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00026	83 c0 0c	 add	 eax, 12			; 0000000cH
  00029	eb 04		 jmp	 SHORT $LN1@get_high_s

; 735  : 	}
; 736  : 	else

  0002b	eb 02		 jmp	 SHORT $LN1@get_high_s
$LN2@get_high_s:

; 737  : 	{
; 738  : 		return NULL;

  0002d	33 c0		 xor	 eax, eax
$LN1@get_high_s:

; 739  : 	}
; 740  : }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
?get_high_score_table_first_name@@YGPBDXZ ENDP		; get_high_score_table_first_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?get_high_score_table_entry@@YGPBDHPAH0@Z
_TEXT	SEGMENT
_item$ = -4						; size = 4
_index$ = 8						; size = 4
_side$ = 12						; size = 4
_kills$ = 16						; size = 4
?get_high_score_table_entry@@YGPBDHPAH0@Z PROC		; get_high_score_table_entry, COMDAT

; 695  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 696  : 	pilot_score_type
; 697  : 		*item;
; 698  : 		
; 699  : 	ASSERT (side);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _side$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_high_s
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_high_score_table_entry@@YGPBDHPAH0@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04JGNFNGGK@side@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_high_s:

; 700  : 
; 701  : 	ASSERT (kills);

  00027	83 7d 10 00	 cmp	 DWORD PTR _kills$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_high_s
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_high_score_table_entry@@YGPBDHPAH0@Z@4JA
  00032	83 c0 06	 add	 eax, 6
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_05IMADOEDD@kills@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_high_s:

; 702  : 
; 703  : 	ASSERT ((index >= 0) && (index < NUM_TABLE_ENTRIES));

  00045	83 7d 08 00	 cmp	 DWORD PTR _index$[ebp], 0
  00049	7c 06		 jl	 SHORT $LN5@get_high_s
  0004b	83 7d 08 0a	 cmp	 DWORD PTR _index$[ebp], 10 ; 0000000aH
  0004f	7c 18		 jl	 SHORT $LN4@get_high_s
$LN5@get_high_s:
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_high_score_table_entry@@YGPBDHPAH0@Z@4JA
  00056	83 c0 08	 add	 eax, 8
  00059	50		 push	 eax
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@PIHALMDP@?$CIindex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIindex?5?$DM?5NUM_TA@
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_high_s:

; 704  : 
; 705  : 	item = &pilot_high_score_table [index];

  00069	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _index$[ebp], 272
  00070	05 00 00 00 00	 add	 eax, OFFSET ?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
  00075	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 706  : 		
; 707  : 	if (item->valid)

  00078	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0007b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007f	74 1f		 je	 SHORT $LN6@get_high_s

; 708  : 	{
; 709  : 		*side = item->side;

  00081	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00087	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008a	89 10		 mov	 DWORD PTR [eax], edx

; 710  : 
; 711  : 		*kills = item->kills;

  0008c	8b 45 10	 mov	 eax, DWORD PTR _kills$[ebp]
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00092	8b 11		 mov	 edx, DWORD PTR [ecx]
  00094	89 10		 mov	 DWORD PTR [eax], edx

; 712  : 
; 713  : 		return item->name;

  00096	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00099	83 c0 0c	 add	 eax, 12			; 0000000cH
  0009c	eb 04		 jmp	 SHORT $LN1@get_high_s

; 714  : 	}
; 715  : 	else

  0009e	eb 02		 jmp	 SHORT $LN1@get_high_s
$LN6@get_high_s:

; 716  : 	{
; 717  : 		return NULL;

  000a0	33 c0		 xor	 eax, eax
$LN1@get_high_s:

; 718  : 	}
; 719  : }

  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 0c 00	 ret	 12			; 0000000cH
?get_high_score_table_entry@@YGPBDHPAH0@Z ENDP		; get_high_score_table_entry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?draw_high_score_table_to_ui_object_list@@YGXPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_list$ = -272						; size = 4
_col$ = -268						; size = 4
_item$ = -264						; size = 4
_loop$ = -260						; size = 4
_buffer$ = -256						; size = 256
_blue_list_object$ = 8					; size = 4
_red_list_object$ = 12					; size = 4
?draw_high_score_table_to_ui_object_list@@YGXPAUUI_OBJECT@@0@Z PROC ; draw_high_score_table_to_ui_object_list, COMDAT

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 648  : 
; 649  : 	char
; 650  : 		buffer [256];
; 651  : 
; 652  : 	int
; 653  : 		loop;
; 654  : 
; 655  : 	pilot_score_type
; 656  : 		*item;
; 657  : 		
; 658  : 	rgb_colour
; 659  : 		*col;
; 660  : 
; 661  : 	ui_object
; 662  : 		*list;
; 663  : 
; 664  : 	for (loop = 0; loop < NUM_TABLE_ENTRIES; loop ++)

  0000c	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _loop$[ebp], 0
  00016	eb 0f		 jmp	 SHORT $LN4@draw_high_
$LN2@draw_high_:
  00018	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _loop$[ebp]
  0001e	83 c0 01	 add	 eax, 1
  00021	89 85 fc fe ff
	ff		 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_high_:
  00027	83 bd fc fe ff
	ff 0a		 cmp	 DWORD PTR _loop$[ebp], 10 ; 0000000aH
  0002e	0f 8d a3 00 00
	00		 jge	 $LN1@draw_high_

; 665  : 	{
; 666  : 		item = &pilot_high_score_table [loop];

  00034	69 85 fc fe ff
	ff 10 01 00 00	 imul	 eax, DWORD PTR _loop$[ebp], 272
  0003e	05 00 00 00 00	 add	 eax, OFFSET ?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
  00043	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _item$[ebp], eax

; 667  : 			
; 668  : 		if (item->valid)

  00049	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  0004f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00053	74 7d		 je	 SHORT $LN5@draw_high_

; 669  : 		{
; 670  : 			if (item->side == ENTITY_SIDE_BLUE_FORCE)

  00055	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  0005b	83 78 08 01	 cmp	 DWORD PTR [eax+8], 1
  0005f	75 15		 jne	 SHORT $LN6@draw_high_

; 671  : 			{
; 672  : 				col = &ui_colour_blue;

  00061	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _col$[ebp], OFFSET ?ui_colour_blue@@3UREAL_COLOUR@@A ; ui_colour_blue

; 673  : 	
; 674  : 				list = blue_list_object;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _blue_list_object$[ebp]
  0006e	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _list$[ebp], eax

; 675  : 			}
; 676  : 			else

  00074	eb 13		 jmp	 SHORT $LN7@draw_high_
$LN6@draw_high_:

; 677  : 			{
; 678  : 				col = &ui_colour_orange;

  00076	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _col$[ebp], OFFSET ?ui_colour_orange@@3UREAL_COLOUR@@A ; ui_colour_orange

; 679  : 
; 680  : 				list = red_list_object;

  00080	8b 45 0c	 mov	 eax, DWORD PTR _red_list_object$[ebp]
  00083	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _list$[ebp], eax
$LN7@draw_high_:

; 681  : 			}
; 682  : 
; 683  : 			sprintf (buffer, "%s: %d", item->name, item->kills);

  00089	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	51		 push	 ecx
  00092	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _item$[ebp]
  00098	83 c2 0c	 add	 edx, 12			; 0000000cH
  0009b	52		 push	 edx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_06GBEGMGE@?$CFs?3?5?$CFd@
  000a1	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 _sprintf
  000ad	83 c4 10	 add	 esp, 16			; 00000010H

; 684  : 	
; 685  : 			add_to_pop_up_list (buffer, list, NULL, UI_LIST_NO_SELECTION, UI_FONT_ARIAL_14, *col);

  000b0	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _col$[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	51		 push	 ecx
  000b9	6a 01		 push	 1
  000bb	6a ff		 push	 -1
  000bd	6a 00		 push	 0
  000bf	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _list$[ebp]
  000c5	52		 push	 edx
  000c6	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list
$LN5@draw_high_:

; 686  : 		}
; 687  : 	}

  000d2	e9 41 ff ff ff	 jmp	 $LN2@draw_high_
$LN1@draw_high_:

; 688  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 08 00	 ret	 8
?draw_high_score_table_to_ui_object_list@@YGXPAUUI_OBJECT@@0@Z ENDP ; draw_high_score_table_to_ui_object_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?draw_high_score_table@@YGXXZ
_TEXT	SEGMENT
_item$ = -272						; size = 4
_old_active_screen$ = -268				; size = 4
_length$ = -264						; size = 4
_loop$ = -260						; size = 4
_buffer$ = -256						; size = 256
?draw_high_score_table@@YGXXZ PROC			; draw_high_score_table, COMDAT

; 577  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 578  : 
; 579  : 	char
; 580  : 		buffer [256];
; 581  : 
; 582  : 	int
; 583  : 		loop,
; 584  : 		length;
; 585  : 
; 586  : 	screen
; 587  : 		*old_active_screen;
; 588  : 
; 589  : 	pilot_score_type
; 590  : 		*item;
; 591  : 
; 592  : 	old_active_screen = get_active_screen ();

  0000c	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  00011	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 593  : 
; 594  : 	set_active_screen ( video_screen );

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 595  : 
; 596  : 	if ( lock_screen ( active_screen ) )

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  0002d	85 c0		 test	 eax, eax
  0002f	0f 84 56 01 00
	00		 je	 $LN5@draw_high_

; 597  : 	{
; 598  : 		//
; 599  : 		// draw leaderboard
; 600  : 		//
; 601  : 		
; 602  : 		for (loop = 0; loop < NUM_TABLE_ENTRIES; loop ++)

  00035	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _loop$[ebp], 0
  0003f	eb 0f		 jmp	 SHORT $LN4@draw_high_
$LN2@draw_high_:
  00041	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _loop$[ebp]
  00047	83 c0 01	 add	 eax, 1
  0004a	89 85 fc fe ff
	ff		 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_high_:
  00050	83 bd fc fe ff
	ff 0a		 cmp	 DWORD PTR _loop$[ebp], 10 ; 0000000aH
  00057	0f 8d e2 00 00
	00		 jge	 $LN3@draw_high_

; 603  : 		{
; 604  : 			item = &pilot_high_score_table [loop];

  0005d	69 85 fc fe ff
	ff 10 01 00 00	 imul	 eax, DWORD PTR _loop$[ebp], 272
  00067	05 00 00 00 00	 add	 eax, OFFSET ?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
  0006c	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _item$[ebp], eax

; 605  : 			
; 606  : 			if (item->valid)

  00072	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	0f 84 b8 00 00
	00		 je	 $LN6@draw_high_

; 607  : 			{
; 608  : 				set_ui_font_type (UI_FONT_ARIAL_14);

  00082	6a 01		 push	 1
  00084	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 609  : 
; 610  : 				if (item->side == ENTITY_SIDE_BLUE_FORCE)

  00089	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  0008f	83 78 08 01	 cmp	 DWORD PTR [eax+8], 1
  00093	75 0d		 jne	 SHORT $LN7@draw_high_

; 611  : 				{
; 612  : 					set_ui_font_colour (ui_colour_blue);

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_blue@@3UREAL_COLOUR@@A ; ui_colour_blue
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 613  : 				}
; 614  : 				else

  000a0	eb 0b		 jmp	 SHORT $LN8@draw_high_
$LN7@draw_high_:

; 615  : 				{
; 616  : 					set_ui_font_colour (ui_colour_orange);

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_orange@@3UREAL_COLOUR@@A ; ui_colour_orange
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN8@draw_high_:

; 617  : 				}
; 618  : 
; 619  : 				length = ui_get_string_length (item->name);

  000ad	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  000b3	83 c0 0c	 add	 eax, 12			; 0000000cH
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  000bc	e8 00 00 00 00	 call	 __ftol2_sse
  000c1	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _length$[ebp], eax

; 620  : 	
; 621  : 				sprintf (buffer, "%s : %d", item->name, item->kills);

  000c7	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _item$[ebp]
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	51		 push	 ecx
  000d0	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _item$[ebp]
  000d6	83 c2 0c	 add	 edx, 12			; 0000000cH
  000d9	52		 push	 edx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_07IFNDKGJF@?$CFs?5?3?5?$CFd@
  000df	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 _sprintf
  000eb	83 c4 10	 add	 esp, 16			; 00000010H

; 622  : 
; 623  : 				// print text assuming game-exit overlay is 640x480 centred in the screen whatever res.
; 624  : 				ui_display_text (buffer, get_integer_screen_x_mid () - length, iy_640_480 + 180 + (loop * (ui_get_font_height () + 1)));

  000ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  000f3	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000f6	83 c1 01	 add	 ecx, 1
  000f9	0f af 8d fc fe
	ff ff		 imul	 ecx, DWORD PTR _loop$[ebp]
  00100	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00106	8d 84 0a b4 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+180]
  0010d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00111	51		 push	 ecx
  00112	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00117	e8 00 00 00 00	 call	 ?get_integer_screen_x_mid@@YGHXZ ; get_integer_screen_x_mid
  0011c	2b 85 f8 fe ff
	ff		 sub	 eax, DWORD PTR _length$[ebp]
  00122	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00126	51		 push	 ecx
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00132	51		 push	 ecx
  00133	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00138	dd d8		 fstp	 ST(0)
$LN6@draw_high_:

; 625  : 			}
; 626  : 		}

  0013a	e9 02 ff ff ff	 jmp	 $LN2@draw_high_
$LN3@draw_high_:

; 627  : 
; 628  : 		//
; 629  : 		// update flash timer
; 630  : 		//
; 631  : 
; 632  : 		flash_timer += (FLASH_RATE * get_delta_time ());

  0013f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00147	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0014f	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?flash_timer@@3MA
  00157	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0015b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0015f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?flash_timer@@3MA, xmm0

; 633  : 
; 634  : 		flash_timer = frac (flash_timer);

  00167	51		 push	 ecx
  00168	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?flash_timer@@3MA
  00170	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00175	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  0017a	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?flash_timer@@3MA

; 635  : 
; 636  : 		unlock_screen ( active_screen );

  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN5@draw_high_:

; 637  : 	}
; 638  : 
; 639  : 	set_active_screen ( old_active_screen );

  0018b	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 640  : }

  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c3		 ret	 0
?draw_high_score_table@@YGXXZ ENDP			; draw_high_score_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?update_pilot_high_score_table@@YGHXZ
_TEXT	SEGMENT
tv349 = -96						; size = 4
tv329 = -96						; size = 4
tv295 = -96						; size = 4
tv271 = -96						; size = 4
tv248 = -96						; size = 4
tv224 = -96						; size = 4
tv203 = -96						; size = 4
tv179 = -96						; size = 4
tv159 = -96						; size = 4
tv137 = -96						; size = 4
tv84 = -96						; size = 4
tv341 = -92						; size = 4
tv321 = -92						; size = 4
tv287 = -92						; size = 4
tv263 = -92						; size = 4
tv240 = -92						; size = 4
tv216 = -92						; size = 4
tv195 = -92						; size = 4
tv171 = -92						; size = 4
tv151 = -92						; size = 4
tv129 = -92						; size = 4
tv76 = -92						; size = 4
$T1 = -88						; size = 4
_full_table$ = -20					; size = 4
_pilot_en$ = -16					; size = 4
_force_en$ = -12					; size = 4
_num_pilots$ = -8					; size = 4
_count$ = -4						; size = 4
?update_pilot_high_score_table@@YGHXZ PROC		; update_pilot_high_score_table, COMDAT

; 430  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 431  : 	int
; 432  : 		count,
; 433  : 		num_pilots;
; 434  : 
; 435  : 	entity
; 436  : 		*force_en,
; 437  : 		*pilot_en;
; 438  : 
; 439  : 	pilot_score_type
; 440  : 		*full_table;
; 441  : 
; 442  : 	//
; 443  : 	// clear table
; 444  : 	//
; 445  : 
; 446  : 	debug_log ("PILOT: Updating High Score Table");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KHEBNCJD@PILOT?3?5Updating?5High?5Score?5Tabl@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 447  : 
; 448  : 	initialise_pilot_high_score_table ();

  00016	e8 00 00 00 00	 call	 ?initialise_pilot_high_score_table@@YGXXZ ; initialise_pilot_high_score_table

; 449  : 
; 450  : 	num_pilots = 0;

  0001b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _num_pilots$[ebp], 0

; 451  : 
; 452  : 	//
; 453  : 	// count up player pilots
; 454  : 	//
; 455  : 
; 456  : 	ASSERT (get_session_entity ());

  00022	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00029	75 18		 jne	 SHORT $LN10@update_pil
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00030	83 c0 1a	 add	 eax, 26			; 0000001aH
  00033	50		 push	 eax
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  0003e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@update_pil:

; 457  : 
; 458  : 	force_en = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  00043	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0004a	74 0c		 je	 SHORT $LN14@update_pil
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d a4	 mov	 DWORD PTR tv76[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN15@update_pil
$LN14@update_pil:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  0005e	83 c2 1c	 add	 edx, 28			; 0000001cH
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN15@update_pil:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN16@update_pil
  00082	c7 45 a0 0e 00
	00 00		 mov	 DWORD PTR tv84[ebp], 14	; 0000000eH
  00089	eb 21		 jmp	 SHORT $LN17@update_pil
$LN16@update_pil:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00091	83 c2 1c	 add	 edx, 28			; 0000001cH
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN17@update_pil:
  000ac	6a 0e		 push	 14			; 0000000eH
  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000b4	51		 push	 ecx
  000b5	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv76[ebp], 180
  000bc	8b 45 a0	 mov	 eax, DWORD PTR tv84[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	89 45 f4	 mov	 DWORD PTR _force_en$[ebp], eax
$LN2@update_pil:

; 459  : 
; 460  : 	while (force_en)

  000cb	83 7d f4 00	 cmp	 DWORD PTR _force_en$[ebp], 0
  000cf	0f 84 9d 01 00
	00		 je	 $LN3@update_pil

; 461  : 	{
; 462  : 		pilot_en = get_local_entity_first_child (force_en, LIST_TYPE_PILOT);

  000d5	83 7d f4 00	 cmp	 DWORD PTR _force_en$[ebp], 0
  000d9	74 0a		 je	 SHORT $LN18@update_pil
  000db	8b 45 f4	 mov	 eax, DWORD PTR _force_en$[ebp]
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	89 4d a4	 mov	 DWORD PTR tv129[ebp], ecx
  000e3	eb 21		 jmp	 SHORT $LN19@update_pil
$LN18@update_pil:
  000e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  000eb	83 c2 20	 add	 edx, 32			; 00000020H
  000ee	52		 push	 edx
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ff	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN19@update_pil:
  00106	b9 01 00 00 00	 mov	 ecx, 1
  0010b	85 c9		 test	 ecx, ecx
  0010d	74 09		 je	 SHORT $LN20@update_pil
  0010f	c7 45 a0 1c 00
	00 00		 mov	 DWORD PTR tv137[ebp], 28 ; 0000001cH
  00116	eb 21		 jmp	 SHORT $LN21@update_pil
$LN20@update_pil:
  00118	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  0011e	83 c2 20	 add	 edx, 32			; 00000020H
  00121	52		 push	 edx
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00127	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00132	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN21@update_pil:
  00139	6a 1c		 push	 28			; 0000001cH
  0013b	8b 4d f4	 mov	 ecx, DWORD PTR _force_en$[ebp]
  0013e	51		 push	 ecx
  0013f	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv129[ebp], 180
  00146	8b 45 a0	 mov	 eax, DWORD PTR tv137[ebp]
  00149	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00150	ff d1		 call	 ecx
  00152	89 45 f0	 mov	 DWORD PTR _pilot_en$[ebp], eax
$LN4@update_pil:

; 463  : 
; 464  : 		while (pilot_en)

  00155	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  00159	0f 84 8e 00 00
	00		 je	 $LN5@update_pil

; 465  : 		{
; 466  : 			num_pilots ++;

  0015f	8b 45 f8	 mov	 eax, DWORD PTR _num_pilots$[ebp]
  00162	83 c0 01	 add	 eax, 1
  00165	89 45 f8	 mov	 DWORD PTR _num_pilots$[ebp], eax

; 467  : 
; 468  : 			pilot_en = get_local_entity_child_succ (pilot_en, LIST_TYPE_PILOT);

  00168	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  0016c	74 0a		 je	 SHORT $LN22@update_pil
  0016e	8b 45 f0	 mov	 eax, DWORD PTR _pilot_en$[ebp]
  00171	8b 08		 mov	 ecx, DWORD PTR [eax]
  00173	89 4d a4	 mov	 DWORD PTR tv151[ebp], ecx
  00176	eb 21		 jmp	 SHORT $LN23@update_pil
$LN22@update_pil:
  00178	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  0017e	83 c2 26	 add	 edx, 38			; 00000026H
  00181	52		 push	 edx
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00192	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN23@update_pil:
  00199	b9 01 00 00 00	 mov	 ecx, 1
  0019e	85 c9		 test	 ecx, ecx
  001a0	74 09		 je	 SHORT $LN24@update_pil
  001a2	c7 45 a0 1c 00
	00 00		 mov	 DWORD PTR tv159[ebp], 28 ; 0000001cH
  001a9	eb 21		 jmp	 SHORT $LN25@update_pil
$LN24@update_pil:
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  001b1	83 c2 26	 add	 edx, 38			; 00000026H
  001b4	52		 push	 edx
  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c5	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN25@update_pil:
  001cc	6a 1c		 push	 28			; 0000001cH
  001ce	8b 4d f0	 mov	 ecx, DWORD PTR _pilot_en$[ebp]
  001d1	51		 push	 ecx
  001d2	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv151[ebp], 180
  001d9	8b 45 a0	 mov	 eax, DWORD PTR tv159[ebp]
  001dc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001e3	ff d1		 call	 ecx
  001e5	89 45 f0	 mov	 DWORD PTR _pilot_en$[ebp], eax

; 469  : 		}

  001e8	e9 68 ff ff ff	 jmp	 $LN4@update_pil
$LN5@update_pil:

; 470  : 
; 471  : 		force_en = get_local_entity_child_succ (force_en, LIST_TYPE_FORCE);

  001ed	83 7d f4 00	 cmp	 DWORD PTR _force_en$[ebp], 0
  001f1	74 0a		 je	 SHORT $LN26@update_pil
  001f3	8b 45 f4	 mov	 eax, DWORD PTR _force_en$[ebp]
  001f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f8	89 4d a4	 mov	 DWORD PTR tv171[ebp], ecx
  001fb	eb 21		 jmp	 SHORT $LN27@update_pil
$LN26@update_pil:
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00203	83 c2 29	 add	 edx, 41			; 00000029H
  00206	52		 push	 edx
  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00217	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN27@update_pil:
  0021e	b9 01 00 00 00	 mov	 ecx, 1
  00223	85 c9		 test	 ecx, ecx
  00225	74 09		 je	 SHORT $LN28@update_pil
  00227	c7 45 a0 0e 00
	00 00		 mov	 DWORD PTR tv179[ebp], 14 ; 0000000eH
  0022e	eb 21		 jmp	 SHORT $LN29@update_pil
$LN28@update_pil:
  00230	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00236	83 c2 29	 add	 edx, 41			; 00000029H
  00239	52		 push	 edx
  0023a	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00244	50		 push	 eax
  00245	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024a	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN29@update_pil:
  00251	6a 0e		 push	 14			; 0000000eH
  00253	8b 4d f4	 mov	 ecx, DWORD PTR _force_en$[ebp]
  00256	51		 push	 ecx
  00257	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv171[ebp], 180
  0025e	8b 45 a0	 mov	 eax, DWORD PTR tv179[ebp]
  00261	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00268	ff d1		 call	 ecx
  0026a	89 45 f4	 mov	 DWORD PTR _force_en$[ebp], eax

; 472  : 	}

  0026d	e9 59 fe ff ff	 jmp	 $LN2@update_pil
$LN3@update_pil:

; 473  : 
; 474  : 	if (num_pilots == 0)

  00272	83 7d f8 00	 cmp	 DWORD PTR _num_pilots$[ebp], 0
  00276	75 07		 jne	 SHORT $LN11@update_pil

; 475  : 	{
; 476  : 		return 0;

  00278	33 c0		 xor	 eax, eax
  0027a	e9 9c 04 00 00	 jmp	 $LN1@update_pil
$LN11@update_pil:

; 477  : 	}
; 478  : 
; 479  : 	//
; 480  : 	// create arrays of player pilots and their scores
; 481  : 	//
; 482  : 
; 483  : 	full_table = (pilot_score_type *) malloc_fast_mem (sizeof (pilot_score_type) * num_pilots);

  0027f	69 45 f8 10 01
	00 00		 imul	 eax, DWORD PTR _num_pilots$[ebp], 272
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0028c	89 45 ec	 mov	 DWORD PTR _full_table$[ebp], eax

; 484  : 
; 485  : 	count = 0;

  0028f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 486  : 
; 487  : 	force_en = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  00296	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0029d	74 0c		 je	 SHORT $LN30@update_pil
  0029f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  002a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a6	89 4d a4	 mov	 DWORD PTR tv195[ebp], ecx
  002a9	eb 21		 jmp	 SHORT $LN31@update_pil
$LN30@update_pil:
  002ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  002b1	83 c2 39	 add	 edx, 57			; 00000039H
  002b4	52		 push	 edx
  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv195[ebp], 0
$LN31@update_pil:
  002cc	b9 01 00 00 00	 mov	 ecx, 1
  002d1	85 c9		 test	 ecx, ecx
  002d3	74 09		 je	 SHORT $LN32@update_pil
  002d5	c7 45 a0 0e 00
	00 00		 mov	 DWORD PTR tv203[ebp], 14 ; 0000000eH
  002dc	eb 21		 jmp	 SHORT $LN33@update_pil
$LN32@update_pil:
  002de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  002e4	83 c2 39	 add	 edx, 57			; 00000039H
  002e7	52		 push	 edx
  002e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002f2	50		 push	 eax
  002f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv203[ebp], 0
$LN33@update_pil:
  002ff	6a 0e		 push	 14			; 0000000eH
  00301	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00307	51		 push	 ecx
  00308	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv195[ebp], 180
  0030f	8b 45 a0	 mov	 eax, DWORD PTR tv203[ebp]
  00312	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00319	ff d1		 call	 ecx
  0031b	89 45 f4	 mov	 DWORD PTR _force_en$[ebp], eax
$LN6@update_pil:

; 488  : 
; 489  : 	while (force_en)

  0031e	83 7d f4 00	 cmp	 DWORD PTR _force_en$[ebp], 0
  00322	0f 84 83 03 00
	00		 je	 $LN7@update_pil

; 490  : 	{
; 491  : 		pilot_en = get_local_entity_first_child (force_en, LIST_TYPE_PILOT);

  00328	83 7d f4 00	 cmp	 DWORD PTR _force_en$[ebp], 0
  0032c	74 0a		 je	 SHORT $LN34@update_pil
  0032e	8b 45 f4	 mov	 eax, DWORD PTR _force_en$[ebp]
  00331	8b 08		 mov	 ecx, DWORD PTR [eax]
  00333	89 4d a4	 mov	 DWORD PTR tv216[ebp], ecx
  00336	eb 21		 jmp	 SHORT $LN35@update_pil
$LN34@update_pil:
  00338	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  0033e	83 c2 3d	 add	 edx, 61			; 0000003dH
  00341	52		 push	 edx
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00352	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN35@update_pil:
  00359	b9 01 00 00 00	 mov	 ecx, 1
  0035e	85 c9		 test	 ecx, ecx
  00360	74 09		 je	 SHORT $LN36@update_pil
  00362	c7 45 a0 1c 00
	00 00		 mov	 DWORD PTR tv224[ebp], 28 ; 0000001cH
  00369	eb 21		 jmp	 SHORT $LN37@update_pil
$LN36@update_pil:
  0036b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00371	83 c2 3d	 add	 edx, 61			; 0000003dH
  00374	52		 push	 edx
  00375	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0037f	50		 push	 eax
  00380	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00385	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv224[ebp], 0
$LN37@update_pil:
  0038c	6a 1c		 push	 28			; 0000001cH
  0038e	8b 4d f4	 mov	 ecx, DWORD PTR _force_en$[ebp]
  00391	51		 push	 ecx
  00392	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv216[ebp], 180
  00399	8b 45 a0	 mov	 eax, DWORD PTR tv224[ebp]
  0039c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003a3	ff d1		 call	 ecx
  003a5	89 45 f0	 mov	 DWORD PTR _pilot_en$[ebp], eax
$LN8@update_pil:

; 492  : 
; 493  : 		while (pilot_en)

  003a8	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  003ac	0f 84 74 02 00
	00		 je	 $LN9@update_pil

; 494  : 		{
; 495  : 			full_table [count].kills = get_local_entity_int_value (pilot_en, INT_TYPE_KILLS);

  003b2	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  003b6	74 0a		 je	 SHORT $LN38@update_pil
  003b8	8b 45 f0	 mov	 eax, DWORD PTR _pilot_en$[ebp]
  003bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003bd	89 4d a4	 mov	 DWORD PTR tv240[ebp], ecx
  003c0	eb 21		 jmp	 SHORT $LN39@update_pil
$LN38@update_pil:
  003c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  003c8	83 c2 41	 add	 edx, 65			; 00000041H
  003cb	52		 push	 edx
  003cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003dc	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv240[ebp], 0
$LN39@update_pil:
  003e3	b9 01 00 00 00	 mov	 ecx, 1
  003e8	85 c9		 test	 ecx, ecx
  003ea	74 09		 je	 SHORT $LN40@update_pil
  003ec	c7 45 a0 72 00
	00 00		 mov	 DWORD PTR tv248[ebp], 114 ; 00000072H
  003f3	eb 21		 jmp	 SHORT $LN41@update_pil
$LN40@update_pil:
  003f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  003fb	83 c2 41	 add	 edx, 65			; 00000041H
  003fe	52		 push	 edx
  003ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00404	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00409	50		 push	 eax
  0040a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040f	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv248[ebp], 0
$LN41@update_pil:
  00416	6a 72		 push	 114			; 00000072H
  00418	8b 4d f0	 mov	 ecx, DWORD PTR _pilot_en$[ebp]
  0041b	51		 push	 ecx
  0041c	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv240[ebp], 1116
  00423	8b 45 a0	 mov	 eax, DWORD PTR tv248[ebp]
  00426	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0042d	ff d1		 call	 ecx
  0042f	69 55 fc 10 01
	00 00		 imul	 edx, DWORD PTR _count$[ebp], 272
  00436	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  00439	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 496  : 
; 497  : 			full_table [count].side = (entity_sides) get_local_entity_int_value (pilot_en, INT_TYPE_SIDE);

  0043c	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  00440	74 0a		 je	 SHORT $LN42@update_pil
  00442	8b 45 f0	 mov	 eax, DWORD PTR _pilot_en$[ebp]
  00445	8b 08		 mov	 ecx, DWORD PTR [eax]
  00447	89 4d a4	 mov	 DWORD PTR tv263[ebp], ecx
  0044a	eb 21		 jmp	 SHORT $LN43@update_pil
$LN42@update_pil:
  0044c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00452	83 c2 43	 add	 edx, 67			; 00000043H
  00455	52		 push	 edx
  00456	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0045b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00466	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv263[ebp], 0
$LN43@update_pil:
  0046d	b9 01 00 00 00	 mov	 ecx, 1
  00472	85 c9		 test	 ecx, ecx
  00474	74 09		 je	 SHORT $LN44@update_pil
  00476	c7 45 a0 bb 00
	00 00		 mov	 DWORD PTR tv271[ebp], 187 ; 000000bbH
  0047d	eb 21		 jmp	 SHORT $LN45@update_pil
$LN44@update_pil:
  0047f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00485	83 c2 43	 add	 edx, 67			; 00000043H
  00488	52		 push	 edx
  00489	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0048e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00493	50		 push	 eax
  00494	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00499	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv271[ebp], 0
$LN45@update_pil:
  004a0	68 bb 00 00 00	 push	 187			; 000000bbH
  004a5	8b 4d f0	 mov	 ecx, DWORD PTR _pilot_en$[ebp]
  004a8	51		 push	 ecx
  004a9	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv263[ebp], 1116
  004b0	8b 45 a0	 mov	 eax, DWORD PTR tv271[ebp]
  004b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004ba	ff d1		 call	 ecx
  004bc	69 55 fc 10 01
	00 00		 imul	 edx, DWORD PTR _count$[ebp], 272
  004c3	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  004c6	89 44 11 08	 mov	 DWORD PTR [ecx+edx+8], eax

; 498  : 
; 499  : 			full_table [count].valid = TRUE;

  004ca	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _count$[ebp], 272
  004d1	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  004d4	c7 44 01 04 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+4], 1

; 500  : 
; 501  : 			strcpy (full_table [count].name, get_local_entity_string (pilot_en, STRING_TYPE_PILOTS_NAME));

  004dc	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  004e0	74 0a		 je	 SHORT $LN46@update_pil
  004e2	8b 45 f0	 mov	 eax, DWORD PTR _pilot_en$[ebp]
  004e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e7	89 4d a4	 mov	 DWORD PTR tv287[ebp], ecx
  004ea	eb 21		 jmp	 SHORT $LN47@update_pil
$LN46@update_pil:
  004ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  004f2	83 c2 47	 add	 edx, 71			; 00000047H
  004f5	52		 push	 edx
  004f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  004fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00500	50		 push	 eax
  00501	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00506	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv287[ebp], 0
$LN47@update_pil:
  0050d	b9 01 00 00 00	 mov	 ecx, 1
  00512	85 c9		 test	 ecx, ecx
  00514	74 09		 je	 SHORT $LN48@update_pil
  00516	c7 45 a0 0a 00
	00 00		 mov	 DWORD PTR tv295[ebp], 10 ; 0000000aH
  0051d	eb 21		 jmp	 SHORT $LN49@update_pil
$LN48@update_pil:
  0051f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  00525	83 c2 47	 add	 edx, 71			; 00000047H
  00528	52		 push	 edx
  00529	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00533	50		 push	 eax
  00534	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00539	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv295[ebp], 0
$LN49@update_pil:
  00540	6a 0a		 push	 10			; 0000000aH
  00542	8b 4d f0	 mov	 ecx, DWORD PTR _pilot_en$[ebp]
  00545	51		 push	 ecx
  00546	6b 55 a4 34	 imul	 edx, DWORD PTR tv287[ebp], 52
  0054a	8b 45 a0	 mov	 eax, DWORD PTR tv295[ebp]
  0054d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00554	ff d1		 call	 ecx
  00556	50		 push	 eax
  00557	69 55 fc 10 01
	00 00		 imul	 edx, DWORD PTR _count$[ebp], 272
  0055e	8b 45 ec	 mov	 eax, DWORD PTR _full_table$[ebp]
  00561	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00565	51		 push	 ecx
  00566	e8 00 00 00 00	 call	 _strcpy
  0056b	83 c4 08	 add	 esp, 8

; 502  : 
; 503  : 			debug_log ("PILOT: Adding %s (kills %d) to High Score Table", full_table [count].name, full_table [count].kills);

  0056e	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _count$[ebp], 272
  00575	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  00578	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  0057b	52		 push	 edx
  0057c	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _count$[ebp], 272
  00583	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  00586	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0058a	52		 push	 edx
  0058b	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NOLCJCPA@PILOT?3?5Adding?5?$CFs?5?$CIkills?5?$CFd?$CJ?5to?5@
  00590	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00595	83 c4 0c	 add	 esp, 12			; 0000000cH

; 504  : 
; 505  : 			count ++;

  00598	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0059b	83 c0 01	 add	 eax, 1
  0059e	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 506  : 
; 507  : 			pilot_en = get_local_entity_child_succ (pilot_en, LIST_TYPE_PILOT);

  005a1	83 7d f0 00	 cmp	 DWORD PTR _pilot_en$[ebp], 0
  005a5	74 0a		 je	 SHORT $LN50@update_pil
  005a7	8b 45 f0	 mov	 eax, DWORD PTR _pilot_en$[ebp]
  005aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ac	89 4d a4	 mov	 DWORD PTR tv321[ebp], ecx
  005af	eb 21		 jmp	 SHORT $LN51@update_pil
$LN50@update_pil:
  005b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  005b7	83 c2 4d	 add	 edx, 77			; 0000004dH
  005ba	52		 push	 edx
  005bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c5	50		 push	 eax
  005c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005cb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv321[ebp], 0
$LN51@update_pil:
  005d2	b9 01 00 00 00	 mov	 ecx, 1
  005d7	85 c9		 test	 ecx, ecx
  005d9	74 09		 je	 SHORT $LN52@update_pil
  005db	c7 45 a0 1c 00
	00 00		 mov	 DWORD PTR tv329[ebp], 28 ; 0000001cH
  005e2	eb 21		 jmp	 SHORT $LN53@update_pil
$LN52@update_pil:
  005e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  005ea	83 c2 4d	 add	 edx, 77			; 0000004dH
  005ed	52		 push	 edx
  005ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  005f8	50		 push	 eax
  005f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005fe	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv329[ebp], 0
$LN53@update_pil:
  00605	6a 1c		 push	 28			; 0000001cH
  00607	8b 4d f0	 mov	 ecx, DWORD PTR _pilot_en$[ebp]
  0060a	51		 push	 ecx
  0060b	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv321[ebp], 180
  00612	8b 45 a0	 mov	 eax, DWORD PTR tv329[ebp]
  00615	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0061c	ff d1		 call	 ecx
  0061e	89 45 f0	 mov	 DWORD PTR _pilot_en$[ebp], eax

; 508  : 		}

  00621	e9 82 fd ff ff	 jmp	 $LN8@update_pil
$LN9@update_pil:

; 509  : 
; 510  : 		force_en = get_local_entity_child_succ (force_en, LIST_TYPE_FORCE);

  00626	83 7d f4 00	 cmp	 DWORD PTR _force_en$[ebp], 0
  0062a	74 0a		 je	 SHORT $LN54@update_pil
  0062c	8b 45 f4	 mov	 eax, DWORD PTR _force_en$[ebp]
  0062f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00631	89 4d a4	 mov	 DWORD PTR tv341[ebp], ecx
  00634	eb 21		 jmp	 SHORT $LN55@update_pil
$LN54@update_pil:
  00636	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  0063c	83 c2 50	 add	 edx, 80			; 00000050H
  0063f	52		 push	 edx
  00640	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00645	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0064a	50		 push	 eax
  0064b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00650	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv341[ebp], 0
$LN55@update_pil:
  00657	b9 01 00 00 00	 mov	 ecx, 1
  0065c	85 c9		 test	 ecx, ecx
  0065e	74 09		 je	 SHORT $LN56@update_pil
  00660	c7 45 a0 0e 00
	00 00		 mov	 DWORD PTR tv349[ebp], 14 ; 0000000eH
  00667	eb 21		 jmp	 SHORT $LN57@update_pil
$LN56@update_pil:
  00669	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  0066f	83 c2 50	 add	 edx, 80			; 00000050H
  00672	52		 push	 edx
  00673	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00678	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0067d	50		 push	 eax
  0067e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00683	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv349[ebp], 0
$LN57@update_pil:
  0068a	6a 0e		 push	 14			; 0000000eH
  0068c	8b 4d f4	 mov	 ecx, DWORD PTR _force_en$[ebp]
  0068f	51		 push	 ecx
  00690	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv341[ebp], 180
  00697	8b 45 a0	 mov	 eax, DWORD PTR tv349[ebp]
  0069a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006a1	ff d1		 call	 ecx
  006a3	89 45 f4	 mov	 DWORD PTR _force_en$[ebp], eax

; 511  : 	}

  006a6	e9 73 fc ff ff	 jmp	 $LN6@update_pil
$LN7@update_pil:

; 512  : 
; 513  : 	ASSERT (count == num_pilots);

  006ab	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  006ae	3b 45 f8	 cmp	 eax, DWORD PTR _num_pilots$[ebp]
  006b1	74 18		 je	 SHORT $LN12@update_pil
  006b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_pilot_high_score_table@@YGHXZ@4JA
  006b8	83 c0 53	 add	 eax, 83			; 00000053H
  006bb	50		 push	 eax
  006bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  006c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BIALEBEE@count?5?$DN?$DN?5num_pilots@
  006c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@update_pil:

; 514  : 
; 515  : 	//
; 516  : 	// quicksort the list
; 517  : 	//
; 518  : 
; 519  :    qs_table (full_table, 0, num_pilots - 1);

  006cb	8b 45 f8	 mov	 eax, DWORD PTR _num_pilots$[ebp]
  006ce	83 e8 01	 sub	 eax, 1
  006d1	50		 push	 eax
  006d2	6a 00		 push	 0
  006d4	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  006d7	51		 push	 ecx
  006d8	e8 00 00 00 00	 call	 ?qs_table@@YGXPAUPILOT_SCORE_TYPE@@HH@Z ; qs_table

; 520  : 
; 521  : 	//
; 522  : 	// add first n items to the high score table
; 523  : 	//
; 524  : 
; 525  : 	count = min (num_pilots, NUM_TABLE_ENTRIES);

  006dd	c7 45 a8 0a 00
	00 00		 mov	 DWORD PTR $T1[ebp], 10	; 0000000aH
  006e4	8d 45 a8	 lea	 eax, DWORD PTR $T1[ebp]
  006e7	50		 push	 eax
  006e8	8d 4d f8	 lea	 ecx, DWORD PTR _num_pilots$[ebp]
  006eb	51		 push	 ecx
  006ec	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  006f1	8b 10		 mov	 edx, DWORD PTR [eax]
  006f3	89 55 fc	 mov	 DWORD PTR _count$[ebp], edx

; 526  : 
; 527  : 	memcpy (pilot_high_score_table, full_table, sizeof (pilot_score_type) * count);

  006f6	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _count$[ebp], 272
  006fd	50		 push	 eax
  006fe	8b 4d ec	 mov	 ecx, DWORD PTR _full_table$[ebp]
  00701	51		 push	 ecx
  00702	68 00 00 00 00	 push	 OFFSET ?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
  00707	e8 00 00 00 00	 call	 _memcpy
  0070c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 528  : 
; 529  : 	free_mem (full_table);

  0070f	8b 45 ec	 mov	 eax, DWORD PTR _full_table$[ebp]
  00712	50		 push	 eax
  00713	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 530  : 
; 531  : 	return count;

  00718	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
$LN1@update_pil:

; 532  : }

  0071b	5f		 pop	 edi
  0071c	5e		 pop	 esi
  0071d	5b		 pop	 ebx
  0071e	8b e5		 mov	 esp, ebp
  00720	5d		 pop	 ebp
  00721	c3		 ret	 0
?update_pilot_high_score_table@@YGHXZ ENDP		; update_pilot_high_score_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?initialise_pilot_high_score_table@@YGXXZ
_TEXT	SEGMENT
?initialise_pilot_high_score_table@@YGXXZ PROC		; initialise_pilot_high_score_table, COMDAT

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 404  : 	memset (pilot_high_score_table, 0, sizeof (pilot_score_type) * NUM_TABLE_ENTRIES);

  00009	68 a0 0a 00 00	 push	 2720			; 00000aa0H
  0000e	6a 00		 push	 0
  00010	68 00 00 00 00	 push	 OFFSET ?pilot_high_score_table@@3PAUPILOT_SCORE_TYPE@@A ; pilot_high_score_table
  00015	e8 00 00 00 00	 call	 _memset
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 405  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?initialise_pilot_high_score_table@@YGXXZ ENDP		; initialise_pilot_high_score_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?send_pilot_quit_message@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv150 = -276						; size = 4
tv88 = -276						; size = 4
tv142 = -272						; size = 4
tv80 = -272						; size = 4
_text$ = -204						; size = 200
_player_count$ = -4					; size = 4
_en$ = 8						; size = 4
?send_pilot_quit_message@@YGXPAUENTITY@@@Z PROC		; send_pilot_quit_message, COMDAT

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 225  : 	int
; 226  : 		player_count;
; 227  : 
; 228  : 	char
; 229  : 		text [200];
; 230  : 
; 231  : 	//
; 232  : 	// Client now joined in..... send system message to other players
; 233  : 	//
; 234  : 
; 235  : 	player_count = get_session_pilot_count () - 1;

  0000c	e8 00 00 00 00	 call	 ?get_session_pilot_count@@YGHXZ ; get_session_pilot_count
  00011	83 e8 01	 sub	 eax, 1
  00014	89 45 fc	 mov	 DWORD PTR _player_count$[ebp], eax

; 236  : 
; 237  : 	if (player_count == 1)

  00017	83 7d fc 01	 cmp	 DWORD PTR _player_count$[ebp], 1
  0001b	0f 85 bc 00 00
	00		 jne	 $LN2@send_pilot

; 238  : 	{
; 239  : 		sprintf (text, "%s %s - 1 %s",

  00021	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00025	74 0d		 je	 SHORT $LN6@send_pilot
  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv80[ebp], ecx
  00032	eb 24		 jmp	 SHORT $LN7@send_pilot
$LN6@send_pilot:
  00034	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA
  0003a	83 c2 10	 add	 edx, 16			; 00000010H
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004e	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
$LN7@send_pilot:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 0c		 je	 SHORT $LN8@send_pilot
  00061	c7 85 ec fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv88[ebp], 10	; 0000000aH
  0006b	eb 24		 jmp	 SHORT $LN9@send_pilot
$LN8@send_pilot:
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA
  00073	83 c2 10	 add	 edx, 16			; 00000010H
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN9@send_pilot:
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KEJDMCGB@player?5connected@
  00096	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0009b	50		 push	 eax
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_04KNNLNNGO@quit@
  000a1	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000a6	50		 push	 eax
  000a7	6a 0a		 push	 10			; 0000000aH
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ac	51		 push	 ecx
  000ad	6b 95 f0 fe ff
	ff 34		 imul	 edx, DWORD PTR tv80[ebp], 52
  000b4	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv88[ebp]
  000ba	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  000c1	ff d1		 call	 ecx
  000c3	50		 push	 eax
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LNJPAFMG@?$CFs?5?$CFs?5?9?51?5?$CFs@
  000c9	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _text$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 _sprintf
  000d5	83 c4 14	 add	 esp, 20			; 00000014H

; 240  : 							get_local_entity_string (en, STRING_TYPE_PILOTS_NAME),
; 241  : 							get_trans ("quit"),
; 242  : 							get_trans ("player connected"));
; 243  : 	}
; 244  : 	else

  000d8	e9 bb 00 00 00	 jmp	 $LN3@send_pilot
$LN2@send_pilot:

; 245  : 	{
; 246  : 		sprintf (text, "%s %s - %d %s",

  000dd	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000e1	74 0d		 je	 SHORT $LN10@send_pilot
  000e3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  000ee	eb 24		 jmp	 SHORT $LN11@send_pilot
$LN10@send_pilot:
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA
  000f6	83 c2 17	 add	 edx, 23			; 00000017H
  000f9	52		 push	 edx
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN11@send_pilot:
  00114	b9 01 00 00 00	 mov	 ecx, 1
  00119	85 c9		 test	 ecx, ecx
  0011b	74 0c		 je	 SHORT $LN12@send_pilot
  0011d	c7 85 ec fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv150[ebp], 10 ; 0000000aH
  00127	eb 24		 jmp	 SHORT $LN13@send_pilot
$LN12@send_pilot:
  00129	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_pilot_quit_message@@YGXPAUENTITY@@@Z@4JA
  0012f	83 c2 17	 add	 edx, 23			; 00000017H
  00132	52		 push	 edx
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0013d	50		 push	 eax
  0013e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00143	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN13@send_pilot:
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NNHBMJMI@players?5connected@
  00152	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00157	50		 push	 eax
  00158	8b 4d fc	 mov	 ecx, DWORD PTR _player_count$[ebp]
  0015b	51		 push	 ecx
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_04KNNLNNGO@quit@
  00161	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00166	50		 push	 eax
  00167	6a 0a		 push	 10			; 0000000aH
  00169	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0016c	52		 push	 edx
  0016d	6b 85 f0 fe ff
	ff 34		 imul	 eax, DWORD PTR tv142[ebp], 52
  00174	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv150[ebp]
  0017a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  00181	ff d2		 call	 edx
  00183	50		 push	 eax
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BMHDMOIB@?$CFs?5?$CFs?5?9?5?$CFd?5?$CFs@
  00189	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 _sprintf
  00195	83 c4 18	 add	 esp, 24			; 00000018H
$LN3@send_pilot:

; 247  : 							get_local_entity_string (en, STRING_TYPE_PILOTS_NAME),
; 248  : 							get_trans ("quit"),
; 249  : 							player_count,
; 250  : 							get_trans ("players connected"));
; 251  : 	}
; 252  : 
; 253  : 	send_text_message (en, NULL, MESSAGE_TEXT_SYSTEM_NEW_PILOT, text);

  00198	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  0019e	50		 push	 eax
  0019f	6a 00		 push	 0
  001a1	6a 00		 push	 0
  001a3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a6	51		 push	 ecx
  001a7	e8 00 00 00 00	 call	 ?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ; send_text_message

; 254  : 	
; 255  : 	server_log (text); // Jabberwock Server log

  001ac	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _text$[ebp]
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ?server_log@@YAXPBDZZ	; server_log
  001b8	83 c4 04	 add	 esp, 4

; 256  : 	
; 257  : 	if ((command_line_pause_server) && (player_count <= 1)) // 040220 Jabberwock Pause server, changed to <=1 by Werewolf

  001bb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_pause_server@@3HA, 0 ; command_line_pause_server
  001c2	74 18		 je	 SHORT $LN1@send_pilot
  001c4	83 7d fc 01	 cmp	 DWORD PTR _player_count$[ebp], 1
  001c8	7f 12		 jg	 SHORT $LN1@send_pilot

; 258  : 	{
; 259  : 		force_pause_acceleration();

  001ca	e8 00 00 00 00	 call	 ?force_pause_acceleration@@YGXXZ ; force_pause_acceleration

; 260  : 		server_log ("Server paused");

  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IAAMALKI@Server?5paused@
  001d4	e8 00 00 00 00	 call	 ?server_log@@YAXPBDZZ	; server_log
  001d9	83 c4 04	 add	 esp, 4
$LN1@send_pilot:

; 261  : 	}
; 262  : }	

  001dc	5f		 pop	 edi
  001dd	5e		 pop	 esi
  001de	5b		 pop	 ebx
  001df	8b e5		 mov	 esp, ebp
  001e1	5d		 pop	 ebp
  001e2	c2 04 00	 ret	 4
?send_pilot_quit_message@@YGXPAUENTITY@@@Z ENDP		; send_pilot_quit_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?get_player_task@@YGPAUENTITY@@PAU1@@Z
_TEXT	SEGMENT
tv128 = -72						; size = 4
tv88 = -68						; size = 4
tv76 = -68						; size = 4
_en$ = 8						; size = 4
?get_player_task@@YGPAUENTITY@@PAU1@@Z PROC		; get_player_task, COMDAT

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 413  : 	if (!en)

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 08		 jne	 SHORT $LN2@get_player

; 414  : 	{
; 415  : 		en = get_pilot_entity ();

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00014	89 45 08	 mov	 DWORD PTR _en$[ebp], eax
$LN2@get_player:

; 416  : 	}
; 417  : 
; 418  : 	ASSERT (en);

  00017	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001b	75 18		 jne	 SHORT $LN3@get_player
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00022	83 c0 06	 add	 eax, 6
  00025	50		 push	 eax
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00030	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 419  : 
; 420  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_PILOT);

  00035	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00039	74 0a		 je	 SHORT $LN6@get_player
  0003b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	89 4d bc	 mov	 DWORD PTR tv76[ebp], ecx
  00043	eb 21		 jmp	 SHORT $LN7@get_player
$LN6@get_player:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0004b	83 c2 08	 add	 edx, 8
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN7@get_player:
  00066	83 7d bc 14	 cmp	 DWORD PTR tv76[ebp], 20	; 00000014H
  0006a	74 18		 je	 SHORT $LN4@get_player
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00071	83 c0 08	 add	 eax, 8
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NDIHHFDN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_player:

; 421  : 
; 422  : 	return get_local_entity_parent (en, LIST_TYPE_PLAYER_TASK);

  00084	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00088	74 0a		 je	 SHORT $LN8@get_player
  0008a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008f	89 4d bc	 mov	 DWORD PTR tv88[ebp], ecx
  00092	eb 21		 jmp	 SHORT $LN9@get_player
$LN8@get_player:
  00094	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0009a	83 c2 0a	 add	 edx, 10			; 0000000aH
  0009d	52		 push	 edx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ae	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN9@get_player:
  000b5	b9 01 00 00 00	 mov	 ecx, 1
  000ba	85 c9		 test	 ecx, ecx
  000bc	74 09		 je	 SHORT $LN10@get_player
  000be	c7 45 b8 1e 00
	00 00		 mov	 DWORD PTR tv128[ebp], 30 ; 0000001eH
  000c5	eb 21		 jmp	 SHORT $LN11@get_player
$LN10@get_player:
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_player_task@@YGPAUENTITY@@PAU2@@Z@4JA
  000cd	83 c2 0a	 add	 edx, 10			; 0000000aH
  000d0	52		 push	 edx
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e1	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN11@get_player:
  000e8	6a 1e		 push	 30			; 0000001eH
  000ea	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ed	51		 push	 ecx
  000ee	69 55 bc b4 00
	00 00		 imul	 edx, DWORD PTR tv88[ebp], 180
  000f5	8b 45 b8	 mov	 eax, DWORD PTR tv128[ebp]
  000f8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000ff	ff d1		 call	 ecx

; 423  : }

  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
?get_player_task@@YGPAUENTITY@@PAU1@@Z ENDP		; get_player_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?create_client_pilot@@YGXXZ
_TEXT	SEGMENT
_pilot_data$ = -284					; size = 284
?create_client_pilot@@YGXXZ PROC			; create_client_pilot, COMDAT

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 332  : 	client_pilot_request_data
; 333  : 		pilot_data;
; 334  : 
; 335  : 	ASSERT (get_comms_model () == COMMS_MODEL_CLIENT);

  0000c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  00013	74 18		 je	 SHORT $LN2@create_cli
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_client_pilot@@YGXXZ@4JA
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@HDFJMCJJ@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_cli:

; 336  : 
; 337  : 	//
; 338  : 	// pack required gunship data
; 339  : 	//
; 340  : 
; 341  : 	strcpy (pilot_data.name, get_player_log_name (get_current_player_log ()));

  0002d	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_name
  00038	50		 push	 eax
  00039	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _pilot_data$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 _strcpy
  00045	83 c4 08	 add	 esp, 8

; 342  : 	pilot_data.side = get_global_gunship_side ();

  00048	a1 08 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  0004d	89 45 ec	 mov	 DWORD PTR _pilot_data$[ebp+264], eax

; 343  : 	pilot_data.rank = get_player_log_rank (get_global_gunship_side (), get_current_player_log ());

  00050	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  00055	50		 push	 eax
  00056	a1 08 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_rank
  00061	89 45 f0	 mov	 DWORD PTR _pilot_data$[ebp+268], eax

; 344  : 	pilot_data.sub_type = ENTITY_SUB_TYPE_PILOT_PILOT;

  00064	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pilot_data$[ebp+272], 0

; 345  : 	pilot_data.unique_id = direct_play_get_player_id ();

  0006b	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00070	89 45 f8	 mov	 DWORD PTR _pilot_data$[ebp+276], eax

; 346  : 	pilot_data.difficulty = get_global_difficulty_level ();

  00073	a1 ac 01 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+428
  00078	89 45 fc	 mov	 DWORD PTR _pilot_data$[ebp+280], eax

; 347  : 
; 348  : 	//
; 349  : 	// Send request
; 350  : 	//
; 351  : 
; 352  : 	send_packet (get_server_id (), PACKET_TYPE_CLIENT_PILOT_REQUEST, (unsigned char *) &pilot_data, sizeof (client_pilot_request_data), SEND_TYPE_PERSONAL);

  0007b	6a 00		 push	 0
  0007d	68 1c 01 00 00	 push	 284			; 0000011cH
  00082	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _pilot_data$[ebp]
  00088	50		 push	 eax
  00089	6a 04		 push	 4
  0008b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?system_server_id@@3KA ; system_server_id
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 ?send_packet@@YGXKW4PACKET_TYPES@@PAEHW4SEND_TYPES@@@Z ; send_packet

; 353  : 
; 354  : 	// turn off NEXT button while Pilot entity is being created client_server
; 355  : 	if (get_comms_model () == COMMS_MODEL_CLIENT)

  00097	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  0009e	75 0c		 jne	 SHORT $LN1@create_cli

; 356  : 	{
; 357  : 
; 358  : 		set_display_gunship_buttons (FALSE, "ENGAGE");

  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_06HAFCIKEH@ENGAGE@
  000a5	6a 00		 push	 0
  000a7	e8 00 00 00 00	 call	 ?set_display_gunship_buttons@@YGXHPAD@Z ; set_display_gunship_buttons
$LN1@create_cli:

; 359  : 	}
; 360  : }

  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?create_client_pilot@@YGXXZ ENDP			; create_client_pilot
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?create_server_pilot@@YGXXZ
_TEXT	SEGMENT
_en$ = -4						; size = 4
?create_server_pilot@@YGXXZ PROC			; create_server_pilot, COMDAT

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 308  : 	entity
; 309  : 		*en;
; 310  : 		
; 311  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@create_ser
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_server_pilot@@YGXXZ@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_ser:

; 312  : 
; 313  : 	en = create_new_pilot_entity

  0002a	a1 ac 01 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+428
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00035	50		 push	 eax
  00036	6a 00		 push	 0
  00038	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  0003d	50		 push	 eax
  0003e	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 ?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_rank
  0004a	50		 push	 eax
  0004b	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_name
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z ; create_new_pilot_entity
  00063	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 314  : 				(
; 315  : 					get_player_log_name (get_current_player_log ()),
; 316  : 					get_global_gunship_side (),
; 317  : 					get_player_log_rank (get_global_gunship_side (), get_current_player_log ()),
; 318  : 					ENTITY_SUB_TYPE_PILOT_PILOT,
; 319  : 					direct_play_get_player_id (),
; 320  : 					get_global_difficulty_level ()
; 321  : 				);
; 322  : 
; 323  : 	set_pilot_entity (en);

  00066	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?set_pilot_entity@@YGXPAUENTITY@@@Z ; set_pilot_entity

; 324  : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?create_server_pilot@@YGXXZ ENDP			; create_server_pilot
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z
_TEXT	SEGMENT
_force$ = -8						; size = 4
_en$ = -4						; size = 4
_name$ = 8						; size = 4
_side$ = 12						; size = 4
_rank$ = 16						; size = 4
_sub_type$ = 20						; size = 4
_unique_id$ = 24					; size = 4
_difficulty$ = 28					; size = 4
?create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z PROC ; create_new_pilot_entity, COMDAT

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 271  : 	entity
; 272  : 		*en,
; 273  : 		*force;
; 274  : 
; 275  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@create_new
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_new:

; 276  : 	
; 277  : 	ASSERT (name);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@create_new
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z@4JA
  00035	83 c0 07	 add	 eax, 7
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_04MEMAJGDJ@name@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@create_new:

; 278  : 
; 279  : 	force = get_local_force_entity (side);

  00048	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00051	89 45 f8	 mov	 DWORD PTR _force$[ebp], eax

; 280  : 
; 281  : 	ASSERT (force);

  00054	83 7d f8 00	 cmp	 DWORD PTR _force$[ebp], 0
  00058	75 18		 jne	 SHORT $LN4@create_new
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z@4JA
  0005f	83 c0 0b	 add	 eax, 11			; 0000000bH
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@create_new:

; 282  : 
; 283  : 	en = create_client_server_entity

  00072	6a 00		 push	 0
  00074	8b 45 1c	 mov	 eax, DWORD PTR _difficulty$[ebp]
  00077	50		 push	 eax
  00078	6a 2f		 push	 47			; 0000002fH
  0007a	6a 05		 push	 5
  0007c	8b 4d 10	 mov	 ecx, DWORD PTR _rank$[ebp]
  0007f	51		 push	 ecx
  00080	68 9a 00 00 00	 push	 154			; 0000009aH
  00085	6a 05		 push	 5
  00087	8b 55 0c	 mov	 edx, DWORD PTR _side$[ebp]
  0008a	52		 push	 edx
  0008b	68 bb 00 00 00	 push	 187			; 000000bbH
  00090	6a 05		 push	 5
  00092	8b 45 18	 mov	 eax, DWORD PTR _unique_id$[ebp]
  00095	50		 push	 eax
  00096	68 ed 00 00 00	 push	 237			; 000000edH
  0009b	6a 05		 push	 5
  0009d	8b 4d 14	 mov	 ecx, DWORD PTR _sub_type$[ebp]
  000a0	51		 push	 ecx
  000a1	6a 34		 push	 52			; 00000034H
  000a3	6a 05		 push	 5
  000a5	8b 55 08	 mov	 edx, DWORD PTR _name$[ebp]
  000a8	52		 push	 edx
  000a9	6a 0a		 push	 10			; 0000000aH
  000ab	6a 08		 push	 8
  000ad	8b 45 f8	 mov	 eax, DWORD PTR _force$[ebp]
  000b0	50		 push	 eax
  000b1	6a 1c		 push	 28			; 0000001cH
  000b3	6a 06		 push	 6
  000b5	6a ff		 push	 -1
  000b7	6a 14		 push	 20			; 00000014H
  000b9	e8 00 00 00 00	 call	 ?create_client_server_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_client_server_entity
  000be	83 c4 60	 add	 esp, 96			; 00000060H
  000c1	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 284  : 				(
; 285  : 					ENTITY_TYPE_PILOT,
; 286  : 					ENTITY_INDEX_DONT_CARE,
; 287  : 					ENTITY_ATTR_PARENT (LIST_TYPE_PILOT, force),
; 288  : 					ENTITY_ATTR_STRING (STRING_TYPE_PILOTS_NAME, name),
; 289  : 					ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, sub_type),
; 290  : 					ENTITY_ATTR_INT_VALUE (INT_TYPE_UNIQUE_ID, unique_id),
; 291  : 					ENTITY_ATTR_INT_VALUE (INT_TYPE_SIDE, side),
; 292  : 					ENTITY_ATTR_INT_VALUE (INT_TYPE_PILOT_RANK, rank),
; 293  : 					ENTITY_ATTR_INT_VALUE (INT_TYPE_DIFFICULTY_LEVEL, difficulty),
; 294  : 					ENTITY_ATTR_END
; 295  : 				);
; 296  : 
; 297  : 	send_pilot_joined_message (en);

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ?send_pilot_joined_message@@YGXPAUENTITY@@@Z ; send_pilot_joined_message

; 298  : 
; 299  : 	return en;

  000cd	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]

; 300  : }

  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 18 00	 ret	 24			; 00000018H
?create_new_pilot_entity@@YGPAUENTITY@@PBDW4ENTITY_SIDES@@HHHH@Z ENDP ; create_new_pilot_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pilot.c
;	COMDAT ?set_pilot_entity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv158 = -76						; size = 4
tv79 = -76						; size = 4
tv179 = -72						; size = 4
tv150 = -72						; size = 4
tv130 = -72						; size = 4
tv71 = -72						; size = 4
_store_data_flow$ = -4					; size = 4
_en$ = 8						; size = 4
?set_pilot_entity@@YGXPAUENTITY@@@Z PROC		; set_pilot_entity, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 128  : 	comms_data_flow_types
; 129  : 		store_data_flow;
; 130  : 
; 131  : 	if (en)

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	0f 84 b8 01 00
	00		 je	 $LN2@set_pilot_

; 132  : 	{
; 133  : 		debug_log ("PILOT: Setting pilot_entity to %s", get_local_entity_string (en, STRING_TYPE_PILOTS_NAME));

  00013	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00017	74 0a		 je	 SHORT $LN11@set_pilot_
  00019	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	89 4d b8	 mov	 DWORD PTR tv71[ebp], ecx
  00021	eb 21		 jmp	 SHORT $LN12@set_pilot_
$LN11@set_pilot_:
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  00029	83 c2 06	 add	 edx, 6
  0002c	52		 push	 edx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN12@set_pilot_:
  00044	b9 01 00 00 00	 mov	 ecx, 1
  00049	85 c9		 test	 ecx, ecx
  0004b	74 09		 je	 SHORT $LN13@set_pilot_
  0004d	c7 45 b4 0a 00
	00 00		 mov	 DWORD PTR tv79[ebp], 10	; 0000000aH
  00054	eb 21		 jmp	 SHORT $LN14@set_pilot_
$LN13@set_pilot_:
  00056	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  0005c	83 c2 06	 add	 edx, 6
  0005f	52		 push	 edx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00070	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN14@set_pilot_:
  00077	6a 0a		 push	 10			; 0000000aH
  00079	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0007c	51		 push	 ecx
  0007d	6b 55 b8 34	 imul	 edx, DWORD PTR tv71[ebp], 52
  00081	8b 45 b4	 mov	 eax, DWORD PTR tv79[ebp]
  00084	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  0008b	ff d1		 call	 ecx
  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LGMEOGFL@PILOT?3?5Setting?5pilot_entity?5to?5@
  00093	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00098	83 c4 08	 add	 esp, 8

; 134  : 
; 135  : 		ASSERT (pilot_entity == NULL);

  0009b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  000a2	74 18		 je	 SHORT $LN4@set_pilot_
  000a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  000a9	83 c0 08	 add	 eax, 8
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FLODHLAO@pilot_entity?5?$DN?$DN?5NULL@
  000b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_pilot_:

; 136  : 
; 137  : 		ASSERT (get_local_entity_type (en) == ENTITY_TYPE_PILOT);

  000bc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c0	74 0a		 je	 SHORT $LN15@set_pilot_
  000c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d b8	 mov	 DWORD PTR tv130[ebp], ecx
  000ca	eb 21		 jmp	 SHORT $LN16@set_pilot_
$LN15@set_pilot_:
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  000d2	83 c2 0a	 add	 edx, 10			; 0000000aH
  000d5	52		 push	 edx
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN16@set_pilot_:
  000ed	83 7d b8 14	 cmp	 DWORD PTR tv130[ebp], 20 ; 00000014H
  000f1	74 18		 je	 SHORT $LN5@set_pilot_
  000f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  000f8	83 c0 0a	 add	 eax, 10			; 0000000aH
  000fb	50		 push	 eax
  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00101	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NDIHHFDN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00106	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@set_pilot_:

; 138  : 	
; 139  : 		pilot_entity = en;

  0010b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0010e	a3 00 00 00 00	 mov	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, eax ; pilot_entity

; 140  : 
; 141  : 		// turn on NEXT button now Pilot entity has arrived
; 142  : 		if (get_comms_model () == COMMS_MODEL_CLIENT)

  00113	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  0011a	75 2a		 jne	 SHORT $LN6@set_pilot_

; 143  : 		{
; 144  : 
; 145  : 			set_display_gunship_buttons (FALSE, "ENGAGE");

  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_06HAFCIKEH@ENGAGE@
  00121	6a 00		 push	 0
  00123	e8 00 00 00 00	 call	 ?set_display_gunship_buttons@@YGXHPAD@Z ; set_display_gunship_buttons

; 146  : 
; 147  : 			// turn on only the gunship_next button
; 148  : 			set_ui_object_drawable (gunship_screen_next_button, TRUE);

  00128	6a 01		 push	 1
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_screen_next_button@@3PAUUI_OBJECT@@A ; gunship_screen_next_button
  0012f	50		 push	 eax
  00130	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_screen_next_button@@3PAUUI_OBJECT@@A ; gunship_screen_next_button
  00136	8b 11		 mov	 edx, DWORD PTR [ecx]
  00138	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0013f	ff d0		 call	 eax

; 149  : 		}
; 150  : 		//-- Werewolf
; 151  : 		else

  00141	e9 80 00 00 00	 jmp	 $LN7@set_pilot_
$LN6@set_pilot_:

; 152  : 		{
; 153  : 			// If we're the server, remember our player name. This will be sent out in the heartbeat packets.
; 154  : 			net_set_hostname( get_local_entity_string (en, STRING_TYPE_PILOTS_NAME) );

  00146	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0014a	74 0a		 je	 SHORT $LN17@set_pilot_
  0014c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0014f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00151	89 4d b8	 mov	 DWORD PTR tv150[ebp], ecx
  00154	eb 21		 jmp	 SHORT $LN18@set_pilot_
$LN17@set_pilot_:
  00156	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  0015c	83 c2 1b	 add	 edx, 27			; 0000001bH
  0015f	52		 push	 edx
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00165	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00170	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN18@set_pilot_:
  00177	b9 01 00 00 00	 mov	 ecx, 1
  0017c	85 c9		 test	 ecx, ecx
  0017e	74 09		 je	 SHORT $LN19@set_pilot_
  00180	c7 45 b4 0a 00
	00 00		 mov	 DWORD PTR tv158[ebp], 10 ; 0000000aH
  00187	eb 21		 jmp	 SHORT $LN20@set_pilot_
$LN19@set_pilot_:
  00189	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  0018f	83 c2 1b	 add	 edx, 27			; 0000001bH
  00192	52		 push	 edx
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a3	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN20@set_pilot_:
  001aa	6a 0a		 push	 10			; 0000000aH
  001ac	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001af	51		 push	 ecx
  001b0	6b 55 b8 34	 imul	 edx, DWORD PTR tv150[ebp], 52
  001b4	8b 45 b4	 mov	 eax, DWORD PTR tv158[ebp]
  001b7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  001be	ff d1		 call	 ecx
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 ?net_set_hostname@@YGXPBD@Z ; net_set_hostname
$LN7@set_pilot_:

; 155  : 		}

  001c6	e9 af 00 00 00	 jmp	 $LN1@set_pilot_
$LN2@set_pilot_:

; 156  : 		//-- Werewolf
; 157  : 	}
; 158  : 	else if (pilot_entity)

  001cb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  001d2	0f 84 a2 00 00
	00		 je	 $LN1@set_pilot_

; 159  : 	{
; 160  : 		debug_log ("PILOT: Setting pilot_entity to NULL");

  001d8	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@FONBLHAF@PILOT?3?5Setting?5pilot_entity?5to?5@
  001dd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001e2	83 c4 04	 add	 esp, 4

; 161  : 
; 162  : 		ASSERT (pilot_entity);

  001e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  001ec	75 18		 jne	 SHORT $LN9@set_pilot_
  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  001f3	83 c0 23	 add	 eax, 35			; 00000023H
  001f6	50		 push	 eax
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KIOGEKAM@pilot_entity@
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@set_pilot_:

; 163  : 
; 164  : 		//
; 165  : 		// Program MUST be in TX mode otherwise clients pilot will not be destroyed on the server
; 166  : 		//
; 167  : 		
; 168  : 		store_data_flow = get_comms_data_flow ();

  00206	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A ; system_comms_data_flow
  0020b	89 45 fc	 mov	 DWORD PTR _store_data_flow$[ebp], eax

; 169  : 
; 170  : 		set_comms_data_flow (COMMS_DATA_FLOW_TX);

  0020e	6a 00		 push	 0
  00210	e8 00 00 00 00	 call	 ?set_comms_data_flow@@YGXW4COMMS_DATA_FLOW_TYPES@@@Z ; set_comms_data_flow

; 171  : 
; 172  : 		destroy_client_server_entity (pilot_entity);

  00215	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  0021c	74 0c		 je	 SHORT $LN21@set_pilot_
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00223	8b 08		 mov	 ecx, DWORD PTR [eax]
  00225	89 4d b8	 mov	 DWORD PTR tv179[ebp], ecx
  00228	eb 21		 jmp	 SHORT $LN22@set_pilot_
$LN21@set_pilot_:
  0022a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_pilot_entity@@YGXPAUENTITY@@@Z@4JA
  00230	83 c2 2d	 add	 edx, 45			; 0000002dH
  00233	52		 push	 edx
  00234	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@HAIEGEJP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00239	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0023e	50		 push	 eax
  0023f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00244	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN22@set_pilot_:
  0024b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00251	51		 push	 ecx
  00252	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00258	c1 e2 02	 shl	 edx, 2
  0025b	8b 45 b8	 mov	 eax, DWORD PTR tv179[ebp]
  0025e	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00265	ff d1		 call	 ecx

; 173  : 
; 174  : 		set_comms_data_flow (store_data_flow);

  00267	8b 45 fc	 mov	 eax, DWORD PTR _store_data_flow$[ebp]
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 ?set_comms_data_flow@@YGXW4COMMS_DATA_FLOW_TYPES@@@Z ; set_comms_data_flow

; 175  : 
; 176  : 		pilot_entity = NULL;

  00270	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
$LN1@set_pilot_:

; 177  : 	}
; 178  : }

  0027a	5f		 pop	 edi
  0027b	5e		 pop	 esi
  0027c	5b		 pop	 ebx
  0027d	8b e5		 mov	 esp, ebp
  0027f	5d		 pop	 ebp
  00280	c2 04 00	 ret	 4
?set_pilot_entity@@YGXPAUENTITY@@@Z ENDP		; set_pilot_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
