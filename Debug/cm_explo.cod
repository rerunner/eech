; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\camera\cm_explo.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z ; reset_weapon_explosion_camera
PUBLIC	?reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z ; reset_weapon_explosion_camera_position
PUBLIC	?update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z ; update_weapon_explosion_camera
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA ; `reset_weapon_explosion_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_03DGOGAGNC@raw@				; `string'
PUBLIC	?__LINE__Var@?0??reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z@4JA ; `reset_weapon_explosion_camera_position'::`1'::__LINE__Var
PUBLIC	??_C@_08OAGMDKAF@position@			; `string'
PUBLIC	??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@	; `string'
PUBLIC	?__LINE__Var@?0??update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA ; `update_weapon_explosion_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f000000
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@4049000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z:PROC ; get_matrix3x3_from_unit_vec3d
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA DD 08dH ; `update_weapon_explosion_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@ DB 'get_camera_entity ()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAGMDKAF@position@
CONST	SEGMENT
??_C@_08OAGMDKAF@position@ DB 'position', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z@4JA DD 05dH ; `reset_weapon_explosion_camera_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03DGOGAGNC@raw@
CONST	SEGMENT
??_C@_03DGOGAGNC@raw@ DB 'raw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\camera\cm_exp'
	DB	'lo.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA DD 050H ; `reset_weapon_explosion_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_explo.c
;	COMDAT ?update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
_raw$ = 8						; size = 4
?update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z PROC	; update_weapon_explosion_camera, COMDAT

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 142  : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN1@update_wea
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN1@update_wea:

; 143  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?update_weapon_explosion_camera@@YGXPAUCAMERA@@@Z ENDP	; update_weapon_explosion_camera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_explo.c
;	COMDAT ?reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z
_TEXT	SEGMENT
tv217 = -92						; size = 4
$T1 = -88						; size = 4
_length$ = -20						; size = 4
_uvec_direction$ = -16					; size = 12
_raw$ = -4						; size = 4
_position$ = 8						; size = 4
?reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z PROC ; reset_weapon_explosion_camera_position, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 	camera
; 95   : 		*raw;
; 96   : 
; 97   : 	vec3d
; 98   : 		uvec_direction;
; 99   : 
; 100  : 	float
; 101  : 		length;
; 102  : 
; 103  : 	ASSERT (position);

  00009	83 7d 08 00	 cmp	 DWORD PTR _position$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@reset_weap
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08OAGMDKAF@position@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_weap:

; 104  : 
; 105  : 	ASSERT (get_camera_entity ());

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  0002e	75 18		 jne	 SHORT $LN3@reset_weap
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z@4JA
  00035	83 c0 0c	 add	 eax, 12			; 0000000cH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@reset_weap:

; 106  : 
; 107  : 	raw = (camera *) get_local_entity_data (get_camera_entity ());

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0004d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00050	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 108  : 
; 109  : 	length = get_3d_vector_magnitude (&raw->weapon_camera_direction);

  00053	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00056	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00061	d9 5d ec	 fstp	 DWORD PTR _length$[ebp]

; 110  : 
; 111  : 	if (length > 0.001)

  00064	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _length$[ebp]
  00069	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00071	76 1b		 jbe	 SHORT $LN4@reset_weap

; 112  : 	{
; 113  : 		uvec_direction = raw->weapon_camera_direction;

  00073	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00076	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	89 4d f0	 mov	 DWORD PTR _uvec_direction$[ebp], ecx
  00080	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00083	89 55 f4	 mov	 DWORD PTR _uvec_direction$[ebp+4], edx
  00086	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00089	89 45 f8	 mov	 DWORD PTR _uvec_direction$[ebp+8], eax

; 114  : 	}
; 115  : 	else

  0008c	eb 22		 jmp	 SHORT $LN5@reset_weap
$LN4@reset_weap:

; 116  : 	{
; 117  : 		uvec_direction.x = 0.0;

  0008e	0f 57 c0	 xorps	 xmm0, xmm0
  00091	f3 0f 11 45 f0	 movss	 DWORD PTR _uvec_direction$[ebp], xmm0

; 118  : 		uvec_direction.y = 0.5;

  00096	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0009e	f3 0f 11 45 f4	 movss	 DWORD PTR _uvec_direction$[ebp+4], xmm0

; 119  : 		uvec_direction.z = 1.0;

  000a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000ab	f3 0f 11 45 f8	 movss	 DWORD PTR _uvec_direction$[ebp+8], xmm0
$LN5@reset_weap:

; 120  : 	}
; 121  : 
; 122  : 	normalise_3d_vector (&uvec_direction);

  000b0	8d 45 f0	 lea	 eax, DWORD PTR _uvec_direction$[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  000b9	dd d8		 fstp	 ST(0)

; 123  : 
; 124  : 	get_matrix3x3_from_unit_vec3d (raw->attitude, &uvec_direction);

  000bb	8d 45 f0	 lea	 eax, DWORD PTR _uvec_direction$[ebp]
  000be	50		 push	 eax
  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c2	83 c1 18	 add	 ecx, 24			; 00000018H
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z ; get_matrix3x3_from_unit_vec3d

; 125  : 
; 126  : 	raw->position.x = position->x - uvec_direction.x * 50.0;

  000cb	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000ce	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000d2	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _uvec_direction$[ebp]
  000d7	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4049000000000000
  000df	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000e3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000ea	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 127  : 	raw->position.y = position->y - uvec_direction.y * 50.0;

  000ee	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000f1	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  000f6	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _uvec_direction$[ebp+4]
  000fb	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4049000000000000
  00103	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00107	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0010e	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 128  : 	raw->position.z = position->z - uvec_direction.z * 50.0;

  00113	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00116	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0011b	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _uvec_direction$[ebp+8]
  00120	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4049000000000000
  00128	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0012c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00133	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 129  : 
; 130  : 	if (point_inside_map_area (&raw->position))

  00138	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0013b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0013f	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00146	0f 82 86 00 00
	00		 jb	 $LN6@reset_weap
  0014c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0014f	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00157	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0015a	72 76		 jb	 SHORT $LN6@reset_weap
  0015c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0015f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00164	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0016b	72 65		 jb	 SHORT $LN6@reset_weap
  0016d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00170	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00178	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0017c	72 54		 jb	 SHORT $LN6@reset_weap

; 131  : 	{
; 132  : 		raw->position.y = max (raw->position.y, get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info) + CAMERA_MIN_HEIGHT_ABOVE_GROUND);

  0017e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00181	83 c0 50	 add	 eax, 80			; 00000050H
  00184	50		 push	 eax
  00185	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00188	51		 push	 ecx
  00189	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00196	51		 push	 ecx
  00197	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  001a5	d9 5d a4	 fstp	 DWORD PTR tv217[ebp]
  001a8	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv217[ebp]
  001ad	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f8ccccd
  001b5	f3 0f 11 45 a8	 movss	 DWORD PTR $T1[ebp], xmm0
  001ba	8d 45 a8	 lea	 eax, DWORD PTR $T1[ebp]
  001bd	50		 push	 eax
  001be	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001c1	83 c1 04	 add	 ecx, 4
  001c4	51		 push	 ecx
  001c5	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  001ca	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  001cd	8b 00		 mov	 eax, DWORD PTR [eax]
  001cf	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN6@reset_weap:

; 133  : 	}
; 134  : }

  001d2	5f		 pop	 edi
  001d3	5e		 pop	 esi
  001d4	5b		 pop	 ebx
  001d5	8b e5		 mov	 esp, ebp
  001d7	5d		 pop	 ebp
  001d8	c2 04 00	 ret	 4
?reset_weapon_explosion_camera_position@@YGXPAUVEC3D@@@Z ENDP ; reset_weapon_explosion_camera_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_explo.c
;	COMDAT ?reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
_raw$ = 8						; size = 4
?reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z PROC	; reset_weapon_explosion_camera, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@reset_weap
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@POGHIMHC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_weap:

; 82   : 
; 83   : 	raw->motion_vector.x = 0.0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 84   : 	raw->motion_vector.y = 0.0;

  00032	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00035	0f 57 c0	 xorps	 xmm0, xmm0
  00038	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 85   : 	raw->motion_vector.z = 0.0;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00040	0f 57 c0	 xorps	 xmm0, xmm0
  00043	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 86   : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?reset_weapon_explosion_camera@@YGXPAUCAMERA@@@Z ENDP	; reset_weapon_explosion_camera
_TEXT	ENDS
END
