; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\camera\cm_drop.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?reset_drop_camera@@YGXPAUCAMERA@@@Z		; reset_drop_camera
PUBLIC	?update_drop_camera@@YGXPAUCAMERA@@@Z		; update_drop_camera
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA ; `reset_drop_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_03DGOGAGNC@raw@				; `string'
PUBLIC	??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ ; `string'
PUBLIC	??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@		; `string'
PUBLIC	?__LINE__Var@?0??update_drop_camera@@YGXPAUCAMERA@@@Z@4JA ; `update_drop_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3fd54fdf3b645a1d
PUBLIC	__real@be860a92
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z:PROC ; get_matrix3x3_from_unit_vec3d
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@be860a92
CONST	SEGMENT
__real@be860a92 DD 0be860a92r			; -0.261799
CONST	ENDS
;	COMDAT __real@3fd54fdf3b645a1d
CONST	SEGMENT
__real@3fd54fdf3b645a1d DQ 03fd54fdf3b645a1dr	; 0.333
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_drop_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_drop_camera@@YGXPAUCAMERA@@@Z@4JA DD 09aH ; `update_drop_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@
CONST	SEGMENT
??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@ DB 'z_min < z_max', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
CONST	SEGMENT
??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ DB 'raw->external_view_'
	DB	'entity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03DGOGAGNC@raw@
CONST	SEGMENT
??_C@_03DGOGAGNC@raw@ DB 'raw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\camera\cm_dro'
	DB	'p.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA DD 050H ; `reset_drop_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_drop.c
;	COMDAT ?update_drop_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv145 = -100						; size = 8
_v$ = -28						; size = 12
_pos$ = -16						; size = 12
_en$ = -4						; size = 4
_raw$ = 8						; size = 4
?update_drop_camera@@YGXPAUCAMERA@@@Z PROC		; update_drop_camera, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : 	entity
; 156  : 		*en;
; 157  : 
; 158  : 	vec3d
; 159  : 		pos,
; 160  : 		v;
; 161  : 
; 162  : 	//
; 163  : 	// pre-amble
; 164  : 	//
; 165  : 
; 166  : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@update_dro
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_dro:

; 167  : 
; 168  : 	ASSERT (raw->external_view_entity);

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00031	75 18		 jne	 SHORT $LN3@update_dro
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  00038	83 c0 0e	 add	 eax, 14			; 0000000eH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@update_dro:

; 169  : 
; 170  : 	en = raw->external_view_entity;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0004e	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00054	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 171  : 
; 172  : 	//
; 173  : 	// get camera to entity vector
; 174  : 	//
; 175  : 
; 176  : 	get_local_entity_target_point (en, &pos);

  00057	8d 45 f0	 lea	 eax, DWORD PTR _pos$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 177  : 
; 178  : 	v.x = pos.x - raw->position.x;

  00064	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00067	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pos$[ebp]
  0006c	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00070	f3 0f 11 45 e4	 movss	 DWORD PTR _v$[ebp], xmm0

; 179  : 	v.y = pos.y - raw->position.y;

  00075	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00078	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp+4]
  0007d	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00082	f3 0f 11 45 e8	 movss	 DWORD PTR _v$[ebp+4], xmm0

; 180  : 	v.z = pos.z - raw->position.z;

  00087	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0008a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  0008f	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00094	f3 0f 11 45 ec	 movss	 DWORD PTR _v$[ebp+8], xmm0

; 181  : 
; 182  : 	//
; 183  : 	// prevent divide by zero
; 184  : 	//
; 185  : 
; 186  : 	if (get_3d_vector_magnitude (&v) < 0.001)

  00099	8d 45 e4	 lea	 eax, DWORD PTR _v$[ebp]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  000a2	dd 5d 9c	 fstp	 QWORD PTR tv145[ebp]
  000a5	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  000ad	66 0f 2f 45 9c	 comisd	 xmm0, QWORD PTR tv145[ebp]
  000b2	76 1d		 jbe	 SHORT $LN4@update_dro

; 187  : 	{
; 188  : 		v.x = 0.0;

  000b4	0f 57 c0	 xorps	 xmm0, xmm0
  000b7	f3 0f 11 45 e4	 movss	 DWORD PTR _v$[ebp], xmm0

; 189  : 		v.y = 0.0;

  000bc	0f 57 c0	 xorps	 xmm0, xmm0
  000bf	f3 0f 11 45 e8	 movss	 DWORD PTR _v$[ebp+4], xmm0

; 190  : 		v.z = 1.0;

  000c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000cc	f3 0f 11 45 ec	 movss	 DWORD PTR _v$[ebp+8], xmm0
$LN4@update_dro:

; 191  : 	}
; 192  : 
; 193  : 	//
; 194  : 	// get camera attitude
; 195  : 	//
; 196  : 
; 197  : 	normalise_3d_vector (&v);

  000d1	8d 45 e4	 lea	 eax, DWORD PTR _v$[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  000da	dd d8		 fstp	 ST(0)

; 198  : 
; 199  : 	get_matrix3x3_from_unit_vec3d (raw->attitude, &v);

  000dc	8d 45 e4	 lea	 eax, DWORD PTR _v$[ebp]
  000df	50		 push	 eax
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  000e3	83 c1 18	 add	 ecx, 24			; 00000018H
  000e6	51		 push	 ecx
  000e7	e8 00 00 00 00	 call	 ?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z ; get_matrix3x3_from_unit_vec3d

; 200  : }

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 04 00	 ret	 4
?update_drop_camera@@YGXPAUCAMERA@@@Z ENDP		; update_drop_camera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_drop.c
;	COMDAT ?reset_drop_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv166 = -152						; size = 4
tv146 = -152						; size = 4
tv90 = -152						; size = 4
tv317 = -148						; size = 4
tv158 = -148						; size = 4
tv138 = -148						; size = 4
tv82 = -148						; size = 4
$T1 = -144						; size = 4
_z_max$ = -76						; size = 4
_z_min$ = -72						; size = 4
_heading$ = -68						; size = 4
_m$ = -64						; size = 36
_v$ = -28						; size = 12
_pos$ = -16						; size = 12
_en$ = -4						; size = 4
_raw$ = 8						; size = 4
?reset_drop_camera@@YGXPAUCAMERA@@@Z PROC		; reset_drop_camera, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	entity
; 82   : 		*en;
; 83   : 
; 84   : 	vec3d
; 85   : 		pos,
; 86   : 		v;
; 87   : 
; 88   : 	matrix3x3
; 89   : 		m;
; 90   : 
; 91   : 	float
; 92   : 		heading,
; 93   : 		z_min,
; 94   : 		z_max;
; 95   : 
; 96   : 	//
; 97   : 	// pre-amble
; 98   : 	//
; 99   : 
; 100  : 	ASSERT (raw);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@reset_drop
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  00017	83 c0 14	 add	 eax, 20			; 00000014H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_drop:

; 101  : 
; 102  : 	ASSERT (raw->external_view_entity);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002d	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00034	75 18		 jne	 SHORT $LN3@reset_drop
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  0003b	83 c0 16	 add	 eax, 22			; 00000016H
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@reset_drop:

; 103  : 
; 104  : 	en = raw->external_view_entity;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00051	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00057	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 105  : 
; 106  : 	//
; 107  : 	// place camera behind object to prevent going inside object (especially when the object is stationary)
; 108  : 	//
; 109  : 
; 110  : 	heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  0005a	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005e	74 0d		 je	 SHORT $LN7@reset_drop
  00060	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  0006b	eb 24		 jmp	 SHORT $LN8@reset_drop
$LN7@reset_drop:
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  00073	83 c2 1e	 add	 edx, 30			; 0000001eH
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN8@reset_drop:
  00091	b9 01 00 00 00	 mov	 ecx, 1
  00096	85 c9		 test	 ecx, ecx
  00098	74 0c		 je	 SHORT $LN9@reset_drop
  0009a	c7 85 68 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv90[ebp], 52	; 00000034H
  000a4	eb 24		 jmp	 SHORT $LN10@reset_drop
$LN9@reset_drop:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  000ac	83 c2 1e	 add	 edx, 30			; 0000001eH
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN10@reset_drop:
  000ca	6a 34		 push	 52			; 00000034H
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  000cf	51		 push	 ecx
  000d0	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv82[ebp], 700
  000da	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv90[ebp]
  000e0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000e7	ff d1		 call	 ecx
  000e9	d9 5d bc	 fstp	 DWORD PTR _heading$[ebp]

; 111  : 
; 112  : 	get_3d_transformation_matrix (m, heading, CHASE_CAMERA_RESET_PITCH, 0.0);

  000ec	51		 push	 ecx
  000ed	0f 57 c0	 xorps	 xmm0, xmm0
  000f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f5	51		 push	 ecx
  000f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be860a92
  000fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00103	51		 push	 ecx
  00104	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00109	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010e	8d 45 c0	 lea	 eax, DWORD PTR _m$[ebp]
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 113  : 
; 114  : 	z_min = get_local_entity_float_value (en, FLOAT_TYPE_CHASE_VIEW_MIN_DISTANCE);

  00117	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0011b	74 0d		 je	 SHORT $LN11@reset_drop
  0011d	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00120	8b 08		 mov	 ecx, DWORD PTR [eax]
  00122	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  00128	eb 24		 jmp	 SHORT $LN12@reset_drop
$LN11@reset_drop:
  0012a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  00130	83 c2 22	 add	 edx, 34			; 00000022H
  00133	52		 push	 edx
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00139	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00144	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
$LN12@reset_drop:
  0014e	b9 01 00 00 00	 mov	 ecx, 1
  00153	85 c9		 test	 ecx, ecx
  00155	74 0c		 je	 SHORT $LN13@reset_drop
  00157	c7 85 68 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv146[ebp], 21 ; 00000015H
  00161	eb 24		 jmp	 SHORT $LN14@reset_drop
$LN13@reset_drop:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  00169	83 c2 22	 add	 edx, 34			; 00000022H
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN14@reset_drop:
  00187	6a 15		 push	 21			; 00000015H
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0018c	51		 push	 ecx
  0018d	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv138[ebp], 700
  00197	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  0019d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001a4	ff d1		 call	 ecx
  001a6	d9 5d b8	 fstp	 DWORD PTR _z_min$[ebp]

; 115  : 	z_max = get_local_entity_float_value (en, FLOAT_TYPE_CHASE_VIEW_MAX_DISTANCE);

  001a9	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ad	74 0d		 je	 SHORT $LN15@reset_drop
  001af	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b4	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv158[ebp], ecx
  001ba	eb 24		 jmp	 SHORT $LN16@reset_drop
$LN15@reset_drop:
  001bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  001c2	83 c2 23	 add	 edx, 35			; 00000023H
  001c5	52		 push	 edx
  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d0	50		 push	 eax
  001d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d6	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN16@reset_drop:
  001e0	b9 01 00 00 00	 mov	 ecx, 1
  001e5	85 c9		 test	 ecx, ecx
  001e7	74 0c		 je	 SHORT $LN17@reset_drop
  001e9	c7 85 68 ff ff
	ff 13 00 00 00	 mov	 DWORD PTR tv166[ebp], 19 ; 00000013H
  001f3	eb 24		 jmp	 SHORT $LN18@reset_drop
$LN17@reset_drop:
  001f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  001fb	83 c2 23	 add	 edx, 35			; 00000023H
  001fe	52		 push	 edx
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00204	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00209	50		 push	 eax
  0020a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020f	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN18@reset_drop:
  00219	6a 13		 push	 19			; 00000013H
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0021e	51		 push	 ecx
  0021f	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv158[ebp], 700
  00229	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv166[ebp]
  0022f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00236	ff d1		 call	 ecx
  00238	d9 5d b4	 fstp	 DWORD PTR _z_max$[ebp]

; 116  : 
; 117  : 	ASSERT (z_min < z_max);

  0023b	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  00240	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _z_min$[ebp]
  00244	77 18		 ja	 SHORT $LN4@reset_drop
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_drop_camera@@YGXPAUCAMERA@@@Z@4JA
  0024b	83 c0 25	 add	 eax, 37			; 00000025H
  0024e	50		 push	 eax
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@KMDACCGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@
  00259	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@reset_drop:

; 118  : 
; 119  : 	v.x = 0.0;

  0025e	0f 57 c0	 xorps	 xmm0, xmm0
  00261	f3 0f 11 45 e4	 movss	 DWORD PTR _v$[ebp], xmm0

; 120  : 	v.y = 0.0;

  00266	0f 57 c0	 xorps	 xmm0, xmm0
  00269	f3 0f 11 45 e8	 movss	 DWORD PTR _v$[ebp+4], xmm0

; 121  : 	v.z = -(((z_max - z_min) * CHASE_CAMERA_RESET_ZOOM * CHASE_CAMERA_RESET_ZOOM) + z_min);

  0026e	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  00273	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _z_min$[ebp]
  00278	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0027c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd54fdf3b645a1d
  00284	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd54fdf3b645a1d
  0028c	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _z_min$[ebp]
  00291	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00295	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  0029c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a0	f3 0f 11 45 ec	 movss	 DWORD PTR _v$[ebp+8], xmm0

; 122  : 
; 123  : 	multiply_matrix3x3_vec3d (&v, m, &v);

  002a5	8d 45 e4	 lea	 eax, DWORD PTR _v$[ebp]
  002a8	50		 push	 eax
  002a9	8d 4d c0	 lea	 ecx, DWORD PTR _m$[ebp]
  002ac	51		 push	 ecx
  002ad	8d 55 e4	 lea	 edx, DWORD PTR _v$[ebp]
  002b0	52		 push	 edx
  002b1	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 124  : 
; 125  : 	get_local_entity_target_point (en, &pos);

  002b6	8d 45 f0	 lea	 eax, DWORD PTR _pos$[ebp]
  002b9	50		 push	 eax
  002ba	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  002bd	51		 push	 ecx
  002be	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 126  : 
; 127  : 	raw->position.x = pos.x + v.x;

  002c3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pos$[ebp]
  002c8	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _v$[ebp]
  002cd	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002d0	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 128  : 	raw->position.y = pos.y + v.y;

  002d4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp+4]
  002d9	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _v$[ebp+4]
  002de	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002e1	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 129  : 	raw->position.z = pos.z + v.z;

  002e6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  002eb	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _v$[ebp+8]
  002f0	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002f3	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 130  : 
; 131  : 	//
; 132  : 	// keep point above ground (unless point off map)
; 133  : 	//
; 134  : 
; 135  : 	if (point_inside_map_area (&raw->position))

  002f8	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002fb	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002ff	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00306	0f 82 96 00 00
	00		 jb	 $LN5@reset_drop
  0030c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0030f	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00317	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0031a	0f 82 82 00 00
	00		 jb	 $LN5@reset_drop
  00320	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00323	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00328	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0032f	72 71		 jb	 SHORT $LN5@reset_drop
  00331	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00334	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0033c	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00340	72 60		 jb	 SHORT $LN5@reset_drop

; 136  : 	{
; 137  : 		raw->position.y = max (raw->position.y, get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info) + CAMERA_MIN_HEIGHT_ABOVE_GROUND);

  00342	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00345	83 c0 50	 add	 eax, 80			; 00000050H
  00348	50		 push	 eax
  00349	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0034c	51		 push	 ecx
  0034d	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00352	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00357	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0035a	51		 push	 ecx
  0035b	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0035f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00364	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00369	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv317[ebp]
  0036f	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv317[ebp]
  00377	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f8ccccd
  0037f	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00387	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0038d	50		 push	 eax
  0038e	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00391	83 c1 04	 add	 ecx, 4
  00394	51		 push	 ecx
  00395	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0039a	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0039d	8b 00		 mov	 eax, DWORD PTR [eax]
  0039f	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN5@reset_drop:

; 138  : 	}
; 139  : 
; 140  : 	//
; 141  : 	// motion vector
; 142  : 	//
; 143  : 
; 144  : 	raw->motion_vector.x = 0.0;

  003a2	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003a5	0f 57 c0	 xorps	 xmm0, xmm0
  003a8	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 145  : 	raw->motion_vector.y = 0.0;

  003ad	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003b0	0f 57 c0	 xorps	 xmm0, xmm0
  003b3	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 146  : 	raw->motion_vector.z = 0.0;

  003b8	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003bb	0f 57 c0	 xorps	 xmm0, xmm0
  003be	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 147  : }

  003c3	5f		 pop	 edi
  003c4	5e		 pop	 esi
  003c5	5b		 pop	 ebx
  003c6	8b e5		 mov	 esp, ebp
  003c8	5d		 pop	 ebp
  003c9	c2 04 00	 ret	 4
?reset_drop_camera@@YGXPAUCAMERA@@@Z ENDP		; reset_drop_camera
_TEXT	ENDS
END
