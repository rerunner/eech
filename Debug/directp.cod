; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\multi\directp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A ; direct_play_comms_mode
PUBLIC	?modem_name_list@@3PAUMODEM_NAMES@@A		; modem_name_list
PUBLIC	?direct_play_use_guaranteed_packets@@3HA	; direct_play_use_guaranteed_packets
PUBLIC	??_C@_0BJ@KGCFELPH@DPERR_ALREADYINITIALIZED@	; `string'
PUBLIC	??_C@_0BD@CIMLFMCH@DPERR_ACCESSDENIED@		; `string'
PUBLIC	??_C@_0BE@JLKJJGDM@DPERR_ACTIVEPLAYERS@		; `string'
PUBLIC	??_C@_0BF@OPPNCFCJ@DPERR_BUFFERTOOSMALL@	; `string'
PUBLIC	??_C@_0BE@OFODIPDM@DPERR_CANTADDPLAYER@		; `string'
PUBLIC	??_C@_0BG@DCEHLHAP@DPERR_CANTCREATEGROUP@	; `string'
PUBLIC	??_C@_0BH@GMKOMEBJ@DPERR_CANTCREATEPLAYER@	; `string'
PUBLIC	??_C@_0BI@ELGMBCBF@DPERR_CANTCREATESESSION@	; `string'
PUBLIC	??_C@_0BK@NJEEEGOO@DPERR_CAPSNOTAVAILABLEYET@	; `string'
PUBLIC	??_C@_0BA@MCFNHCFF@DPERR_EXCEPTION@		; `string'
PUBLIC	??_C@_0O@LCPCPFNL@DPERR_GENERIC@		; `string'
PUBLIC	??_C@_0BD@JLMILPMN@DPERR_INVALIDFLAGS@		; `string'
PUBLIC	??_C@_0BE@FFPEJAKL@DPERR_INVALIDOBJECT@		; `string'
PUBLIC	??_C@_0BD@CELHCBOG@DPERR_INVALIDPARAM@		; `string'
PUBLIC	??_C@_0BE@NINLPOPL@DPERR_INVALIDPARAMS@		; `string'
PUBLIC	??_C@_0BE@MBKABPPO@DPERR_INVALIDPLAYER@		; `string'
PUBLIC	??_C@_0BD@FLBEBGGF@DPERR_INVALIDGROUP@		; `string'
PUBLIC	??_C@_0N@FAHDPIHF@DPERR_NOCAPS@			; `string'
PUBLIC	??_C@_0BD@KKENPFA@DPERR_NOCONNECTION@		; `string'
PUBLIC	??_C@_0P@KMHODJHC@DPERR_NOMEMORY@		; `string'
PUBLIC	??_C@_0BC@PBFFMHDJ@DPERR_OUTOFMEMORY@		; `string'
PUBLIC	??_C@_0BB@HBLIJGDD@DPERR_NOMESSAGES@		; `string'
PUBLIC	??_C@_0BI@EIACNNBO@DPERR_NONAMESERVERFOUND@	; `string'
PUBLIC	??_C@_0BA@EOOCDAJ@DPERR_NOPLAYERS@		; `string'
PUBLIC	??_C@_0BB@OMCLIDBP@DPERR_NOSESSIONS@		; `string'
PUBLIC	??_C@_0O@BPNHOHEG@DPERR_PENDING@		; `string'
PUBLIC	??_C@_0BB@OIDGCPGB@DPERR_SENDTOOBIG@		; `string'
PUBLIC	??_C@_0O@LDDOIKAJ@DPERR_TIMEOUT@		; `string'
PUBLIC	??_C@_0BC@EFJJKFJE@DPERR_UNAVAILABLE@		; `string'
PUBLIC	??_C@_0BC@NPHELNFN@DPERR_UNSUPPORTED@		; `string'
PUBLIC	??_C@_0L@FKAKNADE@DPERR_BUSY@			; `string'
PUBLIC	??_C@_0BB@OFPDBPLG@DPERR_USERCANCEL@		; `string'
PUBLIC	??_C@_0BC@JMLMJBCI@DPERR_NOINTERFACE@		; `string'
PUBLIC	??_C@_0BJ@HANCFHEH@DPERR_CANNOTCREATESERVER@	; `string'
PUBLIC	??_C@_0BB@OLDMKIH@DPERR_PLAYERLOST@		; `string'
PUBLIC	??_C@_0BC@FDONMHBP@DPERR_SESSIONLOST@		; `string'
PUBLIC	??_C@_0BE@LPMEIJMF@DPERR_UNINITIALIZED@		; `string'
PUBLIC	??_C@_0BD@DOMEBGED@DPERR_NONEWPLAYERS@		; `string'
PUBLIC	??_C@_0BG@IOJGIAEJ@DPERR_INVALIDPASSWORD@	; `string'
PUBLIC	??_C@_0BB@LDDHAHLN@DPERR_CONNECTING@		; `string'
PUBLIC	??_C@_0BF@EHBJGNCG@DPERR_CONNECTIONLOST@	; `string'
PUBLIC	??_C@_0BF@IBEONKCK@DPERR_UNKNOWNMESSAGE@	; `string'
PUBLIC	??_C@_0BD@JBJHCNNC@DPERR_CANCELFAILED@		; `string'
PUBLIC	??_C@_0BG@NNHCHHOD@DPERR_INVALIDPRIORITY@	; `string'
PUBLIC	??_C@_0BB@LPLFGHIN@DPERR_NOTHANDLED@		; `string'
PUBLIC	??_C@_0BA@PENIAENG@DPERR_CANCELLED@		; `string'
PUBLIC	??_C@_0O@MLJGGKJK@DPERR_ABORTED@		; `string'
PUBLIC	??_C@_0BF@EHLGNELP@DPERR_BUFFERTOOLARGE@	; `string'
PUBLIC	??_C@_0BI@NDOIGLGE@DPERR_CANTCREATEPROCESS@	; `string'
PUBLIC	??_C@_0BE@IBHIGLAG@DPERR_APPNOTSTARTED@		; `string'
PUBLIC	??_C@_0BH@JCHHAMNM@DPERR_INVALIDINTERFACE@	; `string'
PUBLIC	??_C@_0BI@KIIDPCDK@DPERR_NOSERVICEPROVIDER@	; `string'
PUBLIC	??_C@_0BJ@HLLJJGFA@DPERR_UNKNOWNAPPLICATION@	; `string'
PUBLIC	??_C@_0BB@KEJMNHMD@DPERR_NOTLOBBIED@		; `string'
PUBLIC	??_C@_0BM@NBMKJHAC@DPERR_SERVICEPROVIDERLOADED@	; `string'
PUBLIC	??_C@_0BI@KGDKGFHH@DPERR_ALREADYREGISTERED@	; `string'
PUBLIC	??_C@_0BE@ONHCLLBK@DPERR_NOTREGISTERED@		; `string'
PUBLIC	??_C@_0BL@BNFGMJL@DPERR_AUTHENTICATIONFAILED@	; `string'
PUBLIC	??_C@_0BD@GOMKHOPK@DPERR_CANTLOADSSPI@		; `string'
PUBLIC	??_C@_0BH@NPDAALGG@DPERR_ENCRYPTIONFAILED@	; `string'
PUBLIC	??_C@_0BB@EIIKKBNP@DPERR_SIGNFAILED@		; `string'
PUBLIC	??_C@_0BO@OABPENJN@DPERR_CANTLOADSECURITYPACKAGE@ ; `string'
PUBLIC	??_C@_0BN@LCGEOJPK@DPERR_ENCRYPTIONNOTSUPPORTED@ ; `string'
PUBLIC	??_C@_0BD@PEDKHGGM@DPERR_CANTLOADCAPI@		; `string'
PUBLIC	??_C@_0BC@BLFCMKHF@DPERR_NOTLOGGEDIN@		; `string'
PUBLIC	??_C@_0BC@MELIBBOO@DPERR_LOGONDENIED@		; `string'
PUBLIC	??_C@_05BJMCJKCK@DP_OK@				; `string'
_BSS	SEGMENT
?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A DD 01H DUP (?) ; direct_play_comms_mode
?modem_name_list@@3PAUMODEM_NAMES@@A DD 01H DUP (?)	; modem_name_list
_BSS	ENDS
CONST	SEGMENT
?no_dplay_error_message@@3QBDB DB 'NO_DPLAY_ERROR_MESSAGE_FOUND', 00H ; no_dplay_error_message
CONST	ENDS
;	COMDAT ??_C@_05BJMCJKCK@DP_OK@
CONST	SEGMENT
??_C@_05BJMCJKCK@DP_OK@ DB 'DP_OK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MELIBBOO@DPERR_LOGONDENIED@
CONST	SEGMENT
??_C@_0BC@MELIBBOO@DPERR_LOGONDENIED@ DB 'DPERR_LOGONDENIED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLFCMKHF@DPERR_NOTLOGGEDIN@
CONST	SEGMENT
??_C@_0BC@BLFCMKHF@DPERR_NOTLOGGEDIN@ DB 'DPERR_NOTLOGGEDIN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PEDKHGGM@DPERR_CANTLOADCAPI@
CONST	SEGMENT
??_C@_0BD@PEDKHGGM@DPERR_CANTLOADCAPI@ DB 'DPERR_CANTLOADCAPI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LCGEOJPK@DPERR_ENCRYPTIONNOTSUPPORTED@
CONST	SEGMENT
??_C@_0BN@LCGEOJPK@DPERR_ENCRYPTIONNOTSUPPORTED@ DB 'DPERR_ENCRYPTIONNOTS'
	DB	'UPPORTED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OABPENJN@DPERR_CANTLOADSECURITYPACKAGE@
CONST	SEGMENT
??_C@_0BO@OABPENJN@DPERR_CANTLOADSECURITYPACKAGE@ DB 'DPERR_CANTLOADSECUR'
	DB	'ITYPACKAGE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EIIKKBNP@DPERR_SIGNFAILED@
CONST	SEGMENT
??_C@_0BB@EIIKKBNP@DPERR_SIGNFAILED@ DB 'DPERR_SIGNFAILED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NPDAALGG@DPERR_ENCRYPTIONFAILED@
CONST	SEGMENT
??_C@_0BH@NPDAALGG@DPERR_ENCRYPTIONFAILED@ DB 'DPERR_ENCRYPTIONFAILED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GOMKHOPK@DPERR_CANTLOADSSPI@
CONST	SEGMENT
??_C@_0BD@GOMKHOPK@DPERR_CANTLOADSSPI@ DB 'DPERR_CANTLOADSSPI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BNFGMJL@DPERR_AUTHENTICATIONFAILED@
CONST	SEGMENT
??_C@_0BL@BNFGMJL@DPERR_AUTHENTICATIONFAILED@ DB 'DPERR_AUTHENTICATIONFAI'
	DB	'LED', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ONHCLLBK@DPERR_NOTREGISTERED@
CONST	SEGMENT
??_C@_0BE@ONHCLLBK@DPERR_NOTREGISTERED@ DB 'DPERR_NOTREGISTERED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KGDKGFHH@DPERR_ALREADYREGISTERED@
CONST	SEGMENT
??_C@_0BI@KGDKGFHH@DPERR_ALREADYREGISTERED@ DB 'DPERR_ALREADYREGISTERED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NBMKJHAC@DPERR_SERVICEPROVIDERLOADED@
CONST	SEGMENT
??_C@_0BM@NBMKJHAC@DPERR_SERVICEPROVIDERLOADED@ DB 'DPERR_SERVICEPROVIDER'
	DB	'LOADED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KEJMNHMD@DPERR_NOTLOBBIED@
CONST	SEGMENT
??_C@_0BB@KEJMNHMD@DPERR_NOTLOBBIED@ DB 'DPERR_NOTLOBBIED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HLLJJGFA@DPERR_UNKNOWNAPPLICATION@
CONST	SEGMENT
??_C@_0BJ@HLLJJGFA@DPERR_UNKNOWNAPPLICATION@ DB 'DPERR_UNKNOWNAPPLICATION'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KIIDPCDK@DPERR_NOSERVICEPROVIDER@
CONST	SEGMENT
??_C@_0BI@KIIDPCDK@DPERR_NOSERVICEPROVIDER@ DB 'DPERR_NOSERVICEPROVIDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCHHAMNM@DPERR_INVALIDINTERFACE@
CONST	SEGMENT
??_C@_0BH@JCHHAMNM@DPERR_INVALIDINTERFACE@ DB 'DPERR_INVALIDINTERFACE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IBHIGLAG@DPERR_APPNOTSTARTED@
CONST	SEGMENT
??_C@_0BE@IBHIGLAG@DPERR_APPNOTSTARTED@ DB 'DPERR_APPNOTSTARTED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NDOIGLGE@DPERR_CANTCREATEPROCESS@
CONST	SEGMENT
??_C@_0BI@NDOIGLGE@DPERR_CANTCREATEPROCESS@ DB 'DPERR_CANTCREATEPROCESS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EHLGNELP@DPERR_BUFFERTOOLARGE@
CONST	SEGMENT
??_C@_0BF@EHLGNELP@DPERR_BUFFERTOOLARGE@ DB 'DPERR_BUFFERTOOLARGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MLJGGKJK@DPERR_ABORTED@
CONST	SEGMENT
??_C@_0O@MLJGGKJK@DPERR_ABORTED@ DB 'DPERR_ABORTED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PENIAENG@DPERR_CANCELLED@
CONST	SEGMENT
??_C@_0BA@PENIAENG@DPERR_CANCELLED@ DB 'DPERR_CANCELLED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LPLFGHIN@DPERR_NOTHANDLED@
CONST	SEGMENT
??_C@_0BB@LPLFGHIN@DPERR_NOTHANDLED@ DB 'DPERR_NOTHANDLED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NNHCHHOD@DPERR_INVALIDPRIORITY@
CONST	SEGMENT
??_C@_0BG@NNHCHHOD@DPERR_INVALIDPRIORITY@ DB 'DPERR_INVALIDPRIORITY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JBJHCNNC@DPERR_CANCELFAILED@
CONST	SEGMENT
??_C@_0BD@JBJHCNNC@DPERR_CANCELFAILED@ DB 'DPERR_CANCELFAILED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBEONKCK@DPERR_UNKNOWNMESSAGE@
CONST	SEGMENT
??_C@_0BF@IBEONKCK@DPERR_UNKNOWNMESSAGE@ DB 'DPERR_UNKNOWNMESSAGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EHBJGNCG@DPERR_CONNECTIONLOST@
CONST	SEGMENT
??_C@_0BF@EHBJGNCG@DPERR_CONNECTIONLOST@ DB 'DPERR_CONNECTIONLOST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LDDHAHLN@DPERR_CONNECTING@
CONST	SEGMENT
??_C@_0BB@LDDHAHLN@DPERR_CONNECTING@ DB 'DPERR_CONNECTING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IOJGIAEJ@DPERR_INVALIDPASSWORD@
CONST	SEGMENT
??_C@_0BG@IOJGIAEJ@DPERR_INVALIDPASSWORD@ DB 'DPERR_INVALIDPASSWORD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DOMEBGED@DPERR_NONEWPLAYERS@
CONST	SEGMENT
??_C@_0BD@DOMEBGED@DPERR_NONEWPLAYERS@ DB 'DPERR_NONEWPLAYERS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LPMEIJMF@DPERR_UNINITIALIZED@
CONST	SEGMENT
??_C@_0BE@LPMEIJMF@DPERR_UNINITIALIZED@ DB 'DPERR_UNINITIALIZED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FDONMHBP@DPERR_SESSIONLOST@
CONST	SEGMENT
??_C@_0BC@FDONMHBP@DPERR_SESSIONLOST@ DB 'DPERR_SESSIONLOST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OLDMKIH@DPERR_PLAYERLOST@
CONST	SEGMENT
??_C@_0BB@OLDMKIH@DPERR_PLAYERLOST@ DB 'DPERR_PLAYERLOST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HANCFHEH@DPERR_CANNOTCREATESERVER@
CONST	SEGMENT
??_C@_0BJ@HANCFHEH@DPERR_CANNOTCREATESERVER@ DB 'DPERR_CANNOTCREATESERVER'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JMLMJBCI@DPERR_NOINTERFACE@
CONST	SEGMENT
??_C@_0BC@JMLMJBCI@DPERR_NOINTERFACE@ DB 'DPERR_NOINTERFACE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OFPDBPLG@DPERR_USERCANCEL@
CONST	SEGMENT
??_C@_0BB@OFPDBPLG@DPERR_USERCANCEL@ DB 'DPERR_USERCANCEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKAKNADE@DPERR_BUSY@
CONST	SEGMENT
??_C@_0L@FKAKNADE@DPERR_BUSY@ DB 'DPERR_BUSY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPHELNFN@DPERR_UNSUPPORTED@
CONST	SEGMENT
??_C@_0BC@NPHELNFN@DPERR_UNSUPPORTED@ DB 'DPERR_UNSUPPORTED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EFJJKFJE@DPERR_UNAVAILABLE@
CONST	SEGMENT
??_C@_0BC@EFJJKFJE@DPERR_UNAVAILABLE@ DB 'DPERR_UNAVAILABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LDDOIKAJ@DPERR_TIMEOUT@
CONST	SEGMENT
??_C@_0O@LDDOIKAJ@DPERR_TIMEOUT@ DB 'DPERR_TIMEOUT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OIDGCPGB@DPERR_SENDTOOBIG@
CONST	SEGMENT
??_C@_0BB@OIDGCPGB@DPERR_SENDTOOBIG@ DB 'DPERR_SENDTOOBIG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BPNHOHEG@DPERR_PENDING@
CONST	SEGMENT
??_C@_0O@BPNHOHEG@DPERR_PENDING@ DB 'DPERR_PENDING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMCLIDBP@DPERR_NOSESSIONS@
CONST	SEGMENT
??_C@_0BB@OMCLIDBP@DPERR_NOSESSIONS@ DB 'DPERR_NOSESSIONS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EOOCDAJ@DPERR_NOPLAYERS@
CONST	SEGMENT
??_C@_0BA@EOOCDAJ@DPERR_NOPLAYERS@ DB 'DPERR_NOPLAYERS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EIACNNBO@DPERR_NONAMESERVERFOUND@
CONST	SEGMENT
??_C@_0BI@EIACNNBO@DPERR_NONAMESERVERFOUND@ DB 'DPERR_NONAMESERVERFOUND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBLIJGDD@DPERR_NOMESSAGES@
CONST	SEGMENT
??_C@_0BB@HBLIJGDD@DPERR_NOMESSAGES@ DB 'DPERR_NOMESSAGES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PBFFMHDJ@DPERR_OUTOFMEMORY@
CONST	SEGMENT
??_C@_0BC@PBFFMHDJ@DPERR_OUTOFMEMORY@ DB 'DPERR_OUTOFMEMORY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMHODJHC@DPERR_NOMEMORY@
CONST	SEGMENT
??_C@_0P@KMHODJHC@DPERR_NOMEMORY@ DB 'DPERR_NOMEMORY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KKENPFA@DPERR_NOCONNECTION@
CONST	SEGMENT
??_C@_0BD@KKENPFA@DPERR_NOCONNECTION@ DB 'DPERR_NOCONNECTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FAHDPIHF@DPERR_NOCAPS@
CONST	SEGMENT
??_C@_0N@FAHDPIHF@DPERR_NOCAPS@ DB 'DPERR_NOCAPS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FLBEBGGF@DPERR_INVALIDGROUP@
CONST	SEGMENT
??_C@_0BD@FLBEBGGF@DPERR_INVALIDGROUP@ DB 'DPERR_INVALIDGROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBKABPPO@DPERR_INVALIDPLAYER@
CONST	SEGMENT
??_C@_0BE@MBKABPPO@DPERR_INVALIDPLAYER@ DB 'DPERR_INVALIDPLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NINLPOPL@DPERR_INVALIDPARAMS@
CONST	SEGMENT
??_C@_0BE@NINLPOPL@DPERR_INVALIDPARAMS@ DB 'DPERR_INVALIDPARAMS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CELHCBOG@DPERR_INVALIDPARAM@
CONST	SEGMENT
??_C@_0BD@CELHCBOG@DPERR_INVALIDPARAM@ DB 'DPERR_INVALIDPARAM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFPEJAKL@DPERR_INVALIDOBJECT@
CONST	SEGMENT
??_C@_0BE@FFPEJAKL@DPERR_INVALIDOBJECT@ DB 'DPERR_INVALIDOBJECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JLMILPMN@DPERR_INVALIDFLAGS@
CONST	SEGMENT
??_C@_0BD@JLMILPMN@DPERR_INVALIDFLAGS@ DB 'DPERR_INVALIDFLAGS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCPCPFNL@DPERR_GENERIC@
CONST	SEGMENT
??_C@_0O@LCPCPFNL@DPERR_GENERIC@ DB 'DPERR_GENERIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCFNHCFF@DPERR_EXCEPTION@
CONST	SEGMENT
??_C@_0BA@MCFNHCFF@DPERR_EXCEPTION@ DB 'DPERR_EXCEPTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NJEEEGOO@DPERR_CAPSNOTAVAILABLEYET@
CONST	SEGMENT
??_C@_0BK@NJEEEGOO@DPERR_CAPSNOTAVAILABLEYET@ DB 'DPERR_CAPSNOTAVAILABLEY'
	DB	'ET', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ELGMBCBF@DPERR_CANTCREATESESSION@
CONST	SEGMENT
??_C@_0BI@ELGMBCBF@DPERR_CANTCREATESESSION@ DB 'DPERR_CANTCREATESESSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GMKOMEBJ@DPERR_CANTCREATEPLAYER@
CONST	SEGMENT
??_C@_0BH@GMKOMEBJ@DPERR_CANTCREATEPLAYER@ DB 'DPERR_CANTCREATEPLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DCEHLHAP@DPERR_CANTCREATEGROUP@
CONST	SEGMENT
??_C@_0BG@DCEHLHAP@DPERR_CANTCREATEGROUP@ DB 'DPERR_CANTCREATEGROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OFODIPDM@DPERR_CANTADDPLAYER@
CONST	SEGMENT
??_C@_0BE@OFODIPDM@DPERR_CANTADDPLAYER@ DB 'DPERR_CANTADDPLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OPPNCFCJ@DPERR_BUFFERTOOSMALL@
CONST	SEGMENT
??_C@_0BF@OPPNCFCJ@DPERR_BUFFERTOOSMALL@ DB 'DPERR_BUFFERTOOSMALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JLKJJGDM@DPERR_ACTIVEPLAYERS@
CONST	SEGMENT
??_C@_0BE@JLKJJGDM@DPERR_ACTIVEPLAYERS@ DB 'DPERR_ACTIVEPLAYERS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CIMLFMCH@DPERR_ACCESSDENIED@
CONST	SEGMENT
??_C@_0BD@CIMLFMCH@DPERR_ACCESSDENIED@ DB 'DPERR_ACCESSDENIED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KGCFELPH@DPERR_ALREADYINITIALIZED@
CONST	SEGMENT
??_C@_0BJ@KGCFELPH@DPERR_ALREADYINITIALIZED@ DB 'DPERR_ALREADYINITIALIZED'
	DB	00H						; `string'
CONST	ENDS
_DATA	SEGMENT
?direct_play_use_guaranteed_packets@@3HA DD 01H		; direct_play_use_guaranteed_packets
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?direct_play_get_message_queue@@YGXXZ		; direct_play_get_message_queue
PUBLIC	?create_direct_play_interface@@YGXXZ		; create_direct_play_interface
PUBLIC	?direct_play_initialise_system@@YGHXZ		; direct_play_initialise_system
PUBLIC	?direct_play_deinitialise_system@@YGXXZ		; direct_play_deinitialise_system
PUBLIC	?direct_play_close_session@@YGHXZ		; direct_play_close_session
PUBLIC	?direct_play_create_interface@@YGHPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ; direct_play_create_interface
PUBLIC	?direct_play_destroy_interface@@YGHXZ		; direct_play_destroy_interface
PUBLIC	?direct_play_enumerate_service_providers@@YGHXZ	; direct_play_enumerate_service_providers
PUBLIC	?direct_play_interface_capabilities@@YGHXZ	; direct_play_interface_capabilities
PUBLIC	?direct_play_get_interface_capabilities@@YGPAUDPCAPS@@XZ ; direct_play_get_interface_capabilities
PUBLIC	?direct_play_get_lobbied@@YGHXZ			; direct_play_get_lobbied
PUBLIC	?direct_play_register_application@@YGXPBD0@Z	; direct_play_register_application
PUBLIC	?direct_play_enumerate_sessions@@YGHXZ		; direct_play_enumerate_sessions
PUBLIC	?direct_play_create_session@@YGHH@Z		; direct_play_create_session
PUBLIC	?direct_play_join_session@@YGHXZ		; direct_play_join_session
PUBLIC	?direct_play_session_capabilities@@YGHXZ	; direct_play_session_capabilities
PUBLIC	?direct_play_session_players@@YGHXZ		; direct_play_session_players
PUBLIC	?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ ; direct_play_get_session_capabilities
PUBLIC	?direct_play_enumerate_groups@@YGHXZ		; direct_play_enumerate_groups
PUBLIC	?direct_play_create_group@@YGHXZ		; direct_play_create_group
PUBLIC	?direct_play_destroy_group@@YGHXZ		; direct_play_destroy_group
PUBLIC	?direct_play_join_group@@YGHXZ			; direct_play_join_group
PUBLIC	?direct_play_leave_group@@YGHXZ			; direct_play_leave_group
PUBLIC	?direct_play_create_player@@YGHXZ		; direct_play_create_player
PUBLIC	?direct_play_create_server_player@@YGHXZ	; direct_play_create_server_player
PUBLIC	?direct_play_destroy_player@@YGHXZ		; direct_play_destroy_player
PUBLIC	?direct_play_send_data@@YGHKPAXH@Z		; direct_play_send_data
PUBLIC	?direct_play_receive_data@@YGHPAXH@Z		; direct_play_receive_data
PUBLIC	?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ ; direct_play_get_service_provider_table
PUBLIC	?direct_play_get_session_table@@YGPAUSESSION_TABLE_TYPE@@XZ ; direct_play_get_session_table
PUBLIC	?direct_play_get_group_table@@YGPAUGROUP_TABLE_TYPE@@XZ ; direct_play_get_group_table
PUBLIC	?direct_play_set_group_name@@YGXPBD@Z		; direct_play_set_group_name
PUBLIC	?direct_play_set_session_name@@YGXPBD@Z		; direct_play_set_session_name
PUBLIC	?direct_play_set_player_name@@YGXPBD@Z		; direct_play_set_player_name
PUBLIC	?direct_play_get_session_name@@YGPBDXZ		; direct_play_get_session_name
PUBLIC	?direct_play_get_group_name@@YGPBDXZ		; direct_play_get_group_name
PUBLIC	?direct_play_get_player_name@@YGPBDK@Z		; direct_play_get_player_name
PUBLIC	?direct_play_set_group_id@@YGXH@Z		; direct_play_set_group_id
PUBLIC	?direct_play_get_group_id@@YGHXZ		; direct_play_get_group_id
PUBLIC	?direct_play_set_player_id@@YGXH@Z		; direct_play_set_player_id
PUBLIC	?direct_play_get_player_id@@YGHXZ		; direct_play_get_player_id
PUBLIC	?direct_play_get_number_of_players@@YGHXZ	; direct_play_get_number_of_players
PUBLIC	?direct_play_set_service_provider@@YGXPAU_GUID@@@Z ; direct_play_set_service_provider
PUBLIC	?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
PUBLIC	?direct_play_remove_player_from_group@@YGHK@Z	; direct_play_remove_player_from_group
PUBLIC	?direct_play_get_connection_baudrate@@YGHXZ	; direct_play_get_connection_baudrate
PUBLIC	?direct_play_session_max_players@@YGHXZ		; direct_play_session_max_players
PUBLIC	?direct_play_refresh_modem_session@@YGHXZ	; direct_play_refresh_modem_session
PUBLIC	?direct_play_set_session_type_and_name@@YGXH@Z	; direct_play_set_session_type_and_name
PUBLIC	?direct_play_destroy_modem@@YGXXZ		; direct_play_destroy_modem
PUBLIC	?direct_play_dial_modem@@YGHPBD0@Z		; direct_play_dial_modem
PUBLIC	?direct_play_dial_modem_status@@YGJXZ		; direct_play_dial_modem_status
PUBLIC	?direct_play_answer_modem@@YGHPBDH@Z		; direct_play_answer_modem
PUBLIC	?direct_play_answer_modem_status@@YGJXZ		; direct_play_answer_modem_status
PUBLIC	?set_direct_play_inet_address@@YGXPBD@Z		; set_direct_play_inet_address
PUBLIC	?set_direct_play_serial_address@@YGXHHHHH@Z	; set_direct_play_serial_address
PUBLIC	?direct_play_get_send_queue_number_of_packets@@YGHXZ ; direct_play_get_send_queue_number_of_packets
PUBLIC	?direct_play_get_send_queue_number_of_bytes@@YGHXZ ; direct_play_get_send_queue_number_of_bytes
PUBLIC	?destroy_direct_play_interface@@YGXXZ		; destroy_direct_play_interface
PUBLIC	?get_dplay_error_message@@YGPBDJ@Z		; get_dplay_error_message
PUBLIC	?direct_play_system_message@@YGXPAUDPMSG_GENERIC@@@Z ; direct_play_system_message
PUBLIC	?direct_play_sort_session_list@@YGXXZ		; direct_play_sort_session_list
PUBLIC	?direct_play_get_lobbied_join@@YGHXZ		; direct_play_get_lobbied_join
PUBLIC	?internal_direct_play_dial_modem_status@@YGHPAX@Z ; internal_direct_play_dial_modem_status
PUBLIC	?direct_play_session_admin_name@@YGPBDXZ	; direct_play_session_admin_name
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0BA@JIJBFEKD@Unnamed?5Session@		; `string'
PUBLIC	??_C@_0P@HMHCKJLG@Unnamed?5Player@		; `string'
PUBLIC	??_C@_0BK@DKLCDGLO@DP?5SEND?5QUEUE?5PACKETS?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0BI@FKNKBHGA@DP?5SEND?5QUEUE?5BYTES?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0DE@GAOEMGIA@DIRECTP?3?5Attempting?5to?5initiali@ ; `string'
PUBLIC	??_C@_0CH@NGICOMCL@DIRECTP?3?5Unable?5to?5create?5Direc@ ; `string'
PUBLIC	??_C@_0DB@NOLMPJKL@DIRECTP?3?5Unable?5to?5release?5the?5@ ; `string'
PUBLIC	??_C@_0CO@BIHFCIFB@DIRECTP?3?5Unable?5to?5create?5Direc@ ; `string'
PUBLIC	??_C@_0CO@PEEJKLIG@DIRECTP?3?5Not?5called?5by?5a?5lobby?5@ ; `string'
PUBLIC	??_C@_0DF@BOAPCBHG@DIRECTP?3?5Unable?5to?5get?5lobby?5co@ ; `string'
PUBLIC	??_C@_0CD@JAMMEPFM@DIRECTP?3?5Lobby?5says?5to?5host?5a?5g@ ; `string'
PUBLIC	??_C@_0CD@HFJFAIAN@DIRECTP?3?5Lobby?5says?5to?5join?5a?5g@ ; `string'
PUBLIC	??_C@_0DF@CNGHAAOF@DIRECTP?3?5Unable?5to?5SetConection@ ; `string'
PUBLIC	??_C@_0CI@BOCMEPNA@DIRECTP?3?5Unable?5to?5connect?5to?5l@ ; `string'
PUBLIC	??_C@_0CJ@KOMMFEEO@DIRECTP?3?5Connected?5to?5lobby?5suc@ ; `string'
PUBLIC	??_C@_0BB@DIHKKKEM@Session?5name?3?5?$CFs@	; `string'
PUBLIC	??_C@_0BA@OCAIJDPI@Player?5name?3?5?$CFs@	; `string'
PUBLIC	?__LINE__Var@?0??direct_play_get_lobbied_join@@YGHXZ@4JA ; `direct_play_get_lobbied_join'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@GMJOCJCH@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0BD@DNLEEGKD@direct_play_lobby3@		; `string'
PUBLIC	??_C@_0CJ@HPKNGKJJ@Unable?5to?5register?5to?5DirectPla@ ; `string'
PUBLIC	??_C@_0CK@EPHJHGDL@DIRECTP?3?5DirectPlay?3?3EnumConnec@ ; `string'
PUBLIC	??_C@_0CL@MPHMJILP@Unable?5to?5get?5player?5address?5fo@ ; `string'
PUBLIC	??_C@_0EO@CIHANOPA@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@ ; `string'
PUBLIC	??_C@_0BB@NBDJOKK@DirectPlay?5Lobby@		; `string'
PUBLIC	??_C@_0CP@IDEMEGBL@DIRECTP?3?5DirectPlay?3?3Initialize@ ; `string'
PUBLIC	??_C@_0BH@LPANMCNH@COMMS?5MODE?5?$CB?$DN?5MULTI?$CB?$CB?$CB@ ; `string'
PUBLIC	??_C@_0CH@GJNILHHL@DIRECTP?3?5DirectPlay?3?3EnumSessio@ ; `string'
PUBLIC	??_C@_0BH@JCCEPHLF@Creating?5lobby?5session@	; `string'
PUBLIC	??_C@_04KNCIGIPG@Done@				; `string'
PUBLIC	??_C@_0CD@FJGAICN@Directp?3?5Refresh?5modem?5session?3@ ; `string'
PUBLIC	??_C@_0CL@FDNPAAKP@Unable?5to?5get?5session?5descripti@ ; `string'
PUBLIC	?__LINE__Var@?0??direct_play_dial_modem@@YGHPBD0@Z@4JA ; `direct_play_dial_modem'::`1'::__LINE__Var
PUBLIC	??_C@_05MLDONODB@modem@				; `string'
PUBLIC	??_C@_0N@NBCPJJLC@phone_number@			; `string'
PUBLIC	??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@ ; `string'
PUBLIC	??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@ ; `string'
PUBLIC	??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@ ; `string'
PUBLIC	??_C@_0DH@MEFIGCJH@DIRECTP?3?5Unable?5to?5initialize?5c@ ; `string'
PUBLIC	??_C@_0EB@NAKCMPKK@DIRECTP?3?5Unable?5to?5initialize?5c@ ; `string'
PUBLIC	??_C@_0O@JCIDGODN@Modem?5Session@		; `string'
PUBLIC	??_C@_0BL@EHPPAAKN@DirectPlay?3?3Open?5error?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0CG@HEBGBFJJ@Unable?5to?5set?5session?5descripti@ ; `string'
PUBLIC	??_C@_0BP@KEFGKGAJ@DIRECTP?3?5DirectPlay?3?3Open?5?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0EB@OOGAIHKJ@Attempting?5to?5join?5a?5direct?5pla@ ; `string'
PUBLIC	??_C@_0BF@HPODNLHG@Joining?5lobbied?5game@	; `string'
PUBLIC	??_C@_0CC@JCOGJOKP@DIRECTP?3?5DirectPlay?3?3GetCaps?5?3?5@ ; `string'
PUBLIC	??_C@_0CJ@OBFEMEHO@DIRECTP?3?5DirectPlay?3?3GetSession@ ; `string'
PUBLIC	??_C@_0CC@DGBFLJLI@DirectPlay?3?3CreateGroup?5error?3?5@ ; `string'
PUBLIC	??_C@_0CK@JNHOIJID@DIRECTP?3?5DirectPlay?3?3AddPlayerT@ ; `string'
PUBLIC	??_C@_0DA@EIBHFJME@DIRECTP?3?5Direct?5Play?3?5join?5grou@ ; `string'
PUBLIC	??_C@_0CP@CPFCIDND@DIRECTP?3?5DirectPlay?3?3DeletePlay@ ; `string'
PUBLIC	??_C@_0CD@KNBFBING@Error?3?5Failed?5to?5destroy?5player@ ; `string'
PUBLIC	??_C@_0BL@JIKHPCCH@Success?3?5player?5?$CFd?5removed@ ; `string'
PUBLIC	??_C@_0CE@FDGDGDLL@DIRECTP?3?5LEAVE?5GROUP?5?3?5no?5group@ ; `string'
PUBLIC	??_C@_0CG@BFHEDEDF@DIRECTP?3?5DirectPlay?3?3DestroyGro@ ; `string'
PUBLIC	??_C@_0CG@KPIAJCDN@DIRECTP?3?5DirectPlay?3?3CreatePlay@ ; `string'
PUBLIC	??_C@_0CH@NACBCCJH@DIRECTP?3?5DirectPlay?3?3DestroyPla@ ; `string'
PUBLIC	??_C@_0BO@GMIDLNLH@DIRECTP?3?5DirectPlay?3?3Send?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0EC@JDEFDLKM@Direct_playx?5?$DN?5?$CF08x?0?5from?5id?3?5?$CF@ ; `string'
PUBLIC	??_C@_0CB@MHFKCAPG@DIRECTP?3?5DirectPlay?3?3Receive?3?5?$CF@ ; `string'
PUBLIC	??_C@_07OAEEHIKM@No?5Name@			; `string'
PUBLIC	??_C@_0CF@FBHLHCFI@DPERR?3?5Unable?5to?5get?5player?5nam@ ; `string'
PUBLIC	??_C@_0CK@ILKGMGJE@DPERR?3?5Unable?5to?5get?5player?5nam@ ; `string'
PUBLIC	??_C@_0DP@CCODGCM@DIRECTP?3?5Unable?5to?5initialize?5c@ ; `string'
PUBLIC	??_C@_0EE@CNLDHKNE@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@ ; `string'
PUBLIC	??_C@_0ED@BPIHLAAD@DIRECTP?3?5Unable?5to?5initialize?5c@ ; `string'
PUBLIC	??_C@_0EF@DDDKNPHA@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@ ; `string'
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetCurrentDirectoryA@8:PROC
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?register_exit_function@@YGXP6GXXZ@Z:PROC	; register_exit_function
EXTRN	?set_fpu_rounding_mode_zero@@YGXXZ:PROC		; set_fpu_rounding_mode_zero
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?server_log@@YAXPBDZZ:PROC			; server_log
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?debug_watch@@YGXPBDW4mt_type@@PAX@Z:PROC	; debug_watch
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?system_thread_function@@YGHP6GHPAX@Z0@Z:PROC	; system_thread_function
EXTRN	_IID_IDirectPlay4A:BYTE
EXTRN	_CLSID_DirectPlay:BYTE
EXTRN	_DPSPGUID_TCPIP:BYTE
EXTRN	_DPSPGUID_SERIAL:BYTE
EXTRN	_DPSPGUID_MODEM:BYTE
EXTRN	_IID_IDirectPlayLobby3A:BYTE
EXTRN	_CLSID_DirectPlayLobby:BYTE
EXTRN	_DPAID_ServiceProvider:BYTE
EXTRN	_DPAID_Phone:BYTE
EXTRN	_DPAID_Modem:BYTE
EXTRN	_DPAID_INet:BYTE
EXTRN	_DPAID_ComPort:BYTE
EXTRN	?command_line_maxplayers@@3HA:DWORD		; command_line_maxplayers
EXTRN	_TEST_GUID:BYTE
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?direct_play_initialised@@3HA DD 01H DUP (?)		; direct_play_initialised
?direct_play_send_queue_number_of_packets@@3KA DD 01H DUP (?) ; direct_play_send_queue_number_of_packets
?direct_play_send_queue_number_of_bytes@@3KA DD 01H DUP (?) ; direct_play_send_queue_number_of_bytes
?group_counter@@3HA DD 01H DUP (?)			; group_counter
?session_counter@@3HA DD 01H DUP (?)			; session_counter
?connection_data@@3UCONNECTION_DATA_TYPE@@A DB 040H DUP (?) ; connection_data
?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A DD 01H DUP (?) ; service_provider_table
?session_table@@3PAUSESSION_TABLE_TYPE@@A DD 01H DUP (?) ; session_table
?group_table@@3PAUGROUP_TABLE_TYPE@@A DD 01H DUP (?)	; group_table
?interface_capabilities@@3UDPCAPS@@A DB 028H DUP (?)	; interface_capabilities
?session_capabilities@@3PAXA DD 01H DUP (?)		; session_capabilities
?direct_playx@@3PAUIDirectPlay4@@A DD 01H DUP (?)	; direct_playx
?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A DD 01H DUP (?) ; direct_play_lobby3
?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A DD 01H DUP (?) ; direct_play_lobby3_connection_data
?modem_address_data@@3PAPAXA DD 01H DUP (?)		; modem_address_data
?modem_address_datasize@@3KA DD 01H DUP (?)		; modem_address_datasize
?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A DB 050H DUP (?) ; `internal_direct_play_answer_modem'::`2'::sessionDesc
?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A DB 050H DUP (?) ; `internal_direct_play_answer_modem_status'::`2'::sessionDesc
?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A DB 050H DUP (?) ; `direct_play_create_session'::`2'::sessionDesc
?new_group@?4??direct_play_create_group@@YGHXZ@4UGROUP_TABLE_TYPE@@A DB 0cH DUP (?) ; `direct_play_create_group'::`5'::new_group
_BSS	ENDS
_DATA	SEGMENT
	ORG $+4
?dplay_error_table@@3PAUDPLAY_ERROR_MESSAGE@@A DD 088770005H ; dplay_error_table
	DD	FLAT:??_C@_0BJ@KGCFELPH@DPERR_ALREADYINITIALIZED@
	DD	08877000aH
	DD	FLAT:??_C@_0BD@CIMLFMCH@DPERR_ACCESSDENIED@
	DD	088770014H
	DD	FLAT:??_C@_0BE@JLKJJGDM@DPERR_ACTIVEPLAYERS@
	DD	08877001eH
	DD	FLAT:??_C@_0BF@OPPNCFCJ@DPERR_BUFFERTOOSMALL@
	DD	088770028H
	DD	FLAT:??_C@_0BE@OFODIPDM@DPERR_CANTADDPLAYER@
	DD	088770032H
	DD	FLAT:??_C@_0BG@DCEHLHAP@DPERR_CANTCREATEGROUP@
	DD	08877003cH
	DD	FLAT:??_C@_0BH@GMKOMEBJ@DPERR_CANTCREATEPLAYER@
	DD	088770046H
	DD	FLAT:??_C@_0BI@ELGMBCBF@DPERR_CANTCREATESESSION@
	DD	088770050H
	DD	FLAT:??_C@_0BK@NJEEEGOO@DPERR_CAPSNOTAVAILABLEYET@
	DD	08877005aH
	DD	FLAT:??_C@_0BA@MCFNHCFF@DPERR_EXCEPTION@
	DD	080004005H
	DD	FLAT:??_C@_0O@LCPCPFNL@DPERR_GENERIC@
	DD	088770078H
	DD	FLAT:??_C@_0BD@JLMILPMN@DPERR_INVALIDFLAGS@
	DD	088770082H
	DD	FLAT:??_C@_0BE@FFPEJAKL@DPERR_INVALIDOBJECT@
	DD	080070057H
	DD	FLAT:??_C@_0BD@CELHCBOG@DPERR_INVALIDPARAM@
	DD	080070057H
	DD	FLAT:??_C@_0BE@NINLPOPL@DPERR_INVALIDPARAMS@
	DD	088770096H
	DD	FLAT:??_C@_0BE@MBKABPPO@DPERR_INVALIDPLAYER@
	DD	08877009bH
	DD	FLAT:??_C@_0BD@FLBEBGGF@DPERR_INVALIDGROUP@
	DD	0887700a0H
	DD	FLAT:??_C@_0N@FAHDPIHF@DPERR_NOCAPS@
	DD	0887700aaH
	DD	FLAT:??_C@_0BD@KKENPFA@DPERR_NOCONNECTION@
	DD	08007000eH
	DD	FLAT:??_C@_0P@KMHODJHC@DPERR_NOMEMORY@
	DD	08007000eH
	DD	FLAT:??_C@_0BC@PBFFMHDJ@DPERR_OUTOFMEMORY@
	DD	0887700beH
	DD	FLAT:??_C@_0BB@HBLIJGDD@DPERR_NOMESSAGES@
	DD	0887700c8H
	DD	FLAT:??_C@_0BI@EIACNNBO@DPERR_NONAMESERVERFOUND@
	DD	0887700d2H
	DD	FLAT:??_C@_0BA@EOOCDAJ@DPERR_NOPLAYERS@
	DD	0887700dcH
	DD	FLAT:??_C@_0BB@OMCLIDBP@DPERR_NOSESSIONS@
	DD	08000000aH
	DD	FLAT:??_C@_0O@BPNHOHEG@DPERR_PENDING@
	DD	0887700e6H
	DD	FLAT:??_C@_0BB@OIDGCPGB@DPERR_SENDTOOBIG@
	DD	0887700f0H
	DD	FLAT:??_C@_0O@LDDOIKAJ@DPERR_TIMEOUT@
	DD	0887700faH
	DD	FLAT:??_C@_0BC@EFJJKFJE@DPERR_UNAVAILABLE@
	DD	080004001H
	DD	FLAT:??_C@_0BC@NPHELNFN@DPERR_UNSUPPORTED@
	DD	08877010eH
	DD	FLAT:??_C@_0L@FKAKNADE@DPERR_BUSY@
	DD	088770118H
	DD	FLAT:??_C@_0BB@OFPDBPLG@DPERR_USERCANCEL@
	DD	080004002H
	DD	FLAT:??_C@_0BC@JMLMJBCI@DPERR_NOINTERFACE@
	DD	088770122H
	DD	FLAT:??_C@_0BJ@HANCFHEH@DPERR_CANNOTCREATESERVER@
	DD	08877012cH
	DD	FLAT:??_C@_0BB@OLDMKIH@DPERR_PLAYERLOST@
	DD	088770136H
	DD	FLAT:??_C@_0BC@FDONMHBP@DPERR_SESSIONLOST@
	DD	088770140H
	DD	FLAT:??_C@_0BE@LPMEIJMF@DPERR_UNINITIALIZED@
	DD	08877014aH
	DD	FLAT:??_C@_0BD@DOMEBGED@DPERR_NONEWPLAYERS@
	DD	088770154H
	DD	FLAT:??_C@_0BG@IOJGIAEJ@DPERR_INVALIDPASSWORD@
	DD	08877015eH
	DD	FLAT:??_C@_0BB@LDDHAHLN@DPERR_CONNECTING@
	DD	088770168H
	DD	FLAT:??_C@_0BF@EHBJGNCG@DPERR_CONNECTIONLOST@
	DD	088770172H
	DD	FLAT:??_C@_0BF@IBEONKCK@DPERR_UNKNOWNMESSAGE@
	DD	08877017cH
	DD	FLAT:??_C@_0BD@JBJHCNNC@DPERR_CANCELFAILED@
	DD	088770186H
	DD	FLAT:??_C@_0BG@NNHCHHOD@DPERR_INVALIDPRIORITY@
	DD	088770190H
	DD	FLAT:??_C@_0BB@LPLFGHIN@DPERR_NOTHANDLED@
	DD	08877019aH
	DD	FLAT:??_C@_0BA@PENIAENG@DPERR_CANCELLED@
	DD	0887701a4H
	DD	FLAT:??_C@_0O@MLJGGKJK@DPERR_ABORTED@
	DD	0887703e8H
	DD	FLAT:??_C@_0BF@EHLGNELP@DPERR_BUFFERTOOLARGE@
	DD	0887703f2H
	DD	FLAT:??_C@_0BI@NDOIGLGE@DPERR_CANTCREATEPROCESS@
	DD	0887703fcH
	DD	FLAT:??_C@_0BE@IBHIGLAG@DPERR_APPNOTSTARTED@
	DD	088770406H
	DD	FLAT:??_C@_0BH@JCHHAMNM@DPERR_INVALIDINTERFACE@
	DD	088770410H
	DD	FLAT:??_C@_0BI@KIIDPCDK@DPERR_NOSERVICEPROVIDER@
	DD	08877041aH
	DD	FLAT:??_C@_0BJ@HLLJJGFA@DPERR_UNKNOWNAPPLICATION@
	DD	08877042eH
	DD	FLAT:??_C@_0BB@KEJMNHMD@DPERR_NOTLOBBIED@
	DD	088770438H
	DD	FLAT:??_C@_0BM@NBMKJHAC@DPERR_SERVICEPROVIDERLOADED@
	DD	088770442H
	DD	FLAT:??_C@_0BI@KGDKGFHH@DPERR_ALREADYREGISTERED@
	DD	08877044cH
	DD	FLAT:??_C@_0BE@ONHCLLBK@DPERR_NOTREGISTERED@
	DD	0887707d0H
	DD	FLAT:??_C@_0BL@BNFGMJL@DPERR_AUTHENTICATIONFAILED@
	DD	0887707daH
	DD	FLAT:??_C@_0BD@GOMKHOPK@DPERR_CANTLOADSSPI@
	DD	0887707e4H
	DD	FLAT:??_C@_0BH@NPDAALGG@DPERR_ENCRYPTIONFAILED@
	DD	0887707eeH
	DD	FLAT:??_C@_0BB@EIIKKBNP@DPERR_SIGNFAILED@
	DD	0887707f8H
	DD	FLAT:??_C@_0BO@OABPENJN@DPERR_CANTLOADSECURITYPACKAGE@
	DD	088770802H
	DD	FLAT:??_C@_0BN@LCGEOJPK@DPERR_ENCRYPTIONNOTSUPPORTED@
	DD	08877080cH
	DD	FLAT:??_C@_0BD@PEDKHGGM@DPERR_CANTLOADCAPI@
	DD	088770816H
	DD	FLAT:??_C@_0BC@BLFCMKHF@DPERR_NOTLOGGEDIN@
	DD	088770820H
	DD	FLAT:??_C@_0BC@MELIBBOO@DPERR_LOGONDENIED@
	DD	00H
	DD	FLAT:??_C@_05BJMCJKCK@DP_OK@
_DATA	ENDS
;	COMDAT ??_C@_0EF@DDDKNPHA@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@
CONST	SEGMENT
??_C@_0EF@DDDKNPHA@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@ DB 'DIRECTP: CRE'
	DB	'ATED A COMPOUND ADDRESS FOR THE SERIAL SERVICE PROVIDER!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@BPIHLAAD@DIRECTP?3?5Unable?5to?5initialize?5c@
CONST	SEGMENT
??_C@_0ED@BPIHLAAD@DIRECTP?3?5Unable?5to?5initialize?5c@ DB 'DIRECTP: Una'
	DB	'ble to initialize connection on the new serial address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@CNLDHKNE@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@
CONST	SEGMENT
??_C@_0EE@CNLDHKNE@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@ DB 'DIRECTP: CRE'
	DB	'ATED A COMPOUND ADDRESS FOR THE TCPIP SERVICE PROVIDER!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@CCODGCM@DIRECTP?3?5Unable?5to?5initialize?5c@
CONST	SEGMENT
??_C@_0DP@CCODGCM@DIRECTP?3?5Unable?5to?5initialize?5c@ DB 'DIRECTP: Unab'
	DB	'le to initialize connection on the new IP address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@ILKGMGJE@DPERR?3?5Unable?5to?5get?5player?5nam@
CONST	SEGMENT
??_C@_0CK@ILKGMGJE@DPERR?3?5Unable?5to?5get?5player?5nam@ DB 'DPERR: Unab'
	DB	'le to get player name size: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FBHLHCFI@DPERR?3?5Unable?5to?5get?5player?5nam@
CONST	SEGMENT
??_C@_0CF@FBHLHCFI@DPERR?3?5Unable?5to?5get?5player?5nam@ DB 'DPERR: Unab'
	DB	'le to get player name: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OAEEHIKM@No?5Name@
CONST	SEGMENT
??_C@_07OAEEHIKM@No?5Name@ DB 'No Name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MHFKCAPG@DIRECTP?3?5DirectPlay?3?3Receive?3?5?$CF@
CONST	SEGMENT
??_C@_0CB@MHFKCAPG@DIRECTP?3?5DirectPlay?3?3Receive?3?5?$CF@ DB 'DIRECTP:'
	DB	' DirectPlay::Receive: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JDEFDLKM@Direct_playx?5?$DN?5?$CF08x?0?5from?5id?3?5?$CF@
CONST	SEGMENT
??_C@_0EC@JDEFDLKM@Direct_playx?5?$DN?5?$CF08x?0?5from?5id?3?5?$CF@ DB 'D'
	DB	'irect_playx = %08x, from id: %d, to id: %d, data: %08x, size:'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GMIDLNLH@DIRECTP?3?5DirectPlay?3?3Send?3?5?$CFs@
CONST	SEGMENT
??_C@_0BO@GMIDLNLH@DIRECTP?3?5DirectPlay?3?3Send?3?5?$CFs@ DB 'DIRECTP: D'
	DB	'irectPlay::Send: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NACBCCJH@DIRECTP?3?5DirectPlay?3?3DestroyPla@
CONST	SEGMENT
??_C@_0CH@NACBCCJH@DIRECTP?3?5DirectPlay?3?3DestroyPla@ DB 'DIRECTP: Dire'
	DB	'ctPlay::DestroyPlayer: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KPIAJCDN@DIRECTP?3?5DirectPlay?3?3CreatePlay@
CONST	SEGMENT
??_C@_0CG@KPIAJCDN@DIRECTP?3?5DirectPlay?3?3CreatePlay@ DB 'DIRECTP: Dire'
	DB	'ctPlay::CreatePlayer: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BFHEDEDF@DIRECTP?3?5DirectPlay?3?3DestroyGro@
CONST	SEGMENT
??_C@_0CG@BFHEDEDF@DIRECTP?3?5DirectPlay?3?3DestroyGro@ DB 'DIRECTP: Dire'
	DB	'ctPlay::DestroyGroup: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FDGDGDLL@DIRECTP?3?5LEAVE?5GROUP?5?3?5no?5group@
CONST	SEGMENT
??_C@_0CE@FDGDGDLL@DIRECTP?3?5LEAVE?5GROUP?5?3?5no?5group@ DB 'DIRECTP: L'
	DB	'EAVE GROUP : no group set', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JIKHPCCH@Success?3?5player?5?$CFd?5removed@
CONST	SEGMENT
??_C@_0BL@JIKHPCCH@Success?3?5player?5?$CFd?5removed@ DB 'Success: player'
	DB	' %d removed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KNBFBING@Error?3?5Failed?5to?5destroy?5player@
CONST	SEGMENT
??_C@_0CD@KNBFBING@Error?3?5Failed?5to?5destroy?5player@ DB 'Error: Faile'
	DB	'd to destroy player %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CPFCIDND@DIRECTP?3?5DirectPlay?3?3DeletePlay@
CONST	SEGMENT
??_C@_0CP@CPFCIDND@DIRECTP?3?5DirectPlay?3?3DeletePlay@ DB 'DIRECTP: Dire'
	DB	'ctPlay::DeletePlayerFromGroup: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EIBHFJME@DIRECTP?3?5Direct?5Play?3?5join?5grou@
CONST	SEGMENT
??_C@_0DA@EIBHFJME@DIRECTP?3?5Direct?5Play?3?5join?5grou@ DB 'DIRECTP: Di'
	DB	'rect Play: join group - no group set', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JNHOIJID@DIRECTP?3?5DirectPlay?3?3AddPlayerT@
CONST	SEGMENT
??_C@_0CK@JNHOIJID@DIRECTP?3?5DirectPlay?3?3AddPlayerT@ DB 'DIRECTP: Dire'
	DB	'ctPlay::AddPlayerToGroup: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DGBFLJLI@DirectPlay?3?3CreateGroup?5error?3?5@
CONST	SEGMENT
??_C@_0CC@DGBFLJLI@DirectPlay?3?3CreateGroup?5error?3?5@ DB 'DirectPlay::'
	DB	'CreateGroup error: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OBFEMEHO@DIRECTP?3?5DirectPlay?3?3GetSession@
CONST	SEGMENT
??_C@_0CJ@OBFEMEHO@DIRECTP?3?5DirectPlay?3?3GetSession@ DB 'DIRECTP: Dire'
	DB	'ctPlay::GetSessionDesc : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JCOGJOKP@DIRECTP?3?5DirectPlay?3?3GetCaps?5?3?5@
CONST	SEGMENT
??_C@_0CC@JCOGJOKP@DIRECTP?3?5DirectPlay?3?3GetCaps?5?3?5@ DB 'DIRECTP: D'
	DB	'irectPlay::GetCaps : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HPODNLHG@Joining?5lobbied?5game@
CONST	SEGMENT
??_C@_0BF@HPODNLHG@Joining?5lobbied?5game@ DB 'Joining lobbied game', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OOGAIHKJ@Attempting?5to?5join?5a?5direct?5pla@
CONST	SEGMENT
??_C@_0EB@OOGAIHKJ@Attempting?5to?5join?5a?5direct?5pla@ DB 'Attempting t'
	DB	'o join a direct play session, but session is not set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KEFGKGAJ@DIRECTP?3?5DirectPlay?3?3Open?5?3?5?$CFs@
CONST	SEGMENT
??_C@_0BP@KEFGKGAJ@DIRECTP?3?5DirectPlay?3?3Open?5?3?5?$CFs@ DB 'DIRECTP:'
	DB	' DirectPlay::Open : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HEBGBFJJ@Unable?5to?5set?5session?5descripti@
CONST	SEGMENT
??_C@_0CG@HEBGBFJJ@Unable?5to?5set?5session?5descripti@ DB 'Unable to set'
	DB	' session description: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EHPPAAKN@DirectPlay?3?3Open?5error?3?5?$CFs@
CONST	SEGMENT
??_C@_0BL@EHPPAAKN@DirectPlay?3?3Open?5error?3?5?$CFs@ DB 'DirectPlay::Op'
	DB	'en error: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCIDGODN@Modem?5Session@
CONST	SEGMENT
??_C@_0O@JCIDGODN@Modem?5Session@ DB 'Modem Session', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NAKCMPKK@DIRECTP?3?5Unable?5to?5initialize?5c@
CONST	SEGMENT
??_C@_0EB@NAKCMPKK@DIRECTP?3?5Unable?5to?5initialize?5c@ DB 'DIRECTP: Una'
	DB	'ble to initialize connection for modem answering: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MEFIGCJH@DIRECTP?3?5Unable?5to?5initialize?5c@
CONST	SEGMENT
??_C@_0DH@MEFIGCJH@DIRECTP?3?5Unable?5to?5initialize?5c@ DB 'DIRECTP: Una'
	DB	'ble to initialize connection to dial modem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@
CONST	SEGMENT
??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@ DB 'DIRECTP: Un'
	DB	'able to create a compound address', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@
CONST	SEGMENT
??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@ DB 'DIRECTP: Una'
	DB	'ble to establish how big the compound address is', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
CONST	SEGMENT
??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@ DB 'DIRECTP: UN'
	DB	'ABLE TO CREATE A DIRECTPLAYLOBBY3 interface', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBCPJJLC@phone_number@
CONST	SEGMENT
??_C@_0N@NBCPJJLC@phone_number@ DB 'phone_number', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MLDONODB@modem@
CONST	SEGMENT
??_C@_05MLDONODB@modem@ DB 'modem', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??direct_play_dial_modem@@YGHPBD0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??direct_play_dial_modem@@YGHPBD0@Z@4JA DD 055fH ; `direct_play_dial_modem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CL@FDNPAAKP@Unable?5to?5get?5session?5descripti@
CONST	SEGMENT
??_C@_0CL@FDNPAAKP@Unable?5to?5get?5session?5descripti@ DB 'Unable to get'
	DB	' session description size: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FJGAICN@Directp?3?5Refresh?5modem?5session?3@
CONST	SEGMENT
??_C@_0CD@FJGAICN@Directp?3?5Refresh?5modem?5session?3@ DB 'Directp: Refr'
	DB	'esh modem session: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KNCIGIPG@Done@
CONST	SEGMENT
??_C@_04KNCIGIPG@Done@ DB 'Done', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCCEPHLF@Creating?5lobby?5session@
CONST	SEGMENT
??_C@_0BH@JCCEPHLF@Creating?5lobby?5session@ DB 'Creating lobby session', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GJNILHHL@DIRECTP?3?5DirectPlay?3?3EnumSessio@
CONST	SEGMENT
??_C@_0CH@GJNILHHL@DIRECTP?3?5DirectPlay?3?3EnumSessio@ DB 'DIRECTP: Dire'
	DB	'ctPlay::EnumSessions : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LPANMCNH@COMMS?5MODE?5?$CB?$DN?5MULTI?$CB?$CB?$CB@
CONST	SEGMENT
??_C@_0BH@LPANMCNH@COMMS?5MODE?5?$CB?$DN?5MULTI?$CB?$CB?$CB@ DB 'COMMS MO'
	DB	'DE != MULTI!!!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IDEMEGBL@DIRECTP?3?5DirectPlay?3?3Initialize@
CONST	SEGMENT
??_C@_0CP@IDEMEGBL@DIRECTP?3?5DirectPlay?3?3Initialize@ DB 'DIRECTP: Dire'
	DB	'ctPlay::InitializeConnection : %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NBDJOKK@DirectPlay?5Lobby@
CONST	SEGMENT
??_C@_0BB@NBDJOKK@DirectPlay?5Lobby@ DB 'DirectPlay Lobby', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CIHANOPA@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
CONST	SEGMENT
??_C@_0EO@CIHANOPA@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@ DB 'DIRECTP: UN'
	DB	'ABLE TO CREATE A DIRECTPLAYLOBBY3 interface to parse modem st'
	DB	'rings', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@MPHMJILP@Unable?5to?5get?5player?5address?5fo@
CONST	SEGMENT
??_C@_0CL@MPHMJILP@Unable?5to?5get?5player?5address?5fo@ DB 'Unable to ge'
	DB	't player address for modem: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EPHJHGDL@DIRECTP?3?5DirectPlay?3?3EnumConnec@
CONST	SEGMENT
??_C@_0CK@EPHJHGDL@DIRECTP?3?5DirectPlay?3?3EnumConnec@ DB 'DIRECTP: Dire'
	DB	'ctPlay::EnumConnections : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HPKNGKJJ@Unable?5to?5register?5to?5DirectPla@
CONST	SEGMENT
??_C@_0CJ@HPKNGKJJ@Unable?5to?5register?5to?5DirectPla@ DB 'Unable to reg'
	DB	'ister to DirectPlay %s : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNLEEGKD@direct_play_lobby3@
CONST	SEGMENT
??_C@_0BD@DNLEEGKD@direct_play_lobby3@ DB 'direct_play_lobby3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GMJOCJCH@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DF@GMJOCJCH@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\multi\directp.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??direct_play_get_lobbied_join@@YGHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??direct_play_get_lobbied_join@@YGHXZ@4JA DD 01a6H ; `direct_play_get_lobbied_join'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@OCAIJDPI@Player?5name?3?5?$CFs@
CONST	SEGMENT
??_C@_0BA@OCAIJDPI@Player?5name?3?5?$CFs@ DB 'Player name: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIHKKKEM@Session?5name?3?5?$CFs@
CONST	SEGMENT
??_C@_0BB@DIHKKKEM@Session?5name?3?5?$CFs@ DB 'Session name: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KOMMFEEO@DIRECTP?3?5Connected?5to?5lobby?5suc@
CONST	SEGMENT
??_C@_0CJ@KOMMFEEO@DIRECTP?3?5Connected?5to?5lobby?5suc@ DB 'DIRECTP: Con'
	DB	'nected to lobby successfully', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BOCMEPNA@DIRECTP?3?5Unable?5to?5connect?5to?5l@
CONST	SEGMENT
??_C@_0CI@BOCMEPNA@DIRECTP?3?5Unable?5to?5connect?5to?5l@ DB 'DIRECTP: Un'
	DB	'able to connect to lobby: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CNGHAAOF@DIRECTP?3?5Unable?5to?5SetConection@
CONST	SEGMENT
??_C@_0DF@CNGHAAOF@DIRECTP?3?5Unable?5to?5SetConection@ DB 'DIRECTP: Unab'
	DB	'le to SetConectionSettings on lobby: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFJFAIAN@DIRECTP?3?5Lobby?5says?5to?5join?5a?5g@
CONST	SEGMENT
??_C@_0CD@HFJFAIAN@DIRECTP?3?5Lobby?5says?5to?5join?5a?5g@ DB 'DIRECTP: L'
	DB	'obby says to join a game', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JAMMEPFM@DIRECTP?3?5Lobby?5says?5to?5host?5a?5g@
CONST	SEGMENT
??_C@_0CD@JAMMEPFM@DIRECTP?3?5Lobby?5says?5to?5host?5a?5g@ DB 'DIRECTP: L'
	DB	'obby says to host a game', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BOAPCBHG@DIRECTP?3?5Unable?5to?5get?5lobby?5co@
CONST	SEGMENT
??_C@_0DF@BOAPCBHG@DIRECTP?3?5Unable?5to?5get?5lobby?5co@ DB 'DIRECTP: Un'
	DB	'able to get lobby connection settings: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PEEJKLIG@DIRECTP?3?5Not?5called?5by?5a?5lobby?5@
CONST	SEGMENT
??_C@_0CO@PEEJKLIG@DIRECTP?3?5Not?5called?5by?5a?5lobby?5@ DB 'DIRECTP: N'
	DB	'ot called by a lobby - bailing out!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BIHFCIFB@DIRECTP?3?5Unable?5to?5create?5Direc@
CONST	SEGMENT
??_C@_0CO@BIHFCIFB@DIRECTP?3?5Unable?5to?5create?5Direc@ DB 'DIRECTP: Una'
	DB	'ble to create DirectPlayLobby: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@NOLMPJKL@DIRECTP?3?5Unable?5to?5release?5the?5@
CONST	SEGMENT
??_C@_0DB@NOLMPJKL@DIRECTP?3?5Unable?5to?5release?5the?5@ DB 'DIRECTP: Un'
	DB	'able to release the directplay object', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NGICOMCL@DIRECTP?3?5Unable?5to?5create?5Direc@
CONST	SEGMENT
??_C@_0CH@NGICOMCL@DIRECTP?3?5Unable?5to?5create?5Direc@ DB 'DIRECTP: Una'
	DB	'ble to create DirectPlay4A', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GAOEMGIA@DIRECTP?3?5Attempting?5to?5initiali@
CONST	SEGMENT
??_C@_0DE@GAOEMGIA@DIRECTP?3?5Attempting?5to?5initiali@ DB 'DIRECTP: Atte'
	DB	'mpting to initialise DirectPlay twice!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FKNKBHGA@DP?5SEND?5QUEUE?5BYTES?3?5?$CFd@
CONST	SEGMENT
??_C@_0BI@FKNKBHGA@DP?5SEND?5QUEUE?5BYTES?3?5?$CFd@ DB 'DP SEND QUEUE BYT'
	DB	'ES: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DKLCDGLO@DP?5SEND?5QUEUE?5PACKETS?3?5?$CFd@
CONST	SEGMENT
??_C@_0BK@DKLCDGLO@DP?5SEND?5QUEUE?5PACKETS?3?5?$CFd@ DB 'DP SEND QUEUE P'
	DB	'ACKETS: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HMHCKJLG@Unnamed?5Player@
CONST	SEGMENT
??_C@_0P@HMHCKJLG@Unnamed?5Player@ DB 'Unnamed Player', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JIJBFEKD@Unnamed?5Session@
CONST	SEGMENT
??_C@_0BA@JIJBFEKD@Unnamed?5Session@ DB 'Unnamed Session', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_session_admin_name@@YGPBDXZ
_TEXT	SEGMENT
?direct_play_session_admin_name@@YGPBDXZ PROC		; direct_play_session_admin_name, COMDAT

; 2300 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2301 : 
; 2302 : 	return (const char *) ( ( LPDPSESSIONDESC2 ) session_capabilities )->dwUser1;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA
  0000e	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 2303 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?direct_play_session_admin_name@@YGPBDXZ ENDP		; direct_play_session_admin_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?internal_direct_play_answer_modem_status@@YGHPAX@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_data$ = 8						; size = 4
?internal_direct_play_answer_modem_status@@YGHPAX@Z PROC ; internal_direct_play_answer_modem_status, COMDAT

; 1888 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1889 : 
; 1890 : 	static DPSESSIONDESC2
; 1891 : 		sessionDesc;
; 1892 : 
; 1893 : 	HRESULT
; 1894 : 		ret;
; 1895 : 
; 1896 : 	//
; 1897 : 	// To answer the phone - we need to open a session ( stupid, just stupid! )
; 1898 : 	//
; 1899 : 
; 1900 : 	memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  00009	6a 50		 push	 80			; 00000050H
  0000b	6a 00		 push	 0
  0000d	68 00 00 00 00	 push	 OFFSET ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A
  00012	e8 00 00 00 00	 call	 _memset
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1901 : 
; 1902 : 	sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  0001a	c7 05 00 00 00
	00 50 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A, 80 ; 00000050H

; 1903 : 	sessionDesc.dwFlags =  DPSESSION_KEEPALIVE;

  00024	c7 05 04 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+4, 64 ; 00000040H

; 1904 : 	sessionDesc.guidApplication = TEST_GUID;

  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  00033	a3 18 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+24, eax
  00038	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  0003e	89 0d 1c 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+28, ecx
  00044	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  0004a	89 15 20 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+32, edx
  00050	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  00055	a3 24 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+36, eax

; 1905 : 	sessionDesc.dwMaxPlayers = 2;

  0005a	c7 05 28 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+40, 2

; 1906 : 	sessionDesc.lpszSessionName = ( LPWSTR ) "Modem Session";

  00064	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+48, OFFSET ??_C@_0O@JCIDGODN@Modem?5Session@

; 1907 : 	connection_data.this_session.session = &sessionDesc;

  0006e	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44, OFFSET ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A

; 1908 : 
; 1909 : 	if ( direct_play_use_guaranteed_packets )

  00078	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_use_guaranteed_packets@@3HA, 0 ; direct_play_use_guaranteed_packets
  0007f	74 0f		 je	 SHORT $LN2@internal_d

; 1910 : 	{
; 1911 : 
; 1912 : 		sessionDesc.dwFlags |= DPSESSION_DIRECTPLAYPROTOCOL;

  00081	a1 04 00 00 00	 mov	 eax, DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+4
  00086	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0008b	a3 04 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A+4, eax
$LN2@internal_d:

; 1913 : 	}
; 1914 : 
; 1915 : 	ret = IDirectPlayX_Open ( direct_playx, &sessionDesc, DPOPEN_RETURNSTATUS );

  00090	68 80 00 00 00	 push	 128			; 00000080H
  00095	68 00 00 00 00	 push	 OFFSET ?sessionDesc@?1??internal_direct_play_answer_modem_status@@YGHPAX@Z@4UDPSESSIONDESC2@@A
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0009f	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000a7	52		 push	 edx
  000a8	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  000ab	ff d0		 call	 eax
  000ad	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1916 : 
; 1917 : 	return ( ret );

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]

; 1918 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?internal_direct_play_answer_modem_status@@YGHPAX@Z ENDP ; internal_direct_play_answer_modem_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?internal_direct_play_answer_modem@@YGHPAX@Z
_TEXT	SEGMENT
_user_data$ = -8					; size = 4
_ret$ = -4						; size = 4
_data$ = 8						; size = 4
?internal_direct_play_answer_modem@@YGHPAX@Z PROC	; internal_direct_play_answer_modem, COMDAT

; 1795 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1796 : 
; 1797 : 	static DPSESSIONDESC2
; 1798 : 		sessionDesc;
; 1799 : 
; 1800 : 	HRESULT
; 1801 : 		ret;
; 1802 : 
; 1803 : 	int
; 1804 : 		*user_data;
; 1805 : 
; 1806 : 	user_data = ( int * ) data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _user_data$[ebp], eax

; 1807 : 
; 1808 : 	create_direct_play_interface ();

  0000f	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 1809 : 
; 1810 : 	ret = IDirectPlayX_InitializeConnection ( direct_playx, connection_data.service_provider.connection, 0 );

  00014	6a 00		 push	 0
  00016	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  0001b	50		 push	 eax
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00029	50		 push	 eax
  0002a	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00030	ff d1		 call	 ecx
  00032	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1811 : 
; 1812 : 	if ( ret != 0 )

  00035	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00039	74 1e		 je	 SHORT $LN2@internal_d

; 1813 : 	{
; 1814 : 
; 1815 : 		debug_log ( "DIRECTP: Unable to initialize connection for modem answering: %s", get_dplay_error_message ( ret ) );

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@NAKCMPKK@DIRECTP?3?5Unable?5to?5initialize?5c@
  0004a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0004f	83 c4 08	 add	 esp, 8

; 1816 : 
; 1817 : 		return ( FALSE );

  00052	33 c0		 xor	 eax, eax
  00054	e9 01 01 00 00	 jmp	 $LN1@internal_d
$LN2@internal_d:

; 1818 : 	}
; 1819 : 
; 1820 : 	if ( direct_playx )

  00059	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00060	0f 84 f2 00 00
	00		 je	 $LN3@internal_d

; 1821 : 	{
; 1822 : 
; 1823 : 		//
; 1824 : 		// To answer the phone - we need to open a session ( stupid, just stupid! )
; 1825 : 		//
; 1826 : 
; 1827 : 		memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  00066	6a 50		 push	 80			; 00000050H
  00068	6a 00		 push	 0
  0006a	68 00 00 00 00	 push	 OFFSET ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A
  0006f	e8 00 00 00 00	 call	 _memset
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1828 : 	
; 1829 : 		sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  00077	c7 05 00 00 00
	00 50 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A, 80 ; 00000050H

; 1830 : 		sessionDesc.dwFlags =  DPSESSION_KEEPALIVE;

  00081	c7 05 04 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+4, 64 ; 00000040H

; 1831 : 		sessionDesc.dwMaxPlayers = 2;

  0008b	c7 05 28 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+40, 2

; 1832 : 		sessionDesc.guidApplication = TEST_GUID;

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  0009a	a3 18 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+24, eax
  0009f	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  000a5	89 0d 1c 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+28, ecx
  000ab	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  000b1	89 15 20 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+32, edx
  000b7	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  000bc	a3 24 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+36, eax

; 1833 : 		sessionDesc.lpszSessionName = ( LPWSTR ) "Modem Session";

  000c1	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+48, OFFSET ??_C@_0O@JCIDGODN@Modem?5Session@

; 1834 : 		sessionDesc.dwReserved1 = 0;

  000cb	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+56, 0

; 1835 : 		sessionDesc.dwReserved2 = 0;

  000d5	c7 05 3c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+60, 0

; 1836 : 		sessionDesc.dwUser1 = *user_data;

  000df	8b 45 f8	 mov	 eax, DWORD PTR _user_data$[ebp]
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	89 0d 40 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+64, ecx

; 1837 : 		connection_data.this_session.session = &sessionDesc;

  000ea	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44, OFFSET ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A

; 1838 : 	
; 1839 : 		if ( direct_play_use_guaranteed_packets )

  000f4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_use_guaranteed_packets@@3HA, 0 ; direct_play_use_guaranteed_packets
  000fb	74 0f		 je	 SHORT $LN5@internal_d

; 1840 : 		{
; 1841 : 
; 1842 : 			sessionDesc.dwFlags |= DPSESSION_DIRECTPLAYPROTOCOL;

  000fd	a1 04 00 00 00	 mov	 eax, DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+4
  00102	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00107	a3 04 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A+4, eax
$LN5@internal_d:

; 1843 : 		}
; 1844 : 
; 1845 : 		ret = IDirectPlayX_Open ( direct_playx, &sessionDesc, DPOPEN_CREATE | DPOPEN_RETURNSTATUS );

  0010c	68 82 00 00 00	 push	 130			; 00000082H
  00111	68 00 00 00 00	 push	 OFFSET ?sessionDesc@?1??internal_direct_play_answer_modem@@YGHPAX@Z@4UDPSESSIONDESC2@@A
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0011b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00123	52		 push	 edx
  00124	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  00127	ff d0		 call	 eax
  00129	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1846 : 	
; 1847 : 		if ( ret != DP_OK )

  0012c	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00130	74 1d		 je	 SHORT $LN6@internal_d

; 1848 : 		{
; 1849 : 	
; 1850 : 			debug_log ( "DirectPlay::Open error: %s", get_dplay_error_message ( ret ) );

  00132	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0013b	50		 push	 eax
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EHPPAAKN@DirectPlay?3?3Open?5error?3?5?$CFs@
  00141	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00146	83 c4 08	 add	 esp, 8

; 1851 : 	
; 1852 : 			return ( FALSE );

  00149	33 c0		 xor	 eax, eax
  0014b	eb 0d		 jmp	 SHORT $LN1@internal_d

; 1853 : 		}
; 1854 : 		else

  0014d	eb 07		 jmp	 SHORT $LN7@internal_d
$LN6@internal_d:

; 1855 : 		{
; 1856 : 
; 1857 : 			return ( TRUE );

  0014f	b8 01 00 00 00	 mov	 eax, 1
  00154	eb 04		 jmp	 SHORT $LN1@internal_d
$LN7@internal_d:

; 1858 : 		}
; 1859 : 	}
; 1860 : 	else

  00156	eb 02		 jmp	 SHORT $LN1@internal_d
$LN3@internal_d:

; 1861 : 	{
; 1862 : 
; 1863 : 		return ( FALSE );

  00158	33 c0		 xor	 eax, eax
$LN1@internal_d:

; 1864 : 	}
; 1865 : }

  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	5b		 pop	 ebx
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c2 04 00	 ret	 4
?internal_direct_play_answer_modem@@YGHPAX@Z ENDP	; internal_direct_play_answer_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?internal_direct_play_dial_modem_status@@YGHPAX@Z
_TEXT	SEGMENT
_ret$ = -84						; size = 4
_sessionDesc$ = -80					; size = 80
_data$ = 8						; size = 4
?internal_direct_play_dial_modem_status@@YGHPAX@Z PROC	; internal_direct_play_dial_modem_status, COMDAT

; 1642 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1643 : 
; 1644 : 	DPSESSIONDESC2
; 1645 : 		sessionDesc;
; 1646 : 
; 1647 : 	HRESULT
; 1648 : 		ret;
; 1649 : 
; 1650 : 	//
; 1651 : 	// Now dial the phone.
; 1652 : 	//
; 1653 : 
; 1654 : 	memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  0000c	6a 50		 push	 80			; 00000050H
  0000e	6a 00		 push	 0
  00010	8d 45 b0	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1655 : 
; 1656 : 	sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  0001c	c7 45 b0 50 00
	00 00		 mov	 DWORD PTR _sessionDesc$[ebp], 80 ; 00000050H

; 1657 : 	sessionDesc.guidApplication = TEST_GUID;

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  00028	89 45 c8	 mov	 DWORD PTR _sessionDesc$[ebp+24], eax
  0002b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  00031	89 4d cc	 mov	 DWORD PTR _sessionDesc$[ebp+28], ecx
  00034	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  0003a	89 55 d0	 mov	 DWORD PTR _sessionDesc$[ebp+32], edx
  0003d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  00042	89 45 d4	 mov	 DWORD PTR _sessionDesc$[ebp+36], eax

; 1658 : 
; 1659 : 	ret = IDirectPlayX_EnumSessions ( direct_playx, &sessionDesc, 0, ( LPDPENUMSESSIONSCALLBACK2 ) direct_play_enumerate_sessions_callback,

  00045	68 91 00 00 00	 push	 145			; 00000091H
  0004a	6a 00		 push	 0
  0004c	68 00 00 00 00	 push	 OFFSET ?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z ; direct_play_enumerate_sessions_callback
  00051	6a 00		 push	 0
  00053	8d 45 b0	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00056	50		 push	 eax
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00064	50		 push	 eax
  00065	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  00068	ff d1		 call	 ecx
  0006a	89 45 ac	 mov	 DWORD PTR _ret$[ebp], eax

; 1660 : 													NULL,
; 1661 : 													DPENUMSESSIONS_AVAILABLE |
; 1662 : 													DPENUMSESSIONS_ASYNC |
; 1663 : 													DPENUMSESSIONS_RETURNSTATUS );
; 1664 : 
; 1665 : 	return ( ret );

  0006d	8b 45 ac	 mov	 eax, DWORD PTR _ret$[ebp]

; 1666 : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
?internal_direct_play_dial_modem_status@@YGHPAX@Z ENDP	; internal_direct_play_dial_modem_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?internal_direct_play_dial_modem@@YGHPAX@Z
_TEXT	SEGMENT
_sessionDesc$ = -84					; size = 80
_ret$ = -4						; size = 4
_data$ = 8						; size = 4
?internal_direct_play_dial_modem@@YGHPAX@Z PROC		; internal_direct_play_dial_modem, COMDAT

; 1539 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1540 : 
; 1541 : 	HRESULT
; 1542 : 		ret;
; 1543 : 
; 1544 : 	DPSESSIONDESC2
; 1545 : 		sessionDesc;
; 1546 : 
; 1547 : 	//
; 1548 : 	// Replace the directplay interface
; 1549 : 	//
; 1550 : 
; 1551 : 	create_direct_play_interface ();

  0000c	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 1552 : 
; 1553 : 	ret = IDirectPlayX_InitializeConnection ( direct_playx, connection_data.service_provider.connection, 0 );

  00011	6a 00		 push	 0
  00013	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  00018	50		 push	 eax
  00019	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00026	50		 push	 eax
  00027	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  0002d	ff d1		 call	 ecx
  0002f	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1554 : 
; 1555 : 	if ( ret != 0 )

  00032	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00036	74 14		 je	 SHORT $LN2@internal_d

; 1556 : 	{
; 1557 : 
; 1558 : 		debug_log ( "DIRECTP: Unable to initialize connection to dial modem" );

  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@MEFIGCJH@DIRECTP?3?5Unable?5to?5initialize?5c@
  0003d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00042	83 c4 04	 add	 esp, 4

; 1559 : 
; 1560 : 		return ( FALSE );

  00045	33 c0		 xor	 eax, eax
  00047	e9 9b 00 00 00	 jmp	 $LN1@internal_d
$LN2@internal_d:

; 1561 : 	}
; 1562 : 
; 1563 : 	//
; 1564 : 	// Now dial the phone.
; 1565 : 	//
; 1566 : 
; 1567 : 	memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  0004c	6a 50		 push	 80			; 00000050H
  0004e	6a 00		 push	 0
  00050	8d 45 ac	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 _memset
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1568 : 
; 1569 : 	sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  0005c	c7 45 ac 50 00
	00 00		 mov	 DWORD PTR _sessionDesc$[ebp], 80 ; 00000050H

; 1570 : 
; 1571 : 	sessionDesc.guidApplication = TEST_GUID;

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  00068	89 45 c4	 mov	 DWORD PTR _sessionDesc$[ebp+24], eax
  0006b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  00071	89 4d c8	 mov	 DWORD PTR _sessionDesc$[ebp+28], ecx
  00074	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  0007a	89 55 cc	 mov	 DWORD PTR _sessionDesc$[ebp+32], edx
  0007d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  00082	89 45 d0	 mov	 DWORD PTR _sessionDesc$[ebp+36], eax

; 1572 : 
; 1573 : 	ret = IDirectPlayX_EnumSessions ( direct_playx, &sessionDesc, 0,

  00085	68 91 00 00 00	 push	 145			; 00000091H
  0008a	6a 00		 push	 0
  0008c	68 00 00 00 00	 push	 OFFSET ?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z ; direct_play_enumerate_sessions_callback
  00091	6a 00		 push	 0
  00093	8d 45 ac	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00096	50		 push	 eax
  00097	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0009d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000a4	50		 push	 eax
  000a5	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  000a8	ff d1		 call	 ecx
  000aa	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1574 : 													( LPDPENUMSESSIONSCALLBACK2 ) direct_play_enumerate_sessions_callback,
; 1575 : 													NULL,
; 1576 : 													DPENUMSESSIONS_AVAILABLE |
; 1577 : 													DPENUMSESSIONS_ASYNC |
; 1578 : 													DPENUMSESSIONS_RETURNSTATUS );
; 1579 : 
; 1580 : 	if ( ret != DP_OK )

  000ad	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  000b1	74 2f		 je	 SHORT $LN3@internal_d

; 1581 : 	{
; 1582 : 
; 1583 : 		if ( ret == DPERR_CONNECTING )

  000b3	81 7d fc 5e 01
	77 88		 cmp	 DWORD PTR _ret$[ebp], -2005466786 ; 8877015eH
  000ba	75 09		 jne	 SHORT $LN5@internal_d

; 1584 : 		{
; 1585 : 
; 1586 : 			return ( TRUE );

  000bc	b8 01 00 00 00	 mov	 eax, 1
  000c1	eb 24		 jmp	 SHORT $LN1@internal_d

; 1587 : 		}
; 1588 : 		else

  000c3	eb 1b		 jmp	 SHORT $LN6@internal_d
$LN5@internal_d:

; 1589 : 		{
; 1590 : 	
; 1591 : 			debug_log ( "DIRECTP: DirectPlay::EnumSessions : %s", get_dplay_error_message ( ret ) );

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000ce	50		 push	 eax
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GJNILHHL@DIRECTP?3?5DirectPlay?3?3EnumSessio@
  000d4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d9	83 c4 08	 add	 esp, 8

; 1592 : 	
; 1593 : 			return ( FALSE );

  000dc	33 c0		 xor	 eax, eax
  000de	eb 07		 jmp	 SHORT $LN1@internal_d
$LN6@internal_d:

; 1594 : 		}
; 1595 : 	}
; 1596 : 	else

  000e0	eb 05		 jmp	 SHORT $LN1@internal_d
$LN3@internal_d:

; 1597 : 	{
; 1598 : 	
; 1599 : 		return ( TRUE );

  000e2	b8 01 00 00 00	 mov	 eax, 1
$LN1@internal_d:

; 1600 : 	}
; 1601 : }

  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi
  000e9	5b		 pop	 ebx
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c2 04 00	 ret	 4
?internal_direct_play_dial_modem@@YGHPAX@Z ENDP		; internal_direct_play_dial_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?internal_direct_play_destroy_modem@@YGHPAX@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?internal_direct_play_destroy_modem@@YGHPAX@Z PROC	; internal_direct_play_destroy_modem, COMDAT

; 1356 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1357 : 
; 1358 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 1d		 je	 SHORT $LN2@internal_d

; 1359 : 	{
; 1360 : 	
; 1361 : 		IDirectPlayX_Release ( direct_playx );

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001f	52		 push	 edx
  00020	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00023	ff d0		 call	 eax

; 1362 : 	
; 1363 : 		direct_playx = NULL;

  00025	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
$LN2@internal_d:

; 1364 : 	}
; 1365 : 	return(0);

  0002f	33 c0		 xor	 eax, eax

; 1366 : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?internal_direct_play_destroy_modem@@YGHPAX@Z ENDP	; internal_direct_play_destroy_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_lobbied_join@@YGHXZ
_TEXT	SEGMENT
?direct_play_get_lobbied_join@@YGHXZ PROC		; direct_play_get_lobbied_join, COMDAT

; 422  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 423  : 
; 424  : 	ASSERT ( direct_play_lobby3 );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A, 0
  00010	75 18		 jne	 SHORT $LN2@direct_pla
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??direct_play_get_lobbied_join@@YGHXZ@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GMJOCJCH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DNLEEGKD@direct_play_lobby3@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@direct_pla:

; 425  : 
; 426  : 	if ( direct_play_lobby3_connection_data->dwFlags & DPLCONNECTION_CREATESESSION )

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	83 e1 02	 and	 ecx, 2
  00035	74 06		 je	 SHORT $LN3@direct_pla

; 427  : 	{
; 428  : 
; 429  : 		return ( FALSE );

  00037	33 c0		 xor	 eax, eax
  00039	eb 07		 jmp	 SHORT $LN1@direct_pla

; 430  : 	}
; 431  : 	else

  0003b	eb 05		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 432  : 	{
; 433  : 
; 434  : 		return ( TRUE );

  0003d	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 435  : 	}
; 436  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?direct_play_get_lobbied_join@@YGHXZ ENDP		; direct_play_get_lobbied_join
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_sort_session_list@@YGXXZ
_TEXT	SEGMENT
_current_session$ = -12					; size = 4
_next_session$ = -8					; size = 4
_prev_session$ = -4					; size = 4
?direct_play_sort_session_list@@YGXXZ PROC		; direct_play_sort_session_list, COMDAT

; 3606 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3607 : 
; 3608 : 	session_table_type
; 3609 : 		*prev_session,
; 3610 : 		*next_session,
; 3611 : 		*current_session;
; 3612 : 
; 3613 : 	current_session = session_table;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  0000e	89 45 f4	 mov	 DWORD PTR _current_session$[ebp], eax

; 3614 : 
; 3615 : 	prev_session = NULL;

  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _prev_session$[ebp], 0
$LN2@direct_pla:

; 3616 : 
; 3617 : 	while (current_session)

  00018	83 7d f4 00	 cmp	 DWORD PTR _current_session$[ebp], 0
  0001c	0f 84 82 00 00
	00		 je	 $LN1@direct_pla

; 3618 : 	{
; 3619 : 
; 3620 : 		next_session = current_session->next_session;

  00022	8b 45 f4	 mov	 eax, DWORD PTR _current_session$[ebp]
  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	89 4d f8	 mov	 DWORD PTR _next_session$[ebp], ecx

; 3621 : 
; 3622 : 		if (!next_session)

  0002b	83 7d f8 00	 cmp	 DWORD PTR _next_session$[ebp], 0
  0002f	75 02		 jne	 SHORT $LN4@direct_pla

; 3623 : 		{
; 3624 : 
; 3625 : 			return;

  00031	eb 71		 jmp	 SHORT $LN1@direct_pla
$LN4@direct_pla:

; 3626 : 		}
; 3627 : 
; 3628 : 		//
; 3629 : 		// compare names and swap if required
; 3630 : 		//
; 3631 : 
; 3632 : 		if (stricmp (current_session->session->lpszSessionNameA, next_session->session->lpszSessionNameA) < 0)

  00033	8b 45 f8	 mov	 eax, DWORD PTR _next_session$[ebp]
  00036	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00039	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0003c	52		 push	 edx
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _current_session$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00046	52		 push	 edx
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  0004d	83 c4 08	 add	 esp, 8
  00050	85 c0		 test	 eax, eax
  00052	7d 3f		 jge	 SHORT $LN5@direct_pla

; 3633 : 		{
; 3634 : 
; 3635 : 			if (prev_session)

  00054	83 7d fc 00	 cmp	 DWORD PTR _prev_session$[ebp], 0
  00058	74 0b		 je	 SHORT $LN6@direct_pla

; 3636 : 			{
; 3637 : 
; 3638 : 				prev_session->next_session = next_session;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _prev_session$[ebp]
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _next_session$[ebp]
  00060	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 3639 : 			}
; 3640 : 			else

  00063	eb 08		 jmp	 SHORT $LN7@direct_pla
$LN6@direct_pla:

; 3641 : 			{
; 3642 : 
; 3643 : 				session_table = next_session;

  00065	8b 45 f8	 mov	 eax, DWORD PTR _next_session$[ebp]
  00068	a3 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, eax
$LN7@direct_pla:

; 3644 : 			}
; 3645 : 
; 3646 : 			current_session->next_session = next_session->next_session;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR _current_session$[ebp]
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _next_session$[ebp]
  00073	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00076	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 3647 : 
; 3648 : 			next_session->next_session = current_session;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _next_session$[ebp]
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR _current_session$[ebp]
  0007f	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 3649 : 
; 3650 : 			current_session = session_table;

  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  00087	89 45 f4	 mov	 DWORD PTR _current_session$[ebp], eax

; 3651 : 
; 3652 : 			prev_session = NULL;

  0008a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _prev_session$[ebp], 0

; 3653 : 
; 3654 : 			continue;

  00091	eb 85		 jmp	 SHORT $LN2@direct_pla
$LN5@direct_pla:

; 3655 : 		}
; 3656 : 
; 3657 : 		prev_session = current_session;

  00093	8b 45 f4	 mov	 eax, DWORD PTR _current_session$[ebp]
  00096	89 45 fc	 mov	 DWORD PTR _prev_session$[ebp], eax

; 3658 : 
; 3659 : 		current_session = next_session;

  00099	8b 45 f8	 mov	 eax, DWORD PTR _next_session$[ebp]
  0009c	89 45 f4	 mov	 DWORD PTR _current_session$[ebp], eax

; 3660 : 	}

  0009f	e9 74 ff ff ff	 jmp	 $LN2@direct_pla
$LN1@direct_pla:

; 3661 : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
?direct_play_sort_session_list@@YGXXZ ENDP		; direct_play_sort_session_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_system_message@@YGXPAUDPMSG_GENERIC@@@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?direct_play_system_message@@YGXPAUDPMSG_GENERIC@@@Z PROC ; direct_play_system_message, COMDAT

; 3358 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3359 : 
; 3360 : 	#if DIRECT_PLAY_DEBUG
; 3361 : 
; 3362 : 	char
; 3363 : 		buffer [200];
; 3364 : 
; 3365 : //	debug_log ( "Got Direct Play System Message" );
; 3366 : /*
; 3367 : 	switch ( type->dwType )
; 3368 : 	{
; 3369 : 
; 3370 : 		case DPSYS_CREATEPLAYERORGROUP:
; 3371 : 		{
; 3372 : 
; 3373 : 			debug_log ( "DP: DPSYS_CREATEPLAYERORGROUP" );
; 3374 : 			break;
; 3375 : 		}
; 3376 : 
; 3377 : 		case DPSYS_DESTROYPLAYERORGROUP:
; 3378 : 		{
; 3379 : 
; 3380 : 			debug_log ( "DP: DPSYS_DESTROYPLAYERORGROUP" );
; 3381 : 			break;
; 3382 : 		}
; 3383 : 
; 3384 : 		case DPSYS_ADDPLAYERTOGROUP:
; 3385 : 		{
; 3386 : 
; 3387 : 			debug_log ( "DP: DPSYS_ADDPLAYERTOGROUP" );
; 3388 : 			break;
; 3389 : 		}
; 3390 : 
; 3391 : 		case DPSYS_DELETEPLAYERFROMGROUP:
; 3392 : 		{
; 3393 : 
; 3394 : 			debug_log ( "DP: DPSYS_DELETEPLAYERFROMGROUP" );
; 3395 : 			break;
; 3396 : 		}
; 3397 : 
; 3398 : 		case DPSYS_SESSIONLOST:
; 3399 : 		{
; 3400 : 
; 3401 : 			debug_log ( "DP: DPSYS_SESSIONLOST" );
; 3402 : 			break;
; 3403 : 		}
; 3404 : 
; 3405 : 		case DPSYS_HOST:
; 3406 : 		{
; 3407 : 
; 3408 : 			debug_log ( "DP: DPSYS_HOST" );
; 3409 : 			break;
; 3410 : 		}
; 3411 : 
; 3412 : 		case DPSYS_SETPLAYERORGROUPDATA:
; 3413 : 		{
; 3414 : 
; 3415 : 			debug_log ( "DP: DPSYS_SETPLAYERORGROUPDATA" );
; 3416 : 			break;
; 3417 : 		}
; 3418 : 
; 3419 : 		case DPSYS_SETPLAYERORGROUPNAME:
; 3420 : 		{
; 3421 : 
; 3422 : 			debug_log ( "DP: DPSYS_SETPLAYERORGROUPNAME" );
; 3423 : 			break;
; 3424 : 		}
; 3425 : 
; 3426 : 		case DPSYS_SETSESSIONDESC:
; 3427 : 		{
; 3428 : 
; 3429 : 			debug_log ( "DP: DPSYS_SETSESSIONDESC" );
; 3430 : 			break;
; 3431 : 		}
; 3432 : 
; 3433 : 		case DPSYS_ADDGROUPTOGROUP:
; 3434 : 		{
; 3435 : 
; 3436 : 			debug_log ( "DP: DPSYS_ADDGROUPTOGROUP" );
; 3437 : 			break;
; 3438 : 		}
; 3439 : 
; 3440 : 		case DPSYS_DELETEGROUPFROMGROUP:
; 3441 : 		{
; 3442 : 
; 3443 : 			debug_log ( "DP: DPSYS_DELETEGROUPFROMGROUP" );
; 3444 : 			break;
; 3445 : 		}
; 3446 : 
; 3447 : 		case DPSYS_SECUREMESSAGE:
; 3448 : 		{
; 3449 : 
; 3450 : 			debug_log ( "DP: DPSYS_SECUREMESSAGE" );
; 3451 : 			break;
; 3452 : 		}
; 3453 : 
; 3454 : 		case DPSYS_STARTSESSION:
; 3455 : 		{
; 3456 : 
; 3457 : 			debug_log ( "DP: DPSYS_STARTSESSION" );
; 3458 : 			break;
; 3459 : 		}
; 3460 : 
; 3461 : 		case DPSYS_CHAT:
; 3462 : 		{
; 3463 : 
; 3464 : 			debug_log ( "DP: DPSYS_CHAT" );
; 3465 : 			break;
; 3466 : 		}
; 3467 : 
; 3468 : 		case DPSYS_SETGROUPOWNER:
; 3469 : 		{
; 3470 : 
; 3471 : 			debug_log ( "DP: DPSYS_SETGROUPOWNER" );
; 3472 : 			break;
; 3473 : 		}
; 3474 : 
; 3475 : 		case DPSYS_SENDCOMPLETE:
; 3476 : 		{
; 3477 : 
; 3478 : 			debug_log ( "DP: DPSYS_SENDCOMPLETE" );
; 3479 : 			break;
; 3480 : 		}
; 3481 : 	} */
; 3482 : 
; 3483 : 
; 3484 : 	switch (type->dwType)
; 3485 : 	{
; 3486 : 
; 3487 : 		case DPSYS_ADDPLAYERTOGROUP:
; 3488 : 		{
; 3489 : 
; 3490 : 			debug_log ("DIRECTP: SYSTEM MESSAGE : Add player %d to group %d",
; 3491 : 							((LPDPMSG_ADDPLAYERTOGROUP) type)->dpIdPlayer,
; 3492 : 							((LPDPMSG_ADDPLAYERTOGROUP) type)->dpIdGroup);
; 3493 : 
; 3494 : 			break;
; 3495 : 		}
; 3496 : 		case DPSYS_CREATEPLAYERORGROUP:
; 3497 : 		{
; 3498 : 
; 3499 : 			if (((LPDPMSG_CREATEPLAYERORGROUP) type)->dwPlayerType == DPPLAYERTYPE_PLAYER)
; 3500 : 			{
; 3501 : 
; 3502 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Create player %d",
; 3503 : 							((LPDPMSG_CREATEPLAYERORGROUP) type)->dpId);
; 3504 : 			}
; 3505 : 			else
; 3506 : 			{
; 3507 : 
; 3508 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Create group %d",
; 3509 : 							((LPDPMSG_CREATEPLAYERORGROUP) type)->dpId);
; 3510 : 			}
; 3511 : 
; 3512 : 			break;
; 3513 : 		}
; 3514 : 		case DPSYS_DELETEPLAYERFROMGROUP:
; 3515 : 		{
; 3516 : 
; 3517 : 			debug_log ("DIRECTP: SYSTEM MESSAGE : Delete player %d from group %d",
; 3518 : 							((LPDPMSG_DELETEPLAYERFROMGROUP) type)->dpIdPlayer,
; 3519 : 							((LPDPMSG_DELETEPLAYERFROMGROUP) type)->dpIdGroup);
; 3520 : 
; 3521 : 			break;
; 3522 : 		}
; 3523 : 		case DPSYS_DESTROYPLAYERORGROUP:
; 3524 : 		{
; 3525 : 
; 3526 : 			if (((LPDPMSG_DESTROYPLAYERORGROUP) type)->dwPlayerType == DPPLAYERTYPE_PLAYER)
; 3527 : 			{
; 3528 : 
; 3529 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Destroy player %d",
; 3530 : 							((LPDPMSG_DESTROYPLAYERORGROUP) type)->dpId);
; 3531 : 			}
; 3532 : 			else
; 3533 : 			{
; 3534 : 
; 3535 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Destroy group %d",
; 3536 : 							((LPDPMSG_DESTROYPLAYERORGROUP) type)->dpId);
; 3537 : 			}
; 3538 : 
; 3539 : 			break;
; 3540 : 		}
; 3541 : 		case DPSYS_HOST:
; 3542 : 		{
; 3543 : 
; 3544 : 			debug_log ("DIRECTP: SYSTEM MESSAGE : No host");
; 3545 : 
; 3546 : 			break;
; 3547 : 		}
; 3548 : 		case DPSYS_SESSIONLOST:
; 3549 : 		{
; 3550 : 
; 3551 : 			debug_log ("DIRECTP: SYSTEM MESSAGE : session lost");
; 3552 : 
; 3553 : 			break;
; 3554 : 		}
; 3555 : 		case DPSYS_SETPLAYERORGROUPDATA:
; 3556 : 		{
; 3557 : 
; 3558 : 			if (((LPDPMSG_SETPLAYERORGROUPDATA) type)->dwPlayerType == DPPLAYERTYPE_PLAYER)
; 3559 : 			{
; 3560 : 
; 3561 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Set player data");
; 3562 : 			}
; 3563 : 			else
; 3564 : 			{
; 3565 : 
; 3566 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Set group data");
; 3567 : 			}
; 3568 : 
; 3569 : 			break;
; 3570 : 		}
; 3571 : 		case DPSYS_SETPLAYERORGROUPNAME:
; 3572 : 		{
; 3573 : 
; 3574 : 			if (((LPDPMSG_SETPLAYERORGROUPNAME) type)->dwPlayerType == DPPLAYERTYPE_PLAYER)
; 3575 : 			{
; 3576 : 
; 3577 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Set player name");
; 3578 : 			}
; 3579 : 			else
; 3580 : 			{
; 3581 : 
; 3582 : 				debug_log ("DIRECTP: SYSTEM MESSAGE : Set group name");
; 3583 : 			}
; 3584 : 
; 3585 : 			break;
; 3586 : 		}
; 3587 : 		default:
; 3588 : 		{
; 3589 : 
; 3590 : 			sprintf (buffer, "DIRECTP: SYSTEM MESSAGE : unknown %d", type);
; 3591 : 
; 3592 : 			debug_log (buffer);
; 3593 : 
; 3594 : 			break;
; 3595 : 		}
; 3596 : 	}
; 3597 : 
; 3598 : 	#endif
; 3599 : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?direct_play_system_message@@YGXPAUDPMSG_GENERIC@@@Z ENDP ; direct_play_system_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?get_dplay_error_message@@YGPBDJ@Z
_TEXT	SEGMENT
_count$ = -4						; size = 4
_error$ = 8						; size = 4
?get_dplay_error_message@@YGPBDJ@Z PROC			; get_dplay_error_message, COMDAT

; 4048 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4049 : 
; 4050 : 	int
; 4051 : 		count;
; 4052 : 
; 4053 : 	count = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN2@get_dplay_:

; 4054 : 
; 4055 : 	while ( ( dplay_error_table[count].error != 0 ) && ( dplay_error_table[count].error != error ) )

  00010	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00013	83 3c c5 00 00
	00 00 00	 cmp	 DWORD PTR ?dplay_error_table@@3PAUDPLAY_ERROR_MESSAGE@@A[eax*8], 0
  0001b	74 1a		 je	 SHORT $LN3@get_dplay_
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00020	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?dplay_error_table@@3PAUDPLAY_ERROR_MESSAGE@@A[eax*8]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _error$[ebp]
  0002a	74 0b		 je	 SHORT $LN3@get_dplay_

; 4056 : 	{
; 4057 : 
; 4058 : 		count ++;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0002f	83 c0 01	 add	 eax, 1
  00032	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 4059 : 	}

  00035	eb d9		 jmp	 SHORT $LN2@get_dplay_
$LN3@get_dplay_:

; 4060 : 
; 4061 : 	if ( dplay_error_table [count].error != error )

  00037	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0003a	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?dplay_error_table@@3PAUDPLAY_ERROR_MESSAGE@@A[eax*8]
  00041	3b 4d 08	 cmp	 ecx, DWORD PTR _error$[ebp]
  00044	74 09		 je	 SHORT $LN4@get_dplay_

; 4062 : 	{
; 4063 : 
; 4064 : 		return ( no_dplay_error_message );

  00046	b8 00 00 00 00	 mov	 eax, OFFSET ?no_dplay_error_message@@3QBDB
  0004b	eb 0c		 jmp	 SHORT $LN1@get_dplay_

; 4065 : 	}
; 4066 : 	else

  0004d	eb 0a		 jmp	 SHORT $LN1@get_dplay_
$LN4@get_dplay_:

; 4067 : 	{
; 4068 : 
; 4069 : 		return (dplay_error_table [count].error_string);

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00052	8b 04 c5 04 00
	00 00		 mov	 eax, DWORD PTR ?dplay_error_table@@3PAUDPLAY_ERROR_MESSAGE@@A[eax*8+4]
$LN1@get_dplay_:

; 4070 : 	}
; 4071 : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?get_dplay_error_message@@YGPBDJ@Z ENDP			; get_dplay_error_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enumerate_groups_callback@@YGHKKPBUDPNAME@@KPAX@Z
_TEXT	SEGMENT
_new_group$ = -4					; size = 4
_dpId$ = 8						; size = 4
_dwPlayerType$ = 12					; size = 4
_lpName$ = 16						; size = 4
_dwFlagsm$ = 20						; size = 4
_lpContext$ = 24					; size = 4
?direct_play_enumerate_groups_callback@@YGHKKPBUDPNAME@@KPAX@Z PROC ; direct_play_enumerate_groups_callback, COMDAT

; 2370 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2371 : 
; 2372 : 	group_table_type
; 2373 : 		*new_group;
; 2374 : 
; 2375 : 	if (dwPlayerType == DPPLAYERTYPE_GROUP)

  00009	83 7d 0c 00	 cmp	 DWORD PTR _dwPlayerType$[ebp], 0
  0000d	75 73		 jne	 SHORT $LN2@direct_pla

; 2376 : 	{
; 2377 : 
; 2378 : 		group_counter ++;

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?group_counter@@3HA
  00014	83 c0 01	 add	 eax, 1
  00017	a3 00 00 00 00	 mov	 DWORD PTR ?group_counter@@3HA, eax

; 2379 : 
; 2380 : 		new_group = (group_table_type *) safe_malloc (sizeof (group_table_type));

  0001c	6a 0c		 push	 12			; 0000000cH
  0001e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00023	89 45 fc	 mov	 DWORD PTR _new_group$[ebp], eax

; 2381 : 
; 2382 : 		new_group->next_group = group_table;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _new_group$[ebp]
  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?group_table@@3PAUGROUP_TABLE_TYPE@@A
  0002f	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2383 : 
; 2384 : 		group_table = new_group;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _new_group$[ebp]
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?group_table@@3PAUGROUP_TABLE_TYPE@@A, eax

; 2385 : 
; 2386 : 		new_group->group = dpId;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _new_group$[ebp]
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _dpId$[ebp]
  00040	89 08		 mov	 DWORD PTR [eax], ecx

; 2387 : 
; 2388 : 		new_group->group_name = (char *) safe_malloc (strlen ( (char *) lpName->lpszShortName) + 1);

  00042	8b 45 10	 mov	 eax, DWORD PTR _lpName$[ebp]
  00045	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00048	51		 push	 ecx
  00049	e8 00 00 00 00	 call	 _strlen
  0004e	83 c4 04	 add	 esp, 4
  00051	83 c0 01	 add	 eax, 1
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _new_group$[ebp]
  0005d	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 2389 : 
; 2390 : 		sprintf (new_group->group_name, "%s", lpName->lpszShortName);

  00060	8b 45 10	 mov	 eax, DWORD PTR _lpName$[ebp]
  00063	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00066	51		 push	 ecx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _new_group$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 _sprintf
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2391 : 
; 2392 : 		#if DIRECT_PLAY_DEBUG
; 2393 : 
; 2394 : 		debug_log ("DIRECTP:      %s (id:%d)", lpName->lpszShortName, dpId);
; 2395 : 
; 2396 : 		#endif
; 2397 : 
; 2398 : 		return TRUE;

  0007b	b8 01 00 00 00	 mov	 eax, 1
  00080	eb 05		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2399 : 	}
; 2400 : 
; 2401 : 	return TRUE;

  00082	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 2402 : }

  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 14 00	 ret	 20			; 00000014H
?direct_play_enumerate_groups_callback@@YGHKKPBUDPNAME@@KPAX@Z ENDP ; direct_play_enumerate_groups_callback
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z
_TEXT	SEGMENT
_new_session$ = -4					; size = 4
_lpThisSD$ = 8						; size = 4
_lpdwTimeOut$ = 12					; size = 4
_dwFlags$ = 16						; size = 4
_lpContext$ = 20					; size = 4
?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z PROC ; direct_play_enumerate_sessions_callback, COMDAT

; 1925 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1926 : 
; 1927 : 	session_table_type
; 1928 : 		*new_session;
; 1929 : 
; 1930 : 	if ( dwFlags & DPESC_TIMEDOUT )

  00009	8b 45 10	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	74 07		 je	 SHORT $LN2@direct_pla

; 1931 : 	{
; 1932 : 
; 1933 : 		return ( FALSE );

  00011	33 c0		 xor	 eax, eax
  00013	e9 c8 00 00 00	 jmp	 $LN1@direct_pla
$LN2@direct_pla:

; 1934 : 	}
; 1935 : 
; 1936 : 	if (lpThisSD)

  00018	83 7d 08 00	 cmp	 DWORD PTR _lpThisSD$[ebp], 0
  0001c	0f 84 bc 00 00
	00		 je	 $LN3@direct_pla

; 1937 : 	{
; 1938 : 
; 1939 : 		new_session = (session_table_type *) safe_malloc (sizeof (session_table_type));

  00022	6a 0c		 push	 12			; 0000000cH
  00024	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00029	89 45 fc	 mov	 DWORD PTR _new_session$[ebp], eax

; 1940 : 
; 1941 : 		new_session->lobby_session = FALSE;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _new_session$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1942 : 
; 1943 : 		new_session->next_session = session_table;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _new_session$[ebp]
  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  0003e	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1944 : 
; 1945 : 		session_table = new_session;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _new_session$[ebp]
  00044	a3 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, eax

; 1946 : 
; 1947 : 		new_session->session = (LPDPSESSIONDESC2) safe_malloc (sizeof (DPSESSIONDESC2));

  00049	6a 50		 push	 80			; 00000050H
  0004b	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _new_session$[ebp]
  00053	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1948 : 
; 1949 : 		memcpy (new_session->session, lpThisSD, sizeof (DPSESSIONDESC2));

  00056	6a 50		 push	 80			; 00000050H
  00058	8b 45 08	 mov	 eax, DWORD PTR _lpThisSD$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _new_session$[ebp]
  0005f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 _memcpy
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1950 : 
; 1951 : 		new_session->session->lpszSessionNameA = (LPSTR) safe_malloc (strlen (lpThisSD->lpszSessionNameA) + 1);

  0006b	8b 45 08	 mov	 eax, DWORD PTR _lpThisSD$[ebp]
  0006e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 _strlen
  00077	83 c4 04	 add	 esp, 4
  0007a	83 c0 01	 add	 eax, 1
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00083	8b 55 fc	 mov	 edx, DWORD PTR _new_session$[ebp]
  00086	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00089	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 1952 : 
; 1953 : 		sprintf (new_session->session->lpszSessionNameA, lpThisSD->lpszSessionNameA);

  0008c	8b 45 08	 mov	 eax, DWORD PTR _lpThisSD$[ebp]
  0008f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00092	51		 push	 ecx
  00093	8b 55 fc	 mov	 edx, DWORD PTR _new_session$[ebp]
  00096	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00099	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 _sprintf
  000a2	83 c4 08	 add	 esp, 8

; 1954 : 
; 1955 : 		new_session->session->guidInstance = lpThisSD->guidInstance; // Jabberwock 031209

  000a5	8b 45 08	 mov	 eax, DWORD PTR _lpThisSD$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _new_session$[ebp]
  000ae	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000b1	83 c2 08	 add	 edx, 8
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 0a		 mov	 DWORD PTR [edx], ecx
  000b8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bb	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  000be	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  000c4	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000c7	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 1956 : 
; 1957 : 		session_counter ++;

  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_counter@@3HA
  000cf	83 c0 01	 add	 eax, 1
  000d2	a3 00 00 00 00	 mov	 DWORD PTR ?session_counter@@3HA, eax

; 1958 : 
; 1959 : 		#if DIRECT_PLAY_DEBUG
; 1960 : 
; 1961 : 		debug_log ("DIRECTP:      %s", new_session->session->lpszSessionNameA);
; 1962 : 
; 1963 : 		#endif
; 1964 : 
; 1965 : 		return TRUE;

  000d7	b8 01 00 00 00	 mov	 eax, 1
  000dc	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 1966 : 	}
; 1967 : 
; 1968 : 	return FALSE;

  000de	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 1969 : }

  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 10 00	 ret	 16			; 00000010H
?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z ENDP ; direct_play_enumerate_sessions_callback
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enumerate_connections@@YGHPAU_GUID@@PAXKPBUDPNAME@@K1@Z
_TEXT	SEGMENT
_new_service_provider$ = -4				; size = 4
_lpSPGuid$ = 8						; size = 4
_lpConnection$ = 12					; size = 4
_dwConnectionSize$ = 16					; size = 4
_lpName$ = 20						; size = 4
_flags$ = 24						; size = 4
_context$ = 28						; size = 4
?direct_play_enumerate_connections@@YGHPAU_GUID@@PAXKPBUDPNAME@@K1@Z PROC ; direct_play_enumerate_connections, COMDAT

; 865  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 866  : 
; 867  : 	service_provider_table_type
; 868  : 		*new_service_provider;
; 869  : 
; 870  : 	//
; 871  : 	// Create an entry in the linked list of service providers
; 872  : 	//
; 873  : 
; 874  : 	new_service_provider = ( service_provider_table_type * ) safe_malloc ( sizeof ( service_provider_table_type ) );

  00009	6a 14		 push	 20			; 00000014H
  0000b	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00010	89 45 fc	 mov	 DWORD PTR _new_service_provider$[ebp], eax

; 875  : 
; 876  : 	new_service_provider->next = service_provider_table;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _new_service_provider$[ebp]
  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A
  0001c	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 877  : 
; 878  : 	service_provider_table = new_service_provider;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _new_service_provider$[ebp]
  00022	a3 00 00 00 00	 mov	 DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, eax

; 879  : 
; 880  : 	new_service_provider->guid = ( GUID * ) safe_malloc ( sizeof ( GUID ) );

  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _new_service_provider$[ebp]
  00031	89 01		 mov	 DWORD PTR [ecx], eax

; 881  : 
; 882  : 	memcpy ( new_service_provider->guid, lpSPGuid, sizeof ( GUID ) );

  00033	6a 10		 push	 16			; 00000010H
  00035	8b 45 08	 mov	 eax, DWORD PTR _lpSPGuid$[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _new_service_provider$[ebp]
  0003c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 _memcpy
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH

; 883  : 
; 884  : 	new_service_provider->connection_size = dwConnectionSize;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _new_service_provider$[ebp]
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR _dwConnectionSize$[ebp]
  0004d	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 885  : 
; 886  : 	new_service_provider->connection = safe_malloc ( dwConnectionSize );

  00050	8b 45 10	 mov	 eax, DWORD PTR _dwConnectionSize$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _new_service_provider$[ebp]
  0005c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 887  : 
; 888  : 	memcpy ( new_service_provider->connection, lpConnection, dwConnectionSize );

  0005f	8b 45 10	 mov	 eax, DWORD PTR _dwConnectionSize$[ebp]
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _lpConnection$[ebp]
  00066	51		 push	 ecx
  00067	8b 55 fc	 mov	 edx, DWORD PTR _new_service_provider$[ebp]
  0006a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 _memcpy
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 889  : 
; 890  : 	new_service_provider->name = ( char * ) safe_malloc ( ( strlen ( lpName->lpszShortNameA ) + 1 ) );

  00076	8b 45 14	 mov	 eax, DWORD PTR _lpName$[ebp]
  00079	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 _strlen
  00082	83 c4 04	 add	 esp, 4
  00085	83 c0 01	 add	 eax, 1
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0008e	8b 55 fc	 mov	 edx, DWORD PTR _new_service_provider$[ebp]
  00091	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 891  : 
; 892  : 	sprintf ( new_service_provider->name, "%s", lpName->lpszShortNameA );

  00094	8b 45 14	 mov	 eax, DWORD PTR _lpName$[ebp]
  00097	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009a	51		 push	 ecx
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _new_service_provider$[ebp]
  000a3	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 _sprintf
  000ac	83 c4 0c	 add	 esp, 12			; 0000000cH

; 893  : 
; 894  : 	return TRUE;

  000af	b8 01 00 00 00	 mov	 eax, 1

; 895  : }

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 18 00	 ret	 24			; 00000018H
?direct_play_enumerate_connections@@YGHPAU_GUID@@PAXKPBUDPNAME@@K1@Z ENDP ; direct_play_enumerate_connections
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enum_address_callback@@YGHABU_GUID@@KPBXPAX@Z
_TEXT	SEGMENT
_modem_name$1 = -8					; size = 4
_string$2 = -4						; size = 4
_guid$ = 8						; size = 4
_datasize$ = 12						; size = 4
_data$ = 16						; size = 4
_context$ = 20						; size = 4
?direct_play_enum_address_callback@@YGHABU_GUID@@KPBXPAX@Z PROC ; direct_play_enum_address_callback, COMDAT

; 808  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 809  : #ifdef __cplusplus
; 810  : #define GUID_PREFIX2 &
; 811  : #else
; 812  : #define GUID_PREFIX2
; 813  : #endif
; 814  : 	if ( memcmp ( GUID_PREFIX2 guid, &DPAID_Modem, sizeof ( GUID ) ) == 0 )

  00009	6a 10		 push	 16			; 00000010H
  0000b	68 00 00 00 00	 push	 OFFSET _DPAID_Modem
  00010	8b 45 08	 mov	 eax, DWORD PTR _guid$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memcmp
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	85 c0		 test	 eax, eax
  0001e	0f 85 9c 00 00
	00		 jne	 $LN4@direct_pla

; 815  : 	{
; 816  : 
; 817  : 		const char
; 818  : 			*string;
; 819  : 
; 820  : 		string = ( const char * ) data;

  00024	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00027	89 45 fc	 mov	 DWORD PTR _string$2[ebp], eax
$LN2@direct_pla:

; 821  : 	
; 822  : 		while ( strlen ( string ) )

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _string$2[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _strlen
  00033	83 c4 04	 add	 esp, 4
  00036	85 c0		 test	 eax, eax
  00038	0f 84 82 00 00
	00		 je	 $LN4@direct_pla

; 823  : 		{
; 824  : 	
; 825  : 			modem_names
; 826  : 				*modem_name;
; 827  : 	
; 828  : 			//
; 829  : 			// Add this modem to the list
; 830  : 			//
; 831  : 	
; 832  : 			modem_name = ( modem_names * ) safe_malloc ( sizeof ( modem_names ) );

  0003e	6a 08		 push	 8
  00040	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00045	89 45 f8	 mov	 DWORD PTR _modem_name$1[ebp], eax

; 833  : 	
; 834  : 			modem_name->name = ( char * ) safe_malloc ( strlen ( string ) + 1 );

  00048	8b 45 fc	 mov	 eax, DWORD PTR _string$2[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _strlen
  00051	83 c4 04	 add	 esp, 4
  00054	83 c0 01	 add	 eax, 1
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _modem_name$1[ebp]
  00060	89 01		 mov	 DWORD PTR [ecx], eax

; 835  : 	
; 836  : 			strcpy ( modem_name->name, string );

  00062	8b 45 fc	 mov	 eax, DWORD PTR _string$2[ebp]
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _modem_name$1[ebp]
  00069	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 _strcpy
  00071	83 c4 08	 add	 esp, 8

; 837  : 	
; 838  : 			if ( !modem_name_list )

  00074	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?modem_name_list@@3PAUMODEM_NAMES@@A, 0 ; modem_name_list
  0007b	75 14		 jne	 SHORT $LN5@direct_pla

; 839  : 			{
; 840  : 	
; 841  : 				modem_name->succ = NULL;

  0007d	8b 45 f8	 mov	 eax, DWORD PTR _modem_name$1[ebp]
  00080	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 842  : 	
; 843  : 				modem_name_list = modem_name;

  00087	8b 45 f8	 mov	 eax, DWORD PTR _modem_name$1[ebp]
  0008a	a3 00 00 00 00	 mov	 DWORD PTR ?modem_name_list@@3PAUMODEM_NAMES@@A, eax ; modem_name_list

; 844  : 			}
; 845  : 			else

  0008f	eb 14		 jmp	 SHORT $LN6@direct_pla
$LN5@direct_pla:

; 846  : 			{
; 847  : 	
; 848  : 				modem_name->succ = modem_name_list;

  00091	8b 45 f8	 mov	 eax, DWORD PTR _modem_name$1[ebp]
  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_name_list@@3PAUMODEM_NAMES@@A ; modem_name_list
  0009a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 849  : 	
; 850  : 				modem_name_list = modem_name;

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _modem_name$1[ebp]
  000a0	a3 00 00 00 00	 mov	 DWORD PTR ?modem_name_list@@3PAUMODEM_NAMES@@A, eax ; modem_name_list
$LN6@direct_pla:

; 851  : 			}
; 852  : 
; 853  : 			string += ( strlen ( string ) + 1 );

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _string$2[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 _strlen
  000ae	83 c4 04	 add	 esp, 4
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _string$2[ebp]
  000b4	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  000b8	89 55 fc	 mov	 DWORD PTR _string$2[ebp], edx

; 854  : 		}

  000bb	e9 6a ff ff ff	 jmp	 $LN2@direct_pla
$LN4@direct_pla:

; 855  : 	}
; 856  : 
; 857  : 	return ( TRUE );

  000c0	b8 01 00 00 00	 mov	 eax, 1

; 858  : }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 10 00	 ret	 16			; 00000010H
?direct_play_enum_address_callback@@YGHABU_GUID@@KPBXPAX@Z ENDP ; direct_play_enum_address_callback
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_initialise_lobbies@@YGXXZ
_TEXT	SEGMENT
_datasize$1 = -8					; size = 4
_ret$ = -4						; size = 4
?direct_play_initialise_lobbies@@YGXXZ PROC		; direct_play_initialise_lobbies, COMDAT

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 290  : 
; 291  : 	HRESULT
; 292  : 		ret;
; 293  : 
; 294  : 	ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &direct_play_lobby3 );

  00009	68 00 00 00 00	 push	 OFFSET ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  0000e	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  00013	6a 01		 push	 1
  00015	6a 00		 push	 0
  00017	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00022	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 295  : 
; 296  : 	if ( ret != DP_OK )

  00025	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00029	74 1c		 je	 SHORT $LN2@direct_pla

; 297  : 	{
; 298  : 
; 299  : 		debug_log ( "DIRECTP: Unable to create DirectPlayLobby: %s", get_dplay_error_message ( ret ) );

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00034	50		 push	 eax
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BIHFCIFB@DIRECTP?3?5Unable?5to?5create?5Direc@
  0003a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0003f	83 c4 08	 add	 esp, 8

; 300  : 	}
; 301  : 	else

  00042	e9 b6 01 00 00	 jmp	 $LN1@direct_pla
$LN2@direct_pla:

; 302  : 	{
; 303  : 
; 304  : 		DWORD
; 305  : 			datasize;
; 306  : 
; 307  : 		//
; 308  : 		// Get the connection settings - this will also tell us if we were called by a lobby
; 309  : 		//
; 310  : 
; 311  : 		ret = IDirectPlayLobby_GetConnectionSettings ( direct_play_lobby3, 0, NULL, &datasize );

  00047	8d 45 f8	 lea	 eax, DWORD PTR _datasize$1[ebp]
  0004a	50		 push	 eax
  0004b	6a 00		 push	 0
  0004d	6a 00		 push	 0
  0004f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  0005c	50		 push	 eax
  0005d	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00060	ff d1		 call	 ecx
  00062	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 312  : 
; 313  : 		if ( ret == DPERR_NOTLOBBIED )

  00065	81 7d fc 2e 04
	77 88		 cmp	 DWORD PTR _ret$[ebp], -2005466066 ; 8877042eH
  0006c	75 2f		 jne	 SHORT $LN4@direct_pla

; 314  : 		{
; 315  : 
; 316  : 			//
; 317  : 			// Not called by a lobby - bail out now.
; 318  : 			//
; 319  : 
; 320  : 			debug_log ( "DIRECTP: Not called by a lobby - bailing out!" );

  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@PEEJKLIG@DIRECTP?3?5Not?5called?5by?5a?5lobby?5@
  00073	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00078	83 c4 04	 add	 esp, 4

; 321  : 
; 322  : 			IDirectPlayLobby_Release ( direct_play_lobby3 );

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  00088	52		 push	 edx
  00089	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0008c	ff d0		 call	 eax

; 323  : 
; 324  : 			direct_play_lobby3 = NULL;

  0008e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A, 0

; 325  : 		}
; 326  : 		else

  00098	e9 60 01 00 00	 jmp	 $LN1@direct_pla
$LN4@direct_pla:

; 327  : 		{
; 328  : 
; 329  : 			//
; 330  : 			// We were created by a lobby - so get the details!
; 331  : 			//
; 332  : 
; 333  : 			direct_play_lobby3_connection_data = ( DPLCONNECTION * ) safe_malloc ( datasize );

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _datasize$1[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A, eax

; 334  : 
; 335  : 			ret = IDirectPlayLobby_GetConnectionSettings ( direct_play_lobby3, 0, direct_play_lobby3_connection_data, &datasize );

  000ab	8d 45 f8	 lea	 eax, DWORD PTR _datasize$1[ebp]
  000ae	50		 push	 eax
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  000b5	51		 push	 ecx
  000b6	6a 00		 push	 0
  000b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  000be	8b 02		 mov	 eax, DWORD PTR [edx]
  000c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  000c6	51		 push	 ecx
  000c7	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000ca	ff d2		 call	 edx
  000cc	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 336  : 
; 337  : 			if ( ret != DP_OK )

  000cf	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  000d3	74 1c		 je	 SHORT $LN6@direct_pla

; 338  : 			{
; 339  : 
; 340  : 				debug_log ( "DIRECTP: Unable to get lobby connection settings: %s", get_dplay_error_message ( ret ) );

  000d5	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000de	50		 push	 eax
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BOAPCBHG@DIRECTP?3?5Unable?5to?5get?5lobby?5co@
  000e4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000e9	83 c4 08	 add	 esp, 8

; 341  : 			}
; 342  : 			else

  000ec	e9 0c 01 00 00	 jmp	 $LN1@direct_pla
$LN6@direct_pla:

; 343  : 			{
; 344  : 
; 345  : 				//
; 346  : 				// Got the connection settings - parse them
; 347  : 				//
; 348  : 
; 349  : 				if ( direct_play_lobby3_connection_data->dwFlags & DPLCONNECTION_CREATESESSION )

  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  000f6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f9	83 e1 02	 and	 ecx, 2
  000fc	74 0d		 je	 SHORT $LN8@direct_pla

; 350  : 				{
; 351  : 
; 352  : 					debug_log ( "DIRECTP: Lobby says to host a game" );

  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@JAMMEPFM@DIRECTP?3?5Lobby?5says?5to?5host?5a?5g@
  00103	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00108	83 c4 04	 add	 esp, 4
$LN8@direct_pla:

; 353  : 				}
; 354  : 
; 355  : 				if ( direct_play_lobby3_connection_data->dwFlags & DPLCONNECTION_JOINSESSION )

  0010b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  00110	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00113	83 e1 01	 and	 ecx, 1
  00116	74 0d		 je	 SHORT $LN9@direct_pla

; 356  : 				{
; 357  : 
; 358  : 					debug_log ( "DIRECTP: Lobby says to join a game" );

  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HFJFAIAN@DIRECTP?3?5Lobby?5says?5to?5join?5a?5g@
  0011d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00122	83 c4 04	 add	 esp, 4
$LN9@direct_pla:

; 359  : 				}
; 360  : 
; 361  : 				direct_play_lobby3_connection_data->lpSessionDesc->dwFlags =  DPSESSION_KEEPALIVE;

  00125	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  0012a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0012d	c7 41 04 40 00
	00 00		 mov	 DWORD PTR [ecx+4], 64	; 00000040H

; 362  : 
; 363  : 				ret = IDirectPlayLobby_SetConnectionSettings( direct_play_lobby3, 0, 0, direct_play_lobby3_connection_data );

  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  00139	50		 push	 eax
  0013a	6a 00		 push	 0
  0013c	6a 00		 push	 0
  0013e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  00144	8b 11		 mov	 edx, DWORD PTR [ecx]
  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  0014b	50		 push	 eax
  0014c	8b 4a 30	 mov	 ecx, DWORD PTR [edx+48]
  0014f	ff d1		 call	 ecx
  00151	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 364  : 
; 365  : 				if ( ret != DP_OK )

  00154	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00158	74 17		 je	 SHORT $LN10@direct_pla

; 366  : 				{
; 367  : 
; 368  : 					debug_log ( "DIRECTP: Unable to SetConectionSettings on lobby: %s", get_dplay_error_message ( ret ) );

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00163	50		 push	 eax
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@CNGHAAOF@DIRECTP?3?5Unable?5to?5SetConection@
  00169	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0016e	83 c4 08	 add	 esp, 8
$LN10@direct_pla:

; 369  : 				}
; 370  : 
; 371  : 				//
; 372  : 				// Now connect to the lobby's game
; 373  : 				//
; 374  : 
; 375  : 				ret = IDirectPlayLobby_ConnectEx ( direct_play_lobby3, 0, GUID_PREFIX IID_IDirectPlay4A, ( LPVOID * ) &direct_playx, NULL );

  00171	6a 00		 push	 0
  00173	68 00 00 00 00	 push	 OFFSET ?direct_playx@@3PAUIDirectPlay4@@A
  00178	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlay4A
  0017d	6a 00		 push	 0
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  00184	8b 08		 mov	 ecx, DWORD PTR [eax]
  00186	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A
  0018c	52		 push	 edx
  0018d	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00190	ff d0		 call	 eax
  00192	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 376  : 
; 377  : 				if ( ret != DP_OK )

  00195	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00199	74 19		 je	 SHORT $LN11@direct_pla

; 378  : 				{
; 379  : 
; 380  : 					debug_log ( "DIRECTP: Unable to connect to lobby: %s", get_dplay_error_message ( ret ) );

  0019b	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  0019e	50		 push	 eax
  0019f	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  001a4	50		 push	 eax
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@BOCMEPNA@DIRECTP?3?5Unable?5to?5connect?5to?5l@
  001aa	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001af	83 c4 08	 add	 esp, 8

; 381  : 				}
; 382  : 				else

  001b2	eb 0d		 jmp	 SHORT $LN12@direct_pla
$LN11@direct_pla:

; 383  : 				{
; 384  : 
; 385  : 					debug_log ( "DIRECTP: Connected to lobby successfully" );

  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@KOMMFEEO@DIRECTP?3?5Connected?5to?5lobby?5suc@
  001b9	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001be	83 c4 04	 add	 esp, 4
$LN12@direct_pla:

; 386  : 				}
; 387  : 
; 388  : 				direct_play_set_comms_mode ( DIRECT_PLAY_COMMS_MODE_MULTI );

  001c1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode

; 389  : 
; 390  : 				debug_log ( "Session name: %s", direct_play_lobby3_connection_data->lpSessionDesc->lpszSessionNameA );

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  001d0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d3	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  001d6	52		 push	 edx
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DIHKKKEM@Session?5name?3?5?$CFs@
  001dc	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001e1	83 c4 08	 add	 esp, 8

; 391  : 
; 392  : 				debug_log ( "Player name: %s", direct_play_lobby3_connection_data->lpPlayerName->lpszShortNameA );

  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  001e9	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  001ec	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001ef	52		 push	 edx
  001f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OCAIJDPI@Player?5name?3?5?$CFs@
  001f5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001fa	83 c4 08	 add	 esp, 8
$LN1@direct_pla:

; 393  : 			}
; 394  : 		}
; 395  : 	}
; 396  : }

  001fd	5f		 pop	 edi
  001fe	5e		 pop	 esi
  001ff	5b		 pop	 ebx
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c3		 ret	 0
?direct_play_initialise_lobbies@@YGXXZ ENDP		; direct_play_initialise_lobbies
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?destroy_direct_play_interface@@YGXXZ
_TEXT	SEGMENT
_ret$1 = -4						; size = 4
?destroy_direct_play_interface@@YGXXZ PROC		; destroy_direct_play_interface, COMDAT

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 265  : 
; 266  : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 33		 je	 SHORT $LN1@destroy_di

; 267  : 	{
; 268  : 	
; 269  : 		HRESULT
; 270  : 			ret;
; 271  : 	
; 272  : 		ret = IDirectPlayX_Release ( direct_playx );

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001f	52		 push	 edx
  00020	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00023	ff d0		 call	 eax
  00025	89 45 fc	 mov	 DWORD PTR _ret$1[ebp], eax

; 273  : 	
; 274  : 		if ( ret != 0 )

  00028	83 7d fc 00	 cmp	 DWORD PTR _ret$1[ebp], 0
  0002c	74 0d		 je	 SHORT $LN3@destroy_di

; 275  : 		{
; 276  : 	
; 277  : 			debug_log ( "DIRECTP: Unable to release the directplay object" );

  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@NOLMPJKL@DIRECTP?3?5Unable?5to?5release?5the?5@
  00033	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00038	83 c4 04	 add	 esp, 4
$LN3@destroy_di:

; 278  : 		}
; 279  : 
; 280  : 		direct_playx = NULL;

  0003b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
$LN1@destroy_di:

; 281  : 	}
; 282  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?destroy_direct_play_interface@@YGXXZ ENDP		; destroy_direct_play_interface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_send_queue_number_of_bytes@@YGHXZ
_TEXT	SEGMENT
?direct_play_get_send_queue_number_of_bytes@@YGHXZ PROC	; direct_play_get_send_queue_number_of_bytes, COMDAT

; 4122 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4123 : 
; 4124 : 	return direct_play_send_queue_number_of_bytes;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_send_queue_number_of_bytes@@3KA

; 4125 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_send_queue_number_of_bytes@@YGHXZ ENDP	; direct_play_get_send_queue_number_of_bytes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_send_queue_number_of_packets@@YGHXZ
_TEXT	SEGMENT
?direct_play_get_send_queue_number_of_packets@@YGHXZ PROC ; direct_play_get_send_queue_number_of_packets, COMDAT

; 4112 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4113 : 
; 4114 : 	return direct_play_send_queue_number_of_packets;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_send_queue_number_of_packets@@3KA

; 4115 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_send_queue_number_of_packets@@YGHXZ ENDP ; direct_play_get_send_queue_number_of_packets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?set_direct_play_serial_address@@YGXHHHHH@Z
_TEXT	SEGMENT
tv133 = -176						; size = 4
tv130 = -176						; size = 4
tv94 = -176						; size = 4
tv91 = -176						; size = 4
_com_port_address$1 = -108				; size = 20
_address_size$2 = -88					; size = 4
_direct_play_lobby$3 = -84				; size = 4
_address$4 = -80					; size = 4
_address_elements$5 = -76				; size = 72
_ret$6 = -4						; size = 4
_com_port$ = 8						; size = 4
_baud_rate$ = 12					; size = 4
_stop_bits$ = 16					; size = 4
_parity$ = 20						; size = 4
_flow$ = 24						; size = 4
?set_direct_play_serial_address@@YGXHHHHH@Z PROC	; set_direct_play_serial_address, COMDAT

; 3791 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3792 : 
; 3793 : 	if ( direct_playx )

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00013	0f 84 22 03 00
	00		 je	 $LN1@set_direct

; 3794 : 	{
; 3795 : 
; 3796 : 		HRESULT
; 3797 : 			ret;
; 3798 : 	
; 3799 : 		DPCOMPOUNDADDRESSELEMENT
; 3800 : 			address_elements[3];
; 3801 : 
; 3802 : 		LPVOID
; 3803 : 			address;
; 3804 : 
; 3805 : 		LPDIRECTPLAYLOBBY3A
; 3806 : 			direct_play_lobby;
; 3807 : 
; 3808 : 		DWORD
; 3809 : 			address_size;
; 3810 : 
; 3811 : 		DPCOMPORTADDRESS
; 3812 : 			com_port_address;
; 3813 : 
; 3814 : 		//
; 3815 : 		// Create a lobby
; 3816 : 		//
; 3817 : 
; 3818 : 		ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &direct_play_lobby );

  00019	8d 45 ac	 lea	 eax, DWORD PTR _direct_play_lobby$3[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  00022	6a 01		 push	 1
  00024	6a 00		 push	 0
  00026	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00031	89 45 fc	 mov	 DWORD PTR _ret$6[ebp], eax

; 3819 : 
; 3820 : 		if ( ret != DP_OK )

  00034	83 7d fc 00	 cmp	 DWORD PTR _ret$6[ebp], 0
  00038	74 12		 je	 SHORT $LN11@set_direct

; 3821 : 		{
; 3822 : 
; 3823 : 			debug_log ( "DIRECTP: UNABLE TO CREATE A DIRECTPLAYLOBBY3 interface" );

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
  0003f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00044	83 c4 04	 add	 esp, 4

; 3824 : 
; 3825 : 			return;

  00047	e9 ef 02 00 00	 jmp	 $LN1@set_direct
$LN11@set_direct:

; 3826 : 		}
; 3827 : 
; 3828 : 		//
; 3829 : 		// Serial needs a service provider, and a com_port structure
; 3830 : 		//
; 3831 : 
; 3832 : 		address_elements[0].guidDataType = DPAID_ServiceProvider;

  0004c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00051	6b c8 00	 imul	 ecx, eax, 0
  00054	8d 54 0d b4	 lea	 edx, DWORD PTR _address_elements$5[ebp+ecx]
  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider
  0005d	89 02		 mov	 DWORD PTR [edx], eax
  0005f	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _DPAID_ServiceProvider+4
  00065	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00068	a1 08 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider+8
  0006d	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00070	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _DPAID_ServiceProvider+12
  00076	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 3833 : 		address_elements[0].dwDataSize = sizeof ( GUID );

  00079	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0007e	6b c8 00	 imul	 ecx, eax, 0
  00081	c7 44 0d c4 10
	00 00 00	 mov	 DWORD PTR _address_elements$5[ebp+ecx+16], 16 ; 00000010H

; 3834 : 		address_elements[0].lpData = ( LPVOID ) &DPSPGUID_SERIAL;

  00089	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0008e	6b c8 00	 imul	 ecx, eax, 0
  00091	c7 44 0d c8 00
	00 00 00	 mov	 DWORD PTR _address_elements$5[ebp+ecx+20], OFFSET _DPSPGUID_SERIAL

; 3835 : 
; 3836 : 		address_elements[1].guidDataType = DPAID_ComPort;

  00099	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0009e	c1 e0 00	 shl	 eax, 0
  000a1	8d 4c 05 b4	 lea	 ecx, DWORD PTR _address_elements$5[ebp+eax]
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_ComPort
  000ab	89 11		 mov	 DWORD PTR [ecx], edx
  000ad	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_ComPort+4
  000b2	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000b5	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_ComPort+8
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  000be	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_ComPort+12
  000c3	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 3837 : 		address_elements[1].dwDataSize = sizeof ( DPCOMPORTADDRESS );

  000c6	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000cb	c1 e0 00	 shl	 eax, 0
  000ce	c7 44 05 c4 14
	00 00 00	 mov	 DWORD PTR _address_elements$5[ebp+eax+16], 20 ; 00000014H

; 3838 : 		address_elements[1].lpData = ( LPVOID ) &com_port_address;

  000d6	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000db	c1 e0 00	 shl	 eax, 0
  000de	8d 4d 94	 lea	 ecx, DWORD PTR _com_port_address$1[ebp]
  000e1	89 4c 05 c8	 mov	 DWORD PTR _address_elements$5[ebp+eax+20], ecx

; 3839 : 
; 3840 : 		com_port_address.dwComPort = com_port;

  000e5	8b 45 08	 mov	 eax, DWORD PTR _com_port$[ebp]
  000e8	89 45 94	 mov	 DWORD PTR _com_port_address$1[ebp], eax

; 3841 : 
; 3842 : 		switch ( baud_rate )

  000eb	8b 45 0c	 mov	 eax, DWORD PTR _baud_rate$[ebp]
  000ee	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv91[ebp], eax
  000f4	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv91[ebp]
  000fa	83 e9 01	 sub	 ecx, 1
  000fd	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv91[ebp], ecx
  00103	83 bd 50 ff ff
	ff 03		 cmp	 DWORD PTR tv91[ebp], 3
  0010a	77 2f		 ja	 SHORT $LN2@set_direct
  0010c	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv91[ebp]
  00112	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN34@set_direct[edx*4]
$LN12@set_direct:

; 3843 : 		{
; 3844 : 
; 3845 : 			case 1:	com_port_address.dwBaudRate = CBR_19200; break;

  00119	c7 45 98 00 4b
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+4], 19200 ; 00004b00H
  00120	eb 19		 jmp	 SHORT $LN2@set_direct
$LN13@set_direct:

; 3846 : 			case 2:	com_port_address.dwBaudRate = CBR_38400; break;

  00122	c7 45 98 00 96
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+4], 38400 ; 00009600H
  00129	eb 10		 jmp	 SHORT $LN2@set_direct
$LN14@set_direct:

; 3847 : 			case 3:	com_port_address.dwBaudRate = CBR_57600; break;

  0012b	c7 45 98 00 e1
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+4], 57600 ; 0000e100H
  00132	eb 07		 jmp	 SHORT $LN2@set_direct
$LN15@set_direct:

; 3848 : 			case 4:	com_port_address.dwBaudRate = CBR_115200; break;

  00134	c7 45 98 00 c2
	01 00		 mov	 DWORD PTR _com_port_address$1[ebp+4], 115200 ; 0001c200H
$LN2@set_direct:

; 3849 : 		}
; 3850 : 
; 3851 : 		switch ( stop_bits )

  0013b	8b 45 10	 mov	 eax, DWORD PTR _stop_bits$[ebp]
  0013e	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  00144	83 bd 50 ff ff
	ff 01		 cmp	 DWORD PTR tv94[ebp], 1
  0014b	74 14		 je	 SHORT $LN16@set_direct
  0014d	83 bd 50 ff ff
	ff 02		 cmp	 DWORD PTR tv94[ebp], 2
  00154	74 14		 je	 SHORT $LN17@set_direct
  00156	83 bd 50 ff ff
	ff 03		 cmp	 DWORD PTR tv94[ebp], 3
  0015d	74 14		 je	 SHORT $LN18@set_direct
  0015f	eb 19		 jmp	 SHORT $LN4@set_direct
$LN16@set_direct:

; 3852 : 		{
; 3853 : 
; 3854 : 			case 1: com_port_address.dwStopBits = ONESTOPBIT; break;

  00161	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+8], 0
  00168	eb 10		 jmp	 SHORT $LN4@set_direct
$LN17@set_direct:

; 3855 : 			case 2: com_port_address.dwStopBits = ONE5STOPBITS; break;

  0016a	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+8], 1
  00171	eb 07		 jmp	 SHORT $LN4@set_direct
$LN18@set_direct:

; 3856 : 			case 3: com_port_address.dwStopBits = TWOSTOPBITS; break;

  00173	c7 45 9c 02 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+8], 2
$LN4@set_direct:

; 3857 : 		}
; 3858 : 
; 3859 : 		switch ( parity )

  0017a	8b 45 14	 mov	 eax, DWORD PTR _parity$[ebp]
  0017d	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv130[ebp], eax
  00183	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv130[ebp]
  00189	83 e9 01	 sub	 ecx, 1
  0018c	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv130[ebp], ecx
  00192	83 bd 50 ff ff
	ff 03		 cmp	 DWORD PTR tv130[ebp], 3
  00199	77 2f		 ja	 SHORT $LN6@set_direct
  0019b	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv130[ebp]
  001a1	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN35@set_direct[edx*4]
$LN19@set_direct:

; 3860 : 		{
; 3861 : 
; 3862 : 			case 1: com_port_address.dwParity = NOPARITY; break;

  001a8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+12], 0
  001af	eb 19		 jmp	 SHORT $LN6@set_direct
$LN20@set_direct:

; 3863 : 			case 2: com_port_address.dwParity = EVENPARITY; break;

  001b1	c7 45 a0 02 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+12], 2
  001b8	eb 10		 jmp	 SHORT $LN6@set_direct
$LN21@set_direct:

; 3864 : 			case 3: com_port_address.dwParity = ODDPARITY; break;

  001ba	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+12], 1
  001c1	eb 07		 jmp	 SHORT $LN6@set_direct
$LN22@set_direct:

; 3865 : 			case 4: com_port_address.dwParity = MARKPARITY; break;

  001c3	c7 45 a0 03 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+12], 3
$LN6@set_direct:

; 3866 : 		}
; 3867 : 
; 3868 : 		switch ( flow )

  001ca	8b 45 18	 mov	 eax, DWORD PTR _flow$[ebp]
  001cd	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
  001d3	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  001d9	83 e9 01	 sub	 ecx, 1
  001dc	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], ecx
  001e2	83 bd 50 ff ff
	ff 04		 cmp	 DWORD PTR tv133[ebp], 4
  001e9	77 38		 ja	 SHORT $LN8@set_direct
  001eb	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv133[ebp]
  001f1	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN36@set_direct[edx*4]
$LN23@set_direct:

; 3869 : 		{
; 3870 : 
; 3871 : 			case 1: com_port_address.dwFlowControl = DPCPA_NOFLOW; break;

  001f8	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+16], 0
  001ff	eb 22		 jmp	 SHORT $LN8@set_direct
$LN24@set_direct:

; 3872 : 			case 2: com_port_address.dwFlowControl = DPCPA_XONXOFFFLOW; break;

  00201	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+16], 1
  00208	eb 19		 jmp	 SHORT $LN8@set_direct
$LN25@set_direct:

; 3873 : 			case 3: com_port_address.dwFlowControl = DPCPA_RTSFLOW; break;

  0020a	c7 45 a4 02 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+16], 2
  00211	eb 10		 jmp	 SHORT $LN8@set_direct
$LN26@set_direct:

; 3874 : 			case 4: com_port_address.dwFlowControl = DPCPA_DTRFLOW; break;

  00213	c7 45 a4 03 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+16], 3
  0021a	eb 07		 jmp	 SHORT $LN8@set_direct
$LN27@set_direct:

; 3875 : 			case 5: com_port_address.dwFlowControl = DPCPA_RTSDTRFLOW; break;

  0021c	c7 45 a4 04 00
	00 00		 mov	 DWORD PTR _com_port_address$1[ebp+16], 4
$LN8@set_direct:

; 3876 : 		}
; 3877 : 
; 3878 : 		//
; 3879 : 		// Find the size of memory to store the address
; 3880 : 		//
; 3881 : 
; 3882 : 		ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, 2, NULL, &address_size );

  00223	8d 45 a8	 lea	 eax, DWORD PTR _address_size$2[ebp]
  00226	50		 push	 eax
  00227	6a 00		 push	 0
  00229	6a 02		 push	 2
  0022b	8d 4d b4	 lea	 ecx, DWORD PTR _address_elements$5[ebp]
  0022e	51		 push	 ecx
  0022f	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$3[ebp]
  00232	8b 02		 mov	 eax, DWORD PTR [edx]
  00234	8b 4d ac	 mov	 ecx, DWORD PTR _direct_play_lobby$3[ebp]
  00237	51		 push	 ecx
  00238	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  0023b	ff d2		 call	 edx
  0023d	89 45 fc	 mov	 DWORD PTR _ret$6[ebp], eax

; 3883 : 
; 3884 : 		if ( ret != DPERR_BUFFERTOOSMALL )

  00240	81 7d fc 1e 00
	77 88		 cmp	 DWORD PTR _ret$6[ebp], -2005467106 ; 8877001eH
  00247	74 20		 je	 SHORT $LN28@set_direct

; 3885 : 		{
; 3886 : 
; 3887 : 			IDirectPlayLobby_Release ( direct_play_lobby );

  00249	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$3[ebp]
  0024c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024e	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$3[ebp]
  00251	52		 push	 edx
  00252	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00255	ff d0		 call	 eax

; 3888 : 
; 3889 : 			debug_log ( "DIRECTP: Unable to establish how big the compound address is" );

  00257	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@
  0025c	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00261	83 c4 04	 add	 esp, 4

; 3890 : 
; 3891 : 			return;

  00264	e9 d2 00 00 00	 jmp	 $LN1@set_direct
$LN28@set_direct:

; 3892 : 		}
; 3893 : 
; 3894 : 		address = safe_malloc ( address_size );

  00269	8b 45 a8	 mov	 eax, DWORD PTR _address_size$2[ebp]
  0026c	50		 push	 eax
  0026d	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00272	89 45 b0	 mov	 DWORD PTR _address$4[ebp], eax

; 3895 : 
; 3896 : 		//
; 3897 : 		// Now fill the memory with the address
; 3898 : 		//
; 3899 : 
; 3900 : 		ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, 2, address, &address_size );

  00275	8d 45 a8	 lea	 eax, DWORD PTR _address_size$2[ebp]
  00278	50		 push	 eax
  00279	8b 4d b0	 mov	 ecx, DWORD PTR _address$4[ebp]
  0027c	51		 push	 ecx
  0027d	6a 02		 push	 2
  0027f	8d 55 b4	 lea	 edx, DWORD PTR _address_elements$5[ebp]
  00282	52		 push	 edx
  00283	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$3[ebp]
  00286	8b 08		 mov	 ecx, DWORD PTR [eax]
  00288	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$3[ebp]
  0028b	52		 push	 edx
  0028c	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  0028f	ff d0		 call	 eax
  00291	89 45 fc	 mov	 DWORD PTR _ret$6[ebp], eax

; 3901 : 
; 3902 : 		if ( ret != DP_OK )

  00294	83 7d fc 00	 cmp	 DWORD PTR _ret$6[ebp], 0
  00298	74 20		 je	 SHORT $LN29@set_direct

; 3903 : 		{
; 3904 : 
; 3905 : 			IDirectPlayLobby_Release ( direct_play_lobby );

  0029a	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$3[ebp]
  0029d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0029f	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$3[ebp]
  002a2	52		 push	 edx
  002a3	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  002a6	ff d0		 call	 eax

; 3906 : 
; 3907 : 			debug_log ( "DIRECTP: Unable to create a compound address" );

  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@
  002ad	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  002b2	83 c4 04	 add	 esp, 4

; 3908 : 
; 3909 : 			return;

  002b5	e9 81 00 00 00	 jmp	 $LN1@set_direct
$LN29@set_direct:

; 3910 : 		}
; 3911 : 
; 3912 : 		//
; 3913 : 		// Now usurp the original connection data
; 3914 : 		//
; 3915 : 
; 3916 : 		if ( connection_data.service_provider.connection )

  002ba	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  002c1	74 5d		 je	 SHORT $LN30@set_direct

; 3917 : 		{
; 3918 : 
; 3919 : 			if ( connection_data.service_provider.connection )

  002c3	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  002ca	74 1b		 je	 SHORT $LN31@set_direct

; 3920 : 			{
; 3921 : 
; 3922 : 				safe_free ( connection_data.service_provider.connection );

  002cc	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  002d1	50		 push	 eax
  002d2	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 3923 : 
; 3924 : 				connection_data.service_provider.connection = address;

  002d7	8b 45 b0	 mov	 eax, DWORD PTR _address$4[ebp]
  002da	a3 18 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, eax

; 3925 : 
; 3926 : 				connection_data.service_provider.connection_size = address_size;

  002df	8b 45 a8	 mov	 eax, DWORD PTR _address_size$2[ebp]
  002e2	a3 1c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+28, eax
$LN31@set_direct:

; 3927 : 			}
; 3928 : 
; 3929 : 			//
; 3930 : 			// Replace the directplay interface
; 3931 : 			//
; 3932 : 
; 3933 : 			create_direct_play_interface ();

  002e7	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 3934 : 
; 3935 : 			ret = IDirectPlayX_InitializeConnection ( direct_playx, connection_data.service_provider.connection, 0 );

  002ec	6a 00		 push	 0
  002ee	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  002f3	50		 push	 eax
  002f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  002fa	8b 11		 mov	 edx, DWORD PTR [ecx]
  002fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00301	50		 push	 eax
  00302	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00308	ff d1		 call	 ecx
  0030a	89 45 fc	 mov	 DWORD PTR _ret$6[ebp], eax

; 3936 : 
; 3937 : 			if ( ret != 0 )

  0030d	83 7d fc 00	 cmp	 DWORD PTR _ret$6[ebp], 0
  00311	74 0d		 je	 SHORT $LN30@set_direct

; 3938 : 			{
; 3939 : 
; 3940 : 				debug_log ( "DIRECTP: Unable to initialize connection on the new serial address" );

  00313	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@BPIHLAAD@DIRECTP?3?5Unable?5to?5initialize?5c@
  00318	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0031d	83 c4 04	 add	 esp, 4
$LN30@set_direct:

; 3941 : 			}
; 3942 : 		}
; 3943 : 
; 3944 : 		IDirectPlayLobby_Release ( direct_play_lobby );

  00320	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$3[ebp]
  00323	8b 08		 mov	 ecx, DWORD PTR [eax]
  00325	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$3[ebp]
  00328	52		 push	 edx
  00329	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0032c	ff d0		 call	 eax

; 3945 : 
; 3946 : 		debug_log ( "DIRECTP: CREATED A COMPOUND ADDRESS FOR THE SERIAL SERVICE PROVIDER!" );

  0032e	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@DDDKNPHA@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@
  00333	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00338	83 c4 04	 add	 esp, 4
$LN1@set_direct:

; 3947 : 	}
; 3948 : }

  0033b	5f		 pop	 edi
  0033c	5e		 pop	 esi
  0033d	5b		 pop	 ebx
  0033e	8b e5		 mov	 esp, ebp
  00340	5d		 pop	 ebp
  00341	c2 14 00	 ret	 20			; 00000014H
$LN34@set_direct:
  00344	00 00 00 00	 DD	 $LN12@set_direct
  00348	00 00 00 00	 DD	 $LN13@set_direct
  0034c	00 00 00 00	 DD	 $LN14@set_direct
  00350	00 00 00 00	 DD	 $LN15@set_direct
$LN35@set_direct:
  00354	00 00 00 00	 DD	 $LN19@set_direct
  00358	00 00 00 00	 DD	 $LN20@set_direct
  0035c	00 00 00 00	 DD	 $LN21@set_direct
  00360	00 00 00 00	 DD	 $LN22@set_direct
$LN36@set_direct:
  00364	00 00 00 00	 DD	 $LN23@set_direct
  00368	00 00 00 00	 DD	 $LN24@set_direct
  0036c	00 00 00 00	 DD	 $LN25@set_direct
  00370	00 00 00 00	 DD	 $LN26@set_direct
  00374	00 00 00 00	 DD	 $LN27@set_direct
?set_direct_play_serial_address@@YGXHHHHH@Z ENDP	; set_direct_play_serial_address
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?set_direct_play_inet_address@@YGXPBD@Z
_TEXT	SEGMENT
_address_size$1 = -88					; size = 4
_direct_play_lobby$2 = -84				; size = 4
_address$3 = -80					; size = 4
_address_elements$4 = -76				; size = 72
_ret$5 = -4						; size = 4
_ip_address$ = 8					; size = 4
?set_direct_play_inet_address@@YGXPBD@Z PROC		; set_direct_play_inet_address, COMDAT

; 3668 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3669 : 
; 3670 : 	if ( direct_playx )

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00013	0f 84 ef 01 00
	00		 je	 $LN1@set_direct

; 3671 : 	{
; 3672 : 
; 3673 : 		HRESULT
; 3674 : 			ret;
; 3675 : 	
; 3676 : 		DPCOMPOUNDADDRESSELEMENT
; 3677 : 			address_elements[3];
; 3678 : 
; 3679 : 		LPVOID
; 3680 : 			address;
; 3681 : 
; 3682 : 		LPDIRECTPLAYLOBBY3A
; 3683 : 			direct_play_lobby;
; 3684 : 
; 3685 : 		DWORD
; 3686 : 			address_size;
; 3687 : 
; 3688 : 		//
; 3689 : 		// Create a lobby
; 3690 : 		//
; 3691 : 
; 3692 : 		ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &direct_play_lobby );

  00019	8d 45 ac	 lea	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  00022	6a 01		 push	 1
  00024	6a 00		 push	 0
  00026	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00031	89 45 fc	 mov	 DWORD PTR _ret$5[ebp], eax

; 3693 : 
; 3694 : 		if ( ret != DP_OK )

  00034	83 7d fc 00	 cmp	 DWORD PTR _ret$5[ebp], 0
  00038	74 12		 je	 SHORT $LN3@set_direct

; 3695 : 		{
; 3696 : 
; 3697 : 			debug_log ( "DIRECTP: UNABLE TO CREATE A DIRECTPLAYLOBBY3 interface" );

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
  0003f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00044	83 c4 04	 add	 esp, 4

; 3698 : 
; 3699 : 			return;

  00047	e9 bc 01 00 00	 jmp	 $LN1@set_direct
$LN3@set_direct:

; 3700 : 		}
; 3701 : 
; 3702 : 		//
; 3703 : 		// TCP/IP needs a service provider, an IP address, and optional port number
; 3704 : 		//
; 3705 : 
; 3706 : 		address_elements[0].guidDataType = DPAID_ServiceProvider;

  0004c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00051	6b c8 00	 imul	 ecx, eax, 0
  00054	8d 54 0d b4	 lea	 edx, DWORD PTR _address_elements$4[ebp+ecx]
  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider
  0005d	89 02		 mov	 DWORD PTR [edx], eax
  0005f	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _DPAID_ServiceProvider+4
  00065	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00068	a1 08 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider+8
  0006d	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00070	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _DPAID_ServiceProvider+12
  00076	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 3707 : 		address_elements[0].dwDataSize = sizeof ( GUID );

  00079	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0007e	6b c8 00	 imul	 ecx, eax, 0
  00081	c7 44 0d c4 10
	00 00 00	 mov	 DWORD PTR _address_elements$4[ebp+ecx+16], 16 ; 00000010H

; 3708 : 		address_elements[0].lpData = ( LPVOID ) &DPSPGUID_TCPIP;

  00089	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0008e	6b c8 00	 imul	 ecx, eax, 0
  00091	c7 44 0d c8 00
	00 00 00	 mov	 DWORD PTR _address_elements$4[ebp+ecx+20], OFFSET _DPSPGUID_TCPIP

; 3709 : 
; 3710 : 		address_elements[1].guidDataType = DPAID_INet;

  00099	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0009e	c1 e0 00	 shl	 eax, 0
  000a1	8d 4c 05 b4	 lea	 ecx, DWORD PTR _address_elements$4[ebp+eax]
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_INet
  000ab	89 11		 mov	 DWORD PTR [ecx], edx
  000ad	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_INet+4
  000b2	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000b5	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_INet+8
  000bb	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  000be	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_INet+12
  000c3	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 3711 : 		address_elements[1].dwDataSize = strlen ( ip_address ) + 1;

  000c6	8b 45 08	 mov	 eax, DWORD PTR _ip_address$[ebp]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 _strlen
  000cf	83 c4 04	 add	 esp, 4
  000d2	83 c0 01	 add	 eax, 1
  000d5	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000da	c1 e1 00	 shl	 ecx, 0
  000dd	89 44 0d c4	 mov	 DWORD PTR _address_elements$4[ebp+ecx+16], eax

; 3712 : 		address_elements[1].lpData = ( void * ) ip_address;

  000e1	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000e6	c1 e0 00	 shl	 eax, 0
  000e9	8b 4d 08	 mov	 ecx, DWORD PTR _ip_address$[ebp]
  000ec	89 4c 05 c8	 mov	 DWORD PTR _address_elements$4[ebp+eax+20], ecx

; 3713 : 
; 3714 : 		//
; 3715 : 		// Find the size of memory to store the address
; 3716 : 		//
; 3717 : 
; 3718 : 		ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, 2, NULL, &address_size );

  000f0	8d 45 a8	 lea	 eax, DWORD PTR _address_size$1[ebp]
  000f3	50		 push	 eax
  000f4	6a 00		 push	 0
  000f6	6a 02		 push	 2
  000f8	8d 4d b4	 lea	 ecx, DWORD PTR _address_elements$4[ebp]
  000fb	51		 push	 ecx
  000fc	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  000ff	8b 02		 mov	 eax, DWORD PTR [edx]
  00101	8b 4d ac	 mov	 ecx, DWORD PTR _direct_play_lobby$2[ebp]
  00104	51		 push	 ecx
  00105	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00108	ff d2		 call	 edx
  0010a	89 45 fc	 mov	 DWORD PTR _ret$5[ebp], eax

; 3719 : 
; 3720 : 		if ( ret != DPERR_BUFFERTOOSMALL )

  0010d	81 7d fc 1e 00
	77 88		 cmp	 DWORD PTR _ret$5[ebp], -2005467106 ; 8877001eH
  00114	74 20		 je	 SHORT $LN4@set_direct

; 3721 : 		{
; 3722 : 
; 3723 : 			IDirectPlayLobby_Release ( direct_play_lobby );

  00116	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  00119	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011b	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  0011e	52		 push	 edx
  0011f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00122	ff d0		 call	 eax

; 3724 : 
; 3725 : 			debug_log ( "DIRECTP: Unable to establish how big the compound address is" );

  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@
  00129	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0012e	83 c4 04	 add	 esp, 4

; 3726 : 
; 3727 : 			return;

  00131	e9 d2 00 00 00	 jmp	 $LN1@set_direct
$LN4@set_direct:

; 3728 : 		}
; 3729 : 
; 3730 : 		address = safe_malloc ( address_size );

  00136	8b 45 a8	 mov	 eax, DWORD PTR _address_size$1[ebp]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0013f	89 45 b0	 mov	 DWORD PTR _address$3[ebp], eax

; 3731 : 
; 3732 : 		//
; 3733 : 		// Now fill the memory with the address
; 3734 : 		//
; 3735 : 
; 3736 : 		ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, 2, address, &address_size );

  00142	8d 45 a8	 lea	 eax, DWORD PTR _address_size$1[ebp]
  00145	50		 push	 eax
  00146	8b 4d b0	 mov	 ecx, DWORD PTR _address$3[ebp]
  00149	51		 push	 ecx
  0014a	6a 02		 push	 2
  0014c	8d 55 b4	 lea	 edx, DWORD PTR _address_elements$4[ebp]
  0014f	52		 push	 edx
  00150	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  00153	8b 08		 mov	 ecx, DWORD PTR [eax]
  00155	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  00158	52		 push	 edx
  00159	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  0015c	ff d0		 call	 eax
  0015e	89 45 fc	 mov	 DWORD PTR _ret$5[ebp], eax

; 3737 : 
; 3738 : 		if ( ret != DP_OK )

  00161	83 7d fc 00	 cmp	 DWORD PTR _ret$5[ebp], 0
  00165	74 20		 je	 SHORT $LN5@set_direct

; 3739 : 		{
; 3740 : 
; 3741 : 			IDirectPlayLobby_Release ( direct_play_lobby );

  00167	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  0016a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016c	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  0016f	52		 push	 edx
  00170	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00173	ff d0		 call	 eax

; 3742 : 
; 3743 : 			debug_log ( "DIRECTP: Unable to create a compound address" );

  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@
  0017a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0017f	83 c4 04	 add	 esp, 4

; 3744 : 
; 3745 : 			return;

  00182	e9 81 00 00 00	 jmp	 $LN1@set_direct
$LN5@set_direct:

; 3746 : 		}
; 3747 : 
; 3748 : 		//
; 3749 : 		// Now usurp the original connection data
; 3750 : 		//
; 3751 : 
; 3752 : 		if ( connection_data.service_provider.connection )

  00187	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  0018e	74 5d		 je	 SHORT $LN6@set_direct

; 3753 : 		{
; 3754 : 
; 3755 : 			if ( connection_data.service_provider.connection )

  00190	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  00197	74 1b		 je	 SHORT $LN7@set_direct

; 3756 : 			{
; 3757 : 
; 3758 : 				safe_free ( connection_data.service_provider.connection );

  00199	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  0019e	50		 push	 eax
  0019f	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 3759 : 
; 3760 : 				connection_data.service_provider.connection = address;

  001a4	8b 45 b0	 mov	 eax, DWORD PTR _address$3[ebp]
  001a7	a3 18 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, eax

; 3761 : 
; 3762 : 				connection_data.service_provider.connection_size = address_size;

  001ac	8b 45 a8	 mov	 eax, DWORD PTR _address_size$1[ebp]
  001af	a3 1c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+28, eax
$LN7@set_direct:

; 3763 : 			}
; 3764 : 
; 3765 : 			//
; 3766 : 			// Replace the directplay interface
; 3767 : 			//
; 3768 : 
; 3769 : 			create_direct_play_interface ();

  001b4	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 3770 : 
; 3771 : 			ret = IDirectPlayX_InitializeConnection ( direct_playx, connection_data.service_provider.connection, 0 );

  001b9	6a 00		 push	 0
  001bb	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  001c0	50		 push	 eax
  001c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  001c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  001ce	50		 push	 eax
  001cf	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  001d5	ff d1		 call	 ecx
  001d7	89 45 fc	 mov	 DWORD PTR _ret$5[ebp], eax

; 3772 : 
; 3773 : 			if ( ret != 0 )

  001da	83 7d fc 00	 cmp	 DWORD PTR _ret$5[ebp], 0
  001de	74 0d		 je	 SHORT $LN6@set_direct

; 3774 : 			{
; 3775 : 
; 3776 : 				debug_log ( "DIRECTP: Unable to initialize connection on the new IP address" );

  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@CCODGCM@DIRECTP?3?5Unable?5to?5initialize?5c@
  001e5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001ea	83 c4 04	 add	 esp, 4
$LN6@set_direct:

; 3777 : 			}
; 3778 : 		}
; 3779 : 
; 3780 : 		IDirectPlayLobby_Release ( direct_play_lobby );

  001ed	8b 45 ac	 mov	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  001f0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f2	8b 55 ac	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  001f5	52		 push	 edx
  001f6	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001f9	ff d0		 call	 eax

; 3781 : 
; 3782 : 		debug_log ( "DIRECTP: CREATED A COMPOUND ADDRESS FOR THE TCPIP SERVICE PROVIDER!" );

  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@CNLDHKNE@DIRECTP?3?5CREATED?5A?5COMPOUND?5ADD@
  00200	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00205	83 c4 04	 add	 esp, 4
$LN1@set_direct:

; 3783 : 	}
; 3784 : }

  00208	5f		 pop	 edi
  00209	5e		 pop	 esi
  0020a	5b		 pop	 ebx
  0020b	8b e5		 mov	 esp, ebp
  0020d	5d		 pop	 ebp
  0020e	c2 04 00	 ret	 4
?set_direct_play_inet_address@@YGXPBD@Z ENDP		; set_direct_play_inet_address
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_answer_modem_status@@YGJXZ
_TEXT	SEGMENT
?direct_play_answer_modem_status@@YGJXZ PROC		; direct_play_answer_modem_status, COMDAT

; 1874 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1875 : 
; 1876 : 	//
; 1877 : 	// Swap threads to the main system thread to open the modem
; 1878 : 	//
; 1879 : 
; 1880 : 	return ( system_thread_function ( internal_direct_play_answer_modem_status, NULL ) );

  00009	6a 00		 push	 0
  0000b	68 00 00 00 00	 push	 OFFSET ?internal_direct_play_answer_modem_status@@YGHPAX@Z ; internal_direct_play_answer_modem_status
  00010	e8 00 00 00 00	 call	 ?system_thread_function@@YGHP6GHPAX@Z0@Z ; system_thread_function

; 1881 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?direct_play_answer_modem_status@@YGJXZ ENDP		; direct_play_answer_modem_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_answer_modem@@YGHPBDH@Z
_TEXT	SEGMENT
_ret$ = -116						; size = 4
_address$ = -112					; size = 4
_number_of_elements$ = -108				; size = 4
_address_size$ = -104					; size = 4
_direct_play_lobby$ = -100				; size = 4
_address_elements$ = -96				; size = 96
_modem$ = 8						; size = 4
_user_data$ = 12					; size = 4
?direct_play_answer_modem@@YGHPBDH@Z PROC		; direct_play_answer_modem, COMDAT

; 1675 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1676 : 
; 1677 : 	DPCOMPOUNDADDRESSELEMENT
; 1678 : 		address_elements[4];
; 1679 : 
; 1680 : 	LPDIRECTPLAYLOBBY3A
; 1681 : 		direct_play_lobby;
; 1682 : 
; 1683 : 	DWORD
; 1684 : 		address_size;
; 1685 : 
; 1686 : 	int
; 1687 : 		number_of_elements;
; 1688 : 
; 1689 : 	LPVOID
; 1690 : 		address;
; 1691 : 
; 1692 : 	HRESULT
; 1693 : 		ret;
; 1694 : 
; 1695 : 	//
; 1696 : 	// Create a lobby
; 1697 : 	//
; 1698 : 
; 1699 : 	ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &direct_play_lobby );

  0000c	8d 45 9c	 lea	 eax, DWORD PTR _direct_play_lobby$[ebp]
  0000f	50		 push	 eax
  00010	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  00015	6a 01		 push	 1
  00017	6a 00		 push	 0
  00019	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00024	89 45 8c	 mov	 DWORD PTR _ret$[ebp], eax

; 1700 : 
; 1701 : 	if ( ret != DP_OK )

  00027	83 7d 8c 00	 cmp	 DWORD PTR _ret$[ebp], 0
  0002b	74 14		 je	 SHORT $LN2@direct_pla

; 1702 : 	{
; 1703 : 
; 1704 : 		debug_log ( "DIRECTP: UNABLE TO CREATE A DIRECTPLAYLOBBY3 interface" );

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
  00032	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00037	83 c4 04	 add	 esp, 4

; 1705 : 
; 1706 : 		return ( FALSE );

  0003a	33 c0		 xor	 eax, eax
  0003c	e9 87 01 00 00	 jmp	 $LN1@direct_pla
$LN2@direct_pla:

; 1707 : 	}
; 1708 : 
; 1709 : 	//
; 1710 : 	// Modem needs a modem & phone number
; 1711 : 	//
; 1712 : 
; 1713 : 	number_of_elements = 0;

  00041	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _number_of_elements$[ebp], 0

; 1714 : 
; 1715 : 	address_elements[number_of_elements].guidDataType = DPAID_ServiceProvider;

  00048	6b 45 94 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  0004c	8d 4c 05 a0	 lea	 ecx, DWORD PTR _address_elements$[ebp+eax]
  00050	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_ServiceProvider
  00056	89 11		 mov	 DWORD PTR [ecx], edx
  00058	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider+4
  0005d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00060	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_ServiceProvider+8
  00066	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00069	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider+12
  0006e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1716 : 	address_elements[number_of_elements].dwDataSize = sizeof ( GUID );

  00071	6b 45 94 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  00075	c7 44 05 b0 10
	00 00 00	 mov	 DWORD PTR _address_elements$[ebp+eax+16], 16 ; 00000010H

; 1717 : 	address_elements[number_of_elements].lpData = ( LPVOID ) &DPSPGUID_MODEM;

  0007d	6b 45 94 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  00081	c7 44 05 b4 00
	00 00 00	 mov	 DWORD PTR _address_elements$[ebp+eax+20], OFFSET _DPSPGUID_MODEM

; 1718 : 	number_of_elements++;

  00089	8b 45 94	 mov	 eax, DWORD PTR _number_of_elements$[ebp]
  0008c	83 c0 01	 add	 eax, 1
  0008f	89 45 94	 mov	 DWORD PTR _number_of_elements$[ebp], eax

; 1719 : 
; 1720 : 	if ( modem )

  00092	83 7d 08 00	 cmp	 DWORD PTR _modem$[ebp], 0
  00096	74 54		 je	 SHORT $LN3@direct_pla

; 1721 : 	{
; 1722 : 
; 1723 : 		address_elements[number_of_elements].guidDataType = DPAID_Modem;

  00098	6b 45 94 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  0009c	8d 4c 05 a0	 lea	 ecx, DWORD PTR _address_elements$[ebp+eax]
  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_Modem
  000a6	89 11		 mov	 DWORD PTR [ecx], edx
  000a8	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_Modem+4
  000ad	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000b0	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_Modem+8
  000b6	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  000b9	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_Modem+12
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1724 : 		address_elements[number_of_elements].dwDataSize = strlen ( modem ) + 1;

  000c1	8b 45 08	 mov	 eax, DWORD PTR _modem$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 _strlen
  000ca	83 c4 04	 add	 esp, 4
  000cd	83 c0 01	 add	 eax, 1
  000d0	6b 4d 94 18	 imul	 ecx, DWORD PTR _number_of_elements$[ebp], 24
  000d4	89 44 0d b0	 mov	 DWORD PTR _address_elements$[ebp+ecx+16], eax

; 1725 : 		address_elements[number_of_elements].lpData = ( LPSTR ) modem;

  000d8	6b 45 94 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _modem$[ebp]
  000df	89 4c 05 b4	 mov	 DWORD PTR _address_elements$[ebp+eax+20], ecx

; 1726 : 		number_of_elements++;

  000e3	8b 45 94	 mov	 eax, DWORD PTR _number_of_elements$[ebp]
  000e6	83 c0 01	 add	 eax, 1
  000e9	89 45 94	 mov	 DWORD PTR _number_of_elements$[ebp], eax
$LN3@direct_pla:

; 1727 : 	}
; 1728 : 
; 1729 : 	//
; 1730 : 	// Find the size of memory to store the address
; 1731 : 	//
; 1732 : 
; 1733 : 	ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, number_of_elements, NULL, &address_size );

  000ec	8d 45 98	 lea	 eax, DWORD PTR _address_size$[ebp]
  000ef	50		 push	 eax
  000f0	6a 00		 push	 0
  000f2	8b 4d 94	 mov	 ecx, DWORD PTR _number_of_elements$[ebp]
  000f5	51		 push	 ecx
  000f6	8d 55 a0	 lea	 edx, DWORD PTR _address_elements$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 9c	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  000fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ff	8b 55 9c	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  00102	52		 push	 edx
  00103	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00106	ff d0		 call	 eax
  00108	89 45 8c	 mov	 DWORD PTR _ret$[ebp], eax

; 1734 : 
; 1735 : 	if ( ret != DPERR_BUFFERTOOSMALL )

  0010b	81 7d 8c 1e 00
	77 88		 cmp	 DWORD PTR _ret$[ebp], -2005467106 ; 8877001eH
  00112	74 22		 je	 SHORT $LN4@direct_pla

; 1736 : 	{
; 1737 : 
; 1738 : 		IDirectPlayLobby_Release ( direct_play_lobby );

  00114	8b 45 9c	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	8b 55 9c	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  0011c	52		 push	 edx
  0011d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00120	ff d0		 call	 eax

; 1739 : 
; 1740 : 		debug_log ( "DIRECTP: Unable to establish how big the compound address is" );

  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@
  00127	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0012c	83 c4 04	 add	 esp, 4

; 1741 : 
; 1742 : 		return ( FALSE );

  0012f	33 c0		 xor	 eax, eax
  00131	e9 92 00 00 00	 jmp	 $LN1@direct_pla
$LN4@direct_pla:

; 1743 : 	}
; 1744 : 
; 1745 : 	address = safe_malloc ( address_size );

  00136	8b 45 98	 mov	 eax, DWORD PTR _address_size$[ebp]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0013f	89 45 90	 mov	 DWORD PTR _address$[ebp], eax

; 1746 : 
; 1747 : 	//
; 1748 : 	// Now fill the memory with the address
; 1749 : 	//
; 1750 : 
; 1751 : 	ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, number_of_elements, address, &address_size );

  00142	8d 45 98	 lea	 eax, DWORD PTR _address_size$[ebp]
  00145	50		 push	 eax
  00146	8b 4d 90	 mov	 ecx, DWORD PTR _address$[ebp]
  00149	51		 push	 ecx
  0014a	8b 55 94	 mov	 edx, DWORD PTR _number_of_elements$[ebp]
  0014d	52		 push	 edx
  0014e	8d 45 a0	 lea	 eax, DWORD PTR _address_elements$[ebp]
  00151	50		 push	 eax
  00152	8b 4d 9c	 mov	 ecx, DWORD PTR _direct_play_lobby$[ebp]
  00155	8b 11		 mov	 edx, DWORD PTR [ecx]
  00157	8b 45 9c	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  0015a	50		 push	 eax
  0015b	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  0015e	ff d1		 call	 ecx
  00160	89 45 8c	 mov	 DWORD PTR _ret$[ebp], eax

; 1752 : 
; 1753 : 	if ( ret != DP_OK )

  00163	83 7d 8c 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00167	74 1f		 je	 SHORT $LN5@direct_pla

; 1754 : 	{
; 1755 : 
; 1756 : 		IDirectPlayLobby_Release ( direct_play_lobby );

  00169	8b 45 9c	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  0016c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016e	8b 55 9c	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  00171	52		 push	 edx
  00172	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00175	ff d0		 call	 eax

; 1757 : 
; 1758 : 		debug_log ( "DIRECTP: Unable to create a compound address" );

  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@
  0017c	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00181	83 c4 04	 add	 esp, 4

; 1759 : 
; 1760 : 		return ( FALSE );

  00184	33 c0		 xor	 eax, eax
  00186	eb 40		 jmp	 SHORT $LN1@direct_pla
$LN5@direct_pla:

; 1761 : 	}
; 1762 : 
; 1763 : 	//
; 1764 : 	// Release the lobby
; 1765 : 	//
; 1766 : 
; 1767 : 	IDirectPlayLobby_Release ( direct_play_lobby );

  00188	8b 45 9c	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  0018b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018d	8b 55 9c	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  00190	52		 push	 edx
  00191	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00194	ff d0		 call	 eax

; 1768 : 
; 1769 : 	//
; 1770 : 	// Override the previous connection address
; 1771 : 	//
; 1772 : 
; 1773 : 	if ( connection_data.service_provider.connection )

  00196	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  0019d	74 1b		 je	 SHORT $LN6@direct_pla

; 1774 : 	{
; 1775 : 
; 1776 : 		safe_free ( connection_data.service_provider.connection );

  0019f	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1777 : 
; 1778 : 		connection_data.service_provider.connection = address;

  001aa	8b 45 90	 mov	 eax, DWORD PTR _address$[ebp]
  001ad	a3 18 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, eax

; 1779 : 
; 1780 : 		connection_data.service_provider.connection_size = address_size;

  001b2	8b 45 98	 mov	 eax, DWORD PTR _address_size$[ebp]
  001b5	a3 1c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+28, eax
$LN6@direct_pla:

; 1781 : 	}
; 1782 : 
; 1783 : 	//
; 1784 : 	// Swap threads to the main system thread to open the modem
; 1785 : 	//
; 1786 : 
; 1787 : 	return ( system_thread_function ( internal_direct_play_answer_modem, &user_data ) );

  001ba	8d 45 0c	 lea	 eax, DWORD PTR _user_data$[ebp]
  001bd	50		 push	 eax
  001be	68 00 00 00 00	 push	 OFFSET ?internal_direct_play_answer_modem@@YGHPAX@Z ; internal_direct_play_answer_modem
  001c3	e8 00 00 00 00	 call	 ?system_thread_function@@YGHP6GHPAX@Z0@Z ; system_thread_function
$LN1@direct_pla:

; 1788 : }

  001c8	5f		 pop	 edi
  001c9	5e		 pop	 esi
  001ca	5b		 pop	 ebx
  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c2 08 00	 ret	 8
?direct_play_answer_modem@@YGHPBDH@Z ENDP		; direct_play_answer_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_dial_modem_status@@YGJXZ
_TEXT	SEGMENT
_ret$ = -84						; size = 4
_sessionDesc$ = -80					; size = 80
?direct_play_dial_modem_status@@YGJXZ PROC		; direct_play_dial_modem_status, COMDAT

; 1610 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1611 : 
; 1612 : 	DPSESSIONDESC2
; 1613 : 		sessionDesc;
; 1614 : 
; 1615 : 	HRESULT
; 1616 : 		ret;
; 1617 : 
; 1618 : 	//
; 1619 : 	// Now dial the phone.
; 1620 : 	//
; 1621 : 
; 1622 : 	memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  0000c	6a 50		 push	 80			; 00000050H
  0000e	6a 00		 push	 0
  00010	8d 45 b0	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1623 : 
; 1624 : 	sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  0001c	c7 45 b0 50 00
	00 00		 mov	 DWORD PTR _sessionDesc$[ebp], 80 ; 00000050H

; 1625 : 
; 1626 : 	sessionDesc.guidApplication = TEST_GUID;

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  00028	89 45 c8	 mov	 DWORD PTR _sessionDesc$[ebp+24], eax
  0002b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  00031	89 4d cc	 mov	 DWORD PTR _sessionDesc$[ebp+28], ecx
  00034	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  0003a	89 55 d0	 mov	 DWORD PTR _sessionDesc$[ebp+32], edx
  0003d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  00042	89 45 d4	 mov	 DWORD PTR _sessionDesc$[ebp+36], eax

; 1627 : 
; 1628 : 	ret = IDirectPlayX_EnumSessions ( direct_playx, &sessionDesc, 0, ( LPDPENUMSESSIONSCALLBACK2 ) direct_play_enumerate_sessions_callback,

  00045	68 91 00 00 00	 push	 145			; 00000091H
  0004a	6a 00		 push	 0
  0004c	68 00 00 00 00	 push	 OFFSET ?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z ; direct_play_enumerate_sessions_callback
  00051	6a 00		 push	 0
  00053	8d 45 b0	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00056	50		 push	 eax
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00064	50		 push	 eax
  00065	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  00068	ff d1		 call	 ecx
  0006a	89 45 ac	 mov	 DWORD PTR _ret$[ebp], eax

; 1629 : 													NULL,
; 1630 : 													DPENUMSESSIONS_AVAILABLE |
; 1631 : 													DPENUMSESSIONS_ASYNC |
; 1632 : 													DPENUMSESSIONS_RETURNSTATUS );
; 1633 : 
; 1634 : 	return ( ret );

  0006d	8b 45 ac	 mov	 eax, DWORD PTR _ret$[ebp]

; 1635 : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
?direct_play_dial_modem_status@@YGJXZ ENDP		; direct_play_dial_modem_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_dial_modem@@YGHPBD0@Z
_TEXT	SEGMENT
_destroy_session$ = -124				; size = 4
_current_session$ = -120				; size = 4
_number_of_elements$ = -116				; size = 4
_address_size$ = -112					; size = 4
_direct_play_lobby$ = -108				; size = 4
_address$ = -104					; size = 4
_address_elements$ = -100				; size = 96
_ret$ = -4						; size = 4
_modem$ = 8						; size = 4
_phone_number$ = 12					; size = 4
?direct_play_dial_modem@@YGHPBD0@Z PROC			; direct_play_dial_modem, COMDAT

; 1375 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec bc 00 00
	00		 sub	 esp, 188		; 000000bcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1376 : 
; 1377 : 	HRESULT
; 1378 : 		ret;
; 1379 : 
; 1380 : 	DPCOMPOUNDADDRESSELEMENT
; 1381 : 		address_elements[4];
; 1382 : 
; 1383 : 	LPVOID
; 1384 : 		address;
; 1385 : 
; 1386 : 	LPDIRECTPLAYLOBBY3A
; 1387 : 		direct_play_lobby;
; 1388 : 
; 1389 : 	DWORD
; 1390 : 		address_size;
; 1391 : 
; 1392 : 	int
; 1393 : 		number_of_elements;
; 1394 : 
; 1395 : 	session_table_type
; 1396 : 		*current_session,
; 1397 : 		*destroy_session;
; 1398 : 
; 1399 : 	ASSERT ( modem );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _modem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@direct_pla
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??direct_play_dial_modem@@YGHPBD0@Z@4JA
  00017	83 c0 18	 add	 eax, 24			; 00000018H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GMJOCJCH@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_05MLDONODB@modem@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@direct_pla:

; 1400 : 	ASSERT ( phone_number );

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _phone_number$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN5@direct_pla
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??direct_play_dial_modem@@YGHPBD0@Z@4JA
  00035	83 c0 19	 add	 eax, 25			; 00000019H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GMJOCJCH@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NBCPJJLC@phone_number@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@direct_pla:

; 1401 : 
; 1402 : 	//
; 1403 : 	// Destroy all sessions
; 1404 : 	//
; 1405 : 
; 1406 : 	current_session = session_table;

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  0004d	89 45 88	 mov	 DWORD PTR _current_session$[ebp], eax
$LN2@direct_pla:

; 1407 : 
; 1408 : 	while ( current_session )

  00050	83 7d 88 00	 cmp	 DWORD PTR _current_session$[ebp], 0
  00054	74 52		 je	 SHORT $LN3@direct_pla

; 1409 : 	{
; 1410 : 
; 1411 : 		destroy_session = current_session;

  00056	8b 45 88	 mov	 eax, DWORD PTR _current_session$[ebp]
  00059	89 45 84	 mov	 DWORD PTR _destroy_session$[ebp], eax

; 1412 : 
; 1413 : 		current_session = current_session->next_session;

  0005c	8b 45 88	 mov	 eax, DWORD PTR _current_session$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d 88	 mov	 DWORD PTR _current_session$[ebp], ecx

; 1414 : 
; 1415 : 		if ( destroy_session->session )

  00065	8b 45 84	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00068	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0006c	74 2f		 je	 SHORT $LN6@direct_pla

; 1416 : 		{
; 1417 : 
; 1418 : 			if ( !destroy_session->lobby_session )

  0006e	8b 45 84	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00071	83 38 00	 cmp	 DWORD PTR [eax], 0
  00074	75 1b		 jne	 SHORT $LN7@direct_pla

; 1419 : 			{
; 1420 : 	
; 1421 : 				if ( destroy_session->session->lpszSessionNameA )

  00076	8b 45 84	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	83 79 30 00	 cmp	 DWORD PTR [ecx+48], 0
  00080	74 0f		 je	 SHORT $LN7@direct_pla

; 1422 : 				{
; 1423 : 	
; 1424 : 					safe_free ( destroy_session->session->lpszSessionNameA );

  00082	8b 45 84	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00085	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00088	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0008b	52		 push	 edx
  0008c	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN7@direct_pla:

; 1425 : 				}
; 1426 : 			}
; 1427 : 
; 1428 : 			safe_free ( destroy_session->session );

  00091	8b 45 84	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00094	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN6@direct_pla:

; 1429 : 		}
; 1430 : 
; 1431 : 		safe_free ( destroy_session );

  0009d	8b 45 84	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1432 : 	}

  000a6	eb a8		 jmp	 SHORT $LN2@direct_pla
$LN3@direct_pla:

; 1433 : 
; 1434 : 	session_table = NULL;

  000a8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, 0

; 1435 : 
; 1436 : 	//
; 1437 : 	// Create a lobby
; 1438 : 	//
; 1439 : 
; 1440 : 	ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &direct_play_lobby );

  000b2	8d 45 94	 lea	 eax, DWORD PTR _direct_play_lobby$[ebp]
  000b5	50		 push	 eax
  000b6	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  000bb	6a 01		 push	 1
  000bd	6a 00		 push	 0
  000bf	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  000ca	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1441 : 
; 1442 : 	if ( ret != DP_OK )

  000cd	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  000d1	74 14		 je	 SHORT $LN9@direct_pla

; 1443 : 	{
; 1444 : 
; 1445 : 		debug_log ( "DIRECTP: UNABLE TO CREATE A DIRECTPLAYLOBBY3 interface" );

  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@LGDDBFMM@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
  000d8	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000dd	83 c4 04	 add	 esp, 4

; 1446 : 
; 1447 : 		return ( FALSE );

  000e0	33 c0		 xor	 eax, eax
  000e2	e9 da 01 00 00	 jmp	 $LN1@direct_pla
$LN9@direct_pla:

; 1448 : 	}
; 1449 : 
; 1450 : 	//
; 1451 : 	// Modem needs a modem & phone number
; 1452 : 	//
; 1453 : 
; 1454 : 	number_of_elements = 0;

  000e7	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _number_of_elements$[ebp], 0

; 1455 : 
; 1456 : 	address_elements[number_of_elements].guidDataType = DPAID_ServiceProvider;

  000ee	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  000f2	8d 4c 05 9c	 lea	 ecx, DWORD PTR _address_elements$[ebp+eax]
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_ServiceProvider
  000fc	89 11		 mov	 DWORD PTR [ecx], edx
  000fe	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider+4
  00103	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00106	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_ServiceProvider+8
  0010c	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0010f	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_ServiceProvider+12
  00114	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1457 : 	address_elements[number_of_elements].dwDataSize = sizeof ( GUID );

  00117	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  0011b	c7 44 05 ac 10
	00 00 00	 mov	 DWORD PTR _address_elements$[ebp+eax+16], 16 ; 00000010H

; 1458 : 	address_elements[number_of_elements].lpData = ( LPVOID ) &DPSPGUID_MODEM;

  00123	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  00127	c7 44 05 b0 00
	00 00 00	 mov	 DWORD PTR _address_elements$[ebp+eax+20], OFFSET _DPSPGUID_MODEM

; 1459 : 	number_of_elements++;

  0012f	8b 45 8c	 mov	 eax, DWORD PTR _number_of_elements$[ebp]
  00132	83 c0 01	 add	 eax, 1
  00135	89 45 8c	 mov	 DWORD PTR _number_of_elements$[ebp], eax

; 1460 : 
; 1461 : 	address_elements[number_of_elements].guidDataType = DPAID_Modem;

  00138	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  0013c	8d 4c 05 9c	 lea	 ecx, DWORD PTR _address_elements$[ebp+eax]
  00140	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_Modem
  00146	89 11		 mov	 DWORD PTR [ecx], edx
  00148	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_Modem+4
  0014d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00150	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_Modem+8
  00156	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00159	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_Modem+12
  0015e	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1462 : 	address_elements[number_of_elements].dwDataSize = strlen ( modem ) + 1;

  00161	8b 45 08	 mov	 eax, DWORD PTR _modem$[ebp]
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 _strlen
  0016a	83 c4 04	 add	 esp, 4
  0016d	83 c0 01	 add	 eax, 1
  00170	6b 4d 8c 18	 imul	 ecx, DWORD PTR _number_of_elements$[ebp], 24
  00174	89 44 0d ac	 mov	 DWORD PTR _address_elements$[ebp+ecx+16], eax

; 1463 : 	address_elements[number_of_elements].lpData = ( LPSTR ) modem;

  00178	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  0017c	8b 4d 08	 mov	 ecx, DWORD PTR _modem$[ebp]
  0017f	89 4c 05 b0	 mov	 DWORD PTR _address_elements$[ebp+eax+20], ecx

; 1464 : 	number_of_elements++;

  00183	8b 45 8c	 mov	 eax, DWORD PTR _number_of_elements$[ebp]
  00186	83 c0 01	 add	 eax, 1
  00189	89 45 8c	 mov	 DWORD PTR _number_of_elements$[ebp], eax

; 1465 : 	
; 1466 : 	address_elements[number_of_elements].guidDataType = DPAID_Phone;

  0018c	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  00190	8d 4c 05 9c	 lea	 ecx, DWORD PTR _address_elements$[ebp+eax]
  00194	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _DPAID_Phone
  0019a	89 11		 mov	 DWORD PTR [ecx], edx
  0019c	a1 04 00 00 00	 mov	 eax, DWORD PTR _DPAID_Phone+4
  001a1	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  001a4	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _DPAID_Phone+8
  001aa	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  001ad	a1 0c 00 00 00	 mov	 eax, DWORD PTR _DPAID_Phone+12
  001b2	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1467 : 	address_elements[number_of_elements].dwDataSize = strlen ( phone_number ) + 1;

  001b5	8b 45 0c	 mov	 eax, DWORD PTR _phone_number$[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 _strlen
  001be	83 c4 04	 add	 esp, 4
  001c1	83 c0 01	 add	 eax, 1
  001c4	6b 4d 8c 18	 imul	 ecx, DWORD PTR _number_of_elements$[ebp], 24
  001c8	89 44 0d ac	 mov	 DWORD PTR _address_elements$[ebp+ecx+16], eax

; 1468 : 	address_elements[number_of_elements].lpData = ( LPSTR ) phone_number;

  001cc	6b 45 8c 18	 imul	 eax, DWORD PTR _number_of_elements$[ebp], 24
  001d0	8b 4d 0c	 mov	 ecx, DWORD PTR _phone_number$[ebp]
  001d3	89 4c 05 b0	 mov	 DWORD PTR _address_elements$[ebp+eax+20], ecx

; 1469 : 	number_of_elements++;

  001d7	8b 45 8c	 mov	 eax, DWORD PTR _number_of_elements$[ebp]
  001da	83 c0 01	 add	 eax, 1
  001dd	89 45 8c	 mov	 DWORD PTR _number_of_elements$[ebp], eax

; 1470 : 
; 1471 : 	//
; 1472 : 	// Find the size of memory to store the address
; 1473 : 	//
; 1474 : 
; 1475 : 	address_size = 0;

  001e0	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _address_size$[ebp], 0

; 1476 : 
; 1477 : 	ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, number_of_elements, NULL, &address_size );

  001e7	8d 45 90	 lea	 eax, DWORD PTR _address_size$[ebp]
  001ea	50		 push	 eax
  001eb	6a 00		 push	 0
  001ed	8b 4d 8c	 mov	 ecx, DWORD PTR _number_of_elements$[ebp]
  001f0	51		 push	 ecx
  001f1	8d 55 9c	 lea	 edx, DWORD PTR _address_elements$[ebp]
  001f4	52		 push	 edx
  001f5	8b 45 94	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  001f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fa	8b 55 94	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  001fd	52		 push	 edx
  001fe	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00201	ff d0		 call	 eax
  00203	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1478 : 
; 1479 : 	if ( ret != DPERR_BUFFERTOOSMALL )

  00206	81 7d fc 1e 00
	77 88		 cmp	 DWORD PTR _ret$[ebp], -2005467106 ; 8877001eH
  0020d	74 22		 je	 SHORT $LN10@direct_pla

; 1480 : 	{
; 1481 : 
; 1482 : 		IDirectPlayLobby_Release ( direct_play_lobby );

  0020f	8b 45 94	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  00212	8b 08		 mov	 ecx, DWORD PTR [eax]
  00214	8b 55 94	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  00217	52		 push	 edx
  00218	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0021b	ff d0		 call	 eax

; 1483 : 
; 1484 : 		debug_log ( "DIRECTP: Unable to establish how big the compound address is" );

  0021d	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@BDFFFPAJ@DIRECTP?3?5Unable?5to?5establish?5ho@
  00222	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00227	83 c4 04	 add	 esp, 4

; 1485 : 
; 1486 : 		return ( FALSE );

  0022a	33 c0		 xor	 eax, eax
  0022c	e9 90 00 00 00	 jmp	 $LN1@direct_pla
$LN10@direct_pla:

; 1487 : 	}
; 1488 : 
; 1489 : 	address = safe_malloc ( address_size );

  00231	8b 45 90	 mov	 eax, DWORD PTR _address_size$[ebp]
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0023a	89 45 98	 mov	 DWORD PTR _address$[ebp], eax

; 1490 : 
; 1491 : 	//
; 1492 : 	// Now fill the memory with the address
; 1493 : 	//
; 1494 : 
; 1495 : 	ret = IDirectPlayLobby_CreateCompoundAddress ( direct_play_lobby, address_elements, number_of_elements, address, &address_size );

  0023d	8d 45 90	 lea	 eax, DWORD PTR _address_size$[ebp]
  00240	50		 push	 eax
  00241	8b 4d 98	 mov	 ecx, DWORD PTR _address$[ebp]
  00244	51		 push	 ecx
  00245	8b 55 8c	 mov	 edx, DWORD PTR _number_of_elements$[ebp]
  00248	52		 push	 edx
  00249	8d 45 9c	 lea	 eax, DWORD PTR _address_elements$[ebp]
  0024c	50		 push	 eax
  0024d	8b 4d 94	 mov	 ecx, DWORD PTR _direct_play_lobby$[ebp]
  00250	8b 11		 mov	 edx, DWORD PTR [ecx]
  00252	8b 45 94	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  00255	50		 push	 eax
  00256	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  00259	ff d1		 call	 ecx
  0025b	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 1496 : 
; 1497 : 	if ( ret != DP_OK )

  0025e	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00262	74 1f		 je	 SHORT $LN11@direct_pla

; 1498 : 	{
; 1499 : 
; 1500 : 		IDirectPlayLobby_Release ( direct_play_lobby );

  00264	8b 45 94	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  00267	8b 08		 mov	 ecx, DWORD PTR [eax]
  00269	8b 55 94	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  0026c	52		 push	 edx
  0026d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00270	ff d0		 call	 eax

; 1501 : 
; 1502 : 		debug_log ( "DIRECTP: Unable to create a compound address" );

  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@ENJJAJJM@DIRECTP?3?5Unable?5to?5create?5a?5com@
  00277	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0027c	83 c4 04	 add	 esp, 4

; 1503 : 
; 1504 : 		return ( FALSE );

  0027f	33 c0		 xor	 eax, eax
  00281	eb 3e		 jmp	 SHORT $LN1@direct_pla
$LN11@direct_pla:

; 1505 : 	}
; 1506 : 
; 1507 : 	//
; 1508 : 	// Release the lobby
; 1509 : 	//
; 1510 : 
; 1511 : 	IDirectPlayLobby_Release ( direct_play_lobby );

  00283	8b 45 94	 mov	 eax, DWORD PTR _direct_play_lobby$[ebp]
  00286	8b 08		 mov	 ecx, DWORD PTR [eax]
  00288	8b 55 94	 mov	 edx, DWORD PTR _direct_play_lobby$[ebp]
  0028b	52		 push	 edx
  0028c	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0028f	ff d0		 call	 eax

; 1512 : 
; 1513 : 	//
; 1514 : 	// Now usurp the original connection data
; 1515 : 	//
; 1516 : 
; 1517 : 	if ( connection_data.service_provider.connection )

  00291	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  00298	74 0b		 je	 SHORT $LN12@direct_pla

; 1518 : 	{
; 1519 : 
; 1520 : 		safe_free ( connection_data.service_provider.connection );

  0029a	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  0029f	50		 push	 eax
  002a0	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN12@direct_pla:

; 1521 : 	}
; 1522 : 
; 1523 : 	connection_data.service_provider.connection = address;

  002a5	8b 45 98	 mov	 eax, DWORD PTR _address$[ebp]
  002a8	a3 18 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, eax

; 1524 : 
; 1525 : 	connection_data.service_provider.connection_size = address_size;

  002ad	8b 45 90	 mov	 eax, DWORD PTR _address_size$[ebp]
  002b0	a3 1c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+28, eax

; 1526 : 
; 1527 : 	//
; 1528 : 	// Swap threads to the main system thread to dial the modem
; 1529 : 	//
; 1530 : 
; 1531 : 	return ( system_thread_function ( internal_direct_play_dial_modem, NULL ) );

  002b5	6a 00		 push	 0
  002b7	68 00 00 00 00	 push	 OFFSET ?internal_direct_play_dial_modem@@YGHPAX@Z ; internal_direct_play_dial_modem
  002bc	e8 00 00 00 00	 call	 ?system_thread_function@@YGHP6GHPAX@Z0@Z ; system_thread_function
$LN1@direct_pla:

; 1532 : }

  002c1	5f		 pop	 edi
  002c2	5e		 pop	 esi
  002c3	5b		 pop	 ebx
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 08 00	 ret	 8
?direct_play_dial_modem@@YGHPBD0@Z ENDP			; direct_play_dial_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_destroy_modem@@YGXXZ
_TEXT	SEGMENT
?direct_play_destroy_modem@@YGXXZ PROC			; direct_play_destroy_modem, COMDAT

; 1345 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1346 : 
; 1347 : 	system_thread_function ( internal_direct_play_destroy_modem, NULL );

  00009	6a 00		 push	 0
  0000b	68 00 00 00 00	 push	 OFFSET ?internal_direct_play_destroy_modem@@YGHPAX@Z ; internal_direct_play_destroy_modem
  00010	e8 00 00 00 00	 call	 ?system_thread_function@@YGHP6GHPAX@Z0@Z ; system_thread_function

; 1348 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?direct_play_destroy_modem@@YGXXZ ENDP			; direct_play_destroy_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_session_type_and_name@@YGXH@Z
_TEXT	SEGMENT
_size$1 = -8						; size = 4
_hr$2 = -4						; size = 4
_value$ = 8						; size = 4
?direct_play_set_session_type_and_name@@YGXH@Z PROC	; direct_play_set_session_type_and_name, COMDAT

; 2030 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2031 : 
; 2032 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	0f 84 bf 00 00
	00		 je	 $LN1@direct_pla

; 2033 : 	{
; 2034 : 	
; 2035 : 		HRESULT
; 2036 : 			hr;
; 2037 : 	
; 2038 : 		int
; 2039 : 			size;
; 2040 : 	
; 2041 : 		//
; 2042 : 		// Get the current session description
; 2043 : 		//
; 2044 : 	
; 2045 : 		hr = IDirectPlayX_GetSessionDesc ( direct_playx, NULL, ( LPDWORD ) &size );

  00016	8d 45 f8	 lea	 eax, DWORD PTR _size$1[ebp]
  00019	50		 push	 eax
  0001a	6a 00		 push	 0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00029	50		 push	 eax
  0002a	8b 4a 58	 mov	 ecx, DWORD PTR [edx+88]
  0002d	ff d1		 call	 ecx
  0002f	89 45 fc	 mov	 DWORD PTR _hr$2[ebp], eax

; 2046 : 	
; 2047 : 		session_capabilities = ( LPVOID ) safe_malloc ( size );

  00032	8b 45 f8	 mov	 eax, DWORD PTR _size$1[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0003b	a3 00 00 00 00	 mov	 DWORD PTR ?session_capabilities@@3PAXA, eax

; 2048 : 	
; 2049 : 		hr = IDirectPlayX_GetSessionDesc ( direct_playx, ( LPVOID ) session_capabilities, ( LPDWORD ) &size );

  00040	8d 45 f8	 lea	 eax, DWORD PTR _size$1[ebp]
  00043	50		 push	 eax
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_capabilities@@3PAXA
  0004a	51		 push	 ecx
  0004b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00051	8b 02		 mov	 eax, DWORD PTR [edx]
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00059	51		 push	 ecx
  0005a	8b 50 58	 mov	 edx, DWORD PTR [eax+88]
  0005d	ff d2		 call	 edx
  0005f	89 45 fc	 mov	 DWORD PTR _hr$2[ebp], eax

; 2050 : 	
; 2051 : 		if ( hr == DP_OK )

  00062	83 7d fc 00	 cmp	 DWORD PTR _hr$2[ebp], 0
  00066	75 56		 jne	 SHORT $LN3@direct_pla

; 2052 : 		{
; 2053 : 
; 2054 : 			//
; 2055 : 			// Now set the new session description
; 2056 : 			//
; 2057 : 
; 2058 : 			( ( LPDPSESSIONDESC2 ) session_capabilities )->dwUser1 = value;

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA
  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _value$[ebp]
  00070	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 2059 : 			( ( LPDPSESSIONDESC2 ) session_capabilities )->lpszSessionName = ( LPWSTR ) connection_data.session_name;

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA
  00078	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4
  0007e	89 48 30	 mov	 DWORD PTR [eax+48], ecx

; 2060 : 
; 2061 : 
; 2062 : 			hr = IDirectPlayX_SetSessionDesc ( direct_playx, ( LPDPSESSIONDESC2 ) session_capabilities, 0 );

  00081	6a 00		 push	 0
  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA
  00088	50		 push	 eax
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00096	50		 push	 eax
  00097	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  0009a	ff d1		 call	 ecx
  0009c	89 45 fc	 mov	 DWORD PTR _hr$2[ebp], eax

; 2063 : 
; 2064 : 			if ( hr != DP_OK )

  0009f	83 7d fc 00	 cmp	 DWORD PTR _hr$2[ebp], 0
  000a3	74 17		 je	 SHORT $LN5@direct_pla

; 2065 : 			{
; 2066 : 
; 2067 : 				debug_log ( "Unable to set session description: %s", get_dplay_error_message ( hr ) );

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _hr$2[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000ae	50		 push	 eax
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@HEBGBFJJ@Unable?5to?5set?5session?5descripti@
  000b4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b9	83 c4 08	 add	 esp, 8
$LN5@direct_pla:

; 2068 : 			}
; 2069 : 		}
; 2070 : 		else

  000bc	eb 17		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2071 : 		{
; 2072 : 
; 2073 : 			debug_log ( "Unable to set session description: %s", get_dplay_error_message ( hr ) );

  000be	8b 45 fc	 mov	 eax, DWORD PTR _hr$2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000c7	50		 push	 eax
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@HEBGBFJJ@Unable?5to?5set?5session?5descripti@
  000cd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d2	83 c4 08	 add	 esp, 8
$LN1@direct_pla:

; 2074 : 		}
; 2075 : 	}
; 2076 : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c2 04 00	 ret	 4
?direct_play_set_session_type_and_name@@YGXH@Z ENDP	; direct_play_set_session_type_and_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_refresh_modem_session@@YGHXZ
_TEXT	SEGMENT
_size$1 = -20						; size = 4
_new_session$2 = -16					; size = 4
_destroy_session$ = -12					; size = 4
_current_session$ = -8					; size = 4
_hr$ = -4						; size = 4
?direct_play_refresh_modem_session@@YGHXZ PROC		; direct_play_refresh_modem_session, COMDAT

; 1239 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1240 : 
; 1241 : 	HRESULT
; 1242 : 		hr;
; 1243 : 
; 1244 : 	session_table_type
; 1245 : 		*current_session,
; 1246 : 		*destroy_session;
; 1247 : 
; 1248 : 	//
; 1249 : 	// clear the current session table
; 1250 : 	//
; 1251 : 
; 1252 : 	current_session = session_table;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  0000e	89 45 f8	 mov	 DWORD PTR _current_session$[ebp], eax
$LN2@direct_pla:

; 1253 : 
; 1254 : 	while ( current_session )

  00011	83 7d f8 00	 cmp	 DWORD PTR _current_session$[ebp], 0
  00015	74 52		 je	 SHORT $LN3@direct_pla

; 1255 : 	{
; 1256 : 
; 1257 : 		destroy_session = current_session;

  00017	8b 45 f8	 mov	 eax, DWORD PTR _current_session$[ebp]
  0001a	89 45 f4	 mov	 DWORD PTR _destroy_session$[ebp], eax

; 1258 : 
; 1259 : 		current_session = current_session->next_session;

  0001d	8b 45 f8	 mov	 eax, DWORD PTR _current_session$[ebp]
  00020	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00023	89 4d f8	 mov	 DWORD PTR _current_session$[ebp], ecx

; 1260 : 
; 1261 : 		if ( destroy_session->session )

  00026	8b 45 f4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00029	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002d	74 2f		 je	 SHORT $LN4@direct_pla

; 1262 : 		{
; 1263 : 
; 1264 : 			if ( !destroy_session->lobby_session )

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00032	83 38 00	 cmp	 DWORD PTR [eax], 0
  00035	75 1b		 jne	 SHORT $LN5@direct_pla

; 1265 : 			{
; 1266 : 	
; 1267 : 				if ( destroy_session->session->lpszSessionNameA )

  00037	8b 45 f4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  0003a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003d	83 79 30 00	 cmp	 DWORD PTR [ecx+48], 0
  00041	74 0f		 je	 SHORT $LN5@direct_pla

; 1268 : 				{
; 1269 : 	
; 1270 : 					safe_free ( destroy_session->session->lpszSessionNameA );

  00043	8b 45 f4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00046	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00049	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN5@direct_pla:

; 1271 : 				}
; 1272 : 			}
; 1273 : 
; 1274 : 			safe_free ( destroy_session->session );

  00052	8b 45 f4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00055	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN4@direct_pla:

; 1275 : 		}
; 1276 : 
; 1277 : 		safe_free ( destroy_session );

  0005e	8b 45 f4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1278 : 	}

  00067	eb a8		 jmp	 SHORT $LN2@direct_pla
$LN3@direct_pla:

; 1279 : 
; 1280 : 	session_table = NULL;

  00069	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, 0

; 1281 : 
; 1282 : 	//
; 1283 : 	// enumerate avaliable sessions
; 1284 : 	//
; 1285 : 
; 1286 : 	if ( direct_playx )

  00073	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  0007a	0f 84 d6 00 00
	00		 je	 $LN7@direct_pla

; 1287 : 	{
; 1288 : 
; 1289 : 		session_table_type
; 1290 : 			*new_session;
; 1291 : 
; 1292 : 		int
; 1293 : 			size;
; 1294 : 
; 1295 : 		new_session = ( session_table_type * ) safe_malloc ( sizeof ( session_table_type ) );

  00080	6a 0c		 push	 12			; 0000000cH
  00082	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00087	89 45 f0	 mov	 DWORD PTR _new_session$2[ebp], eax

; 1296 : 
; 1297 : 		new_session->lobby_session = FALSE;

  0008a	8b 45 f0	 mov	 eax, DWORD PTR _new_session$2[ebp]
  0008d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1298 : 
; 1299 : 		new_session->next_session = session_table;

  00093	8b 45 f0	 mov	 eax, DWORD PTR _new_session$2[ebp]
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  0009c	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1300 : 
; 1301 : 		session_table = new_session;

  0009f	8b 45 f0	 mov	 eax, DWORD PTR _new_session$2[ebp]
  000a2	a3 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, eax

; 1302 : 
; 1303 : 		hr = IDirectPlayX_GetSessionDesc ( direct_playx, NULL, ( LPDWORD ) &size );

  000a7	8d 45 ec	 lea	 eax, DWORD PTR _size$1[ebp]
  000aa	50		 push	 eax
  000ab	6a 00		 push	 0
  000ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000ba	50		 push	 eax
  000bb	8b 4a 58	 mov	 ecx, DWORD PTR [edx+88]
  000be	ff d1		 call	 ecx
  000c0	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1304 : 
; 1305 : 		if ( hr == DPERR_BUFFERTOOSMALL )

  000c3	81 7d fc 1e 00
	77 88		 cmp	 DWORD PTR _hr$[ebp], -2005467106 ; 8877001eH
  000ca	75 73		 jne	 SHORT $LN8@direct_pla

; 1306 : 		{
; 1307 : 	
; 1308 : 			new_session->session = ( LPDPSESSIONDESC2 ) safe_malloc ( size );

  000cc	8b 45 ec	 mov	 eax, DWORD PTR _size$1[ebp]
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _new_session$2[ebp]
  000d8	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1309 : 	
; 1310 : 			memset ( new_session->session, 0, size );

  000db	8b 45 ec	 mov	 eax, DWORD PTR _size$1[ebp]
  000de	50		 push	 eax
  000df	6a 00		 push	 0
  000e1	8b 4d f0	 mov	 ecx, DWORD PTR _new_session$2[ebp]
  000e4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e7	52		 push	 edx
  000e8	e8 00 00 00 00	 call	 _memset
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1311 : 	
; 1312 : 			hr = IDirectPlayX_GetSessionDesc ( direct_playx, ( LPVOID ) new_session->session, ( LPDWORD ) &size );

  000f0	8d 45 ec	 lea	 eax, DWORD PTR _size$1[ebp]
  000f3	50		 push	 eax
  000f4	8b 4d f0	 mov	 ecx, DWORD PTR _new_session$2[ebp]
  000f7	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000fa	52		 push	 edx
  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00100	8b 08		 mov	 ecx, DWORD PTR [eax]
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00108	52		 push	 edx
  00109	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  0010c	ff d0		 call	 eax
  0010e	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1313 : 	
; 1314 : 			if ( hr == DP_OK )

  00111	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00115	75 0f		 jne	 SHORT $LN10@direct_pla

; 1315 : 			{
; 1316 : 	
; 1317 : 				session_counter ++;

  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_counter@@3HA
  0011c	83 c0 01	 add	 eax, 1
  0011f	a3 00 00 00 00	 mov	 DWORD PTR ?session_counter@@3HA, eax

; 1318 : 			}
; 1319 : 			else

  00124	eb 17		 jmp	 SHORT $LN11@direct_pla
$LN10@direct_pla:

; 1320 : 			{
; 1321 : 	
; 1322 : 				debug_log ( "Directp: Refresh modem session: %s", get_dplay_error_message ( hr ) );

  00126	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0012f	50		 push	 eax
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@FJGAICN@Directp?3?5Refresh?5modem?5session?3@
  00135	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0013a	83 c4 08	 add	 esp, 8
$LN11@direct_pla:

; 1323 : 			}
; 1324 : 		}
; 1325 : 		else

  0013d	eb 17		 jmp	 SHORT $LN7@direct_pla
$LN8@direct_pla:

; 1326 : 		{
; 1327 : 
; 1328 : 			debug_log ( "Unable to get session description size: %s", get_dplay_error_message ( hr ) );

  0013f	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00148	50		 push	 eax
  00149	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@FDNPAAKP@Unable?5to?5get?5session?5descripti@
  0014e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00153	83 c4 08	 add	 esp, 8
$LN7@direct_pla:

; 1329 : 		}
; 1330 : 	}
; 1331 : 
; 1332 : 	direct_play_sort_session_list ();

  00156	e8 00 00 00 00	 call	 ?direct_play_sort_session_list@@YGXXZ ; direct_play_sort_session_list

; 1333 : 
; 1334 : 	return  ( session_counter );

  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_counter@@3HA

; 1335 : }

  00160	5f		 pop	 edi
  00161	5e		 pop	 esi
  00162	5b		 pop	 ebx
  00163	8b e5		 mov	 esp, ebp
  00165	5d		 pop	 ebp
  00166	c3		 ret	 0
?direct_play_refresh_modem_session@@YGHXZ ENDP		; direct_play_refresh_modem_session
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_session_max_players@@YGHXZ
_TEXT	SEGMENT
?direct_play_session_max_players@@YGHXZ PROC		; direct_play_session_max_players, COMDAT

; 2288 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2289 : 
; 2290 : 	return ( ( LPDPSESSIONDESC2 ) session_capabilities )->dwMaxPlayers;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA
  0000e	8b 40 28	 mov	 eax, DWORD PTR [eax+40]

; 2291 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?direct_play_session_max_players@@YGHXZ ENDP		; direct_play_session_max_players
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_connection_baudrate@@YGHXZ
_TEXT	SEGMENT
_hr$1 = -44						; size = 4
_caps$2 = -40						; size = 40
?direct_play_get_connection_baudrate@@YGHXZ PROC	; direct_play_get_connection_baudrate, COMDAT

; 1199 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1200 : 
; 1201 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 46		 je	 SHORT $LN2@direct_pla

; 1202 : 	{
; 1203 : 
; 1204 : 		DPCAPS
; 1205 : 			caps;
; 1206 : 
; 1207 : 		HRESULT
; 1208 : 			hr;
; 1209 : 
; 1210 : 		memset ( &caps, 0, sizeof ( DPCAPS ) );

  00012	6a 28		 push	 40			; 00000028H
  00014	6a 00		 push	 0
  00016	8d 45 d8	 lea	 eax, DWORD PTR _caps$2[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 _memset
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1211 : 
; 1212 : 		caps.dwSize = sizeof ( DPCAPS );

  00022	c7 45 d8 28 00
	00 00		 mov	 DWORD PTR _caps$2[ebp], 40 ; 00000028H

; 1213 : 
; 1214 : 		hr = IDirectPlayX_GetCaps ( direct_playx, &caps, 0 );

  00029	6a 00		 push	 0
  0002b	8d 45 d8	 lea	 eax, DWORD PTR _caps$2[ebp]
  0002e	50		 push	 eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0003c	50		 push	 eax
  0003d	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  00040	ff d1		 call	 ecx
  00042	89 45 d4	 mov	 DWORD PTR _hr$1[ebp], eax

; 1215 : 
; 1216 : 		if ( hr == DP_OK )

  00045	83 7d d4 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  00049	75 07		 jne	 SHORT $LN4@direct_pla

; 1217 : 		{
; 1218 : 
; 1219 : 			return ( caps.dwHundredBaud );

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _caps$2[ebp+20]
  0004e	eb 0a		 jmp	 SHORT $LN1@direct_pla

; 1220 : 		}
; 1221 : 		else

  00050	eb 04		 jmp	 SHORT $LN5@direct_pla
$LN4@direct_pla:

; 1222 : 		{
; 1223 : 
; 1224 : 			return ( 0 );

  00052	33 c0		 xor	 eax, eax
  00054	eb 04		 jmp	 SHORT $LN1@direct_pla
$LN5@direct_pla:

; 1225 : 		}
; 1226 : 	}
; 1227 : 	else

  00056	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 1228 : 	{
; 1229 : 
; 1230 : 		return ( 0 );

  00058	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 1231 : 	}
; 1232 : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?direct_play_get_connection_baudrate@@YGHXZ ENDP	; direct_play_get_connection_baudrate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_remove_player_from_group@@YGHK@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_id$ = 8						; size = 4
?direct_play_remove_player_from_group@@YGHK@Z PROC	; direct_play_remove_player_from_group, COMDAT

; 2578 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2579 : 
; 2580 : 	HRESULT
; 2581 : 		hr;
; 2582 : 
; 2583 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	0f 84 c7 00 00
	00		 je	 $LN2@direct_pla

; 2584 : 	{
; 2585 : 	
; 2586 : 		if ( connection_data.this_group )

  00016	83 3d 34 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52, 0
  0001d	0f 84 a7 00 00
	00		 je	 $LN4@direct_pla

; 2587 : 		{
; 2588 : 	
; 2589 : 			if ( connection_data.this_group->group )

  00023	a1 34 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52
  00028	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002b	0f 84 93 00 00
	00		 je	 $LN6@direct_pla

; 2590 : 			{
; 2591 : 		
; 2592 : 				#if DIRECT_PLAY_DEBUG
; 2593 : 		
; 2594 : 				debug_log ("DIRECTP: DirectPlay:: Deleting Player from group" );
; 2595 : 		
; 2596 : 				#endif
; 2597 : 		
; 2598 : 	 			hr = IDirectPlayX_DeletePlayerFromGroup ( direct_playx, connection_data.this_group->group, id );

  00031	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00034	50		 push	 eax
  00035	8b 0d 34 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52
  0003b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003d	52		 push	 edx
  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0004b	52		 push	 edx
  0004c	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0004f	ff d0		 call	 eax
  00051	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2599 : 		
; 2600 : 				if ( hr != DP_OK )

  00054	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00058	74 1b		 je	 SHORT $LN8@direct_pla

; 2601 : 				{
; 2602 : 		
; 2603 : 					debug_log ( "DIRECTP: DirectPlay::DeletePlayerFromGroup: %s", get_dplay_error_message ( hr ) );

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@CPFCIDND@DIRECTP?3?5DirectPlay?3?3DeletePlay@
  00069	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0006e	83 c4 08	 add	 esp, 8

; 2604 :                                 ////Moje 040624 Removed next line. We know that this fails most of the time, but despite that
; 2605 :                                 ////            cvc manages to clear the client-data and the server survives
; 2606 : 	 			////	server_log ("Error: Failed to remove player %d from group: %d", id, connection_data.this_group->group ); // Jabberwock 031209 - Error log
; 2607 : 		
; 2608 : 					return FALSE;

  00071	33 c0		 xor	 eax, eax
  00073	eb 6a		 jmp	 SHORT $LN1@direct_pla
$LN8@direct_pla:

; 2609 : 				}
; 2610 : 		
; 2611 : 				hr = IDirectPlayX_DestroyPlayer ( direct_playx, id); // Jabberwock 031209 Destroy player

  00075	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00078	50		 push	 eax
  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0007f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00086	50		 push	 eax
  00087	8b 4a 24	 mov	 ecx, DWORD PTR [edx+36]
  0008a	ff d1		 call	 ecx
  0008c	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2612 : 	
; 2613 : 				if ( hr != DP_OK )

  0008f	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00093	74 15		 je	 SHORT $LN9@direct_pla

; 2614 : 				{
; 2615 : 					server_log ("Error: Failed to destroy player %d", id); // Jabberwock 040609 - Expanded log

  00095	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00098	50		 push	 eax
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@KNBFBING@Error?3?5Failed?5to?5destroy?5player@
  0009e	e8 00 00 00 00	 call	 ?server_log@@YAXPBDZZ	; server_log
  000a3	83 c4 08	 add	 esp, 8

; 2616 : 
; 2617 : 					return ( FALSE );

  000a6	33 c0		 xor	 eax, eax
  000a8	eb 35		 jmp	 SHORT $LN1@direct_pla
$LN9@direct_pla:

; 2618 : 				}
; 2619 : 
; 2620 : 				server_log ("Success: player %d removed", id); // Jabberwock 040609 - Expanded log

  000aa	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  000ad	50		 push	 eax
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JIKHPCCH@Success?3?5player?5?$CFd?5removed@
  000b3	e8 00 00 00 00	 call	 ?server_log@@YAXPBDZZ	; server_log
  000b8	83 c4 08	 add	 esp, 8

; 2621 : 				
; 2622 : 				return ( TRUE );

  000bb	b8 01 00 00 00	 mov	 eax, 1
  000c0	eb 1d		 jmp	 SHORT $LN1@direct_pla

; 2623 : 			}
; 2624 : 			else

  000c2	eb 04		 jmp	 SHORT $LN7@direct_pla
$LN6@direct_pla:

; 2625 : 			{
; 2626 : 	
; 2627 : 				return ( FALSE );

  000c4	33 c0		 xor	 eax, eax
  000c6	eb 17		 jmp	 SHORT $LN1@direct_pla
$LN7@direct_pla:

; 2628 : 			}
; 2629 : 		}
; 2630 : 		else

  000c8	eb 11		 jmp	 SHORT $LN5@direct_pla
$LN4@direct_pla:

; 2631 : 		{
; 2632 : 	
; 2633 : 			debug_log ("DIRECTP: LEAVE GROUP : no group set");

  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@FDGDGDLL@DIRECTP?3?5LEAVE?5GROUP?5?3?5no?5group@
  000cf	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d4	83 c4 04	 add	 esp, 4

; 2634 : 	
; 2635 : 			return ( FALSE );

  000d7	33 c0		 xor	 eax, eax
  000d9	eb 04		 jmp	 SHORT $LN1@direct_pla
$LN5@direct_pla:

; 2636 : 		}
; 2637 : 	}
; 2638 : 	else

  000db	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2639 : 	{
; 2640 : 
; 2641 : 		return ( FALSE );

  000dd	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2642 : 	}
; 2643 : }

  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5b		 pop	 ebx
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 04 00	 ret	 4
?direct_play_remove_player_from_group@@YGHK@Z ENDP	; direct_play_remove_player_from_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ
_TEXT	SEGMENT
?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ PROC ; direct_play_get_connection_data, COMDAT

; 3334 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3335 : 
; 3336 : 	return &connection_data;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?connection_data@@3UCONNECTION_DATA_TYPE@@A

; 3337 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ENDP ; direct_play_get_connection_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_service_provider@@YGXPAU_GUID@@@Z
_TEXT	SEGMENT
_this_service$ = 8					; size = 4
?direct_play_set_service_provider@@YGXPAU_GUID@@@Z PROC	; direct_play_set_service_provider, COMDAT

; 3344 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3345 : 
; 3346 : 	connection_data.service_provider.guid = this_service;

  00009	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  0000c	a3 14 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+20, eax

; 3347 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?direct_play_set_service_provider@@YGXPAU_GUID@@@Z ENDP	; direct_play_set_service_provider
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_number_of_players@@YGHXZ
_TEXT	SEGMENT
_size$ = -12						; size = 4
_data$ = -8						; size = 4
_hr$ = -4						; size = 4
?direct_play_get_number_of_players@@YGHXZ PROC		; direct_play_get_number_of_players, COMDAT

; 3215 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3216 : 
; 3217 : 	HRESULT
; 3218 : 		hr;
; 3219 : 
; 3220 : 	LPVOID
; 3221 : 		data;
; 3222 : 
; 3223 : 	int
; 3224 : 		size;
; 3225 : 
; 3226 : 	if ( direct_play_get_comms_mode () != DIRECT_PLAY_COMMS_MODE_MULTI )

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00010	74 04		 je	 SHORT $LN2@direct_pla

; 3227 : 	{
; 3228 : 
; 3229 : 		return FALSE;

  00012	33 c0		 xor	 eax, eax
  00014	eb 54		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 3230 : 	}
; 3231 : 
; 3232 : 	IDirectPlayX_GetSessionDesc ( direct_playx, NULL, ( LPDWORD ) &size );

  00016	8d 45 f4	 lea	 eax, DWORD PTR _size$[ebp]
  00019	50		 push	 eax
  0001a	6a 00		 push	 0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00029	50		 push	 eax
  0002a	8b 4a 58	 mov	 ecx, DWORD PTR [edx+88]
  0002d	ff d1		 call	 ecx

; 3233 : 
; 3234 : 	data = ( LPVOID ) safe_malloc ( size );

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _size$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00038	89 45 f8	 mov	 DWORD PTR _data$[ebp], eax

; 3235 : 
; 3236 : 	hr = IDirectPlayX_GetSessionDesc ( direct_playx, ( LPVOID ) data, ( LPDWORD ) &size );

  0003b	8d 45 f4	 lea	 eax, DWORD PTR _size$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _data$[ebp]
  00042	51		 push	 ecx
  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00049	8b 02		 mov	 eax, DWORD PTR [edx]
  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00051	51		 push	 ecx
  00052	8b 50 58	 mov	 edx, DWORD PTR [eax+88]
  00055	ff d2		 call	 edx
  00057	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 3237 : 
; 3238 : 	if ( hr != DP_OK )

  0005a	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005e	74 04		 je	 SHORT $LN3@direct_pla

; 3239 : 	{
; 3240 : 
; 3241 : 		return ( FALSE );

  00060	33 c0		 xor	 eax, eax
  00062	eb 06		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 3242 : 	}
; 3243 : 
; 3244 : 	return ( ( ( LPDPSESSIONDESC2 ) data )->dwCurrentPlayers );

  00064	8b 45 f8	 mov	 eax, DWORD PTR _data$[ebp]
  00067	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
$LN1@direct_pla:

; 3245 : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?direct_play_get_number_of_players@@YGHXZ ENDP		; direct_play_get_number_of_players
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_player_id@@YGHXZ
_TEXT	SEGMENT
?direct_play_get_player_id@@YGHXZ PROC			; direct_play_get_player_id, COMDAT

; 3294 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3295 : 
; 3296 : 	return connection_data.player_id;

  00009	a1 10 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+16

; 3297 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_player_id@@YGHXZ ENDP			; direct_play_get_player_id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_player_id@@YGXH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?direct_play_set_player_id@@YGXH@Z PROC			; direct_play_set_player_id, COMDAT

; 3268 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3269 : 
; 3270 : 	#if DIRECT_PLAY_DEBUG
; 3271 : 
; 3272 : 	debug_log ("DIRECTP: set player id %d", id);
; 3273 : 
; 3274 : 	#endif
; 3275 : 
; 3276 : 	connection_data.player_id = id;

  00009	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000c	a3 10 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+16, eax

; 3277 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?direct_play_set_player_id@@YGXH@Z ENDP			; direct_play_set_player_id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_group_id@@YGHXZ
_TEXT	SEGMENT
?direct_play_get_group_id@@YGHXZ PROC			; direct_play_get_group_id, COMDAT

; 3284 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3285 : 
; 3286 : 	return connection_data.group_id;

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+12

; 3287 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_group_id@@YGHXZ ENDP			; direct_play_get_group_id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_group_id@@YGXH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?direct_play_set_group_id@@YGXH@Z PROC			; direct_play_set_group_id, COMDAT

; 3252 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3253 : 
; 3254 : 	#if DIRECT_PLAY_DEBUG
; 3255 : 
; 3256 : 	debug_log ("DIRECTP: set group id %d", id);
; 3257 : 
; 3258 : 	#endif
; 3259 : 
; 3260 : 	connection_data.group_id = id;

  00009	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000c	a3 0c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+12, eax

; 3261 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?direct_play_set_group_id@@YGXH@Z ENDP			; direct_play_set_group_id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_player_name@@YGPBDK@Z
_TEXT	SEGMENT
_dp_name$ = -20						; size = 4
_name$ = -16						; size = 4
_data$ = -12						; size = 4
_hr$ = -8						; size = 4
_size$ = -4						; size = 4
_player_id$ = 8						; size = 4
?direct_play_get_player_name@@YGPBDK@Z PROC		; direct_play_get_player_name, COMDAT

; 3159 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3160 : 
; 3161 : 	int
; 3162 : 		size,
; 3163 : 		hr;
; 3164 : 
; 3165 : 	void
; 3166 : 		*data;
; 3167 : 
; 3168 : 	char
; 3169 : 		*name;
; 3170 : 
; 3171 : 	LPDPNAME
; 3172 : 		dp_name;
; 3173 : 
; 3174 : 	size = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _size$[ebp], 0

; 3175 : 
; 3176 : 	hr = IDirectPlayX_GetPlayerName (direct_playx, player_id, NULL, (LPDWORD) &size);

  00010	8d 45 fc	 lea	 eax, DWORD PTR _size$[ebp]
  00013	50		 push	 eax
  00014	6a 00		 push	 0
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _player_id$[ebp]
  00019	51		 push	 ecx
  0001a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00028	51		 push	 ecx
  00029	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  0002c	ff d2		 call	 edx
  0002e	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3177 : 
; 3178 : 	if ( hr == DPERR_BUFFERTOOSMALL )

  00031	81 7d f8 1e 00
	77 88		 cmp	 DWORD PTR _hr$[ebp], -2005467106 ; 8877001eH
  00038	75 4d		 jne	 SHORT $LN2@direct_pla

; 3179 : 	{
; 3180 : 
; 3181 : 		data = (void *) safe_malloc (size);

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _size$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00043	89 45 f4	 mov	 DWORD PTR _data$[ebp], eax

; 3182 : 
; 3183 : 		hr = IDirectPlayX_GetPlayerName (direct_playx, player_id, data, (LPDWORD) &size);

  00046	8d 45 fc	 lea	 eax, DWORD PTR _size$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR _data$[ebp]
  0004d	51		 push	 ecx
  0004e	8b 55 08	 mov	 edx, DWORD PTR _player_id$[ebp]
  00051	52		 push	 edx
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0005f	52		 push	 edx
  00060	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  00063	ff d0		 call	 eax
  00065	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 3184 : 
; 3185 : 		if ( hr != DP_OK )

  00068	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0006c	74 17		 je	 SHORT $LN4@direct_pla

; 3186 : 		{
; 3187 : 
; 3188 : 			debug_log ( "DPERR: Unable to get player name: %s", get_dplay_error_message ( hr ) );

  0006e	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FBHLHCFI@DPERR?3?5Unable?5to?5get?5player?5nam@
  0007d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00082	83 c4 08	 add	 esp, 8
$LN4@direct_pla:

; 3189 : 		}
; 3190 : 	}
; 3191 : 	else

  00085	eb 17		 jmp	 SHORT $LN3@direct_pla
$LN2@direct_pla:

; 3192 : 	{
; 3193 : 
; 3194 : 		debug_log ( "DPERR: Unable to get player name size: %s", get_dplay_error_message ( hr ) );

  00087	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00090	50		 push	 eax
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@ILKGMGJE@DPERR?3?5Unable?5to?5get?5player?5nam@
  00096	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0009b	83 c4 08	 add	 esp, 8
$LN3@direct_pla:

; 3195 : 	}
; 3196 : 
; 3197 : 	dp_name = ( LPDPNAME ) data;

  0009e	8b 45 f4	 mov	 eax, DWORD PTR _data$[ebp]
  000a1	89 45 ec	 mov	 DWORD PTR _dp_name$[ebp], eax

; 3198 : 
; 3199 : 	name = ( char * ) safe_malloc ( strlen ( dp_name->lpszShortNameA ) + 1 );

  000a4	8b 45 ec	 mov	 eax, DWORD PTR _dp_name$[ebp]
  000a7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000aa	51		 push	 ecx
  000ab	e8 00 00 00 00	 call	 _strlen
  000b0	83 c4 04	 add	 esp, 4
  000b3	83 c0 01	 add	 eax, 1
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  000bc	89 45 f0	 mov	 DWORD PTR _name$[ebp], eax

; 3200 : 
; 3201 : 	strcpy ( name, dp_name->lpszShortNameA );

  000bf	8b 45 ec	 mov	 eax, DWORD PTR _dp_name$[ebp]
  000c2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c5	51		 push	 ecx
  000c6	8b 55 f0	 mov	 edx, DWORD PTR _name$[ebp]
  000c9	52		 push	 edx
  000ca	e8 00 00 00 00	 call	 _strcpy
  000cf	83 c4 08	 add	 esp, 8

; 3202 : 
; 3203 : 	safe_free ( data );

  000d2	8b 45 f4	 mov	 eax, DWORD PTR _data$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 3204 : 
; 3205 : 	return name;

  000db	8b 45 f0	 mov	 eax, DWORD PTR _name$[ebp]

; 3206 : 
; 3207 : 	//return connection_data.player_name;
; 3208 : }

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 04 00	 ret	 4
?direct_play_get_player_name@@YGPBDK@Z ENDP		; direct_play_get_player_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_group_name@@YGPBDXZ
_TEXT	SEGMENT
?direct_play_get_group_name@@YGPBDXZ PROC		; direct_play_get_group_name, COMDAT

; 3139 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3140 : 
; 3141 : 	return connection_data.group_name;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A

; 3142 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_group_name@@YGPBDXZ ENDP		; direct_play_get_group_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_session_name@@YGPBDXZ
_TEXT	SEGMENT
?direct_play_get_session_name@@YGPBDXZ PROC		; direct_play_get_session_name, COMDAT

; 3149 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3150 : 
; 3151 : 	return connection_data.session_name;

  00009	a1 04 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4

; 3152 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_session_name@@YGPBDXZ ENDP		; direct_play_get_session_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_player_name@@YGXPBD@Z
_TEXT	SEGMENT
_length$ = -4						; size = 4
_name$ = 8						; size = 4
?direct_play_set_player_name@@YGXPBD@Z PROC		; direct_play_set_player_name, COMDAT

; 3095 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3096 : 
; 3097 : 	int
; 3098 : 		length;
; 3099 : 
; 3100 : 	if (name)

  00009	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0000d	74 58		 je	 SHORT $LN2@direct_pla

; 3101 : 	{
; 3102 : 
; 3103 : 		if (connection_data.player_name)

  0000f	83 3d 08 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8, 0
  00016	74 15		 je	 SHORT $LN4@direct_pla

; 3104 : 		{
; 3105 : 
; 3106 : 			safe_free (connection_data.player_name);

  00018	a1 08 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 3107 : 
; 3108 : 			connection_data.player_name = NULL;

  00023	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8, 0
$LN4@direct_pla:

; 3109 : 		}
; 3110 : 
; 3111 : 		length = strlen (name) + 1;

  0002d	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _strlen
  00036	83 c4 04	 add	 esp, 4
  00039	83 c0 01	 add	 eax, 1
  0003c	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 3112 : 
; 3113 : 		connection_data.player_name = (char *) safe_malloc (length);

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00048	a3 08 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8, eax

; 3114 : 
; 3115 : 		sprintf (connection_data.player_name, "%s", name);

  0004d	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00056	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 _sprintf
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3116 : 	}
; 3117 : 	else

  00065	eb 34		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 3118 : 	{
; 3119 : 
; 3120 : 		length = strlen ("No Name") + 1;

  00067	68 00 00 00 00	 push	 OFFSET ??_C@_07OAEEHIKM@No?5Name@
  0006c	e8 00 00 00 00	 call	 _strlen
  00071	83 c4 04	 add	 esp, 4
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 3121 : 
; 3122 : 		connection_data.player_name = (char *) safe_malloc (length);

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00083	a3 08 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8, eax

; 3123 : 
; 3124 : 		sprintf (connection_data.player_name, "No Name");

  00088	68 00 00 00 00	 push	 OFFSET ??_C@_07OAEEHIKM@No?5Name@
  0008d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 _sprintf
  00098	83 c4 08	 add	 esp, 8
$LN1@direct_pla:

; 3125 : 	}
; 3126 : 
; 3127 : 	#if DIRECT_PLAY_DEBUG
; 3128 : 
; 3129 : 	debug_log ("DIRECTP: set player name %s", connection_data.player_name);
; 3130 : 
; 3131 : 	#endif
; 3132 : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
?direct_play_set_player_name@@YGXPBD@Z ENDP		; direct_play_set_player_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_session_name@@YGXPBD@Z
_TEXT	SEGMENT
_length$ = -4						; size = 4
_name$ = 8						; size = 4
?direct_play_set_session_name@@YGXPBD@Z PROC		; direct_play_set_session_name, COMDAT

; 3051 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3052 : 
; 3053 : 	int
; 3054 : 		length;
; 3055 : 
; 3056 : 	if (name)

  00009	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0000d	74 58		 je	 SHORT $LN2@direct_pla

; 3057 : 	{
; 3058 : 
; 3059 : 		if (connection_data.session_name)

  0000f	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4, 0
  00016	74 15		 je	 SHORT $LN4@direct_pla

; 3060 : 		{
; 3061 : 
; 3062 : 			safe_free (connection_data.session_name);

  00018	a1 04 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 3063 : 
; 3064 : 			connection_data.session_name = NULL;

  00023	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4, 0
$LN4@direct_pla:

; 3065 : 		}
; 3066 : 
; 3067 : 		length = strlen (name) + 1;

  0002d	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _strlen
  00036	83 c4 04	 add	 esp, 4
  00039	83 c0 01	 add	 eax, 1
  0003c	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 3068 : 
; 3069 : 		connection_data.session_name = (char *) safe_malloc (length);

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00048	a3 04 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4, eax

; 3070 : 
; 3071 : 		sprintf (connection_data.session_name ,"%s", name);

  0004d	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00056	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 _sprintf
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3072 : 	}
; 3073 : 	else

  00065	eb 34		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 3074 : 	{
; 3075 : 
; 3076 : 		length = strlen ("No Name") + 1;

  00067	68 00 00 00 00	 push	 OFFSET ??_C@_07OAEEHIKM@No?5Name@
  0006c	e8 00 00 00 00	 call	 _strlen
  00071	83 c4 04	 add	 esp, 4
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 3077 : 
; 3078 : 		connection_data.session_name = (char *) safe_malloc (length);

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00083	a3 04 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4, eax

; 3079 : 
; 3080 : 		sprintf (connection_data.session_name, "No Name");

  00088	68 00 00 00 00	 push	 OFFSET ??_C@_07OAEEHIKM@No?5Name@
  0008d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 _sprintf
  00098	83 c4 08	 add	 esp, 8
$LN1@direct_pla:

; 3081 : 	}
; 3082 : 
; 3083 : 	#if DIRECT_PLAY_DEBUG
; 3084 : 
; 3085 : 	debug_log ("DIRECTP: set session name %s", connection_data.session_name);
; 3086 : 
; 3087 : 	#endif
; 3088 : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
?direct_play_set_session_name@@YGXPBD@Z ENDP		; direct_play_set_session_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_set_group_name@@YGXPBD@Z
_TEXT	SEGMENT
_length$ = -4						; size = 4
_name$ = 8						; size = 4
?direct_play_set_group_name@@YGXPBD@Z PROC		; direct_play_set_group_name, COMDAT

; 3006 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3007 : 
; 3008 : 	int
; 3009 : 		length;
; 3010 : 
; 3011 : 	if (name)

  00009	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0000d	74 58		 je	 SHORT $LN2@direct_pla

; 3012 : 	{
; 3013 : 
; 3014 : 		if (connection_data.group_name)

  0000f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A, 0
  00016	74 15		 je	 SHORT $LN4@direct_pla

; 3015 : 		{
; 3016 : 
; 3017 : 			safe_free (connection_data.group_name);

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 3018 : 
; 3019 : 			connection_data.group_name = NULL;

  00023	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A, 0
$LN4@direct_pla:

; 3020 : 		}
; 3021 : 
; 3022 : 		length = strlen (name) + 1;

  0002d	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _strlen
  00036	83 c4 04	 add	 esp, 4
  00039	83 c0 01	 add	 eax, 1
  0003c	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 3023 : 
; 3024 : 		connection_data.group_name = (char *) safe_malloc (length);

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00048	a3 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A, eax

; 3025 : 
; 3026 : 		sprintf (connection_data.group_name ,"%s", name);

  0004d	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00056	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 _sprintf
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3027 : 	}
; 3028 : 	else

  00065	eb 34		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 3029 : 	{
; 3030 : 
; 3031 : 		length = strlen ("No Name") + 1;

  00067	68 00 00 00 00	 push	 OFFSET ??_C@_07OAEEHIKM@No?5Name@
  0006c	e8 00 00 00 00	 call	 _strlen
  00071	83 c4 04	 add	 esp, 4
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 3032 : 
; 3033 : 		connection_data.group_name = (char *) safe_malloc (length);

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A, eax

; 3034 : 
; 3035 : 		sprintf (connection_data.group_name, "No Name");

  00088	68 00 00 00 00	 push	 OFFSET ??_C@_07OAEEHIKM@No?5Name@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 _sprintf
  00098	83 c4 08	 add	 esp, 8
$LN1@direct_pla:

; 3036 : 	}
; 3037 : 
; 3038 : 	#if DIRECT_PLAY_DEBUG
; 3039 : 
; 3040 : 	debug_log ("DIRECTP: set group name %s", connection_data.group_name);
; 3041 : 
; 3042 : 	#endif
; 3043 : 
; 3044 : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
?direct_play_set_group_name@@YGXPBD@Z ENDP		; direct_play_set_group_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_group_table@@YGPAUGROUP_TABLE_TYPE@@XZ
_TEXT	SEGMENT
?direct_play_get_group_table@@YGPAUGROUP_TABLE_TYPE@@XZ PROC ; direct_play_get_group_table, COMDAT

; 3324 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3325 : 
; 3326 : 	return group_table;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?group_table@@3PAUGROUP_TABLE_TYPE@@A

; 3327 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_group_table@@YGPAUGROUP_TABLE_TYPE@@XZ ENDP ; direct_play_get_group_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_session_table@@YGPAUSESSION_TABLE_TYPE@@XZ
_TEXT	SEGMENT
?direct_play_get_session_table@@YGPAUSESSION_TABLE_TYPE@@XZ PROC ; direct_play_get_session_table, COMDAT

; 3304 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3305 : 
; 3306 : 	return session_table;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A

; 3307 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_session_table@@YGPAUSESSION_TABLE_TYPE@@XZ ENDP ; direct_play_get_session_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ
_TEXT	SEGMENT
?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ PROC ; direct_play_get_service_provider_table, COMDAT

; 3314 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3315 : 
; 3316 : 	return service_provider_table;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A

; 3317 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ ENDP ; direct_play_get_service_provider_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_receive_data@@YGHPAXH@Z
_TEXT	SEGMENT
_s1$ = -20						; size = 4
_type$ = -16						; size = 4
_receiver_player_id$ = -12				; size = 4
_sender_player_id$ = -8					; size = 4
_hr$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?direct_play_receive_data@@YGHPAXH@Z PROC		; direct_play_receive_data, COMDAT

; 2909 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2910 : 
; 2911 : 	HRESULT
; 2912 : 		hr;
; 2913 : 
; 2914 : 	DPID
; 2915 : 		sender_player_id,
; 2916 : 		receiver_player_id;
; 2917 : 
; 2918 : 	LPDPMSG_GENERIC
; 2919 : 		type;
; 2920 : 
; 2921 : 	int
; 2922 : 		s1;
; 2923 : 
; 2924 : 	if ( !direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	75 07		 jne	 SHORT $LN4@direct_pla

; 2925 : 	{
; 2926 : 
; 2927 : 		return ( FALSE );

  00012	33 c0		 xor	 eax, eax
  00014	e9 c0 00 00 00	 jmp	 $LN1@direct_pla
$LN4@direct_pla:

; 2928 : 	}
; 2929 : 
; 2930 : 	if ( direct_play_get_comms_mode () != DIRECT_PLAY_COMMS_MODE_MULTI )

  00019	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00020	74 07		 je	 SHORT $LN5@direct_pla

; 2931 : 	{
; 2932 : 
; 2933 : 		return ( FALSE );

  00022	33 c0		 xor	 eax, eax
  00024	e9 b0 00 00 00	 jmp	 $LN1@direct_pla
$LN5@direct_pla:

; 2934 : 	}
; 2935 : 
; 2936 : 	//
; 2937 : 	// Get message queue status
; 2938 : 	//
; 2939 : 
; 2940 : 	IDirectPlayX_GetMessageQueue ( direct_playx, 0, 0, DPMESSAGEQUEUE_SEND, &direct_play_send_queue_number_of_packets, &direct_play_send_queue_number_of_bytes );

  00029	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_bytes@@3KA
  0002e	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_packets@@3KA
  00033	6a 01		 push	 1
  00035	6a 00		 push	 0
  00037	6a 00		 push	 0
  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00046	52		 push	 edx
  00047	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  0004d	ff d0		 call	 eax

; 2941 : 
; 2942 : 	sender_player_id = DPID_SYSMSG;

  0004f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _sender_player_id$[ebp], 0
$LN2@direct_pla:

; 2943 : 
; 2944 : 	while ( sender_player_id == DPID_SYSMSG )

  00056	83 7d f8 00	 cmp	 DWORD PTR _sender_player_id$[ebp], 0
  0005a	75 7a		 jne	 SHORT $LN3@direct_pla

; 2945 : 	{
; 2946 : 	
; 2947 : 		s1 = size;

  0005c	8b 45 0c	 mov	 eax, DWORD PTR _size$[ebp]
  0005f	89 45 ec	 mov	 DWORD PTR _s1$[ebp], eax

; 2948 : 	
; 2949 : 		hr = IDirectPlayX_Receive ( direct_playx, &sender_player_id, &receiver_player_id, DPRECEIVE_ALL, ( LPVOID ) data, ( LPDWORD ) &s1 );

  00062	8d 45 ec	 lea	 eax, DWORD PTR _s1$[ebp]
  00065	50		 push	 eax
  00066	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  00069	51		 push	 ecx
  0006a	6a 01		 push	 1
  0006c	8d 55 f4	 lea	 edx, DWORD PTR _receiver_player_id$[ebp]
  0006f	52		 push	 edx
  00070	8d 45 f8	 lea	 eax, DWORD PTR _sender_player_id$[ebp]
  00073	50		 push	 eax
  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00081	50		 push	 eax
  00082	8b 4a 64	 mov	 ecx, DWORD PTR [edx+100]
  00085	ff d1		 call	 ecx
  00087	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2950 : 	
; 2951 : 		//
; 2952 : 		// If data was set to NULL, it was a request for the packet size so just return size
; 2953 : 		//
; 2954 : 	
; 2955 : 		if ( data == NULL )

  0008a	83 7d 08 00	 cmp	 DWORD PTR _data$[ebp], 0
  0008e	75 05		 jne	 SHORT $LN6@direct_pla

; 2956 : 		{
; 2957 : 	
; 2958 : 			return ( s1 );

  00090	8b 45 ec	 mov	 eax, DWORD PTR _s1$[ebp]
  00093	eb 44		 jmp	 SHORT $LN1@direct_pla
$LN6@direct_pla:

; 2959 : 		}
; 2960 : 	
; 2961 : 		if ( hr != DP_OK )

  00095	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00099	74 24		 je	 SHORT $LN7@direct_pla

; 2962 : 		{
; 2963 : 	
; 2964 : 			if ( hr != DPERR_NOMESSAGES )

  0009b	81 7d fc be 00
	77 88		 cmp	 DWORD PTR _hr$[ebp], -2005466946 ; 887700beH
  000a2	74 17		 je	 SHORT $LN8@direct_pla

; 2965 : 			{
; 2966 : 	
; 2967 : 				debug_log ( "DIRECTP: DirectPlay::Receive: %s", get_dplay_error_message ( hr ) );

  000a4	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000ad	50		 push	 eax
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@MHFKCAPG@DIRECTP?3?5DirectPlay?3?3Receive?3?5?$CF@
  000b3	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b8	83 c4 08	 add	 esp, 8
$LN8@direct_pla:

; 2968 : 			}
; 2969 : 	
; 2970 : 			return ( FALSE );

  000bb	33 c0		 xor	 eax, eax
  000bd	eb 1a		 jmp	 SHORT $LN1@direct_pla
$LN7@direct_pla:

; 2971 : 		}
; 2972 : 
; 2973 : 		if ( sender_player_id == DPID_SYSMSG )

  000bf	83 7d f8 00	 cmp	 DWORD PTR _sender_player_id$[ebp], 0
  000c3	75 0f		 jne	 SHORT $LN9@direct_pla

; 2974 : 		{
; 2975 : 	
; 2976 : 			type = ( LPDPMSG_GENERIC ) data;

  000c5	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  000c8	89 45 f0	 mov	 DWORD PTR _type$[ebp], eax

; 2977 : 	
; 2978 : 			direct_play_system_message ( type );

  000cb	8b 45 f0	 mov	 eax, DWORD PTR _type$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?direct_play_system_message@@YGXPAUDPMSG_GENERIC@@@Z ; direct_play_system_message
$LN9@direct_pla:

; 2979 : 		}
; 2980 : 	}

  000d4	eb 80		 jmp	 SHORT $LN2@direct_pla
$LN3@direct_pla:

; 2981 : 
; 2982 : #if DIRECT_PLAY_DEBUG
; 2983 : 
; 2984 : 	debug_log ("DIRECTP: receive, id %d, size %d", sender_player_id, s1);
; 2985 : 
; 2986 : #endif
; 2987 : 
; 2988 : #if DEBUG_DUMP_PACKET_DATA
; 2989 : 
; 2990 : 	write_comms_data (TRUE, data, size);
; 2991 : 
; 2992 : #endif
; 2993 : 
; 2994 : 	return ( s1 );

  000d6	8b 45 ec	 mov	 eax, DWORD PTR _s1$[ebp]
$LN1@direct_pla:

; 2995 : }

  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 08 00	 ret	 8
?direct_play_receive_data@@YGHPAXH@Z ENDP		; direct_play_receive_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_send_data@@YGHKPAXH@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_to_id$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?direct_play_send_data@@YGHKPAXH@Z PROC			; direct_play_send_data, COMDAT

; 2855 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2856 : 
; 2857 : 	HRESULT
; 2858 : 		hr;
; 2859 : 
; 2860 : 	if ( direct_play_get_comms_mode () != DIRECT_PLAY_COMMS_MODE_MULTI )

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00010	74 07		 je	 SHORT $LN2@direct_pla

; 2861 : 	{
; 2862 : 
; 2863 : 		return ( 0 );

  00012	33 c0		 xor	 eax, eax
  00014	e9 e8 00 00 00	 jmp	 $LN1@direct_pla
$LN2@direct_pla:

; 2864 : 	}
; 2865 : 
; 2866 : #if DIRECT_PLAY_DEBUG
; 2867 : 
; 2868 : 	debug_log ("DIRECTP: send data, id %d, size %d", to_id, size);
; 2869 : 
; 2870 : #endif
; 2871 : 
; 2872 : 	if ( direct_play_use_guaranteed_packets )

  00019	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_use_guaranteed_packets@@3HA, 0 ; direct_play_use_guaranteed_packets
  00020	74 3d		 je	 SHORT $LN3@direct_pla

; 2873 : 	{
; 2874 : 
; 2875 : 		hr = IDirectPlayX_SendEx ( direct_playx, direct_play_get_player_id (), to_id,

  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	68 ff 7f 00 00	 push	 32767			; 00007fffH
  0002d	8b 45 10	 mov	 eax, DWORD PTR _size$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  00034	51		 push	 ecx
  00035	68 01 02 00 00	 push	 513			; 00000201H
  0003a	8b 55 08	 mov	 edx, DWORD PTR _to_id$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00043	50		 push	 eax
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00051	52		 push	 edx
  00052	8b 81 c4 00 00
	00		 mov	 eax, DWORD PTR [ecx+196]
  00058	ff d0		 call	 eax
  0005a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2876 : 												DPSEND_GUARANTEED | DPSEND_ASYNC, data, size, 32767, 0, NULL, NULL );
; 2877 : 	}
; 2878 : 	else

  0005d	eb 2a		 jmp	 SHORT $LN4@direct_pla
$LN3@direct_pla:

; 2879 : 	{
; 2880 : 	
; 2881 : 		hr = IDirectPlayX_Send ( direct_playx, direct_play_get_player_id (), to_id, 0, data, size );

  0005f	8b 45 10	 mov	 eax, DWORD PTR _size$[ebp]
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  00066	51		 push	 ecx
  00067	6a 00		 push	 0
  00069	8b 55 08	 mov	 edx, DWORD PTR _to_id$[ebp]
  0006c	52		 push	 edx
  0006d	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00072	50		 push	 eax
  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00080	52		 push	 edx
  00081	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  00084	ff d0		 call	 eax
  00086	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
$LN4@direct_pla:

; 2882 : 	}
; 2883 : 
; 2884 : 	if ( ( hr != DP_OK ) && ( hr != DPERR_PENDING ) )

  00089	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008d	74 4a		 je	 SHORT $LN5@direct_pla
  0008f	81 7d fc 0a 00
	00 80		 cmp	 DWORD PTR _hr$[ebp], -2147483638 ; 8000000aH
  00096	74 41		 je	 SHORT $LN5@direct_pla

; 2885 : 	{
; 2886 : 
; 2887 : 		debug_log ( "DIRECTP: DirectPlay::Send: %s", get_dplay_error_message ( hr ) );

  00098	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000a1	50		 push	 eax
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GMIDLNLH@DIRECTP?3?5DirectPlay?3?3Send?3?5?$CFs@
  000a7	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000ac	83 c4 08	 add	 esp, 8

; 2888 : 		debug_log ( "Direct_playx = %08x, from id: %d, to id: %d, data: %08x, size: %d", direct_playx, direct_play_get_player_id (), to_id, data, size );

  000af	8b 45 10	 mov	 eax, DWORD PTR _size$[ebp]
  000b2	50		 push	 eax
  000b3	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  000b6	51		 push	 ecx
  000b7	8b 55 08	 mov	 edx, DWORD PTR _to_id$[ebp]
  000ba	52		 push	 edx
  000bb	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  000c0	50		 push	 eax
  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000c6	50		 push	 eax
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@JDEFDLKM@Direct_playx?5?$DN?5?$CF08x?0?5from?5id?3?5?$CF@
  000cc	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d1	83 c4 18	 add	 esp, 24			; 00000018H

; 2889 : 
; 2890 : 		return ( hr );

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  000d7	eb 28		 jmp	 SHORT $LN1@direct_pla
$LN5@direct_pla:

; 2891 : 	}
; 2892 : 
; 2893 : #if DEBUG_DUMP_PACKET_DATA
; 2894 : 
; 2895 : 	write_comms_data (FALSE, data, size);
; 2896 : 
; 2897 : #endif
; 2898 : 
; 2899 : 	IDirectPlayX_GetMessageQueue ( direct_playx, 0, 0, DPMESSAGEQUEUE_SEND, &direct_play_send_queue_number_of_packets, &direct_play_send_queue_number_of_bytes );

  000d9	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_bytes@@3KA
  000de	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_packets@@3KA
  000e3	6a 01		 push	 1
  000e5	6a 00		 push	 0
  000e7	6a 00		 push	 0
  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000f6	52		 push	 edx
  000f7	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  000fd	ff d0		 call	 eax

; 2900 : 
; 2901 : 	return ( 0 );

  000ff	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2902 : }

  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 0c 00	 ret	 12			; 0000000cH
?direct_play_send_data@@YGHKPAXH@Z ENDP			; direct_play_send_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_destroy_player@@YGHXZ
_TEXT	SEGMENT
_hr$1 = -4						; size = 4
?direct_play_destroy_player@@YGHXZ PROC			; direct_play_destroy_player, COMDAT

; 2802 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2803 : 
; 2804 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 44		 je	 SHORT $LN2@direct_pla

; 2805 : 	{
; 2806 : 	
; 2807 : 		HRESULT
; 2808 : 			hr;
; 2809 : 	
; 2810 : 		#if DIRECT_PLAY_DEBUG
; 2811 : 
; 2812 : 		debug_log ("DIRECTP: DirectPlay:: Destroy player" );
; 2813 : 
; 2814 : 		#endif
; 2815 : 
; 2816 : 		hr = IDirectPlayX_DestroyPlayer ( direct_playx, direct_play_get_player_id () );

  00012	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00017	50		 push	 eax
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00025	52		 push	 edx
  00026	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00029	ff d0		 call	 eax
  0002b	89 45 fc	 mov	 DWORD PTR _hr$1[ebp], eax

; 2817 : 	
; 2818 : 		if ( hr != DP_OK )

  0002e	83 7d fc 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  00032	74 1b		 je	 SHORT $LN3@direct_pla

; 2819 : 		{
; 2820 : 	
; 2821 : 			debug_log ( "DIRECTP: DirectPlay::DestroyPlayer: %s", get_dplay_error_message ( hr ) );

  00034	8b 45 fc	 mov	 eax, DWORD PTR _hr$1[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@NACBCCJH@DIRECTP?3?5DirectPlay?3?3DestroyPla@
  00043	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00048	83 c4 08	 add	 esp, 8

; 2822 : 	
; 2823 : 			return ( FALSE );

  0004b	33 c0		 xor	 eax, eax
  0004d	eb 09		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2824 : 		}
; 2825 : 	
; 2826 : 		return ( TRUE );

  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2827 : 	}
; 2828 : 
; 2829 : 	return ( FALSE );

  00056	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2830 : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?direct_play_destroy_player@@YGHXZ ENDP			; direct_play_destroy_player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_create_server_player@@YGHXZ
_TEXT	SEGMENT
_id$1 = -24						; size = 4
_hr$2 = -20						; size = 4
_dpName$3 = -16						; size = 16
?direct_play_create_server_player@@YGHXZ PROC		; direct_play_create_server_player, COMDAT

; 2747 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2748 : 
; 2749 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	0f 84 81 00 00
	00		 je	 $LN2@direct_pla

; 2750 : 	{
; 2751 : 	
; 2752 : 		DPNAME
; 2753 : 			dpName;
; 2754 : 	
; 2755 : 		HRESULT
; 2756 : 			hr;
; 2757 : 	
; 2758 : 		DPID
; 2759 : 			id;
; 2760 : 	
; 2761 : 		//
; 2762 : 		// create a new player.
; 2763 : 		//
; 2764 : 	
; 2765 : 		#if DIRECT_PLAY_DEBUG
; 2766 : 
; 2767 : 		debug_log ("DIRECTP: DirectPlay:: Create player" );
; 2768 : 
; 2769 : 		#endif
; 2770 : 
; 2771 : 		memset ( &dpName, 0, sizeof ( DPNAME ) );

  00016	6a 10		 push	 16			; 00000010H
  00018	6a 00		 push	 0
  0001a	8d 45 f0	 lea	 eax, DWORD PTR _dpName$3[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2772 : 	
; 2773 : 		dpName.dwSize = sizeof ( DPNAME );

  00026	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR _dpName$3[ebp], 16 ; 00000010H

; 2774 : 	
; 2775 : 		dpName.lpszShortName = ( LPWSTR ) connection_data.player_name;

  0002d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8
  00032	89 45 f8	 mov	 DWORD PTR _dpName$3[ebp+8], eax

; 2776 : 	
; 2777 : 		dpName.lpszLongNameA = NULL;

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dpName$3[ebp+12], 0

; 2778 : 	
; 2779 : 		hr = IDirectPlayX_CreatePlayer ( direct_playx, &id, &dpName, NULL, NULL, 0, DPPLAYER_SERVERPLAYER );

  0003c	68 00 01 00 00	 push	 256			; 00000100H
  00041	6a 00		 push	 0
  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	8d 45 f0	 lea	 eax, DWORD PTR _dpName$3[ebp]
  0004a	50		 push	 eax
  0004b	8d 4d e8	 lea	 ecx, DWORD PTR _id$1[ebp]
  0004e	51		 push	 ecx
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00055	8b 02		 mov	 eax, DWORD PTR [edx]
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0005d	51		 push	 ecx
  0005e	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00061	ff d2		 call	 edx
  00063	89 45 ec	 mov	 DWORD PTR _hr$2[ebp], eax

; 2780 : 	
; 2781 : 		if ( hr != DP_OK )

  00066	83 7d ec 00	 cmp	 DWORD PTR _hr$2[ebp], 0
  0006a	74 1b		 je	 SHORT $LN3@direct_pla

; 2782 : 		{
; 2783 : 	
; 2784 : 			debug_log ( "DIRECTP: DirectPlay::CreatePlayer: %s", get_dplay_error_message ( hr ) );

  0006c	8b 45 ec	 mov	 eax, DWORD PTR _hr$2[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00075	50		 push	 eax
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KPIAJCDN@DIRECTP?3?5DirectPlay?3?3CreatePlay@
  0007b	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00080	83 c4 08	 add	 esp, 8

; 2785 : 	
; 2786 : 			return ( FALSE );

  00083	33 c0		 xor	 eax, eax
  00085	eb 12		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2787 : 		}
; 2788 : 	
; 2789 : 		direct_play_set_player_id (id);

  00087	8b 45 e8	 mov	 eax, DWORD PTR _id$1[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?direct_play_set_player_id@@YGXH@Z ; direct_play_set_player_id

; 2790 : 	
; 2791 : 		return ( TRUE );

  00090	b8 01 00 00 00	 mov	 eax, 1
  00095	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2792 : 	}
; 2793 : 
; 2794 : 	return ( FALSE );

  00097	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2795 : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?direct_play_create_server_player@@YGHXZ ENDP		; direct_play_create_server_player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_create_player@@YGHXZ
_TEXT	SEGMENT
_id$1 = -24						; size = 4
_hr$2 = -20						; size = 4
_dpName$3 = -16						; size = 16
?direct_play_create_player@@YGHXZ PROC			; direct_play_create_player, COMDAT

; 2692 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2693 : 
; 2694 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 7e		 je	 SHORT $LN2@direct_pla

; 2695 : 	{
; 2696 : 	
; 2697 : 		DPNAME
; 2698 : 			dpName;
; 2699 : 	
; 2700 : 		HRESULT
; 2701 : 			hr;
; 2702 : 	
; 2703 : 		DPID
; 2704 : 			id;
; 2705 : 	
; 2706 : 		//
; 2707 : 		// create a new player.
; 2708 : 		//
; 2709 : 	
; 2710 : 		#if DIRECT_PLAY_DEBUG
; 2711 : 
; 2712 : 		debug_log ("DIRECTP: DirectPlay:: Create player" );
; 2713 : 
; 2714 : 		#endif
; 2715 : 
; 2716 : 		memset ( &dpName, 0, sizeof ( DPNAME ) );

  00012	6a 10		 push	 16			; 00000010H
  00014	6a 00		 push	 0
  00016	8d 45 f0	 lea	 eax, DWORD PTR _dpName$3[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 _memset
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2717 : 	
; 2718 : 		dpName.dwSize = sizeof ( DPNAME );

  00022	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR _dpName$3[ebp], 16 ; 00000010H

; 2719 : 	
; 2720 : 		dpName.lpszShortName = ( LPWSTR ) connection_data.player_name;

  00029	a1 08 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+8
  0002e	89 45 f8	 mov	 DWORD PTR _dpName$3[ebp+8], eax

; 2721 : 	
; 2722 : 		dpName.lpszLongNameA = NULL;

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dpName$3[ebp+12], 0

; 2723 : 	
; 2724 : 		hr = IDirectPlayX_CreatePlayer ( direct_playx, &id, &dpName, NULL, NULL, 0, 0 );

  00038	6a 00		 push	 0
  0003a	6a 00		 push	 0
  0003c	6a 00		 push	 0
  0003e	6a 00		 push	 0
  00040	8d 45 f0	 lea	 eax, DWORD PTR _dpName$3[ebp]
  00043	50		 push	 eax
  00044	8d 4d e8	 lea	 ecx, DWORD PTR _id$1[ebp]
  00047	51		 push	 ecx
  00048	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0004e	8b 02		 mov	 eax, DWORD PTR [edx]
  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00056	51		 push	 ecx
  00057	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0005a	ff d2		 call	 edx
  0005c	89 45 ec	 mov	 DWORD PTR _hr$2[ebp], eax

; 2725 : 	
; 2726 : 		if ( hr != DP_OK )

  0005f	83 7d ec 00	 cmp	 DWORD PTR _hr$2[ebp], 0
  00063	74 1b		 je	 SHORT $LN3@direct_pla

; 2727 : 		{
; 2728 : 	
; 2729 : 			debug_log ( "DIRECTP: DirectPlay::CreatePlayer: %s", get_dplay_error_message ( hr ) );

  00065	8b 45 ec	 mov	 eax, DWORD PTR _hr$2[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0006e	50		 push	 eax
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KPIAJCDN@DIRECTP?3?5DirectPlay?3?3CreatePlay@
  00074	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00079	83 c4 08	 add	 esp, 8

; 2730 : 	
; 2731 : 			return ( FALSE );

  0007c	33 c0		 xor	 eax, eax
  0007e	eb 12		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2732 : 		}
; 2733 : 	
; 2734 : 		direct_play_set_player_id (id);

  00080	8b 45 e8	 mov	 eax, DWORD PTR _id$1[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?direct_play_set_player_id@@YGXH@Z ; direct_play_set_player_id

; 2735 : 	
; 2736 : 		return ( TRUE );

  00089	b8 01 00 00 00	 mov	 eax, 1
  0008e	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2737 : 	}
; 2738 : 
; 2739 : 	return ( FALSE );

  00090	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2740 : }

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
?direct_play_create_player@@YGHXZ ENDP			; direct_play_create_player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_leave_group@@YGHXZ
_TEXT	SEGMENT
?direct_play_leave_group@@YGHXZ PROC			; direct_play_leave_group, COMDAT

; 2518 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2519 : 	return ( TRUE ); // Jabberwock 050320 - Proc not used; value for compiler

  00009	b8 01 00 00 00	 mov	 eax, 1

; 2520 : /* ////Moje 040616 BUg Hunt
; 2521 : 	HRESULT
; 2522 : 		hr;
; 2523 : 
; 2524 : 	if ( direct_playx )
; 2525 : 	{
; 2526 : 	
; 2527 : 		if ( connection_data.this_group )
; 2528 : 		{
; 2529 : 	
; 2530 : 			if ( connection_data.this_group->group )
; 2531 : 			{
; 2532 : 		
; 2533 : 				#if DIRECT_PLAY_DEBUG
; 2534 : 		
; 2535 : 				debug_log ("DIRECTP: DirectPlay:: Deleting Player from group" );
; 2536 : 		
; 2537 : 				#endif
; 2538 : 		
; 2539 : 				hr = IDirectPlayX_DeletePlayerFromGroup ( direct_playx, connection_data.this_group->group, direct_play_get_player_id () );
; 2540 : 		
; 2541 : 				if ( hr != DP_OK )
; 2542 : 				{
; 2543 : 		
; 2544 : 					debug_log ( "DIRECTP: DirectPlay::DeletePlayerFromGroup: %s", get_dplay_error_message ( hr ) );
; 2545 : 		
; 2546 : 					return FALSE;
; 2547 : 				}
; 2548 : 		
; 2549 : 				return ( TRUE );
; 2550 : 			}
; 2551 : 			else
; 2552 : 			{
; 2553 : 	
; 2554 : 				return ( FALSE );
; 2555 : 			}
; 2556 : 		}
; 2557 : 		else
; 2558 : 		{
; 2559 : 	
; 2560 : 			debug_log ("DIRECTP: LEAVE GROUP : no group set");
; 2561 : 	
; 2562 : 			return ( FALSE );
; 2563 : 		}
; 2564 : 	}
; 2565 : 	else
; 2566 : 	{
; 2567 : 
; 2568 : 		return ( FALSE );
; 2569 : 	}
; 2570 : ////Moje 040616 Bug Hunt End next line
; 2571 : */
; 2572 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_leave_group@@YGHXZ ENDP			; direct_play_leave_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_join_group@@YGHXZ
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?direct_play_join_group@@YGHXZ PROC			; direct_play_join_group, COMDAT

; 2471 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2472 : 
; 2473 : 	HRESULT
; 2474 : 		hr;
; 2475 : 
; 2476 : 
; 2477 : 	if ( connection_data.this_group )

  00009	83 3d 34 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52, 0
  00010	74 67		 je	 SHORT $LN2@direct_pla

; 2478 : 	{
; 2479 : 
; 2480 : 		direct_play_set_group_id ( connection_data.this_group->group );

  00012	a1 34 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?direct_play_set_group_id@@YGXH@Z ; direct_play_set_group_id

; 2481 : 
; 2482 : 		hr = IDirectPlayX_AddPlayerToGroup ( direct_playx, direct_play_get_group_id (), direct_play_get_player_id () );

  0001f	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?direct_play_get_group_id@@YGHXZ ; direct_play_get_group_id
  0002a	50		 push	 eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00038	52		 push	 edx
  00039	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0003c	ff d0		 call	 eax
  0003e	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2483 : 
; 2484 : 		if ( hr != DP_OK ) // schorpp mp bugfix01 "==" 7/17/03

  00041	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00045	74 1b		 je	 SHORT $LN4@direct_pla

; 2485 : 		{
; 2486 : 
; 2487 : 			debug_log ( "DIRECTP: DirectPlay::AddPlayerToGroup: %s", get_dplay_error_message ( hr ) );

  00047	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@JNHOIJID@DIRECTP?3?5DirectPlay?3?3AddPlayerT@
  00056	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0005b	83 c4 08	 add	 esp, 8

; 2488 : 
; 2489 : 			return FALSE;

  0005e	33 c0		 xor	 eax, eax
  00060	eb 2a		 jmp	 SHORT $LN1@direct_pla
$LN4@direct_pla:

; 2490 : 		}
; 2491 : 		
; 2492 : 		#if DIRECT_PLAY_DEBUG
; 2493 : 
; 2494 : 		debug_log ("DIRECTP: Joining Group %s", connection_data.this_group->group_name);
; 2495 : 
; 2496 : 		#endif
; 2497 : 
; 2498 : 		direct_play_set_group_name (connection_data.this_group->group_name);

  00062	a1 34 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?direct_play_set_group_name@@YGXPBD@Z ; direct_play_set_group_name

; 2499 : 
; 2500 : 		return ( TRUE );

  00070	b8 01 00 00 00	 mov	 eax, 1
  00075	eb 15		 jmp	 SHORT $LN1@direct_pla

; 2501 : 	}
; 2502 : 	else

  00077	eb 11		 jmp	 SHORT $LN3@direct_pla
$LN2@direct_pla:

; 2503 : 	{
; 2504 : 
; 2505 : 		debug_log ( "DIRECTP: Direct Play: join group - no group set" );

  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EIBHFJME@DIRECTP?3?5Direct?5Play?3?5join?5grou@
  0007e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00083	83 c4 04	 add	 esp, 4

; 2506 : 
; 2507 : 		return ( FALSE );

  00086	33 c0		 xor	 eax, eax
  00088	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2508 : 	}
; 2509 : 
; 2510 : 	return ( FALSE ); //schorpp

  0008a	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2511 : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?direct_play_join_group@@YGHXZ ENDP			; direct_play_join_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_destroy_group@@YGHXZ
_TEXT	SEGMENT
_hr$1 = -4						; size = 4
?direct_play_destroy_group@@YGHXZ PROC			; direct_play_destroy_group, COMDAT

; 2650 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2651 : 
; 2652 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 3d		 je	 SHORT $LN2@direct_pla

; 2653 : 	{
; 2654 : 	
; 2655 : 		HRESULT
; 2656 : 			hr;
; 2657 : 	
; 2658 : 		#if DIRECT_PLAY_DEBUG
; 2659 : 
; 2660 : 		debug_log ("DIRECTP: DirectPlay:: Destroy group" );
; 2661 : 
; 2662 : 		#endif
; 2663 : 
; 2664 : 		hr = IDirectPlayX_DestroyGroup ( direct_playx, direct_play_get_group_id () );

  00012	e8 00 00 00 00	 call	 ?direct_play_get_group_id@@YGHXZ ; direct_play_get_group_id
  00017	50		 push	 eax
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00025	52		 push	 edx
  00026	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00029	ff d0		 call	 eax
  0002b	89 45 fc	 mov	 DWORD PTR _hr$1[ebp], eax

; 2665 : 	
; 2666 : 		if ( hr != DP_OK )

  0002e	83 7d fc 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  00032	74 1b		 je	 SHORT $LN2@direct_pla

; 2667 : 		{
; 2668 : 	
; 2669 : 			debug_log ( "DIRECTP: DirectPlay::DestroyGroup: %s", get_dplay_error_message ( hr ) );

  00034	8b 45 fc	 mov	 eax, DWORD PTR _hr$1[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BFHEDEDF@DIRECTP?3?5DirectPlay?3?3DestroyGro@
  00043	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00048	83 c4 08	 add	 esp, 8

; 2670 : 	
; 2671 : 			return FALSE;

  0004b	33 c0		 xor	 eax, eax
  0004d	eb 05		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2672 : 		}
; 2673 : 	}
; 2674 : 
; 2675 : 	return ( TRUE );

  0004f	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 2676 : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?direct_play_destroy_group@@YGHXZ ENDP			; direct_play_destroy_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_create_group@@YGHXZ
_TEXT	SEGMENT
_dpName$1 = -24						; size = 16
_id$2 = -8						; size = 4
_hr$3 = -4						; size = 4
?direct_play_create_group@@YGHXZ PROC			; direct_play_create_group, COMDAT

; 2409 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2410 : 
; 2411 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	0f 84 c6 00 00
	00		 je	 $LN2@direct_pla

; 2412 : 	{
; 2413 : 	
; 2414 : 		HRESULT
; 2415 : 			hr;
; 2416 : 	
; 2417 : 		DPID
; 2418 : 			id;
; 2419 : 	
; 2420 : 		DPNAME
; 2421 : 			dpName;
; 2422 : 	
; 2423 : 		static group_table_type
; 2424 : 			new_group;
; 2425 : 	
; 2426 : #if DIRECT_PLAY_DEBUG
; 2427 : 
; 2428 : 		debug_log ( "DIRECTP: DirectPlay::CreateGroup" );
; 2429 : 
; 2430 : #endif
; 2431 : 
; 2432 : 		memset ( &dpName, 0, sizeof ( DPNAME ) );

  00016	6a 10		 push	 16			; 00000010H
  00018	6a 00		 push	 0
  0001a	8d 45 e8	 lea	 eax, DWORD PTR _dpName$1[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2433 : 	
; 2434 : 		dpName.dwSize = sizeof ( DPNAME );

  00026	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR _dpName$1[ebp], 16 ; 00000010H

; 2435 : 	
; 2436 : 		dpName.lpszShortName = ( LPWSTR ) direct_play_get_group_name ();

  0002d	e8 00 00 00 00	 call	 ?direct_play_get_group_name@@YGPBDXZ ; direct_play_get_group_name
  00032	89 45 f0	 mov	 DWORD PTR _dpName$1[ebp+8], eax

; 2437 : 	
; 2438 : 		dpName.lpszLongName = ( LPWSTR ) direct_play_get_group_name ();

  00035	e8 00 00 00 00	 call	 ?direct_play_get_group_name@@YGPBDXZ ; direct_play_get_group_name
  0003a	89 45 f4	 mov	 DWORD PTR _dpName$1[ebp+12], eax

; 2439 : 	
; 2440 : 		hr = IDirectPlayX_CreateGroup ( direct_playx, &id, &dpName, NULL, 0, 0 );

  0003d	6a 00		 push	 0
  0003f	6a 00		 push	 0
  00041	6a 00		 push	 0
  00043	8d 45 e8	 lea	 eax, DWORD PTR _dpName$1[ebp]
  00046	50		 push	 eax
  00047	8d 4d f8	 lea	 ecx, DWORD PTR _id$2[ebp]
  0004a	51		 push	 ecx
  0004b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00051	8b 02		 mov	 eax, DWORD PTR [edx]
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00059	51		 push	 ecx
  0005a	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0005d	ff d2		 call	 edx
  0005f	89 45 fc	 mov	 DWORD PTR _hr$3[ebp], eax

; 2441 : 	
; 2442 : 		direct_play_set_group_id ( id );

  00062	8b 45 f8	 mov	 eax, DWORD PTR _id$2[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?direct_play_set_group_id@@YGXH@Z ; direct_play_set_group_id

; 2443 : 	
; 2444 : 		new_group.group = direct_play_get_group_id ();

  0006b	e8 00 00 00 00	 call	 ?direct_play_get_group_id@@YGHXZ ; direct_play_get_group_id
  00070	a3 00 00 00 00	 mov	 DWORD PTR ?new_group@?4??direct_play_create_group@@YGHXZ@4UGROUP_TABLE_TYPE@@A, eax

; 2445 : 	
; 2446 : 		new_group.group_name = ( char * ) safe_malloc ( strlen ( direct_play_get_group_name () ) + 1 );

  00075	e8 00 00 00 00	 call	 ?direct_play_get_group_name@@YGPBDXZ ; direct_play_get_group_name
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _strlen
  00080	83 c4 04	 add	 esp, 4
  00083	83 c0 01	 add	 eax, 1
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0008c	a3 04 00 00 00	 mov	 DWORD PTR ?new_group@?4??direct_play_create_group@@YGHXZ@4UGROUP_TABLE_TYPE@@A+4, eax

; 2447 : 	
; 2448 : 		sprintf ( new_group.group_name, "%s", direct_play_get_group_name () );

  00091	e8 00 00 00 00	 call	 ?direct_play_get_group_name@@YGPBDXZ ; direct_play_get_group_name
  00096	50		 push	 eax
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0009c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?new_group@?4??direct_play_create_group@@YGHXZ@4UGROUP_TABLE_TYPE@@A+4
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 _sprintf
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2449 : 	
; 2450 : 		connection_data.this_group = &new_group;

  000aa	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+52, OFFSET ?new_group@?4??direct_play_create_group@@YGHXZ@4UGROUP_TABLE_TYPE@@A

; 2451 : 	
; 2452 : 		if ( hr != DP_OK )

  000b4	83 7d fc 00	 cmp	 DWORD PTR _hr$3[ebp], 0
  000b8	74 1b		 je	 SHORT $LN3@direct_pla

; 2453 : 		{
; 2454 : 	
; 2455 : 			debug_log ( "DirectPlay::CreateGroup error: %s", get_dplay_error_message ( hr ) );

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _hr$3[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000c3	50		 push	 eax
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@DGBFLJLI@DirectPlay?3?3CreateGroup?5error?3?5@
  000c9	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000ce	83 c4 08	 add	 esp, 8

; 2456 : 	
; 2457 : 			return ( FALSE );

  000d1	33 c0		 xor	 eax, eax
  000d3	eb 09		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2458 : 		}
; 2459 : 
; 2460 : 		return ( TRUE );

  000d5	b8 01 00 00 00	 mov	 eax, 1
  000da	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2461 : 	}
; 2462 : 
; 2463 : 	return ( FALSE );

  000dc	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2464 : }

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
?direct_play_create_group@@YGHXZ ENDP			; direct_play_create_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enumerate_groups@@YGHXZ
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?direct_play_enumerate_groups@@YGHXZ PROC		; direct_play_enumerate_groups, COMDAT

; 2325 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2326 : 
; 2327 : 	HRESULT
; 2328 : 		hr;
; 2329 : 
; 2330 : 
; 2331 : 	if ( direct_play_get_comms_mode () == DIRECT_PLAY_COMMS_MODE_MULTI )

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00010	75 48		 jne	 SHORT $LN2@direct_pla

; 2332 : 	{
; 2333 : 
; 2334 : 
; 2335 : 	//
; 2336 : 	// enumerate avaliable groups
; 2337 : 	//
; 2338 : 
; 2339 : 		if ( connection_data.this_session.session )

  00012	83 3d 2c 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44, 0
  00019	74 3f		 je	 SHORT $LN2@direct_pla

; 2340 : 		{
; 2341 : 
; 2342 : 			group_counter = 0;

  0001b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?group_counter@@3HA, 0

; 2343 : 
; 2344 : 			//hr = IDirectPlayX_EnumGroups ( direct_playx, NULL, ( LPDPENUMPLAYERSCALLBACK2 ) direct_play_enumerate_groups_callback, NULL, 0 );
; 2345 : 			hr = IDirectPlayX_EnumGroups ( direct_playx, &connection_data.this_session.session->guidInstance, ( LPDPENUMPLAYERSCALLBACK2 ) direct_play_enumerate_groups_callback, NULL, 0 );

  00025	6a 00		 push	 0
  00027	6a 00		 push	 0
  00029	68 00 00 00 00	 push	 OFFSET ?direct_play_enumerate_groups_callback@@YGHKKPBUDPNAME@@KPAX@Z ; direct_play_enumerate_groups_callback
  0002e	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44
  00033	83 c0 08	 add	 eax, 8
  00036	50		 push	 eax
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00044	50		 push	 eax
  00045	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  00048	ff d1		 call	 ecx
  0004a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2346 : 
; 2347 : 
; 2348 : 			#if DIRECT_PLAY_DEBUG
; 2349 : 
; 2350 : 			debug_log ( "DIRECTP: DirectPlay::EnumGroups : %s", get_dplay_error_message ( hr ) );
; 2351 : 
; 2352 : 			#endif
; 2353 : 
; 2354 : 			if ( hr == DP_OK )

  0004d	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00051	75 07		 jne	 SHORT $LN2@direct_pla

; 2355 : 				return ( group_counter ); 

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?group_counter@@3HA
  00058	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2356 : 
; 2357 : 		}
; 2358 : 	}
; 2359 : 
; 2360 : 
; 2361 : 	return ( FALSE ); //schorpp

  0005a	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2362 : 
; 2363 : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?direct_play_enumerate_groups@@YGHXZ ENDP		; direct_play_enumerate_groups
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ
_TEXT	SEGMENT
?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ PROC ; direct_play_get_session_capabilities, COMDAT

; 2311 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2312 : 
; 2313 : 	return ( LPDPSESSIONDESC2 ) session_capabilities;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA

; 2314 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ ENDP ; direct_play_get_session_capabilities
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_session_players@@YGHXZ
_TEXT	SEGMENT
?direct_play_session_players@@YGHXZ PROC		; direct_play_session_players, COMDAT

; 2275 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2276 : 
; 2277 : 	direct_play_session_capabilities ();

  00009	e8 00 00 00 00	 call	 ?direct_play_session_capabilities@@YGHXZ ; direct_play_session_capabilities

; 2278 : 
; 2279 : 	return ( ( LPDPSESSIONDESC2 ) session_capabilities )->dwCurrentPlayers;

  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_capabilities@@3PAXA
  00013	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]

; 2280 : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?direct_play_session_players@@YGHXZ ENDP		; direct_play_session_players
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_session_capabilities@@YGHXZ
_TEXT	SEGMENT
_size$ = -8						; size = 4
_hr$ = -4						; size = 4
?direct_play_session_capabilities@@YGHXZ PROC		; direct_play_session_capabilities, COMDAT

; 2221 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2222 : 
; 2223 : 	HRESULT
; 2224 : 		hr;
; 2225 : 
; 2226 : 	int
; 2227 : 		size;
; 2228 : 
; 2229 : 	if ( direct_play_get_comms_mode () == DIRECT_PLAY_COMMS_MODE_MULTI ) //schorpp

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00010	75 74		 jne	 SHORT $LN2@direct_pla

; 2230 : 	{
; 2231 : 
; 2232 : 
; 2233 : 	hr = IDirectPlayX_GetSessionDesc ( direct_playx, NULL, ( LPDWORD ) &size );

  00012	8d 45 f8	 lea	 eax, DWORD PTR _size$[ebp]
  00015	50		 push	 eax
  00016	6a 00		 push	 0
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00025	50		 push	 eax
  00026	8b 4a 58	 mov	 ecx, DWORD PTR [edx+88]
  00029	ff d1		 call	 ecx
  0002b	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2234 : 
; 2235 : 	session_capabilities = ( LPVOID ) safe_malloc ( size );

  0002e	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00037	a3 00 00 00 00	 mov	 DWORD PTR ?session_capabilities@@3PAXA, eax

; 2236 : 
; 2237 : 	hr = IDirectPlayX_GetSessionDesc ( direct_playx, ( LPVOID ) session_capabilities, ( LPDWORD ) &size );

  0003c	8d 45 f8	 lea	 eax, DWORD PTR _size$[ebp]
  0003f	50		 push	 eax
  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_capabilities@@3PAXA
  00046	51		 push	 ecx
  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0004d	8b 02		 mov	 eax, DWORD PTR [edx]
  0004f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00055	51		 push	 ecx
  00056	8b 50 58	 mov	 edx, DWORD PTR [eax+88]
  00059	ff d2		 call	 edx
  0005b	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2238 : 
; 2239 : 		if ( hr != DP_OK )

  0005e	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00062	74 1b		 je	 SHORT $LN3@direct_pla

; 2240 : 		{
; 2241 : 
; 2242 : 			debug_log ( "DIRECTP: DirectPlay::GetSessionDesc : %s", get_dplay_error_message ( hr ) );

  00064	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@OBFEMEHO@DIRECTP?3?5DirectPlay?3?3GetSession@
  00073	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00078	83 c4 08	 add	 esp, 8

; 2243 : 
; 2244 : 			return ( FALSE );

  0007b	33 c0		 xor	 eax, eax
  0007d	eb 09		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2245 : 		}
; 2246 : 
; 2247 : 	#if DIRECT_PLAY_DEBUG
; 2248 : 
; 2249 : 	debug_log ( "DIRECTP: Session Capabilities:");
; 2250 : 
; 2251 : 	debug_log ( "DIRECTP:      Max Players : %d", ((LPDPSESSIONDESC2) session_capabilities)->dwMaxPlayers);
; 2252 : 
; 2253 : 	debug_log ( "DIRECTP:      Num Players : %d", ((LPDPSESSIONDESC2) session_capabilities)->dwCurrentPlayers);
; 2254 : 
; 2255 : 	#endif
; 2256 : 
; 2257 : 	return TRUE;

  0007f	b8 01 00 00 00	 mov	 eax, 1
  00084	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2258 : 	
; 2259 : 	}
; 2260 : 
; 2261 : 	#if DIRECT_PLAY_DEBUG
; 2262 : 	
; 2263 : 	debug_log ( "DIRECTP: direct_play_session_capabilities: Undefined State" );
; 2264 : 	
; 2265 : 	#endif
; 2266 : 	
; 2267 : 	return ( FALSE ); // schorpp - default handling undefined state

  00086	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2268 : }

  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
?direct_play_session_capabilities@@YGHXZ ENDP		; direct_play_session_capabilities
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_join_session@@YGHXZ
_TEXT	SEGMENT
_sessionDesc$ = -84					; size = 80
_hr$ = -4						; size = 4
?direct_play_join_session@@YGHXZ PROC			; direct_play_join_session, COMDAT

; 2083 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2084 : 
; 2085 : 	HRESULT
; 2086 : 		hr;
; 2087 : 
; 2088 : 	DPSESSIONDESC2
; 2089 : 		sessionDesc;
; 2090 : 
; 2091 : 	if ( !direct_play_get_lobbied () )

  0000c	e8 00 00 00 00	 call	 ?direct_play_get_lobbied@@YGHXZ ; direct_play_get_lobbied
  00011	85 c0		 test	 eax, eax
  00013	0f 85 c9 00 00
	00		 jne	 $LN2@direct_pla

; 2092 : 	{
; 2093 : 	
; 2094 : 		//
; 2095 : 		// After enumerating the avaliable sessions, join one
; 2096 : 		//
; 2097 : 	
; 2098 : 		if ( connection_data.this_session.session )

  00019	83 3d 2c 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44, 0
  00020	0f 84 a9 00 00
	00		 je	 $LN4@direct_pla

; 2099 : 		{
; 2100 : 	
; 2101 : 			memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  00026	6a 50		 push	 80			; 00000050H
  00028	6a 00		 push	 0
  0002a	8d 45 ac	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _memset
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2102 : 	
; 2103 : 			sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  00036	c7 45 ac 50 00
	00 00		 mov	 DWORD PTR _sessionDesc$[ebp], 80 ; 00000050H

; 2104 : 	
; 2105 : 			sessionDesc.guidInstance = connection_data.this_session.session->guidInstance;

  0003d	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44
  00042	83 c0 08	 add	 eax, 8
  00045	8b 08		 mov	 ecx, DWORD PTR [eax]
  00047	89 4d b4	 mov	 DWORD PTR _sessionDesc$[ebp+8], ecx
  0004a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0004d	89 55 b8	 mov	 DWORD PTR _sessionDesc$[ebp+12], edx
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d bc	 mov	 DWORD PTR _sessionDesc$[ebp+16], ecx
  00056	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00059	89 55 c0	 mov	 DWORD PTR _sessionDesc$[ebp+20], edx

; 2106 : 	
; 2107 : 			sessionDesc.guidApplication = connection_data.this_session.session->guidApplication;

  0005c	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44
  00061	83 c0 18	 add	 eax, 24			; 00000018H
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	89 4d c4	 mov	 DWORD PTR _sessionDesc$[ebp+24], ecx
  00069	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0006c	89 55 c8	 mov	 DWORD PTR _sessionDesc$[ebp+28], edx
  0006f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00072	89 4d cc	 mov	 DWORD PTR _sessionDesc$[ebp+32], ecx
  00075	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00078	89 55 d0	 mov	 DWORD PTR _sessionDesc$[ebp+36], edx

; 2108 : 	
; 2109 : 			hr = IDirectPlayX_Open ( direct_playx, &sessionDesc, DPOPEN_JOIN );

  0007b	6a 01		 push	 1
  0007d	8d 45 ac	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  00080	50		 push	 eax
  00081	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0008e	50		 push	 eax
  0008f	8b 4a 60	 mov	 ecx, DWORD PTR [edx+96]
  00092	ff d1		 call	 ecx
  00094	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2110 : 	
; 2111 : 			if ( hr != DP_OK )

  00097	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0009b	74 1b		 je	 SHORT $LN6@direct_pla

; 2112 : 			{
; 2113 : 	
; 2114 : 				debug_log ( "DIRECTP: DirectPlay::Open : %s", get_dplay_error_message ( hr ) );

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000a6	50		 push	 eax
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@KEFGKGAJ@DIRECTP?3?5DirectPlay?3?3Open?5?3?5?$CFs@
  000ac	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b1	83 c4 08	 add	 esp, 8

; 2115 : 	
; 2116 : 				return ( FALSE );

  000b4	33 c0		 xor	 eax, eax
  000b6	eb 40		 jmp	 SHORT $LN1@direct_pla
$LN6@direct_pla:

; 2117 : 			}
; 2118 : 	
; 2119 : 	
; 2120 : 			direct_play_set_session_name ( ( const char * ) connection_data.this_session.session->lpszSessionName );

  000b8	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44
  000bd	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000c0	51		 push	 ecx
  000c1	e8 00 00 00 00	 call	 ?direct_play_set_session_name@@YGXPBD@Z ; direct_play_set_session_name

; 2121 : 	
; 2122 : 	#if DIRECT_PLAY_DEBUG
; 2123 : 	
; 2124 : 			debug_log ( "DIRECTP: Joining Session %s", connection_data.this_session.session->lpszSessionName );
; 2125 : 	
; 2126 : 	#endif
; 2127 : 	
; 2128 : 			return TRUE;

  000c6	b8 01 00 00 00	 mov	 eax, 1
  000cb	eb 2b		 jmp	 SHORT $LN1@direct_pla

; 2129 : 		}
; 2130 : 		else

  000cd	eb 11		 jmp	 SHORT $LN5@direct_pla
$LN4@direct_pla:

; 2131 : 		{
; 2132 : 
; 2133 : 			debug_log ( "Attempting to join a direct play session, but session is not set" );

  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@OOGAIHKJ@Attempting?5to?5join?5a?5direct?5pla@
  000d4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d9	83 c4 04	 add	 esp, 4

; 2134 : 	
; 2135 : 			return ( FALSE );

  000dc	33 c0		 xor	 eax, eax
  000de	eb 18		 jmp	 SHORT $LN1@direct_pla
$LN5@direct_pla:

; 2136 : 		}
; 2137 : 	}
; 2138 : 	else

  000e0	eb 14		 jmp	 SHORT $LN3@direct_pla
$LN2@direct_pla:

; 2139 : 	{
; 2140 : 
; 2141 : 		debug_log ( "Joining lobbied game" );

  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HPODNLHG@Joining?5lobbied?5game@
  000e7	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000ec	83 c4 04	 add	 esp, 4

; 2142 : 
; 2143 : 		return ( TRUE );

  000ef	b8 01 00 00 00	 mov	 eax, 1
  000f4	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2144 : 	}
; 2145 : 
; 2146 : 	#if DIRECT_PLAY_DEBUG
; 2147 : 	
; 2148 : 			debug_log ( "DIRECTP: Joining Session: Undefined State" );
; 2149 : 	
; 2150 : 	#endif
; 2151 : 	return ( FALSE ); // schorpp - default handling undefined state

  000f6	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 2152 : 
; 2153 : }

  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c3		 ret	 0
?direct_play_join_session@@YGHXZ ENDP			; direct_play_join_session
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_create_session@@YGHH@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_value$ = 8						; size = 4
?direct_play_create_session@@YGHH@Z PROC		; direct_play_create_session, COMDAT

; 1976 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1977 : 
; 1978 : 	static DPSESSIONDESC2
; 1979 : 		sessionDesc;
; 1980 : 
; 1981 : 	HRESULT
; 1982 : 		hr;
; 1983 : 
; 1984 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	0f 84 e1 00 00
	00		 je	 $LN2@direct_pla

; 1985 : 	{
; 1986 : 	
; 1987 : 		//
; 1988 : 		// Create a new session
; 1989 : 		//
; 1990 : 	
; 1991 : 		memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  00016	6a 50		 push	 80			; 00000050H
  00018	6a 00		 push	 0
  0001a	68 00 00 00 00	 push	 OFFSET ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1992 : 	
; 1993 : 		sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  00027	c7 05 00 00 00
	00 50 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A, 80 ; 00000050H

; 1994 : 
; 1995 : 		sessionDesc.dwFlags = DPSESSION_KEEPALIVE;

  00031	c7 05 04 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+4, 64 ; 00000040H

; 1996 : 
; 1997 : 		if ( direct_play_use_guaranteed_packets )

  0003b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_use_guaranteed_packets@@3HA, 0 ; direct_play_use_guaranteed_packets
  00042	74 0f		 je	 SHORT $LN3@direct_pla

; 1998 : 		{
; 1999 : 
; 2000 : 			sessionDesc.dwFlags |= DPSESSION_DIRECTPLAYPROTOCOL;

  00044	a1 04 00 00 00	 mov	 eax, DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+4
  00049	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0004e	a3 04 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+4, eax
$LN3@direct_pla:

; 2001 : 		}
; 2002 : 
; 2003 : 		sessionDesc.guidApplication = TEST_GUID;

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  00058	a3 18 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+24, eax
  0005d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  00063	89 0d 1c 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+28, ecx
  00069	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  0006f	89 15 20 00 00
	00		 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+32, edx
  00075	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  0007a	a3 24 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+36, eax

; 2004 : 		sessionDesc.dwMaxPlayers = command_line_maxplayers;

  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_maxplayers@@3HA ; command_line_maxplayers
  00084	a3 28 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+40, eax

; 2005 : 		sessionDesc.lpszSessionName = ( LPWSTR ) connection_data.session_name;

  00089	a1 04 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+4
  0008e	a3 30 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+48, eax

; 2006 : 		sessionDesc.dwReserved1 = 0;

  00093	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+56, 0

; 2007 : 		sessionDesc.dwReserved2 = 0;

  0009d	c7 05 3c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+60, 0

; 2008 : 		sessionDesc.dwUser1 = value;

  000a7	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  000aa	a3 40 00 00 00	 mov	 DWORD PTR ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A+64, eax

; 2009 : 		connection_data.this_session.session = &sessionDesc;

  000af	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+44, OFFSET ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A

; 2010 : 	
; 2011 : 		hr = IDirectPlayX_Open ( direct_playx, &sessionDesc, DPOPEN_CREATE );

  000b9	6a 02		 push	 2
  000bb	68 00 00 00 00	 push	 OFFSET ?sessionDesc@?1??direct_play_create_session@@YGHH@Z@4UDPSESSIONDESC2@@A
  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000cd	52		 push	 edx
  000ce	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  000d1	ff d0		 call	 eax
  000d3	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2012 : 	
; 2013 : 		if ( hr != DP_OK )

  000d6	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000da	74 1b		 je	 SHORT $LN2@direct_pla

; 2014 : 		{
; 2015 : 	
; 2016 : 			debug_log ( "DirectPlay::Open error: %s", get_dplay_error_message ( hr ) );

  000dc	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000e5	50		 push	 eax
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EHPPAAKN@DirectPlay?3?3Open?5error?3?5?$CFs@
  000eb	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000f0	83 c4 08	 add	 esp, 8

; 2017 : 	
; 2018 : 			return ( FALSE );

  000f3	33 c0		 xor	 eax, eax
  000f5	eb 05		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2019 : 		}
; 2020 : 	}
; 2021 : 
; 2022 : 	return ( TRUE );

  000f7	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 2023 : }

  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 04 00	 ret	 4
?direct_play_create_session@@YGHH@Z ENDP		; direct_play_create_session
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enumerate_sessions@@YGHXZ
_TEXT	SEGMENT
_new_session$1 = -96					; size = 4
_destroy_session$ = -92					; size = 4
_current_session$ = -88					; size = 4
_sessionDesc$ = -84					; size = 80
_hr$ = -4						; size = 4
?direct_play_enumerate_sessions@@YGHXZ PROC		; direct_play_enumerate_sessions, COMDAT

; 1055 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1056 : 
; 1057 : 	HRESULT
; 1058 : 		hr;
; 1059 : 
; 1060 : 	DPSESSIONDESC2
; 1061 : 		sessionDesc;
; 1062 : 
; 1063 : 	session_table_type
; 1064 : 		*current_session,
; 1065 : 		*destroy_session;
; 1066 : 
; 1067 : 	#if DIRECT_PLAY_DEBUG
; 1068 : 
; 1069 : 	debug_log ( "DIRECTP: enumerate sessions" );
; 1070 : 
; 1071 : 	#endif
; 1072 : 
; 1073 : 	if ( direct_play_get_comms_mode () != DIRECT_PLAY_COMMS_MODE_MULTI )

  0000c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00013	74 14		 je	 SHORT $LN4@direct_pla

; 1074 : 	{
; 1075 : 
; 1076 : 		debug_log ( "COMMS MODE != MULTI!!!" );

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LPANMCNH@COMMS?5MODE?5?$CB?$DN?5MULTI?$CB?$CB?$CB@
  0001a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0001f	83 c4 04	 add	 esp, 4

; 1077 : 
; 1078 : 		return ( FALSE );

  00022	33 c0		 xor	 eax, eax
  00024	e9 99 01 00 00	 jmp	 $LN1@direct_pla
$LN4@direct_pla:

; 1079 : 	}
; 1080 : 
; 1081 : 	//
; 1082 : 	// clear the current session table
; 1083 : 	//
; 1084 : 
; 1085 : 	current_session = session_table;

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  0002e	89 45 a8	 mov	 DWORD PTR _current_session$[ebp], eax

; 1086 : 
; 1087 : 	session_counter = 0; // Jabberwock 031209 Sessions not cleared properly

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?session_counter@@3HA, 0
$LN2@direct_pla:

; 1088 : 
; 1089 : 	while ( current_session )

  0003b	83 7d a8 00	 cmp	 DWORD PTR _current_session$[ebp], 0
  0003f	74 52		 je	 SHORT $LN3@direct_pla

; 1090 : 	{
; 1091 : 
; 1092 : 		destroy_session = current_session;

  00041	8b 45 a8	 mov	 eax, DWORD PTR _current_session$[ebp]
  00044	89 45 a4	 mov	 DWORD PTR _destroy_session$[ebp], eax

; 1093 : 
; 1094 : 		current_session = current_session->next_session;

  00047	8b 45 a8	 mov	 eax, DWORD PTR _current_session$[ebp]
  0004a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004d	89 4d a8	 mov	 DWORD PTR _current_session$[ebp], ecx

; 1095 : 
; 1096 : 		if ( destroy_session->session )

  00050	8b 45 a4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00053	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00057	74 2f		 je	 SHORT $LN5@direct_pla

; 1097 : 		{
; 1098 : 
; 1099 : 			if ( !destroy_session->lobby_session )

  00059	8b 45 a4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  0005c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0005f	75 1b		 jne	 SHORT $LN6@direct_pla

; 1100 : 			{
; 1101 : 	
; 1102 : 				if ( destroy_session->session->lpszSessionNameA )

  00061	8b 45 a4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00064	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00067	83 79 30 00	 cmp	 DWORD PTR [ecx+48], 0
  0006b	74 0f		 je	 SHORT $LN6@direct_pla

; 1103 : 				{
; 1104 : 	
; 1105 : 					safe_free ( destroy_session->session->lpszSessionNameA );

  0006d	8b 45 a4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  00070	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00073	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN6@direct_pla:

; 1106 : 				}
; 1107 : 			}
; 1108 : 
; 1109 : 			safe_free ( destroy_session->session );

  0007c	8b 45 a4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  0007f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN5@direct_pla:

; 1110 : 		}
; 1111 : 
; 1112 : 		safe_free ( destroy_session );

  00088	8b 45 a4	 mov	 eax, DWORD PTR _destroy_session$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1113 : 	}

  00091	eb a8		 jmp	 SHORT $LN2@direct_pla
$LN3@direct_pla:

; 1114 : 
; 1115 : 	session_table = NULL;

  00093	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, 0

; 1116 : 
; 1117 : 	//
; 1118 : 	// enumerate avaliable sessions
; 1119 : 	//
; 1120 : 
; 1121 : 	if ( !direct_play_get_lobbied () )

  0009d	e8 00 00 00 00	 call	 ?direct_play_get_lobbied@@YGHXZ ; direct_play_get_lobbied
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 89 00 00
	00		 jne	 $LN8@direct_pla

; 1122 : 	{
; 1123 : 
; 1124 : 		if ( direct_playx )

  000aa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  000b1	74 7b		 je	 SHORT $LN10@direct_pla

; 1125 : 		{
; 1126 : 	
; 1127 : 			#if DIRECT_PLAY_DEBUG
; 1128 : 		
; 1129 : 			debug_log ( "DIRECTP: Enumerating sessions avaliable:" );
; 1130 : 		
; 1131 : 			#endif
; 1132 : 		
; 1133 : 			memset ( &sessionDesc, 0, sizeof ( DPSESSIONDESC2 ) );

  000b3	6a 50		 push	 80			; 00000050H
  000b5	6a 00		 push	 0
  000b7	8d 45 ac	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 _memset
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1134 : 		
; 1135 : 			sessionDesc.dwSize = sizeof ( DPSESSIONDESC2 );

  000c3	c7 45 ac 50 00
	00 00		 mov	 DWORD PTR _sessionDesc$[ebp], 80 ; 00000050H

; 1136 : 		
; 1137 : 			sessionDesc.guidApplication = TEST_GUID;

  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID
  000cf	89 45 c4	 mov	 DWORD PTR _sessionDesc$[ebp+24], eax
  000d2	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _TEST_GUID+4
  000d8	89 4d c8	 mov	 DWORD PTR _sessionDesc$[ebp+28], ecx
  000db	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _TEST_GUID+8
  000e1	89 55 cc	 mov	 DWORD PTR _sessionDesc$[ebp+32], edx
  000e4	a1 0c 00 00 00	 mov	 eax, DWORD PTR _TEST_GUID+12
  000e9	89 45 d0	 mov	 DWORD PTR _sessionDesc$[ebp+36], eax

; 1138 : 		
; 1139 : 			hr = IDirectPlayX_EnumSessions ( direct_playx, &sessionDesc, 0,

  000ec	6a 10		 push	 16			; 00000010H
  000ee	6a 00		 push	 0
  000f0	68 00 00 00 00	 push	 OFFSET ?direct_play_enumerate_sessions_callback@@YGHPAUDPSESSIONDESC2@@PAKKPAX@Z ; direct_play_enumerate_sessions_callback
  000f5	6a 00		 push	 0
  000f7	8d 45 ac	 lea	 eax, DWORD PTR _sessionDesc$[ebp]
  000fa	50		 push	 eax
  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00101	8b 11		 mov	 edx, DWORD PTR [ecx]
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00108	50		 push	 eax
  00109	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  0010c	ff d1		 call	 ecx
  0010e	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1140 : 															( LPDPENUMSESSIONSCALLBACK2 ) direct_play_enumerate_sessions_callback,
; 1141 : 															NULL,
; 1142 : 															DPENUMSESSIONS_ASYNC );
; 1143 : 	//														DPENUMSESSIONS_RETURNSTATUS | DPENUMSESSIONS_AVAILABLE | DPENUMSESSIONS_ASYNC );
; 1144 : 		
; 1145 : 			if ( hr != DP_OK )

  00111	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00115	74 17		 je	 SHORT $LN10@direct_pla

; 1146 : 			{
; 1147 : 		
; 1148 : 				debug_log ( "DIRECTP: DirectPlay::EnumSessions : %s", get_dplay_error_message ( hr ) );

  00117	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00120	50		 push	 eax
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GJNILHHL@DIRECTP?3?5DirectPlay?3?3EnumSessio@
  00126	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0012b	83 c4 08	 add	 esp, 8
$LN10@direct_pla:

; 1149 : 			}
; 1150 : 		}
; 1151 : 	}
; 1152 : 	else

  0012e	e9 85 00 00 00	 jmp	 $LN9@direct_pla
$LN8@direct_pla:

; 1153 : 	{
; 1154 : 
; 1155 : 		if ( direct_play_get_lobbied_join () )

  00133	e8 00 00 00 00	 call	 ?direct_play_get_lobbied_join@@YGHXZ ; direct_play_get_lobbied_join
  00138	85 c0		 test	 eax, eax
  0013a	74 75		 je	 SHORT $LN12@direct_pla

; 1156 : 		{
; 1157 : 	
; 1158 : 			session_table_type
; 1159 : 				*new_session;
; 1160 : 	
; 1161 : 			debug_log ( "Creating lobby session" );

  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JCCEPHLF@Creating?5lobby?5session@
  00141	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00146	83 c4 04	 add	 esp, 4

; 1162 : 	
; 1163 : 			new_session = ( session_table_type * ) safe_malloc ( sizeof ( session_table_type ) );

  00149	6a 0c		 push	 12			; 0000000cH
  0014b	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00150	89 45 a0	 mov	 DWORD PTR _new_session$1[ebp], eax

; 1164 : 	
; 1165 : 			new_session->lobby_session = TRUE;

  00153	8b 45 a0	 mov	 eax, DWORD PTR _new_session$1[ebp]
  00156	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 1166 : 	
; 1167 : 			new_session->next_session = session_table;

  0015c	8b 45 a0	 mov	 eax, DWORD PTR _new_session$1[ebp]
  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A
  00165	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1168 : 	
; 1169 : 			session_table = new_session;

  00168	8b 45 a0	 mov	 eax, DWORD PTR _new_session$1[ebp]
  0016b	a3 00 00 00 00	 mov	 DWORD PTR ?session_table@@3PAUSESSION_TABLE_TYPE@@A, eax

; 1170 : 	
; 1171 : 			new_session->session = ( LPDPSESSIONDESC2 ) safe_malloc ( sizeof ( DPSESSIONDESC2 ) );

  00170	6a 50		 push	 80			; 00000050H
  00172	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00177	8b 4d a0	 mov	 ecx, DWORD PTR _new_session$1[ebp]
  0017a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1172 : 	
; 1173 : 			memcpy ( new_session->session, direct_play_lobby3_connection_data->lpSessionDesc, sizeof ( DPSESSIONDESC2 ) );

  0017d	6a 50		 push	 80			; 00000050H
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_play_lobby3_connection_data@@3PAUDPLCONNECTION@@A
  00184	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00187	51		 push	 ecx
  00188	8b 55 a0	 mov	 edx, DWORD PTR _new_session$1[ebp]
  0018b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 _memcpy
  00194	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1174 : 	
; 1175 : 			session_counter ++;

  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_counter@@3HA
  0019c	83 c0 01	 add	 eax, 1
  0019f	a3 00 00 00 00	 mov	 DWORD PTR ?session_counter@@3HA, eax

; 1176 : 	
; 1177 : 			#if DIRECT_PLAY_DEBUG
; 1178 : 	
; 1179 : 			debug_log ("DIRECTP:      %s", new_session->session->lpszSessionNameA);
; 1180 : 	
; 1181 : 			#endif
; 1182 : 	
; 1183 : 			debug_log ( "Done" );

  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_04KNCIGIPG@Done@
  001a9	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001ae	83 c4 04	 add	 esp, 4
$LN12@direct_pla:

; 1184 : 		}
; 1185 : 
; 1186 : 		return TRUE;

  001b1	b8 01 00 00 00	 mov	 eax, 1
  001b6	eb 0a		 jmp	 SHORT $LN1@direct_pla
$LN9@direct_pla:

; 1187 : 	}
; 1188 : 
; 1189 : 	direct_play_sort_session_list ();

  001b8	e8 00 00 00 00	 call	 ?direct_play_sort_session_list@@YGXXZ ; direct_play_sort_session_list

; 1190 : 
; 1191 : 	return  ( session_counter );

  001bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_counter@@3HA
$LN1@direct_pla:

; 1192 : }

  001c2	5f		 pop	 edi
  001c3	5e		 pop	 esi
  001c4	5b		 pop	 ebx
  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c3		 ret	 0
?direct_play_enumerate_sessions@@YGHXZ ENDP		; direct_play_enumerate_sessions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_register_application@@YGXPBD0@Z
_TEXT	SEGMENT
_path$ = -1084						; size = 1024
_application_description$ = -60				; size = 52
_dp_lobby3$ = -8					; size = 4
_ret$ = -4						; size = 4
_app_name$ = 8						; size = 4
_filename$ = 12						; size = 4
?direct_play_register_application@@YGXPBD0@Z PROC	; direct_play_register_application, COMDAT

; 443  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 04 00
	00		 sub	 esp, 1276		; 000004fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 444  : 
; 445  : 	HRESULT
; 446  : 		ret;
; 447  : 
; 448  : 	LPDIRECTPLAYLOBBY3A
; 449  : 		dp_lobby3;
; 450  : 
; 451  : 	DPAPPLICATIONDESC
; 452  : 		application_description;
; 453  : 
; 454  : 	char
; 455  : 		path[1024];
; 456  : 
; 457  : 	GetCurrentDirectory ( 1024, path );

  0000c	8d 85 c4 fb ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  00012	50		 push	 eax
  00013	68 00 04 00 00	 push	 1024			; 00000400H
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentDirectoryA@8

; 458  : 
; 459  : 	application_description.dwSize = sizeof ( DPAPPLICATIONDESC );

  0001e	c7 45 c4 34 00
	00 00		 mov	 DWORD PTR _application_description$[ebp], 52 ; 00000034H

; 460  : 	application_description.dwFlags = 0;

  00025	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _application_description$[ebp+4], 0

; 461  : 	application_description.lpszApplicationNameA = ( LPSTR ) app_name;

  0002c	8b 45 08	 mov	 eax, DWORD PTR _app_name$[ebp]
  0002f	89 45 cc	 mov	 DWORD PTR _application_description$[ebp+8], eax

; 462  : 
; 463  : 	memcpy ( &application_description.guidApplication, &TEST_GUID, sizeof ( GUID ) );

  00032	6a 10		 push	 16			; 00000010H
  00034	68 00 00 00 00	 push	 OFFSET _TEST_GUID
  00039	8d 45 d0	 lea	 eax, DWORD PTR _application_description$[ebp+12]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 _memcpy
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 464  : 	application_description.lpszFilenameA= ( LPSTR ) filename;

  00045	8b 45 0c	 mov	 eax, DWORD PTR _filename$[ebp]
  00048	89 45 e0	 mov	 DWORD PTR _application_description$[ebp+28], eax

; 465  : 	application_description.lpszCommandLineA= NULL;

  0004b	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _application_description$[ebp+32], 0

; 466  : 	application_description.lpszPathA = path;

  00052	8d 85 c4 fb ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  00058	89 45 e8	 mov	 DWORD PTR _application_description$[ebp+36], eax

; 467  : 	application_description.lpszCurrentDirectoryA= path;

  0005b	8d 85 c4 fb ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  00061	89 45 ec	 mov	 DWORD PTR _application_description$[ebp+40], eax

; 468  : 	application_description.lpszDescriptionA= ( LPSTR ) app_name;

  00064	8b 45 08	 mov	 eax, DWORD PTR _app_name$[ebp]
  00067	89 45 f0	 mov	 DWORD PTR _application_description$[ebp+44], eax

; 469  : 	application_description.lpszDescriptionW= NULL;

  0006a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _application_description$[ebp+48], 0

; 470  : 
; 471  : 	ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &dp_lobby3 );

  00071	8d 45 f8	 lea	 eax, DWORD PTR _dp_lobby3$[ebp]
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  0007a	6a 01		 push	 1
  0007c	6a 00		 push	 0
  0007e	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00089	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 472  : 
; 473  : 	if ( ret != DP_OK )

  0008c	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00090	74 1d		 je	 SHORT $LN2@direct_pla

; 474  : 	{
; 475  : 		// schorpp "must register"
; 476  : 		debug_fatal ( "Unable to register to DirectPlay %s : %s", app_name, get_dplay_error_message ( ret ) );

  00092	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0009b	50		 push	 eax
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR _app_name$[ebp]
  0009f	51		 push	 ecx
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@HPKNGKJJ@Unable?5to?5register?5to?5DirectPla@
  000a5	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 	}
; 478  : 	else

  000ad	eb 46		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 479  : 	{
; 480  : 
; 481  : 		ret = IDirectPlayLobby_RegisterApplication ( dp_lobby3, 0, &application_description );

  000af	8d 45 c4	 lea	 eax, DWORD PTR _application_description$[ebp]
  000b2	50		 push	 eax
  000b3	6a 00		 push	 0
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _dp_lobby3$[ebp]
  000b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ba	8b 45 f8	 mov	 eax, DWORD PTR _dp_lobby3$[ebp]
  000bd	50		 push	 eax
  000be	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  000c1	ff d1		 call	 ecx
  000c3	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 482  : 
; 483  : 		if ( ret != DP_OK )

  000c6	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  000ca	74 1b		 je	 SHORT $LN4@direct_pla

; 484  : 		{
; 485  : 
; 486  : 			debug_fatal ( "Unable to register to DirectPlay %s : %s", app_name, get_dplay_error_message ( ret ) );

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _ret$[ebp]
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  000d5	50		 push	 eax
  000d6	8b 4d 08	 mov	 ecx, DWORD PTR _app_name$[ebp]
  000d9	51		 push	 ecx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@HPKNGKJJ@Unable?5to?5register?5to?5DirectPla@
  000df	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@direct_pla:

; 487  : 		}
; 488  : 
; 489  : 		IDirectPlayLobby_Release ( dp_lobby3 );

  000e7	8b 45 f8	 mov	 eax, DWORD PTR _dp_lobby3$[ebp]
  000ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _dp_lobby3$[ebp]
  000ef	52		 push	 edx
  000f0	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000f3	ff d0		 call	 eax
$LN1@direct_pla:

; 490  : 	}
; 491  : }

  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 08 00	 ret	 8
?direct_play_register_application@@YGXPBD0@Z ENDP	; direct_play_register_application
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_lobbied@@YGHXZ
_TEXT	SEGMENT
?direct_play_get_lobbied@@YGHXZ PROC			; direct_play_get_lobbied, COMDAT

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 404  : 
; 405  : 	if ( direct_play_lobby3 )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_lobby3@@3PAUIDirectPlayLobby3@@A, 0
  00010	74 09		 je	 SHORT $LN2@direct_pla

; 406  : 	{
; 407  : 
; 408  : 		return ( TRUE );

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	eb 04		 jmp	 SHORT $LN1@direct_pla

; 409  : 	}
; 410  : 	else

  00019	eb 02		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 411  : 	{
; 412  : 
; 413  : 		return ( FALSE );

  0001b	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 414  : 	}
; 415  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?direct_play_get_lobbied@@YGHXZ ENDP			; direct_play_get_lobbied
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_interface_capabilities@@YGPAUDPCAPS@@XZ
_TEXT	SEGMENT
?direct_play_get_interface_capabilities@@YGPAUDPCAPS@@XZ PROC ; direct_play_get_interface_capabilities, COMDAT

; 2211 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2212 : 
; 2213 : 	return &interface_capabilities;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?interface_capabilities@@3UDPCAPS@@A

; 2214 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?direct_play_get_interface_capabilities@@YGPAUDPCAPS@@XZ ENDP ; direct_play_get_interface_capabilities
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_interface_capabilities@@YGHXZ
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?direct_play_interface_capabilities@@YGHXZ PROC		; direct_play_interface_capabilities, COMDAT

; 2160 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2161 : 
; 2162 : 	HRESULT
; 2163 : 		hr;
; 2164 : 
; 2165 : 	if ( direct_play_get_comms_mode () != DIRECT_PLAY_COMMS_MODE_MULTI )

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00010	74 04		 je	 SHORT $LN2@direct_pla

; 2166 : 	{
; 2167 : 
; 2168 : 		return ( FALSE );

  00012	33 c0		 xor	 eax, eax
  00014	eb 4d		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 2169 : 	}
; 2170 : 
; 2171 : 	interface_capabilities.dwSize = sizeof (DPCAPS);

  00016	c7 05 00 00 00
	00 28 00 00 00	 mov	 DWORD PTR ?interface_capabilities@@3UDPCAPS@@A, 40 ; 00000028H

; 2172 : 
; 2173 : 	hr = IDirectPlayX_GetCaps ( direct_playx, &interface_capabilities, 0 );

  00020	6a 00		 push	 0
  00022	68 00 00 00 00	 push	 OFFSET ?interface_capabilities@@3UDPCAPS@@A
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00034	52		 push	 edx
  00035	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00038	ff d0		 call	 eax
  0003a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2174 : 
; 2175 : 	if ( hr != DP_OK )

  0003d	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00041	74 1b		 je	 SHORT $LN3@direct_pla

; 2176 : 	{
; 2177 : 
; 2178 : 		debug_log ( "DIRECTP: DirectPlay::GetCaps : %s", get_dplay_error_message ( hr ) );

  00043	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JCOGJOKP@DIRECTP?3?5DirectPlay?3?3GetCaps?5?3?5@
  00052	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00057	83 c4 08	 add	 esp, 8

; 2179 : 
; 2180 : 		return ( FALSE );

  0005a	33 c0		 xor	 eax, eax
  0005c	eb 05		 jmp	 SHORT $LN1@direct_pla
$LN3@direct_pla:

; 2181 : 	}
; 2182 : 
; 2183 : 	#if DIRECT_PLAY_DEBUG
; 2184 : 
; 2185 : 	debug_log ( "DIRECTP: Session Capabilities:" );
; 2186 : 
; 2187 : 	debug_log ( "DIRECTP:      Max Players : %d", interface_capabilities.dwMaxPlayers );
; 2188 : 
; 2189 : 	debug_log ( "DIRECTP:      Max Buffer  : %d", interface_capabilities.dwMaxBufferSize );
; 2190 : 
; 2191 : 	debug_log ( "DIRECTP:      Max QueueSz : %d", interface_capabilities.dwMaxQueueSize );
; 2192 : 
; 2193 : 	debug_log ( "DIRECTP:      Baud Rate   : %d", interface_capabilities.dwHundredBaud );
; 2194 : 
; 2195 : 	debug_log ( "DIRECTP:      Latency     : %d", interface_capabilities.dwLatency );
; 2196 : 
; 2197 : 	debug_log ( "DIRECTP:      Local Plyrs : %d", interface_capabilities.dwMaxLocalPlayers );
; 2198 : 
; 2199 : 	debug_log ( "DIRECTP:      TimeOut     : %d", interface_capabilities.dwTimeout );
; 2200 : 
; 2201 : 	#endif
; 2202 : 
; 2203 : 	return TRUE;

  0005e	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 2204 : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?direct_play_interface_capabilities@@YGHXZ ENDP		; direct_play_interface_capabilities
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_enumerate_service_providers@@YGHXZ
_TEXT	SEGMENT
_new_service_provider$1 = -36				; size = 4
_direct_play_lobby$2 = -32				; size = 4
_hr$3 = -28						; size = 4
_next_sp$4 = -24					; size = 4
_this_sp$5 = -20					; size = 4
_new_sp_list$6 = -16					; size = 4
_current_service_provider$ = -12			; size = 4
_destroy_provider$ = -8					; size = 4
_hr$ = -4						; size = 4
?direct_play_enumerate_service_providers@@YGHXZ PROC	; direct_play_enumerate_service_providers, COMDAT

; 577  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 578  : 
; 579  : 	HRESULT
; 580  : 		hr;
; 581  : 
; 582  : 	service_provider_table_type
; 583  : 		*destroy_provider,
; 584  : 		*current_service_provider;
; 585  : 
; 586  : #if DIRECT_PLAY_DEBUG
; 587  : 
; 588  : 	debug_log ("DIRECTP: enumerate service providers");
; 589  : 
; 590  : #endif
; 591  : 
; 592  : 
; 593  : 	//
; 594  : 	// clear the current service provider table
; 595  : 	//
; 596  : 
; 597  : 	current_service_provider = service_provider_table;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A
  0000e	89 45 f4	 mov	 DWORD PTR _current_service_provider$[ebp], eax
$LN2@direct_pla:

; 598  : 
; 599  : 	while ( current_service_provider )

  00011	83 7d f4 00	 cmp	 DWORD PTR _current_service_provider$[ebp], 0
  00015	74 1a		 je	 SHORT $LN3@direct_pla

; 600  : 	{
; 601  : 
; 602  : 		destroy_provider = current_service_provider;

  00017	8b 45 f4	 mov	 eax, DWORD PTR _current_service_provider$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR _destroy_provider$[ebp], eax

; 603  : 
; 604  : 		current_service_provider = current_service_provider->next;

  0001d	8b 45 f4	 mov	 eax, DWORD PTR _current_service_provider$[ebp]
  00020	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00023	89 4d f4	 mov	 DWORD PTR _current_service_provider$[ebp], ecx

; 605  : 
; 606  : 		safe_free ( destroy_provider );

  00026	8b 45 f8	 mov	 eax, DWORD PTR _destroy_provider$[ebp]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 607  : 	}

  0002f	eb e0		 jmp	 SHORT $LN2@direct_pla
$LN3@direct_pla:

; 608  : 
; 609  : 	service_provider_table = NULL;

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, 0

; 610  : 
; 611  : 	modem_name_list = NULL;

  0003b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?modem_name_list@@3PAUMODEM_NAMES@@A, 0 ; modem_name_list

; 612  : 
; 613  : 	if ( !direct_play_get_lobbied () )

  00045	e8 00 00 00 00	 call	 ?direct_play_get_lobbied@@YGHXZ ; direct_play_get_lobbied
  0004a	85 c0		 test	 eax, eax
  0004c	0f 85 3b 02 00
	00		 jne	 $LN6@direct_pla

; 614  : 	{
; 615  : 
; 616  : 		create_direct_play_interface ();

  00052	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 617  : 	
; 618  : 		//
; 619  : 		// Now enumerate the service providers
; 620  : 		//
; 621  : 	
; 622  : 	#if DIRECT_PLAY_DEBUG
; 623  : 	
; 624  : 		debug_log ( "DIRECTP: Services avaliable :" );
; 625  : 	
; 626  : 	#endif
; 627  : 	
; 628  : 		hr = IDirectPlayX_EnumConnections ( direct_playx, &TEST_GUID, (LPDPENUMCONNECTIONSCALLBACK)direct_play_enumerate_connections,

  00057	6a 03		 push	 3
  00059	6a 00		 push	 0
  0005b	68 00 00 00 00	 push	 OFFSET ?direct_play_enumerate_connections@@YGHPAU_GUID@@PAXKPBUDPNAME@@K1@Z ; direct_play_enumerate_connections
  00060	68 00 00 00 00	 push	 OFFSET _TEST_GUID
  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00072	52		 push	 edx
  00073	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  00079	ff d0		 call	 eax
  0007b	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 629  : 																NULL, DPCONNECTION_DIRECTPLAY | DPCONNECTION_DIRECTPLAYLOBBY );
; 630  : 	
; 631  : 	
; 632  : 		if ( hr != DP_OK )

  0007e	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00082	74 23		 je	 SHORT $LN8@direct_pla

; 633  : 		{
; 634  : 	
; 635  : 			destroy_direct_play_interface ();

  00084	e8 00 00 00 00	 call	 ?destroy_direct_play_interface@@YGXXZ ; destroy_direct_play_interface

; 636  : 	
; 637  : 			debug_log ( "DIRECTP: DirectPlay::EnumConnections : %s", get_dplay_error_message ( hr ) );

  00089	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00092	50		 push	 eax
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EPHJHGDL@DIRECTP?3?5DirectPlay?3?3EnumConnec@
  00098	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0009d	83 c4 08	 add	 esp, 8

; 638  : 	
; 639  : 			return FALSE;

  000a0	33 c0		 xor	 eax, eax
  000a2	e9 73 02 00 00	 jmp	 $LN1@direct_pla
$LN8@direct_pla:

; 640  : 		}
; 641  : 	
; 642  : 		destroy_direct_play_interface ();

  000a7	e8 00 00 00 00	 call	 ?destroy_direct_play_interface@@YGXXZ ; destroy_direct_play_interface

; 643  : 	
; 644  : 		//
; 645  : 		// Now validate the connections
; 646  : 		//
; 647  : 	
; 648  : 		{
; 649  : 	
; 650  : 			service_provider_table_type
; 651  : 				*new_sp_list,
; 652  : 				*this_sp,
; 653  : 				*next_sp;
; 654  : 
; 655  : 			new_sp_list = NULL;

  000ac	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _new_sp_list$6[ebp], 0

; 656  : 	
; 657  : 			this_sp = service_provider_table;

  000b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A
  000b8	89 45 ec	 mov	 DWORD PTR _this_sp$5[ebp], eax
$LN4@direct_pla:

; 658  : 	
; 659  : 			while ( this_sp )

  000bb	83 7d ec 00	 cmp	 DWORD PTR _this_sp$5[ebp], 0
  000bf	0f 84 bb 01 00
	00		 je	 $LN5@direct_pla

; 660  : 			{
; 661  : 		
; 662  : 				create_direct_play_interface ();

  000c5	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 663  : 	
; 664  : 				hr = IDirectPlayX_InitializeConnection ( direct_playx, this_sp->connection, 0 );

  000ca	6a 00		 push	 0
  000cc	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	51		 push	 ecx
  000d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000d9	8b 02		 mov	 eax, DWORD PTR [edx]
  000db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000e1	51		 push	 ecx
  000e2	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  000e8	ff d2		 call	 edx
  000ea	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 665  : 
; 666  : 				if ( hr == DP_OK )

  000ed	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000f1	0f 85 44 01 00
	00		 jne	 $LN9@direct_pla

; 667  : 				{
; 668  : 
; 669  : 					//
; 670  : 					// Check if this is the modem Service Provider
; 671  : 					//
; 672  : 
; 673  : 					if ( memcmp ( this_sp->guid, &DPSPGUID_MODEM, sizeof ( GUID ) ) == 0 )

  000f7	6a 10		 push	 16			; 00000010H
  000f9	68 00 00 00 00	 push	 OFFSET _DPSPGUID_MODEM
  000fe	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  00101	8b 08		 mov	 ecx, DWORD PTR [eax]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 _memcmp
  00109	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010c	85 c0		 test	 eax, eax
  0010e	0f 85 07 01 00
	00		 jne	 $LN11@direct_pla

; 674  : 					{
; 675  : 
; 676  : 						//
; 677  : 						// We have to get a list of modems from this service provider!
; 678  : 						//
; 679  : 
; 680  : 						modem_address_datasize = 0;

  00114	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?modem_address_datasize@@3KA, 0

; 681  : 
; 682  : 						hr = IDirectPlayX_GetPlayerAddress ( direct_playx, 0, NULL, &modem_address_datasize );

  0011e	68 00 00 00 00	 push	 OFFSET ?modem_address_datasize@@3KA
  00123	6a 00		 push	 0
  00125	6a 00		 push	 0
  00127	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0012c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00134	52		 push	 edx
  00135	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  00138	ff d0		 call	 eax
  0013a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 683  : 
; 684  : 						if ( hr == DPERR_BUFFERTOOSMALL )

  0013d	81 7d fc 1e 00
	77 88		 cmp	 DWORD PTR _hr$[ebp], -2005467106 ; 8877001eH
  00144	75 52		 jne	 SHORT $LN12@direct_pla

; 685  : 						{
; 686  : 
; 687  : 							modem_address_data = ( LPVOID * ) safe_malloc ( modem_address_datasize );

  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_address_datasize@@3KA
  0014b	50		 push	 eax
  0014c	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00151	a3 00 00 00 00	 mov	 DWORD PTR ?modem_address_data@@3PAPAXA, eax

; 688  : 
; 689  : 							hr = IDirectPlayX_GetPlayerAddress ( direct_playx, 0, modem_address_data, &modem_address_datasize );

  00156	68 00 00 00 00	 push	 OFFSET ?modem_address_datasize@@3KA
  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_address_data@@3PAPAXA
  00160	50		 push	 eax
  00161	6a 00		 push	 0
  00163	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00169	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00170	50		 push	 eax
  00171	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00174	ff d1		 call	 ecx
  00176	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 690  : 
; 691  : 							if ( hr != DP_OK )

  00179	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0017d	74 17		 je	 SHORT $LN14@direct_pla

; 692  : 							{
; 693  : 
; 694  : 								debug_log ( "Unable to get player address for modem: %s", get_dplay_error_message ( hr ) );

  0017f	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00182	50		 push	 eax
  00183	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00188	50		 push	 eax
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@MPHMJILP@Unable?5to?5get?5player?5address?5fo@
  0018e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00193	83 c4 08	 add	 esp, 8
$LN14@direct_pla:

; 695  : 							}
; 696  : 						}
; 697  : 						else

  00196	eb 17		 jmp	 SHORT $LN13@direct_pla
$LN12@direct_pla:

; 698  : 						{
; 699  : 
; 700  : 							debug_log ( "Unable to get player address for modem: %s", get_dplay_error_message ( hr ) );

  00198	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  001a1	50		 push	 eax
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@MPHMJILP@Unable?5to?5get?5player?5address?5fo@
  001a7	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001ac	83 c4 08	 add	 esp, 8
$LN13@direct_pla:

; 701  : 						}
; 702  : 
; 703  : 						//
; 704  : 						// Now, if we have a modem address list, parse that
; 705  : 						//
; 706  : 				
; 707  : 						if ( modem_address_data )

  001af	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?modem_address_data@@3PAPAXA, 0
  001b6	74 63		 je	 SHORT $LN11@direct_pla

; 708  : 						{
; 709  : 				
; 710  : 							HRESULT
; 711  : 								hr;
; 712  : 				
; 713  : 							LPDIRECTPLAYLOBBY3A
; 714  : 								direct_play_lobby;
; 715  : 					
; 716  : 							hr = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlayLobby, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlayLobby3A, ( LPVOID * ) &direct_play_lobby );

  001b8	8d 45 e0	 lea	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  001bb	50		 push	 eax
  001bc	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlayLobby3A
  001c1	6a 01		 push	 1
  001c3	6a 00		 push	 0
  001c5	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlayLobby
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  001d0	89 45 e4	 mov	 DWORD PTR _hr$3[ebp], eax

; 717  : 					
; 718  : 							if ( hr != DP_OK )

  001d3	83 7d e4 00	 cmp	 DWORD PTR _hr$3[ebp], 0
  001d7	74 0f		 je	 SHORT $LN16@direct_pla

; 719  : 							{
; 720  : 					
; 721  : 								debug_log ( "DIRECTP: UNABLE TO CREATE A DIRECTPLAYLOBBY3 interface to parse modem strings" );

  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CIHANOPA@DIRECTP?3?5UNABLE?5TO?5CREATE?5A?5DIR@
  001de	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001e3	83 c4 04	 add	 esp, 4

; 722  : 							}
; 723  : 							else

  001e6	eb 33		 jmp	 SHORT $LN11@direct_pla
$LN16@direct_pla:

; 724  : 							{
; 725  : 				
; 726  : 								hr = IDirectPlayLobby_EnumAddress ( direct_play_lobby, direct_play_enum_address_callback, modem_address_data, modem_address_datasize, NULL );

  001e8	6a 00		 push	 0
  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_address_datasize@@3KA
  001ef	50		 push	 eax
  001f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_address_data@@3PAPAXA
  001f6	51		 push	 ecx
  001f7	68 00 00 00 00	 push	 OFFSET ?direct_play_enum_address_callback@@YGHABU_GUID@@KPBXPAX@Z ; direct_play_enum_address_callback
  001fc	8b 55 e0	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  001ff	8b 02		 mov	 eax, DWORD PTR [edx]
  00201	8b 4d e0	 mov	 ecx, DWORD PTR _direct_play_lobby$2[ebp]
  00204	51		 push	 ecx
  00205	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00208	ff d2		 call	 edx
  0020a	89 45 e4	 mov	 DWORD PTR _hr$3[ebp], eax

; 727  : 				
; 728  : 								IDirectPlayLobby_Release ( direct_play_lobby );

  0020d	8b 45 e0	 mov	 eax, DWORD PTR _direct_play_lobby$2[ebp]
  00210	8b 08		 mov	 ecx, DWORD PTR [eax]
  00212	8b 55 e0	 mov	 edx, DWORD PTR _direct_play_lobby$2[ebp]
  00215	52		 push	 edx
  00216	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00219	ff d0		 call	 eax
$LN11@direct_pla:

; 729  : 							}
; 730  : 						}
; 731  : 					}
; 732  : 
; 733  : 					//
; 734  : 					// Add this one to the new list
; 735  : 					//
; 736  : 	
; 737  : 					next_sp = this_sp->next;

  0021b	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  0021e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00221	89 4d e8	 mov	 DWORD PTR _next_sp$4[ebp], ecx

; 738  : 	
; 739  : 					this_sp->next = new_sp_list;

  00224	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  00227	8b 4d f0	 mov	 ecx, DWORD PTR _new_sp_list$6[ebp]
  0022a	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 740  : 	
; 741  : 					new_sp_list = this_sp;

  0022d	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  00230	89 45 f0	 mov	 DWORD PTR _new_sp_list$6[ebp], eax

; 742  : 	
; 743  : 					this_sp = next_sp;

  00233	8b 45 e8	 mov	 eax, DWORD PTR _next_sp$4[ebp]
  00236	89 45 ec	 mov	 DWORD PTR _this_sp$5[ebp], eax

; 744  : 				}
; 745  : 				else

  00239	eb 3b		 jmp	 SHORT $LN10@direct_pla
$LN9@direct_pla:

; 746  : 				{
; 747  : 	
; 748  : 					//
; 749  : 					// Free up the memory associated with this sp
; 750  : 					//
; 751  : 	
; 752  : 					next_sp = this_sp->next;

  0023b	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  0023e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00241	89 4d e8	 mov	 DWORD PTR _next_sp$4[ebp], ecx

; 753  : 	
; 754  : 					safe_free ( this_sp->name );

  00244	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  00247	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 755  : 	
; 756  : 					safe_free ( this_sp->connection );

  00250	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  00253	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00256	51		 push	 ecx
  00257	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 757  : 	
; 758  : 					safe_free ( this_sp->guid );

  0025c	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  0025f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00261	51		 push	 ecx
  00262	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 759  : 	
; 760  : 					safe_free ( this_sp );

  00267	8b 45 ec	 mov	 eax, DWORD PTR _this_sp$5[ebp]
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 761  : 	
; 762  : 					this_sp = next_sp;

  00270	8b 45 e8	 mov	 eax, DWORD PTR _next_sp$4[ebp]
  00273	89 45 ec	 mov	 DWORD PTR _this_sp$5[ebp], eax
$LN10@direct_pla:

; 763  : 				}
; 764  : 
; 765  : 				destroy_direct_play_interface ();

  00276	e8 00 00 00 00	 call	 ?destroy_direct_play_interface@@YGXXZ ; destroy_direct_play_interface

; 766  : 			}

  0027b	e9 3b fe ff ff	 jmp	 $LN4@direct_pla
$LN5@direct_pla:

; 767  : 	
; 768  : 			service_provider_table = new_sp_list;

  00280	8b 45 f0	 mov	 eax, DWORD PTR _new_sp_list$6[ebp]
  00283	a3 00 00 00 00	 mov	 DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, eax

; 769  : 		}
; 770  : 	}
; 771  : 	else

  00288	e9 88 00 00 00	 jmp	 $LN7@direct_pla
$LN6@direct_pla:

; 772  : 	{
; 773  : 	
; 774  : 		//
; 775  : 		// Create a fake "lobby" service provider for the UI
; 776  : 		//
; 777  : 
; 778  : 		service_provider_table_type
; 779  : 			*new_service_provider;
; 780  : 	
; 781  : 		new_service_provider = ( service_provider_table_type * ) safe_malloc ( sizeof ( service_provider_table_type ) );

  0028d	6a 14		 push	 20			; 00000014H
  0028f	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00294	89 45 dc	 mov	 DWORD PTR _new_service_provider$1[ebp], eax

; 782  : 	
; 783  : 		new_service_provider->next = service_provider_table;

  00297	8b 45 dc	 mov	 eax, DWORD PTR _new_service_provider$1[ebp]
  0029a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A
  002a0	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 784  : 	
; 785  : 		service_provider_table = new_service_provider;

  002a3	8b 45 dc	 mov	 eax, DWORD PTR _new_service_provider$1[ebp]
  002a6	a3 00 00 00 00	 mov	 DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, eax

; 786  : 	
; 787  : 		new_service_provider->guid = ( GUID * ) safe_malloc ( sizeof ( GUID ) );

  002ab	6a 10		 push	 16			; 00000010H
  002ad	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  002b2	8b 4d dc	 mov	 ecx, DWORD PTR _new_service_provider$1[ebp]
  002b5	89 01		 mov	 DWORD PTR [ecx], eax

; 788  : 	
; 789  : 		memcpy ( new_service_provider->guid, &TEST_GUID, sizeof ( GUID ) );

  002b7	6a 10		 push	 16			; 00000010H
  002b9	68 00 00 00 00	 push	 OFFSET _TEST_GUID
  002be	8b 45 dc	 mov	 eax, DWORD PTR _new_service_provider$1[ebp]
  002c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c3	51		 push	 ecx
  002c4	e8 00 00 00 00	 call	 _memcpy
  002c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 790  : 	
; 791  : 		new_service_provider->connection_size = 0;

  002cc	8b 45 dc	 mov	 eax, DWORD PTR _new_service_provider$1[ebp]
  002cf	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 792  : 	
; 793  : 		new_service_provider->connection = NULL;

  002d6	8b 45 dc	 mov	 eax, DWORD PTR _new_service_provider$1[ebp]
  002d9	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 794  : 	
; 795  : 		new_service_provider->name = ( char * ) safe_malloc ( ( strlen ( "DirectPlay Lobby" ) + 1 ) );

  002e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NBDJOKK@DirectPlay?5Lobby@
  002e5	e8 00 00 00 00	 call	 _strlen
  002ea	83 c4 04	 add	 esp, 4
  002ed	83 c0 01	 add	 eax, 1
  002f0	50		 push	 eax
  002f1	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  002f6	8b 4d dc	 mov	 ecx, DWORD PTR _new_service_provider$1[ebp]
  002f9	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 796  : 	
; 797  : 		sprintf ( new_service_provider->name, "%s", "DirectPlay Lobby" );

  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NBDJOKK@DirectPlay?5Lobby@
  00301	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00306	8b 45 dc	 mov	 eax, DWORD PTR _new_service_provider$1[ebp]
  00309	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0030c	51		 push	 ecx
  0030d	e8 00 00 00 00	 call	 _sprintf
  00312	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@direct_pla:

; 798  : 	}
; 799  : 
; 800  : 	return TRUE;

  00315	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 801  : }

  0031a	5f		 pop	 edi
  0031b	5e		 pop	 esi
  0031c	5b		 pop	 ebx
  0031d	8b e5		 mov	 esp, ebp
  0031f	5d		 pop	 ebp
  00320	c3		 ret	 0
?direct_play_enumerate_service_providers@@YGHXZ ENDP	; direct_play_enumerate_service_providers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_destroy_interface@@YGHXZ
_TEXT	SEGMENT
?direct_play_destroy_interface@@YGHXZ PROC		; direct_play_destroy_interface, COMDAT

; 970  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 971  : 
; 972  : 	//
; 973  : 	// Destroy the direct play interface itself
; 974  : 	//
; 975  : 
; 976  : 	if ( !direct_play_get_lobbied () )

  00009	e8 00 00 00 00	 call	 ?direct_play_get_lobbied@@YGHXZ ; direct_play_get_lobbied
  0000e	85 c0		 test	 eax, eax
  00010	75 05		 jne	 SHORT $LN2@direct_pla

; 977  : 	{
; 978  : 
; 979  : 		destroy_direct_play_interface ();

  00012	e8 00 00 00 00	 call	 ?destroy_direct_play_interface@@YGXXZ ; destroy_direct_play_interface
$LN2@direct_pla:

; 980  : 	}
; 981  : 
; 982  : 	if ( connection_data.service_provider.guid )

  00017	83 3d 14 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+20, 0
  0001e	74 15		 je	 SHORT $LN3@direct_pla

; 983  : 	{
; 984  : 
; 985  : 		safe_free ( connection_data.service_provider.guid );

  00020	a1 14 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+20
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 986  : 
; 987  : 		connection_data.service_provider.guid = NULL;

  0002b	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+20, 0
$LN3@direct_pla:

; 988  : 	}
; 989  : 
; 990  : 	if ( connection_data.service_provider.name )

  00035	83 3d 20 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+32, 0
  0003c	74 15		 je	 SHORT $LN4@direct_pla

; 991  : 	{
; 992  : 
; 993  : 		safe_free ( connection_data.service_provider.name );

  0003e	a1 20 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+32
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 994  : 
; 995  : 		connection_data.service_provider.name = NULL;

  00049	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+32, 0
$LN4@direct_pla:

; 996  : 	}
; 997  : 
; 998  : 	if ( connection_data.service_provider.connection )

  00053	83 3d 18 00 00
	00 00		 cmp	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
  0005a	74 15		 je	 SHORT $LN5@direct_pla

; 999  : 	{
; 1000 : 
; 1001 : 		safe_free ( connection_data.service_provider.connection );

  0005c	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1002 : 
; 1003 : 		connection_data.service_provider.connection = NULL;

  00067	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, 0
$LN5@direct_pla:

; 1004 : 	}
; 1005 : 
; 1006 : 	direct_play_set_comms_mode ( DIRECT_PLAY_COMMS_MODE_NONE );

  00071	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 0 ; direct_play_comms_mode

; 1007 : 
; 1008 : 	return ( TRUE );

  0007b	b8 01 00 00 00	 mov	 eax, 1

; 1009 : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?direct_play_destroy_interface@@YGHXZ ENDP		; direct_play_destroy_interface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_create_interface@@YGHPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z
_TEXT	SEGMENT
_hr$1 = -4						; size = 4
_this_service$ = 8					; size = 4
?direct_play_create_interface@@YGHPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z PROC ; direct_play_create_interface, COMDAT

; 902  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 903  : 
; 904  : 	if ( !direct_play_get_lobbied () )

  00009	e8 00 00 00 00	 call	 ?direct_play_get_lobbied@@YGHXZ ; direct_play_get_lobbied
  0000e	85 c0		 test	 eax, eax
  00010	0f 85 15 01 00
	00		 jne	 $LN2@direct_pla

; 905  : 	{
; 906  : 	
; 907  : 		HRESULT
; 908  : 			hr;
; 909  : 	
; 910  : 		//
; 911  : 		// Create the direct play interface itself
; 912  : 		//
; 913  : 	
; 914  : 		create_direct_play_interface ();

  00016	e8 00 00 00 00	 call	 ?create_direct_play_interface@@YGXXZ ; create_direct_play_interface

; 915  : 	
; 916  : 		connection_data.service_provider.guid = ( GUID * ) safe_malloc ( sizeof ( GUID ) );

  0001b	6a 10		 push	 16			; 00000010H
  0001d	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00022	a3 14 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+20, eax

; 917  : 	
; 918  : 		connection_data.service_provider.name = ( char * ) safe_malloc ( strlen ( this_service->name ) + 1 );

  00027	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  0002a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 _strlen
  00033	83 c4 04	 add	 esp, 4
  00036	83 c0 01	 add	 eax, 1
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0003f	a3 20 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+32, eax

; 919  : 	
; 920  : 		connection_data.service_provider.connection = safe_malloc ( this_service->connection_size );

  00044	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  00047	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00050	a3 18 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24, eax

; 921  : 
; 922  : 		connection_data.one_way_hosting_setup = FALSE;

  00055	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+56, 0

; 923  : 
; 924  : 		connection_data.is_initialised = FALSE;

  0005f	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+60
  00064	83 e0 fe	 and	 eax, -2			; fffffffeH
  00067	a3 3c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+60, eax

; 925  : 
; 926  : 		connection_data.is_hosting = FALSE;

  0006c	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+60
  00071	83 e0 fd	 and	 eax, -3			; fffffffdH
  00074	a3 3c 00 00 00	 mov	 DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+60, eax

; 927  : 	
; 928  : 		memcpy ( connection_data.service_provider.guid, this_service->guid, sizeof ( GUID ) );

  00079	6a 10		 push	 16			; 00000010H
  0007b	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	51		 push	 ecx
  00081	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+20
  00087	52		 push	 edx
  00088	e8 00 00 00 00	 call	 _memcpy
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 929  : 	
; 930  : 		memcpy ( connection_data.service_provider.name, this_service->name, ( strlen ( this_service->name ) + 1 ) );

  00090	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  00093	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _strlen
  0009c	83 c4 04	 add	 esp, 4
  0009f	83 c0 01	 add	 eax, 1
  000a2	50		 push	 eax
  000a3	8b 55 08	 mov	 edx, DWORD PTR _this_service$[ebp]
  000a6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000a9	50		 push	 eax
  000aa	8b 0d 20 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+32
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 _memcpy
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 931  : 	
; 932  : 		memcpy ( connection_data.service_provider.connection, this_service->connection, this_service->connection_size );

  000b9	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  000bc	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000bf	51		 push	 ecx
  000c0	8b 55 08	 mov	 edx, DWORD PTR _this_service$[ebp]
  000c3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c6	50		 push	 eax
  000c7	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 _memcpy
  000d3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 933  : 	
; 934  : 		direct_play_set_comms_mode ( DIRECT_PLAY_COMMS_MODE_MULTI );

  000d6	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode

; 935  : 	
; 936  : 		//
; 937  : 		// Initialise the connection
; 938  : 		//
; 939  : 	
; 940  : 		hr = IDirectPlayX_InitializeConnection ( direct_playx, connection_data.service_provider.connection, 0 );

  000e0	6a 00		 push	 0
  000e2	a1 18 00 00 00	 mov	 eax, DWORD PTR ?connection_data@@3UCONNECTION_DATA_TYPE@@A+24
  000e7	50		 push	 eax
  000e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  000f5	50		 push	 eax
  000f6	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  000fc	ff d1		 call	 ecx
  000fe	89 45 fc	 mov	 DWORD PTR _hr$1[ebp], eax

; 941  : 	
; 942  : 		if ( hr != DP_OK )

  00101	83 7d fc 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  00105	74 1b		 je	 SHORT $LN4@direct_pla

; 943  : 		{
; 944  : 	
; 945  : 			debug_log ( "DIRECTP: DirectPlay::InitializeConnection : %s", get_dplay_error_message ( hr ) );

  00107	8b 45 fc	 mov	 eax, DWORD PTR _hr$1[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?get_dplay_error_message@@YGPBDJ@Z ; get_dplay_error_message
  00110	50		 push	 eax
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IDEMEGBL@DIRECTP?3?5DirectPlay?3?3Initialize@
  00116	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0011b	83 c4 08	 add	 esp, 8

; 946  : 	
; 947  : 			return ( FALSE );

  0011e	33 c0		 xor	 eax, eax
  00120	eb 18		 jmp	 SHORT $LN1@direct_pla
$LN4@direct_pla:

; 948  : 		}
; 949  : 	
; 950  : 		return ( TRUE );

  00122	b8 01 00 00 00	 mov	 eax, 1
  00127	eb 11		 jmp	 SHORT $LN1@direct_pla

; 951  : 	}
; 952  : 	else

  00129	eb 0f		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 953  : 	{
; 954  : 
; 955  : 		//
; 956  : 		// We're lobbied - all the interfaces are already there.
; 957  : 		//
; 958  : 
; 959  : 		direct_play_set_comms_mode ( DIRECT_PLAY_COMMS_MODE_MULTI );

  0012b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode

; 960  : 	
; 961  : 		return ( TRUE );

  00135	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 962  : 	}
; 963  : }

  0013a	5f		 pop	 edi
  0013b	5e		 pop	 esi
  0013c	5b		 pop	 ebx
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c2 04 00	 ret	 4
?direct_play_create_interface@@YGHPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ENDP ; direct_play_create_interface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_close_session@@YGHXZ
_TEXT	SEGMENT
_hr$1 = -4						; size = 4
?direct_play_close_session@@YGHXZ PROC			; direct_play_close_session, COMDAT

; 1016 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1017 : 
; 1018 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 20		 je	 SHORT $LN2@direct_pla

; 1019 : 	{
; 1020 : 	
; 1021 : 		HRESULT
; 1022 : 			hr;
; 1023 : 	
; 1024 : 		hr = IDirectPlayX_Close ( direct_playx );

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0001f	52		 push	 edx
  00020	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00023	ff d0		 call	 eax
  00025	89 45 fc	 mov	 DWORD PTR _hr$1[ebp], eax

; 1025 : 	
; 1026 : 		if ( hr != DP_OK )

  00028	83 7d fc 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  0002c	74 04		 je	 SHORT $LN2@direct_pla

; 1027 : 		{
; 1028 : 
; 1029 : #if DIRECT_PLAY_DEBUG
; 1030 : 	
; 1031 : 			debug_log ( "DIRECTP: DirectPlay::Close : %s", get_dplay_error_message ( hr ) );
; 1032 : 
; 1033 : #endif
; 1034 : 	
; 1035 : 			return ( FALSE );

  0002e	33 c0		 xor	 eax, eax
  00030	eb 05		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 1036 : 		}
; 1037 : 	}
; 1038 : 
; 1039 : 	return ( TRUE );

  00032	b8 01 00 00 00	 mov	 eax, 1
$LN1@direct_pla:

; 1040 : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?direct_play_close_session@@YGHXZ ENDP			; direct_play_close_session
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_deinitialise_system@@YGXXZ
_TEXT	SEGMENT
_destroy_service_provider$ = -4				; size = 4
?direct_play_deinitialise_system@@YGXXZ PROC		; direct_play_deinitialise_system, COMDAT

; 498  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@direct_pla:

; 499  : 
; 500  : 	service_provider_table_type
; 501  : 		*destroy_service_provider;
; 502  : 
; 503  : 	//
; 504  : 	// Free up memory
; 505  : 	//
; 506  : 
; 507  : 	while ( service_provider_table )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, 0
  00010	74 5e		 je	 SHORT $LN3@direct_pla

; 508  : 	{
; 509  : 
; 510  : 		destroy_service_provider = service_provider_table;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A
  00017	89 45 fc	 mov	 DWORD PTR _destroy_service_provider$[ebp], eax

; 511  : 
; 512  : 		service_provider_table = service_provider_table->next;

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A
  0001f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00022	89 0d 00 00 00
	00		 mov	 DWORD PTR ?service_provider_table@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, ecx

; 513  : 
; 514  : 		if ( destroy_service_provider->name )

  00028	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  0002b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0002f	74 0c		 je	 SHORT $LN4@direct_pla

; 515  : 		{
; 516  : 
; 517  : 			safe_free ( destroy_service_provider->name );

  00031	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  00034	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN4@direct_pla:

; 518  : 		}
; 519  : 
; 520  : 		if ( destroy_service_provider->guid )

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  00040	83 38 00	 cmp	 DWORD PTR [eax], 0
  00043	74 0b		 je	 SHORT $LN5@direct_pla

; 521  : 		{
; 522  : 
; 523  : 			safe_free ( destroy_service_provider->guid );

  00045	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN5@direct_pla:

; 524  : 		}
; 525  : 
; 526  : 		if ( destroy_service_provider->connection )

  00050	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  00053	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00057	74 0c		 je	 SHORT $LN6@direct_pla

; 527  : 		{
; 528  : 
; 529  : 			safe_free ( destroy_service_provider->connection );

  00059	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  0005c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN6@direct_pla:

; 530  : 		}
; 531  : 
; 532  : 		safe_free ( destroy_service_provider );

  00065	8b 45 fc	 mov	 eax, DWORD PTR _destroy_service_provider$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 533  : 	}

  0006e	eb 99		 jmp	 SHORT $LN2@direct_pla
$LN3@direct_pla:

; 534  : 
; 535  : 	//
; 536  : 	// Need to do other mallocs
; 537  : 	//
; 538  : 
; 539  : 	if ( direct_play_get_comms_mode () == DIRECT_PLAY_COMMS_MODE_MULTI )

  00070	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 1 ; direct_play_comms_mode
  00077	75 0f		 jne	 SHORT $LN7@direct_pla

; 540  : 	{
; 541  : 
; 542  : 		//
; 543  : 		// check all of these...
; 544  : 		//
; 545  : 
; 546  : 		// Jabberwock 050303 Remove DP groups
; 547  : 		// direct_play_leave_group ();
; 548  : 
; 549  : 		direct_play_destroy_player ();

  00079	e8 00 00 00 00	 call	 ?direct_play_destroy_player@@YGHXZ ; direct_play_destroy_player

; 550  : 
; 551  : 		// Jabberwock 050303 Remove DP groups
; 552  : 		// direct_play_destroy_group ();
; 553  : 
; 554  : 		direct_play_close_session ();

  0007e	e8 00 00 00 00	 call	 ?direct_play_close_session@@YGHXZ ; direct_play_close_session

; 555  : 
; 556  : 		destroy_direct_play_interface ();

  00083	e8 00 00 00 00	 call	 ?destroy_direct_play_interface@@YGXXZ ; destroy_direct_play_interface
$LN7@direct_pla:

; 557  : 	}
; 558  : 
; 559  : 	//
; 560  : 	// Now clean up the interface itself
; 561  : 	//
; 562  : 
; 563  : 	if ( direct_playx )

  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  0008f	74 13		 je	 SHORT $LN8@direct_pla

; 564  : 	{
; 565  : 
; 566  : 		IDirectPlayX_Release ( direct_playx );

  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0009e	52		 push	 edx
  0009f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000a2	ff d0		 call	 eax
$LN8@direct_pla:

; 567  : 	}
; 568  : 
; 569  : 	direct_play_initialised = FALSE;

  000a4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?direct_play_initialised@@3HA, 0

; 570  : }

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
?direct_play_deinitialise_system@@YGXXZ ENDP		; direct_play_deinitialise_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_initialise_system@@YGHXZ
_TEXT	SEGMENT
?direct_play_initialise_system@@YGHXZ PROC		; direct_play_initialise_system, COMDAT

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 184  : 
; 185  : 	if ( !direct_play_initialised )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_initialised@@3HA, 0
  00010	75 73		 jne	 SHORT $LN2@direct_pla

; 186  : 	{
; 187  : 
; 188  : 		//
; 189  : 		// Register the application
; 190  : 		//
; 191  : 
; 192  : 		memset ( &connection_data, 0, sizeof ( connection_data_type ) );

  00012	6a 40		 push	 64			; 00000040H
  00014	6a 00		 push	 0
  00016	68 00 00 00 00	 push	 OFFSET ?connection_data@@3UCONNECTION_DATA_TYPE@@A
  0001b	e8 00 00 00 00	 call	 _memset
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 193  : 
; 194  : 		// Jabberwock 050303 Remove DP groups
; 195  : 		// direct_play_set_group_name ( "Unnamed Group" );
; 196  : 
; 197  : 		direct_play_set_session_name ( "Unnamed Session" );

  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JIJBFEKD@Unnamed?5Session@
  00028	e8 00 00 00 00	 call	 ?direct_play_set_session_name@@YGXPBD@Z ; direct_play_set_session_name

; 198  : 
; 199  : 		direct_play_set_player_name ( "Unnamed Player" );

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HMHCKJLG@Unnamed?5Player@
  00032	e8 00 00 00 00	 call	 ?direct_play_set_player_name@@YGXPBD@Z ; direct_play_set_player_name

; 200  : 
; 201  : 		register_exit_function ( direct_play_deinitialise_system );

  00037	68 00 00 00 00	 push	 OFFSET ?direct_play_deinitialise_system@@YGXXZ ; direct_play_deinitialise_system
  0003c	e8 00 00 00 00	 call	 ?register_exit_function@@YGXP6GXXZ@Z ; register_exit_function

; 202  : 
; 203  : 		direct_play_initialised = TRUE;

  00041	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?direct_play_initialised@@3HA, 1

; 204  : 
; 205  : 		//
; 206  : 		// Initialise the lobby first - if there is one we don't enumerate the service providers
; 207  : 		//
; 208  : 
; 209  : 		direct_play_initialise_lobbies ();

  0004b	e8 00 00 00 00	 call	 ?direct_play_initialise_lobbies@@YGXXZ ; direct_play_initialise_lobbies

; 210  : 
; 211  : 		direct_play_enumerate_service_providers ();

  00050	e8 00 00 00 00	 call	 ?direct_play_enumerate_service_providers@@YGHXZ ; direct_play_enumerate_service_providers

; 212  : 
; 213  : 		//
; 214  : 		// Reset FPU mode
; 215  : 		//
; 216  : 
; 217  : 		set_fpu_rounding_mode_zero ();

  00055	e8 00 00 00 00	 call	 ?set_fpu_rounding_mode_zero@@YGXXZ ; set_fpu_rounding_mode_zero

; 218  : 
; 219  : 		//
; 220  : 		// Watch the send queue
; 221  : 		//
; 222  : 
; 223  : 		debug_watch ( "DP SEND QUEUE PACKETS: %d", MT_INT, &direct_play_send_queue_number_of_packets );

  0005a	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_packets@@3KA
  0005f	6a 01		 push	 1
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DKLCDGLO@DP?5SEND?5QUEUE?5PACKETS?3?5?$CFd@
  00066	e8 00 00 00 00	 call	 ?debug_watch@@YGXPBDW4mt_type@@PAX@Z ; debug_watch

; 224  : 
; 225  : 		debug_watch ( "DP SEND QUEUE BYTES: %d", MT_INT, &direct_play_send_queue_number_of_bytes );

  0006b	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_bytes@@3KA
  00070	6a 01		 push	 1
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FKNKBHGA@DP?5SEND?5QUEUE?5BYTES?3?5?$CFd@
  00077	e8 00 00 00 00	 call	 ?debug_watch@@YGXPBDW4mt_type@@PAX@Z ; debug_watch

; 226  : 
; 227  : 		return TRUE;

  0007c	b8 01 00 00 00	 mov	 eax, 1
  00081	eb 11		 jmp	 SHORT $LN1@direct_pla

; 228  : 	}
; 229  : 	else

  00083	eb 0f		 jmp	 SHORT $LN1@direct_pla
$LN2@direct_pla:

; 230  : 	{
; 231  : 
; 232  : 		debug_log ( "DIRECTP: Attempting to initialise DirectPlay twice!" );

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@GAOEMGIA@DIRECTP?3?5Attempting?5to?5initiali@
  0008a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0008f	83 c4 04	 add	 esp, 4

; 233  : 
; 234  : 		return FALSE;

  00092	33 c0		 xor	 eax, eax
$LN1@direct_pla:

; 235  : 	}
; 236  : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
?direct_play_initialise_system@@YGHXZ ENDP		; direct_play_initialise_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?create_direct_play_interface@@YGXXZ
_TEXT	SEGMENT
_ret$ = -4						; size = 4
?create_direct_play_interface@@YGXXZ PROC		; create_direct_play_interface, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 
; 245  : 	HRESULT
; 246  : 		ret;
; 247  : 
; 248  : 	destroy_direct_play_interface ();

  00009	e8 00 00 00 00	 call	 ?destroy_direct_play_interface@@YGXXZ ; destroy_direct_play_interface

; 249  : 
; 250  : 	ret = CoCreateInstance ( GUID_PREFIX CLSID_DirectPlay, NULL, CLSCTX_INPROC_SERVER, GUID_PREFIX IID_IDirectPlay4A, ( LPVOID * ) &direct_playx );

  0000e	68 00 00 00 00	 push	 OFFSET ?direct_playx@@3PAUIDirectPlay4@@A
  00013	68 00 00 00 00	 push	 OFFSET _IID_IDirectPlay4A
  00018	6a 01		 push	 1
  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET _CLSID_DirectPlay
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00027	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 251  : 
; 252  : 	if ( ret != 0 )

  0002a	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN1@create_dir

; 253  : 	{
; 254  : 		// must!
; 255  : 		debug_fatal ( "DIRECTP: Unable to create DirectPlay4A" );

  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@NGICOMCL@DIRECTP?3?5Unable?5to?5create?5Direc@
  00035	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0003a	83 c4 04	 add	 esp, 4
$LN1@create_dir:

; 256  : 	}
; 257  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?create_direct_play_interface@@YGXXZ ENDP		; create_direct_play_interface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\multi\directp.c
;	COMDAT ?direct_play_get_message_queue@@YGXXZ
_TEXT	SEGMENT
?direct_play_get_message_queue@@YGXXZ PROC		; direct_play_get_message_queue, COMDAT

; 2837 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2838 : 
; 2839 : 	if ( direct_playx )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A, 0
  00010	74 26		 je	 SHORT $LN1@direct_pla

; 2840 : 	{
; 2841 : 	
; 2842 : 		IDirectPlayX_GetMessageQueue ( direct_playx, 0, 0, DPMESSAGEQUEUE_SEND, &direct_play_send_queue_number_of_packets, &direct_play_send_queue_number_of_bytes );

  00012	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_bytes@@3KA
  00017	68 00 00 00 00	 push	 OFFSET ?direct_play_send_queue_number_of_packets@@3KA
  0001c	6a 01		 push	 1
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  00027	8b 08		 mov	 ecx, DWORD PTR [eax]
  00029	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?direct_playx@@3PAUIDirectPlay4@@A
  0002f	52		 push	 edx
  00030	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  00036	ff d0		 call	 eax
$LN1@direct_pla:

; 2843 : 	}
; 2844 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?direct_play_get_message_queue@@YGXXZ ENDP		; direct_play_get_message_queue
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
