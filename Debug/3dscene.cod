; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dscene.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?allow_perturbed_bounce@@3HA			; allow_perturbed_bounce
PUBLIC	?allow_bounce_light@@3HA			; allow_bounce_light
PUBLIC	?allow_cloud_light@@3HA				; allow_cloud_light
_BSS	SEGMENT
?allow_perturbed_bounce@@3HA DD 01H DUP (?)		; allow_perturbed_bounce
?allow_bounce_light@@3HA DD 01H DUP (?)			; allow_bounce_light
?allow_cloud_light@@3HA DD 01H DUP (?)			; allow_cloud_light
_BSS	ENDS
PUBLIC	_acosf
PUBLIC	?acos@@YGMM@Z					; acos
PUBLIC	?begin_3d_scene@@YGHXZ				; begin_3d_scene
PUBLIC	?end_3d_scene@@YGXXZ				; end_3d_scene
PUBLIC	?setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z ; setup_environment_lights_in_scene
PUBLIC	?__LINE__Var@?0??setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z@4JA ; `setup_environment_lights_in_scene'::`1'::__LINE__Var
PUBLIC	??_C@_0DC@FKJLPDMM@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_03OJGPBPII@env@				; `string'
PUBLIC	__real@3ec90fdb
PUBLIC	__real@3f800000
PUBLIC	__real@40a00000
PUBLIC	__real@41200000
PUBLIC	__real@bec90fdb
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_acos:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_vector_cross_product@@YGXPAUVEC3D@@PBU1@1@Z:PROC ; get_3d_vector_cross_product
EXTRN	?get_arbitrary_rotation_matrix@@YGXQAY02MPBUVEC3D@@M@Z:PROC ; get_arbitrary_rotation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?d3d_begin_scene@@YGHXZ:PROC			; d3d_begin_scene
EXTRN	?d3d_end_scene@@YGHXZ:PROC			; d3d_end_scene
EXTRN	?reset_clip_statistics@@YGXXZ:PROC		; reset_clip_statistics
EXTRN	?report_clip_statistics@@YGXXZ:PROC		; report_clip_statistics
EXTRN	?set_d3d_fog_renderstates@@YGXXZ:PROC		; set_d3d_fog_renderstates
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?reset_d3d_state_performance@@YGXXZ:PROC	; reset_d3d_state_performance
EXTRN	?report_d3d_state_performance@@YGXXZ:PROC	; report_d3d_state_performance
EXTRN	?reset_translucent_buffering_system@@YGXXZ:PROC	; reset_translucent_buffering_system
EXTRN	?set_vertex_cache_size@@YGXH@Z:PROC		; set_vertex_cache_size
EXTRN	?reset_vertex_cache_data@@YGXXZ:PROC		; reset_vertex_cache_data
EXTRN	?report_vertex_cache_statistics@@YGXXZ:PROC	; report_vertex_cache_statistics
EXTRN	?clear_3d_scene_objects@@YGXXZ:PROC		; clear_3d_scene_objects
EXTRN	?reset_3d_polylines@@YGXXZ:PROC			; reset_3d_polylines
EXTRN	?reset_smoke_trail_rendering_information@@YGXXZ:PROC ; reset_smoke_trail_rendering_information
EXTRN	?reset_light_3d_sources_in_3d_scene@@YGXXZ:PROC	; reset_light_3d_sources_in_3d_scene
EXTRN	?insert_main_3d_light_into_3d_scene@@YGXPAULIGHT_3D_SOURCE@@@Z:PROC ; insert_main_3d_light_into_3d_scene
EXTRN	?reset_sub_object_search_statistics@@YGXXZ:PROC	; reset_sub_object_search_statistics
EXTRN	?report_sub_object_search_statistics@@YGXXZ:PROC ; report_sub_object_search_statistics
EXTRN	?clear_temporary_3d_instances@@YGXXZ:PROC	; clear_temporary_3d_instances
EXTRN	?reset_3d_transformation_stats@@YGXXZ:PROC	; reset_3d_transformation_stats
EXTRN	?vertex_cache_size@@3HA:DWORD			; vertex_cache_size
EXTRN	?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A:DWORD ; zbuffer_default_comparison
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?number_of_objects_in_3d_scene@@3HA:DWORD	; number_of_objects_in_3d_scene
EXTRN	?final_number_of_objects_in_3d_scene@@3HA:DWORD	; final_number_of_objects_in_3d_scene
EXTRN	?number_of_sprites_in_3d_scene@@3HA:DWORD	; number_of_sprites_in_3d_scene
EXTRN	?final_number_of_sprites_in_3d_scene@@3HA:DWORD	; final_number_of_sprites_in_3d_scene
EXTRN	?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A:DWORD ; current_3d_lights
EXTRN	?textured_object_rendering_enabled@@3HA:DWORD	; textured_object_rendering_enabled
EXTRN	?terrain_object_rendering_enabled@@3HA:DWORD	; terrain_object_rendering_enabled
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A DB 01e0H DUP (?) ; spare_3d_system_lights
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bec90fdb
CONST	SEGMENT
__real@bec90fdb DD 0bec90fdbr			; -0.392699
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3ec90fdb
CONST	SEGMENT
__real@3ec90fdb DD 03ec90fdbr			; 0.392699
CONST	ENDS
;	COMDAT ??_C@_03OJGPBPII@env@
CONST	SEGMENT
??_C@_03OJGPBPII@env@ DB 'env', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FKJLPDMM@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DC@FKJLPDMM@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dscene.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z@4JA DD 013aH ; `setup_environment_lights_in_scene'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dscene.c
;	COMDAT ?setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
tv131 = -164						; size = 4
tv132 = -160						; size = 4
_list$1 = -92						; size = 4
_m$2 = -88						; size = 36
_reflection_vector$3 = -52				; size = 12
_rotation_vector$4 = -40				; size = 12
_normal_vector$5 = -28					; size = 12
_light_index$6 = -16					; size = 4
_light_count$7 = -12					; size = 4
_angle$8 = -8						; size = 4
_list$9 = -4						; size = 4
_env$ = 8						; size = 4
?setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z PROC ; setup_environment_lights_in_scene, COMDAT

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 315  : 
; 316  : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN9@setup_envi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@FKJLPDMM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@setup_envi:

; 317  : 
; 318  : 	//
; 319  : 	// Remove all lights from the scene
; 320  : 	//
; 321  : 
; 322  : 	reset_light_3d_sources_in_3d_scene ();

  0002a	e8 00 00 00 00	 call	 ?reset_light_3d_sources_in_3d_scene@@YGXXZ ; reset_light_3d_sources_in_3d_scene

; 323  : 
; 324  : 	if ( env->lightmode == LIGHTMODE_AUTOMATIC_LIGHT )

  0002f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00032	83 78 6c 01	 cmp	 DWORD PTR [eax+108], 1
  00036	0f 85 9a 03 00
	00		 jne	 $LN10@setup_envi

; 325  : 	{
; 326  : 	
; 327  : 		//
; 328  : 		// Set up the sun light
; 329  : 		//
; 330  : 	
; 331  : 		if ( env->sun_light.main_light )

  0003c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003f	83 b8 20 01 00
	00 00		 cmp	 DWORD PTR [eax+288], 0
  00046	0f 84 6e 03 00
	00		 je	 $LN3@setup_envi

; 332  : 		{
; 333  : 	
; 334  : 			light_3d_source
; 335  : 				*list;
; 336  : 
; 337  : 			float
; 338  : 				angle;
; 339  : 
; 340  : 			int
; 341  : 				light_count,
; 342  : 				light_index;
; 343  : 
; 344  : 			vec3d
; 345  : 				normal_vector,
; 346  : 				rotation_vector,
; 347  : 				reflection_vector;
; 348  : 
; 349  : 			matrix3x3
; 350  : 				m;
; 351  : 
; 352  : 			insert_main_3d_light_into_3d_scene ( &env->sun_3d_light );

  0004c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004f	05 e8 01 00 00	 add	 eax, 488		; 000001e8H
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?insert_main_3d_light_into_3d_scene@@YGXPAULIGHT_3D_SOURCE@@@Z ; insert_main_3d_light_into_3d_scene

; 353  : 
; 354  : 			//
; 355  : 			// Add a couple of filler lights
; 356  : 			//
; 357  : 
; 358  : 			normal_vector.x = 0;

  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	f3 0f 11 45 e4	 movss	 DWORD PTR _normal_vector$5[ebp], xmm0

; 359  : 			normal_vector.y = 1;

  00062	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0006a	f3 0f 11 45 e8	 movss	 DWORD PTR _normal_vector$5[ebp+4], xmm0

; 360  : 			normal_vector.z = 0;

  0006f	0f 57 c0	 xorps	 xmm0, xmm0
  00072	f3 0f 11 45 ec	 movss	 DWORD PTR _normal_vector$5[ebp+8], xmm0

; 361  : 
; 362  : 			angle = normal_vector.x * env->sun_3d_light.light_direction.x +

  00077	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0007a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _normal_vector$5[ebp]
  0007f	f3 0f 59 80 e8
	01 00 00	 mulss	 xmm0, DWORD PTR [eax+488]
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008a	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _normal_vector$5[ebp+4]
  0008f	f3 0f 59 89 ec
	01 00 00	 mulss	 xmm1, DWORD PTR [ecx+492]
  00097	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009b	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0009e	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _normal_vector$5[ebp+8]
  000a3	f3 0f 59 8a f0
	01 00 00	 mulss	 xmm1, DWORD PTR [edx+496]
  000ab	f3 0f 58 c1	 addss	 xmm0, xmm1
  000af	f3 0f 11 45 f8	 movss	 DWORD PTR _angle$8[ebp], xmm0

; 363  : 						normal_vector.y * env->sun_3d_light.light_direction.y +
; 364  : 						normal_vector.z * env->sun_3d_light.light_direction.z;
; 365  : 
; 366  : 			angle = acos ( angle );

  000b4	51		 push	 ecx
  000b5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _angle$8[ebp]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	e8 00 00 00 00	 call	 ?acos@@YGMM@Z		; acos
  000c4	d9 5d f8	 fstp	 DWORD PTR _angle$8[ebp]

; 367  : 
; 368  : 			get_3d_vector_cross_product ( &rotation_vector, &env->sun_3d_light.light_direction, &normal_vector );

  000c7	8d 45 e4	 lea	 eax, DWORD PTR _normal_vector$5[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ce	81 c1 e8 01 00
	00		 add	 ecx, 488		; 000001e8H
  000d4	51		 push	 ecx
  000d5	8d 55 d8	 lea	 edx, DWORD PTR _rotation_vector$4[ebp]
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 ?get_3d_vector_cross_product@@YGXPAUVEC3D@@PBU1@1@Z ; get_3d_vector_cross_product

; 369  : 
; 370  : 			angle = bound ( angle, -PI/8, PI/8 );

  000de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bec90fdb
  000e6	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _angle$8[ebp]
  000ea	76 12		 jbe	 SHORT $LN27@setup_envi
  000ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bec90fdb
  000f4	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv132[ebp], xmm0
  000fc	eb 3d		 jmp	 SHORT $LN28@setup_envi
$LN27@setup_envi:
  000fe	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _angle$8[ebp]
  00103	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3ec90fdb
  0010a	76 12		 jbe	 SHORT $LN25@setup_envi
  0010c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ec90fdb
  00114	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR tv131[ebp], xmm0
  0011c	eb 0d		 jmp	 SHORT $LN26@setup_envi
$LN25@setup_envi:
  0011e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _angle$8[ebp]
  00123	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR tv131[ebp], xmm0
$LN26@setup_envi:
  0012b	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR tv131[ebp]
  00133	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv132[ebp], xmm0
$LN28@setup_envi:
  0013b	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv132[ebp]
  00143	f3 0f 11 45 f8	 movss	 DWORD PTR _angle$8[ebp], xmm0

; 371  : 
; 372  : 			if ( !allow_perturbed_bounce )

  00148	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?allow_perturbed_bounce@@3HA, 0 ; allow_perturbed_bounce
  0014f	75 08		 jne	 SHORT $LN13@setup_envi

; 373  : 			{
; 374  : 	
; 375  : 				angle = 0;

  00151	0f 57 c0	 xorps	 xmm0, xmm0
  00154	f3 0f 11 45 f8	 movss	 DWORD PTR _angle$8[ebp], xmm0
$LN13@setup_envi:

; 376  : 			}
; 377  : 
; 378  : 			get_arbitrary_rotation_matrix ( m, &rotation_vector, angle );

  00159	51		 push	 ecx
  0015a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _angle$8[ebp]
  0015f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00164	8d 45 d8	 lea	 eax, DWORD PTR _rotation_vector$4[ebp]
  00167	50		 push	 eax
  00168	8d 4d a8	 lea	 ecx, DWORD PTR _m$2[ebp]
  0016b	51		 push	 ecx
  0016c	e8 00 00 00 00	 call	 ?get_arbitrary_rotation_matrix@@YGXQAY02MPBUVEC3D@@M@Z ; get_arbitrary_rotation_matrix

; 379  : 
; 380  : 			multiply_matrix3x3_vec3d ( &reflection_vector, m, &normal_vector );

  00171	8d 45 e4	 lea	 eax, DWORD PTR _normal_vector$5[ebp]
  00174	50		 push	 eax
  00175	8d 4d a8	 lea	 ecx, DWORD PTR _m$2[ebp]
  00178	51		 push	 ecx
  00179	8d 55 cc	 lea	 edx, DWORD PTR _reflection_vector$3[ebp]
  0017c	52		 push	 edx
  0017d	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 381  : 
; 382  : 			light_index = 0;

  00182	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _light_index$6[ebp], 0

; 383  : 
; 384  : 			if ( allow_bounce_light )

  00189	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?allow_bounce_light@@3HA, 0 ; allow_bounce_light
  00190	0f 84 db 00 00
	00		 je	 $LN14@setup_envi

; 385  : 			{
; 386  : 
; 387  : 				spare_3d_system_lights[light_index].light_direction.x = -reflection_vector.x;

  00196	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _reflection_vector$3[ebp]
  0019b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001a2	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  001a6	f3 0f 11 80 00
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax], xmm0

; 388  : 				spare_3d_system_lights[light_index].light_direction.y = -reflection_vector.y;

  001ae	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _reflection_vector$3[ebp+4]
  001b3	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001ba	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  001be	f3 0f 11 80 04
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+4], xmm0

; 389  : 				spare_3d_system_lights[light_index].light_direction.z = -reflection_vector.z;

  001c6	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _reflection_vector$3[ebp+8]
  001cb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001d2	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  001d6	f3 0f 11 80 08
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+8], xmm0

; 390  : 	
; 391  : 				spare_3d_system_lights[light_index].colour.red = env->sun_3d_light.colour.red / 5;

  001de	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001e1	f3 0f 10 80 00
	02 00 00	 movss	 xmm0, DWORD PTR [eax+512]
  001e9	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40a00000
  001f1	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  001f5	f3 0f 11 81 18
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+24], xmm0

; 392  : 				spare_3d_system_lights[light_index].colour.green = env->sun_3d_light.colour.green / 5;

  001fd	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00200	f3 0f 10 80 04
	02 00 00	 movss	 xmm0, DWORD PTR [eax+516]
  00208	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40a00000
  00210	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  00214	f3 0f 11 81 1c
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+28], xmm0

; 393  : 				spare_3d_system_lights[light_index].colour.blue = env->sun_3d_light.colour.blue / 5;

  0021c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0021f	f3 0f 10 80 08
	02 00 00	 movss	 xmm0, DWORD PTR [eax+520]
  00227	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40a00000
  0022f	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  00233	f3 0f 11 81 20
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+32], xmm0

; 394  : 				spare_3d_system_lights[light_index].intensity = env->sun_3d_light.intensity / 5;

  0023b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0023e	f3 0f 10 80 10
	02 00 00	 movss	 xmm0, DWORD PTR [eax+528]
  00246	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40a00000
  0024e	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  00252	f3 0f 11 81 28
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+40], xmm0

; 395  : 	
; 396  : 				spare_3d_system_lights[light_index].type = LIGHT_3D_TYPE_DIRECTIONAL;

  0025a	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  0025e	c7 80 30 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+48], 1

; 397  : 
; 398  : 				light_index++;

  00268	8b 45 f0	 mov	 eax, DWORD PTR _light_index$6[ebp]
  0026b	83 c0 01	 add	 eax, 1
  0026e	89 45 f0	 mov	 DWORD PTR _light_index$6[ebp], eax
$LN14@setup_envi:

; 399  : 			}
; 400  : 
; 401  : 			if ( allow_cloud_light )

  00271	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?allow_cloud_light@@3HA, 0 ; allow_cloud_light
  00278	0f 84 c5 00 00
	00		 je	 $LN15@setup_envi

; 402  : 			{
; 403  : 	
; 404  : 				spare_3d_system_lights[light_index].light_direction.x = 0.0;

  0027e	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  00282	0f 57 c0	 xorps	 xmm0, xmm0
  00285	f3 0f 11 80 00
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax], xmm0

; 405  : 				spare_3d_system_lights[light_index].light_direction.y = 1.0;

  0028d	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  00291	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00299	f3 0f 11 80 04
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+4], xmm0

; 406  : 				spare_3d_system_lights[light_index].light_direction.z = 0.0;

  002a1	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  002a5	0f 57 c0	 xorps	 xmm0, xmm0
  002a8	f3 0f 11 80 08
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+8], xmm0

; 407  : 	
; 408  : 				spare_3d_system_lights[light_index].colour.red = env->sun_3d_light.colour.red / 10;

  002b0	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002b3	f3 0f 10 80 00
	02 00 00	 movss	 xmm0, DWORD PTR [eax+512]
  002bb	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@41200000
  002c3	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  002c7	f3 0f 11 81 18
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+24], xmm0

; 409  : 				spare_3d_system_lights[light_index].colour.green = env->sun_3d_light.colour.green / 10;

  002cf	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002d2	f3 0f 10 80 04
	02 00 00	 movss	 xmm0, DWORD PTR [eax+516]
  002da	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@41200000
  002e2	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  002e6	f3 0f 11 81 1c
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+28], xmm0

; 410  : 				spare_3d_system_lights[light_index].colour.blue = env->sun_3d_light.colour.blue / 10;

  002ee	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002f1	f3 0f 10 80 08
	02 00 00	 movss	 xmm0, DWORD PTR [eax+520]
  002f9	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@41200000
  00301	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  00305	f3 0f 11 81 20
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+32], xmm0

; 411  : 				spare_3d_system_lights[light_index].intensity = env->sun_3d_light.intensity / 10;

  0030d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00310	f3 0f 10 80 10
	02 00 00	 movss	 xmm0, DWORD PTR [eax+528]
  00318	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@41200000
  00320	6b 4d f0 3c	 imul	 ecx, DWORD PTR _light_index$6[ebp], 60
  00324	f3 0f 11 81 28
	00 00 00	 movss	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[ecx+40], xmm0

; 412  : 	
; 413  : 				spare_3d_system_lights[light_index].type = LIGHT_3D_TYPE_DIRECTIONAL;

  0032c	6b 45 f0 3c	 imul	 eax, DWORD PTR _light_index$6[ebp], 60
  00330	c7 80 30 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+48], 1

; 414  : 
; 415  : 				light_index++;

  0033a	8b 45 f0	 mov	 eax, DWORD PTR _light_index$6[ebp]
  0033d	83 c0 01	 add	 eax, 1
  00340	89 45 f0	 mov	 DWORD PTR _light_index$6[ebp], eax
$LN15@setup_envi:

; 416  : 			}
; 417  : 
; 418  : 			for ( light_count = 0; light_count < light_index; light_count++ )

  00343	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _light_count$7[ebp], 0
  0034a	eb 09		 jmp	 SHORT $LN4@setup_envi
$LN2@setup_envi:
  0034c	8b 45 f4	 mov	 eax, DWORD PTR _light_count$7[ebp]
  0034f	83 c0 01	 add	 eax, 1
  00352	89 45 f4	 mov	 DWORD PTR _light_count$7[ebp], eax
$LN4@setup_envi:
  00355	8b 45 f4	 mov	 eax, DWORD PTR _light_count$7[ebp]
  00358	3b 45 f0	 cmp	 eax, DWORD PTR _light_index$6[ebp]
  0035b	7d 5d		 jge	 SHORT $LN3@setup_envi

; 419  : 			{
; 420  : 	
; 421  : 				list = current_3d_lights;

  0035d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A ; current_3d_lights
  00362	89 45 fc	 mov	 DWORD PTR _list$9[ebp], eax

; 422  : 		
; 423  : 				if ( list )

  00365	83 7d fc 00	 cmp	 DWORD PTR _list$9[ebp], 0
  00369	74 14		 je	 SHORT $LN6@setup_envi
$LN5@setup_envi:

; 424  : 				{
; 425  : 		
; 426  : 					while ( list->succ )

  0036b	8b 45 fc	 mov	 eax, DWORD PTR _list$9[ebp]
  0036e	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00372	74 0b		 je	 SHORT $LN6@setup_envi

; 427  : 					{
; 428  : 		
; 429  : 						list = list->succ;

  00374	8b 45 fc	 mov	 eax, DWORD PTR _list$9[ebp]
  00377	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0037a	89 4d fc	 mov	 DWORD PTR _list$9[ebp], ecx

; 430  : 					}

  0037d	eb ec		 jmp	 SHORT $LN5@setup_envi
$LN6@setup_envi:

; 431  : 				}
; 432  : 
; 433  : 				if ( list )

  0037f	83 7d fc 00	 cmp	 DWORD PTR _list$9[ebp], 0
  00383	74 11		 je	 SHORT $LN17@setup_envi

; 434  : 				{
; 435  : 		
; 436  : 					list->succ = &spare_3d_system_lights[light_count];

  00385	6b 45 f4 3c	 imul	 eax, DWORD PTR _light_count$7[ebp], 60
  00389	05 00 00 00 00	 add	 eax, OFFSET ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A
  0038e	8b 4d fc	 mov	 ecx, DWORD PTR _list$9[ebp]
  00391	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 437  : 				}
; 438  : 				else

  00394	eb 14		 jmp	 SHORT $LN18@setup_envi
$LN17@setup_envi:

; 439  : 				{
; 440  : 		
; 441  : 					current_3d_lights = &spare_3d_system_lights[0];

  00396	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  0039b	6b c8 00	 imul	 ecx, eax, 0
  0039e	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A
  003a4	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A, ecx ; current_3d_lights
$LN18@setup_envi:

; 442  : 				}
; 443  : 
; 444  : 				spare_3d_system_lights[light_count].succ = NULL;	//&spare_3d_system_lights[1];

  003aa	6b 45 f4 3c	 imul	 eax, DWORD PTR _light_count$7[ebp], 60
  003ae	c7 80 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?spare_3d_system_lights@@3PAULIGHT_3D_SOURCE@@A[eax+56], 0

; 445  : 			}

  003b8	eb 92		 jmp	 SHORT $LN2@setup_envi
$LN3@setup_envi:

; 446  : 		}
; 447  : 	
; 448  : 		//
; 449  : 		// Set up the moon light
; 450  : 		//
; 451  : 	
; 452  : 		if ( env->moon_light.main_light )

  003ba	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  003bd	83 b8 5c 01 00
	00 00		 cmp	 DWORD PTR [eax+348], 0
  003c4	74 0e		 je	 SHORT $LN19@setup_envi

; 453  : 		{
; 454  : 	
; 455  : 			insert_main_3d_light_into_3d_scene ( &env->moon_3d_light );

  003c6	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  003c9	05 24 02 00 00	 add	 eax, 548		; 00000224H
  003ce	50		 push	 eax
  003cf	e8 00 00 00 00	 call	 ?insert_main_3d_light_into_3d_scene@@YGXPAULIGHT_3D_SOURCE@@@Z ; insert_main_3d_light_into_3d_scene
$LN19@setup_envi:

; 456  : 		}
; 457  : 	}
; 458  : 	else

  003d4	eb 0e		 jmp	 SHORT $LN11@setup_envi
$LN10@setup_envi:

; 459  : 	{
; 460  : 
; 461  : 		insert_main_3d_light_into_3d_scene ( &env->main_3d_light );

  003d6	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  003d9	05 60 02 00 00	 add	 eax, 608		; 00000260H
  003de	50		 push	 eax
  003df	e8 00 00 00 00	 call	 ?insert_main_3d_light_into_3d_scene@@YGXPAULIGHT_3D_SOURCE@@@Z ; insert_main_3d_light_into_3d_scene
$LN11@setup_envi:

; 462  : 	}
; 463  : 
; 464  : 	//
; 465  : 	// Add secondary lights into the list
; 466  : 	//
; 467  : 
; 468  : 	if ( env->secondary_light_sources )

  003e4	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  003e7	83 b8 a4 02 00
	00 00		 cmp	 DWORD PTR [eax+676], 0
  003ee	74 48		 je	 SHORT $LN23@setup_envi

; 469  : 	{
; 470  : 
; 471  : 		light_3d_source
; 472  : 			*list;
; 473  : 
; 474  : 		list = current_3d_lights;

  003f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A ; current_3d_lights
  003f5	89 45 a4	 mov	 DWORD PTR _list$1[ebp], eax

; 475  : 
; 476  : 		if ( list )

  003f8	83 7d a4 00	 cmp	 DWORD PTR _list$1[ebp], 0
  003fc	74 14		 je	 SHORT $LN8@setup_envi
$LN7@setup_envi:

; 477  : 		{
; 478  : 
; 479  : 			while ( list->succ )

  003fe	8b 45 a4	 mov	 eax, DWORD PTR _list$1[ebp]
  00401	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00405	74 0b		 je	 SHORT $LN8@setup_envi

; 480  : 			{
; 481  : 
; 482  : 				list = list->succ;

  00407	8b 45 a4	 mov	 eax, DWORD PTR _list$1[ebp]
  0040a	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0040d	89 4d a4	 mov	 DWORD PTR _list$1[ebp], ecx

; 483  : 			}

  00410	eb ec		 jmp	 SHORT $LN7@setup_envi
$LN8@setup_envi:

; 484  : 		}
; 485  : 
; 486  : 		if ( list )

  00412	83 7d a4 00	 cmp	 DWORD PTR _list$1[ebp], 0
  00416	74 11		 je	 SHORT $LN22@setup_envi

; 487  : 		{
; 488  : 
; 489  : 			list->succ = env->secondary_light_sources;

  00418	8b 45 a4	 mov	 eax, DWORD PTR _list$1[ebp]
  0041b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0041e	8b 91 a4 02 00
	00		 mov	 edx, DWORD PTR [ecx+676]
  00424	89 50 38	 mov	 DWORD PTR [eax+56], edx

; 490  : 		}
; 491  : 		else

  00427	eb 0f		 jmp	 SHORT $LN23@setup_envi
$LN22@setup_envi:

; 492  : 		{
; 493  : 
; 494  : 			current_3d_lights = env->secondary_light_sources;

  00429	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0042c	8b 88 a4 02 00
	00		 mov	 ecx, DWORD PTR [eax+676]
  00432	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A, ecx ; current_3d_lights
$LN23@setup_envi:

; 495  : 		}
; 496  : 	}
; 497  : }

  00438	5f		 pop	 edi
  00439	5e		 pop	 esi
  0043a	5b		 pop	 ebx
  0043b	8b e5		 mov	 esp, ebp
  0043d	5d		 pop	 ebp
  0043e	c2 04 00	 ret	 4
?setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z ENDP ; setup_environment_lights_in_scene
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dscene.c
;	COMDAT ?end_3d_scene@@YGXXZ
_TEXT	SEGMENT
?end_3d_scene@@YGXXZ PROC				; end_3d_scene, COMDAT

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 235  : 
; 236  : 	//
; 237  : 	// Finally, end the scene.
; 238  : 	//
; 239  : 
; 240  : 	d3d_end_scene ();

  00009	e8 00 00 00 00	 call	 ?d3d_end_scene@@YGHXZ	; d3d_end_scene

; 241  : 
; 242  : 	//
; 243  : 	// Report on the state performance
; 244  : 	//
; 245  : 
; 246  : 	report_d3d_state_performance ();

  0000e	e8 00 00 00 00	 call	 ?report_d3d_state_performance@@YGXXZ ; report_d3d_state_performance

; 247  : 
; 248  : 	//
; 249  : 	// Report on the clip performance
; 250  : 	//
; 251  : 
; 252  : 	report_clip_statistics ();

  00013	e8 00 00 00 00	 call	 ?report_clip_statistics@@YGXXZ ; report_clip_statistics

; 253  : 
; 254  : 	//
; 255  : 	// Report vertex cache performance
; 256  : 	//
; 257  : 
; 258  : 	report_vertex_cache_statistics ();

  00018	e8 00 00 00 00	 call	 ?report_vertex_cache_statistics@@YGXXZ ; report_vertex_cache_statistics

; 259  : 
; 260  : 	//
; 261  : 	// Clear any temporary 3d instances
; 262  : 	//
; 263  : 
; 264  : 	clear_temporary_3d_instances ();

  0001d	e8 00 00 00 00	 call	 ?clear_temporary_3d_instances@@YGXXZ ; clear_temporary_3d_instances

; 265  : 
; 266  : 	//
; 267  : 	// Finalise the performance figures for the 3d visual.
; 268  : 	//
; 269  : /*
; 270  : 	final_total_number_of_terrain_points = total_number_of_terrain_points;
; 271  : 
; 272  : 	final_total_number_of_terrain_points_transformed = total_number_of_terrain_points_transformed;
; 273  : 
; 274  : 	final_terrain_3d_faces_considered = terrain_3d_faces_considered;
; 275  : 
; 276  : 	final_terrain_3d_faces_outcoded = terrain_3d_faces_outcoded;
; 277  : 
; 278  : 	final_terrain_3d_faces_constructed = terrain_3d_faces_constructed;
; 279  : 
; 280  : 	final_terrain_3d_faces_rejected = terrain_3d_faces_rejected;
; 281  : 
; 282  : 	final_terrain_3d_faces_hither_clipped = terrain_3d_faces_hither_clipped;
; 283  : 
; 284  : 	final_terrain_3d_faces_screen_clipped = terrain_3d_faces_screen_clipped;
; 285  : 
; 286  : 	final_terrain_3d_sectors_inserted = terrain_3d_sectors_inserted;
; 287  : 
; 288  : 	final_terrain_3d_sectors_totally_visible = terrain_3d_sectors_totally_visible;
; 289  : 
; 290  : 	final_terrain_3d_sectors_trivially_culled = terrain_3d_sectors_trivially_culled;
; 291  : 
; 292  : 	final_terrain_3d_sectors_complex_culled = terrain_3d_sectors_complex_culled;
; 293  : */
; 294  : 
; 295  : 	final_number_of_objects_in_3d_scene = number_of_objects_in_3d_scene;

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_objects_in_3d_scene@@3HA ; number_of_objects_in_3d_scene
  00027	a3 00 00 00 00	 mov	 DWORD PTR ?final_number_of_objects_in_3d_scene@@3HA, eax ; final_number_of_objects_in_3d_scene

; 296  : 
; 297  : 	final_number_of_sprites_in_3d_scene = number_of_sprites_in_3d_scene;

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_sprites_in_3d_scene@@3HA ; number_of_sprites_in_3d_scene
  00031	a3 00 00 00 00	 mov	 DWORD PTR ?final_number_of_sprites_in_3d_scene@@3HA, eax ; final_number_of_sprites_in_3d_scene

; 298  : 
; 299  : 	report_sub_object_search_statistics ();

  00036	e8 00 00 00 00	 call	 ?report_sub_object_search_statistics@@YGXXZ ; report_sub_object_search_statistics

; 300  : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?end_3d_scene@@YGXXZ ENDP				; end_3d_scene
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dscene.c
;	COMDAT ?begin_3d_scene@@YGHXZ
_TEXT	SEGMENT
_scene_valid$ = -4					; size = 4
?begin_3d_scene@@YGHXZ PROC				; begin_3d_scene, COMDAT

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 86   : 
; 87   : 	int
; 88   : 		scene_valid;
; 89   : 
; 90   : 	reset_sub_object_search_statistics ();

  00009	e8 00 00 00 00	 call	 ?reset_sub_object_search_statistics@@YGXXZ ; reset_sub_object_search_statistics

; 91   : 
; 92   : 	reset_3d_polylines ();

  0000e	e8 00 00 00 00	 call	 ?reset_3d_polylines@@YGXXZ ; reset_3d_polylines

; 93   : 
; 94   : 	reset_smoke_trail_rendering_information ();

  00013	e8 00 00 00 00	 call	 ?reset_smoke_trail_rendering_information@@YGXXZ ; reset_smoke_trail_rendering_information

; 95   : 
; 96   : 	reset_translucent_buffering_system ();

  00018	e8 00 00 00 00	 call	 ?reset_translucent_buffering_system@@YGXXZ ; reset_translucent_buffering_system

; 97   : 
; 98   : 	scene_valid = d3d_begin_scene ();

  0001d	e8 00 00 00 00	 call	 ?d3d_begin_scene@@YGHXZ	; d3d_begin_scene
  00022	89 45 fc	 mov	 DWORD PTR _scene_valid$[ebp], eax

; 99   : 
; 100  : 	//
; 101  : 	// Clear performance stats
; 102  : 	//
; 103  : 
; 104  : 	reset_3d_transformation_stats ();

  00025	e8 00 00 00 00	 call	 ?reset_3d_transformation_stats@@YGXXZ ; reset_3d_transformation_stats

; 105  : 
; 106  : 	reset_d3d_state_performance ();

  0002a	e8 00 00 00 00	 call	 ?reset_d3d_state_performance@@YGXXZ ; reset_d3d_state_performance

; 107  : 
; 108  : 	//
; 109  : 	// Clear clipping stats
; 110  : 	//
; 111  : 
; 112  : 	reset_clip_statistics ();

  0002f	e8 00 00 00 00	 call	 ?reset_clip_statistics@@YGXXZ ; reset_clip_statistics

; 113  : 
; 114  : 	//
; 115  : 	// Reset vertex caches
; 116  : 	//
; 117  : 
; 118  : 	vertex_cache_size = 3;

  00034	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?vertex_cache_size@@3HA, 3 ; vertex_cache_size

; 119  : 
; 120  : 	set_vertex_cache_size ( vertex_cache_size );

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?vertex_cache_size@@3HA ; vertex_cache_size
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?set_vertex_cache_size@@YGXH@Z ; set_vertex_cache_size

; 121  : 
; 122  : 	reset_vertex_cache_data ();

  00049	e8 00 00 00 00	 call	 ?reset_vertex_cache_data@@YGXXZ ; reset_vertex_cache_data

; 123  : 
; 124  : 	//
; 125  : 	// Setup the object sorting bins
; 126  : 	//
; 127  : 
; 128  : 	clear_3d_scene_objects ();

  0004e	e8 00 00 00 00	 call	 ?clear_3d_scene_objects@@YGXXZ ; clear_3d_scene_objects

; 129  : 
; 130  : 	//
; 131  : 	// Remove all lights from the scene
; 132  : 	//
; 133  : 
; 134  : 	reset_light_3d_sources_in_3d_scene ();

  00053	e8 00 00 00 00	 call	 ?reset_light_3d_sources_in_3d_scene@@YGXXZ ; reset_light_3d_sources_in_3d_scene

; 135  : 
; 136  : 	//
; 137  : 	// Setup the lighting conditions
; 138  : 	//
; 139  : 
; 140  : 	if ( active_3d_environment )

  00058	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A, 0 ; active_3d_environment
  0005f	74 0b		 je	 SHORT $LN2@begin_3d_s

; 141  : 	{
; 142  : 
; 143  : 		//
; 144  : 		// There are circumstances when we don't need an environment ( terrain 3d map renderer )
; 145  : 		//
; 146  : 
; 147  : 		setup_environment_lights_in_scene ( active_3d_environment );

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?setup_environment_lights_in_scene@@YGXPAUENV_3D@@@Z ; setup_environment_lights_in_scene
$LN2@begin_3d_s:

; 148  : 	}
; 149  : 
; 150  : 	//
; 151  : 	// Clear any temporary 3d instances - in case any have been created after the last end_scene call
; 152  : 	//
; 153  : 
; 154  : 	clear_temporary_3d_instances ();

  0006c	e8 00 00 00 00	 call	 ?clear_temporary_3d_instances@@YGXXZ ; clear_temporary_3d_instances

; 155  : 
; 156  : 	//
; 157  : 	// Set the fog mode renderstates
; 158  : 	//
; 159  : 
; 160  : 	set_d3d_fog_renderstates ();

  00071	e8 00 00 00 00	 call	 ?set_d3d_fog_renderstates@@YGXXZ ; set_d3d_fog_renderstates

; 161  : 
; 162  : 	//
; 163  : 	// Set the visual effects flags ( for infrared stuff )
; 164  : 	//
; 165  : 
; 166  : 	if (( active_3d_environment ) && ( active_3d_environment->render_filter == RENDER_INFRARED ) )

  00076	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A, 0 ; active_3d_environment
  0007d	74 24		 je	 SHORT $LN3@begin_3d_s
  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00084	83 b8 d0 02 00
	00 02		 cmp	 DWORD PTR [eax+720], 2
  0008b	75 16		 jne	 SHORT $LN3@begin_3d_s

; 167  : 	{
; 168  : 
; 169  : 		textured_object_rendering_enabled = FALSE;

  0008d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?textured_object_rendering_enabled@@3HA, 0 ; textured_object_rendering_enabled

; 170  : 
; 171  : 		terrain_object_rendering_enabled = TRUE;

  00097	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?terrain_object_rendering_enabled@@3HA, 1 ; terrain_object_rendering_enabled

; 172  : 	}
; 173  : 	else

  000a1	eb 14		 jmp	 SHORT $LN4@begin_3d_s
$LN3@begin_3d_s:

; 174  : 	{
; 175  : 
; 176  : 		textured_object_rendering_enabled = TRUE;

  000a3	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?textured_object_rendering_enabled@@3HA, 1 ; textured_object_rendering_enabled

; 177  : 
; 178  : 		terrain_object_rendering_enabled = TRUE;

  000ad	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?terrain_object_rendering_enabled@@3HA, 1 ; terrain_object_rendering_enabled
$LN4@begin_3d_s:

; 179  : 	}
; 180  : 
; 181  : 	//
; 182  : 	// Initialise the terrain performance figures
; 183  : 	//
; 184  : /*
; 185  : 	total_number_of_terrain_points = 0;
; 186  : 
; 187  : 	total_number_of_terrain_points_transformed = 0;
; 188  : 
; 189  : 	terrain_3d_faces_considered = 0;
; 190  : 
; 191  : 	terrain_3d_faces_outcoded = 0;
; 192  : 
; 193  : 	terrain_3d_faces_constructed = 0;
; 194  : 
; 195  : 	terrain_3d_faces_rejected = 0;
; 196  : 
; 197  : 	terrain_3d_faces_hither_clipped = 0;
; 198  : 
; 199  : 	terrain_3d_faces_screen_clipped = 0;
; 200  : 
; 201  : 	terrain_3d_sectors_inserted = 0;
; 202  : 
; 203  : 	terrain_3d_sectors_totally_visible = 0;
; 204  : 
; 205  : 	terrain_3d_sectors_trivially_culled = 0;
; 206  : 
; 207  : 	terrain_3d_sectors_complex_culled = 0;
; 208  : */
; 209  : 	number_of_objects_in_3d_scene = 0;

  000b7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_objects_in_3d_scene@@3HA, 0 ; number_of_objects_in_3d_scene

; 210  : 
; 211  : 	number_of_sprites_in_3d_scene = 0;

  000c1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_sprites_in_3d_scene@@3HA, 0 ; number_of_sprites_in_3d_scene

; 212  : 
; 213  : 	if ( scene_valid )

  000cb	83 7d fc 00	 cmp	 DWORD PTR _scene_valid$[ebp], 0
  000cf	74 43		 je	 SHORT $LN5@begin_3d_s

; 214  : 	{
; 215  : 
; 216  : 		set_d3d_int_state ( D3DRENDERSTATE_ZENABLE, TRUE );

  000d1	6a 01		 push	 1
  000d3	6a 07		 push	 7
  000d5	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 217  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, TRUE );

  000da	6a 01		 push	 1
  000dc	6a 0e		 push	 14			; 0000000eH
  000de	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 218  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  000e8	50		 push	 eax
  000e9	6a 17		 push	 23			; 00000017H
  000eb	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 219  : 
; 220  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHATESTENABLE, FALSE );

  000f0	6a 00		 push	 0
  000f2	6a 0f		 push	 15			; 0000000fH
  000f4	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 221  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  000f9	6a 00		 push	 0
  000fb	6a 1b		 push	 27			; 0000001bH
  000fd	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 222  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  00102	6a 05		 push	 5
  00104	6a 13		 push	 19			; 00000013H
  00106	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 223  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  0010b	6a 06		 push	 6
  0010d	6a 14		 push	 20			; 00000014H
  0010f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN5@begin_3d_s:

; 224  : 	}
; 225  : 
; 226  : 	return ( scene_valid );

  00114	8b 45 fc	 mov	 eax, DWORD PTR _scene_valid$[ebp]

; 227  : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c3		 ret	 0
?begin_3d_scene@@YGHXZ ENDP				; begin_3d_scene
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?acos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?acos@@YGMM@Z PROC					; acos, COMDAT

; 26   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 27   : 	return (_CSTD acosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _acosf
  00019	83 c4 04	 add	 esp, 4

; 28   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?acos@@YGMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _acosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT

; 623  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  :             return (float)acos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _acos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 625  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_acosf	ENDP
_TEXT	ENDS
END
