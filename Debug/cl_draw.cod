; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\close\cl_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_close_ui_object_draw_functions@@YGXH@Z ; overload_close_ui_object_draw_functions
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?set_ui_redraw@@YGXH@Z:PROC			; set_ui_redraw
EXTRN	?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z:PROC	; ui_draw_area
EXTRN	?ui_draw_graphic@@YGXMMMMPAG@Z:PROC		; ui_draw_graphic
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted
EXTRN	?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\close\cl_draw.c
;	COMDAT ?draw_close_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_old_state$1 = -40					; size = 4
_close$ = -36						; size = 4
_graphic$ = -32						; size = 4
_old_active_screen$ = -28				; size = 4
_y2$ = -24						; size = 4
_x2$ = -20						; size = 4
_y1$ = -16						; size = 4
_x1$ = -12						; size = 4
_y_size$ = -8						; size = 4
_x_size$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_close_ui_object@@YGXPAUUI_OBJECT@@@Z PROC		; draw_close_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : 		x_size,
; 78   : 		y_size,
; 79   : 		x1,
; 80   : 		y1,
; 81   : 		x2,
; 82   : 		y2;
; 83   : 
; 84   : 	struct SCREEN
; 85   : 		*old_active_screen;
; 86   : 
; 87   : 	unsigned short int
; 88   : 		*graphic;
; 89   : 
; 90   : 	close_ui_object
; 91   : 		*close;
; 92   : 
; 93   : 	close = (close_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d dc	 mov	 DWORD PTR _close$[ebp], ecx

; 94   : 
; 95   : 	if (get_ui_object_redraw (obj))

  00012	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00022	ff d0		 call	 eax
  00024	85 c0		 test	 eax, eax
  00026	0f 84 ec 01 00
	00		 je	 $LN2@draw_close

; 96   : 	{
; 97   : 
; 98   : 		x1 = get_ui_object_x (obj);

  0002c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d f4	 fstp	 DWORD PTR _x1$[ebp]

; 99   : 		
; 100  : 		y1 = get_ui_object_y (obj);

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00048	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00051	ff d0		 call	 eax
  00053	d9 5d f0	 fstp	 DWORD PTR _y1$[ebp]

; 101  : 
; 102  : 		x_size = get_ui_object_x_size (obj);

  00056	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00066	ff d0		 call	 eax
  00068	d9 5d fc	 fstp	 DWORD PTR _x_size$[ebp]

; 103  : 
; 104  : 		y_size = get_ui_object_y_size (obj);

  0006b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0007b	ff d0		 call	 eax
  0007d	d9 5d f8	 fstp	 DWORD PTR _y_size$[ebp]

; 105  : 
; 106  : 		x2 = x1 + x_size;

  00080	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00085	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  0008a	f3 0f 11 45 ec	 movss	 DWORD PTR _x2$[ebp], xmm0

; 107  : 	
; 108  : 		y2 = y1 + y_size;

  0008f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00094	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  00099	f3 0f 11 45 e8	 movss	 DWORD PTR _y2$[ebp], xmm0

; 109  : 
; 110  : 		old_active_screen = get_active_screen ();

  0009e	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  000a3	89 45 e4	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 111  : 
; 112  : 		if (get_ui_object_active_screen (obj))

  000a6	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000b6	ff d0		 call	 eax
  000b8	85 c0		 test	 eax, eax
  000ba	74 1a		 je	 SHORT $LN3@draw_close

; 113  : 		{
; 114  : 	
; 115  : 			set_active_screen (get_ui_object_active_screen (obj));

  000bc	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000bf	50		 push	 eax
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000cc	ff d0		 call	 eax
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 116  : 		}
; 117  : 		else

  000d4	eb 0b		 jmp	 SHORT $LN4@draw_close
$LN3@draw_close:

; 118  : 		{
; 119  : 
; 120  : 			set_active_screen (video_screen);

  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN4@draw_close:

; 121  : 		}
; 122  : 
; 123  : 		//if (lock_screen (active_screen))
; 124  : 		{
; 125  : 		
; 126  : 			graphic = get_ui_object_graphic (obj);

  000e1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000e4	50		 push	 eax
  000e5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000e8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ea	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  000f1	ff d0		 call	 eax
  000f3	89 45 e0	 mov	 DWORD PTR _graphic$[ebp], eax

; 127  : 	
; 128  : 			if (!get_ui_object_clear (obj))

  000f6	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000f9	50		 push	 eax
  000fa	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000fd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ff	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00106	ff d0		 call	 eax
  00108	85 c0		 test	 eax, eax
  0010a	0f 85 ca 00 00
	00		 jne	 $LN7@draw_close

; 129  : 			{
; 130  : 		
; 131  : 				if (graphic)

  00110	83 7d e0 00	 cmp	 DWORD PTR _graphic$[ebp], 0
  00114	74 3a		 je	 SHORT $LN6@draw_close

; 132  : 				{
; 133  : 		
; 134  : 					ui_draw_graphic (x1, y1, x2, y2, graphic);

  00116	8b 45 e0	 mov	 eax, DWORD PTR _graphic$[ebp]
  00119	50		 push	 eax
  0011a	51		 push	 ecx
  0011b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00120	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00125	51		 push	 ecx
  00126	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0012b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00130	51		 push	 ecx
  00131	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00136	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013b	51		 push	 ecx
  0013c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00141	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00146	e8 00 00 00 00	 call	 ?ui_draw_graphic@@YGXMMMMPAG@Z ; ui_draw_graphic

; 135  : 				}
; 136  : 				else

  0014b	e9 8a 00 00 00	 jmp	 $LN7@draw_close
$LN6@draw_close:

; 137  : 				{
; 138  : 
; 139  : 					int
; 140  : 						old_state;
; 141  : 
; 142  : 					old_state = get_ui_object_state (obj);

  00150	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00153	50		 push	 eax
  00154	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00157	8b 11		 mov	 edx, DWORD PTR [ecx]
  00159	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00160	ff d0		 call	 eax
  00162	89 45 d8	 mov	 DWORD PTR _old_state$1[ebp], eax

; 143  : 
; 144  : 					if (get_ui_object_highlighted (obj))

  00165	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00168	50		 push	 eax
  00169	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0016c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00175	ff d0		 call	 eax
  00177	85 c0		 test	 eax, eax
  00179	74 14		 je	 SHORT $LN8@draw_close

; 145  : 					{
; 146  : 
; 147  : 						set_ui_object_state (obj, UI_OBJECT_STATE_HIGHLIGHTED);

  0017b	6a 02		 push	 2
  0017d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00180	50		 push	 eax
  00181	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00184	8b 11		 mov	 edx, DWORD PTR [ecx]
  00186	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0018d	ff d0		 call	 eax
$LN8@draw_close:

; 148  : 					}
; 149  : 
; 150  : 					ui_draw_area (x1, y1, x2, y2, obj);

  0018f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00192	50		 push	 eax
  00193	51		 push	 ecx
  00194	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00199	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019e	51		 push	 ecx
  0019f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a9	51		 push	 ecx
  001aa	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b4	51		 push	 ecx
  001b5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bf	e8 00 00 00 00	 call	 ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ; ui_draw_area

; 151  : 
; 152  : 					set_ui_object_state (obj, old_state);

  001c4	8b 45 d8	 mov	 eax, DWORD PTR _old_state$1[ebp]
  001c7	50		 push	 eax
  001c8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001cb	51		 push	 ecx
  001cc	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001cf	8b 02		 mov	 eax, DWORD PTR [edx]
  001d1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  001d8	ff d1		 call	 ecx
$LN7@draw_close:

; 153  : 				}
; 154  : 			}
; 155  : 		
; 156  : 			//unlock_screen (active_screen);
; 157  : 		}
; 158  : 
; 159  : 		set_active_screen (old_active_screen);

  001da	8b 45 e4	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 160  : 	
; 161  : 		set_ui_redraw (TRUE);

  001e3	6a 01		 push	 1
  001e5	e8 00 00 00 00	 call	 ?set_ui_redraw@@YGXH@Z	; set_ui_redraw

; 162  : 
; 163  : 		close->area.redraw --;

  001ea	8b 45 dc	 mov	 eax, DWORD PTR _close$[ebp]
  001ed	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  001f0	c1 e9 07	 shr	 ecx, 7
  001f3	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  001f9	83 e9 01	 sub	 ecx, 1
  001fc	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00202	c1 e1 07	 shl	 ecx, 7
  00205	8b 55 dc	 mov	 edx, DWORD PTR _close$[ebp]
  00208	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0020b	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  00210	0b c1		 or	 eax, ecx
  00212	8b 4d dc	 mov	 ecx, DWORD PTR _close$[ebp]
  00215	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
$LN2@draw_close:

; 164  : 	}
; 165  : }

  00218	5f		 pop	 edi
  00219	5e		 pop	 esi
  0021a	5b		 pop	 ebx
  0021b	8b e5		 mov	 esp, ebp
  0021d	5d		 pop	 ebp
  0021e	c2 04 00	 ret	 4
?draw_close_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP		; draw_close_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\close\cl_draw.c
;	COMDAT ?overload_close_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_close_ui_object_draw_functions@@YGXH@Z PROC	; overload_close_ui_object_draw_functions, COMDAT

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 173  : 
; 174  : 	fn_draw_ui_object [type] = draw_close_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_close_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_close_ui_object

; 175  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_close_ui_object_draw_functions@@YGXH@Z ENDP	; overload_close_ui_object_draw_functions
_TEXT	ENDS
END
