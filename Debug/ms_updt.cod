; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\slider\ms_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_mslider_ui_object_update_functions@@YGXH@Z ; overload_mslider_ui_object_update_functions
PUBLIC	__real@00000000
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?scroll_slider@@YGXPAUUI_OBJECT@@MMM@Z:PROC	; scroll_slider
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_clip_area@@YGHPAM000@Z:PROC			; ui_clip_area
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_update_ui_object
EXTRN	?fn_get_ui_object_slider_min@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_slider_min
EXTRN	?fn_get_ui_object_slider_max@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_slider_max
EXTRN	?scroll@@3MA:DWORD				; scroll
EXTRN	__fltused:DWORD
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\ms_updt.c
;	COMDAT ?update_mslider_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv387 = -144						; size = 4
tv379 = -144						; size = 4
tv351 = -144						; size = 4
tv343 = -144						; size = 4
_old_viewport_y2$ = -76					; size = 4
_old_viewport_x2$ = -72					; size = 4
_old_viewport_y1$ = -68					; size = 4
_old_viewport_x1$ = -64					; size = 4
_area$ = -60						; size = 4
_parent$ = -56						; size = 4
_object_to_slide$ = -52					; size = 4
_y2$ = -48						; size = 4
_x2$ = -44						; size = 4
_y1$ = -40						; size = 4
_x1$ = -36						; size = 4
_max$ = -32						; size = 4
_min$ = -28						; size = 4
_parent_y_origin$ = -24					; size = 4
_parent_x_origin$ = -20					; size = 4
_parent_y2$ = -16					; size = 4
_parent_x2$ = -12					; size = 4
_parent_y1$ = -8					; size = 4
_parent_x1$ = -4					; size = 4
_obj$ = 8						; size = 4
?update_mslider_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; update_mslider_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : 		parent_x1,
; 78   : 		parent_y1,
; 79   : 		parent_x2,
; 80   : 		parent_y2,
; 81   : 		parent_x_origin,
; 82   : 		parent_y_origin;
; 83   : 
; 84   : 	float
; 85   : 		min,
; 86   : 		max,
; 87   : 		x1,
; 88   : 		y1,
; 89   : 		x2,
; 90   : 		y2;
; 91   : 
; 92   : 	ui_object
; 93   : 		*object_to_slide,
; 94   : 		*parent;
; 95   : 
; 96   :    area_ui_object
; 97   :       *area;
; 98   : 
; 99   : 	float
; 100  : 		old_viewport_x1,
; 101  : 		old_viewport_y1,
; 102  : 		old_viewport_x2,
; 103  : 		old_viewport_y2;
; 104  : 
; 105  :    // store parents viewport data
; 106  : 
; 107  : 	old_viewport_x1 = active_viewport.x_min;

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00014	f3 0f 11 45 c0	 movss	 DWORD PTR _old_viewport_x1$[ebp], xmm0

; 108  : 	old_viewport_y1 = active_viewport.y_min;

  00019	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00021	f3 0f 11 45 bc	 movss	 DWORD PTR _old_viewport_y1$[ebp], xmm0

; 109  : 	old_viewport_x2 = active_viewport.x_max;

  00026	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0002e	f3 0f 11 45 b8	 movss	 DWORD PTR _old_viewport_x2$[ebp], xmm0

; 110  : 	old_viewport_y2 = active_viewport.y_max;

  00033	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0003b	f3 0f 11 45 b4	 movss	 DWORD PTR _old_viewport_y2$[ebp], xmm0

; 111  : 
; 112  :    area = (area_ui_object *) obj->data;

  00040	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00043	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00046	89 4d c4	 mov	 DWORD PTR _area$[ebp], ecx

; 113  : 
; 114  : 	// Scroll if required
; 115  : 
; 116  : 	if (scroll)

  00049	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?scroll@@3MA
  00051	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00058	9f		 lahf
  00059	f6 c4 44	 test	 ah, 68			; 00000044H
  0005c	7b 6c		 jnp	 SHORT $LN2@update_msl

; 117  : 	{
; 118  : 
; 119  : 		min = get_ui_object_slider_min (obj);

  0005e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_slider_min@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0006e	ff d0		 call	 eax
  00070	d9 5d e4	 fstp	 DWORD PTR _min$[ebp]

; 120  : 	
; 121  : 		max = get_ui_object_slider_max (obj);

  00073	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00076	50		 push	 eax
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_slider_max@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00083	ff d0		 call	 eax
  00085	d9 5d e0	 fstp	 DWORD PTR _max$[ebp]

; 122  : 	
; 123  : 		object_to_slide = get_ui_object_next (obj);

  00088	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00098	ff d0		 call	 eax
  0009a	89 45 cc	 mov	 DWORD PTR _object_to_slide$[ebp], eax

; 124  :   
; 125  : 		scroll_slider (object_to_slide, min, max, scroll);

  0009d	51		 push	 ecx
  0009e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?scroll@@3MA
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	51		 push	 ecx
  000ac	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _max$[ebp]
  000b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b6	51		 push	 ecx
  000b7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _min$[ebp]
  000bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c1	8b 45 cc	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?scroll_slider@@YGXPAUUI_OBJECT@@MMM@Z ; scroll_slider
$LN2@update_msl:

; 126  : 	}
; 127  : 
; 128  : 	// store parents viewport data
; 129  : 
; 130  : 	parent = get_ui_object_parent (obj);

  000ca	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000cd	50		 push	 eax
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000d1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000da	ff d0		 call	 eax
  000dc	89 45 c8	 mov	 DWORD PTR _parent$[ebp], eax

; 131  : 
; 132  : 	parent_x_origin = get_ui_object_x_origin (parent);

  000df	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  000e2	50		 push	 eax
  000e3	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  000e6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ef	ff d0		 call	 eax
  000f1	d9 5d ec	 fstp	 DWORD PTR _parent_x_origin$[ebp]

; 133  : 
; 134  : 	parent_y_origin = get_ui_object_y_origin (parent);

  000f4	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  000f7	50		 push	 eax
  000f8	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  000fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00104	ff d0		 call	 eax
  00106	d9 5d e8	 fstp	 DWORD PTR _parent_y_origin$[ebp]

; 135  : 
; 136  : 	parent_x1 = get_ui_object_x (parent);

  00109	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0010c	50		 push	 eax
  0010d	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00110	8b 11		 mov	 edx, DWORD PTR [ecx]
  00112	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00119	ff d0		 call	 eax
  0011b	d9 5d fc	 fstp	 DWORD PTR _parent_x1$[ebp]

; 137  : 
; 138  : 	parent_y1 = get_ui_object_y (parent);

  0011e	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00121	50		 push	 eax
  00122	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00125	8b 11		 mov	 edx, DWORD PTR [ecx]
  00127	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0012e	ff d0		 call	 eax
  00130	d9 5d f8	 fstp	 DWORD PTR _parent_y1$[ebp]

; 139  : 
; 140  : 	parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  00133	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00136	50		 push	 eax
  00137	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0013a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00143	ff d0		 call	 eax
  00145	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv343[ebp]
  0014b	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv343[ebp]
  00153	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00158	f3 0f 11 45 f4	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 141  : 
; 142  : 	parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  0015d	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00160	50		 push	 eax
  00161	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00164	8b 11		 mov	 edx, DWORD PTR [ecx]
  00166	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0016d	ff d0		 call	 eax
  0016f	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv351[ebp]
  00175	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv351[ebp]
  0017d	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00182	f3 0f 11 45 f0	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 143  : 
; 144  :    if (area->drawable)

  00187	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  0018a	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0018d	c1 e9 05	 shr	 ecx, 5
  00190	83 e1 01	 and	 ecx, 1
  00193	0f 84 29 01 00
	00		 je	 $LN4@update_msl

; 145  :    {
; 146  : 
; 147  : 		ui_set_origin (0, 0);

  00199	51		 push	 ecx
  0019a	0f 57 c0	 xorps	 xmm0, xmm0
  0019d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a2	51		 push	 ecx
  001a3	0f 57 c0	 xorps	 xmm0, xmm0
  001a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ab	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 148  : 
; 149  :       draw_ui_object (obj);

  001b0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001b3	50		 push	 eax
  001b4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[edx*4]
  001c0	ff d0		 call	 eax

; 150  : 
; 151  :       if (area->child)

  001c2	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  001c5	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  001c9	0f 84 f3 00 00
	00		 je	 $LN4@update_msl

; 152  :       {
; 153  : 
; 154  : 			x1 = get_ui_object_x (obj);

  001cf	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001d6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001df	ff d0		 call	 eax
  001e1	d9 5d dc	 fstp	 DWORD PTR _x1$[ebp]

; 155  : 
; 156  : 			y1 = get_ui_object_y (obj);

  001e4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001e7	50		 push	 eax
  001e8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001eb	8b 11		 mov	 edx, DWORD PTR [ecx]
  001ed	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001f4	ff d0		 call	 eax
  001f6	d9 5d d8	 fstp	 DWORD PTR _y1$[ebp]

; 157  : 
; 158  : 			x2 = x1 + get_ui_object_x_size (obj);

  001f9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001fc	50		 push	 eax
  001fd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00200	8b 11		 mov	 edx, DWORD PTR [ecx]
  00202	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00209	ff d0		 call	 eax
  0020b	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv379[ebp]
  00211	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv379[ebp]
  00219	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _x1$[ebp]
  0021e	f3 0f 11 45 d4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 159  : 
; 160  : 			y2 = y1 + get_ui_object_y_size (obj);

  00223	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00226	50		 push	 eax
  00227	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0022a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0022c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00233	ff d0		 call	 eax
  00235	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv387[ebp]
  0023b	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv387[ebp]
  00243	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _y1$[ebp]
  00248	f3 0f 11 45 d0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 161  : 
; 162  : 			ui_clip_area (&x1, &y1, &x2, &y2);

  0024d	8d 45 d0	 lea	 eax, DWORD PTR _y2$[ebp]
  00250	50		 push	 eax
  00251	8d 4d d4	 lea	 ecx, DWORD PTR _x2$[ebp]
  00254	51		 push	 ecx
  00255	8d 55 d8	 lea	 edx, DWORD PTR _y1$[ebp]
  00258	52		 push	 edx
  00259	8d 45 dc	 lea	 eax, DWORD PTR _x1$[ebp]
  0025c	50		 push	 eax
  0025d	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 163  : 
; 164  : 			set_viewport (x1, y1, x2, y2);

  00262	51		 push	 ecx
  00263	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00268	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026d	51		 push	 ecx
  0026e	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00273	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00278	51		 push	 ecx
  00279	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0027e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00283	51		 push	 ecx
  00284	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00289	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028e	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 165  : 	
; 166  : 			ui_set_origin (0, 0);

  00293	51		 push	 ecx
  00294	0f 57 c0	 xorps	 xmm0, xmm0
  00297	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029c	51		 push	 ecx
  0029d	0f 57 c0	 xorps	 xmm0, xmm0
  002a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a5	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 167  : 	
; 168  :          update_ui_object (area->child);

  002aa	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  002ad	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  002b0	51		 push	 ecx
  002b1	8b 55 c4	 mov	 edx, DWORD PTR _area$[ebp]
  002b4	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  002b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b9	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  002c0	ff d2		 call	 edx
$LN4@update_msl:

; 169  :       }
; 170  : 	}
; 171  : 
; 172  : 	if (area->next)

  002c2	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  002c5	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  002c9	74 7f		 je	 SHORT $LN5@update_msl

; 173  : 	{
; 174  : 
; 175  : 		parent = get_ui_object_parent (obj);

  002cb	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002ce	50		 push	 eax
  002cf	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002db	ff d0		 call	 eax
  002dd	89 45 c8	 mov	 DWORD PTR _parent$[ebp], eax

; 176  : 
; 177  : 		if (parent)

  002e0	83 7d c8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  002e4	74 4c		 je	 SHORT $LN6@update_msl

; 178  : 		{
; 179  : 	
; 180  : 			set_viewport (parent_x1, parent_y1, parent_x2, parent_y2);

  002e6	51		 push	 ecx
  002e7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  002ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f1	51		 push	 ecx
  002f2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  002f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fc	51		 push	 ecx
  002fd	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00302	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00307	51		 push	 ecx
  00308	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  0030d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00312	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 181  : 	
; 182  : 			ui_set_origin (parent_x_origin, parent_y_origin);

  00317	51		 push	 ecx
  00318	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y_origin$[ebp]
  0031d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00322	51		 push	 ecx
  00323	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x_origin$[ebp]
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN6@update_msl:

; 183  : 		}
; 184  : 
; 185  : 		update_ui_object (area->next);

  00332	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  00335	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00338	51		 push	 ecx
  00339	8b 55 c4	 mov	 edx, DWORD PTR _area$[ebp]
  0033c	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0033f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00341	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  00348	ff d2		 call	 edx
$LN5@update_msl:

; 186  : 	}
; 187  : 
; 188  : 	set_viewport (old_viewport_x1, old_viewport_y1, old_viewport_x2, old_viewport_y2);

  0034a	51		 push	 ecx
  0034b	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _old_viewport_y2$[ebp]
  00350	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00355	51		 push	 ecx
  00356	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _old_viewport_x2$[ebp]
  0035b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00360	51		 push	 ecx
  00361	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _old_viewport_y1$[ebp]
  00366	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036b	51		 push	 ecx
  0036c	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _old_viewport_x1$[ebp]
  00371	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00376	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 189  : }

  0037b	5f		 pop	 edi
  0037c	5e		 pop	 esi
  0037d	5b		 pop	 ebx
  0037e	8b e5		 mov	 esp, ebp
  00380	5d		 pop	 ebp
  00381	c2 04 00	 ret	 4
?update_mslider_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; update_mslider_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\ms_updt.c
;	COMDAT ?overload_mslider_ui_object_update_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_mslider_ui_object_update_functions@@YGXH@Z PROC ; overload_mslider_ui_object_update_functions, COMDAT

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 197  : 
; 198  : 	fn_update_ui_object [type] = update_mslider_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?update_mslider_ui_object@@YGXPAUUI_OBJECT@@@Z ; update_mslider_ui_object

; 199  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_mslider_ui_object_update_functions@@YGXH@Z ENDP ; overload_mslider_ui_object_update_functions
_TEXT	ENDS
END
