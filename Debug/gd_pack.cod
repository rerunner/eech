; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\guide\gd_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_guide_pack_functions@@YGXXZ		; overload_guide_pack_functions
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@LGLOHCMD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; pack_list_link
EXTRN	?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; unpack_list_link
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; pack_vec3d
EXTRN	?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; unpack_vec3d
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?guide_position_type_virtual@@3QBHB:BYTE	; guide_position_type_virtual
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 0b2H ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@LGLOHCMD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@LGLOHCMD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\guide\gd_pack'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\guide\gd_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv161 = -84						; size = 4
tv70 = -84						; size = 4
_valid$1 = -16						; size = 4
_loop$2 = -12						; size = 4
_raw$3 = -8						; size = 4
_index$4 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 179  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN8@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN7@unpack_loc
$LN8@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@LGLOHCMD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@unpack_loc:

; 180  : 	
; 181  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 ac	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d ac 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c bc 01 00
	00		 jl	 $LN2@unpack_loc
  0003d	83 7d ac 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN9@unpack_loc
  00043	e9 b1 01 00 00	 jmp	 $LN2@unpack_loc
$LN9@unpack_loc:

; 182  : 	{
; 183  : 		////////////////////////////////////////
; 184  : 		case PACK_MODE_SERVER_SESSION:
; 185  : 		case PACK_MODE_CLIENT_SESSION:
; 186  : 		////////////////////////////////////////
; 187  : 		{
; 188  : 			int
; 189  : 				index;
; 190  : 
; 191  : 			guide
; 192  : 				*raw;
; 193  : 
; 194  : 			//
; 195  : 			// create entity
; 196  : 			//
; 197  : 
; 198  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 fc	 mov	 DWORD PTR _index$4[ebp], eax

; 199  : 
; 200  : 			en = get_free_entity (index);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _index$4[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 201  : 
; 202  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 203  : 
; 204  : 			raw = (guide *) malloc_fast_mem (sizeof (guide));

  00064	68 98 00 00 00	 push	 152			; 00000098H
  00069	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0006e	89 45 f8	 mov	 DWORD PTR _raw$3[ebp], eax

; 205  : 
; 206  : 			set_local_entity_data (en, raw);

  00071	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00077	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 207  : 
; 208  : 			memset (raw, 0, sizeof (guide));

  0007a	68 98 00 00 00	 push	 152			; 00000098H
  0007f	6a 00		 push	 0
  00081	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 209  : 
; 210  : 			//
; 211  : 			// unpack data (in exactly the same order as the data was packed)
; 212  : 			//
; 213  : 
; 214  : 			raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  0008d	6a 34		 push	 52			; 00000034H
  0008f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0009b	89 01		 mov	 DWORD PTR [ecx], eax

; 215  : 
; 216  : 			unpack_list_root (en, LIST_TYPE_FOLLOWER, &raw->follower_root);

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000a0	83 c0 04	 add	 eax, 4
  000a3	50		 push	 eax
  000a4	6a 0d		 push	 13			; 0000000dH
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 217  : 
; 218  : 			unpack_list_link (en, LIST_TYPE_CURRENT_WAYPOINT, &raw->current_waypoint_link);

  000af	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000b2	83 c0 08	 add	 eax, 8
  000b5	50		 push	 eax
  000b6	6a 09		 push	 9
  000b8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 219  : 
; 220  : 			unpack_list_link (en, LIST_TYPE_GUIDE, &raw->guide_link);

  000c1	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000c4	83 c0 14	 add	 eax, 20			; 00000014H
  000c7	50		 push	 eax
  000c8	6a 10		 push	 16			; 00000010H
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 221  : 
; 222  : 			unpack_list_link (en, LIST_TYPE_GUIDE_STACK, &raw->guide_stack_link);

  000d3	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000d6	83 c0 20	 add	 eax, 32			; 00000020H
  000d9	50		 push	 eax
  000da	6a 11		 push	 17			; 00000011H
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 223  : 
; 224  : 			// update link
; 225  : 
; 226  : 			raw->guide_position_type = (guide_position_types) unpack_int_value (en, INT_TYPE_GUIDE_POSITION_TYPE);

  000e5	6a 4f		 push	 79			; 0000004fH
  000e7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000f3	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 227  : 
; 228  : 			if (guide_position_type_virtual [raw->guide_position_type])

  000f6	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000f9	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000fc	83 3c 8d 00 00
	00 00 00	 cmp	 DWORD PTR ?guide_position_type_virtual@@3QBHB[ecx*4], 0
  00104	74 2e		 je	 SHORT $LN10@unpack_loc

; 229  : 			{
; 230  : 				unpack_vec3d (en, VEC3D_TYPE_RELATIVE_POSITION, &raw->position);

  00106	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00109	83 c0 3c	 add	 eax, 60			; 0000003cH
  0010c	50		 push	 eax
  0010d	6a 09		 push	 9
  0010f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00112	51		 push	 ecx
  00113	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 231  : 
; 232  : 				index = unpack_entity_safe_index ();

  00118	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0011d	89 45 fc	 mov	 DWORD PTR _index$4[ebp], eax

; 233  : 
; 234  : 				raw->position_entity = get_local_entity_ptr (index);

  00120	8b 45 fc	 mov	 eax, DWORD PTR _index$4[ebp]
  00123	c1 e0 04	 shl	 eax, 4
  00126	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0012c	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0012f	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 235  : 			}
; 236  : 			else

  00132	eb 12		 jmp	 SHORT $LN11@unpack_loc
$LN10@unpack_loc:

; 237  : 			{
; 238  : 				unpack_vec3d (en, VEC3D_TYPE_POSITION, &raw->position);

  00134	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00137	83 c0 3c	 add	 eax, 60			; 0000003cH
  0013a	50		 push	 eax
  0013b	6a 08		 push	 8
  0013d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00140	51		 push	 ecx
  00141	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d
$LN11@unpack_loc:

; 239  : 			}
; 240  : 
; 241  : 			raw->valid_guide_members = unpack_int_value (en, INT_TYPE_VALID_GUIDE_MEMBERS);

  00146	68 f0 00 00 00	 push	 240			; 000000f0H
  0014b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00154	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00157	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 242  : 
; 243  : 			raw->check_waypoint_action = unpack_int_value (en, INT_TYPE_CHECK_WAYPOINT_ACTION);

  0015a	6a 18		 push	 24			; 00000018H
  0015c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015f	50		 push	 eax
  00160	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00165	89 45 ac	 mov	 DWORD PTR tv161[ebp], eax
  00168	8b 4d ac	 mov	 ecx, DWORD PTR tv161[ebp]
  0016b	83 e1 01	 and	 ecx, 1
  0016e	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  00171	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00174	83 e0 fe	 and	 eax, -2			; fffffffeH
  00177	0b c1		 or	 eax, ecx
  00179	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0017c	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 244  : 
; 245  : 			raw->velocity = unpack_float_value (en, FLOAT_TYPE_VELOCITY);

  0017f	68 93 00 00 00	 push	 147			; 00000093H
  00184	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0018d	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00190	d9 59 54	 fstp	 DWORD PTR [ecx+84]

; 246  : 
; 247  : 			//
; 248  : 			// guide criteria
; 249  : 			//
; 250  : 			{
; 251  : 				int
; 252  : 					loop,
; 253  : 					valid;
; 254  : 
; 255  : 				for (loop = 0; loop < NUM_GUIDE_CRITERIA_TYPES; loop ++)

  00193	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$2[ebp], 0
  0019a	eb 09		 jmp	 SHORT $LN6@unpack_loc
$LN4@unpack_loc:
  0019c	8b 45 f4	 mov	 eax, DWORD PTR _loop$2[ebp]
  0019f	83 c0 01	 add	 eax, 1
  001a2	89 45 f4	 mov	 DWORD PTR _loop$2[ebp], eax
$LN6@unpack_loc:
  001a5	83 7d f4 06	 cmp	 DWORD PTR _loop$2[ebp], 6
  001a9	7d 3b		 jge	 SHORT $LN5@unpack_loc

; 256  : 				{
; 257  : 					valid = unpack_int_value (en, INT_TYPE_VALID);

  001ab	68 ef 00 00 00	 push	 239			; 000000efH
  001b0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001b9	89 45 f0	 mov	 DWORD PTR _valid$1[ebp], eax

; 258  : 
; 259  : 					raw->criteria [loop].valid = valid;

  001bc	8b 45 f4	 mov	 eax, DWORD PTR _loop$2[ebp]
  001bf	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  001c2	8b 55 f0	 mov	 edx, DWORD PTR _valid$1[ebp]
  001c5	89 54 c1 58	 mov	 DWORD PTR [ecx+eax*8+88], edx

; 260  : 
; 261  : 					if (valid)

  001c9	83 7d f0 00	 cmp	 DWORD PTR _valid$1[ebp], 0
  001cd	74 15		 je	 SHORT $LN12@unpack_loc

; 262  : 					{
; 263  : 						raw->criteria [loop].value = unpack_float_value (en, FLOAT_TYPE_GUIDE_CRITERIA_VALUE);

  001cf	6a 33		 push	 51			; 00000033H
  001d1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d4	50		 push	 eax
  001d5	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001da	8b 4d f4	 mov	 ecx, DWORD PTR _loop$2[ebp]
  001dd	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  001e0	d9 5c ca 5c	 fstp	 DWORD PTR [edx+ecx*8+92]
$LN12@unpack_loc:

; 264  : 					}
; 265  : 				}

  001e4	eb b6		 jmp	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:

; 266  : 			}
; 267  : 
; 268  : 			//
; 269  : 			// link into system
; 270  : 			//
; 271  : 
; 272  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  001e6	6a 00		 push	 0
  001e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  001ed	50		 push	 eax
  001ee	6a 29		 push	 41			; 00000029H
  001f0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001f3	51		 push	 ecx
  001f4	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN2@unpack_loc:

; 273  : 
; 274  : 			break;
; 275  : 		}
; 276  : 		////////////////////////////////////////
; 277  : 		case PACK_MODE_BROWSE_SESSION:
; 278  : 		////////////////////////////////////////
; 279  : 		{
; 280  : 			break;
; 281  : 		}
; 282  : 		////////////////////////////////////////
; 283  : 		case PACK_MODE_UPDATE_ENTITY:
; 284  : 		////////////////////////////////////////
; 285  : 		{
; 286  : 			break;
; 287  : 		}
; 288  : 	}
; 289  : }

  001f9	5f		 pop	 edi
  001fa	5e		 pop	 esi
  001fb	5b		 pop	 ebx
  001fc	8b e5		 mov	 esp, ebp
  001fe	5d		 pop	 ebp
  001ff	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\guide\gd_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv78 = -80						; size = 4
tv70 = -80						; size = 4
_valid$1 = -12						; size = 4
_loop$2 = -8						; size = 4
_raw$3 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	
; 82   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN8@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN7@pack_local
$LN8@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 02	 add	 eax, 2
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@LGLOHCMD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@pack_local:

; 83   : 	
; 84   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c a6 01 00
	00		 jl	 $LN2@pack_local
  0003d	83 7d b0 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN9@pack_local
  00043	e9 9b 01 00 00	 jmp	 $LN2@pack_local
$LN9@pack_local:

; 85   : 	{
; 86   : 		////////////////////////////////////////
; 87   : 		case PACK_MODE_SERVER_SESSION:
; 88   : 		case PACK_MODE_CLIENT_SESSION:
; 89   : 		////////////////////////////////////////
; 90   : 		{
; 91   : 			guide
; 92   : 				*raw;
; 93   : 
; 94   : 			raw = (guide *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$3[ebp], ecx

; 95   : 
; 96   : 			pack_entity_type (get_local_entity_type (en));

  00051	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00055	74 0a		 je	 SHORT $LN16@pack_local
  00057	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d b0	 mov	 DWORD PTR tv78[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN17@pack_local
$LN16@pack_local:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00067	83 c2 10	 add	 edx, 16			; 00000010H
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@LGLOHCMD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN17@pack_local:
  00082	8b 4d b0	 mov	 ecx, DWORD PTR tv78[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 97   : 
; 98   : 			pack_entity_safe_ptr (en);

  0008b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 99   : 
; 100  : 			//
; 101  : 			// pack data (in exactly the same order as the data is unpacked)
; 102  : 			//
; 103  : 
; 104  : 			pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  00094	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00097	8b 08		 mov	 ecx, DWORD PTR [eax]
  00099	51		 push	 ecx
  0009a	6a 34		 push	 52			; 00000034H
  0009c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 105  : 
; 106  : 			pack_list_root (en, LIST_TYPE_FOLLOWER, &raw->follower_root);

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  000a8	83 c0 04	 add	 eax, 4
  000ab	50		 push	 eax
  000ac	6a 0d		 push	 13			; 0000000dH
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b1	51		 push	 ecx
  000b2	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 107  : 
; 108  : 			pack_list_link (en, LIST_TYPE_CURRENT_WAYPOINT, &raw->current_waypoint_link);

  000b7	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  000ba	83 c0 08	 add	 eax, 8
  000bd	50		 push	 eax
  000be	6a 09		 push	 9
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 109  : 
; 110  : 			pack_list_link (en, LIST_TYPE_GUIDE, &raw->guide_link);

  000c9	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  000cc	83 c0 14	 add	 eax, 20			; 00000014H
  000cf	50		 push	 eax
  000d0	6a 10		 push	 16			; 00000010H
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000d5	51		 push	 ecx
  000d6	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 111  : 
; 112  : 			pack_list_link (en, LIST_TYPE_GUIDE_STACK, &raw->guide_stack_link);

  000db	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  000de	83 c0 20	 add	 eax, 32			; 00000020H
  000e1	50		 push	 eax
  000e2	6a 11		 push	 17			; 00000011H
  000e4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 113  : 
; 114  : 			// update link
; 115  : 
; 116  : 			pack_int_value (en, INT_TYPE_GUIDE_POSITION_TYPE, raw->guide_position_type);

  000ed	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  000f0	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000f3	51		 push	 ecx
  000f4	6a 4f		 push	 79			; 0000004fH
  000f6	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000f9	52		 push	 edx
  000fa	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 117  : 
; 118  : 			if (guide_position_type_virtual [raw->guide_position_type])

  000ff	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00102	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00105	83 3c 8d 00 00
	00 00 00	 cmp	 DWORD PTR ?guide_position_type_virtual@@3QBHB[ecx*4], 0
  0010d	74 20		 je	 SHORT $LN10@pack_local

; 119  : 			{
; 120  : 				pack_vec3d (en, VEC3D_TYPE_RELATIVE_POSITION, &raw->position);

  0010f	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00112	83 c0 3c	 add	 eax, 60			; 0000003cH
  00115	50		 push	 eax
  00116	6a 09		 push	 9
  00118	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 121  : 
; 122  : 				pack_entity_safe_ptr (raw->position_entity);

  00121	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00124	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 123  : 			}
; 124  : 			else

  0012d	eb 12		 jmp	 SHORT $LN11@pack_local
$LN10@pack_local:

; 125  : 			{
; 126  : 				pack_vec3d (en, VEC3D_TYPE_POSITION, &raw->position);

  0012f	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00132	83 c0 3c	 add	 eax, 60			; 0000003cH
  00135	50		 push	 eax
  00136	6a 08		 push	 8
  00138	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0013b	51		 push	 ecx
  0013c	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d
$LN11@pack_local:

; 127  : 			}
; 128  : 
; 129  : 			pack_int_value (en, INT_TYPE_VALID_GUIDE_MEMBERS, raw->valid_guide_members);

  00141	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00144	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00147	51		 push	 ecx
  00148	68 f0 00 00 00	 push	 240			; 000000f0H
  0014d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00150	52		 push	 edx
  00151	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 130  : 
; 131  : 			pack_int_value (en, INT_TYPE_CHECK_WAYPOINT_ACTION, raw->check_waypoint_action);

  00156	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  00159	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0015c	83 e1 01	 and	 ecx, 1
  0015f	51		 push	 ecx
  00160	6a 18		 push	 24			; 00000018H
  00162	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00165	52		 push	 edx
  00166	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 132  : 
; 133  : 			pack_float_value (en, FLOAT_TYPE_VELOCITY, raw->velocity);

  0016b	8b 45 fc	 mov	 eax, DWORD PTR _raw$3[ebp]
  0016e	51		 push	 ecx
  0016f	f3 0f 10 40 54	 movss	 xmm0, DWORD PTR [eax+84]
  00174	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00179	68 93 00 00 00	 push	 147			; 00000093H
  0017e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00181	51		 push	 ecx
  00182	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 134  : 
; 135  : 			//
; 136  : 			// guide criteria
; 137  : 			//
; 138  : 			{
; 139  : 				int
; 140  : 					loop,
; 141  : 					valid;
; 142  : 
; 143  : 				for (loop = 0; loop < NUM_GUIDE_CRITERIA_TYPES; loop ++)

  00187	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$2[ebp], 0
  0018e	eb 09		 jmp	 SHORT $LN6@pack_local
$LN4@pack_local:
  00190	8b 45 f8	 mov	 eax, DWORD PTR _loop$2[ebp]
  00193	83 c0 01	 add	 eax, 1
  00196	89 45 f8	 mov	 DWORD PTR _loop$2[ebp], eax
$LN6@pack_local:
  00199	83 7d f8 06	 cmp	 DWORD PTR _loop$2[ebp], 6
  0019d	7d 44		 jge	 SHORT $LN5@pack_local

; 144  : 				{
; 145  : 					valid = raw->criteria [loop].valid;

  0019f	8b 45 f8	 mov	 eax, DWORD PTR _loop$2[ebp]
  001a2	8b 4d fc	 mov	 ecx, DWORD PTR _raw$3[ebp]
  001a5	8b 54 c1 58	 mov	 edx, DWORD PTR [ecx+eax*8+88]
  001a9	89 55 f4	 mov	 DWORD PTR _valid$1[ebp], edx

; 146  : 	
; 147  : 					pack_int_value (en, INT_TYPE_VALID, valid);

  001ac	8b 45 f4	 mov	 eax, DWORD PTR _valid$1[ebp]
  001af	50		 push	 eax
  001b0	68 ef 00 00 00	 push	 239			; 000000efH
  001b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001b8	51		 push	 ecx
  001b9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 148  : 
; 149  : 					if (valid)

  001be	83 7d f4 00	 cmp	 DWORD PTR _valid$1[ebp], 0
  001c2	74 1d		 je	 SHORT $LN12@pack_local

; 150  : 					{
; 151  : 						pack_float_value (en, FLOAT_TYPE_GUIDE_CRITERIA_VALUE, raw->criteria [loop].value);

  001c4	8b 45 f8	 mov	 eax, DWORD PTR _loop$2[ebp]
  001c7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$3[ebp]
  001ca	51		 push	 ecx
  001cb	f3 0f 10 44 c1
	5c		 movss	 xmm0, DWORD PTR [ecx+eax*8+92]
  001d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d6	6a 33		 push	 51			; 00000033H
  001d8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001db	52		 push	 edx
  001dc	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value
$LN12@pack_local:

; 152  : 					}
; 153  : 				}

  001e1	eb ad		 jmp	 SHORT $LN4@pack_local
$LN5@pack_local:
$LN2@pack_local:

; 154  : 			}
; 155  : 
; 156  : 			break;
; 157  : 		}
; 158  : 		////////////////////////////////////////
; 159  : 		case PACK_MODE_BROWSE_SESSION:
; 160  : 		////////////////////////////////////////
; 161  : 		{
; 162  : 			break;
; 163  : 		}
; 164  : 		////////////////////////////////////////
; 165  : 		case PACK_MODE_UPDATE_ENTITY:
; 166  : 		////////////////////////////////////////
; 167  : 		{
; 168  : 			break;
; 169  : 		}
; 170  : 	}
; 171  : }

  001e3	5f		 pop	 edi
  001e4	5e		 pop	 esi
  001e5	5b		 pop	 ebx
  001e6	8b e5		 mov	 esp, ebp
  001e8	5d		 pop	 ebp
  001e9	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\guide\gd_pack.c
;	COMDAT ?overload_guide_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_guide_pack_functions@@YGXXZ PROC		; overload_guide_pack_functions, COMDAT

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 297  : 	fn_pack_local_entity_data[ENTITY_TYPE_GUIDE]         = pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 0d	 imul	 ecx, eax, 13
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 298  : 	
; 299  : 	fn_unpack_local_entity_data[ENTITY_TYPE_GUIDE]       = unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 0d	 imul	 ecx, eax, 13
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 300  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_guide_pack_functions@@YGXXZ ENDP		; overload_guide_pack_functions
_TEXT	ENDS
END
