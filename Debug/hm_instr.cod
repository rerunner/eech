; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\cockpits\ka50\hm_instr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_fmodf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?draw_ka50_virtual_cockpit_instruments@@YGXXZ	; draw_ka50_virtual_cockpit_instruments
PUBLIC	?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA ; `draw_ka50_virtual_cockpit_instruments'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0BI@CKBJIOHI@current_flight_dynamics@	; `string'
PUBLIC	??_C@_0BH@OJOOJLIP@virtual_cockpit_inst3d@	; `string'
PUBLIC	__real@3f8015bf90000000
PUBLIC	__real@3ff921fb51000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@40666666
PUBLIC	__real@4069000000000000
PUBLIC	__real@4072c00000000000
PUBLIC	__real@407c200000000000
PUBLIC	__real@42700000
PUBLIC	__real@447a0000
PUBLIC	__real@461c4000
PUBLIC	__real@bf4496b7c28f5c29
PUBLIC	__real@bf79bc65b3333333
PUBLIC	__real@bf8015bf90000000
PUBLIC	__real@bf9015bf90000000
PUBLIC	__real@bff921fb51000000
PUBLIC	__real@c049000000000000
PUBLIC	__real@c059000000000000
PUBLIC	__real@c072c00000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_get_local_entity_attitude_matrix_ptr@@3PAP6GPAY122MPAUENTITY@@@ZA:BYTE ; fn_get_local_entity_attitude_matrix_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A:DWORD ; virtual_cockpit_inst3d
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c072c00000000000
CONST	SEGMENT
__real@c072c00000000000 DQ 0c072c00000000000r	; -300
CONST	ENDS
;	COMDAT __real@c059000000000000
CONST	SEGMENT
__real@c059000000000000 DQ 0c059000000000000r	; -100
CONST	ENDS
;	COMDAT __real@c049000000000000
CONST	SEGMENT
__real@c049000000000000 DQ 0c049000000000000r	; -50
CONST	ENDS
;	COMDAT __real@bff921fb51000000
CONST	SEGMENT
__real@bff921fb51000000 DQ 0bff921fb51000000r	; -1.5708
CONST	ENDS
;	COMDAT __real@bf9015bf90000000
CONST	SEGMENT
__real@bf9015bf90000000 DQ 0bf9015bf90000000r	; -0.015708
CONST	ENDS
;	COMDAT __real@bf8015bf90000000
CONST	SEGMENT
__real@bf8015bf90000000 DQ 0bf8015bf90000000r	; -0.00785398
CONST	ENDS
;	COMDAT __real@bf79bc65b3333333
CONST	SEGMENT
__real@bf79bc65b3333333 DQ 0bf79bc65b3333333r	; -0.00628319
CONST	ENDS
;	COMDAT __real@bf4496b7c28f5c29
CONST	SEGMENT
__real@bf4496b7c28f5c29 DQ 0bf4496b7c28f5c29r	; -0.000628319
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@407c200000000000
CONST	SEGMENT
__real@407c200000000000 DQ 0407c200000000000r	; 450
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@40666666
CONST	SEGMENT
__real@40666666 DD 040666666r			; 3.6
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@3ff921fb51000000
CONST	SEGMENT
__real@3ff921fb51000000 DQ 03ff921fb51000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3f8015bf90000000
CONST	SEGMENT
__real@3f8015bf90000000 DQ 03f8015bf90000000r	; 0.00785398
CONST	ENDS
;	COMDAT ??_C@_0BH@OJOOJLIP@virtual_cockpit_inst3d@
CONST	SEGMENT
??_C@_0BH@OJOOJLIP@virtual_cockpit_inst3d@ DB 'virtual_cockpit_inst3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CKBJIOHI@current_flight_dynamics@
CONST	SEGMENT
??_C@_0BI@CKBJIOHI@current_flight_dynamics@ DB 'current_flight_dynamics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@ DB 'get_gunship_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\cockpits\ka50\hm_in'
	DB	'str.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA DD 050H ; `draw_ka50_virtual_cockpit_instruments'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\ka50\hm_instr.c
;	COMDAT ?draw_ka50_virtual_cockpit_instruments@@YGXXZ
_TEXT	SEGMENT
tv328 = -280						; size = 8
tv286 = -280						; size = 8
tv268 = -280						; size = 8
tv329 = -272						; size = 8
tv287 = -272						; size = 8
tv269 = -272						; size = 8
tv428 = -268						; size = 4
tv85 = -268						; size = 4
_vertical_speed$1 = -200				; size = 4
_altitude$2 = -196					; size = 4
_altitude$3 = -192					; size = 4
_slip$4 = -188						; size = 4
_airspeed$5 = -184					; size = 4
_result$6 = -180					; size = 36
_heading_rotation$7 = -144				; size = 36
_inverse_attitude$8 = -108				; size = 36
_roll$9 = -72						; size = 4
_pitch$10 = -68						; size = 4
_heading$11 = -64					; size = 4
_search$ = -60						; size = 56
_attitude$ = -4						; size = 4
?draw_ka50_virtual_cockpit_instruments@@YGXXZ PROC	; draw_ka50_virtual_cockpit_instruments, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	matrix3x3
; 82   : 		*attitude;
; 83   : 
; 84   : 	object_3d_sub_object_search_data
; 85   : 		search;
; 86   : 
; 87   : 	ASSERT (get_gunship_entity ());

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	75 18		 jne	 SHORT $LN2@draw_ka50_
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA
  0001a	83 c0 07	 add	 eax, 7
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@draw_ka50_:

; 88   : 
; 89   : 	ASSERT (current_flight_dynamics);

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  00034	75 18		 jne	 SHORT $LN3@draw_ka50_
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA
  0003b	83 c0 09	 add	 eax, 9
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CKBJIOHI@current_flight_dynamics@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@draw_ka50_:

; 90   : 
; 91   : 	ASSERT (virtual_cockpit_inst3d);

  0004e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A, 0 ; virtual_cockpit_inst3d
  00055	75 18		 jne	 SHORT $LN4@draw_ka50_
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA
  0005c	83 c0 0b	 add	 eax, 11			; 0000000bH
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OJOOJLIP@virtual_cockpit_inst3d@
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@draw_ka50_:

; 92   : 
; 93   : 	attitude = get_local_entity_attitude_matrix_ptr (get_gunship_entity ());

  0006f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00076	74 0f		 je	 SHORT $LN17@draw_ka50_
  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv85[ebp], ecx
  00085	eb 24		 jmp	 SHORT $LN18@draw_ka50_
$LN17@draw_ka50_:
  00087	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_ka50_virtual_cockpit_instruments@@YGXXZ@4JA
  0008d	83 c2 0d	 add	 edx, 13			; 0000000dH
  00090	52		 push	 edx
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@KINFDBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00096	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a1	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv85[ebp], 0
$LN18@draw_ka50_:
  000ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b1	51		 push	 ecx
  000b2	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR tv85[ebp]
  000b8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_attitude_matrix_ptr@@3PAP6GPAY122MPAUENTITY@@@ZA[edx*4]
  000bf	ff d0		 call	 eax
  000c1	89 45 fc	 mov	 DWORD PTR _attitude$[ebp], eax

; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 	//
; 97   : 	// ADI
; 98   : 	//
; 99   : 	////////////////////////////////////////
; 100  : 
; 101  : 	search.search_depth = 0;

  000c4	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 102  : 	search.search_object = virtual_cockpit_inst3d;

  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  000d0	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 103  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_COCKPIT_ADI;

  000d3	c7 45 d0 d7 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 215 ; 000000d7H

; 104  : 
; 105  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000da	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  000e3	83 f8 01	 cmp	 eax, 1
  000e6	0f 85 0a 03 00
	00		 jne	 $LN5@draw_ka50_

; 106  : 	{
; 107  : 		float
; 108  : 			heading,
; 109  : 			pitch,
; 110  : 			roll;
; 111  : 
; 112  : 		matrix3x3
; 113  : 			inverse_attitude,
; 114  : 			heading_rotation,
; 115  : 			result;
; 116  : 
; 117  : 		//
; 118  : 		// get inverse attitude (attiude * inverse attitude = identity) which aligns the ADI with the world axis
; 119  : 		//
; 120  : 
; 121  : 		inverse_attitude[0][0] = (*attitude)[0][0];

  000ec	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f1	6b c8 00	 imul	 ecx, eax, 0
  000f4	03 4d fc	 add	 ecx, DWORD PTR _attitude$[ebp]
  000f7	ba 04 00 00 00	 mov	 edx, 4
  000fc	6b c2 00	 imul	 eax, edx, 0
  000ff	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00104	6b d2 00	 imul	 edx, edx, 0
  00107	8d 54 15 94	 lea	 edx, DWORD PTR _inverse_attitude$8[ebp+edx]
  0010b	be 04 00 00 00	 mov	 esi, 4
  00110	6b f6 00	 imul	 esi, esi, 0
  00113	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00116	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 122  : 		inverse_attitude[1][0] = (*attitude)[0][1];

  00119	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011e	6b c8 00	 imul	 ecx, eax, 0
  00121	03 4d fc	 add	 ecx, DWORD PTR _attitude$[ebp]
  00124	ba 04 00 00 00	 mov	 edx, 4
  00129	c1 e2 00	 shl	 edx, 0
  0012c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00131	c1 e0 00	 shl	 eax, 0
  00134	8d 44 05 94	 lea	 eax, DWORD PTR _inverse_attitude$8[ebp+eax]
  00138	be 04 00 00 00	 mov	 esi, 4
  0013d	6b f6 00	 imul	 esi, esi, 0
  00140	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  00143	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 123  : 		inverse_attitude[2][0] = (*attitude)[0][2];

  00146	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0014b	6b c8 00	 imul	 ecx, eax, 0
  0014e	03 4d fc	 add	 ecx, DWORD PTR _attitude$[ebp]
  00151	ba 04 00 00 00	 mov	 edx, 4
  00156	d1 e2		 shl	 edx, 1
  00158	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0015d	d1 e0		 shl	 eax, 1
  0015f	8d 44 05 94	 lea	 eax, DWORD PTR _inverse_attitude$8[ebp+eax]
  00163	be 04 00 00 00	 mov	 esi, 4
  00168	6b f6 00	 imul	 esi, esi, 0
  0016b	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0016e	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 124  : 		inverse_attitude[0][1] = (*attitude)[1][0];

  00171	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00176	c1 e0 00	 shl	 eax, 0
  00179	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  0017c	b9 04 00 00 00	 mov	 ecx, 4
  00181	6b d1 00	 imul	 edx, ecx, 0
  00184	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00189	6b c9 00	 imul	 ecx, ecx, 0
  0018c	8d 4c 0d 94	 lea	 ecx, DWORD PTR _inverse_attitude$8[ebp+ecx]
  00190	be 04 00 00 00	 mov	 esi, 4
  00195	c1 e6 00	 shl	 esi, 0
  00198	8b 14 10	 mov	 edx, DWORD PTR [eax+edx]
  0019b	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 125  : 		inverse_attitude[1][1] = (*attitude)[1][1];

  0019e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001a3	c1 e0 00	 shl	 eax, 0
  001a6	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  001a9	b9 04 00 00 00	 mov	 ecx, 4
  001ae	c1 e1 00	 shl	 ecx, 0
  001b1	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001b6	c1 e2 00	 shl	 edx, 0
  001b9	8d 54 15 94	 lea	 edx, DWORD PTR _inverse_attitude$8[ebp+edx]
  001bd	be 04 00 00 00	 mov	 esi, 4
  001c2	c1 e6 00	 shl	 esi, 0
  001c5	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  001c8	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 126  : 		inverse_attitude[2][1] = (*attitude)[1][2];

  001cb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001d0	c1 e0 00	 shl	 eax, 0
  001d3	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  001d6	b9 04 00 00 00	 mov	 ecx, 4
  001db	d1 e1		 shl	 ecx, 1
  001dd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001e2	d1 e2		 shl	 edx, 1
  001e4	8d 54 15 94	 lea	 edx, DWORD PTR _inverse_attitude$8[ebp+edx]
  001e8	be 04 00 00 00	 mov	 esi, 4
  001ed	c1 e6 00	 shl	 esi, 0
  001f0	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  001f3	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 127  : 		inverse_attitude[0][2] = (*attitude)[2][0];

  001f6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001fb	d1 e0		 shl	 eax, 1
  001fd	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  00200	b9 04 00 00 00	 mov	 ecx, 4
  00205	6b d1 00	 imul	 edx, ecx, 0
  00208	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0020d	6b c9 00	 imul	 ecx, ecx, 0
  00210	8d 4c 0d 94	 lea	 ecx, DWORD PTR _inverse_attitude$8[ebp+ecx]
  00214	be 04 00 00 00	 mov	 esi, 4
  00219	d1 e6		 shl	 esi, 1
  0021b	8b 14 10	 mov	 edx, DWORD PTR [eax+edx]
  0021e	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 128  : 		inverse_attitude[1][2] = (*attitude)[2][1];

  00221	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00226	d1 e0		 shl	 eax, 1
  00228	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  0022b	b9 04 00 00 00	 mov	 ecx, 4
  00230	c1 e1 00	 shl	 ecx, 0
  00233	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00238	c1 e2 00	 shl	 edx, 0
  0023b	8d 54 15 94	 lea	 edx, DWORD PTR _inverse_attitude$8[ebp+edx]
  0023f	be 04 00 00 00	 mov	 esi, 4
  00244	d1 e6		 shl	 esi, 1
  00246	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  00249	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 129  : 		inverse_attitude[2][2] = (*attitude)[2][2];

  0024c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00251	d1 e0		 shl	 eax, 1
  00253	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  00256	b9 04 00 00 00	 mov	 ecx, 4
  0025b	d1 e1		 shl	 ecx, 1
  0025d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00262	d1 e2		 shl	 edx, 1
  00264	8d 54 15 94	 lea	 edx, DWORD PTR _inverse_attitude$8[ebp+edx]
  00268	be 04 00 00 00	 mov	 esi, 4
  0026d	d1 e6		 shl	 esi, 1
  0026f	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  00272	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 130  : 
; 131  : 		//
; 132  : 		// rotate heading so that the ADI pitch markings face the pilot
; 133  : 		//
; 134  : 
; 135  : 		get_3d_transformation_matrix (heading_rotation, get_heading_from_attitude_matrix (*attitude), 0.0, 0.0);

  00275	51		 push	 ecx
  00276	0f 57 c0	 xorps	 xmm0, xmm0
  00279	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027e	51		 push	 ecx
  0027f	0f 57 c0	 xorps	 xmm0, xmm0
  00282	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00287	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0028c	d1 e0		 shl	 eax, 1
  0028e	03 45 fc	 add	 eax, DWORD PTR _attitude$[ebp]
  00291	b9 04 00 00 00	 mov	 ecx, 4
  00296	d1 e1		 shl	 ecx, 1
  00298	51		 push	 ecx
  00299	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  0029e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002a8	d1 e2		 shl	 edx, 1
  002aa	03 55 fc	 add	 edx, DWORD PTR _attitude$[ebp]
  002ad	b8 04 00 00 00	 mov	 eax, 4
  002b2	6b c8 00	 imul	 ecx, eax, 0
  002b5	51		 push	 ecx
  002b6	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  002bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c0	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002c5	d9 9d f4 fe ff
	ff		 fstp	 DWORD PTR tv428[ebp]
  002cb	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR tv428[ebp]
  002d3	51		 push	 ecx
  002d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d9	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _heading_rotation$7[ebp]
  002df	52		 push	 edx
  002e0	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 136  : 
; 137  : 		multiply_matrix3x3_matrix3x3 (result, heading_rotation, inverse_attitude);

  002e5	8d 45 94	 lea	 eax, DWORD PTR _inverse_attitude$8[ebp]
  002e8	50		 push	 eax
  002e9	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _heading_rotation$7[ebp]
  002ef	51		 push	 ecx
  002f0	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _result$6[ebp]
  002f6	52		 push	 edx
  002f7	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 138  : 
; 139  : 		heading = get_heading_from_attitude_matrix (result);

  002fc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00301	d1 e0		 shl	 eax, 1
  00303	8d 8c 05 4c ff
	ff ff		 lea	 ecx, DWORD PTR _result$6[ebp+eax]
  0030a	ba 04 00 00 00	 mov	 edx, 4
  0030f	d1 e2		 shl	 edx, 1
  00311	51		 push	 ecx
  00312	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00317	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00321	d1 e0		 shl	 eax, 1
  00323	8d 8c 05 4c ff
	ff ff		 lea	 ecx, DWORD PTR _result$6[ebp+eax]
  0032a	ba 04 00 00 00	 mov	 edx, 4
  0032f	6b c2 00	 imul	 eax, edx, 0
  00332	51		 push	 ecx
  00333	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00338	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033d	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00342	d9 5d c0	 fstp	 DWORD PTR _heading$11[ebp]

; 140  : 
; 141  : 		pitch = get_pitch_from_attitude_matrix (result);

  00345	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0034a	d1 e0		 shl	 eax, 1
  0034c	8d 8c 05 4c ff
	ff ff		 lea	 ecx, DWORD PTR _result$6[ebp+eax]
  00353	ba 04 00 00 00	 mov	 edx, 4
  00358	c1 e2 00	 shl	 edx, 0
  0035b	51		 push	 ecx
  0035c	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  0036b	d9 5d bc	 fstp	 DWORD PTR _pitch$10[ebp]

; 142  : 
; 143  : 		roll = get_roll_from_attitude_matrix (result);

  0036e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00373	c1 e0 00	 shl	 eax, 0
  00376	8d 8c 05 4c ff
	ff ff		 lea	 ecx, DWORD PTR _result$6[ebp+eax]
  0037d	ba 04 00 00 00	 mov	 edx, 4
  00382	c1 e2 00	 shl	 edx, 0
  00385	51		 push	 ecx
  00386	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0038b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00390	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00395	6b c8 00	 imul	 ecx, eax, 0
  00398	8d 94 0d 4c ff
	ff ff		 lea	 edx, DWORD PTR _result$6[ebp+ecx]
  0039f	b8 04 00 00 00	 mov	 eax, 4
  003a4	c1 e0 00	 shl	 eax, 0
  003a7	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  003ac	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003b3	51		 push	 ecx
  003b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b9	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  003be	d9 5d b8	 fstp	 DWORD PTR _roll$9[ebp]

; 144  : 
; 145  : 		search.result_sub_object->relative_heading = -heading;

  003c1	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _heading$11[ebp]
  003c6	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003cd	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  003d0	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 146  : 
; 147  : 		search.result_sub_object->relative_pitch = pitch;

  003d5	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  003d8	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _pitch$10[ebp]
  003dd	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 148  : 
; 149  : 		search.result_sub_object->relative_roll = -roll;

  003e2	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _roll$9[ebp]
  003e7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003ee	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  003f1	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN5@draw_ka50_:

; 150  : 	}
; 151  : 
; 152  : 	////////////////////////////////////////
; 153  : 	//
; 154  : 	// compass
; 155  : 	//
; 156  : 	////////////////////////////////////////
; 157  : 
; 158  : 	search.search_depth = 0;

  003f6	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 159  : 	search.search_object = virtual_cockpit_inst3d;

  003fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  00402	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 160  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_COCKPIT_COMPASS;

  00405	c7 45 d0 db 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 219 ; 000000dbH

; 161  : 
; 162  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0040c	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00415	83 f8 01	 cmp	 eax, 1
  00418	75 1c		 jne	 SHORT $LN6@draw_ka50_

; 163  : 	{
; 164  : 		search.result_sub_object->relative_heading = -current_flight_dynamics->heading.value;

  0041a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0041f	f3 0f 10 80 8c
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8588]
  00427	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0042e	8b 4d c8	 mov	 ecx, DWORD PTR _search$[ebp+4]
  00431	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0
$LN6@draw_ka50_:

; 165  : 	}
; 166  : 
; 167  : 	////////////////////////////////////////
; 168  : 	//
; 169  : 	// airspeed
; 170  : 	//
; 171  : 	////////////////////////////////////////
; 172  : 
; 173  : 	search.search_depth = 0;

  00436	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 174  : 	search.search_object = virtual_cockpit_inst3d;

  0043d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  00442	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 175  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_HOKUM_COCKPIT_AIRSPEED;

  00445	c7 45 d0 d1 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 209 ; 000000d1H

; 176  : 
; 177  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0044c	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  0044f	50		 push	 eax
  00450	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00455	83 f8 01	 cmp	 eax, 1
  00458	0f 85 c5 00 00
	00		 jne	 $LN7@draw_ka50_

; 178  : 	{
; 179  : 		float
; 180  : 			airspeed;
; 181  : 
; 182  : 		airspeed = kilometres_per_hour (current_flight_dynamics->indicated_airspeed.value);

  0045e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00463	f3 0f 10 80 fc
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9212]
  0046b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40666666
  00473	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _airspeed$5[ebp], xmm0

; 183  : 
; 184  : 		airspeed = bound (airspeed, -50.0, 450.0);

  0047b	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _airspeed$5[ebp]
  00483	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c049000000000000
  0048b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0048f	76 12		 jbe	 SHORT $LN21@draw_ka50_
  00491	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c049000000000000
  00499	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR tv269[ebp], xmm0
  004a1	eb 44		 jmp	 SHORT $LN22@draw_ka50_
$LN21@draw_ka50_:
  004a3	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _airspeed$5[ebp]
  004ab	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@407c200000000000
  004b3	76 12		 jbe	 SHORT $LN19@draw_ka50_
  004b5	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@407c200000000000
  004bd	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR tv268[ebp], xmm0
  004c5	eb 10		 jmp	 SHORT $LN20@draw_ka50_
$LN19@draw_ka50_:
  004c7	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _airspeed$5[ebp]
  004cf	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR tv268[ebp], xmm0
$LN20@draw_ka50_:
  004d7	f2 0f 10 85 e8
	fe ff ff	 movsd	 xmm0, QWORD PTR tv268[ebp]
  004df	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR tv269[ebp], xmm0
$LN22@draw_ka50_:
  004e7	f2 0f 5a 85 f0
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv269[ebp]
  004ef	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _airspeed$5[ebp], xmm0

; 185  : 
; 186  : 		airspeed *= rad (-180.0) / 400.0;

  004f7	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _airspeed$5[ebp]
  004ff	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bf8015bf90000000
  00507	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050b	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _airspeed$5[ebp], xmm0

; 187  : 
; 188  : 		search.result_sub_object->relative_roll = airspeed;

  00513	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  00516	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _airspeed$5[ebp]
  0051e	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN7@draw_ka50_:

; 189  : 	}
; 190  : 
; 191  : 	////////////////////////////////////////
; 192  : 	//
; 193  : 	// slip
; 194  : 	//
; 195  : 	////////////////////////////////////////
; 196  : 
; 197  : 	search.search_depth = 0;

  00523	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 198  : 	search.search_object = virtual_cockpit_inst3d;

  0052a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  0052f	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 199  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_HOKUM_COCKPIT_SIDESLIP;

  00532	c7 45 d0 d4 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 212 ; 000000d4H

; 200  : 
; 201  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00539	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  0053c	50		 push	 eax
  0053d	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00542	83 f8 01	 cmp	 eax, 1
  00545	0f 85 c5 00 00
	00		 jne	 $LN8@draw_ka50_

; 202  : 	{
; 203  : 		float
; 204  : 			slip;
; 205  : 
; 206  : 		slip = kilometres_per_hour (current_flight_dynamics->indicated_slip.value);

  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00550	f3 0f 10 80 14
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9236]
  00558	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40666666
  00560	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _slip$4[ebp], xmm0

; 207  : 
; 208  : 		slip = bound (slip, -100.0, 100.0);

  00568	f3 0f 5a 85 44
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _slip$4[ebp]
  00570	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c059000000000000
  00578	66 0f 2f c8	 comisd	 xmm1, xmm0
  0057c	76 12		 jbe	 SHORT $LN25@draw_ka50_
  0057e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c059000000000000
  00586	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR tv287[ebp], xmm0
  0058e	eb 44		 jmp	 SHORT $LN26@draw_ka50_
$LN25@draw_ka50_:
  00590	f3 0f 5a 85 44
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _slip$4[ebp]
  00598	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  005a0	76 12		 jbe	 SHORT $LN23@draw_ka50_
  005a2	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  005aa	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR tv286[ebp], xmm0
  005b2	eb 10		 jmp	 SHORT $LN24@draw_ka50_
$LN23@draw_ka50_:
  005b4	f3 0f 5a 85 44
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _slip$4[ebp]
  005bc	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR tv286[ebp], xmm0
$LN24@draw_ka50_:
  005c4	f2 0f 10 85 e8
	fe ff ff	 movsd	 xmm0, QWORD PTR tv286[ebp]
  005cc	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR tv287[ebp], xmm0
$LN26@draw_ka50_:
  005d4	f2 0f 5a 85 f0
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv287[ebp]
  005dc	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _slip$4[ebp], xmm0

; 209  : 
; 210  : 		slip *= rad (45.0) / 100.0;

  005e4	f3 0f 5a 85 44
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _slip$4[ebp]
  005ec	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8015bf90000000
  005f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f8	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _slip$4[ebp], xmm0

; 211  : 
; 212  : 		search.result_sub_object->relative_roll = slip;

  00600	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  00603	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _slip$4[ebp]
  0060b	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN8@draw_ka50_:

; 213  : 	}
; 214  : 
; 215  : 	////////////////////////////////////////
; 216  : 	//
; 217  : 	// altimeter
; 218  : 	//
; 219  : 	////////////////////////////////////////
; 220  : 
; 221  : 	search.search_depth = 0;

  00610	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 222  : 	search.search_object = virtual_cockpit_inst3d;

  00617	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  0061c	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 223  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_HOKUM_COCKPIT_ALITIMETER_LARGE;

  0061f	c7 45 d0 d3 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 211 ; 000000d3H

; 224  : 
; 225  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00626	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  00629	50		 push	 eax
  0062a	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0062f	83 f8 01	 cmp	 eax, 1
  00632	75 58		 jne	 SHORT $LN9@draw_ka50_

; 226  : 	{
; 227  : 		float
; 228  : 			altitude;
; 229  : 
; 230  : 		altitude = fmod (current_flight_dynamics->barometric_altitude.value, 1000.0f);

  00634	51		 push	 ecx
  00635	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  0063d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00642	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00647	51		 push	 ecx
  00648	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  00650	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00655	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0065a	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR _altitude$3[ebp]

; 231  : 
; 232  : 		altitude *= rad (-360.0) / 1000.0;

  00660	f3 0f 5a 85 40
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _altitude$3[ebp]
  00668	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bf79bc65b3333333
  00670	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00674	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _altitude$3[ebp], xmm0

; 233  : 
; 234  : 		search.result_sub_object->relative_roll = altitude;

  0067c	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  0067f	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _altitude$3[ebp]
  00687	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN9@draw_ka50_:

; 235  : 	}
; 236  : 
; 237  : 	search.search_depth = 0;

  0068c	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 238  : 	search.search_object = virtual_cockpit_inst3d;

  00693	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  00698	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 239  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_HOKUM_COCKPIT_ALITIMETER_SMALL;

  0069b	c7 45 d0 d5 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 213 ; 000000d5H

; 240  : 
; 241  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  006a2	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  006a5	50		 push	 eax
  006a6	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  006ab	83 f8 01	 cmp	 eax, 1
  006ae	75 58		 jne	 SHORT $LN10@draw_ka50_

; 242  : 	{
; 243  : 		float
; 244  : 			altitude;
; 245  : 
; 246  : 		altitude = fmod (current_flight_dynamics->barometric_altitude.value, 10000.0f);

  006b0	51		 push	 ecx
  006b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c4000
  006b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006c3	51		 push	 ecx
  006c4	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  006cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006d1	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  006d6	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR _altitude$2[ebp]

; 247  : 
; 248  : 		altitude *= rad (-360.0) / 10000.0;

  006dc	f3 0f 5a 85 3c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _altitude$2[ebp]
  006e4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bf4496b7c28f5c29
  006ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f0	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _altitude$2[ebp], xmm0

; 249  : 
; 250  : 		search.result_sub_object->relative_roll = altitude;

  006f8	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  006fb	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR _altitude$2[ebp]
  00703	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN10@draw_ka50_:

; 251  : 	}
; 252  : 
; 253  : 	////////////////////////////////////////
; 254  : 	//
; 255  : 	// vertical speed indicator
; 256  : 	//
; 257  : 	////////////////////////////////////////
; 258  : 
; 259  : 	search.search_depth = 0;

  00708	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 260  : 	search.search_object = virtual_cockpit_inst3d;

  0070f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  00714	89 45 c4	 mov	 DWORD PTR _search$[ebp], eax

; 261  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_HOKUM_COCKPIT_VERTICAL_SPEED;

  00717	c7 45 d0 d2 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 210 ; 000000d2H

; 262  : 
; 263  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0071e	8d 45 c4	 lea	 eax, DWORD PTR _search$[ebp]
  00721	50		 push	 eax
  00722	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00727	83 f8 01	 cmp	 eax, 1
  0072a	0f 85 59 01 00
	00		 jne	 $LN11@draw_ka50_

; 264  : 	{
; 265  : 		float
; 266  : 			vertical_speed;
; 267  : 
; 268  : 		vertical_speed = metres_per_minute (current_flight_dynamics->world_velocity_y.value);

  00730	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00735	f3 0f 10 80 14
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8468]
  0073d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42700000
  00745	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _vertical_speed$1[ebp], xmm0

; 269  : 
; 270  : 		vertical_speed = bound (vertical_speed, -300.0, 300.0);

  0074d	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  00755	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c072c00000000000
  0075d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00761	76 12		 jbe	 SHORT $LN29@draw_ka50_
  00763	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c072c00000000000
  0076b	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR tv329[ebp], xmm0
  00773	eb 44		 jmp	 SHORT $LN30@draw_ka50_
$LN29@draw_ka50_:
  00775	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  0077d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4072c00000000000
  00785	76 12		 jbe	 SHORT $LN27@draw_ka50_
  00787	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4072c00000000000
  0078f	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR tv328[ebp], xmm0
  00797	eb 10		 jmp	 SHORT $LN28@draw_ka50_
$LN27@draw_ka50_:
  00799	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  007a1	f2 0f 11 85 e8
	fe ff ff	 movsd	 QWORD PTR tv328[ebp], xmm0
$LN28@draw_ka50_:
  007a9	f2 0f 10 85 e8
	fe ff ff	 movsd	 xmm0, QWORD PTR tv328[ebp]
  007b1	f2 0f 11 85 f0
	fe ff ff	 movsd	 QWORD PTR tv329[ebp], xmm0
$LN30@draw_ka50_:
  007b9	f2 0f 5a 85 f0
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv329[ebp]
  007c1	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _vertical_speed$1[ebp], xmm0

; 271  : 
; 272  : 		//
; 273  : 		// non-linear scale
; 274  : 		//
; 275  : 
; 276  : 		if (vertical_speed < -100.0)

  007c9	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  007d1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c059000000000000
  007d9	66 0f 2f c8	 comisd	 xmm1, xmm0
  007dd	76 36		 jbe	 SHORT $LN12@draw_ka50_

; 277  : 		{
; 278  : 			vertical_speed = rad (90.0) + ((vertical_speed + 100.0) * rad (-90.0) / 200.0);

  007df	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  007e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4059000000000000
  007ef	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff921fb51000000
  007f7	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4069000000000000
  007ff	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff921fb51000000
  00807	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0080b	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _vertical_speed$1[ebp], xmm0
  00813	eb 64		 jmp	 SHORT $LN15@draw_ka50_
$LN12@draw_ka50_:

; 279  : 		}
; 280  : 		else if (vertical_speed > 100.0)

  00815	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  0081d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  00825	76 36		 jbe	 SHORT $LN14@draw_ka50_

; 281  : 		{
; 282  : 			vertical_speed = rad (-90.0) + ((vertical_speed - 100.0) * rad (-90.0) / 200.0);

  00827	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  0082f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4059000000000000
  00837	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff921fb51000000
  0083f	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4069000000000000
  00847	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@bff921fb51000000
  0084f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00853	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _vertical_speed$1[ebp], xmm0

; 283  : 		}
; 284  : 	  	else

  0085b	eb 1c		 jmp	 SHORT $LN15@draw_ka50_
$LN14@draw_ka50_:

; 285  : 		{
; 286  : 			vertical_speed *= rad (-90.0) / 100.0;

  0085d	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _vertical_speed$1[ebp]
  00865	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bf9015bf90000000
  0086d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00871	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _vertical_speed$1[ebp], xmm0
$LN15@draw_ka50_:

; 287  : 		}
; 288  : 
; 289  : 		search.result_sub_object->relative_roll = vertical_speed;

  00879	8b 45 c8	 mov	 eax, DWORD PTR _search$[ebp+4]
  0087c	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _vertical_speed$1[ebp]
  00884	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN11@draw_ka50_:

; 290  : 	}
; 291  : }

  00889	5f		 pop	 edi
  0088a	5e		 pop	 esi
  0088b	5b		 pop	 ebx
  0088c	8b e5		 mov	 esp, ebp
  0088e	5d		 pop	 ebp
  0088f	c3		 ret	 0
?draw_ka50_virtual_cockpit_instruments@@YGXXZ ENDP	; draw_ka50_virtual_cockpit_instruments
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
END
