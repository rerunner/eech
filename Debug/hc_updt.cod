; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_helicopter_update_functions@@YGXXZ	; overload_helicopter_update_functions
PUBLIC	?reset_interpolation_timer@@YGXXZ		; reset_interpolation_timer
PUBLIC	??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA ; `update_client'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA ; `interpolate_entity_position'::`1'::__LINE__Var
PUBLIC	__real@0000000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@447a0000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_system_time@@YGIXZ:PROC			; get_system_time
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_connection_list_item@@YGPAUCONNECTION_LIST_TYPE@@K@Z:PROC ; get_connection_list_item
EXTRN	?get_gunships_connection_list_item@@YGPAUCONNECTION_LIST_TYPE@@PAUENTITY@@@Z:PROC ; get_gunships_connection_list_item
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_systems
EXTRN	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_system_weapon_and_target_vectors
EXTRN	?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_loading_doors
EXTRN	?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_cargo_doors
EXTRN	?update_aircraft_rudder@@YGXPAUENTITY@@@Z:PROC	; update_aircraft_rudder
EXTRN	?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_undercarriage
EXTRN	?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_weapon_system_ready
EXTRN	?update_aircraft_target_scan@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_target_scan
EXTRN	?update_aircraft_weapon_fire@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_weapon_fire
EXTRN	?update_aircraft_decoy_release@@YGXPAUENTITY@@@Z:PROC ; update_aircraft_decoy_release
EXTRN	?set_gunship_entity@@YGXPAUENTITY@@@Z:PROC	; set_gunship_entity
EXTRN	?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z:PROC ; update_local_helicopter_rotor_sounds
EXTRN	?helicopter_movement@@YGXPAUENTITY@@@Z:PROC	; helicopter_movement
EXTRN	?helicopter_death_movement@@YGXPAUENTITY@@@Z:PROC ; helicopter_death_movement
EXTRN	?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z:PROC ; update_player_helicopter_waypoint_distance
EXTRN	?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z:PROC ; aircraft_critically_damaged
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?pause_client_server_continuous_weapon_sound_effect@@YGXPAUENTITY@@H@Z:PROC ; pause_client_server_continuous_weapon_sound_effect
EXTRN	?get_local_entity_sound_type_valid@@YGHPAUENTITY@@H@Z:PROC ; get_local_entity_sound_type_valid
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?update_avionics@@YGXXZ:PROC			; update_avionics
EXTRN	?update_cockpits@@YGXXZ:PROC			; update_cockpits
EXTRN	?set_dynamics_entity_values@@YGXPAUENTITY@@@Z:PROC ; set_dynamics_entity_values
EXTRN	?update_flight_dynamics@@YGXXZ:PROC		; update_flight_dynamics
EXTRN	?set_current_flight_dynamics_auto_pilot@@YGXH@Z:PROC ; set_current_flight_dynamics_auto_pilot
EXTRN	?set_current_flight_dynamics_rotor_brake@@YGXH@Z:PROC ; set_current_flight_dynamics_rotor_brake
EXTRN	?update_current_flight_dynamics_fuel_weight@@YGXXZ:PROC ; update_current_flight_dynamics_fuel_weight
EXTRN	?update_current_flight_dynamics_flight_time@@YGXXZ:PROC ; update_current_flight_dynamics_flight_time
EXTRN	?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z:PROC ; write_tacview_unit_update
EXTRN	?tacview_update_gunship@@YGXXZ:PROC		; tacview_update_gunship
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_comms_interpolate_gunships@@3HA:DWORD ; command_line_comms_interpolate_gunships
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?system_server_id@@3KA:DWORD			; system_server_id
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity_family
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?gunship_current_sector@@3PAUSECTOR@@A:DWORD	; gunship_current_sector
EXTRN	?fire_continuous_weapon@@3HA:DWORD		; fire_continuous_weapon
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	?game_type@@3W4GAME_TYPES@@A:DWORD		; game_type
EXTRN	?tacview_log_file@@3PAU_iobuf@@A:DWORD		; tacview_log_file
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA DD 0326H ; `interpolate_entity_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA DD 01cfH ; `update_client'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@ DB 'en == '
	DB	'get_gunship_entity ()', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 06dH ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\helic'
	DB	'op\hc_updt.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv624 = -92						; size = 4
tv599 = -92						; size = 4
tv579 = -92						; size = 4
tv534 = -92						; size = 4
tv514 = -92						; size = 4
tv493 = -92						; size = 4
tv474 = -92						; size = 4
tv441 = -92						; size = 4
tv422 = -92						; size = 4
tv390 = -92						; size = 4
tv357 = -92						; size = 4
tv337 = -92						; size = 4
tv314 = -92						; size = 4
tv295 = -92						; size = 4
tv270 = -92						; size = 4
tv251 = -92						; size = 4
tv230 = -92						; size = 4
tv211 = -92						; size = 4
tv145 = -92						; size = 4
tv93 = -92						; size = 4
tv617 = -88						; size = 4
tv591 = -88						; size = 4
tv571 = -88						; size = 4
tv527 = -88						; size = 4
tv507 = -88						; size = 4
tv486 = -88						; size = 4
tv467 = -88						; size = 4
tv434 = -88						; size = 4
tv415 = -88						; size = 4
tv383 = -88						; size = 4
tv350 = -88						; size = 4
tv330 = -88						; size = 4
tv307 = -88						; size = 4
tv288 = -88						; size = 4
tv263 = -88						; size = 4
tv244 = -88						; size = 4
tv223 = -88						; size = 4
tv204 = -88						; size = 4
tv138 = -88						; size = 4
tv86 = -88						; size = 4
tv77 = -88						; size = 4
_rotated$1 = -20					; size = 4
_moved$2 = -16						; size = 4
_damage_type$ = -12					; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 463  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 464  : 	helicopter
; 465  : 		*raw;
; 466  : 
; 467  : 	int
; 468  : 		loop;
; 469  : 
; 470  : 	aircraft_damage_types
; 471  : 		damage_type;
; 472  : 
; 473  : 	raw = (helicopter *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 474  : 
; 475  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 476  : 
; 477  : 	update_local_helicopter_rotor_sounds (en);

  0001b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z ; update_local_helicopter_rotor_sounds

; 478  : 
; 479  : 	damage_type = aircraft_critically_damaged (en);

  00024	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  0002d	89 45 f4	 mov	 DWORD PTR _damage_type$[ebp], eax

; 480  : 
; 481  : 	if (raw->ac.mob.alive)

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00036	83 e1 01	 and	 ecx, 1
  00039	0f 84 c5 0c 00
	00		 je	 $LN16@update_cli

; 482  : 	{
; 483  : 		switch (raw->player)

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00042	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00048	d1 e9		 shr	 ecx, 1
  0004a	83 e1 03	 and	 ecx, 3
  0004d	89 4d a8	 mov	 DWORD PTR tv77[ebp], ecx
  00050	74 19		 je	 SHORT $LN18@update_cli
  00052	83 7d a8 01	 cmp	 DWORD PTR tv77[ebp], 1
  00056	0f 84 ba 01 00
	00		 je	 $LN24@update_cli
  0005c	83 7d a8 02	 cmp	 DWORD PTR tv77[ebp], 2
  00060	0f 84 a4 08 00
	00		 je	 $LN43@update_cli
  00066	e9 37 0b 00 00	 jmp	 $LN2@update_cli
$LN18@update_cli:

; 484  : 		{
; 485  : 			////////////////////////////////////////
; 486  : 			case ENTITY_PLAYER_AI:
; 487  : 			////////////////////////////////////////
; 488  : 			{
; 489  : 
; 490  : 				////////////////////////////////////////
; 491  : 
; 492  : 				for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00072	eb 09		 jmp	 SHORT $LN6@update_cli
$LN4@update_cli:
  00074	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00077	83 c0 01	 add	 eax, 1
  0007a	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN6@update_cli:
  0007d	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00081	0f 8d 40 01 00
	00		 jge	 $LN5@update_cli

; 493  : 				{
; 494  : 
; 495  : 					if ((damage_type == AIRCRAFT_DAMAGE_CRITICAL) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  00087	83 7d f4 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  0008b	74 79		 je	 SHORT $LN21@update_cli
  0008d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00091	74 0a		 je	 SHORT $LN58@update_cli
  00093	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	89 4d a8	 mov	 DWORD PTR tv86[ebp], ecx
  0009b	eb 1d		 jmp	 SHORT $LN59@update_cli
$LN58@update_cli:
  0009d	68 ef 01 00 00	 push	 495			; 000001efH
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b3	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN59@update_cli:
  000ba	b8 01 00 00 00	 mov	 eax, 1
  000bf	85 c0		 test	 eax, eax
  000c1	74 09		 je	 SHORT $LN60@update_cli
  000c3	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv93[ebp], 49	; 00000031H
  000ca	eb 1d		 jmp	 SHORT $LN61@update_cli
$LN60@update_cli:
  000cc	68 ef 01 00 00	 push	 495			; 000001efH
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000dc	51		 push	 ecx
  000dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e2	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN61@update_cli:
  000e9	6a 31		 push	 49			; 00000031H
  000eb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000ee	52		 push	 edx
  000ef	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv86[ebp], 1116
  000f6	8b 4d a4	 mov	 ecx, DWORD PTR tv93[ebp]
  000f9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00100	ff d2		 call	 edx
  00102	85 c0		 test	 eax, eax
  00104	74 0e		 je	 SHORT $LN19@update_cli
$LN21@update_cli:

; 496  : 					{
; 497  : 
; 498  : 						helicopter_death_movement (en);

  00106	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 499  : 					}
; 500  : 					else

  0010f	e9 ae 00 00 00	 jmp	 $LN20@update_cli
$LN19@update_cli:

; 501  : 					{
; 502  : 
; 503  : 						if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  00114	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00118	74 0a		 je	 SHORT $LN62@update_cli
  0011a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011f	89 4d a8	 mov	 DWORD PTR tv138[ebp], ecx
  00122	eb 1d		 jmp	 SHORT $LN63@update_cli
$LN62@update_cli:
  00124	68 f7 01 00 00	 push	 503			; 000001f7H
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00134	52		 push	 edx
  00135	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN63@update_cli:
  00141	b8 01 00 00 00	 mov	 eax, 1
  00146	85 c0		 test	 eax, eax
  00148	74 09		 je	 SHORT $LN64@update_cli
  0014a	c7 45 a4 73 00
	00 00		 mov	 DWORD PTR tv145[ebp], 115 ; 00000073H
  00151	eb 1d		 jmp	 SHORT $LN65@update_cli
$LN64@update_cli:
  00153	68 f7 01 00 00	 push	 503			; 000001f7H
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00163	51		 push	 ecx
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00169	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN65@update_cli:
  00170	6a 73		 push	 115			; 00000073H
  00172	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00175	52		 push	 edx
  00176	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv138[ebp], 1116
  0017d	8b 4d a4	 mov	 ecx, DWORD PTR tv145[ebp]
  00180	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00187	ff d2		 call	 edx
  00189	85 c0		 test	 eax, eax
  0018b	75 2c		 jne	 SHORT $LN22@update_cli

; 504  : 						{
; 505  : 
; 506  : 							get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  0018d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00190	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00195	50		 push	 eax
  00196	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00199	51		 push	 ecx
  0019a	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0019f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  001a7	51		 push	 ecx
  001a8	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  001b7	dd d8		 fstp	 ST(0)
$LN22@update_cli:

; 507  : 						}
; 508  : 
; 509  : 						helicopter_movement (en);

  001b9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 ?helicopter_movement@@YGXPAUENTITY@@@Z ; helicopter_movement
$LN20@update_cli:

; 510  : 					}
; 511  : 				}

  001c2	e9 ad fe ff ff	 jmp	 $LN4@update_cli
$LN5@update_cli:

; 512  : 
; 513  : 				////////////////////////////////////////
; 514  : 
; 515  : 				////////////////////////////////////////
; 516  : 				//
; 517  : 				// ORDER IS CRITICAL
; 518  : 				//
; 519  : 
; 520  : 				if (raw->ac.mob.alive)

  001c7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001ca	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  001cd	83 e1 01	 and	 ecx, 1
  001d0	74 3f		 je	 SHORT $LN23@update_cli

; 521  : 				{
; 522  : 					update_rotors (en);

  001d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 ?update_rotors@@YGXPAUENTITY@@@Z ; update_rotors

; 523  : 
; 524  : 					update_aircraft_loading_doors (en);

  001db	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 525  : 
; 526  : 					update_aircraft_cargo_doors (en);

  001e4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001e7	50		 push	 eax
  001e8	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 527  : 
; 528  : 					update_aircraft_undercarriage (en);

  001ed	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 529  : 
; 530  : 					update_aircraft_weapon_system_ready (en);

  001f6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 531  : 
; 532  : 					update_entity_weapon_systems (en);

  001ff	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 533  : 
; 534  : 					update_entity_weapon_system_weapon_and_target_vectors (en);

  00208	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors
$LN23@update_cli:

; 535  : 				}
; 536  : 
; 537  : 				//
; 538  : 				////////////////////////////////////////
; 539  : 
; 540  : 				break;

  00211	e9 8c 09 00 00	 jmp	 $LN2@update_cli
$LN24@update_cli:

; 541  : 			}
; 542  : 			////////////////////////////////////////
; 543  : 			case ENTITY_PLAYER_LOCAL:
; 544  : 			////////////////////////////////////////
; 545  : 			{
; 546  : 
; 547  : 				if (en != get_gunship_entity ())

  00216	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00219	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0021f	74 05		 je	 SHORT $LN25@update_cli

; 548  : 				{
; 549  : 
; 550  : 					//
; 551  : 					// Client might be waiting for server to set old gunship to AI controlled.
; 552  : 					//
; 553  : 
; 554  : 					return;

  00221	e9 80 0b 00 00	 jmp	 $LN1@update_cli
$LN25@update_cli:

; 555  : 				}
; 556  : 
; 557  : 				if (raw->invulnerable_timer > 0.0)

  00226	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00229	f3 0f 5a 80 88
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+392]
  00231	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00239	76 1e		 jbe	 SHORT $LN26@update_cli

; 558  : 				{
; 559  : 
; 560  : 					raw->invulnerable_timer -= get_delta_time ();

  0023b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0023e	f3 0f 10 80 88
	01 00 00	 movss	 xmm0, DWORD PTR [eax+392]
  00246	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0024e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00251	f3 0f 11 81 88
	01 00 00	 movss	 DWORD PTR [ecx+392], xmm0
$LN26@update_cli:

; 561  : 				}
; 562  : 
; 563  : 				update_current_flight_dynamics_fuel_weight ();

  00259	e8 00 00 00 00	 call	 ?update_current_flight_dynamics_fuel_weight@@YGXXZ ; update_current_flight_dynamics_fuel_weight

; 564  : 
; 565  : 				if ((!fire_continuous_weapon) && (get_local_entity_sound_type_valid (en, weapon_database [raw->ac.selected_weapon].launch_sound_effect_sub_type)))

  0025e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fire_continuous_weapon@@3HA, 0 ; fire_continuous_weapon
  00265	75 34		 jne	 SHORT $LN27@update_cli
  00267	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0026a	69 88 24 01 00
	00 e0 00 00 00	 imul	 ecx, DWORD PTR [eax+292], 224
  00274	8b 91 2c 00 00
	00		 mov	 edx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+44]
  0027a	52		 push	 edx
  0027b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0027e	50		 push	 eax
  0027f	e8 00 00 00 00	 call	 ?get_local_entity_sound_type_valid@@YGHPAUENTITY@@H@Z ; get_local_entity_sound_type_valid
  00284	85 c0		 test	 eax, eax
  00286	74 13		 je	 SHORT $LN27@update_cli

; 566  : 				{
; 567  : 					pause_client_server_continuous_weapon_sound_effect (en, raw->ac.selected_weapon);

  00288	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0028b	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00291	51		 push	 ecx
  00292	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00295	52		 push	 edx
  00296	e8 00 00 00 00	 call	 ?pause_client_server_continuous_weapon_sound_effect@@YGXPAUENTITY@@H@Z ; pause_client_server_continuous_weapon_sound_effect
$LN27@update_cli:

; 568  : 				}
; 569  : 
; 570  : 				//helicopter_death_movement (en);
; 571  : 				////////////////////////////////////////
; 572  : 				if ((!get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT)) && (!get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  0029b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0029f	74 0a		 je	 SHORT $LN66@update_cli
  002a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a6	89 4d a8	 mov	 DWORD PTR tv204[ebp], ecx
  002a9	eb 1d		 jmp	 SHORT $LN67@update_cli
$LN66@update_cli:
  002ab	68 3c 02 00 00	 push	 572			; 0000023cH
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002bb	52		 push	 edx
  002bc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c1	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv204[ebp], 0
$LN67@update_cli:
  002c8	b8 01 00 00 00	 mov	 eax, 1
  002cd	85 c0		 test	 eax, eax
  002cf	74 09		 je	 SHORT $LN68@update_cli
  002d1	c7 45 a4 0c 00
	00 00		 mov	 DWORD PTR tv211[ebp], 12 ; 0000000cH
  002d8	eb 1d		 jmp	 SHORT $LN69@update_cli
$LN68@update_cli:
  002da	68 3c 02 00 00	 push	 572			; 0000023cH
  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ea	51		 push	 ecx
  002eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv211[ebp], 0
$LN69@update_cli:
  002f7	6a 0c		 push	 12			; 0000000cH
  002f9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002fc	52		 push	 edx
  002fd	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv204[ebp], 1116
  00304	8b 4d a4	 mov	 ecx, DWORD PTR tv211[ebp]
  00307	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0030e	ff d2		 call	 edx
  00310	85 c0		 test	 eax, eax
  00312	0f 85 91 00 00
	00		 jne	 $LN28@update_cli
  00318	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0031c	74 0a		 je	 SHORT $LN70@update_cli
  0031e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00321	8b 08		 mov	 ecx, DWORD PTR [eax]
  00323	89 4d a8	 mov	 DWORD PTR tv223[ebp], ecx
  00326	eb 1d		 jmp	 SHORT $LN71@update_cli
$LN70@update_cli:
  00328	68 3c 02 00 00	 push	 572			; 0000023cH
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00332	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00338	52		 push	 edx
  00339	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv223[ebp], 0
$LN71@update_cli:
  00345	b8 01 00 00 00	 mov	 eax, 1
  0034a	85 c0		 test	 eax, eax
  0034c	74 09		 je	 SHORT $LN72@update_cli
  0034e	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv230[ebp], 49 ; 00000031H
  00355	eb 1d		 jmp	 SHORT $LN73@update_cli
$LN72@update_cli:
  00357	68 3c 02 00 00	 push	 572			; 0000023cH
  0035c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00361	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv230[ebp], 0
$LN73@update_cli:
  00374	6a 31		 push	 49			; 00000031H
  00376	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00379	52		 push	 edx
  0037a	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv223[ebp], 1116
  00381	8b 4d a4	 mov	 ecx, DWORD PTR tv230[ebp]
  00384	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0038b	ff d2		 call	 edx
  0038d	85 c0		 test	 eax, eax
  0038f	75 18		 jne	 SHORT $LN28@update_cli

; 573  : 				{
; 574  : 
; 575  : 					update_flight_dynamics ();

  00391	e8 00 00 00 00	 call	 ?update_flight_dynamics@@YGXXZ ; update_flight_dynamics

; 576  : 
; 577  : 					transmit_entity_comms_message (ENTITY_COMMS_UPDATE, en);

  00396	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00399	50		 push	 eax
  0039a	6a 3e		 push	 62			; 0000003eH
  0039c	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  003a1	83 c4 08	 add	 esp, 8

; 578  : 				}
; 579  : 				else

  003a4	e9 f7 03 00 00	 jmp	 $LN8@update_cli
$LN28@update_cli:

; 580  : 				{
; 581  : 
; 582  : 					if (get_local_entity_int_value (en, INT_TYPE_LANDED))

  003a9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003ad	74 0a		 je	 SHORT $LN74@update_cli
  003af	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b4	89 4d a8	 mov	 DWORD PTR tv244[ebp], ecx
  003b7	eb 1d		 jmp	 SHORT $LN75@update_cli
$LN74@update_cli:
  003b9	68 46 02 00 00	 push	 582			; 00000246H
  003be	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003c9	52		 push	 edx
  003ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003cf	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv244[ebp], 0
$LN75@update_cli:
  003d6	b8 01 00 00 00	 mov	 eax, 1
  003db	85 c0		 test	 eax, eax
  003dd	74 09		 je	 SHORT $LN76@update_cli
  003df	c7 45 a4 73 00
	00 00		 mov	 DWORD PTR tv251[ebp], 115 ; 00000073H
  003e6	eb 1d		 jmp	 SHORT $LN77@update_cli
$LN76@update_cli:
  003e8	68 46 02 00 00	 push	 582			; 00000246H
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003f8	51		 push	 ecx
  003f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003fe	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN77@update_cli:
  00405	6a 73		 push	 115			; 00000073H
  00407	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0040a	52		 push	 edx
  0040b	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv244[ebp], 1116
  00412	8b 4d a4	 mov	 ecx, DWORD PTR tv251[ebp]
  00415	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0041c	ff d2		 call	 edx
  0041e	85 c0		 test	 eax, eax
  00420	0f 84 97 00 00
	00		 je	 $LN31@update_cli

; 583  : 					{
; 584  : 
; 585  : 						if (get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT))

  00426	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0042a	74 0a		 je	 SHORT $LN78@update_cli
  0042c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0042f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00431	89 4d a8	 mov	 DWORD PTR tv263[ebp], ecx
  00434	eb 1d		 jmp	 SHORT $LN79@update_cli
$LN78@update_cli:
  00436	68 49 02 00 00	 push	 585			; 00000249H
  0043b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00440	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00446	52		 push	 edx
  00447	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv263[ebp], 0
$LN79@update_cli:
  00453	b8 01 00 00 00	 mov	 eax, 1
  00458	85 c0		 test	 eax, eax
  0045a	74 09		 je	 SHORT $LN80@update_cli
  0045c	c7 45 a4 0c 00
	00 00		 mov	 DWORD PTR tv270[ebp], 12 ; 0000000cH
  00463	eb 1d		 jmp	 SHORT $LN81@update_cli
$LN80@update_cli:
  00465	68 49 02 00 00	 push	 585			; 00000249H
  0046a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00475	51		 push	 ecx
  00476	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0047b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv270[ebp], 0
$LN81@update_cli:
  00482	6a 0c		 push	 12			; 0000000cH
  00484	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00487	52		 push	 edx
  00488	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv263[ebp], 1116
  0048f	8b 4d a4	 mov	 ecx, DWORD PTR tv270[ebp]
  00492	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00499	ff d2		 call	 edx
  0049b	85 c0		 test	 eax, eax
  0049d	74 1e		 je	 SHORT $LN31@update_cli

; 586  : 						{
; 587  : 
; 588  : 							set_current_flight_dynamics_rotor_brake (TRUE);

  0049f	6a 01		 push	 1
  004a1	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_rotor_brake@@YGXH@Z ; set_current_flight_dynamics_rotor_brake

; 589  : 
; 590  : 							set_current_flight_dynamics_auto_pilot (FALSE);

  004a6	6a 00		 push	 0
  004a8	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 591  : 
; 592  : 							current_flight_dynamics->input_data.collective.value = 0.0;

  004ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004b2	0f 57 c0	 xorps	 xmm0, xmm0
  004b5	f3 0f 11 80 a8
	1b 00 00	 movss	 DWORD PTR [eax+7080], xmm0
$LN31@update_cli:

; 593  : 						}
; 594  : 					}
; 595  : 
; 596  : 					if ((damage_type == AIRCRAFT_DAMAGE_CRITICAL) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)) || (get_local_entity_int_value (en, INT_TYPE_LANDED)))

  004bd	83 7d f4 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  004c1	0f 84 f2 00 00
	00		 je	 $LN33@update_cli
  004c7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004cb	74 0a		 je	 SHORT $LN82@update_cli
  004cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d2	89 4d a8	 mov	 DWORD PTR tv288[ebp], ecx
  004d5	eb 1d		 jmp	 SHORT $LN83@update_cli
$LN82@update_cli:
  004d7	68 54 02 00 00	 push	 596			; 00000254H
  004dc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004e7	52		 push	 edx
  004e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ed	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv288[ebp], 0
$LN83@update_cli:
  004f4	b8 01 00 00 00	 mov	 eax, 1
  004f9	85 c0		 test	 eax, eax
  004fb	74 09		 je	 SHORT $LN84@update_cli
  004fd	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv295[ebp], 49 ; 00000031H
  00504	eb 1d		 jmp	 SHORT $LN85@update_cli
$LN84@update_cli:
  00506	68 54 02 00 00	 push	 596			; 00000254H
  0050b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00510	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00516	51		 push	 ecx
  00517	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv295[ebp], 0
$LN85@update_cli:
  00523	6a 31		 push	 49			; 00000031H
  00525	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00528	52		 push	 edx
  00529	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv288[ebp], 1116
  00530	8b 4d a4	 mov	 ecx, DWORD PTR tv295[ebp]
  00533	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0053a	ff d2		 call	 edx
  0053c	85 c0		 test	 eax, eax
  0053e	75 79		 jne	 SHORT $LN33@update_cli
  00540	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00544	74 0a		 je	 SHORT $LN86@update_cli
  00546	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00549	8b 08		 mov	 ecx, DWORD PTR [eax]
  0054b	89 4d a8	 mov	 DWORD PTR tv307[ebp], ecx
  0054e	eb 1d		 jmp	 SHORT $LN87@update_cli
$LN86@update_cli:
  00550	68 54 02 00 00	 push	 596			; 00000254H
  00555	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0055a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00560	52		 push	 edx
  00561	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00566	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv307[ebp], 0
$LN87@update_cli:
  0056d	b8 01 00 00 00	 mov	 eax, 1
  00572	85 c0		 test	 eax, eax
  00574	74 09		 je	 SHORT $LN88@update_cli
  00576	c7 45 a4 73 00
	00 00		 mov	 DWORD PTR tv314[ebp], 115 ; 00000073H
  0057d	eb 1d		 jmp	 SHORT $LN89@update_cli
$LN88@update_cli:
  0057f	68 54 02 00 00	 push	 596			; 00000254H
  00584	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00589	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0058f	51		 push	 ecx
  00590	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00595	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv314[ebp], 0
$LN89@update_cli:
  0059c	6a 73		 push	 115			; 00000073H
  0059e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005a1	52		 push	 edx
  005a2	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv307[ebp], 1116
  005a9	8b 4d a4	 mov	 ecx, DWORD PTR tv314[ebp]
  005ac	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005b3	ff d2		 call	 edx
  005b5	85 c0		 test	 eax, eax
  005b7	74 07		 je	 SHORT $LN32@update_cli
$LN33@update_cli:

; 597  : 					{
; 598  : 
; 599  : 						set_current_flight_dynamics_auto_pilot (FALSE);

  005b9	6a 00		 push	 0
  005bb	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot
$LN32@update_cli:

; 600  : 					}
; 601  : 
; 602  : 					for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  005c0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  005c7	eb 09		 jmp	 SHORT $LN9@update_cli
$LN7@update_cli:
  005c9	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  005cc	83 c0 01	 add	 eax, 1
  005cf	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN9@update_cli:
  005d2	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  005d6	0f 8d c4 01 00
	00		 jge	 $LN8@update_cli

; 603  : 					{
; 604  : 
; 605  : 						if ((damage_type == AIRCRAFT_DAMAGE_CRITICAL) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  005dc	83 7d f4 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  005e0	74 79		 je	 SHORT $LN36@update_cli
  005e2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  005e6	74 0a		 je	 SHORT $LN90@update_cli
  005e8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ed	89 4d a8	 mov	 DWORD PTR tv330[ebp], ecx
  005f0	eb 1d		 jmp	 SHORT $LN91@update_cli
$LN90@update_cli:
  005f2	68 5d 02 00 00	 push	 605			; 0000025dH
  005f7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  005fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00602	52		 push	 edx
  00603	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00608	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv330[ebp], 0
$LN91@update_cli:
  0060f	b8 01 00 00 00	 mov	 eax, 1
  00614	85 c0		 test	 eax, eax
  00616	74 09		 je	 SHORT $LN92@update_cli
  00618	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv337[ebp], 49 ; 00000031H
  0061f	eb 1d		 jmp	 SHORT $LN93@update_cli
$LN92@update_cli:
  00621	68 5d 02 00 00	 push	 605			; 0000025dH
  00626	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00631	51		 push	 ecx
  00632	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00637	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv337[ebp], 0
$LN93@update_cli:
  0063e	6a 31		 push	 49			; 00000031H
  00640	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00643	52		 push	 edx
  00644	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv330[ebp], 1116
  0064b	8b 4d a4	 mov	 ecx, DWORD PTR tv337[ebp]
  0064e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00655	ff d2		 call	 edx
  00657	85 c0		 test	 eax, eax
  00659	74 0e		 je	 SHORT $LN34@update_cli
$LN36@update_cli:

; 606  : 						{
; 607  : 
; 608  : 							helicopter_death_movement (en);

  0065b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0065e	50		 push	 eax
  0065f	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 609  : 						}
; 610  : 						else

  00664	e9 32 01 00 00	 jmp	 $LN38@update_cli
$LN34@update_cli:

; 611  : 						{
; 612  : 
; 613  : 							if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  00669	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0066d	74 0a		 je	 SHORT $LN94@update_cli
  0066f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00672	8b 08		 mov	 ecx, DWORD PTR [eax]
  00674	89 4d a8	 mov	 DWORD PTR tv350[ebp], ecx
  00677	eb 1d		 jmp	 SHORT $LN95@update_cli
$LN94@update_cli:
  00679	68 65 02 00 00	 push	 613			; 00000265H
  0067e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00683	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00689	52		 push	 edx
  0068a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0068f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv350[ebp], 0
$LN95@update_cli:
  00696	b8 01 00 00 00	 mov	 eax, 1
  0069b	85 c0		 test	 eax, eax
  0069d	74 09		 je	 SHORT $LN96@update_cli
  0069f	c7 45 a4 73 00
	00 00		 mov	 DWORD PTR tv357[ebp], 115 ; 00000073H
  006a6	eb 1d		 jmp	 SHORT $LN97@update_cli
$LN96@update_cli:
  006a8	68 65 02 00 00	 push	 613			; 00000265H
  006ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006b8	51		 push	 ecx
  006b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006be	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv357[ebp], 0
$LN97@update_cli:
  006c5	6a 73		 push	 115			; 00000073H
  006c7	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  006ca	52		 push	 edx
  006cb	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv350[ebp], 1116
  006d2	8b 4d a4	 mov	 ecx, DWORD PTR tv357[ebp]
  006d5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006dc	ff d2		 call	 edx
  006de	85 c0		 test	 eax, eax
  006e0	75 2c		 jne	 SHORT $LN37@update_cli

; 614  : 							{
; 615  : 
; 616  : 								get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  006e2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006e5	05 54 01 00 00	 add	 eax, 340		; 00000154H
  006ea	50		 push	 eax
  006eb	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  006ee	51		 push	 ecx
  006ef	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  006f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f9	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  006fc	51		 push	 ecx
  006fd	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00702	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00707	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0070c	dd d8		 fstp	 ST(0)
$LN37@update_cli:

; 617  : 							}
; 618  : 
; 619  : 							helicopter_movement (en);

  0070e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00711	50		 push	 eax
  00712	e8 00 00 00 00	 call	 ?helicopter_movement@@YGXPAUENTITY@@@Z ; helicopter_movement

; 620  : 
; 621  : 							if (get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT))

  00717	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0071b	74 0a		 je	 SHORT $LN98@update_cli
  0071d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00720	8b 08		 mov	 ecx, DWORD PTR [eax]
  00722	89 4d a8	 mov	 DWORD PTR tv383[ebp], ecx
  00725	eb 1d		 jmp	 SHORT $LN99@update_cli
$LN98@update_cli:
  00727	68 6d 02 00 00	 push	 621			; 0000026dH
  0072c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00731	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00737	52		 push	 edx
  00738	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv383[ebp], 0
$LN99@update_cli:
  00744	b8 01 00 00 00	 mov	 eax, 1
  00749	85 c0		 test	 eax, eax
  0074b	74 09		 je	 SHORT $LN100@update_cli
  0074d	c7 45 a4 0c 00
	00 00		 mov	 DWORD PTR tv390[ebp], 12 ; 0000000cH
  00754	eb 1d		 jmp	 SHORT $LN101@update_cli
$LN100@update_cli:
  00756	68 6d 02 00 00	 push	 621			; 0000026dH
  0075b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00760	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00766	51		 push	 ecx
  00767	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0076c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv390[ebp], 0
$LN101@update_cli:
  00773	6a 0c		 push	 12			; 0000000cH
  00775	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00778	52		 push	 edx
  00779	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv383[ebp], 1116
  00780	8b 4d a4	 mov	 ecx, DWORD PTR tv390[ebp]
  00783	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0078a	ff d2		 call	 edx
  0078c	85 c0		 test	 eax, eax
  0078e	74 0b		 je	 SHORT $LN38@update_cli

; 622  : 							{
; 623  : 
; 624  : 								set_dynamics_entity_values (get_gunship_entity ());

  00790	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00795	50		 push	 eax
  00796	e8 00 00 00 00	 call	 ?set_dynamics_entity_values@@YGXPAUENTITY@@@Z ; set_dynamics_entity_values
$LN38@update_cli:

; 625  : 							}
; 626  : 						}
; 627  : 					}

  0079b	e9 29 fe ff ff	 jmp	 $LN7@update_cli
$LN8@update_cli:

; 628  : 				}
; 629  : 
; 630  : 				////////////////////////////////////////
; 631  : 				//
; 632  : 				// ORDER IS CRITICAL
; 633  : 				//
; 634  : 
; 635  : 				if (raw->ac.mob.alive)

  007a0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007a3	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  007a6	83 e1 01	 and	 ecx, 1
  007a9	74 49		 je	 SHORT $LN39@update_cli

; 636  : 				{
; 637  : 					update_aircraft_loading_doors (en);

  007ab	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007ae	50		 push	 eax
  007af	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 638  : 
; 639  : 					update_aircraft_cargo_doors (en);

  007b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007b7	50		 push	 eax
  007b8	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 640  : 
; 641  : 					update_aircraft_undercarriage (en);

  007bd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007c0	50		 push	 eax
  007c1	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 642  : 
; 643  : 					update_aircraft_weapon_system_ready (en);

  007c6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007c9	50		 push	 eax
  007ca	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 644  : 
; 645  : 					update_entity_weapon_systems (en);

  007cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007d2	50		 push	 eax
  007d3	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 646  : 
; 647  : 					update_entity_weapon_system_weapon_and_target_vectors (en);

  007d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007db	50		 push	 eax
  007dc	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 648  : 
; 649  : 					update_avionics ();

  007e1	e8 00 00 00 00	 call	 ?update_avionics@@YGXXZ	; update_avionics

; 650  : 
; 651  : 					update_cockpits ();

  007e6	e8 00 00 00 00	 call	 ?update_cockpits@@YGXXZ	; update_cockpits

; 652  : 
; 653  : 					update_aircraft_decoy_release (en);

  007eb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007ee	50		 push	 eax
  007ef	e8 00 00 00 00	 call	 ?update_aircraft_decoy_release@@YGXPAUENTITY@@@Z ; update_aircraft_decoy_release
$LN39@update_cli:

; 654  : 				}
; 655  : 
; 656  : 				//
; 657  : 				////////////////////////////////////////
; 658  : 
; 659  : 				//
; 660  : 				// Check if gunship has a task - if not then set gunship entity to NULL
; 661  : 				//
; 662  : 
; 663  : 				if (!get_local_entity_parent (en, LIST_TYPE_FOLLOWER))

  007f4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  007f8	74 0a		 je	 SHORT $LN102@update_cli
  007fa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  007ff	89 4d a8	 mov	 DWORD PTR tv415[ebp], ecx
  00802	eb 1d		 jmp	 SHORT $LN103@update_cli
$LN102@update_cli:
  00804	68 97 02 00 00	 push	 663			; 00000297H
  00809	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0080e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00814	52		 push	 edx
  00815	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0081a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv415[ebp], 0
$LN103@update_cli:
  00821	b8 01 00 00 00	 mov	 eax, 1
  00826	85 c0		 test	 eax, eax
  00828	74 09		 je	 SHORT $LN104@update_cli
  0082a	c7 45 a4 0d 00
	00 00		 mov	 DWORD PTR tv422[ebp], 13 ; 0000000dH
  00831	eb 1d		 jmp	 SHORT $LN105@update_cli
$LN104@update_cli:
  00833	68 97 02 00 00	 push	 663			; 00000297H
  00838	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0083d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00843	51		 push	 ecx
  00844	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00849	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv422[ebp], 0
$LN105@update_cli:
  00850	6a 0d		 push	 13			; 0000000dH
  00852	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00855	52		 push	 edx
  00856	69 45 a8 b4 00
	00 00		 imul	 eax, DWORD PTR tv415[ebp], 180
  0085d	8b 4d a4	 mov	 ecx, DWORD PTR tv422[ebp]
  00860	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00867	ff d2		 call	 edx
  00869	85 c0		 test	 eax, eax
  0086b	0f 85 94 00 00
	00		 jne	 $LN42@update_cli

; 664  : 				{
; 665  : 					if (!get_local_entity_int_value (en, INT_TYPE_EJECTED))

  00871	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00875	74 0a		 je	 SHORT $LN106@update_cli
  00877	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0087a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0087c	89 4d a8	 mov	 DWORD PTR tv434[ebp], ecx
  0087f	eb 1d		 jmp	 SHORT $LN107@update_cli
$LN106@update_cli:
  00881	68 99 02 00 00	 push	 665			; 00000299H
  00886	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0088b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00891	52		 push	 edx
  00892	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00897	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv434[ebp], 0
$LN107@update_cli:
  0089e	b8 01 00 00 00	 mov	 eax, 1
  008a3	85 c0		 test	 eax, eax
  008a5	74 09		 je	 SHORT $LN108@update_cli
  008a7	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv441[ebp], 49 ; 00000031H
  008ae	eb 1d		 jmp	 SHORT $LN109@update_cli
$LN108@update_cli:
  008b0	68 99 02 00 00	 push	 665			; 00000299H
  008b5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  008ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008c0	51		 push	 ecx
  008c1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008c6	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv441[ebp], 0
$LN109@update_cli:
  008cd	6a 31		 push	 49			; 00000031H
  008cf	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  008d2	52		 push	 edx
  008d3	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv434[ebp], 1116
  008da	8b 4d a4	 mov	 ecx, DWORD PTR tv441[ebp]
  008dd	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  008e4	ff d2		 call	 edx
  008e6	85 c0		 test	 eax, eax
  008e8	75 1b		 jne	 SHORT $LN42@update_cli

; 666  : 					{
; 667  : 						if ((en == get_gunship_entity ()) && (get_game_type () != GAME_TYPE_FREE_FLIGHT)) // Jabberwock 040201 - but not in free flight

  008ea	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008ed	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  008f3	75 10		 jne	 SHORT $LN42@update_cli
  008f5	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 1 ; game_type
  008fc	74 07		 je	 SHORT $LN42@update_cli

; 668  : 						{
; 669  : 							set_gunship_entity (NULL);

  008fe	6a 00		 push	 0
  00900	e8 00 00 00 00	 call	 ?set_gunship_entity@@YGXPAUENTITY@@@Z ; set_gunship_entity
$LN42@update_cli:

; 670  : 						}
; 671  : 					}
; 672  : 				}
; 673  : 
; 674  : 				break;

  00905	e9 98 02 00 00	 jmp	 $LN2@update_cli
$LN43@update_cli:

; 675  : 			}
; 676  : 			////////////////////////////////////////
; 677  : 			case ENTITY_PLAYER_REMOTE:
; 678  : 			////////////////////////////////////////
; 679  : 			{
; 680  : 				////////////////////////////////////////
; 681  : 				//
; 682  : 				// ORDER IS CRITICAL
; 683  : 				//
; 684  : 
; 685  : 				if (raw->ac.mob.alive)

  0090a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0090d	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00910	83 e1 01	 and	 ecx, 1
  00913	74 36		 je	 SHORT $LN44@update_cli

; 686  : 				{
; 687  : 					update_aircraft_loading_doors (en);

  00915	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00918	50		 push	 eax
  00919	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 688  : 
; 689  : 					update_aircraft_cargo_doors (en);

  0091e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00921	50		 push	 eax
  00922	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 690  : 
; 691  : 					update_aircraft_undercarriage (en);

  00927	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0092a	50		 push	 eax
  0092b	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 692  : 
; 693  : 					update_aircraft_weapon_system_ready (en);

  00930	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00933	50		 push	 eax
  00934	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 694  : 
; 695  : 					update_entity_weapon_systems (en);

  00939	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0093c	50		 push	 eax
  0093d	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 696  : 
; 697  : 					update_entity_weapon_system_weapon_and_target_vectors (en);

  00942	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00945	50		 push	 eax
  00946	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors
$LN44@update_cli:

; 698  : 				}
; 699  : 
; 700  : 				if ((get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT)) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  0094b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0094f	74 0a		 je	 SHORT $LN110@update_cli
  00951	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00954	8b 08		 mov	 ecx, DWORD PTR [eax]
  00956	89 4d a8	 mov	 DWORD PTR tv467[ebp], ecx
  00959	eb 1d		 jmp	 SHORT $LN111@update_cli
$LN110@update_cli:
  0095b	68 bc 02 00 00	 push	 700			; 000002bcH
  00960	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00965	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0096b	52		 push	 edx
  0096c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00971	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv467[ebp], 0
$LN111@update_cli:
  00978	b8 01 00 00 00	 mov	 eax, 1
  0097d	85 c0		 test	 eax, eax
  0097f	74 09		 je	 SHORT $LN112@update_cli
  00981	c7 45 a4 0c 00
	00 00		 mov	 DWORD PTR tv474[ebp], 12 ; 0000000cH
  00988	eb 1d		 jmp	 SHORT $LN113@update_cli
$LN112@update_cli:
  0098a	68 bc 02 00 00	 push	 700			; 000002bcH
  0098f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00994	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0099a	51		 push	 ecx
  0099b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv474[ebp], 0
$LN113@update_cli:
  009a7	6a 0c		 push	 12			; 0000000cH
  009a9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  009ac	52		 push	 edx
  009ad	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv467[ebp], 1116
  009b4	8b 4d a4	 mov	 ecx, DWORD PTR tv474[ebp]
  009b7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  009be	ff d2		 call	 edx
  009c0	85 c0		 test	 eax, eax
  009c2	75 7d		 jne	 SHORT $LN47@update_cli
  009c4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009c8	74 0a		 je	 SHORT $LN114@update_cli
  009ca	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  009cf	89 4d a8	 mov	 DWORD PTR tv486[ebp], ecx
  009d2	eb 1d		 jmp	 SHORT $LN115@update_cli
$LN114@update_cli:
  009d4	68 bc 02 00 00	 push	 700			; 000002bcH
  009d9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  009de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009e4	52		 push	 edx
  009e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009ea	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv486[ebp], 0
$LN115@update_cli:
  009f1	b8 01 00 00 00	 mov	 eax, 1
  009f6	85 c0		 test	 eax, eax
  009f8	74 09		 je	 SHORT $LN116@update_cli
  009fa	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv493[ebp], 49 ; 00000031H
  00a01	eb 1d		 jmp	 SHORT $LN117@update_cli
$LN116@update_cli:
  00a03	68 bc 02 00 00	 push	 700			; 000002bcH
  00a08	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a0d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a13	51		 push	 ecx
  00a14	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a19	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv493[ebp], 0
$LN117@update_cli:
  00a20	6a 31		 push	 49			; 00000031H
  00a22	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00a25	52		 push	 edx
  00a26	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv486[ebp], 1116
  00a2d	8b 4d a4	 mov	 ecx, DWORD PTR tv493[ebp]
  00a30	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a37	ff d2		 call	 edx
  00a39	85 c0		 test	 eax, eax
  00a3b	0f 84 58 01 00
	00		 je	 $LN45@update_cli
$LN47@update_cli:

; 701  : 				{
; 702  : 
; 703  : 					for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00a41	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00a48	eb 09		 jmp	 SHORT $LN12@update_cli
$LN10@update_cli:
  00a4a	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00a4d	83 c0 01	 add	 eax, 1
  00a50	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN12@update_cli:
  00a53	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00a57	0f 8d 3a 01 00
	00		 jge	 $LN11@update_cli

; 704  : 					{
; 705  : 
; 706  : 						// no need for death_movement as if the remote_player is damaged it will default back to manual flight.
; 707  : 						if (get_local_entity_int_value (en, INT_TYPE_EJECTED))

  00a5d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a61	74 0a		 je	 SHORT $LN118@update_cli
  00a63	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a66	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a68	89 4d a8	 mov	 DWORD PTR tv507[ebp], ecx
  00a6b	eb 1d		 jmp	 SHORT $LN119@update_cli
$LN118@update_cli:
  00a6d	68 c3 02 00 00	 push	 707			; 000002c3H
  00a72	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a77	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a7d	52		 push	 edx
  00a7e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a83	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv507[ebp], 0
$LN119@update_cli:
  00a8a	b8 01 00 00 00	 mov	 eax, 1
  00a8f	85 c0		 test	 eax, eax
  00a91	74 09		 je	 SHORT $LN120@update_cli
  00a93	c7 45 a4 31 00
	00 00		 mov	 DWORD PTR tv514[ebp], 49 ; 00000031H
  00a9a	eb 1d		 jmp	 SHORT $LN121@update_cli
$LN120@update_cli:
  00a9c	68 c3 02 00 00	 push	 707			; 000002c3H
  00aa1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aa6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00aac	51		 push	 ecx
  00aad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ab2	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv514[ebp], 0
$LN121@update_cli:
  00ab9	6a 31		 push	 49			; 00000031H
  00abb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00abe	52		 push	 edx
  00abf	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv507[ebp], 1116
  00ac6	8b 4d a4	 mov	 ecx, DWORD PTR tv514[ebp]
  00ac9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ad0	ff d2		 call	 edx
  00ad2	85 c0		 test	 eax, eax
  00ad4	74 0e		 je	 SHORT $LN48@update_cli

; 708  : 						{
; 709  : 
; 710  : 							helicopter_death_movement (en);

  00ad6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00ad9	50		 push	 eax
  00ada	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 711  : 						}
; 712  : 						else

  00adf	e9 ae 00 00 00	 jmp	 $LN49@update_cli
$LN48@update_cli:

; 713  : 						{
; 714  : 
; 715  : 							if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  00ae4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00ae8	74 0a		 je	 SHORT $LN122@update_cli
  00aea	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00aed	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aef	89 4d a8	 mov	 DWORD PTR tv527[ebp], ecx
  00af2	eb 1d		 jmp	 SHORT $LN123@update_cli
$LN122@update_cli:
  00af4	68 cb 02 00 00	 push	 715			; 000002cbH
  00af9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00afe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b04	52		 push	 edx
  00b05	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b0a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv527[ebp], 0
$LN123@update_cli:
  00b11	b8 01 00 00 00	 mov	 eax, 1
  00b16	85 c0		 test	 eax, eax
  00b18	74 09		 je	 SHORT $LN124@update_cli
  00b1a	c7 45 a4 73 00
	00 00		 mov	 DWORD PTR tv534[ebp], 115 ; 00000073H
  00b21	eb 1d		 jmp	 SHORT $LN125@update_cli
$LN124@update_cli:
  00b23	68 cb 02 00 00	 push	 715			; 000002cbH
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b2d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b33	51		 push	 ecx
  00b34	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b39	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv534[ebp], 0
$LN125@update_cli:
  00b40	6a 73		 push	 115			; 00000073H
  00b42	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00b45	52		 push	 edx
  00b46	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv527[ebp], 1116
  00b4d	8b 4d a4	 mov	 ecx, DWORD PTR tv534[ebp]
  00b50	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00b57	ff d2		 call	 edx
  00b59	85 c0		 test	 eax, eax
  00b5b	75 2c		 jne	 SHORT $LN50@update_cli

; 716  : 							{
; 717  : 
; 718  : 								get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  00b5d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00b60	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00b65	50		 push	 eax
  00b66	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b69	51		 push	 ecx
  00b6a	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  00b6f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b74	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00b77	51		 push	 ecx
  00b78	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00b7d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b82	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00b87	dd d8		 fstp	 ST(0)
$LN50@update_cli:

; 719  : 							}
; 720  : 
; 721  : 							helicopter_movement (en);

  00b89	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b8c	50		 push	 eax
  00b8d	e8 00 00 00 00	 call	 ?helicopter_movement@@YGXPAUENTITY@@@Z ; helicopter_movement
$LN49@update_cli:

; 722  : 						}
; 723  : 					}

  00b92	e9 b3 fe ff ff	 jmp	 $LN10@update_cli
$LN11@update_cli:

; 724  : 				}
; 725  : 				else

  00b97	eb 09		 jmp	 SHORT $LN46@update_cli
$LN45@update_cli:

; 726  : 				{
; 727  : 
; 728  : 					interpolate_entity_position (en);

  00b99	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b9c	50		 push	 eax
  00b9d	e8 00 00 00 00	 call	 ?interpolate_entity_position@@YGXPAUENTITY@@@Z ; interpolate_entity_position
$LN46@update_cli:
$LN2@update_cli:

; 729  : 				}
; 730  : 
; 731  : 				//
; 732  : 				////////////////////////////////////////
; 733  : 
; 734  : 				break;
; 735  : 			}
; 736  : 		}
; 737  : 
; 738  : 		if (tacview_is_logging() && raw->ac.mob.alive)

  00ba2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00ba9	0f 84 50 01 00
	00		 je	 $LN53@update_cli
  00baf	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00bb2	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00bb5	83 e1 01	 and	 ecx, 1
  00bb8	0f 84 41 01 00
	00		 je	 $LN53@update_cli

; 739  : 		{
; 740  : 			int
; 741  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOVED),

  00bbe	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00bc2	74 0a		 je	 SHORT $LN126@update_cli
  00bc4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bc7	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bc9	89 4d a8	 mov	 DWORD PTR tv571[ebp], ecx
  00bcc	eb 24		 jmp	 SHORT $LN127@update_cli
$LN126@update_cli:
  00bce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00bd4	81 c2 16 01 00
	00		 add	 edx, 278		; 00000116H
  00bda	52		 push	 edx
  00bdb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00be0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00be5	50		 push	 eax
  00be6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00beb	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv571[ebp], 0
$LN127@update_cli:
  00bf2	b9 01 00 00 00	 mov	 ecx, 1
  00bf7	85 c9		 test	 ecx, ecx
  00bf9	74 09		 je	 SHORT $LN128@update_cli
  00bfb	c7 45 a4 8f 00
	00 00		 mov	 DWORD PTR tv579[ebp], 143 ; 0000008fH
  00c02	eb 24		 jmp	 SHORT $LN129@update_cli
$LN128@update_cli:
  00c04	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00c0a	81 c2 16 01 00
	00		 add	 edx, 278		; 00000116H
  00c10	52		 push	 edx
  00c11	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c16	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c1b	50		 push	 eax
  00c1c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c21	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv579[ebp], 0
$LN129@update_cli:
  00c28	68 8f 00 00 00	 push	 143			; 0000008fH
  00c2d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00c30	51		 push	 ecx
  00c31	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv571[ebp], 1116
  00c38	8b 45 a4	 mov	 eax, DWORD PTR tv579[ebp]
  00c3b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00c42	ff d1		 call	 ecx
  00c44	89 45 f0	 mov	 DWORD PTR _moved$2[ebp], eax

; 742  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  00c47	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00c4b	74 0a		 je	 SHORT $LN130@update_cli
  00c4d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c50	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c52	89 4d a8	 mov	 DWORD PTR tv591[ebp], ecx
  00c55	eb 24		 jmp	 SHORT $LN131@update_cli
$LN130@update_cli:
  00c57	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00c5d	81 c2 17 01 00
	00		 add	 edx, 279		; 00000117H
  00c63	52		 push	 edx
  00c64	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c69	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c6e	50		 push	 eax
  00c6f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c74	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv591[ebp], 0
$LN131@update_cli:
  00c7b	b9 01 00 00 00	 mov	 ecx, 1
  00c80	85 c9		 test	 ecx, ecx
  00c82	74 09		 je	 SHORT $LN132@update_cli
  00c84	c7 45 a4 b1 00
	00 00		 mov	 DWORD PTR tv599[ebp], 177 ; 000000b1H
  00c8b	eb 24		 jmp	 SHORT $LN133@update_cli
$LN132@update_cli:
  00c8d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00c93	81 c2 17 01 00
	00		 add	 edx, 279		; 00000117H
  00c99	52		 push	 edx
  00c9a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c9f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ca4	50		 push	 eax
  00ca5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00caa	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv599[ebp], 0
$LN133@update_cli:
  00cb1	68 b1 00 00 00	 push	 177			; 000000b1H
  00cb6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00cb9	51		 push	 ecx
  00cba	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv591[ebp], 1116
  00cc1	8b 45 a4	 mov	 eax, DWORD PTR tv599[ebp]
  00cc4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00ccb	ff d1		 call	 ecx
  00ccd	89 45 ec	 mov	 DWORD PTR _rotated$1[ebp], eax

; 743  : 
; 744  : 			if (en == get_gunship_entity())

  00cd0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00cd3	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00cd9	75 05		 jne	 SHORT $LN52@update_cli

; 745  : 				tacview_update_gunship();

  00cdb	e8 00 00 00 00	 call	 ?tacview_update_gunship@@YGXXZ ; tacview_update_gunship
$LN52@update_cli:

; 746  : 
; 747  : 			if (moved || rotated)

  00ce0	83 7d f0 00	 cmp	 DWORD PTR _moved$2[ebp], 0
  00ce4	75 06		 jne	 SHORT $LN54@update_cli
  00ce6	83 7d ec 00	 cmp	 DWORD PTR _rotated$1[ebp], 0
  00cea	74 13		 je	 SHORT $LN53@update_cli
$LN54@update_cli:

; 748  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  00cec	6a 00		 push	 0
  00cee	8b 45 ec	 mov	 eax, DWORD PTR _rotated$1[ebp]
  00cf1	50		 push	 eax
  00cf2	8b 4d f0	 mov	 ecx, DWORD PTR _moved$2[ebp]
  00cf5	51		 push	 ecx
  00cf6	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00cf9	52		 push	 edx
  00cfa	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN53@update_cli:

; 749  : 		}
; 750  : 
; 751  : 	}
; 752  : 	else

  00cff	e9 a2 00 00 00	 jmp	 $LN14@update_cli
$LN16@update_cli:

; 753  : 	{
; 754  : 		if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_DEAD)

  00d04	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d08	74 0a		 je	 SHORT $LN134@update_cli
  00d0a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d0d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d0f	89 4d a8	 mov	 DWORD PTR tv617[ebp], ecx
  00d12	eb 1d		 jmp	 SHORT $LN135@update_cli
$LN134@update_cli:
  00d14	68 f2 02 00 00	 push	 754			; 000002f2H
  00d19	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d1e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d24	52		 push	 edx
  00d25	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d2a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv617[ebp], 0
$LN135@update_cli:
  00d31	b8 01 00 00 00	 mov	 eax, 1
  00d36	85 c0		 test	 eax, eax
  00d38	74 09		 je	 SHORT $LN136@update_cli
  00d3a	c7 45 a4 97 00
	00 00		 mov	 DWORD PTR tv624[ebp], 151 ; 00000097H
  00d41	eb 1d		 jmp	 SHORT $LN137@update_cli
$LN136@update_cli:
  00d43	68 f2 02 00 00	 push	 754			; 000002f2H
  00d48	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d4d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00d53	51		 push	 ecx
  00d54	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d59	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv624[ebp], 0
$LN137@update_cli:
  00d60	68 97 00 00 00	 push	 151			; 00000097H
  00d65	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00d68	52		 push	 edx
  00d69	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv617[ebp], 1116
  00d70	8b 4d a4	 mov	 ecx, DWORD PTR tv624[ebp]
  00d73	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00d7a	ff d2		 call	 edx
  00d7c	83 f8 02	 cmp	 eax, 2
  00d7f	75 02		 jne	 SHORT $LN55@update_cli

; 755  : 		{
; 756  : 		}
; 757  : 		else

  00d81	eb 23		 jmp	 SHORT $LN14@update_cli
$LN55@update_cli:

; 758  : 		{
; 759  : 			for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00d83	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00d8a	eb 09		 jmp	 SHORT $LN15@update_cli
$LN13@update_cli:
  00d8c	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00d8f	83 c0 01	 add	 eax, 1
  00d92	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN15@update_cli:
  00d95	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00d99	7d 0b		 jge	 SHORT $LN14@update_cli

; 760  : 			{
; 761  : 				helicopter_death_movement (en);

  00d9b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d9e	50		 push	 eax
  00d9f	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 762  : 			}

  00da4	eb e6		 jmp	 SHORT $LN13@update_cli
$LN14@update_cli:
$LN1@update_cli:

; 763  : 		}
; 764  : 	}
; 765  : }

  00da6	5f		 pop	 edi
  00da7	5e		 pop	 esi
  00da8	5b		 pop	 ebx
  00da9	8b e5		 mov	 esp, ebp
  00dab	5d		 pop	 ebp
  00dac	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv660 = -104						; size = 4
tv632 = -104						; size = 4
tv606 = -104						; size = 4
tv586 = -104						; size = 4
tv529 = -104						; size = 4
tv509 = -104						; size = 4
tv487 = -104						; size = 4
tv468 = -104						; size = 4
tv428 = -104						; size = 4
tv394 = -104						; size = 4
tv369 = -104						; size = 4
tv349 = -104						; size = 4
tv330 = -104						; size = 4
tv309 = -104						; size = 4
tv290 = -104						; size = 4
tv257 = -104						; size = 4
tv218 = -104						; size = 4
tv199 = -104						; size = 4
tv180 = -104						; size = 4
tv145 = -104						; size = 4
tv93 = -104						; size = 4
tv673 = -100						; size = 4
tv653 = -100						; size = 4
tv625 = -100						; size = 4
tv598 = -100						; size = 4
tv578 = -100						; size = 4
tv522 = -100						; size = 4
tv502 = -100						; size = 4
tv480 = -100						; size = 4
tv461 = -100						; size = 4
tv421 = -100						; size = 4
tv387 = -100						; size = 4
tv362 = -100						; size = 4
tv342 = -100						; size = 4
tv323 = -100						; size = 4
tv302 = -100						; size = 4
tv283 = -100						; size = 4
tv249 = -100						; size = 4
tv211 = -100						; size = 4
tv192 = -100						; size = 4
tv172 = -100						; size = 4
tv138 = -100						; size = 4
tv86 = -100						; size = 4
tv77 = -100						; size = 4
_rotated$1 = -32					; size = 4
_moved$2 = -28						; size = 4
_sec$3 = -24						; size = 4
_pos$4 = -20						; size = 4
_damage_type$ = -16					; size = 4
_loop$ = -12						; size = 4
_raw$ = -8						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 110  : 	entity
; 111  : 		*group;
; 112  : 
; 113  : 	helicopter
; 114  : 		*raw;
; 115  : 
; 116  : 	int
; 117  : 		loop;
; 118  : 
; 119  : 	aircraft_damage_types
; 120  : 		damage_type;
; 121  : 
; 122  : 	raw = (helicopter *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 123  : 
; 124  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 125  : 
; 126  : 	update_local_helicopter_rotor_sounds (en);

  0001b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z ; update_local_helicopter_rotor_sounds

; 127  : 
; 128  : 	damage_type = aircraft_critically_damaged (en);

  00024	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  0002d	89 45 f0	 mov	 DWORD PTR _damage_type$[ebp], eax

; 129  : 
; 130  : 	if (raw->ac.mob.alive)

  00030	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00036	83 e1 01	 and	 ecx, 1
  00039	0f 84 3d 0d 00
	00		 je	 $LN16@update_ser

; 131  : 	{
; 132  : 		switch (raw->player)

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00042	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00048	d1 e9		 shr	 ecx, 1
  0004a	83 e1 03	 and	 ecx, 3
  0004d	89 4d 9c	 mov	 DWORD PTR tv77[ebp], ecx
  00050	74 19		 je	 SHORT $LN18@update_ser
  00052	83 7d 9c 01	 cmp	 DWORD PTR tv77[ebp], 1
  00056	0f 84 73 03 00
	00		 je	 $LN26@update_ser
  0005c	83 7d 9c 02	 cmp	 DWORD PTR tv77[ebp], 2
  00060	0f 84 d1 08 00
	00		 je	 $LN39@update_ser
  00066	e9 a6 0b 00 00	 jmp	 $LN2@update_ser
$LN18@update_ser:

; 133  : 		{
; 134  : 			////////////////////////////////////////
; 135  : 			case ENTITY_PLAYER_AI:
; 136  : 			////////////////////////////////////////
; 137  : 			{
; 138  : 
; 139  : 				////////////////////////////////////////
; 140  : 
; 141  : 				for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00072	eb 09		 jmp	 SHORT $LN6@update_ser
$LN4@update_ser:
  00074	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00077	83 c0 01	 add	 eax, 1
  0007a	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN6@update_ser:
  0007d	83 7d f4 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00081	0f 8d 40 01 00
	00		 jge	 $LN5@update_ser

; 142  : 				{
; 143  : 
; 144  : 					if ((damage_type == AIRCRAFT_DAMAGE_CRITICAL) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  00087	83 7d f0 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  0008b	74 79		 je	 SHORT $LN21@update_ser
  0008d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00091	74 0a		 je	 SHORT $LN59@update_ser
  00093	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	89 4d 9c	 mov	 DWORD PTR tv86[ebp], ecx
  0009b	eb 1d		 jmp	 SHORT $LN60@update_ser
$LN59@update_ser:
  0009d	68 90 00 00 00	 push	 144			; 00000090H
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b3	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN60@update_ser:
  000ba	b8 01 00 00 00	 mov	 eax, 1
  000bf	85 c0		 test	 eax, eax
  000c1	74 09		 je	 SHORT $LN61@update_ser
  000c3	c7 45 98 31 00
	00 00		 mov	 DWORD PTR tv93[ebp], 49	; 00000031H
  000ca	eb 1d		 jmp	 SHORT $LN62@update_ser
$LN61@update_ser:
  000cc	68 90 00 00 00	 push	 144			; 00000090H
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000dc	51		 push	 ecx
  000dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e2	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN62@update_ser:
  000e9	6a 31		 push	 49			; 00000031H
  000eb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000ee	52		 push	 edx
  000ef	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv86[ebp], 1116
  000f6	8b 4d 98	 mov	 ecx, DWORD PTR tv93[ebp]
  000f9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00100	ff d2		 call	 edx
  00102	85 c0		 test	 eax, eax
  00104	74 0e		 je	 SHORT $LN19@update_ser
$LN21@update_ser:

; 145  : 					{
; 146  : 
; 147  : 						helicopter_death_movement (en);

  00106	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 148  : 					}
; 149  : 					else

  0010f	e9 ae 00 00 00	 jmp	 $LN20@update_ser
$LN19@update_ser:

; 150  : 					{
; 151  : 
; 152  : 						if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  00114	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00118	74 0a		 je	 SHORT $LN63@update_ser
  0011a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011f	89 4d 9c	 mov	 DWORD PTR tv138[ebp], ecx
  00122	eb 1d		 jmp	 SHORT $LN64@update_ser
$LN63@update_ser:
  00124	68 98 00 00 00	 push	 152			; 00000098H
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00134	52		 push	 edx
  00135	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN64@update_ser:
  00141	b8 01 00 00 00	 mov	 eax, 1
  00146	85 c0		 test	 eax, eax
  00148	74 09		 je	 SHORT $LN65@update_ser
  0014a	c7 45 98 73 00
	00 00		 mov	 DWORD PTR tv145[ebp], 115 ; 00000073H
  00151	eb 1d		 jmp	 SHORT $LN66@update_ser
$LN65@update_ser:
  00153	68 98 00 00 00	 push	 152			; 00000098H
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00163	51		 push	 ecx
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00169	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN66@update_ser:
  00170	6a 73		 push	 115			; 00000073H
  00172	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00175	52		 push	 edx
  00176	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv138[ebp], 1116
  0017d	8b 4d 98	 mov	 ecx, DWORD PTR tv145[ebp]
  00180	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00187	ff d2		 call	 edx
  00189	85 c0		 test	 eax, eax
  0018b	75 2c		 jne	 SHORT $LN22@update_ser

; 153  : 						{
; 154  : 
; 155  : 							get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  0018d	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00190	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00195	50		 push	 eax
  00196	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00199	51		 push	 ecx
  0019a	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0019f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a4	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  001a7	51		 push	 ecx
  001a8	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  001b7	dd d8		 fstp	 ST(0)
$LN22@update_ser:

; 156  : 						}
; 157  : 
; 158  : 						helicopter_movement (en);

  001b9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 ?helicopter_movement@@YGXPAUENTITY@@@Z ; helicopter_movement
$LN20@update_ser:

; 159  : 					}
; 160  : 				}

  001c2	e9 ad fe ff ff	 jmp	 $LN4@update_ser
$LN5@update_ser:

; 161  : 
; 162  : 				// provide resync for AI wingmen
; 163  : 
; 164  : 				group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  001c7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001cb	74 0a		 je	 SHORT $LN67@update_ser
  001cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d2	89 4d 9c	 mov	 DWORD PTR tv172[ebp], ecx
  001d5	eb 21		 jmp	 SHORT $LN68@update_ser
$LN67@update_ser:
  001d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  001dd	83 c2 37	 add	 edx, 55			; 00000037H
  001e0	52		 push	 edx
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001eb	50		 push	 eax
  001ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN68@update_ser:
  001f8	b9 01 00 00 00	 mov	 ecx, 1
  001fd	85 c9		 test	 ecx, ecx
  001ff	74 09		 je	 SHORT $LN69@update_ser
  00201	c7 45 98 19 00
	00 00		 mov	 DWORD PTR tv180[ebp], 25 ; 00000019H
  00208	eb 21		 jmp	 SHORT $LN70@update_ser
$LN69@update_ser:
  0020a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00210	83 c2 37	 add	 edx, 55			; 00000037H
  00213	52		 push	 edx
  00214	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00224	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN70@update_ser:
  0022b	6a 19		 push	 25			; 00000019H
  0022d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00230	51		 push	 ecx
  00231	69 55 9c b4 00
	00 00		 imul	 edx, DWORD PTR tv172[ebp], 180
  00238	8b 45 98	 mov	 eax, DWORD PTR tv180[ebp]
  0023b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00242	ff d1		 call	 ecx
  00244	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 165  : 
; 166  : 				if (group)

  00247	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  0024b	0f 84 0b 01 00
	00		 je	 $LN24@update_ser

; 167  : 				{
; 168  : 
; 169  : 					if ((get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) != OPERATIONAL_STATE_LANDED) &&

  00251	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00255	74 0a		 je	 SHORT $LN71@update_ser
  00257	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0025a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025c	89 4d 9c	 mov	 DWORD PTR tv192[ebp], ecx
  0025f	eb 1d		 jmp	 SHORT $LN72@update_ser
$LN71@update_ser:
  00261	68 a9 00 00 00	 push	 169			; 000000a9H
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00271	52		 push	 edx
  00272	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00277	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN72@update_ser:
  0027e	b8 01 00 00 00	 mov	 eax, 1
  00283	85 c0		 test	 eax, eax
  00285	74 09		 je	 SHORT $LN73@update_ser
  00287	c7 45 98 97 00
	00 00		 mov	 DWORD PTR tv199[ebp], 151 ; 00000097H
  0028e	eb 1d		 jmp	 SHORT $LN74@update_ser
$LN73@update_ser:
  00290	68 a9 00 00 00	 push	 169			; 000000a9H
  00295	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002a0	51		 push	 ecx
  002a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a6	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN74@update_ser:
  002ad	68 97 00 00 00	 push	 151			; 00000097H
  002b2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002b5	52		 push	 edx
  002b6	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv192[ebp], 1116
  002bd	8b 4d 98	 mov	 ecx, DWORD PTR tv199[ebp]
  002c0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002c7	ff d2		 call	 edx
  002c9	83 f8 04	 cmp	 eax, 4
  002cc	0f 84 8a 00 00
	00		 je	 $LN24@update_ser
  002d2	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  002d6	74 0a		 je	 SHORT $LN75@update_ser
  002d8	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  002db	8b 08		 mov	 ecx, DWORD PTR [eax]
  002dd	89 4d 9c	 mov	 DWORD PTR tv211[ebp], ecx
  002e0	eb 1d		 jmp	 SHORT $LN76@update_ser
$LN75@update_ser:
  002e2	68 aa 00 00 00	 push	 170			; 000000aaH
  002e7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002f2	52		 push	 edx
  002f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f8	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv211[ebp], 0
$LN76@update_ser:
  002ff	b8 01 00 00 00	 mov	 eax, 1
  00304	85 c0		 test	 eax, eax
  00306	74 09		 je	 SHORT $LN77@update_ser
  00308	c7 45 98 91 00
	00 00		 mov	 DWORD PTR tv218[ebp], 145 ; 00000091H
  0030f	eb 1d		 jmp	 SHORT $LN78@update_ser
$LN77@update_ser:
  00311	68 aa 00 00 00	 push	 170			; 000000aaH
  00316	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00321	51		 push	 ecx
  00322	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00327	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv218[ebp], 0
$LN78@update_ser:
  0032e	68 91 00 00 00	 push	 145			; 00000091H
  00333	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  00336	52		 push	 edx
  00337	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv211[ebp], 1116
  0033e	8b 4d 98	 mov	 ecx, DWORD PTR tv218[ebp]
  00341	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00348	ff d2		 call	 edx
  0034a	85 c0		 test	 eax, eax
  0034c	74 0e		 je	 SHORT $LN24@update_ser

; 170  : 							(get_local_entity_int_value (group, INT_TYPE_MULTIPLAYER_GROUP)))
; 171  : 					{
; 172  : 
; 173  : 						transmit_entity_comms_message (ENTITY_COMMS_UPDATE, en);

  0034e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00351	50		 push	 eax
  00352	6a 3e		 push	 62			; 0000003eH
  00354	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00359	83 c4 08	 add	 esp, 8
$LN24@update_ser:

; 174  : 					}
; 175  : 				}
; 176  : 
; 177  : 				////////////////////////////////////////
; 178  : 				//
; 179  : 				// ORDER IS CRITICAL
; 180  : 				//
; 181  : 
; 182  : 				if (raw->ac.mob.alive)

  0035c	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0035f	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00362	83 e1 01	 and	 ecx, 1
  00365	74 63		 je	 SHORT $LN25@update_ser

; 183  : 				{
; 184  : 					update_rotors (en);

  00367	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 ?update_rotors@@YGXPAUENTITY@@@Z ; update_rotors

; 185  : 
; 186  : 					update_aircraft_loading_doors (en);

  00370	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 187  : 
; 188  : 					update_aircraft_cargo_doors (en);

  00379	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0037c	50		 push	 eax
  0037d	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 189  : 
; 190  : 					update_aircraft_undercarriage (en);

  00382	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00385	50		 push	 eax
  00386	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 191  : 
; 192  : 					update_aircraft_rudder (en);

  0038b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0038e	50		 push	 eax
  0038f	e8 00 00 00 00	 call	 ?update_aircraft_rudder@@YGXPAUENTITY@@@Z ; update_aircraft_rudder

; 193  : 
; 194  : 					update_aircraft_target_scan (en);

  00394	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 ?update_aircraft_target_scan@@YGXPAUENTITY@@@Z ; update_aircraft_target_scan

; 195  : 
; 196  : 					update_aircraft_weapon_system_ready (en);

  0039d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a0	50		 push	 eax
  003a1	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 197  : 
; 198  : 					update_entity_weapon_systems (en);

  003a6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a9	50		 push	 eax
  003aa	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 199  : 
; 200  : 					update_entity_weapon_system_weapon_and_target_vectors (en);

  003af	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003b2	50		 push	 eax
  003b3	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 201  : 
; 202  : 					update_aircraft_weapon_fire (en);

  003b8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003bb	50		 push	 eax
  003bc	e8 00 00 00 00	 call	 ?update_aircraft_weapon_fire@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_fire

; 203  : 
; 204  : 					update_aircraft_decoy_release (en);

  003c1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003c4	50		 push	 eax
  003c5	e8 00 00 00 00	 call	 ?update_aircraft_decoy_release@@YGXPAUENTITY@@@Z ; update_aircraft_decoy_release
$LN25@update_ser:

; 205  : 				}
; 206  : 
; 207  : 				//
; 208  : 				////////////////////////////////////////
; 209  : 
; 210  : 				break;

  003ca	e9 42 08 00 00	 jmp	 $LN2@update_ser
$LN26@update_ser:

; 211  : 			}
; 212  : 			////////////////////////////////////////
; 213  : 			case ENTITY_PLAYER_LOCAL:
; 214  : 			////////////////////////////////////////
; 215  : 			{
; 216  : 				vec3d* pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  003cf	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003d3	74 0a		 je	 SHORT $LN79@update_ser
  003d5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  003da	89 4d 9c	 mov	 DWORD PTR tv249[ebp], ecx
  003dd	eb 21		 jmp	 SHORT $LN80@update_ser
$LN79@update_ser:
  003df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  003e5	83 c2 6b	 add	 edx, 107		; 0000006bH
  003e8	52		 push	 edx
  003e9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003f3	50		 push	 eax
  003f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f9	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv249[ebp], 0
$LN80@update_ser:
  00400	b9 01 00 00 00	 mov	 ecx, 1
  00405	85 c9		 test	 ecx, ecx
  00407	74 09		 je	 SHORT $LN81@update_ser
  00409	c7 45 98 08 00
	00 00		 mov	 DWORD PTR tv257[ebp], 8
  00410	eb 21		 jmp	 SHORT $LN82@update_ser
$LN81@update_ser:
  00412	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00418	83 c2 6b	 add	 edx, 107		; 0000006bH
  0041b	52		 push	 edx
  0041c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00421	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00426	50		 push	 eax
  00427	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv257[ebp], 0
$LN82@update_ser:
  00433	6a 08		 push	 8
  00435	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00438	51		 push	 ecx
  00439	6b 55 9c 60	 imul	 edx, DWORD PTR tv249[ebp], 96
  0043d	8b 45 98	 mov	 eax, DWORD PTR tv257[ebp]
  00440	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00447	ff d1		 call	 ecx
  00449	89 45 ec	 mov	 DWORD PTR _pos$4[ebp], eax

; 217  : 				entity* sec = NULL;

  0044c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _sec$3[ebp], 0

; 218  : 
; 219  : 				ASSERT (en == get_gunship_entity ());

  00453	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00456	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0045c	74 18		 je	 SHORT $LN27@update_ser
  0045e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00463	83 c0 6e	 add	 eax, 110		; 0000006eH
  00466	50		 push	 eax
  00467	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@
  00471	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN27@update_ser:

; 220  : 
; 221  : 				if (raw->invulnerable_timer > 0.0)

  00476	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00479	f3 0f 5a 80 88
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+392]
  00481	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00489	76 1e		 jbe	 SHORT $LN28@update_ser

; 222  : 				{
; 223  : 
; 224  : 					raw->invulnerable_timer -= get_delta_time ();

  0048b	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0048e	f3 0f 10 80 88
	01 00 00	 movss	 xmm0, DWORD PTR [eax+392]
  00496	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0049e	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  004a1	f3 0f 11 81 88
	01 00 00	 movss	 DWORD PTR [ecx+392], xmm0
$LN28@update_ser:

; 225  : 				}
; 226  : 
; 227  : 				if (pos)

  004a9	83 7d ec 00	 cmp	 DWORD PTR _pos$4[ebp], 0
  004ad	74 18		 je	 SHORT $LN29@update_ser

; 228  : 				{
; 229  : 					sec = get_local_sector_entity(pos);

  004af	8b 45 ec	 mov	 eax, DWORD PTR _pos$4[ebp]
  004b2	50		 push	 eax
  004b3	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  004b8	89 45 e8	 mov	 DWORD PTR _sec$3[ebp], eax

; 230  : 					gunship_current_sector = (sector *) get_local_entity_data(sec);

  004bb	8b 45 e8	 mov	 eax, DWORD PTR _sec$3[ebp]
  004be	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A, ecx ; gunship_current_sector
$LN29@update_ser:

; 231  : 				}
; 232  : 
; 233  : 				update_current_flight_dynamics_fuel_weight ();

  004c7	e8 00 00 00 00	 call	 ?update_current_flight_dynamics_fuel_weight@@YGXXZ ; update_current_flight_dynamics_fuel_weight

; 234  : 
; 235  : 				update_current_flight_dynamics_flight_time ();

  004cc	e8 00 00 00 00	 call	 ?update_current_flight_dynamics_flight_time@@YGXXZ ; update_current_flight_dynamics_flight_time

; 236  : 
; 237  : 				////////////////////////////////////////
; 238  : 				if ((!get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT)) && (!get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  004d1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004d5	74 0a		 je	 SHORT $LN83@update_ser
  004d7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004da	8b 08		 mov	 ecx, DWORD PTR [eax]
  004dc	89 4d 9c	 mov	 DWORD PTR tv283[ebp], ecx
  004df	eb 1d		 jmp	 SHORT $LN84@update_ser
$LN83@update_ser:
  004e1	68 ee 00 00 00	 push	 238			; 000000eeH
  004e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  004eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004f1	52		 push	 edx
  004f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f7	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv283[ebp], 0
$LN84@update_ser:
  004fe	b8 01 00 00 00	 mov	 eax, 1
  00503	85 c0		 test	 eax, eax
  00505	74 09		 je	 SHORT $LN85@update_ser
  00507	c7 45 98 0c 00
	00 00		 mov	 DWORD PTR tv290[ebp], 12 ; 0000000cH
  0050e	eb 1d		 jmp	 SHORT $LN86@update_ser
$LN85@update_ser:
  00510	68 ee 00 00 00	 push	 238			; 000000eeH
  00515	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0051a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00520	51		 push	 ecx
  00521	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00526	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv290[ebp], 0
$LN86@update_ser:
  0052d	6a 0c		 push	 12			; 0000000cH
  0052f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00532	52		 push	 edx
  00533	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv283[ebp], 1116
  0053a	8b 4d 98	 mov	 ecx, DWORD PTR tv290[ebp]
  0053d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00544	ff d2		 call	 edx
  00546	85 c0		 test	 eax, eax
  00548	0f 85 8c 00 00
	00		 jne	 $LN30@update_ser
  0054e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00552	74 0a		 je	 SHORT $LN87@update_ser
  00554	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00557	8b 08		 mov	 ecx, DWORD PTR [eax]
  00559	89 4d 9c	 mov	 DWORD PTR tv302[ebp], ecx
  0055c	eb 1d		 jmp	 SHORT $LN88@update_ser
$LN87@update_ser:
  0055e	68 ee 00 00 00	 push	 238			; 000000eeH
  00563	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00568	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0056e	52		 push	 edx
  0056f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00574	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv302[ebp], 0
$LN88@update_ser:
  0057b	b8 01 00 00 00	 mov	 eax, 1
  00580	85 c0		 test	 eax, eax
  00582	74 09		 je	 SHORT $LN89@update_ser
  00584	c7 45 98 31 00
	00 00		 mov	 DWORD PTR tv309[ebp], 49 ; 00000031H
  0058b	eb 1d		 jmp	 SHORT $LN90@update_ser
$LN89@update_ser:
  0058d	68 ee 00 00 00	 push	 238			; 000000eeH
  00592	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00597	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0059d	51		 push	 ecx
  0059e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a3	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv309[ebp], 0
$LN90@update_ser:
  005aa	6a 31		 push	 49			; 00000031H
  005ac	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005af	52		 push	 edx
  005b0	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv302[ebp], 1116
  005b7	8b 4d 98	 mov	 ecx, DWORD PTR tv309[ebp]
  005ba	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005c1	ff d2		 call	 edx
  005c3	85 c0		 test	 eax, eax
  005c5	75 13		 jne	 SHORT $LN30@update_ser

; 239  : 				{
; 240  : 
; 241  : 					update_flight_dynamics ();

  005c7	e8 00 00 00 00	 call	 ?update_flight_dynamics@@YGXXZ ; update_flight_dynamics

; 242  : 
; 243  : 					update_player_helicopter_waypoint_distance (en);

  005cc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005cf	50		 push	 eax
  005d0	e8 00 00 00 00	 call	 ?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z ; update_player_helicopter_waypoint_distance

; 244  : 				}
; 245  : 				else

  005d5	e9 f6 02 00 00	 jmp	 $LN8@update_ser
$LN30@update_ser:

; 246  : 				{
; 247  : 					if ((damage_type == AIRCRAFT_DAMAGE_CRITICAL) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)) || (get_local_entity_int_value (en, INT_TYPE_LANDED)))

  005da	83 7d f0 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  005de	0f 84 f6 00 00
	00		 je	 $LN33@update_ser
  005e4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  005e8	74 0a		 je	 SHORT $LN91@update_ser
  005ea	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ef	89 4d 9c	 mov	 DWORD PTR tv323[ebp], ecx
  005f2	eb 1d		 jmp	 SHORT $LN92@update_ser
$LN91@update_ser:
  005f4	68 f7 00 00 00	 push	 247			; 000000f7H
  005f9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  005fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00604	52		 push	 edx
  00605	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv323[ebp], 0
$LN92@update_ser:
  00611	b8 01 00 00 00	 mov	 eax, 1
  00616	85 c0		 test	 eax, eax
  00618	74 09		 je	 SHORT $LN93@update_ser
  0061a	c7 45 98 31 00
	00 00		 mov	 DWORD PTR tv330[ebp], 49 ; 00000031H
  00621	eb 1d		 jmp	 SHORT $LN94@update_ser
$LN93@update_ser:
  00623	68 f7 00 00 00	 push	 247			; 000000f7H
  00628	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00633	51		 push	 ecx
  00634	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00639	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv330[ebp], 0
$LN94@update_ser:
  00640	6a 31		 push	 49			; 00000031H
  00642	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00645	52		 push	 edx
  00646	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv323[ebp], 1116
  0064d	8b 4d 98	 mov	 ecx, DWORD PTR tv330[ebp]
  00650	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00657	ff d2		 call	 edx
  00659	85 c0		 test	 eax, eax
  0065b	75 7d		 jne	 SHORT $LN33@update_ser
  0065d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00661	74 0a		 je	 SHORT $LN95@update_ser
  00663	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00666	8b 08		 mov	 ecx, DWORD PTR [eax]
  00668	89 4d 9c	 mov	 DWORD PTR tv342[ebp], ecx
  0066b	eb 1d		 jmp	 SHORT $LN96@update_ser
$LN95@update_ser:
  0066d	68 f7 00 00 00	 push	 247			; 000000f7H
  00672	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00677	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0067d	52		 push	 edx
  0067e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00683	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv342[ebp], 0
$LN96@update_ser:
  0068a	b8 01 00 00 00	 mov	 eax, 1
  0068f	85 c0		 test	 eax, eax
  00691	74 09		 je	 SHORT $LN97@update_ser
  00693	c7 45 98 73 00
	00 00		 mov	 DWORD PTR tv349[ebp], 115 ; 00000073H
  0069a	eb 1d		 jmp	 SHORT $LN98@update_ser
$LN97@update_ser:
  0069c	68 f7 00 00 00	 push	 247			; 000000f7H
  006a1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006ac	51		 push	 ecx
  006ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006b2	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv349[ebp], 0
$LN98@update_ser:
  006b9	6a 73		 push	 115			; 00000073H
  006bb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  006be	52		 push	 edx
  006bf	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv342[ebp], 1116
  006c6	8b 4d 98	 mov	 ecx, DWORD PTR tv349[ebp]
  006c9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006d0	ff d2		 call	 edx
  006d2	85 c0		 test	 eax, eax
  006d4	0f 84 97 00 00
	00		 je	 $LN34@update_ser
$LN33@update_ser:

; 248  : 					{
; 249  : 
; 250  : 						set_current_flight_dynamics_auto_pilot (FALSE);

  006da	6a 00		 push	 0
  006dc	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 251  : 
; 252  : 						if (get_local_entity_int_value (en, INT_TYPE_LANDED))

  006e1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  006e5	74 0a		 je	 SHORT $LN99@update_ser
  006e7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ec	89 4d 9c	 mov	 DWORD PTR tv362[ebp], ecx
  006ef	eb 1d		 jmp	 SHORT $LN100@update_ser
$LN99@update_ser:
  006f1	68 fc 00 00 00	 push	 252			; 000000fcH
  006f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  006fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00701	52		 push	 edx
  00702	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00707	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv362[ebp], 0
$LN100@update_ser:
  0070e	b8 01 00 00 00	 mov	 eax, 1
  00713	85 c0		 test	 eax, eax
  00715	74 09		 je	 SHORT $LN101@update_ser
  00717	c7 45 98 73 00
	00 00		 mov	 DWORD PTR tv369[ebp], 115 ; 00000073H
  0071e	eb 1d		 jmp	 SHORT $LN102@update_ser
$LN101@update_ser:
  00720	68 fc 00 00 00	 push	 252			; 000000fcH
  00725	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0072a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00730	51		 push	 ecx
  00731	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00736	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv369[ebp], 0
$LN102@update_ser:
  0073d	6a 73		 push	 115			; 00000073H
  0073f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00742	52		 push	 edx
  00743	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv362[ebp], 1116
  0074a	8b 4d 98	 mov	 ecx, DWORD PTR tv369[ebp]
  0074d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00754	ff d2		 call	 edx
  00756	85 c0		 test	 eax, eax
  00758	74 17		 je	 SHORT $LN34@update_ser

; 253  : 						{
; 254  : 
; 255  : 							set_current_flight_dynamics_rotor_brake (TRUE);

  0075a	6a 01		 push	 1
  0075c	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_rotor_brake@@YGXH@Z ; set_current_flight_dynamics_rotor_brake

; 256  : 
; 257  : 							current_flight_dynamics->input_data.collective.value = 0.0;

  00761	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00766	0f 57 c0	 xorps	 xmm0, xmm0
  00769	f3 0f 11 80 a8
	1b 00 00	 movss	 DWORD PTR [eax+7080], xmm0
$LN34@update_ser:

; 258  : 						}
; 259  : 					}
; 260  : 
; 261  : 					for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00771	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00778	eb 09		 jmp	 SHORT $LN9@update_ser
$LN7@update_ser:
  0077a	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  0077d	83 c0 01	 add	 eax, 1
  00780	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN9@update_ser:
  00783	83 7d f4 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00787	0f 8d 43 01 00
	00		 jge	 $LN8@update_ser

; 262  : 					{
; 263  : 
; 264  : 						if (get_local_entity_int_value (en, INT_TYPE_EJECTED))

  0078d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00791	74 0a		 je	 SHORT $LN103@update_ser
  00793	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00796	8b 08		 mov	 ecx, DWORD PTR [eax]
  00798	89 4d 9c	 mov	 DWORD PTR tv387[ebp], ecx
  0079b	eb 1d		 jmp	 SHORT $LN104@update_ser
$LN103@update_ser:
  0079d	68 08 01 00 00	 push	 264			; 00000108H
  007a2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ad	52		 push	 edx
  007ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007b3	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv387[ebp], 0
$LN104@update_ser:
  007ba	b8 01 00 00 00	 mov	 eax, 1
  007bf	85 c0		 test	 eax, eax
  007c1	74 09		 je	 SHORT $LN105@update_ser
  007c3	c7 45 98 31 00
	00 00		 mov	 DWORD PTR tv394[ebp], 49 ; 00000031H
  007ca	eb 1d		 jmp	 SHORT $LN106@update_ser
$LN105@update_ser:
  007cc	68 08 01 00 00	 push	 264			; 00000108H
  007d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  007d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007dc	51		 push	 ecx
  007dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e2	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv394[ebp], 0
$LN106@update_ser:
  007e9	6a 31		 push	 49			; 00000031H
  007eb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  007ee	52		 push	 edx
  007ef	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv387[ebp], 1116
  007f6	8b 4d 98	 mov	 ecx, DWORD PTR tv394[ebp]
  007f9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00800	ff d2		 call	 edx
  00802	85 c0		 test	 eax, eax
  00804	74 0e		 je	 SHORT $LN35@update_ser

; 265  : 						{
; 266  : 
; 267  : 							helicopter_death_movement (en);

  00806	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00809	50		 push	 eax
  0080a	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 268  : 						}
; 269  : 						else

  0080f	e9 b7 00 00 00	 jmp	 $LN37@update_ser
$LN35@update_ser:

; 270  : 						{
; 271  : 
; 272  : 							get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  00814	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00817	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0081c	50		 push	 eax
  0081d	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00820	51		 push	 ecx
  00821	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  00826	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0082b	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  0082e	51		 push	 ecx
  0082f	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00834	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00839	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0083e	dd d8		 fstp	 ST(0)

; 273  : 
; 274  : 							helicopter_movement (en);

  00840	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00843	50		 push	 eax
  00844	e8 00 00 00 00	 call	 ?helicopter_movement@@YGXPAUENTITY@@@Z ; helicopter_movement

; 275  : 
; 276  : 							if (get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT))

  00849	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0084d	74 0a		 je	 SHORT $LN107@update_ser
  0084f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00852	8b 08		 mov	 ecx, DWORD PTR [eax]
  00854	89 4d 9c	 mov	 DWORD PTR tv421[ebp], ecx
  00857	eb 1d		 jmp	 SHORT $LN108@update_ser
$LN107@update_ser:
  00859	68 14 01 00 00	 push	 276			; 00000114H
  0085e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00863	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00869	52		 push	 edx
  0086a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0086f	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv421[ebp], 0
$LN108@update_ser:
  00876	b8 01 00 00 00	 mov	 eax, 1
  0087b	85 c0		 test	 eax, eax
  0087d	74 09		 je	 SHORT $LN109@update_ser
  0087f	c7 45 98 0c 00
	00 00		 mov	 DWORD PTR tv428[ebp], 12 ; 0000000cH
  00886	eb 1d		 jmp	 SHORT $LN110@update_ser
$LN109@update_ser:
  00888	68 14 01 00 00	 push	 276			; 00000114H
  0088d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00892	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00898	51		 push	 ecx
  00899	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0089e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv428[ebp], 0
$LN110@update_ser:
  008a5	6a 0c		 push	 12			; 0000000cH
  008a7	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  008aa	52		 push	 edx
  008ab	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv421[ebp], 1116
  008b2	8b 4d 98	 mov	 ecx, DWORD PTR tv428[ebp]
  008b5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  008bc	ff d2		 call	 edx
  008be	85 c0		 test	 eax, eax
  008c0	74 09		 je	 SHORT $LN37@update_ser

; 277  : 							{
; 278  : 
; 279  : 								set_dynamics_entity_values (en);

  008c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008c5	50		 push	 eax
  008c6	e8 00 00 00 00	 call	 ?set_dynamics_entity_values@@YGXPAUENTITY@@@Z ; set_dynamics_entity_values
$LN37@update_ser:

; 280  : 							}
; 281  : 						}
; 282  : 					}

  008cb	e9 aa fe ff ff	 jmp	 $LN7@update_ser
$LN8@update_ser:

; 283  : 				}
; 284  : 				////////////////////////////////////////
; 285  : 
; 286  : 				transmit_entity_comms_message (ENTITY_COMMS_UPDATE, en);

  008d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008d3	50		 push	 eax
  008d4	6a 3e		 push	 62			; 0000003eH
  008d6	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  008db	83 c4 08	 add	 esp, 8

; 287  : 
; 288  : 				////////////////////////////////////////
; 289  : 				//
; 290  : 				// ORDER IS CRITICAL
; 291  : 				//
; 292  : 
; 293  : 				if (raw->ac.mob.alive)

  008de	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  008e1	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  008e4	83 e1 01	 and	 ecx, 1
  008e7	74 49		 je	 SHORT $LN38@update_ser

; 294  : 				{
; 295  : 					update_aircraft_loading_doors (en);

  008e9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008ec	50		 push	 eax
  008ed	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 296  : 
; 297  : 					update_aircraft_cargo_doors (en);

  008f2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008f5	50		 push	 eax
  008f6	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 298  : 
; 299  : 					update_aircraft_undercarriage (en);

  008fb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  008fe	50		 push	 eax
  008ff	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 300  : 
; 301  : 					update_aircraft_weapon_system_ready (en);

  00904	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00907	50		 push	 eax
  00908	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 302  : 
; 303  : 					update_entity_weapon_systems (en);

  0090d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00910	50		 push	 eax
  00911	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 304  : 
; 305  : 					update_entity_weapon_system_weapon_and_target_vectors (en);

  00916	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00919	50		 push	 eax
  0091a	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 306  : 
; 307  : 					update_avionics ();

  0091f	e8 00 00 00 00	 call	 ?update_avionics@@YGXXZ	; update_avionics

; 308  : 
; 309  : 					update_cockpits ();

  00924	e8 00 00 00 00	 call	 ?update_cockpits@@YGXXZ	; update_cockpits

; 310  : 
; 311  : 					update_aircraft_decoy_release (en);

  00929	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0092c	50		 push	 eax
  0092d	e8 00 00 00 00	 call	 ?update_aircraft_decoy_release@@YGXPAUENTITY@@@Z ; update_aircraft_decoy_release
$LN38@update_ser:

; 312  : 				}
; 313  : 
; 314  : 				//
; 315  : 				////////////////////////////////////////
; 316  : 
; 317  : 				//
; 318  : 				// Check if gunship has a task - if not then set gunship entity to NULL
; 319  : 				//
; 320  : // arneh 20061223 - removed this to stop helicopter going to outside view after landing a successful mission
; 321  : /*
; 322  : 				if (!get_local_entity_parent (en, LIST_TYPE_FOLLOWER))
; 323  : 				{
; 324  : 					if (!get_local_entity_int_value (en, INT_TYPE_EJECTED))
; 325  : 					{
; 326  : 						if ((en == get_gunship_entity ()) && (get_game_type () != GAME_TYPE_FREE_FLIGHT)) // Jabberwock 030201 - but not in free flight
; 327  : 						{
; 328  : 							set_gunship_entity (NULL);
; 329  : 						}
; 330  : 					}
; 331  : 				}
; 332  : */
; 333  : 				break;

  00932	e9 da 02 00 00	 jmp	 $LN2@update_ser
$LN39@update_ser:

; 334  : 			}
; 335  : 			////////////////////////////////////////
; 336  : 			case ENTITY_PLAYER_REMOTE:
; 337  : 			////////////////////////////////////////
; 338  : 			{
; 339  : 
; 340  : 				////////////////////////////////////////
; 341  : 
; 342  : 				if (raw->invulnerable_timer > 0.0)

  00937	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0093a	f3 0f 5a 80 88
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+392]
  00942	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0094a	76 1e		 jbe	 SHORT $LN40@update_ser

; 343  : 				{
; 344  : 
; 345  : 					raw->invulnerable_timer -= get_delta_time ();

  0094c	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0094f	f3 0f 10 80 88
	01 00 00	 movss	 xmm0, DWORD PTR [eax+392]
  00957	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0095f	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00962	f3 0f 11 81 88
	01 00 00	 movss	 DWORD PTR [ecx+392], xmm0
$LN40@update_ser:

; 346  : 				}
; 347  : 
; 348  : 				if ((get_local_entity_int_value (en, INT_TYPE_AUTO_PILOT)) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  0096a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0096e	74 0a		 je	 SHORT $LN111@update_ser
  00970	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00973	8b 08		 mov	 ecx, DWORD PTR [eax]
  00975	89 4d 9c	 mov	 DWORD PTR tv461[ebp], ecx
  00978	eb 1d		 jmp	 SHORT $LN112@update_ser
$LN111@update_ser:
  0097a	68 5c 01 00 00	 push	 348			; 0000015cH
  0097f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00984	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0098a	52		 push	 edx
  0098b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00990	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv461[ebp], 0
$LN112@update_ser:
  00997	b8 01 00 00 00	 mov	 eax, 1
  0099c	85 c0		 test	 eax, eax
  0099e	74 09		 je	 SHORT $LN113@update_ser
  009a0	c7 45 98 0c 00
	00 00		 mov	 DWORD PTR tv468[ebp], 12 ; 0000000cH
  009a7	eb 1d		 jmp	 SHORT $LN114@update_ser
$LN113@update_ser:
  009a9	68 5c 01 00 00	 push	 348			; 0000015cH
  009ae	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  009b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009b9	51		 push	 ecx
  009ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009bf	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv468[ebp], 0
$LN114@update_ser:
  009c6	6a 0c		 push	 12			; 0000000cH
  009c8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  009cb	52		 push	 edx
  009cc	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv461[ebp], 1116
  009d3	8b 4d 98	 mov	 ecx, DWORD PTR tv468[ebp]
  009d6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  009dd	ff d2		 call	 edx
  009df	85 c0		 test	 eax, eax
  009e1	75 7d		 jne	 SHORT $LN43@update_ser
  009e3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009e7	74 0a		 je	 SHORT $LN115@update_ser
  009e9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  009ee	89 4d 9c	 mov	 DWORD PTR tv480[ebp], ecx
  009f1	eb 1d		 jmp	 SHORT $LN116@update_ser
$LN115@update_ser:
  009f3	68 5c 01 00 00	 push	 348			; 0000015cH
  009f8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  009fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a03	52		 push	 edx
  00a04	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a09	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv480[ebp], 0
$LN116@update_ser:
  00a10	b8 01 00 00 00	 mov	 eax, 1
  00a15	85 c0		 test	 eax, eax
  00a17	74 09		 je	 SHORT $LN117@update_ser
  00a19	c7 45 98 31 00
	00 00		 mov	 DWORD PTR tv487[ebp], 49 ; 00000031H
  00a20	eb 1d		 jmp	 SHORT $LN118@update_ser
$LN117@update_ser:
  00a22	68 5c 01 00 00	 push	 348			; 0000015cH
  00a27	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a2c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a32	51		 push	 ecx
  00a33	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a38	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv487[ebp], 0
$LN118@update_ser:
  00a3f	6a 31		 push	 49			; 00000031H
  00a41	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00a44	52		 push	 edx
  00a45	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv480[ebp], 1116
  00a4c	8b 4d 98	 mov	 ecx, DWORD PTR tv487[ebp]
  00a4f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a56	ff d2		 call	 edx
  00a58	85 c0		 test	 eax, eax
  00a5a	0f 84 5e 01 00
	00		 je	 $LN41@update_ser
$LN43@update_ser:

; 349  : 				{
; 350  : 
; 351  : 					for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00a60	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00a67	eb 09		 jmp	 SHORT $LN12@update_ser
$LN10@update_ser:
  00a69	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00a6c	83 c0 01	 add	 eax, 1
  00a6f	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN12@update_ser:
  00a72	83 7d f4 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00a76	0f 8d 40 01 00
	00		 jge	 $LN11@update_ser

; 352  : 					{
; 353  : 
; 354  : 						if ((damage_type == AIRCRAFT_DAMAGE_CRITICAL) || (get_local_entity_int_value (en, INT_TYPE_EJECTED)))

  00a7c	83 7d f0 02	 cmp	 DWORD PTR _damage_type$[ebp], 2
  00a80	74 79		 je	 SHORT $LN46@update_ser
  00a82	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a86	74 0a		 je	 SHORT $LN119@update_ser
  00a88	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a8b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a8d	89 4d 9c	 mov	 DWORD PTR tv502[ebp], ecx
  00a90	eb 1d		 jmp	 SHORT $LN120@update_ser
$LN119@update_ser:
  00a92	68 62 01 00 00	 push	 354			; 00000162H
  00a97	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a9c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00aa2	52		 push	 edx
  00aa3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aa8	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv502[ebp], 0
$LN120@update_ser:
  00aaf	b8 01 00 00 00	 mov	 eax, 1
  00ab4	85 c0		 test	 eax, eax
  00ab6	74 09		 je	 SHORT $LN121@update_ser
  00ab8	c7 45 98 31 00
	00 00		 mov	 DWORD PTR tv509[ebp], 49 ; 00000031H
  00abf	eb 1d		 jmp	 SHORT $LN122@update_ser
$LN121@update_ser:
  00ac1	68 62 01 00 00	 push	 354			; 00000162H
  00ac6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00acb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ad1	51		 push	 ecx
  00ad2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ad7	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv509[ebp], 0
$LN122@update_ser:
  00ade	6a 31		 push	 49			; 00000031H
  00ae0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00ae3	52		 push	 edx
  00ae4	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv502[ebp], 1116
  00aeb	8b 4d 98	 mov	 ecx, DWORD PTR tv509[ebp]
  00aee	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00af5	ff d2		 call	 edx
  00af7	85 c0		 test	 eax, eax
  00af9	74 0e		 je	 SHORT $LN44@update_ser
$LN46@update_ser:

; 355  : 						{
; 356  : 
; 357  : 							helicopter_death_movement (en);

  00afb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00afe	50		 push	 eax
  00aff	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 358  : 						}
; 359  : 						else

  00b04	e9 ae 00 00 00	 jmp	 $LN45@update_ser
$LN44@update_ser:

; 360  : 						{
; 361  : 
; 362  : 							if (!get_local_entity_int_value (en, INT_TYPE_LANDED))

  00b09	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b0d	74 0a		 je	 SHORT $LN123@update_ser
  00b0f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b12	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b14	89 4d 9c	 mov	 DWORD PTR tv522[ebp], ecx
  00b17	eb 1d		 jmp	 SHORT $LN124@update_ser
$LN123@update_ser:
  00b19	68 6a 01 00 00	 push	 362			; 0000016aH
  00b1e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b23	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b29	52		 push	 edx
  00b2a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b2f	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv522[ebp], 0
$LN124@update_ser:
  00b36	b8 01 00 00 00	 mov	 eax, 1
  00b3b	85 c0		 test	 eax, eax
  00b3d	74 09		 je	 SHORT $LN125@update_ser
  00b3f	c7 45 98 73 00
	00 00		 mov	 DWORD PTR tv529[ebp], 115 ; 00000073H
  00b46	eb 1d		 jmp	 SHORT $LN126@update_ser
$LN125@update_ser:
  00b48	68 6a 01 00 00	 push	 362			; 0000016aH
  00b4d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b52	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b58	51		 push	 ecx
  00b59	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b5e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv529[ebp], 0
$LN126@update_ser:
  00b65	6a 73		 push	 115			; 00000073H
  00b67	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00b6a	52		 push	 edx
  00b6b	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv522[ebp], 1116
  00b72	8b 4d 98	 mov	 ecx, DWORD PTR tv529[ebp]
  00b75	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00b7c	ff d2		 call	 edx
  00b7e	85 c0		 test	 eax, eax
  00b80	75 2c		 jne	 SHORT $LN47@update_ser

; 363  : 							{
; 364  : 
; 365  : 								get_3d_terrain_point_data (raw->ac.mob.position.x, raw->ac.mob.position.z, &raw->ac.terrain_info);

  00b82	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00b85	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00b8a	50		 push	 eax
  00b8b	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b8e	51		 push	 ecx
  00b8f	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  00b94	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b99	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  00b9c	51		 push	 ecx
  00b9d	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00ba2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ba7	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00bac	dd d8		 fstp	 ST(0)
$LN47@update_ser:

; 366  : 							}
; 367  : 
; 368  : 							helicopter_movement (en);

  00bae	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bb1	50		 push	 eax
  00bb2	e8 00 00 00 00	 call	 ?helicopter_movement@@YGXPAUENTITY@@@Z ; helicopter_movement
$LN45@update_ser:

; 369  : 						}
; 370  : 					}

  00bb7	e9 ad fe ff ff	 jmp	 $LN10@update_ser
$LN11@update_ser:

; 371  : 
; 372  : 					#if DEBUG_MODULE
; 373  : 
; 374  : 					debug_log ("HC_UPDT: SERVER: moving client %d using AUTO PILOT", get_local_entity_index (en));
; 375  : 
; 376  : 					#endif
; 377  : 				}
; 378  : 				else

  00bbc	eb 12		 jmp	 SHORT $LN42@update_ser
$LN41@update_ser:

; 379  : 				{
; 380  : 
; 381  : 					interpolate_entity_position (en);

  00bbe	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bc1	50		 push	 eax
  00bc2	e8 00 00 00 00	 call	 ?interpolate_entity_position@@YGXPAUENTITY@@@Z ; interpolate_entity_position

; 382  : 
; 383  : 					update_player_helicopter_waypoint_distance (en);

  00bc7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bca	50		 push	 eax
  00bcb	e8 00 00 00 00	 call	 ?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z ; update_player_helicopter_waypoint_distance
$LN42@update_ser:

; 384  : 				}
; 385  : 
; 386  : 				////////////////////////////////////////
; 387  : 				//
; 388  : 				// ORDER IS CRITICAL
; 389  : 				//
; 390  : 
; 391  : 				if (raw->ac.mob.alive)

  00bd0	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00bd3	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00bd6	83 e1 01	 and	 ecx, 1
  00bd9	74 36		 je	 SHORT $LN48@update_ser

; 392  : 				{
; 393  : 					update_aircraft_loading_doors (en);

  00bdb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bde	50		 push	 eax
  00bdf	e8 00 00 00 00	 call	 ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors

; 394  : 
; 395  : 					update_aircraft_cargo_doors (en);

  00be4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00be7	50		 push	 eax
  00be8	e8 00 00 00 00	 call	 ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; update_aircraft_cargo_doors

; 396  : 
; 397  : 					update_aircraft_undercarriage (en);

  00bed	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bf0	50		 push	 eax
  00bf1	e8 00 00 00 00	 call	 ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage

; 398  : 
; 399  : 					update_aircraft_weapon_system_ready (en);

  00bf6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bf9	50		 push	 eax
  00bfa	e8 00 00 00 00	 call	 ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready

; 400  : 
; 401  : 					update_entity_weapon_systems (en);

  00bff	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c02	50		 push	 eax
  00c03	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 402  : 
; 403  : 					update_entity_weapon_system_weapon_and_target_vectors (en);

  00c08	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c0b	50		 push	 eax
  00c0c	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors
$LN48@update_ser:
$LN2@update_ser:

; 404  : 				}
; 405  : 
; 406  : 				//
; 407  : 				////////////////////////////////////////
; 408  : 
; 409  : 				break;
; 410  : 			}
; 411  : 		}
; 412  : 
; 413  : 		if (tacview_is_logging() && raw->ac.mob.alive)

  00c11	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00c18	0f 84 59 01 00
	00		 je	 $LN51@update_ser
  00c1e	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00c21	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00c24	83 e1 01	 and	 ecx, 1
  00c27	0f 84 4a 01 00
	00		 je	 $LN51@update_ser

; 414  : 		{
; 415  : 			int
; 416  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  00c2d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00c31	74 0a		 je	 SHORT $LN127@update_ser
  00c33	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c36	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c38	89 4d 9c	 mov	 DWORD PTR tv578[ebp], ecx
  00c3b	eb 24		 jmp	 SHORT $LN128@update_ser
$LN127@update_ser:
  00c3d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00c43	81 c2 33 01 00
	00		 add	 edx, 307		; 00000133H
  00c49	52		 push	 edx
  00c4a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c4f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c54	50		 push	 eax
  00c55	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c5a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv578[ebp], 0
$LN128@update_ser:
  00c61	b9 01 00 00 00	 mov	 ecx, 1
  00c66	85 c9		 test	 ecx, ecx
  00c68	74 09		 je	 SHORT $LN129@update_ser
  00c6a	c7 45 98 8e 00
	00 00		 mov	 DWORD PTR tv586[ebp], 142 ; 0000008eH
  00c71	eb 24		 jmp	 SHORT $LN130@update_ser
$LN129@update_ser:
  00c73	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00c79	81 c2 33 01 00
	00		 add	 edx, 307		; 00000133H
  00c7f	52		 push	 edx
  00c80	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c85	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c8a	50		 push	 eax
  00c8b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c90	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv586[ebp], 0
$LN130@update_ser:
  00c97	68 8e 00 00 00	 push	 142			; 0000008eH
  00c9c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00c9f	51		 push	 ecx
  00ca0	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv578[ebp], 1116
  00ca7	8b 45 98	 mov	 eax, DWORD PTR tv586[ebp]
  00caa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00cb1	ff d1		 call	 ecx
  00cb3	89 45 e4	 mov	 DWORD PTR _moved$2[ebp], eax

; 417  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  00cb6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00cba	74 0a		 je	 SHORT $LN131@update_ser
  00cbc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00cbf	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cc1	89 4d 9c	 mov	 DWORD PTR tv598[ebp], ecx
  00cc4	eb 24		 jmp	 SHORT $LN132@update_ser
$LN131@update_ser:
  00cc6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00ccc	81 c2 34 01 00
	00		 add	 edx, 308		; 00000134H
  00cd2	52		 push	 edx
  00cd3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cd8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cdd	50		 push	 eax
  00cde	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ce3	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv598[ebp], 0
$LN132@update_ser:
  00cea	b9 01 00 00 00	 mov	 ecx, 1
  00cef	85 c9		 test	 ecx, ecx
  00cf1	74 09		 je	 SHORT $LN133@update_ser
  00cf3	c7 45 98 b1 00
	00 00		 mov	 DWORD PTR tv606[ebp], 177 ; 000000b1H
  00cfa	eb 24		 jmp	 SHORT $LN134@update_ser
$LN133@update_ser:
  00cfc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00d02	81 c2 34 01 00
	00		 add	 edx, 308		; 00000134H
  00d08	52		 push	 edx
  00d09	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00d13	50		 push	 eax
  00d14	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d19	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv606[ebp], 0
$LN134@update_ser:
  00d20	68 b1 00 00 00	 push	 177			; 000000b1H
  00d25	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00d28	51		 push	 ecx
  00d29	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv598[ebp], 1116
  00d30	8b 45 98	 mov	 eax, DWORD PTR tv606[ebp]
  00d33	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00d3a	ff d1		 call	 ecx
  00d3c	89 45 e0	 mov	 DWORD PTR _rotated$1[ebp], eax

; 418  : 
; 419  : 			if (en == get_gunship_entity())

  00d3f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d42	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00d48	75 05		 jne	 SHORT $LN50@update_ser

; 420  : 				tacview_update_gunship();

  00d4a	e8 00 00 00 00	 call	 ?tacview_update_gunship@@YGXXZ ; tacview_update_gunship
$LN50@update_ser:

; 421  : 
; 422  : 			if (moved || rotated || command_line_tacview_logging < 3)

  00d4f	83 7d e4 00	 cmp	 DWORD PTR _moved$2[ebp], 0
  00d53	75 0f		 jne	 SHORT $LN52@update_ser
  00d55	83 7d e0 00	 cmp	 DWORD PTR _rotated$1[ebp], 0
  00d59	75 09		 jne	 SHORT $LN52@update_ser
  00d5b	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  00d62	7d 13		 jge	 SHORT $LN51@update_ser
$LN52@update_ser:

; 423  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  00d64	6a 00		 push	 0
  00d66	8b 45 e0	 mov	 eax, DWORD PTR _rotated$1[ebp]
  00d69	50		 push	 eax
  00d6a	8b 4d e4	 mov	 ecx, DWORD PTR _moved$2[ebp]
  00d6d	51		 push	 ecx
  00d6e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00d71	52		 push	 edx
  00d72	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN51@update_ser:

; 424  : 		}
; 425  : 	}
; 426  : 	else

  00d77	e9 b5 01 00 00	 jmp	 $LN14@update_ser
$LN16@update_ser:

; 427  : 	{
; 428  : 		if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_DEAD)

  00d7c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d80	74 0a		 je	 SHORT $LN135@update_ser
  00d82	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d85	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d87	89 4d 9c	 mov	 DWORD PTR tv625[ebp], ecx
  00d8a	eb 1d		 jmp	 SHORT $LN136@update_ser
$LN135@update_ser:
  00d8c	68 ac 01 00 00	 push	 428			; 000001acH
  00d91	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d96	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d9c	52		 push	 edx
  00d9d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00da2	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv625[ebp], 0
$LN136@update_ser:
  00da9	b8 01 00 00 00	 mov	 eax, 1
  00dae	85 c0		 test	 eax, eax
  00db0	74 09		 je	 SHORT $LN137@update_ser
  00db2	c7 45 98 97 00
	00 00		 mov	 DWORD PTR tv632[ebp], 151 ; 00000097H
  00db9	eb 1d		 jmp	 SHORT $LN138@update_ser
$LN137@update_ser:
  00dbb	68 ac 01 00 00	 push	 428			; 000001acH
  00dc0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dc5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00dcb	51		 push	 ecx
  00dcc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dd1	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv632[ebp], 0
$LN138@update_ser:
  00dd8	68 97 00 00 00	 push	 151			; 00000097H
  00ddd	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00de0	52		 push	 edx
  00de1	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv625[ebp], 1116
  00de8	8b 4d 98	 mov	 ecx, DWORD PTR tv632[ebp]
  00deb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00df2	ff d2		 call	 edx
  00df4	83 f8 02	 cmp	 eax, 2
  00df7	0f 85 11 01 00
	00		 jne	 $LN53@update_ser

; 429  : 		{
; 430  : 			raw->ac.death_timer -= get_delta_time ();

  00dfd	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00e00	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  00e08	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00e10	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00e13	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0

; 431  : 
; 432  : 			if (raw->ac.death_timer <= 0.0)

  00e1b	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00e1e	f3 0f 5a 80 10
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+272]
  00e26	0f 57 c9	 xorps	 xmm1, xmm1
  00e29	66 0f 2f c8	 comisd	 xmm1, xmm0
  00e2d	0f 82 d9 00 00
	00		 jb	 $LN57@update_ser

; 433  : 			{
; 434  : 				if (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00e33	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00e37	74 0a		 je	 SHORT $LN139@update_ser
  00e39	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00e3c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e3e	89 4d 9c	 mov	 DWORD PTR tv653[ebp], ecx
  00e41	eb 1d		 jmp	 SHORT $LN140@update_ser
$LN139@update_ser:
  00e43	68 b2 01 00 00	 push	 434			; 000001b2H
  00e48	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e4d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e53	52		 push	 edx
  00e54	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e59	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv653[ebp], 0
$LN140@update_ser:
  00e60	b8 01 00 00 00	 mov	 eax, 1
  00e65	85 c0		 test	 eax, eax
  00e67	74 09		 je	 SHORT $LN141@update_ser
  00e69	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv660[ebp], 156 ; 0000009cH
  00e70	eb 1d		 jmp	 SHORT $LN142@update_ser
$LN141@update_ser:
  00e72	68 b2 01 00 00	 push	 434			; 000001b2H
  00e77	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e7c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e82	51		 push	 ecx
  00e83	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e88	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv660[ebp], 0
$LN142@update_ser:
  00e8f	68 9c 00 00 00	 push	 156			; 0000009cH
  00e94	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00e97	52		 push	 edx
  00e98	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv653[ebp], 1116
  00e9f	8b 4d 98	 mov	 ecx, DWORD PTR tv660[ebp]
  00ea2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ea9	ff d2		 call	 edx
  00eab	85 c0		 test	 eax, eax
  00ead	75 4f		 jne	 SHORT $LN56@update_ser

; 435  : 				{
; 436  : 					//
; 437  : 					// don't destroy helicopters while they are still occupied by players (otherwise avionics / pilot-entity etc. don't get deinitialised)
; 438  : 					//
; 439  : 
; 440  : 					destroy_client_server_entity_family (en);

  00eaf	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00eb3	74 0a		 je	 SHORT $LN143@update_ser
  00eb5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00eb8	8b 08		 mov	 ecx, DWORD PTR [eax]
  00eba	89 4d 9c	 mov	 DWORD PTR tv673[ebp], ecx
  00ebd	eb 24		 jmp	 SHORT $LN144@update_ser
$LN143@update_ser:
  00ebf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00ec5	81 c2 4b 01 00
	00		 add	 edx, 331		; 0000014bH
  00ecb	52		 push	 edx
  00ecc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ed6	50		 push	 eax
  00ed7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00edc	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv673[ebp], 0
$LN144@update_ser:
  00ee3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00ee6	51		 push	 ecx
  00ee7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00eed	c1 e2 02	 shl	 edx, 2
  00ef0	8b 45 9c	 mov	 eax, DWORD PTR tv673[ebp]
  00ef3	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00efa	ff d1		 call	 ecx

; 441  : 				}
; 442  : 				else

  00efc	eb 0e		 jmp	 SHORT $LN57@update_ser
$LN56@update_ser:

; 443  : 				{
; 444  : 					raw->ac.death_timer = 0.0;

  00efe	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00f01	0f 57 c0	 xorps	 xmm0, xmm0
  00f04	f3 0f 11 80 10
	01 00 00	 movss	 DWORD PTR [eax+272], xmm0
$LN57@update_ser:

; 445  : 				}
; 446  : 			}
; 447  : 		}
; 448  : 		else

  00f0c	eb 23		 jmp	 SHORT $LN14@update_ser
$LN53@update_ser:

; 449  : 		{
; 450  : 			for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00f0e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00f15	eb 09		 jmp	 SHORT $LN15@update_ser
$LN13@update_ser:
  00f17	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00f1a	83 c0 01	 add	 eax, 1
  00f1d	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN15@update_ser:
  00f20	83 7d f4 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00f24	7d 0b		 jge	 SHORT $LN14@update_ser

; 451  : 			{
; 452  : 				helicopter_death_movement (en);

  00f26	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00f29	50		 push	 eax
  00f2a	e8 00 00 00 00	 call	 ?helicopter_death_movement@@YGXPAUENTITY@@@Z ; helicopter_death_movement

; 453  : 			}

  00f2f	eb e6		 jmp	 SHORT $LN13@update_ser
$LN14@update_ser:

; 454  : 		}
; 455  : 	}
; 456  : }

  00f31	5f		 pop	 edi
  00f32	5e		 pop	 esi
  00f33	5b		 pop	 ebx
  00f34	8b e5		 mov	 esp, ebp
  00f36	5d		 pop	 ebp
  00f37	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
;	COMDAT ?update_rotors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv132 = -84						; size = 8
tv133 = -76						; size = 8
tv77 = -76						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_rotors@@YGXPAUENTITY@@@Z PROC			; update_rotors, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 89   : 	helicopter
; 90   : 		*raw;
; 91   : 
; 92   : 	raw = (helicopter *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 93   : 
; 94   : 	if (!get_local_entity_parent (en, LIST_TYPE_FOLLOWER))

  00012	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00016	74 0a		 je	 SHORT $LN4@update_rot
  00018	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00020	eb 1a		 jmp	 SHORT $LN5@update_rot
$LN4@update_rot:
  00022	6a 5e		 push	 94			; 0000005eH
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00029	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00035	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN5@update_rot:
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	85 c0		 test	 eax, eax
  00043	74 09		 je	 SHORT $LN6@update_rot
  00045	c7 45 b4 0d 00
	00 00		 mov	 DWORD PTR tv77[ebp], 13	; 0000000dH
  0004c	eb 1a		 jmp	 SHORT $LN7@update_rot
$LN6@update_rot:
  0004e	6a 5e		 push	 94			; 0000005eH
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0005b	51		 push	 ecx
  0005c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00061	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN7@update_rot:
  00068	6a 0d		 push	 13			; 0000000dH
  0006a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0006d	52		 push	 edx
  0006e	69 45 b8 b4 00
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 180
  00075	8b 4d b4	 mov	 ecx, DWORD PTR tv77[ebp]
  00078	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0007f	ff d2		 call	 edx
  00081	85 c0		 test	 eax, eax
  00083	0f 85 ac 00 00
	00		 jne	 $LN2@update_rot

; 95   : 	{
; 96   : 		raw->main_rotor_rpm -= 5.0 * get_delta_time ();

  00089	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00091	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00099	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0009c	f3 0f 5a 88 8c
	01 00 00	 cvtss2sd xmm1, DWORD PTR [eax+396]
  000a4	f2 0f 5c c8	 subsd	 xmm1, xmm0
  000a8	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000af	f3 0f 11 81 8c
	01 00 00	 movss	 DWORD PTR [ecx+396], xmm0

; 97   : 
; 98   : 		raw->main_rotor_rpm = bound (raw->main_rotor_rpm, 0.0, 100.0);

  000b7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ba	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  000c2	0f 57 c9	 xorps	 xmm1, xmm1
  000c5	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c9	76 0a		 jbe	 SHORT $LN10@update_rot
  000cb	0f 57 c0	 xorps	 xmm0, xmm0
  000ce	f2 0f 11 45 b4	 movsd	 QWORD PTR tv133[ebp], xmm0
  000d3	eb 3e		 jmp	 SHORT $LN11@update_rot
$LN10@update_rot:
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000d8	f3 0f 5a 81 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+396]
  000e0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  000e8	76 0f		 jbe	 SHORT $LN8@update_rot
  000ea	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  000f2	f2 0f 11 45 ac	 movsd	 QWORD PTR tv132[ebp], xmm0
  000f7	eb 10		 jmp	 SHORT $LN9@update_rot
$LN8@update_rot:
  000f9	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000fc	f3 0f 5a 82 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+396]
  00104	f2 0f 11 45 ac	 movsd	 QWORD PTR tv132[ebp], xmm0
$LN9@update_rot:
  00109	f2 0f 10 45 ac	 movsd	 xmm0, QWORD PTR tv132[ebp]
  0010e	f2 0f 11 45 b4	 movsd	 QWORD PTR tv133[ebp], xmm0
$LN11@update_rot:
  00113	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv133[ebp]
  00118	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0011b	f3 0f 11 80 8c
	01 00 00	 movss	 DWORD PTR [eax+396], xmm0

; 99   : 
; 100  : 		raw->tail_rotor_rpm = raw->main_rotor_rpm;

  00123	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00126	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00129	8b 91 8c 01 00
	00		 mov	 edx, DWORD PTR [ecx+396]
  0012f	89 90 a8 01 00
	00		 mov	 DWORD PTR [eax+424], edx
$LN2@update_rot:

; 101  : 	}
; 102  : }

  00135	5f		 pop	 edi
  00136	5e		 pop	 esi
  00137	5b		 pop	 ebx
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 04 00	 ret	 4
?update_rotors@@YGXPAUENTITY@@@Z ENDP			; update_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
;	COMDAT ?interpolate_entity_position@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv242 = -104						; size = 8
tv193 = -100						; size = 4
tv150 = -100						; size = 4
tv130 = -100						; size = 4
tv77 = -100						; size = 4
tv239 = -96						; size = 4
tv185 = -96						; size = 4
tv142 = -96						; size = 4
tv90 = -96						; size = 4
tv70 = -96						; size = 4
_delta_time$ = -28					; size = 4
_connection$ = -24					; size = 4
_position$ = -20					; size = 4
_motion_vector$ = -16					; size = 4
_new_position$ = -12					; size = 12
_en$ = 8						; size = 4
?interpolate_entity_position@@YGXPAUENTITY@@@Z PROC	; interpolate_entity_position, COMDAT

; 806  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 807  : 
; 808  : 	vec3d
; 809  : 		new_position,
; 810  : 		*motion_vector,
; 811  : 		*position;
; 812  : 
; 813  : 	connection_list_type
; 814  : 		*connection;
; 815  : 
; 816  : 	float
; 817  : 		delta_time;
; 818  : 
; 819  : 	if ((!command_line_comms_interpolate_gunships) || (get_local_entity_int_value (en, INT_TYPE_LANDED)))

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_comms_interpolate_gunships@@3HA, 0 ; command_line_comms_interpolate_gunships
  00010	74 79		 je	 SHORT $LN3@interpolat
  00012	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00016	74 0a		 je	 SHORT $LN9@interpolat
  00018	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d a0	 mov	 DWORD PTR tv70[ebp], ecx
  00020	eb 1d		 jmp	 SHORT $LN10@interpolat
$LN9@interpolat:
  00022	68 33 03 00 00	 push	 819			; 00000333H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00038	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN10@interpolat:
  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	85 c0		 test	 eax, eax
  00046	74 09		 je	 SHORT $LN11@interpolat
  00048	c7 45 9c 73 00
	00 00		 mov	 DWORD PTR tv77[ebp], 115 ; 00000073H
  0004f	eb 1d		 jmp	 SHORT $LN12@interpolat
$LN11@interpolat:
  00051	68 33 03 00 00	 push	 819			; 00000333H
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00067	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN12@interpolat:
  0006e	6a 73		 push	 115			; 00000073H
  00070	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00073	52		 push	 edx
  00074	69 45 a0 5c 04
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 1116
  0007b	8b 4d 9c	 mov	 ecx, DWORD PTR tv77[ebp]
  0007e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00085	ff d2		 call	 edx
  00087	85 c0		 test	 eax, eax
  00089	74 05		 je	 SHORT $LN2@interpolat
$LN3@interpolat:

; 820  : 	{
; 821  : 
; 822  : 		return;

  0008b	e9 40 02 00 00	 jmp	 $LN1@interpolat
$LN2@interpolat:

; 823  : 	}
; 824  : 
; 825  : 	position = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00090	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00094	74 0a		 je	 SHORT $LN13@interpolat
  00096	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d a0	 mov	 DWORD PTR tv90[ebp], ecx
  0009e	eb 21		 jmp	 SHORT $LN14@interpolat
$LN13@interpolat:
  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
  000a6	83 c2 13	 add	 edx, 19			; 00000013H
  000a9	52		 push	 edx
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ba	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN14@interpolat:
  000c1	b9 01 00 00 00	 mov	 ecx, 1
  000c6	85 c9		 test	 ecx, ecx
  000c8	74 09		 je	 SHORT $LN15@interpolat
  000ca	c7 45 9c 08 00
	00 00		 mov	 DWORD PTR tv130[ebp], 8
  000d1	eb 21		 jmp	 SHORT $LN16@interpolat
$LN15@interpolat:
  000d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
  000d9	83 c2 13	 add	 edx, 19			; 00000013H
  000dc	52		 push	 edx
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ed	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN16@interpolat:
  000f4	6a 08		 push	 8
  000f6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f9	51		 push	 ecx
  000fa	6b 55 a0 60	 imul	 edx, DWORD PTR tv90[ebp], 96
  000fe	8b 45 9c	 mov	 eax, DWORD PTR tv130[ebp]
  00101	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00108	ff d1		 call	 ecx
  0010a	89 45 ec	 mov	 DWORD PTR _position$[ebp], eax

; 826  : 
; 827  : 	motion_vector = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_MOTION_VECTOR);

  0010d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00111	74 0a		 je	 SHORT $LN17@interpolat
  00113	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00116	8b 08		 mov	 ecx, DWORD PTR [eax]
  00118	89 4d a0	 mov	 DWORD PTR tv142[ebp], ecx
  0011b	eb 21		 jmp	 SHORT $LN18@interpolat
$LN17@interpolat:
  0011d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
  00123	83 c2 15	 add	 edx, 21			; 00000015H
  00126	52		 push	 edx
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00137	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN18@interpolat:
  0013e	b9 01 00 00 00	 mov	 ecx, 1
  00143	85 c9		 test	 ecx, ecx
  00145	74 09		 je	 SHORT $LN19@interpolat
  00147	c7 45 9c 06 00
	00 00		 mov	 DWORD PTR tv150[ebp], 6
  0014e	eb 21		 jmp	 SHORT $LN20@interpolat
$LN19@interpolat:
  00150	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
  00156	83 c2 15	 add	 edx, 21			; 00000015H
  00159	52		 push	 edx
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN20@interpolat:
  00171	6a 06		 push	 6
  00173	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00176	51		 push	 ecx
  00177	6b 55 a0 60	 imul	 edx, DWORD PTR tv142[ebp], 96
  0017b	8b 45 9c	 mov	 eax, DWORD PTR tv150[ebp]
  0017e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00185	ff d1		 call	 ecx
  00187	89 45 f0	 mov	 DWORD PTR _motion_vector$[ebp], eax

; 828  : 
; 829  : 	if (get_comms_model () == COMMS_MODEL_CLIENT)

  0018a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  00191	75 10		 jne	 SHORT $LN4@interpolat

; 830  : 	{
; 831  : 
; 832  : 		connection = get_connection_list_item (get_server_id ());

  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_server_id@@3KA ; system_server_id
  00198	50		 push	 eax
  00199	e8 00 00 00 00	 call	 ?get_connection_list_item@@YGPAUCONNECTION_LIST_TYPE@@K@Z ; get_connection_list_item
  0019e	89 45 e8	 mov	 DWORD PTR _connection$[ebp], eax

; 833  : 	}
; 834  : 	else

  001a1	eb 0c		 jmp	 SHORT $LN5@interpolat
$LN4@interpolat:

; 835  : 	{
; 836  : 
; 837  : 		connection = get_gunships_connection_list_item (en);

  001a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?get_gunships_connection_list_item@@YGPAUCONNECTION_LIST_TYPE@@PAUENTITY@@@Z ; get_gunships_connection_list_item
  001ac	89 45 e8	 mov	 DWORD PTR _connection$[ebp], eax
$LN5@interpolat:

; 838  : 	}
; 839  : 
; 840  : 	if (connection)

  001af	83 7d e8 00	 cmp	 DWORD PTR _connection$[ebp], 0
  001b3	0f 84 17 01 00
	00		 je	 $LN7@interpolat

; 841  : 	{
; 842  : 
; 843  : 		delta_time = (float) (get_system_time () - connection->interpolation_time) / TIME_1_SECOND;

  001b9	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  001be	8b 4d e8	 mov	 ecx, DWORD PTR _connection$[ebp]
  001c1	2b 41 40	 sub	 eax, DWORD PTR [ecx+64]
  001c4	89 45 a0	 mov	 DWORD PTR tv239[ebp], eax
  001c7	f2 0f 2a 45 a0	 cvtsi2sd xmm0, DWORD PTR tv239[ebp]
  001cc	8b 55 a0	 mov	 edx, DWORD PTR tv239[ebp]
  001cf	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  001d2	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  001db	f2 0f 11 45 98	 movsd	 QWORD PTR tv242[ebp], xmm0
  001e0	f2 0f 5a 45 98	 cvtsd2ss xmm0, QWORD PTR tv242[ebp]
  001e5	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@447a0000
  001ed	f3 0f 11 45 e4	 movss	 DWORD PTR _delta_time$[ebp], xmm0

; 844  : 
; 845  : 		new_position.x = position->x + motion_vector->x * delta_time;

  001f2	8b 45 f0	 mov	 eax, DWORD PTR _motion_vector$[ebp]
  001f5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001f9	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _delta_time$[ebp]
  001fe	8b 4d ec	 mov	 ecx, DWORD PTR _position$[ebp]
  00201	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00205	f3 0f 11 45 f4	 movss	 DWORD PTR _new_position$[ebp], xmm0

; 846  : 		new_position.y = position->y + motion_vector->y * delta_time;

  0020a	8b 45 f0	 mov	 eax, DWORD PTR _motion_vector$[ebp]
  0020d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00212	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _delta_time$[ebp]
  00217	8b 4d ec	 mov	 ecx, DWORD PTR _position$[ebp]
  0021a	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  0021f	f3 0f 11 45 f8	 movss	 DWORD PTR _new_position$[ebp+4], xmm0

; 847  : 		new_position.z = position->z + motion_vector->z * delta_time;

  00224	8b 45 f0	 mov	 eax, DWORD PTR _motion_vector$[ebp]
  00227	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0022c	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _delta_time$[ebp]
  00231	8b 4d ec	 mov	 ecx, DWORD PTR _position$[ebp]
  00234	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00239	f3 0f 11 45 fc	 movss	 DWORD PTR _new_position$[ebp+8], xmm0

; 848  : 
; 849  : 		set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &new_position);

  0023e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00242	74 0a		 je	 SHORT $LN21@interpolat
  00244	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00247	8b 08		 mov	 ecx, DWORD PTR [eax]
  00249	89 4d a0	 mov	 DWORD PTR tv185[ebp], ecx
  0024c	eb 21		 jmp	 SHORT $LN22@interpolat
$LN21@interpolat:
  0024e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
  00254	83 c2 2b	 add	 edx, 43			; 0000002bH
  00257	52		 push	 edx
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00262	50		 push	 eax
  00263	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00268	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN22@interpolat:
  0026f	b9 01 00 00 00	 mov	 ecx, 1
  00274	85 c9		 test	 ecx, ecx
  00276	74 09		 je	 SHORT $LN23@interpolat
  00278	c7 45 9c 08 00
	00 00		 mov	 DWORD PTR tv193[ebp], 8
  0027f	eb 21		 jmp	 SHORT $LN24@interpolat
$LN23@interpolat:
  00281	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??interpolate_entity_position@@YGXPAUENTITY@@@Z@4JA
  00287	83 c2 2b	 add	 edx, 43			; 0000002bH
  0028a	52		 push	 edx
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ONDIIOIL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029b	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN24@interpolat:
  002a2	8d 4d f4	 lea	 ecx, DWORD PTR _new_position$[ebp]
  002a5	51		 push	 ecx
  002a6	6a 08		 push	 8
  002a8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002ab	52		 push	 edx
  002ac	6b 45 a0 60	 imul	 eax, DWORD PTR tv185[ebp], 96
  002b0	8b 4d 9c	 mov	 ecx, DWORD PTR tv193[ebp]
  002b3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  002ba	ff d2		 call	 edx

; 850  : 
; 851  : 		if (get_comms_model () == COMMS_MODEL_SERVER)

  002bc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  002c3	75 0b		 jne	 SHORT $LN7@interpolat

; 852  : 		{
; 853  : 
; 854  : 			connection->interpolation_time = get_system_time ();

  002c5	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  002ca	8b 4d e8	 mov	 ecx, DWORD PTR _connection$[ebp]
  002cd	89 41 40	 mov	 DWORD PTR [ecx+64], eax
$LN7@interpolat:
$LN1@interpolat:

; 855  : 		}
; 856  : 
; 857  : 		#if DEBUG_MODULE
; 858  : 
; 859  : 		debug_log ("SERVER: interpolating entity %s (%d) old [%f, %f, %f], new [%f, %f, %f], motion_vector [%f, %f, %f], deltatime %f",
; 860  : 						get_local_entity_string (en, STRING_TYPE_FULL_NAME),
; 861  : 						get_local_entity_index (en),
; 862  : 						position->x, position->y, position->z,
; 863  : 						new_position.x, new_position.y, new_position.z,
; 864  : 						motion_vector->x, motion_vector->y, motion_vector->z,
; 865  : 						delta_time);
; 866  : 
; 867  : 		#endif
; 868  : 	}
; 869  : }

  002d0	5f		 pop	 edi
  002d1	5e		 pop	 esi
  002d2	5b		 pop	 ebx
  002d3	8b e5		 mov	 esp, ebp
  002d5	5d		 pop	 ebp
  002d6	c2 04 00	 ret	 4
?interpolate_entity_position@@YGXPAUENTITY@@@Z ENDP	; interpolate_entity_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
;	COMDAT ?reset_interpolation_timer@@YGXXZ
_TEXT	SEGMENT
_connection$ = -4					; size = 4
?reset_interpolation_timer@@YGXXZ PROC			; reset_interpolation_timer, COMDAT

; 783  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 784  : 
; 785  : 	connection_list_type
; 786  : 		*connection;
; 787  : 
; 788  : 	if (get_comms_model () == COMMS_MODEL_CLIENT)

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  00010	75 1f		 jne	 SHORT $LN1@reset_inte

; 789  : 	{
; 790  : 
; 791  : 		connection = get_connection_list_item (get_server_id ());

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_server_id@@3KA ; system_server_id
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?get_connection_list_item@@YGPAUCONNECTION_LIST_TYPE@@K@Z ; get_connection_list_item
  0001d	89 45 fc	 mov	 DWORD PTR _connection$[ebp], eax

; 792  : 
; 793  : 		if (connection)

  00020	83 7d fc 00	 cmp	 DWORD PTR _connection$[ebp], 0
  00024	74 0b		 je	 SHORT $LN1@reset_inte

; 794  : 		{
; 795  : 
; 796  : 			connection->interpolation_time = get_system_time ();

  00026	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _connection$[ebp]
  0002e	89 41 40	 mov	 DWORD PTR [ecx+64], eax
$LN1@reset_inte:

; 797  : 		}
; 798  : 	}
; 799  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?reset_interpolation_timer@@YGXXZ ENDP			; reset_interpolation_timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_updt.c
;	COMDAT ?overload_helicopter_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_helicopter_update_functions@@YGXXZ PROC	; overload_helicopter_update_functions, COMDAT

; 772  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 773  : 	fn_update_client_server_entity[ENTITY_TYPE_HELICOPTER][COMMS_MODEL_SERVER]  	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 0e	 imul	 ecx, eax, 14
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 774  : 
; 775  : 	fn_update_client_server_entity[ENTITY_TYPE_HELICOPTER][COMMS_MODEL_CLIENT]  	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 0e	 imul	 ecx, eax, 14
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 776  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_helicopter_update_functions@@YGXXZ ENDP	; overload_helicopter_update_functions
_TEXT	ENDS
END
