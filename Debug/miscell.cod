; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\misc\miscell.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?int_bit_count@@YGHI@Z				; int_bit_count
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\miscell.c
;	COMDAT ?int_bit_count@@YGHI@Z
_TEXT	SEGMENT
_count$ = -4						; size = 4
_value$ = 8						; size = 4
?int_bit_count@@YGHI@Z PROC				; int_bit_count, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 
; 82   : 	int
; 83   : 		count;
; 84   : 
; 85   : 	count = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN2@int_bit_co:

; 86   : 
; 87   : 	while (value)

  00010	83 7d 08 00	 cmp	 DWORD PTR _value$[ebp], 0
  00014	74 1b		 je	 SHORT $LN3@int_bit_co

; 88   : 	{
; 89   : 
; 90   : 		if (value & 0x1)

  00016	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 09		 je	 SHORT $LN4@int_bit_co

; 91   : 		{
; 92   : 
; 93   : 			count ++;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@int_bit_co:

; 94   : 		}
; 95   : 
; 96   : 		value = value >> 1;

  00027	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  0002a	d1 e8		 shr	 eax, 1
  0002c	89 45 08	 mov	 DWORD PTR _value$[ebp], eax

; 97   : 	}

  0002f	eb df		 jmp	 SHORT $LN2@int_bit_co
$LN3@int_bit_co:

; 98   : 
; 99   : 	return count;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]

; 100  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?int_bit_count@@YGHI@Z ENDP				; int_bit_count
_TEXT	ENDS
END
