; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\wutcfg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?WUT_filename@@3PADA				; WUT_filename
PUBLIC	?session_WUT_filename@@3PADA			; session_WUT_filename
_BSS	SEGMENT
?WUT_filename@@3PADA DB 080H DUP (?)			; WUT_filename
?session_WUT_filename@@3PADA DB 080H DUP (?)		; session_WUT_filename
_BSS	ENDS
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfscanf_l
PUBLIC	_fscanf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	?strstr@@YAPADQADQBD@Z				; strstr
PUBLIC	?parse_WUT_file@@YGXPBD@Z			; parse_WUT_file
PUBLIC	?ReadWutFile@@YGXPBD@Z				; ReadWutFile
PUBLIC	?get_values@@YGXPADPAMPAH@Z			; get_values
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_05KCDNKPCA@?$CFf?5?$CFf@			; `string'
PUBLIC	??_C@_05OKMLJOMC@?$CFd?5?$CFd@			; `string'
PUBLIC	??_C@_0P@LJCJGBIK@try?5wut?5?$CFf?5?$CFd?6@	; `string'
PUBLIC	??_C@_0BP@IONJHCKF@WUT?5file?5cannot?5be?5found?3?5?$FL?$CFs?$FN@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0BN@IELBJLGL@Error?5opening?5WUT?5file?3?5?$FL?$CFs?$FN@ ; `string'
PUBLIC	??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@		; `string'
PUBLIC	??_C@_04DBHEMPKL@GWUT@				; `string'
PUBLIC	??_C@_0BK@JKJBJHJL@Helicopters?5and?5Aircrafts@	; `string'
PUBLIC	??_C@_0CB@ENNMBFCN@Ground?5Vehicles?0?5Ships?0?5Infantr@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0CJ@IJODAPMN@Centre?5Of?5Gravity?5To?5Ground?5Dis@ ; `string'
PUBLIC	??_C@_0DD@GNFBPOBH@Centre?5Of?5Gravity?5To?5Ground?5Dis@ ; `string'
PUBLIC	??_C@_0BM@MFIJCCBF@Chase?5View?5Min?5Distance?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BM@NAACPGOH@Chase?5View?5Max?5Distance?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0CB@BDBCEJFP@Chase?5View?5Min?5Distance?5Test?5?$HLm@ ; `string'
PUBLIC	??_C@_0CB@FCAFHGNJ@Chase?5View?5Max?5Distance?5Test?5?$HLm@ ; `string'
PUBLIC	??_C@_0BD@OEMFHODB@Cruise?5Speed?5?$HLm?1s?$HN@	; `string'
PUBLIC	??_C@_0BE@PEKHEHEB@Cruise?5Altitude?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BD@CPKNOMFM@Atack?5Altitude?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BM@ODNHHNHP@Destroyed?5Bank?5Offset?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_0BN@LONNCLAI@Destroyed?5Pitch?5offset?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_0BF@FALBLCJK@Fuselage?5Angle?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_0BH@BJDAHCCJ@Liftoff?5Velocity?5?$HLm?1s?$HN@ ; `string'
PUBLIC	??_C@_0BN@LEEJHMCH@Main?5Rotor?5Shaft?5Angle?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_0BL@OCOOGONP@Main?5Rotor?5Direction?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_0CC@JFPHJGFB@Main?5Rotor?5Blade?5Drop?5Angle?5?$HLra@ ; `string'
PUBLIC	??_C@_0BK@HMNACDPM@Propellor?5Direction?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_0BG@OCAKCHFD@Max?5Turn?5Rate?5?$HLrad?1s?$HN@ ; `string'
PUBLIC	??_C@_0P@LBHPJAGL@Max?5Roll?5?$HLrad?$HN@	; `string'
PUBLIC	??_C@_0BM@PNCMOCEO@Max?5Vertical?5Turn?5Allowance@ ; `string'
PUBLIC	??_C@_0BB@PFCBHFKL@Avoidance?5Radius@		; `string'
PUBLIC	??_C@_0O@IGBDMLBA@G?5Max?5?$HLm?1s?1s?$HN@	; `string'
PUBLIC	??_C@_0N@PDJLBFAM@Power?5Output@		; `string'
PUBLIC	??_C@_0BF@NIFLMKPE@Tail?5Rotor?5Direction@	; `string'
PUBLIC	??_C@_0BB@MKFGJMOP@Recon?5Radius?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BC@OGDJBMHF@Scan?5Interval?5?$HLs?$HN@	; `string'
PUBLIC	??_C@_0BD@HOHBHCPP@Air?5Scan?5Range?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BG@LBLAIIJO@Ground?5Scan?5Range?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0L@DHPOMHGL@Air?5Threat@			; `string'
PUBLIC	??_C@_0O@IMGNHANL@Ground?5Threat@		; `string'
PUBLIC	??_C@_0N@MGAEAJBP@Ammo?5Economy@		; `string'
PUBLIC	??_C@_0BE@DBMGBNOK@Fuel?5Default?5Weight@	; `string'
PUBLIC	??_C@_0N@OAJHMOAD@Fuel?5Economy@		; `string'
PUBLIC	??_C@_0BB@CAKEMKPL@Structure?5Points@		; `string'
PUBLIC	??_C@_0CI@MBGDBBEF@Weapons?0?5Decoys?0?5Crate?0?5Ejectio@ ; `string'
PUBLIC	??_C@_0BE@HKCOICOH@?5LCAC?5?$CIair?5cushion?$CJ@ ; `string'
PUBLIC	??_C@_0BM@EOKICKPE@Landing?5Craft?5Air?5Cushioned@ ; `string'
PUBLIC	??_C@_05HJCMAJDB@?5US?5I@			; `string'
PUBLIC	??_C@_08OOLPMJMC@Infantry@			; `string'
PUBLIC	??_C@_0BD@HPGMILFF@?5US?5I?5SAM?5Standing@	; `string'
PUBLIC	??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@		; `string'
PUBLIC	??_C@_0BD@LFFKINOB@?5US?5I?5Sam?5Kneeling@	; `string'
PUBLIC	??_C@_06LBEPEJAH@?5CIS?5I@			; `string'
PUBLIC	??_C@_0BE@EKMNLADL@?5CIS?5I?5SAM?5Standing@	; `string'
PUBLIC	??_C@_0BE@IAPLLGIP@?5CIS?5I?5Sam?5Kneeling@	; `string'
PUBLIC	??_C@_0BG@OBHPCBDC@Cruise?5Velocity?5?$HLm?1s?$HN@ ; `string'
PUBLIC	??_C@_0BA@JLAPAIN@Axle?5Length?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BB@EDNFIGLK@Max?5Acceleration@		; `string'
PUBLIC	??_C@_0M@LPPLFPLJ@Speed?5?$HLm?1s?$HN@		; `string'
PUBLIC	??_C@_0BA@DBBFPNFF@Recon?5Range?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BD@DLDCANEE@Air?5Search?5Min?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BD@NNFCKCKF@Air?5Search?5Max?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BG@MNOIBNMI@Front?5Damage?5Modifier@	; `string'
PUBLIC	??_C@_0BG@JEOHLAID@Flank?5Damage?5Modifier@	; `string'
PUBLIC	??_C@_0BF@BBEELPEJ@Rear?5Damage?5Modifier@	; `string'
PUBLIC	??_C@_08BDANDDMK@Keysites@			; `string'
PUBLIC	??_C@_08OHEOGKEH@Guidance@			; `string'
PUBLIC	??_C@_0M@MLKPGGPG@Aiming?5Type@			; `string'
PUBLIC	??_C@_0L@EAIBAFFN@Decoy?5Type@			; `string'
PUBLIC	??_C@_0N@LGMEHPCE@Warhead?5Type@		; `string'
PUBLIC	??_C@_0M@CBBNJOFE@Threat?5Type@			; `string'
PUBLIC	??_C@_0BN@PLCBKFOK@Launch?5Sound?5Effect?5Sub?5Type@ ; `string'
PUBLIC	??_C@_0BN@EAHBKPCE@Interior?5Launch?5Sound?5Effect@ ; `string'
PUBLIC	??_C@_0BN@KHCANHMJ@Exterior?5Launch?5Sound?5Effect@ ; `string'
PUBLIC	??_C@_0BI@KKLAJHCJ@Continuous?5Sound?5Effect@	; `string'
PUBLIC	??_C@_0BL@CMJDCDJC@Weapon?5Selected?5CPG?5Speech@ ; `string'
PUBLIC	??_C@_0BG@CFBBAMAI@Weapon?5Low?5CPG?5Speech@	; `string'
PUBLIC	??_C@_0BG@DNCDOMEI@Weapon?5Out?5CPG?5Speech@	; `string'
PUBLIC	??_C@_0BL@DLBPJDDA@Weapon?5Launched?5CPG?5Speech@ ; `string'
PUBLIC	??_C@_0BP@GEIANBOO@Weapon?5Launched?5Wingman?5Speech@ ; `string'
PUBLIC	??_C@_0BG@KLFIDINK@Report?5Ammo?5Low?5Count@	; `string'
PUBLIC	??_C@_09CMDBOLEP@Gun?5Shake@			; `string'
PUBLIC	??_C@_0M@FGOHHADI@Damage?5Soft@			; `string'
PUBLIC	??_C@_0M@PAOFLIGF@Damage?5Hard@			; `string'
PUBLIC	??_C@_0BB@KDCKGBOC@Smoke?5Trail?5Type@		; `string'
PUBLIC	??_C@_0CE@IJJCBDEE@Acquires?5Launchers?5Forward?5Velo@ ; `string'
PUBLIC	??_C@_0P@MGKJEPAN@Ignore?5Gravity@		; `string'
PUBLIC	??_C@_0BG@FNLJLNGG@Survive?5Ground?5Impact@	; `string'
PUBLIC	??_C@_0BK@PHIEOBIL@In?5Flight?5Collision?5Check@ ; `string'
PUBLIC	??_C@_0BA@CFPMOMGG@Viewable?5Weapon@		; `string'
PUBLIC	??_C@_0BB@DKJFJHFD@Boresight?5Weapon@		; `string'
PUBLIC	??_C@_0BI@FHHHLFMJ@Hellfire?5Flight?5Profile@	; `string'
PUBLIC	??_C@_0N@NOKHBEJI@Weapon?5Class@		; `string'
PUBLIC	??_C@_0M@FBBDECHM@Weight?5?$HLkg?$HN@		; `string'
PUBLIC	??_C@_0O@JEEPCLCN@Min?5Range?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0O@CNGJLAFM@Max?5Range?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BP@COCFOLBA@Effective?5Range?5used?5by?5AI?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BD@GBLCNMDJ@Min?5Range?5LOAL?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BD@MGIGFMEA@Max?5Range?5LOAL?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BG@DHDDEJN@Max?5Range?5Error?5Ratio@	; `string'
PUBLIC	??_C@_0BG@FHHNOOBI@Muzzle?5Velocity?5?$HLm?1s?$HN@ ; `string'
PUBLIC	??_C@_0BK@GDMHIALJ@Muzzle?5Velocity?5Max?5Error@ ; `string'
PUBLIC	??_C@_0O@EPFNBKHL@Burn?5Time?5?$HLs?$HN@	; `string'
PUBLIC	??_C@_0BA@IDBDDLKC@Cruise?5Time?5?$HLs?$HN@	; `string'
PUBLIC	??_C@_0BK@BBANFOKH@Cruise?5Time?5Max?5Error?5?$HLs?$HN@ ; `string'
PUBLIC	??_C@_0BB@IFHGLHGK@Inhibit?5Time?5?$HLs?$HN@	; `string'
PUBLIC	??_C@_0P@IBFPLHAG@Burst?5Duration@		; `string'
PUBLIC	??_C@_0N@BAHLONNC@Rate?5Of?5Fire@		; `string'
PUBLIC	??_C@_0BA@FNJDLEKK@Reload?5Time?5?$HLs?$HN@	; `string'
PUBLIC	??_C@_0BL@LGLCJJOI@Seeker?5Field?5Of?5View?5?$HLrad?$HN@ ; `string'
PUBLIC	??_C@_06LCLFDFOL@Groups@			; `string'
PUBLIC	??_C@_0BC@HHNMENPP@Air?5Ground?5Supply@		; `string'
PUBLIC	??_C@_0P@MCCGIBLD@Air?5Air?5Supply@		; `string'
PUBLIC	??_C@_0L@PIEEDLPO@Ammo?5Usage@			; `string'
PUBLIC	??_C@_0L@NAFBEKJK@Fuel?5Usage@			; `string'
PUBLIC	??_C@_0L@CCPICNPI@Importance@			; `string'
PUBLIC	??_C@_0BD@CHCMHIOB@Minimum?5Efficiency@		; `string'
PUBLIC	??_C@_0BG@EDLEGGDJ@Importance?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BI@MCCEFLGH@Air?5Coverage?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BD@GCBHIJJH@Recon?5Distance?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0BG@NEMMIFLJ@Sector?5Side?5Max?5Value@	; `string'
PUBLIC	??_C@_0BA@CJDOCCEN@Binary?5?$CIcol?413?$CJ@	; `string'
PUBLIC	??_C@_0BC@JGDFAHDD@Report?5Ammo?5Level@		; `string'
PUBLIC	??_C@_0BC@LOCAHGFH@Report?5Fuel?5Level@		; `string'
PUBLIC	??_C@_0BA@CODHIKJB@Binary?5?$CIcol?417?$CJ@	; `string'
PUBLIC	??_C@_05EEGKELMG@Tasks@				; `string'
PUBLIC	??_C@_0P@MFNJAIE@Group?5Category@		; `string'
PUBLIC	??_C@_0P@BIEAHGIC@Registery?5List@		; `string'
PUBLIC	??_C@_0L@NDNAHEHM@Group?5List@			; `string'
PUBLIC	??_C@_0O@GEKIGJJE@Movement?5Type@		; `string'
PUBLIC	??_C@_0N@FFCGCLPK@Landing?5Type@		; `string'
PUBLIC	??_C@_0BE@EFBNDEEI@Default?5Entity?5Type@	; `string'
PUBLIC	??_C@_0BM@IEGMLLNF@Default?5Blue?5Force?5Sub?5Type@ ; `string'
PUBLIC	??_C@_0BL@EHEFMCHJ@Default?5Red?5Force?5Sub?5Type@ ; `string'
PUBLIC	??_C@_0BI@EHALIKOP@Default?5Group?5Formation@	; `string'
PUBLIC	??_C@_0BH@DBMNJNOG@Default?5Group?5Division@	; `string'
PUBLIC	??_C@_0BM@KGJKALPF@Maximum?5Groups?5Per?5Division@ ; `string'
PUBLIC	??_C@_0BE@CPCOPHJM@Platoon?5Name?5?$HLtext?$HN@	; `string'
PUBLIC	??_C@_03HPADHAHE@N?1A@				; `string'
PUBLIC	??_C@_0BD@MMAIMAJI@Landing?5Craft?5?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0O@CEGCMIHB@Frigates?5?$CI?$CFs?$CJ@	; `string'
PUBLIC	??_C@_0L@HDOIOBOM@?$CFc?5Company@		; `string'
PUBLIC	??_C@_0N@LEJIAGO@?$CFs?5Battalion@		; `string'
PUBLIC	??_C@_0BI@MCCMLKOG@Platoon?5Short?5Name?5Type@	; `string'
PUBLIC	??_C@_0P@GADGLGOG@Map?5Layer?5Type@		; `string'
PUBLIC	??_C@_0O@OMMEGMFH@Map?5Icon?5Type@		; `string'
PUBLIC	??_C@_0BC@BGMCFCEI@Rearming?5Time?5?$CIs?$CJ@	; `string'
PUBLIC	??_C@_0BA@CEKJKHJL@Binary?5?$CIcol?419?$CJ@	; `string'
PUBLIC	??_C@_0BE@IGLFOEAA@Air?5Attack?5Strength@	; `string'
PUBLIC	??_C@_0BH@LMMPHEDE@Ground?5Attack?5Strength@	; `string'
PUBLIC	??_C@_0P@IBEFKEPD@Movement?5Speed@		; `string'
PUBLIC	??_C@_0BB@NEINNPNF@Movement?5Stealth@		; `string'
PUBLIC	??_C@_0M@PMAMMHEA@Cargo?5Space@			; `string'
PUBLIC	??_C@_0M@HPILOKDO@Troop?5Space@			; `string'
PUBLIC	??_C@_09LCEBAHPF@Waypoints@			; `string'
PUBLIC	??_C@_08DECIGEMC@Transfer@			; `string'
PUBLIC	??_C@_0O@PGGFEHHC@Task?5Category@		; `string'
PUBLIC	??_C@_0O@LPGIOKPK@Task?5Priority@		; `string'
PUBLIC	??_C@_0BC@EJKMPGAA@Difficulty?5Rating@		; `string'
PUBLIC	??_C@_01COCBENDE@7@				; `string'
PUBLIC	??_C@_0P@BKKFIMEB@Binary?5?$CIcol?48?$CJ@	; `string'
PUBLIC	??_C@_0P@BLGHOGHG@Binary?5?$CIcol?49?$CJ@	; `string'
PUBLIC	??_C@_02PKFBJPLJ@10@				; `string'
PUBLIC	??_C@_09GPLEILGM@Binary?511@			; `string'
PUBLIC	??_C@_0BE@KEGGANKI@TaskCompleted?5Score@	; `string'
PUBLIC	??_C@_0O@FJCPBHBM@Landing?5Types@		; `string'
PUBLIC	??_C@_0BE@EEEGGKD@Air?5Attack?5strength@	; `string'
PUBLIC	??_C@_0BH@DODOPGJH@Ground?5Attack?5strength@	; `string'
PUBLIC	??_C@_08IMCBCIPL@Movement@			; `string'
PUBLIC	??_C@_0BE@LJMIKIM@Weapon?5Config?5Types@	; `string'
PUBLIC	??_C@_06PPFLONGD@Landed@			; `string'
PUBLIC	??_C@_0DC@GPHPAIAG@Fixed?5Wing?5Minimum?5Previous?5Way@ ; `string'
PUBLIC	??_C@_0BN@LAOHHFHJ@Fixed?5Wing?5Action?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BO@DJAHAIOM@Fixed?5Wing?5Reached?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BI@JNGOJDJM@Fixed?5Wing?5Velocity?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0DC@CIJGJBJI@Helicopter?5Minimum?5Previous?5Way@ ; `string'
PUBLIC	??_C@_0BN@HFPCPFGA@Helicopter?5Action?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BO@FNKJLFKM@Helicopter?5Reached?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BI@EGIMJFHM@Helicopter?5Velocity?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0CO@HDMFPFGG@Ground?5Minimum?5Previous?5Waypoin@ ; `string'
PUBLIC	??_C@_0BJ@DJBAMEB@Ground?5Action?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BK@BBLGMGAL@Ground?5Reached?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BE@OPDKPJKE@Ground?5Velocity?5?$HLm?$HN@	; `string'
PUBLIC	??_C@_0CL@KPKIMJMH@Sea?5Minimum?5Previous?5Waypoint?5D@ ; `string'
PUBLIC	??_C@_0BG@LHHHDOGL@Sea?5Action?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BH@MKLJOJOP@Sea?5Reached?5Radius?5?$HLm?$HN@ ; `string'
PUBLIC	??_C@_0BB@LJEOCK@Sea?5Velocity?5?$HLm?$HN@	; `string'
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp____stdio_common_vfscanf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	_strstr:PROC
EXTRN	_strcmp:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp___strdup:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	__imp__strtok:PROC
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?file_exist@@YGHPBD@Z:PROC			; file_exist
EXTRN	?ReadGWutInfo@@YGXPBD@Z:PROC			; ReadGWutInfo
EXTRN	__ftoui3:PROC
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?keysite_database@@3PAUKEYSITE_DATA@@A:BYTE	; keysite_database
EXTRN	?task_database@@3PAUTASK_DATA@@A:BYTE		; task_database
EXTRN	?waypoint_database@@3PAUWAYPOINT_DATA@@A:BYTE	; waypoint_database
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_0BB@LJEOCK@Sea?5Velocity?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BB@LJEOCK@Sea?5Velocity?5?$HLm?$HN@ DB 'Sea Velocity {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MKLJOJOP@Sea?5Reached?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BH@MKLJOJOP@Sea?5Reached?5Radius?5?$HLm?$HN@ DB 'Sea Reached Radiu'
	DB	's {m}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LHHHDOGL@Sea?5Action?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BG@LHHHDOGL@Sea?5Action?5Radius?5?$HLm?$HN@ DB 'Sea Action Radius '
	DB	'{m}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@KPKIMJMH@Sea?5Minimum?5Previous?5Waypoint?5D@
CONST	SEGMENT
??_C@_0CL@KPKIMJMH@Sea?5Minimum?5Previous?5Waypoint?5D@ DB 'Sea Minimum P'
	DB	'revious Waypoint Distance {m}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OPDKPJKE@Ground?5Velocity?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BE@OPDKPJKE@Ground?5Velocity?5?$HLm?$HN@ DB 'Ground Velocity {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BBLGMGAL@Ground?5Reached?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BK@BBLGMGAL@Ground?5Reached?5Radius?5?$HLm?$HN@ DB 'Ground Reached'
	DB	' Radius {m}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DJBAMEB@Ground?5Action?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BJ@DJBAMEB@Ground?5Action?5Radius?5?$HLm?$HN@ DB 'Ground Action Ra'
	DB	'dius {m}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HDMFPFGG@Ground?5Minimum?5Previous?5Waypoin@
CONST	SEGMENT
??_C@_0CO@HDMFPFGG@Ground?5Minimum?5Previous?5Waypoin@ DB 'Ground Minimum'
	DB	' Previous Waypoint Distance {m}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EGIMJFHM@Helicopter?5Velocity?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BI@EGIMJFHM@Helicopter?5Velocity?5?$HLm?$HN@ DB 'Helicopter Veloci'
	DB	'ty {m}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FNKJLFKM@Helicopter?5Reached?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BO@FNKJLFKM@Helicopter?5Reached?5Radius?5?$HLm?$HN@ DB 'Helicopter'
	DB	' Reached Radius {m}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HFPCPFGA@Helicopter?5Action?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BN@HFPCPFGA@Helicopter?5Action?5Radius?5?$HLm?$HN@ DB 'Helicopter '
	DB	'Action Radius {m}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@CIJGJBJI@Helicopter?5Minimum?5Previous?5Way@
CONST	SEGMENT
??_C@_0DC@CIJGJBJI@Helicopter?5Minimum?5Previous?5Way@ DB 'Helicopter Min'
	DB	'imum Previous Waypoint Distance {m}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JNGOJDJM@Fixed?5Wing?5Velocity?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BI@JNGOJDJM@Fixed?5Wing?5Velocity?5?$HLm?$HN@ DB 'Fixed Wing Veloc'
	DB	'ity {m}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DJAHAIOM@Fixed?5Wing?5Reached?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BO@DJAHAIOM@Fixed?5Wing?5Reached?5Radius?5?$HLm?$HN@ DB 'Fixed Win'
	DB	'g Reached Radius {m}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LAOHHFHJ@Fixed?5Wing?5Action?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BN@LAOHHFHJ@Fixed?5Wing?5Action?5Radius?5?$HLm?$HN@ DB 'Fixed Wing'
	DB	' Action Radius {m}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GPHPAIAG@Fixed?5Wing?5Minimum?5Previous?5Way@
CONST	SEGMENT
??_C@_0DC@GPHPAIAG@Fixed?5Wing?5Minimum?5Previous?5Way@ DB 'Fixed Wing Mi'
	DB	'nimum Previous Waypoint Distance {m}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PPFLONGD@Landed@
CONST	SEGMENT
??_C@_06PPFLONGD@Landed@ DB 'Landed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LJMIKIM@Weapon?5Config?5Types@
CONST	SEGMENT
??_C@_0BE@LJMIKIM@Weapon?5Config?5Types@ DB 'Weapon Config Types', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IMCBCIPL@Movement@
CONST	SEGMENT
??_C@_08IMCBCIPL@Movement@ DB 'Movement', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DODOPGJH@Ground?5Attack?5strength@
CONST	SEGMENT
??_C@_0BH@DODOPGJH@Ground?5Attack?5strength@ DB 'Ground Attack strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EEEGGKD@Air?5Attack?5strength@
CONST	SEGMENT
??_C@_0BE@EEEGGKD@Air?5Attack?5strength@ DB 'Air Attack strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FJCPBHBM@Landing?5Types@
CONST	SEGMENT
??_C@_0O@FJCPBHBM@Landing?5Types@ DB 'Landing Types', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KEGGANKI@TaskCompleted?5Score@
CONST	SEGMENT
??_C@_0BE@KEGGANKI@TaskCompleted?5Score@ DB 'TaskCompleted Score', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPLEILGM@Binary?511@
CONST	SEGMENT
??_C@_09GPLEILGM@Binary?511@ DB 'Binary 11', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02PKFBJPLJ@10@
CONST	SEGMENT
??_C@_02PKFBJPLJ@10@ DB '10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BLGHOGHG@Binary?5?$CIcol?49?$CJ@
CONST	SEGMENT
??_C@_0P@BLGHOGHG@Binary?5?$CIcol?49?$CJ@ DB 'Binary (col.9)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKKFIMEB@Binary?5?$CIcol?48?$CJ@
CONST	SEGMENT
??_C@_0P@BKKFIMEB@Binary?5?$CIcol?48?$CJ@ DB 'Binary (col.8)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01COCBENDE@7@
CONST	SEGMENT
??_C@_01COCBENDE@7@ DB '7', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJKMPGAA@Difficulty?5Rating@
CONST	SEGMENT
??_C@_0BC@EJKMPGAA@Difficulty?5Rating@ DB 'Difficulty Rating', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LPGIOKPK@Task?5Priority@
CONST	SEGMENT
??_C@_0O@LPGIOKPK@Task?5Priority@ DB 'Task Priority', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PGGFEHHC@Task?5Category@
CONST	SEGMENT
??_C@_0O@PGGFEHHC@Task?5Category@ DB 'Task Category', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DECIGEMC@Transfer@
CONST	SEGMENT
??_C@_08DECIGEMC@Transfer@ DB 'Transfer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LCEBAHPF@Waypoints@
CONST	SEGMENT
??_C@_09LCEBAHPF@Waypoints@ DB 'Waypoints', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HPILOKDO@Troop?5Space@
CONST	SEGMENT
??_C@_0M@HPILOKDO@Troop?5Space@ DB 'Troop Space', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PMAMMHEA@Cargo?5Space@
CONST	SEGMENT
??_C@_0M@PMAMMHEA@Cargo?5Space@ DB 'Cargo Space', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NEINNPNF@Movement?5Stealth@
CONST	SEGMENT
??_C@_0BB@NEINNPNF@Movement?5Stealth@ DB 'Movement Stealth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IBEFKEPD@Movement?5Speed@
CONST	SEGMENT
??_C@_0P@IBEFKEPD@Movement?5Speed@ DB 'Movement Speed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LMMPHEDE@Ground?5Attack?5Strength@
CONST	SEGMENT
??_C@_0BH@LMMPHEDE@Ground?5Attack?5Strength@ DB 'Ground Attack Strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IGLFOEAA@Air?5Attack?5Strength@
CONST	SEGMENT
??_C@_0BE@IGLFOEAA@Air?5Attack?5Strength@ DB 'Air Attack Strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CEKJKHJL@Binary?5?$CIcol?419?$CJ@
CONST	SEGMENT
??_C@_0BA@CEKJKHJL@Binary?5?$CIcol?419?$CJ@ DB 'Binary (col.19)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BGMCFCEI@Rearming?5Time?5?$CIs?$CJ@
CONST	SEGMENT
??_C@_0BC@BGMCFCEI@Rearming?5Time?5?$CIs?$CJ@ DB 'Rearming Time (s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OMMEGMFH@Map?5Icon?5Type@
CONST	SEGMENT
??_C@_0O@OMMEGMFH@Map?5Icon?5Type@ DB 'Map Icon Type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GADGLGOG@Map?5Layer?5Type@
CONST	SEGMENT
??_C@_0P@GADGLGOG@Map?5Layer?5Type@ DB 'Map Layer Type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MCCMLKOG@Platoon?5Short?5Name?5Type@
CONST	SEGMENT
??_C@_0BI@MCCMLKOG@Platoon?5Short?5Name?5Type@ DB 'Platoon Short Name Typ'
	DB	'e', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LEJIAGO@?$CFs?5Battalion@
CONST	SEGMENT
??_C@_0N@LEJIAGO@?$CFs?5Battalion@ DB '%s Battalion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDOIOBOM@?$CFc?5Company@
CONST	SEGMENT
??_C@_0L@HDOIOBOM@?$CFc?5Company@ DB '%c Company', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CEGCMIHB@Frigates?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0O@CEGCMIHB@Frigates?5?$CI?$CFs?$CJ@ DB 'Frigates (%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MMAIMAJI@Landing?5Craft?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BD@MMAIMAJI@Landing?5Craft?5?$CI?$CFs?$CJ@ DB 'Landing Craft (%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HPADHAHE@N?1A@
CONST	SEGMENT
??_C@_03HPADHAHE@N?1A@ DB 'N/A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CPCOPHJM@Platoon?5Name?5?$HLtext?$HN@
CONST	SEGMENT
??_C@_0BE@CPCOPHJM@Platoon?5Name?5?$HLtext?$HN@ DB 'Platoon Name {text}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KGJKALPF@Maximum?5Groups?5Per?5Division@
CONST	SEGMENT
??_C@_0BM@KGJKALPF@Maximum?5Groups?5Per?5Division@ DB 'Maximum Groups Per'
	DB	' Division', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DBMNJNOG@Default?5Group?5Division@
CONST	SEGMENT
??_C@_0BH@DBMNJNOG@Default?5Group?5Division@ DB 'Default Group Division', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EHALIKOP@Default?5Group?5Formation@
CONST	SEGMENT
??_C@_0BI@EHALIKOP@Default?5Group?5Formation@ DB 'Default Group Formation'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EHEFMCHJ@Default?5Red?5Force?5Sub?5Type@
CONST	SEGMENT
??_C@_0BL@EHEFMCHJ@Default?5Red?5Force?5Sub?5Type@ DB 'Default Red Force '
	DB	'Sub Type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IEGMLLNF@Default?5Blue?5Force?5Sub?5Type@
CONST	SEGMENT
??_C@_0BM@IEGMLLNF@Default?5Blue?5Force?5Sub?5Type@ DB 'Default Blue Forc'
	DB	'e Sub Type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EFBNDEEI@Default?5Entity?5Type@
CONST	SEGMENT
??_C@_0BE@EFBNDEEI@Default?5Entity?5Type@ DB 'Default Entity Type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FFCGCLPK@Landing?5Type@
CONST	SEGMENT
??_C@_0N@FFCGCLPK@Landing?5Type@ DB 'Landing Type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GEKIGJJE@Movement?5Type@
CONST	SEGMENT
??_C@_0O@GEKIGJJE@Movement?5Type@ DB 'Movement Type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDNAHEHM@Group?5List@
CONST	SEGMENT
??_C@_0L@NDNAHEHM@Group?5List@ DB 'Group List', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BIEAHGIC@Registery?5List@
CONST	SEGMENT
??_C@_0P@BIEAHGIC@Registery?5List@ DB 'Registery List', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MFNJAIE@Group?5Category@
CONST	SEGMENT
??_C@_0P@MFNJAIE@Group?5Category@ DB 'Group Category', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EEGKELMG@Tasks@
CONST	SEGMENT
??_C@_05EEGKELMG@Tasks@ DB 'Tasks', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CODHIKJB@Binary?5?$CIcol?417?$CJ@
CONST	SEGMENT
??_C@_0BA@CODHIKJB@Binary?5?$CIcol?417?$CJ@ DB 'Binary (col.17)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LOCAHGFH@Report?5Fuel?5Level@
CONST	SEGMENT
??_C@_0BC@LOCAHGFH@Report?5Fuel?5Level@ DB 'Report Fuel Level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JGDFAHDD@Report?5Ammo?5Level@
CONST	SEGMENT
??_C@_0BC@JGDFAHDD@Report?5Ammo?5Level@ DB 'Report Ammo Level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CJDOCCEN@Binary?5?$CIcol?413?$CJ@
CONST	SEGMENT
??_C@_0BA@CJDOCCEN@Binary?5?$CIcol?413?$CJ@ DB 'Binary (col.13)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEMMIFLJ@Sector?5Side?5Max?5Value@
CONST	SEGMENT
??_C@_0BG@NEMMIFLJ@Sector?5Side?5Max?5Value@ DB 'Sector Side Max Value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GCBHIJJH@Recon?5Distance?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@GCBHIJJH@Recon?5Distance?5?$HLm?$HN@ DB 'Recon Distance {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MCCEFLGH@Air?5Coverage?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BI@MCCEFLGH@Air?5Coverage?5Radius?5?$HLm?$HN@ DB 'Air Coverage Rad'
	DB	'ius {m}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EDLEGGDJ@Importance?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BG@EDLEGGDJ@Importance?5Radius?5?$HLm?$HN@ DB 'Importance Radius {'
	DB	'm}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CHCMHIOB@Minimum?5Efficiency@
CONST	SEGMENT
??_C@_0BD@CHCMHIOB@Minimum?5Efficiency@ DB 'Minimum Efficiency', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CCPICNPI@Importance@
CONST	SEGMENT
??_C@_0L@CCPICNPI@Importance@ DB 'Importance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NAFBEKJK@Fuel?5Usage@
CONST	SEGMENT
??_C@_0L@NAFBEKJK@Fuel?5Usage@ DB 'Fuel Usage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PIEEDLPO@Ammo?5Usage@
CONST	SEGMENT
??_C@_0L@PIEEDLPO@Ammo?5Usage@ DB 'Ammo Usage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MCCGIBLD@Air?5Air?5Supply@
CONST	SEGMENT
??_C@_0P@MCCGIBLD@Air?5Air?5Supply@ DB 'Air Air Supply', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HHNMENPP@Air?5Ground?5Supply@
CONST	SEGMENT
??_C@_0BC@HHNMENPP@Air?5Ground?5Supply@ DB 'Air Ground Supply', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCLFDFOL@Groups@
CONST	SEGMENT
??_C@_06LCLFDFOL@Groups@ DB 'Groups', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LGLCJJOI@Seeker?5Field?5Of?5View?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BL@LGLCJJOI@Seeker?5Field?5Of?5View?5?$HLrad?$HN@ DB 'Seeker Field'
	DB	' Of View {rad}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNJDLEKK@Reload?5Time?5?$HLs?$HN@
CONST	SEGMENT
??_C@_0BA@FNJDLEKK@Reload?5Time?5?$HLs?$HN@ DB 'Reload Time {s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BAHLONNC@Rate?5Of?5Fire@
CONST	SEGMENT
??_C@_0N@BAHLONNC@Rate?5Of?5Fire@ DB 'Rate Of Fire', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IBFPLHAG@Burst?5Duration@
CONST	SEGMENT
??_C@_0P@IBFPLHAG@Burst?5Duration@ DB 'Burst Duration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IFHGLHGK@Inhibit?5Time?5?$HLs?$HN@
CONST	SEGMENT
??_C@_0BB@IFHGLHGK@Inhibit?5Time?5?$HLs?$HN@ DB 'Inhibit Time {s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BBANFOKH@Cruise?5Time?5Max?5Error?5?$HLs?$HN@
CONST	SEGMENT
??_C@_0BK@BBANFOKH@Cruise?5Time?5Max?5Error?5?$HLs?$HN@ DB 'Cruise Time M'
	DB	'ax Error {s}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDBDDLKC@Cruise?5Time?5?$HLs?$HN@
CONST	SEGMENT
??_C@_0BA@IDBDDLKC@Cruise?5Time?5?$HLs?$HN@ DB 'Cruise Time {s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EPFNBKHL@Burn?5Time?5?$HLs?$HN@
CONST	SEGMENT
??_C@_0O@EPFNBKHL@Burn?5Time?5?$HLs?$HN@ DB 'Burn Time {s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GDMHIALJ@Muzzle?5Velocity?5Max?5Error@
CONST	SEGMENT
??_C@_0BK@GDMHIALJ@Muzzle?5Velocity?5Max?5Error@ DB 'Muzzle Velocity Max '
	DB	'Error', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FHHNOOBI@Muzzle?5Velocity?5?$HLm?1s?$HN@
CONST	SEGMENT
??_C@_0BG@FHHNOOBI@Muzzle?5Velocity?5?$HLm?1s?$HN@ DB 'Muzzle Velocity {m'
	DB	'/s}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DHDDEJN@Max?5Range?5Error?5Ratio@
CONST	SEGMENT
??_C@_0BG@DHDDEJN@Max?5Range?5Error?5Ratio@ DB 'Max Range Error Ratio', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGIGFMEA@Max?5Range?5LOAL?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@MGIGFMEA@Max?5Range?5LOAL?5?$HLm?$HN@ DB 'Max Range LOAL {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBLCNMDJ@Min?5Range?5LOAL?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@GBLCNMDJ@Min?5Range?5LOAL?5?$HLm?$HN@ DB 'Min Range LOAL {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@COCFOLBA@Effective?5Range?5used?5by?5AI?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BP@COCFOLBA@Effective?5Range?5used?5by?5AI?5?$HLm?$HN@ DB 'Effecti'
	DB	've Range used by AI {m}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CNGJLAFM@Max?5Range?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0O@CNGJLAFM@Max?5Range?5?$HLm?$HN@ DB 'Max Range {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JEEPCLCN@Min?5Range?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0O@JEEPCLCN@Min?5Range?5?$HLm?$HN@ DB 'Min Range {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FBBDECHM@Weight?5?$HLkg?$HN@
CONST	SEGMENT
??_C@_0M@FBBDECHM@Weight?5?$HLkg?$HN@ DB 'Weight {kg}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NOKHBEJI@Weapon?5Class@
CONST	SEGMENT
??_C@_0N@NOKHBEJI@Weapon?5Class@ DB 'Weapon Class', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FHHHLFMJ@Hellfire?5Flight?5Profile@
CONST	SEGMENT
??_C@_0BI@FHHHLFMJ@Hellfire?5Flight?5Profile@ DB 'Hellfire Flight Profile'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DKJFJHFD@Boresight?5Weapon@
CONST	SEGMENT
??_C@_0BB@DKJFJHFD@Boresight?5Weapon@ DB 'Boresight Weapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CFPMOMGG@Viewable?5Weapon@
CONST	SEGMENT
??_C@_0BA@CFPMOMGG@Viewable?5Weapon@ DB 'Viewable Weapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PHIEOBIL@In?5Flight?5Collision?5Check@
CONST	SEGMENT
??_C@_0BK@PHIEOBIL@In?5Flight?5Collision?5Check@ DB 'In Flight Collision '
	DB	'Check', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FNLJLNGG@Survive?5Ground?5Impact@
CONST	SEGMENT
??_C@_0BG@FNLJLNGG@Survive?5Ground?5Impact@ DB 'Survive Ground Impact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGKJEPAN@Ignore?5Gravity@
CONST	SEGMENT
??_C@_0P@MGKJEPAN@Ignore?5Gravity@ DB 'Ignore Gravity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IJJCBDEE@Acquires?5Launchers?5Forward?5Velo@
CONST	SEGMENT
??_C@_0CE@IJJCBDEE@Acquires?5Launchers?5Forward?5Velo@ DB 'Acquires Launc'
	DB	'hers Forward Velocity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KDCKGBOC@Smoke?5Trail?5Type@
CONST	SEGMENT
??_C@_0BB@KDCKGBOC@Smoke?5Trail?5Type@ DB 'Smoke Trail Type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PAOFLIGF@Damage?5Hard@
CONST	SEGMENT
??_C@_0M@PAOFLIGF@Damage?5Hard@ DB 'Damage Hard', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FGOHHADI@Damage?5Soft@
CONST	SEGMENT
??_C@_0M@FGOHHADI@Damage?5Soft@ DB 'Damage Soft', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMDBOLEP@Gun?5Shake@
CONST	SEGMENT
??_C@_09CMDBOLEP@Gun?5Shake@ DB 'Gun Shake', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KLFIDINK@Report?5Ammo?5Low?5Count@
CONST	SEGMENT
??_C@_0BG@KLFIDINK@Report?5Ammo?5Low?5Count@ DB 'Report Ammo Low Count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GEIANBOO@Weapon?5Launched?5Wingman?5Speech@
CONST	SEGMENT
??_C@_0BP@GEIANBOO@Weapon?5Launched?5Wingman?5Speech@ DB 'Weapon Launched'
	DB	' Wingman Speech', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DLBPJDDA@Weapon?5Launched?5CPG?5Speech@
CONST	SEGMENT
??_C@_0BL@DLBPJDDA@Weapon?5Launched?5CPG?5Speech@ DB 'Weapon Launched CPG'
	DB	' Speech', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DNCDOMEI@Weapon?5Out?5CPG?5Speech@
CONST	SEGMENT
??_C@_0BG@DNCDOMEI@Weapon?5Out?5CPG?5Speech@ DB 'Weapon Out CPG Speech', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CFBBAMAI@Weapon?5Low?5CPG?5Speech@
CONST	SEGMENT
??_C@_0BG@CFBBAMAI@Weapon?5Low?5CPG?5Speech@ DB 'Weapon Low CPG Speech', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CMJDCDJC@Weapon?5Selected?5CPG?5Speech@
CONST	SEGMENT
??_C@_0BL@CMJDCDJC@Weapon?5Selected?5CPG?5Speech@ DB 'Weapon Selected CPG'
	DB	' Speech', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KKLAJHCJ@Continuous?5Sound?5Effect@
CONST	SEGMENT
??_C@_0BI@KKLAJHCJ@Continuous?5Sound?5Effect@ DB 'Continuous Sound Effect'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KHCANHMJ@Exterior?5Launch?5Sound?5Effect@
CONST	SEGMENT
??_C@_0BN@KHCANHMJ@Exterior?5Launch?5Sound?5Effect@ DB 'Exterior Launch S'
	DB	'ound Effect', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EAHBKPCE@Interior?5Launch?5Sound?5Effect@
CONST	SEGMENT
??_C@_0BN@EAHBKPCE@Interior?5Launch?5Sound?5Effect@ DB 'Interior Launch S'
	DB	'ound Effect', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PLCBKFOK@Launch?5Sound?5Effect?5Sub?5Type@
CONST	SEGMENT
??_C@_0BN@PLCBKFOK@Launch?5Sound?5Effect?5Sub?5Type@ DB 'Launch Sound Eff'
	DB	'ect Sub Type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CBBNJOFE@Threat?5Type@
CONST	SEGMENT
??_C@_0M@CBBNJOFE@Threat?5Type@ DB 'Threat Type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGMEHPCE@Warhead?5Type@
CONST	SEGMENT
??_C@_0N@LGMEHPCE@Warhead?5Type@ DB 'Warhead Type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EAIBAFFN@Decoy?5Type@
CONST	SEGMENT
??_C@_0L@EAIBAFFN@Decoy?5Type@ DB 'Decoy Type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLKPGGPG@Aiming?5Type@
CONST	SEGMENT
??_C@_0M@MLKPGGPG@Aiming?5Type@ DB 'Aiming Type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OHEOGKEH@Guidance@
CONST	SEGMENT
??_C@_08OHEOGKEH@Guidance@ DB 'Guidance', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BDANDDMK@Keysites@
CONST	SEGMENT
??_C@_08BDANDDMK@Keysites@ DB 'Keysites', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BBEELPEJ@Rear?5Damage?5Modifier@
CONST	SEGMENT
??_C@_0BF@BBEELPEJ@Rear?5Damage?5Modifier@ DB 'Rear Damage Modifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JEOHLAID@Flank?5Damage?5Modifier@
CONST	SEGMENT
??_C@_0BG@JEOHLAID@Flank?5Damage?5Modifier@ DB 'Flank Damage Modifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MNOIBNMI@Front?5Damage?5Modifier@
CONST	SEGMENT
??_C@_0BG@MNOIBNMI@Front?5Damage?5Modifier@ DB 'Front Damage Modifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NNFCKCKF@Air?5Search?5Max?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@NNFCKCKF@Air?5Search?5Max?5?$HLm?$HN@ DB 'Air Search Max {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DLDCANEE@Air?5Search?5Min?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@DLDCANEE@Air?5Search?5Min?5?$HLm?$HN@ DB 'Air Search Min {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DBBFPNFF@Recon?5Range?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BA@DBBFPNFF@Recon?5Range?5?$HLm?$HN@ DB 'Recon Range {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPPLFPLJ@Speed?5?$HLm?1s?$HN@
CONST	SEGMENT
??_C@_0M@LPPLFPLJ@Speed?5?$HLm?1s?$HN@ DB 'Speed {m/s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EDNFIGLK@Max?5Acceleration@
CONST	SEGMENT
??_C@_0BB@EDNFIGLK@Max?5Acceleration@ DB 'Max Acceleration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JLAPAIN@Axle?5Length?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BA@JLAPAIN@Axle?5Length?5?$HLm?$HN@ DB 'Axle Length {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OBHPCBDC@Cruise?5Velocity?5?$HLm?1s?$HN@
CONST	SEGMENT
??_C@_0BG@OBHPCBDC@Cruise?5Velocity?5?$HLm?1s?$HN@ DB 'Cruise Velocity {m'
	DB	'/s}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IAPLLGIP@?5CIS?5I?5Sam?5Kneeling@
CONST	SEGMENT
??_C@_0BE@IAPLLGIP@?5CIS?5I?5Sam?5Kneeling@ DB ' CIS I Sam Kneeling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EKMNLADL@?5CIS?5I?5SAM?5Standing@
CONST	SEGMENT
??_C@_0BE@EKMNLADL@?5CIS?5I?5SAM?5Standing@ DB ' CIS I SAM Standing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LBEPEJAH@?5CIS?5I@
CONST	SEGMENT
??_C@_06LBEPEJAH@?5CIS?5I@ DB ' CIS I', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LFFKINOB@?5US?5I?5Sam?5Kneeling@
CONST	SEGMENT
??_C@_0BD@LFFKINOB@?5US?5I?5Sam?5Kneeling@ DB ' US I Sam Kneeling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@
CONST	SEGMENT
??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@ DB 'Infantry with SAM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HPGMILFF@?5US?5I?5SAM?5Standing@
CONST	SEGMENT
??_C@_0BD@HPGMILFF@?5US?5I?5SAM?5Standing@ DB ' US I SAM Standing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OOLPMJMC@Infantry@
CONST	SEGMENT
??_C@_08OOLPMJMC@Infantry@ DB 'Infantry', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HJCMAJDB@?5US?5I@
CONST	SEGMENT
??_C@_05HJCMAJDB@?5US?5I@ DB ' US I', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EOKICKPE@Landing?5Craft?5Air?5Cushioned@
CONST	SEGMENT
??_C@_0BM@EOKICKPE@Landing?5Craft?5Air?5Cushioned@ DB 'Landing Craft Air '
	DB	'Cushioned', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HKCOICOH@?5LCAC?5?$CIair?5cushion?$CJ@
CONST	SEGMENT
??_C@_0BE@HKCOICOH@?5LCAC?5?$CIair?5cushion?$CJ@ DB ' LCAC (air cushion)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MBGDBBEF@Weapons?0?5Decoys?0?5Crate?0?5Ejectio@
CONST	SEGMENT
??_C@_0CI@MBGDBBEF@Weapons?0?5Decoys?0?5Crate?0?5Ejectio@ DB 'Weapons, De'
	DB	'coys, Crate, Ejection Debris', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CAKEMKPL@Structure?5Points@
CONST	SEGMENT
??_C@_0BB@CAKEMKPL@Structure?5Points@ DB 'Structure Points', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAJHMOAD@Fuel?5Economy@
CONST	SEGMENT
??_C@_0N@OAJHMOAD@Fuel?5Economy@ DB 'Fuel Economy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DBMGBNOK@Fuel?5Default?5Weight@
CONST	SEGMENT
??_C@_0BE@DBMGBNOK@Fuel?5Default?5Weight@ DB 'Fuel Default Weight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MGAEAJBP@Ammo?5Economy@
CONST	SEGMENT
??_C@_0N@MGAEAJBP@Ammo?5Economy@ DB 'Ammo Economy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IMGNHANL@Ground?5Threat@
CONST	SEGMENT
??_C@_0O@IMGNHANL@Ground?5Threat@ DB 'Ground Threat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DHPOMHGL@Air?5Threat@
CONST	SEGMENT
??_C@_0L@DHPOMHGL@Air?5Threat@ DB 'Air Threat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LBLAIIJO@Ground?5Scan?5Range?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BG@LBLAIIJO@Ground?5Scan?5Range?5?$HLm?$HN@ DB 'Ground Scan Range '
	DB	'{m}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HOHBHCPP@Air?5Scan?5Range?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@HOHBHCPP@Air?5Scan?5Range?5?$HLm?$HN@ DB 'Air Scan Range {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OGDJBMHF@Scan?5Interval?5?$HLs?$HN@
CONST	SEGMENT
??_C@_0BC@OGDJBMHF@Scan?5Interval?5?$HLs?$HN@ DB 'Scan Interval {s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MKFGJMOP@Recon?5Radius?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BB@MKFGJMOP@Recon?5Radius?5?$HLm?$HN@ DB 'Recon Radius {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NIFLMKPE@Tail?5Rotor?5Direction@
CONST	SEGMENT
??_C@_0BF@NIFLMKPE@Tail?5Rotor?5Direction@ DB 'Tail Rotor Direction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PDJLBFAM@Power?5Output@
CONST	SEGMENT
??_C@_0N@PDJLBFAM@Power?5Output@ DB 'Power Output', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IGBDMLBA@G?5Max?5?$HLm?1s?1s?$HN@
CONST	SEGMENT
??_C@_0O@IGBDMLBA@G?5Max?5?$HLm?1s?1s?$HN@ DB 'G Max {m/s/s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFCBHFKL@Avoidance?5Radius@
CONST	SEGMENT
??_C@_0BB@PFCBHFKL@Avoidance?5Radius@ DB 'Avoidance Radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PNCMOCEO@Max?5Vertical?5Turn?5Allowance@
CONST	SEGMENT
??_C@_0BM@PNCMOCEO@Max?5Vertical?5Turn?5Allowance@ DB 'Max Vertical Turn '
	DB	'Allowance', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LBHPJAGL@Max?5Roll?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0P@LBHPJAGL@Max?5Roll?5?$HLrad?$HN@ DB 'Max Roll {rad}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OCAKCHFD@Max?5Turn?5Rate?5?$HLrad?1s?$HN@
CONST	SEGMENT
??_C@_0BG@OCAKCHFD@Max?5Turn?5Rate?5?$HLrad?1s?$HN@ DB 'Max Turn Rate {ra'
	DB	'd/s}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HMNACDPM@Propellor?5Direction?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BK@HMNACDPM@Propellor?5Direction?5?$HLrad?$HN@ DB 'Propellor Direc'
	DB	'tion {rad}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JFPHJGFB@Main?5Rotor?5Blade?5Drop?5Angle?5?$HLra@
CONST	SEGMENT
??_C@_0CC@JFPHJGFB@Main?5Rotor?5Blade?5Drop?5Angle?5?$HLra@ DB 'Main Roto'
	DB	'r Blade Drop Angle {rad}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCOOGONP@Main?5Rotor?5Direction?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BL@OCOOGONP@Main?5Rotor?5Direction?5?$HLrad?$HN@ DB 'Main Rotor Di'
	DB	'rection {rad}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LEEJHMCH@Main?5Rotor?5Shaft?5Angle?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BN@LEEJHMCH@Main?5Rotor?5Shaft?5Angle?5?$HLrad?$HN@ DB 'Main Rotor'
	DB	' Shaft Angle {rad}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BJDAHCCJ@Liftoff?5Velocity?5?$HLm?1s?$HN@
CONST	SEGMENT
??_C@_0BH@BJDAHCCJ@Liftoff?5Velocity?5?$HLm?1s?$HN@ DB 'Liftoff Velocity '
	DB	'{m/s}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FALBLCJK@Fuselage?5Angle?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BF@FALBLCJK@Fuselage?5Angle?5?$HLrad?$HN@ DB 'Fuselage Angle {rad}'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LONNCLAI@Destroyed?5Pitch?5offset?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BN@LONNCLAI@Destroyed?5Pitch?5offset?5?$HLrad?$HN@ DB 'Destroyed P'
	DB	'itch offset {rad}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ODNHHNHP@Destroyed?5Bank?5Offset?5?$HLrad?$HN@
CONST	SEGMENT
??_C@_0BM@ODNHHNHP@Destroyed?5Bank?5Offset?5?$HLrad?$HN@ DB 'Destroyed Ba'
	DB	'nk Offset {rad}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CPKNOMFM@Atack?5Altitude?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BD@CPKNOMFM@Atack?5Altitude?5?$HLm?$HN@ DB 'Atack Altitude {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PEKHEHEB@Cruise?5Altitude?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BE@PEKHEHEB@Cruise?5Altitude?5?$HLm?$HN@ DB 'Cruise Altitude {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OEMFHODB@Cruise?5Speed?5?$HLm?1s?$HN@
CONST	SEGMENT
??_C@_0BD@OEMFHODB@Cruise?5Speed?5?$HLm?1s?$HN@ DB 'Cruise Speed {m/s}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FCAFHGNJ@Chase?5View?5Max?5Distance?5Test?5?$HLm@
CONST	SEGMENT
??_C@_0CB@FCAFHGNJ@Chase?5View?5Max?5Distance?5Test?5?$HLm@ DB 'Chase Vie'
	DB	'w Max Distance Test {m}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BDBCEJFP@Chase?5View?5Min?5Distance?5Test?5?$HLm@
CONST	SEGMENT
??_C@_0CB@BDBCEJFP@Chase?5View?5Min?5Distance?5Test?5?$HLm@ DB 'Chase Vie'
	DB	'w Min Distance Test {m}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NAACPGOH@Chase?5View?5Max?5Distance?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BM@NAACPGOH@Chase?5View?5Max?5Distance?5?$HLm?$HN@ DB 'Chase View '
	DB	'Max Distance {m}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MFIJCCBF@Chase?5View?5Min?5Distance?5?$HLm?$HN@
CONST	SEGMENT
??_C@_0BM@MFIJCCBF@Chase?5View?5Min?5Distance?5?$HLm?$HN@ DB 'Chase View '
	DB	'Min Distance {m}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GNFBPOBH@Centre?5Of?5Gravity?5To?5Ground?5Dis@
CONST	SEGMENT
??_C@_0DD@GNFBPOBH@Centre?5Of?5Gravity?5To?5Ground?5Dis@ DB 'Centre Of Gr'
	DB	'avity To Ground Distance Destroyed {m}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IJODAPMN@Centre?5Of?5Gravity?5To?5Ground?5Dis@
CONST	SEGMENT
??_C@_0CJ@IJODAPMN@Centre?5Of?5Gravity?5To?5Ground?5Dis@ DB 'Centre Of Gr'
	DB	'avity To Ground Distance {m}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@ENNMBFCN@Ground?5Vehicles?0?5Ships?0?5Infantr@
CONST	SEGMENT
??_C@_0CB@ENNMBFCN@Ground?5Vehicles?0?5Ships?0?5Infantr@ DB 'Ground Vehic'
	DB	'les, Ships, Infantry', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JKJBJHJL@Helicopters?5and?5Aircrafts@
CONST	SEGMENT
??_C@_0BK@JKJBJHJL@Helicopters?5and?5Aircrafts@ DB 'Helicopters and Aircr'
	DB	'afts', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04DBHEMPKL@GWUT@
CONST	SEGMENT
??_C@_04DBHEMPKL@GWUT@ DB 'GWUT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
CONST	SEGMENT
??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@ DB '%[^', 0aH, ']', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IELBJLGL@Error?5opening?5WUT?5file?3?5?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0BN@IELBJLGL@Error?5opening?5WUT?5file?3?5?$FL?$CFs?$FN@ DB 'Error '
	DB	'opening WUT file: [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IONJHCKF@WUT?5file?5cannot?5be?5found?3?5?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0BP@IONJHCKF@WUT?5file?5cannot?5be?5found?3?5?$FL?$CFs?$FN@ DB 'WUT'
	DB	' file cannot be found: [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LJCJGBIK@try?5wut?5?$CFf?5?$CFd?6@
CONST	SEGMENT
??_C@_0P@LJCJGBIK@try?5wut?5?$CFf?5?$CFd?6@ DB 'try wut %f %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKMLJOMC@?$CFd?5?$CFd@
CONST	SEGMENT
??_C@_05OKMLJOMC@?$CFd?5?$CFd@ DB '%d %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KCDNKPCA@?$CFf?5?$CFf@
CONST	SEGMENT
??_C@_05KCDNKPCA@?$CFf?5?$CFf@ DB '%f %f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\wutcfg.c
;	COMDAT ?get_values@@YGXPADPAMPAH@Z
_TEXT	SEGMENT
_d1$ = -12						; size = 4
_j$ = -8						; size = 4
_v1$ = -4						; size = 4
_q$ = 8							; size = 4
_v2$ = 12						; size = 4
_d2$ = 16						; size = 4
?get_values@@YGXPADPAMPAH@Z PROC			; get_values, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 	float v1;
; 95   : 	unsigned j;
; 96   : 	int d1;
; 97   : 	  
; 98   : 	  for (j = 0; j < strlen(q); j++)

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@get_values
$LN2@get_values:
  00012	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax
$LN4@get_values:
  0001b	8b 45 08	 mov	 eax, DWORD PTR _q$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _strlen
  00024	83 c4 04	 add	 esp, 4
  00027	39 45 f8	 cmp	 DWORD PTR _j$[ebp], eax
  0002a	73 19		 jae	 SHORT $LN3@get_values

; 99   : 		  if (q[j] == ',') q[j] = '.';

  0002c	8b 45 08	 mov	 eax, DWORD PTR _q$[ebp]
  0002f	03 45 f8	 add	 eax, DWORD PTR _j$[ebp]
  00032	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00035	83 f9 2c	 cmp	 ecx, 44			; 0000002cH
  00038	75 09		 jne	 SHORT $LN5@get_values
  0003a	8b 45 08	 mov	 eax, DWORD PTR _q$[ebp]
  0003d	03 45 f8	 add	 eax, DWORD PTR _j$[ebp]
  00040	c6 00 2e	 mov	 BYTE PTR [eax], 46	; 0000002eH
$LN5@get_values:

; 100  : 		  // get the values at the end of the string
; 101  : 		  // replace , with .
; 102  : 	 
; 103  : 	  sscanf(q,"%f %f",&v1, v2);

  00043	eb cd		 jmp	 SHORT $LN2@get_values
$LN3@get_values:
  00045	8b 45 0c	 mov	 eax, DWORD PTR _v2$[ebp]
  00048	50		 push	 eax
  00049	8d 4d fc	 lea	 ecx, DWORD PTR _v1$[ebp]
  0004c	51		 push	 ecx
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_05KCDNKPCA@?$CFf?5?$CFf@
  00052	8b 55 08	 mov	 edx, DWORD PTR _q$[ebp]
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 _sscanf
  0005b	83 c4 10	 add	 esp, 16			; 00000010H

; 104  : 	  sscanf(q,"%d %d",&d1, d2);

  0005e	8b 45 10	 mov	 eax, DWORD PTR _d2$[ebp]
  00061	50		 push	 eax
  00062	8d 4d f4	 lea	 ecx, DWORD PTR _d1$[ebp]
  00065	51		 push	 ecx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_05OKMLJOMC@?$CFd?5?$CFd@
  0006b	8b 55 08	 mov	 edx, DWORD PTR _q$[ebp]
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 _sscanf
  00074	83 c4 10	 add	 esp, 16			; 00000010H

; 105  : 	  
; 106  : 	  debug_log("try wut %f %d\n",v2, d2);                

  00077	8b 45 10	 mov	 eax, DWORD PTR _d2$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d 0c	 mov	 ecx, DWORD PTR _v2$[ebp]
  0007e	51		 push	 ecx
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LJCJGBIK@try?5wut?5?$CFf?5?$CFd?6@
  00084	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH

; 107  : }	

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 0c 00	 ret	 12			; 0000000cH
?get_values@@YGXPADPAMPAH@Z ENDP			; get_values
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\wutcfg.c
;	COMDAT ?ReadWutFile@@YGXPBD@Z
_TEXT	SEGMENT
tv1932 = -260						; size = 4
_q$1 = -192						; size = 4
_j$2 = -188						; size = 4
_v2$3 = -184						; size = 4
_v1$4 = -180						; size = 4
_value$5 = -176						; size = 4
_q$6 = -172						; size = 4
_d2$7 = -168						; size = 4
_v2$8 = -164						; size = 4
_done$9 = -160						; size = 4
_value$10 = -156					; size = 4
_q$11 = -152						; size = 4
_d2$12 = -148						; size = 4
_v2$13 = -144						; size = 4
_q$14 = -140						; size = 4
_d2$15 = -136						; size = 4
_v2$16 = -132						; size = 4
_q$17 = -128						; size = 4
_d2$18 = -124						; size = 4
_v2$19 = -120						; size = 4
_q$20 = -116						; size = 4
_d2$21 = -112						; size = 4
_v2$22 = -108						; size = 4
_done$23 = -104						; size = 4
_infnr$24 = -100					; size = 4
_q$25 = -96						; size = 4
_d2$26 = -92						; size = 4
_v2$27 = -88						; size = 4
_ent$ = -84						; size = 64
_p$ = -20						; size = 4
_buf1$ = -16						; size = 4
_buf$ = -12						; size = 4
_i$ = -8						; size = 4
_f$ = -4						; size = 4
_fname$ = 8						; size = 4
?ReadWutFile@@YGXPBD@Z PROC				; ReadWutFile, COMDAT

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 153  : 	 FILE *f;
; 154  : 	 int i;
; 155  : 	 char *buf = (char *)malloc(255);

  0000c	68 ff 00 00 00	 push	 255			; 000000ffH
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00017	83 c4 04	 add	 esp, 4
  0001a	89 45 f4	 mov	 DWORD PTR _buf$[ebp], eax

; 156  : 	 char *buf1 = (char *)malloc(255);

  0001d	68 ff 00 00 00	 push	 255			; 000000ffH
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00028	83 c4 04	 add	 esp, 4
  0002b	89 45 f0	 mov	 DWORD PTR _buf1$[ebp], eax

; 157  : 	 char *p;
; 158  : 	 char ent[64];
; 159  : 	 
; 160  : 	#if WUT_DEBUG
; 161  : 		char *vname;
; 162  : 	  FILE *fout = fopen("dumpwut.txt","w");;
; 163  : 	#endif  
; 164  : 
; 165  : /*
; 166  : //VJ 040322 moved to the function parse_WUT_file
; 167  : 
; 168  : 	 if (fname[0] != '\0' && !file_exist(fname))   
; 169  : 	 {
; 170  : 		debug_fatal("WUT filename error",fname);   
; 171  : 		 return;    
; 172  : 	 }   
; 173  : */
; 174  : 	 
; 175  : 	 f = fopen(fname, "r");

  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00033	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0003d	83 c4 08	 add	 esp, 8
  00040	89 45 fc	 mov	 DWORD PTR _f$[ebp], eax

; 176  : 	 if (!f)

  00043	83 7d fc 00	 cmp	 DWORD PTR _f$[ebp], 0
  00047	75 16		 jne	 SHORT $LN54@ReadWutFil

; 177  : 	 {
; 178  : 		 debug_fatal("Error opening WUT file: [%s]",fname);   

  00049	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IELBJLGL@Error?5opening?5WUT?5file?3?5?$FL?$CFs?$FN@
  00052	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00057	83 c4 08	 add	 esp, 8

; 179  : 		 return;    

  0005a	e9 81 31 00 00	 jmp	 $LN1@ReadWutFil
$LN54@ReadWutFil:

; 180  : 	 }   
; 181  : 
; 182  : 
; 183  : 	 //########################################################################
; 184  : 	 //#### AIRCRAFT ##########################################################
; 185  : 	 //########################################################################
; 186  : 
; 187  : 
; 188  : 	 fscanf(f,"%[^\n]\n",buf);

  0005f	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 _fscanf
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@ReadWutFil:

; 189  : 
; 190  : 	 // skip untill first group
; 191  : 	 while (!strstr(buf,"Helicopters and Aircrafts"))

  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JKJBJHJL@Helicopters?5and?5Aircrafts@
  00079	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00082	83 c4 08	 add	 esp, 8
  00085	85 c0		 test	 eax, eax
  00087	75 17		 jne	 SHORT $LN3@ReadWutFil

; 192  : 		  fscanf(f,"%[^\n]\n",buf);

  00089	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  0008c	50		 push	 eax
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00095	51		 push	 ecx
  00096	e8 00 00 00 00	 call	 _fscanf
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009e	eb d4		 jmp	 SHORT $LN2@ReadWutFil
$LN3@ReadWutFil:

; 193  : 	 fscanf(f,"%[^\n]\n",buf);

  000a0	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  000a3	50		 push	 eax
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  000ac	51		 push	 ecx
  000ad	e8 00 00 00 00	 call	 _fscanf
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 194  : 	 strcpy(buf1, buf);

  000b5	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  000b8	50		 push	 eax
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 _strcpy
  000c2	83 c4 08	 add	 esp, 8
$LN4@ReadWutFil:

; 195  : 	 
; 196  : 
; 197  :   
; 198  : 	 // continue untill the next group
; 199  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Ground Vehicles, Ships, Infantry")==0))

  000c5	b8 01 00 00 00	 mov	 eax, 1
  000ca	6b c8 00	 imul	 ecx, eax, 0
  000cd	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  000d0	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  000d4	85 c0		 test	 eax, eax
  000d6	0f 84 5a 06 00
	00		 je	 $LN5@ReadWutFil
  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	6b c8 00	 imul	 ecx, eax, 0
  000e4	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  000e7	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  000eb	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000ee	0f 84 42 06 00
	00		 je	 $LN5@ReadWutFil
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@ENNMBFCN@Ground?5Vehicles?0?5Ships?0?5Infantr@
  000f9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 _strcmp
  00102	83 c4 08	 add	 esp, 8
  00105	85 c0		 test	 eax, eax
  00107	0f 84 29 06 00
	00		 je	 $LN5@ReadWutFil

; 200  : 	 {
; 201  : 				 
; 202  : 		  fscanf(f,"%[^\n]\n",buf);

  0010d	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00110	50		 push	 eax
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00119	51		 push	 ecx
  0011a	e8 00 00 00 00	 call	 _fscanf
  0011f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 203  : 		  // read a line
; 204  : 		  strcpy(buf1, buf);

  00122	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00125	50		 push	 eax
  00126	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  00129	51		 push	 ecx
  0012a	e8 00 00 00 00	 call	 _strcpy
  0012f	83 c4 08	 add	 esp, 8

; 205  : 		  // keep a copy
; 206  : 		  
; 207  : 		  p = strtok(buf," ");

  00132	68 00 00 00 00	 push	 OFFSET ??_C@_01CLKCMJKC@?5@
  00137	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  0013a	50		 push	 eax
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00141	83 c4 08	 add	 esp, 8
  00144	89 45 ec	 mov	 DWORD PTR _p$[ebp], eax

; 208  : 		  strcpy(ent,p);

  00147	8b 45 ec	 mov	 eax, DWORD PTR _p$[ebp]
  0014a	50		 push	 eax
  0014b	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  0014e	51		 push	 ecx
  0014f	e8 00 00 00 00	 call	 _strcpy
  00154	83 c4 08	 add	 esp, 8

; 209  : 		  // get the first part of th entity name (e.g. AH64D) = unique !
; 210  : 
; 211  : 		  // search through all the aircraft list 
; 212  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_AIRCRAFT; i++)

  00157	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0015e	eb 09		 jmp	 SHORT $LN8@ReadWutFil
$LN6@ReadWutFil:
  00160	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00163	83 c0 01	 add	 eax, 1
  00166	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN8@ReadWutFil:
  00169	83 7d f8 20	 cmp	 DWORD PTR _i$[ebp], 32	; 00000020H
  0016d	0f 8d be 05 00
	00		 jge	 $LN7@ReadWutFil

; 213  : 		  {
; 214  : 				// if entity found, parse the variable
; 215  : 				if (strcmp(aircraft_database[i].short_display_name, ent) == 0)

  00173	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00176	50		 push	 eax
  00177	69 4d f8 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  0017e	8b 91 08 00 00
	00		 mov	 edx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+8]
  00184	52		 push	 edx
  00185	e8 00 00 00 00	 call	 _strcmp
  0018a	83 c4 08	 add	 esp, 8
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 97 05 00
	00		 jne	 $LN89@ReadWutFil

; 216  : 				{
; 217  : 					 float v2=0;

  00195	0f 57 c0	 xorps	 xmm0, xmm0
  00198	f3 0f 11 45 a8	 movss	 DWORD PTR _v2$27[ebp], xmm0

; 218  : 					 int d2 = 0;

  0019d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _d2$26[ebp], 0

; 219  : 					 char *q = buf1+83;

  001a4	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  001a7	83 c0 53	 add	 eax, 83			; 00000053H
  001aa	89 45 a0	 mov	 DWORD PTR _q$25[ebp], eax

; 220  : 
; 221  : 					 get_values(q, &v2, &d2);

  001ad	8d 45 a4	 lea	 eax, DWORD PTR _d2$26[ebp]
  001b0	50		 push	 eax
  001b1	8d 4d a8	 lea	 ecx, DWORD PTR _v2$27[ebp]
  001b4	51		 push	 ecx
  001b5	8b 55 a0	 mov	 edx, DWORD PTR _q$25[ebp]
  001b8	52		 push	 edx
  001b9	e8 00 00 00 00	 call	 ?get_values@@YGXPADPAMPAH@Z ; get_values

; 222  : 
; 223  : 					 // convert value string to float
; 224  : 					 // all floats, last one is int
; 225  : 					 //see: \aphavoc\source\entity\mobile\aircraft\ac_dbase.h
; 226  : 					 if (strstr(buf1 , "Centre Of Gravity To Ground Distance {m}")) { aircraft_database[i].centre_of_gravity_to_ground_distance=v2;}  

  001be	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@IJODAPMN@Centre?5Of?5Gravity?5To?5Ground?5Dis@
  001c3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  001cc	83 c4 08	 add	 esp, 8
  001cf	85 c0		 test	 eax, eax
  001d1	74 14		 je	 SHORT $LN56@ReadWutFil
  001d3	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  001da	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  001df	f3 0f 11 80 54
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+84], xmm0
$LN56@ReadWutFil:

; 227  : 					 if (strstr(buf1 , "Centre Of Gravity To Ground Distance Destroyed {m}")) { aircraft_database[i].centre_of_gravity_to_ground_distance_destroyed=v2;}  

  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@GNFBPOBH@Centre?5Of?5Gravity?5To?5Ground?5Dis@
  001ec	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  001ef	50		 push	 eax
  001f0	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  001f5	83 c4 08	 add	 esp, 8
  001f8	85 c0		 test	 eax, eax
  001fa	74 14		 je	 SHORT $LN57@ReadWutFil
  001fc	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00203	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00208	f3 0f 11 80 58
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+88], xmm0
$LN57@ReadWutFil:

; 228  : 					 if (strstr(buf1 , "Chase View Min Distance {m}")) { aircraft_database[i].chase_view_min_distance=v2;}  

  00210	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MFIJCCBF@Chase?5View?5Min?5Distance?5?$HLm?$HN@
  00215	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00218	50		 push	 eax
  00219	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0021e	83 c4 08	 add	 esp, 8
  00221	85 c0		 test	 eax, eax
  00223	74 14		 je	 SHORT $LN58@ReadWutFil
  00225	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0022c	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00231	f3 0f 11 80 5c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+92], xmm0
$LN58@ReadWutFil:

; 229  : 					 if (strstr(buf1 , "Chase View Max Distance {m}")) { aircraft_database[i].chase_view_max_distance=v2;}  

  00239	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NAACPGOH@Chase?5View?5Max?5Distance?5?$HLm?$HN@
  0023e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00247	83 c4 08	 add	 esp, 8
  0024a	85 c0		 test	 eax, eax
  0024c	74 14		 je	 SHORT $LN59@ReadWutFil
  0024e	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00255	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  0025a	f3 0f 11 80 60
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+96], xmm0
$LN59@ReadWutFil:

; 230  : 					 if (strstr(buf1 , "Chase View Min Distance Test {m}")) { aircraft_database[i].chase_view_min_distance_test=v2;}  

  00262	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BDBCEJFP@Chase?5View?5Min?5Distance?5Test?5?$HLm@
  00267	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00270	83 c4 08	 add	 esp, 8
  00273	85 c0		 test	 eax, eax
  00275	74 14		 je	 SHORT $LN60@ReadWutFil
  00277	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0027e	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00283	f3 0f 11 80 64
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+100], xmm0
$LN60@ReadWutFil:

; 231  : 					 if (strstr(buf1 , "Chase View Max Distance Test {m}")) { aircraft_database[i].chase_view_max_distance_test=v2;}        

  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FCAFHGNJ@Chase?5View?5Max?5Distance?5Test?5?$HLm@
  00290	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00299	83 c4 08	 add	 esp, 8
  0029c	85 c0		 test	 eax, eax
  0029e	74 14		 je	 SHORT $LN61@ReadWutFil
  002a0	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  002a7	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  002ac	f3 0f 11 80 68
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+104], xmm0
$LN61@ReadWutFil:

; 232  : 					 if (strstr(buf1 , "Cruise Speed {m/s}")!=NULL) { aircraft_database[i].cruise_velocity=v2;}

  002b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OEMFHODB@Cruise?5Speed?5?$HLm?1s?$HN@
  002b9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  002bc	50		 push	 eax
  002bd	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  002c2	83 c4 08	 add	 esp, 8
  002c5	85 c0		 test	 eax, eax
  002c7	74 14		 je	 SHORT $LN62@ReadWutFil
  002c9	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  002d0	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  002d5	f3 0f 11 80 6c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+108], xmm0
$LN62@ReadWutFil:

; 233  : 					 if (strstr(buf1 , "Cruise Altitude {m}")) { aircraft_database[i].cruise_altitude=v2;}  

  002dd	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PEKHEHEB@Cruise?5Altitude?5?$HLm?$HN@
  002e2	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  002e5	50		 push	 eax
  002e6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  002eb	83 c4 08	 add	 esp, 8
  002ee	85 c0		 test	 eax, eax
  002f0	74 14		 je	 SHORT $LN63@ReadWutFil
  002f2	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  002f9	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  002fe	f3 0f 11 80 70
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+112], xmm0
$LN63@ReadWutFil:

; 234  : 					 if (strstr(buf1 , "Atack Altitude {m}")) { aircraft_database[i].attack_altitude=v2;}                     

  00306	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CPKNOMFM@Atack?5Altitude?5?$HLm?$HN@
  0030b	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0030e	50		 push	 eax
  0030f	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00314	83 c4 08	 add	 esp, 8
  00317	85 c0		 test	 eax, eax
  00319	74 14		 je	 SHORT $LN64@ReadWutFil
  0031b	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00322	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00327	f3 0f 11 80 74
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+116], xmm0
$LN64@ReadWutFil:

; 235  : 					 if (strstr(buf1 , "Destroyed Bank Offset {rad}")) { aircraft_database[i].destroyed_bank_offset=v2;}               

  0032f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@ODNHHNHP@Destroyed?5Bank?5Offset?5?$HLrad?$HN@
  00334	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00337	50		 push	 eax
  00338	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0033d	83 c4 08	 add	 esp, 8
  00340	85 c0		 test	 eax, eax
  00342	74 14		 je	 SHORT $LN65@ReadWutFil
  00344	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0034b	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00350	f3 0f 11 80 78
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+120], xmm0
$LN65@ReadWutFil:

; 236  : 					 if (strstr(buf1 , "Destroyed Pitch offset {rad}")) { aircraft_database[i].destroyed_pitch_offset=v2;}  

  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LONNCLAI@Destroyed?5Pitch?5offset?5?$HLrad?$HN@
  0035d	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00366	83 c4 08	 add	 esp, 8
  00369	85 c0		 test	 eax, eax
  0036b	74 14		 je	 SHORT $LN66@ReadWutFil
  0036d	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00374	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00379	f3 0f 11 80 7c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+124], xmm0
$LN66@ReadWutFil:

; 237  : 					 if (strstr(buf1 , "Fuselage Angle {rad}")) { aircraft_database[i].fuselage_angle=v2;}                      

  00381	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FALBLCJK@Fuselage?5Angle?5?$HLrad?$HN@
  00386	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00389	50		 push	 eax
  0038a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0038f	83 c4 08	 add	 esp, 8
  00392	85 c0		 test	 eax, eax
  00394	74 14		 je	 SHORT $LN67@ReadWutFil
  00396	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0039d	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  003a2	f3 0f 11 80 80
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+128], xmm0
$LN67@ReadWutFil:

; 238  : 					 if (strstr(buf1 , "Liftoff Velocity {m/s}")) { aircraft_database[i].liftoff_velocity=v2;}                    

  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BJDAHCCJ@Liftoff?5Velocity?5?$HLm?1s?$HN@
  003af	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  003b2	50		 push	 eax
  003b3	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  003b8	83 c4 08	 add	 esp, 8
  003bb	85 c0		 test	 eax, eax
  003bd	74 14		 je	 SHORT $LN68@ReadWutFil
  003bf	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  003c6	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  003cb	f3 0f 11 80 84
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+132], xmm0
$LN68@ReadWutFil:

; 239  : 					 if (strstr(buf1 , "Main Rotor Shaft Angle {rad}")) { aircraft_database[i].main_rotor_shaft_angle=v2;}  

  003d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LEEJHMCH@Main?5Rotor?5Shaft?5Angle?5?$HLrad?$HN@
  003d8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  003db	50		 push	 eax
  003dc	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  003e1	83 c4 08	 add	 esp, 8
  003e4	85 c0		 test	 eax, eax
  003e6	74 14		 je	 SHORT $LN69@ReadWutFil
  003e8	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  003ef	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  003f4	f3 0f 11 80 88
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+136], xmm0
$LN69@ReadWutFil:

; 240  : 					 if (strstr(buf1 , "Main Rotor Direction {rad}")) { aircraft_database[i].main_rotor_direction=v2;}  

  003fc	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OCOOGONP@Main?5Rotor?5Direction?5?$HLrad?$HN@
  00401	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00404	50		 push	 eax
  00405	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0040a	83 c4 08	 add	 esp, 8
  0040d	85 c0		 test	 eax, eax
  0040f	74 14		 je	 SHORT $LN70@ReadWutFil
  00411	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00418	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  0041d	f3 0f 11 80 8c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+140], xmm0
$LN70@ReadWutFil:

; 241  : 					 if (strstr(buf1 , "Main Rotor Blade Drop Angle {rad}")) { aircraft_database[i].main_rotor_blade_droop_angle=v2;}        

  00425	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JFPHJGFB@Main?5Rotor?5Blade?5Drop?5Angle?5?$HLra@
  0042a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0042d	50		 push	 eax
  0042e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00433	83 c4 08	 add	 esp, 8
  00436	85 c0		 test	 eax, eax
  00438	74 14		 je	 SHORT $LN71@ReadWutFil
  0043a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00441	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00446	f3 0f 11 80 90
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+144], xmm0
$LN71@ReadWutFil:

; 242  : 					 if (strstr(buf1 , "Propellor Direction {rad}")) { aircraft_database[i].propellor_direction=v2;}                 

  0044e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HMNACDPM@Propellor?5Direction?5?$HLrad?$HN@
  00453	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0045c	83 c4 08	 add	 esp, 8
  0045f	85 c0		 test	 eax, eax
  00461	74 14		 je	 SHORT $LN72@ReadWutFil
  00463	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0046a	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  0046f	f3 0f 11 80 94
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+148], xmm0
$LN72@ReadWutFil:

; 243  : 					 if (strstr(buf1 , "Max Turn Rate {rad/s}")) { aircraft_database[i].max_turn_rate=v2;}                       

  00477	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OCAKCHFD@Max?5Turn?5Rate?5?$HLrad?1s?$HN@
  0047c	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0047f	50		 push	 eax
  00480	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00485	83 c4 08	 add	 esp, 8
  00488	85 c0		 test	 eax, eax
  0048a	74 14		 je	 SHORT $LN73@ReadWutFil
  0048c	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00493	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00498	f3 0f 11 80 98
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+152], xmm0
$LN73@ReadWutFil:

; 244  : 					 if (strstr(buf1 , "Max Roll {rad}")) { aircraft_database[i].max_roll=v2;}                            

  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LBHPJAGL@Max?5Roll?5?$HLrad?$HN@
  004a5	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  004a8	50		 push	 eax
  004a9	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  004ae	83 c4 08	 add	 esp, 8
  004b1	85 c0		 test	 eax, eax
  004b3	74 14		 je	 SHORT $LN74@ReadWutFil
  004b5	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  004bc	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  004c1	f3 0f 11 80 9c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+156], xmm0
$LN74@ReadWutFil:

; 245  : 					 if (strstr(buf1 , "Max Vertical Turn Allowance")) { aircraft_database[i].max_vertical_turn_allowance=v2;}         

  004c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PNCMOCEO@Max?5Vertical?5Turn?5Allowance@
  004ce	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  004d1	50		 push	 eax
  004d2	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  004d7	83 c4 08	 add	 esp, 8
  004da	85 c0		 test	 eax, eax
  004dc	74 14		 je	 SHORT $LN75@ReadWutFil
  004de	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  004e5	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  004ea	f3 0f 11 80 a0
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+160], xmm0
$LN75@ReadWutFil:

; 246  : 					 if (strstr(buf1 , "Avoidance Radius")) { aircraft_database[i].avoidance_radius=v2;}  

  004f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PFCBHFKL@Avoidance?5Radius@
  004f7	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  004fa	50		 push	 eax
  004fb	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00500	83 c4 08	 add	 esp, 8
  00503	85 c0		 test	 eax, eax
  00505	74 14		 je	 SHORT $LN76@ReadWutFil
  00507	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0050e	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00513	f3 0f 11 80 a4
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+164], xmm0
$LN76@ReadWutFil:

; 247  : 					 if (strstr(buf1 , "G Max {m/s/s}")) { aircraft_database[i].g_max=v2;}                               

  0051b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IGBDMLBA@G?5Max?5?$HLm?1s?1s?$HN@
  00520	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00523	50		 push	 eax
  00524	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00529	83 c4 08	 add	 esp, 8
  0052c	85 c0		 test	 eax, eax
  0052e	74 14		 je	 SHORT $LN77@ReadWutFil
  00530	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00537	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  0053c	f3 0f 11 80 a8
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+168], xmm0
$LN77@ReadWutFil:

; 248  : 					 if (strstr(buf1 , "Power Output")) { aircraft_database[i].power_output=v2;}                        

  00544	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PDJLBFAM@Power?5Output@
  00549	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0054c	50		 push	 eax
  0054d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00552	83 c4 08	 add	 esp, 8
  00555	85 c0		 test	 eax, eax
  00557	74 14		 je	 SHORT $LN78@ReadWutFil
  00559	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00560	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00565	f3 0f 11 80 ac
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+172], xmm0
$LN78@ReadWutFil:

; 249  : 					 if (strstr(buf1 , "Tail Rotor Direction")) { aircraft_database[i].tail_rotor_direction=v2;}                

  0056d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NIFLMKPE@Tail?5Rotor?5Direction@
  00572	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00575	50		 push	 eax
  00576	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0057b	83 c4 08	 add	 esp, 8
  0057e	85 c0		 test	 eax, eax
  00580	74 14		 je	 SHORT $LN79@ReadWutFil
  00582	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00589	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  0058e	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+176], xmm0
$LN79@ReadWutFil:

; 250  : 					 if (strstr(buf1 , "Recon Radius {m}")) { aircraft_database[i].recon_radius=v2;}                        

  00596	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MKFGJMOP@Recon?5Radius?5?$HLm?$HN@
  0059b	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0059e	50		 push	 eax
  0059f	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  005a4	83 c4 08	 add	 esp, 8
  005a7	85 c0		 test	 eax, eax
  005a9	74 14		 je	 SHORT $LN80@ReadWutFil
  005ab	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  005b2	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  005b7	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+180], xmm0
$LN80@ReadWutFil:

; 251  : 					 if (strstr(buf1 , "Scan Interval {s}")) { aircraft_database[i].target_scan_delay=v2;}  

  005bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OGDJBMHF@Scan?5Interval?5?$HLs?$HN@
  005c4	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  005c7	50		 push	 eax
  005c8	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  005cd	83 c4 08	 add	 esp, 8
  005d0	85 c0		 test	 eax, eax
  005d2	74 14		 je	 SHORT $LN81@ReadWutFil
  005d4	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  005db	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  005e0	f3 0f 11 80 b8
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+184], xmm0
$LN81@ReadWutFil:

; 252  : 					 if (strstr(buf1 , "Air Scan Range {m}")) { aircraft_database[i].air_scan_range=v2;}  

  005e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HOHBHCPP@Air?5Scan?5Range?5?$HLm?$HN@
  005ed	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  005f0	50		 push	 eax
  005f1	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  005f6	83 c4 08	 add	 esp, 8
  005f9	85 c0		 test	 eax, eax
  005fb	74 14		 je	 SHORT $LN82@ReadWutFil
  005fd	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00604	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00609	f3 0f 11 80 bc
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+188], xmm0
$LN82@ReadWutFil:

; 253  : 					 if (strstr(buf1 , "Ground Scan Range {m}")) { aircraft_database[i].surface_scan_range=v2;}  

  00611	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LBLAIIJO@Ground?5Scan?5Range?5?$HLm?$HN@
  00616	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00619	50		 push	 eax
  0061a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0061f	83 c4 08	 add	 esp, 8
  00622	85 c0		 test	 eax, eax
  00624	74 14		 je	 SHORT $LN83@ReadWutFil
  00626	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0062d	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00632	f3 0f 11 80 c0
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+192], xmm0
$LN83@ReadWutFil:

; 254  : 					 if (strstr(buf1 , "Air Threat")) { aircraft_database[i].potential_air_to_air_threat=v2;}  

  0063a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DHPOMHGL@Air?5Threat@
  0063f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00642	50		 push	 eax
  00643	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00648	83 c4 08	 add	 esp, 8
  0064b	85 c0		 test	 eax, eax
  0064d	74 14		 je	 SHORT $LN84@ReadWutFil
  0064f	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00656	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  0065b	f3 0f 11 80 c4
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+196], xmm0
$LN84@ReadWutFil:

; 255  : 					 if (strstr(buf1 , "Ground Threat")) { aircraft_database[i].potential_air_to_surface_threat=v2;}  

  00663	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IMGNHANL@Ground?5Threat@
  00668	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0066b	50		 push	 eax
  0066c	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00671	83 c4 08	 add	 esp, 8
  00674	85 c0		 test	 eax, eax
  00676	74 14		 je	 SHORT $LN85@ReadWutFil
  00678	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0067f	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  00684	f3 0f 11 80 c8
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+200], xmm0
$LN85@ReadWutFil:

; 256  : 					 if (strstr(buf1 , "Ammo Economy")) { aircraft_database[i].ammo_economy=v2;}  

  0068c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MGAEAJBP@Ammo?5Economy@
  00691	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00694	50		 push	 eax
  00695	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0069a	83 c4 08	 add	 esp, 8
  0069d	85 c0		 test	 eax, eax
  0069f	74 14		 je	 SHORT $LN86@ReadWutFil
  006a1	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  006a8	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  006ad	f3 0f 11 80 cc
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+204], xmm0
$LN86@ReadWutFil:

; 257  : 					 if (strstr(buf1 , "Fuel Default Weight")) { aircraft_database[i].fuel_default_weight=v2;}  

  006b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DBMGBNOK@Fuel?5Default?5Weight@
  006ba	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  006bd	50		 push	 eax
  006be	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  006c3	83 c4 08	 add	 esp, 8
  006c6	85 c0		 test	 eax, eax
  006c8	74 14		 je	 SHORT $LN87@ReadWutFil
  006ca	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  006d1	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  006d6	f3 0f 11 80 d0
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+208], xmm0
$LN87@ReadWutFil:

; 258  : 					 if (strstr(buf1 , "Fuel Economy")) { aircraft_database[i].fuel_economy=v2;}  

  006de	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OAJHMOAD@Fuel?5Economy@
  006e3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  006e6	50		 push	 eax
  006e7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  006ec	83 c4 08	 add	 esp, 8
  006ef	85 c0		 test	 eax, eax
  006f1	74 14		 je	 SHORT $LN88@ReadWutFil
  006f3	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  006fa	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _v2$27[ebp]
  006ff	f3 0f 11 80 d4
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+212], xmm0
$LN88@ReadWutFil:

; 259  : 					 if (strstr(buf1 , "Structure Points")) { aircraft_database[i].initial_damage_level=d2;}

  00707	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CAKEMKPL@Structure?5Points@
  0070c	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0070f	50		 push	 eax
  00710	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00715	83 c4 08	 add	 esp, 8
  00718	85 c0		 test	 eax, eax
  0071a	74 10		 je	 SHORT $LN89@ReadWutFil
  0071c	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00723	8b 4d a4	 mov	 ecx, DWORD PTR _d2$26[ebp]
  00726	89 88 e0 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+224], ecx
$LN89@ReadWutFil:

; 260  : 
; 261  : 
; 262  : 				  #if WUT_DEBUG
; 263  : 
; 264  : 					 q = buf1+41;
; 265  : 					 vname = strtok(q,"-");
; 266  : 					 debug_log("WUT: AIRCRAFT: Entity - %s [%s]; VAR: %s - %f [%d]\n", aircraft_database[i].short_display_name, ent, vname,v2,d2);
; 267  : 
; 268  : 				#endif
; 269  : 					 
; 270  : 				}//variable names
; 271  : 		}//for AIRCRAFT entities

  0072c	e9 2f fa ff ff	 jmp	 $LN6@ReadWutFil
$LN7@ReadWutFil:

; 272  : 	 }//while AIRCRAFT

  00731	e9 8f f9 ff ff	 jmp	 $LN4@ReadWutFil
$LN5@ReadWutFil:

; 273  : 
; 274  : 
; 275  : 	 //########################################################################
; 276  : 	 //#### VEHICLES ##########################################################
; 277  : 	 //########################################################################
; 278  : 
; 279  : 	 fscanf(f,"%[^\n]\n",buf);

  00736	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00739	50		 push	 eax
  0073a	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0073f	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00742	51		 push	 ecx
  00743	e8 00 00 00 00	 call	 _fscanf
  00748	83 c4 0c	 add	 esp, 12			; 0000000cH

; 280  : 	 strcpy(buf1, buf);

  0074b	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  0074e	50		 push	 eax
  0074f	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  00752	51		 push	 ecx
  00753	e8 00 00 00 00	 call	 _strcpy
  00758	83 c4 08	 add	 esp, 8
$LN9@ReadWutFil:

; 281  : 
; 282  : 	 // continue untill the next group
; 283  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Weapons, Decoys, Crate, Ejection Debris")==0))

  0075b	b8 01 00 00 00	 mov	 eax, 1
  00760	6b c8 00	 imul	 ecx, eax, 0
  00763	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  00766	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  0076a	85 c0		 test	 eax, eax
  0076c	0f 84 7f 06 00
	00		 je	 $LN10@ReadWutFil
  00772	b8 01 00 00 00	 mov	 eax, 1
  00777	6b c8 00	 imul	 ecx, eax, 0
  0077a	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  0077d	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  00781	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00784	0f 84 67 06 00
	00		 je	 $LN10@ReadWutFil
  0078a	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@MBGDBBEF@Weapons?0?5Decoys?0?5Crate?0?5Ejectio@
  0078f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00792	50		 push	 eax
  00793	e8 00 00 00 00	 call	 _strcmp
  00798	83 c4 08	 add	 esp, 8
  0079b	85 c0		 test	 eax, eax
  0079d	0f 84 4e 06 00
	00		 je	 $LN10@ReadWutFil

; 284  : 	 {
; 285  : 		  int infnr = 0, done = 0;

  007a3	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 0
  007aa	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _done$23[ebp], 0

; 286  : 		  
; 287  : 		  fscanf(f,"%[^\n]\n",buf);

  007b1	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  007b4	50		 push	 eax
  007b5	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  007ba	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  007bd	51		 push	 ecx
  007be	e8 00 00 00 00	 call	 _fscanf
  007c3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 288  : 		  // read a line
; 289  : 		  strcpy(buf1, buf);

  007c6	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  007c9	50		 push	 eax
  007ca	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  007cd	51		 push	 ecx
  007ce	e8 00 00 00 00	 call	 _strcpy
  007d3	83 c4 08	 add	 esp, 8

; 290  : 
; 291  : 		  strncpy(ent,buf,63);

  007d6	6a 3f		 push	 63			; 0000003fH
  007d8	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  007db	50		 push	 eax
  007dc	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  007df	51		 push	 ecx
  007e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  007e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 292  : 		  ent[39] = '\0';        

  007e9	b8 01 00 00 00	 mov	 eax, 1
  007ee	6b c8 27	 imul	 ecx, eax, 39
  007f1	c6 44 0d ac 00	 mov	 BYTE PTR _ent$[ebp+ecx], 0

; 293  : 		  i = (int)strlen(ent) - 1;        

  007f6	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  007f9	50		 push	 eax
  007fa	e8 00 00 00 00	 call	 _strlen
  007ff	83 c4 04	 add	 esp, 4
  00802	83 e8 01	 sub	 eax, 1
  00805	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN11@ReadWutFil:

; 294  : 		  while (ent[i] == '-') 

  00808	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0080b	0f b6 4c 05 ac	 movzx	 ecx, BYTE PTR _ent$[ebp+eax]
  00810	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  00813	75 0b		 jne	 SHORT $LN12@ReadWutFil

; 295  : 			  i--;        

  00815	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00818	83 e8 01	 sub	 eax, 1
  0081b	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  0081e	eb e8		 jmp	 SHORT $LN11@ReadWutFil
$LN12@ReadWutFil:

; 296  : 		  ent[i+1] = '\0';        

  00820	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00823	c6 44 05 ad 00	 mov	 BYTE PTR _ent$[ebp+eax+1], 0

; 297  : 				 
; 298  : 		  // replace some labels that are not correct
; 299  : 		if(strstr(ent," LCAC (air cushion)")) strcpy(ent,"Landing Craft Air Cushioned");

  00828	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HKCOICOH@?5LCAC?5?$CIair?5cushion?$CJ@
  0082d	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00830	50		 push	 eax
  00831	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00836	83 c4 08	 add	 esp, 8
  00839	85 c0		 test	 eax, eax
  0083b	74 11		 je	 SHORT $LN90@ReadWutFil
  0083d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EOKICKPE@Landing?5Craft?5Air?5Cushioned@
  00842	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00845	50		 push	 eax
  00846	e8 00 00 00 00	 call	 _strcpy
  0084b	83 c4 08	 add	 esp, 8
$LN90@ReadWutFil:

; 300  : 		if(strstr(ent," US I"              )) strcpy(ent,"Infantry");

  0084e	68 00 00 00 00	 push	 OFFSET ??_C@_05HJCMAJDB@?5US?5I@
  00853	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00856	50		 push	 eax
  00857	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0085c	83 c4 08	 add	 esp, 8
  0085f	85 c0		 test	 eax, eax
  00861	74 11		 je	 SHORT $LN91@ReadWutFil
  00863	68 00 00 00 00	 push	 OFFSET ??_C@_08OOLPMJMC@Infantry@
  00868	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0086b	50		 push	 eax
  0086c	e8 00 00 00 00	 call	 _strcpy
  00871	83 c4 08	 add	 esp, 8
$LN91@ReadWutFil:

; 301  : 		infnr = 0;

  00874	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 0

; 302  : 		if(strstr(ent," US I SAM Standing" )) strcpy(ent,"Infantry with SAM");

  0087b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HPGMILFF@?5US?5I?5SAM?5Standing@
  00880	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00883	50		 push	 eax
  00884	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00889	83 c4 08	 add	 esp, 8
  0088c	85 c0		 test	 eax, eax
  0088e	74 11		 je	 SHORT $LN92@ReadWutFil
  00890	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@
  00895	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00898	50		 push	 eax
  00899	e8 00 00 00 00	 call	 _strcpy
  0089e	83 c4 08	 add	 esp, 8
$LN92@ReadWutFil:

; 303  : 		infnr = 550;

  008a1	c7 45 9c 26 02
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 550 ; 00000226H

; 304  : 		if(strstr(ent," US I Sam Kneeling" )) strcpy(ent,"Infantry with SAM");

  008a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LFFKINOB@?5US?5I?5Sam?5Kneeling@
  008ad	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  008b0	50		 push	 eax
  008b1	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  008b6	83 c4 08	 add	 esp, 8
  008b9	85 c0		 test	 eax, eax
  008bb	74 11		 je	 SHORT $LN93@ReadWutFil
  008bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@
  008c2	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  008c5	50		 push	 eax
  008c6	e8 00 00 00 00	 call	 _strcpy
  008cb	83 c4 08	 add	 esp, 8
$LN93@ReadWutFil:

; 305  : 		infnr = 551;

  008ce	c7 45 9c 27 02
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 551 ; 00000227H

; 306  : 		if(strstr(ent," CIS I"             )) strcpy(ent,"Infantry");         

  008d5	68 00 00 00 00	 push	 OFFSET ??_C@_06LBEPEJAH@?5CIS?5I@
  008da	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  008dd	50		 push	 eax
  008de	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  008e3	83 c4 08	 add	 esp, 8
  008e6	85 c0		 test	 eax, eax
  008e8	74 11		 je	 SHORT $LN94@ReadWutFil
  008ea	68 00 00 00 00	 push	 OFFSET ??_C@_08OOLPMJMC@Infantry@
  008ef	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  008f2	50		 push	 eax
  008f3	e8 00 00 00 00	 call	 _strcpy
  008f8	83 c4 08	 add	 esp, 8
$LN94@ReadWutFil:

; 307  : 		infnr = 0;

  008fb	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 0

; 308  : 		if(strstr(ent," CIS I SAM Standing")) strcpy(ent,"Infantry with SAM");

  00902	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EKMNLADL@?5CIS?5I?5SAM?5Standing@
  00907	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0090a	50		 push	 eax
  0090b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00910	83 c4 08	 add	 esp, 8
  00913	85 c0		 test	 eax, eax
  00915	74 11		 je	 SHORT $LN95@ReadWutFil
  00917	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@
  0091c	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0091f	50		 push	 eax
  00920	e8 00 00 00 00	 call	 _strcpy
  00925	83 c4 08	 add	 esp, 8
$LN95@ReadWutFil:

; 309  : 		infnr = 552;

  00928	c7 45 9c 28 02
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 552 ; 00000228H

; 310  : 		if(strstr(ent," CIS I Sam Kneeling")) strcpy(ent,"Infantry with SAM");       

  0092f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IAPLLGIP@?5CIS?5I?5Sam?5Kneeling@
  00934	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00937	50		 push	 eax
  00938	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0093d	83 c4 08	 add	 esp, 8
  00940	85 c0		 test	 eax, eax
  00942	74 11		 je	 SHORT $LN96@ReadWutFil
  00944	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNOGAEMN@Infantry?5with?5SAM@
  00949	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0094c	50		 push	 eax
  0094d	e8 00 00 00 00	 call	 _strcpy
  00952	83 c4 08	 add	 esp, 8
$LN96@ReadWutFil:

; 311  : 		infnr = 553;

  00955	c7 45 9c 29 02
	00 00		 mov	 DWORD PTR _infnr$24[ebp], 553 ; 00000229H

; 312  : // 0 =		WEAPON_CONFIG_TYPE_UNARMED
; 313  : //550 = "WEAPON_CONFIG_TYPE_US_INFANTRY_SAM_STANDING";
; 314  : //551 = "WEAPON_CONFIG_TYPE_US_INFANTRY_SAM_KNEELING";
; 315  : //552 = "WEAPON_CONFIG_TYPE_CIS_INFANTRY_SAM_STANDING";
; 316  : //553 = "WEAPON_CONFIG_TYPE_CIS_INFANTRY_SAM_KNEELING";
; 317  : 
; 318  : 
; 319  : 		  // search through all the vehicle list
; 320  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_VEHICLES; i++)

  0095c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00963	eb 09		 jmp	 SHORT $LN15@ReadWutFil
$LN13@ReadWutFil:
  00965	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00968	83 c0 01	 add	 eax, 1
  0096b	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN15@ReadWutFil:
  0096e	83 7d f8 26	 cmp	 DWORD PTR _i$[ebp], 38	; 00000026H
  00972	0f 8d 74 04 00
	00		 jge	 $LN14@ReadWutFil

; 321  : 		  {
; 322  : 				// if found
; 323  : 				if (strcmp(vehicle_database[i].full_name, ent) == 0)

  00978	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0097b	50		 push	 eax
  0097c	69 4d f8 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00983	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx]
  00989	52		 push	 edx
  0098a	e8 00 00 00 00	 call	 _strcmp
  0098f	83 c4 08	 add	 esp, 8
  00992	85 c0		 test	 eax, eax
  00994	0f 85 4d 04 00
	00		 jne	 $LN124@ReadWutFil

; 324  : 				{
; 325  : 					 float v2=0;

  0099a	0f 57 c0	 xorps	 xmm0, xmm0
  0099d	f3 0f 11 45 94	 movss	 DWORD PTR _v2$22[ebp], xmm0

; 326  : 					 int d2 = 0;

  009a2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _d2$21[ebp], 0

; 327  : 					 char *q = buf1+83;

  009a9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  009ac	83 c0 53	 add	 eax, 83			; 00000053H
  009af	89 45 8c	 mov	 DWORD PTR _q$20[ebp], eax

; 328  : 
; 329  : 					 if (strstr(ent,"Infantry") &&  vehicle_database[i].default_weapon_config_type != infnr)

  009b2	68 00 00 00 00	 push	 OFFSET ??_C@_08OOLPMJMC@Infantry@
  009b7	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  009ba	50		 push	 eax
  009bb	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  009c0	83 c4 08	 add	 esp, 8
  009c3	85 c0		 test	 eax, eax
  009c5	74 17		 je	 SHORT $LN98@ReadWutFil
  009c7	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  009ce	8b 88 18 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+24]
  009d4	3b 4d 9c	 cmp	 ecx, DWORD PTR _infnr$24[ebp]
  009d7	74 05		 je	 SHORT $LN98@ReadWutFil

; 330  : 						 break;

  009d9	e9 0e 04 00 00	 jmp	 $LN14@ReadWutFil
$LN98@ReadWutFil:

; 331  : 					 // if the entity if an infantry, check if this infantry has the right
; 332  : 					 // weapons config type else skip, standing,kneeling,sam,cis,us is recognized by it
; 333  : 
; 334  : 					 if (infnr == 0 && done == 1)

  009de	83 7d 9c 00	 cmp	 DWORD PTR _infnr$24[ebp], 0
  009e2	75 0b		 jne	 SHORT $LN99@ReadWutFil
  009e4	83 7d 98 01	 cmp	 DWORD PTR _done$23[ebp], 1
  009e8	75 05		 jne	 SHORT $LN99@ReadWutFil

; 335  : 						 break;

  009ea	e9 fd 03 00 00	 jmp	 $LN14@ReadWutFil
$LN99@ReadWutFil:

; 336  : 					 if (infnr == 0 && done == 0)

  009ef	83 7d 9c 00	 cmp	 DWORD PTR _infnr$24[ebp], 0
  009f3	75 0d		 jne	 SHORT $LN100@ReadWutFil
  009f5	83 7d 98 00	 cmp	 DWORD PTR _done$23[ebp], 0
  009f9	75 07		 jne	 SHORT $LN100@ReadWutFil

; 337  : 						 done = 1;

  009fb	c7 45 98 01 00
	00 00		 mov	 DWORD PTR _done$23[ebp], 1
$LN100@ReadWutFil:

; 338  : 					 
; 339  : 					 
; 340  : 					 get_values(q, &v2, &d2);

  00a02	8d 45 90	 lea	 eax, DWORD PTR _d2$21[ebp]
  00a05	50		 push	 eax
  00a06	8d 4d 94	 lea	 ecx, DWORD PTR _v2$22[ebp]
  00a09	51		 push	 ecx
  00a0a	8b 55 8c	 mov	 edx, DWORD PTR _q$20[ebp]
  00a0d	52		 push	 edx
  00a0e	e8 00 00 00 00	 call	 ?get_values@@YGXPADPAMPAH@Z ; get_values

; 341  : 
; 342  : 					 if (strstr(buf1 , "Chase View Min Distance {m}")) {  vehicle_database[i].chase_view_min_distance=v2;}  

  00a13	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MFIJCCBF@Chase?5View?5Min?5Distance?5?$HLm?$HN@
  00a18	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00a1b	50		 push	 eax
  00a1c	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00a21	83 c4 08	 add	 esp, 8
  00a24	85 c0		 test	 eax, eax
  00a26	74 14		 je	 SHORT $LN101@ReadWutFil
  00a28	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00a2f	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00a34	f3 0f 11 80 4c
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+76], xmm0
$LN101@ReadWutFil:

; 343  : 					 if (strstr(buf1 , "Chase View Max Distance {m}")) {  vehicle_database[i].chase_view_max_distance=v2;}  

  00a3c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NAACPGOH@Chase?5View?5Max?5Distance?5?$HLm?$HN@
  00a41	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00a44	50		 push	 eax
  00a45	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00a4a	83 c4 08	 add	 esp, 8
  00a4d	85 c0		 test	 eax, eax
  00a4f	74 14		 je	 SHORT $LN102@ReadWutFil
  00a51	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00a58	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00a5d	f3 0f 11 80 50
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+80], xmm0
$LN102@ReadWutFil:

; 344  : 					 if (strstr(buf1 , "Chase View Min Distance Test {m}")) {  vehicle_database[i].chase_view_min_distance_test=v2;}  

  00a65	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BDBCEJFP@Chase?5View?5Min?5Distance?5Test?5?$HLm@
  00a6a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00a6d	50		 push	 eax
  00a6e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00a73	83 c4 08	 add	 esp, 8
  00a76	85 c0		 test	 eax, eax
  00a78	74 14		 je	 SHORT $LN103@ReadWutFil
  00a7a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00a81	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00a86	f3 0f 11 80 54
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+84], xmm0
$LN103@ReadWutFil:

; 345  : 					 if (strstr(buf1 , "Chase View Max Distance Test {m}")) {  vehicle_database[i].chase_view_max_distance_test=v2;}  

  00a8e	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FCAFHGNJ@Chase?5View?5Max?5Distance?5Test?5?$HLm@
  00a93	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00a96	50		 push	 eax
  00a97	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00a9c	83 c4 08	 add	 esp, 8
  00a9f	85 c0		 test	 eax, eax
  00aa1	74 14		 je	 SHORT $LN104@ReadWutFil
  00aa3	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00aaa	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00aaf	f3 0f 11 80 58
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+88], xmm0
$LN104@ReadWutFil:

; 346  : 					 if (strstr(buf1 , "Cruise Velocity {m/s}")) {  vehicle_database[i].cruise_velocity=v2;}  

  00ab7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OBHPCBDC@Cruise?5Velocity?5?$HLm?1s?$HN@
  00abc	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00abf	50		 push	 eax
  00ac0	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00ac5	83 c4 08	 add	 esp, 8
  00ac8	85 c0		 test	 eax, eax
  00aca	74 14		 je	 SHORT $LN105@ReadWutFil
  00acc	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00ad3	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00ad8	f3 0f 11 80 5c
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+92], xmm0
$LN105@ReadWutFil:

; 347  : 					 if (strstr(buf1 , "Axle Length {m}")) {  vehicle_database[i].axle_length=v2;}  

  00ae0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JLAPAIN@Axle?5Length?5?$HLm?$HN@
  00ae5	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00ae8	50		 push	 eax
  00ae9	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00aee	83 c4 08	 add	 esp, 8
  00af1	85 c0		 test	 eax, eax
  00af3	74 14		 je	 SHORT $LN106@ReadWutFil
  00af5	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00afc	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00b01	f3 0f 11 80 60
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+96], xmm0
$LN106@ReadWutFil:

; 348  : 					 if (strstr(buf1 , "Max Acceleration")) {  vehicle_database[i].max_acceleration=v2;}  

  00b09	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EDNFIGLK@Max?5Acceleration@
  00b0e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00b11	50		 push	 eax
  00b12	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00b17	83 c4 08	 add	 esp, 8
  00b1a	85 c0		 test	 eax, eax
  00b1c	74 14		 je	 SHORT $LN107@ReadWutFil
  00b1e	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00b25	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00b2a	f3 0f 11 80 64
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+100], xmm0
$LN107@ReadWutFil:

; 349  : 					 if (strstr(buf1 , "Max Turn Rate {rad/s}")) {  vehicle_database[i].max_turn_rate=v2;}  

  00b32	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OCAKCHFD@Max?5Turn?5Rate?5?$HLrad?1s?$HN@
  00b37	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00b3a	50		 push	 eax
  00b3b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00b40	83 c4 08	 add	 esp, 8
  00b43	85 c0		 test	 eax, eax
  00b45	74 14		 je	 SHORT $LN108@ReadWutFil
  00b47	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00b4e	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00b53	f3 0f 11 80 68
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+104], xmm0
$LN108@ReadWutFil:

; 350  : 					 if (strstr(buf1 , "G Max {m/s/s}")) {  vehicle_database[i].g_max=v2;}  

  00b5b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IGBDMLBA@G?5Max?5?$HLm?1s?1s?$HN@
  00b60	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00b63	50		 push	 eax
  00b64	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00b69	83 c4 08	 add	 esp, 8
  00b6c	85 c0		 test	 eax, eax
  00b6e	74 14		 je	 SHORT $LN109@ReadWutFil
  00b70	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00b77	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00b7c	f3 0f 11 80 6c
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+108], xmm0
$LN109@ReadWutFil:

; 351  : 					 if (strstr(buf1 , "Speed {m/s}")) {  vehicle_database[i].power_output=v2;}  

  00b84	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LPPLFPLJ@Speed?5?$HLm?1s?$HN@
  00b89	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00b8c	50		 push	 eax
  00b8d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00b92	83 c4 08	 add	 esp, 8
  00b95	85 c0		 test	 eax, eax
  00b97	74 14		 je	 SHORT $LN110@ReadWutFil
  00b99	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00ba0	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00ba5	f3 0f 11 80 70
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+112], xmm0
$LN110@ReadWutFil:

; 352  : 					 if (strstr(buf1 , "Recon Range {m}")) {  vehicle_database[i].recon_radius=v2;}  

  00bad	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DBBFPNFF@Recon?5Range?5?$HLm?$HN@
  00bb2	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00bb5	50		 push	 eax
  00bb6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00bbb	83 c4 08	 add	 esp, 8
  00bbe	85 c0		 test	 eax, eax
  00bc0	74 14		 je	 SHORT $LN111@ReadWutFil
  00bc2	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00bc9	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00bce	f3 0f 11 80 74
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+116], xmm0
$LN111@ReadWutFil:

; 353  : 					 if (strstr(buf1 , "Scan Interval {s}")) {  vehicle_database[i].target_scan_delay=v2;}  

  00bd6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OGDJBMHF@Scan?5Interval?5?$HLs?$HN@
  00bdb	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00bde	50		 push	 eax
  00bdf	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00be4	83 c4 08	 add	 esp, 8
  00be7	85 c0		 test	 eax, eax
  00be9	74 14		 je	 SHORT $LN112@ReadWutFil
  00beb	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00bf2	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00bf7	f3 0f 11 80 78
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+120], xmm0
$LN112@ReadWutFil:

; 354  : 					 if (strstr(buf1 , "Air Search Min {m}")) {  vehicle_database[i].air_scan_floor=v2;}  

  00bff	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DLDCANEE@Air?5Search?5Min?5?$HLm?$HN@
  00c04	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00c07	50		 push	 eax
  00c08	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00c0d	83 c4 08	 add	 esp, 8
  00c10	85 c0		 test	 eax, eax
  00c12	74 14		 je	 SHORT $LN113@ReadWutFil
  00c14	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00c1b	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00c20	f3 0f 11 80 7c
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+124], xmm0
$LN113@ReadWutFil:

; 355  : 					 if (strstr(buf1 , "Air Search Max {m}")) {  vehicle_database[i].air_scan_ceiling=v2;}  

  00c28	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NNFCKCKF@Air?5Search?5Max?5?$HLm?$HN@
  00c2d	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00c30	50		 push	 eax
  00c31	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00c36	83 c4 08	 add	 esp, 8
  00c39	85 c0		 test	 eax, eax
  00c3b	74 14		 je	 SHORT $LN114@ReadWutFil
  00c3d	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00c44	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00c49	f3 0f 11 80 80
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+128], xmm0
$LN114@ReadWutFil:

; 356  : 					 if (strstr(buf1 , "Air Scan Range {m}")) {  vehicle_database[i].air_scan_range=v2;}  

  00c51	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HOHBHCPP@Air?5Scan?5Range?5?$HLm?$HN@
  00c56	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00c59	50		 push	 eax
  00c5a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00c5f	83 c4 08	 add	 esp, 8
  00c62	85 c0		 test	 eax, eax
  00c64	74 14		 je	 SHORT $LN115@ReadWutFil
  00c66	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00c6d	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00c72	f3 0f 11 80 84
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+132], xmm0
$LN115@ReadWutFil:

; 357  : 					 if (strstr(buf1 , "Ground Scan Range {m}")) {  vehicle_database[i].surface_scan_range=v2;}  

  00c7a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LBLAIIJO@Ground?5Scan?5Range?5?$HLm?$HN@
  00c7f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00c82	50		 push	 eax
  00c83	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00c88	83 c4 08	 add	 esp, 8
  00c8b	85 c0		 test	 eax, eax
  00c8d	74 14		 je	 SHORT $LN116@ReadWutFil
  00c8f	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00c96	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00c9b	f3 0f 11 80 88
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+136], xmm0
$LN116@ReadWutFil:

; 358  : 					 if (strstr(buf1 , "Air Threat")) {  vehicle_database[i].potential_surface_to_air_threat=v2;}  

  00ca3	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DHPOMHGL@Air?5Threat@
  00ca8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00cab	50		 push	 eax
  00cac	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00cb1	83 c4 08	 add	 esp, 8
  00cb4	85 c0		 test	 eax, eax
  00cb6	74 14		 je	 SHORT $LN117@ReadWutFil
  00cb8	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00cbf	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00cc4	f3 0f 11 80 8c
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+140], xmm0
$LN117@ReadWutFil:

; 359  : 					 if (strstr(buf1 , "Ground Threat")) {  vehicle_database[i].potential_surface_to_surface_threat=v2;}  

  00ccc	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IMGNHANL@Ground?5Threat@
  00cd1	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00cd4	50		 push	 eax
  00cd5	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00cda	83 c4 08	 add	 esp, 8
  00cdd	85 c0		 test	 eax, eax
  00cdf	74 14		 je	 SHORT $LN118@ReadWutFil
  00ce1	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00ce8	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00ced	f3 0f 11 80 90
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+144], xmm0
$LN118@ReadWutFil:

; 360  : 					 if (strstr(buf1 , "Ammo Economy")) {  vehicle_database[i].ammo_economy=v2;}  

  00cf5	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MGAEAJBP@Ammo?5Economy@
  00cfa	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00cfd	50		 push	 eax
  00cfe	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00d03	83 c4 08	 add	 esp, 8
  00d06	85 c0		 test	 eax, eax
  00d08	74 14		 je	 SHORT $LN119@ReadWutFil
  00d0a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00d11	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00d16	f3 0f 11 80 94
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+148], xmm0
$LN119@ReadWutFil:

; 361  : 					 if (strstr(buf1 , "Fuel Economy")) {  vehicle_database[i].fuel_economy=v2;}  

  00d1e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OAJHMOAD@Fuel?5Economy@
  00d23	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00d26	50		 push	 eax
  00d27	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00d2c	83 c4 08	 add	 esp, 8
  00d2f	85 c0		 test	 eax, eax
  00d31	74 14		 je	 SHORT $LN120@ReadWutFil
  00d33	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00d3a	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00d3f	f3 0f 11 80 98
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+152], xmm0
$LN120@ReadWutFil:

; 362  : 					 if (strstr(buf1 , "Front Damage Modifier")) {  vehicle_database[i].armour_front=v2;}  

  00d47	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MNOIBNMI@Front?5Damage?5Modifier@
  00d4c	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00d4f	50		 push	 eax
  00d50	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00d55	83 c4 08	 add	 esp, 8
  00d58	85 c0		 test	 eax, eax
  00d5a	74 14		 je	 SHORT $LN121@ReadWutFil
  00d5c	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00d63	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00d68	f3 0f 11 80 9c
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+156], xmm0
$LN121@ReadWutFil:

; 363  : 					 if (strstr(buf1 , "Flank Damage Modifier")) {  vehicle_database[i].armour_side=v2;}  

  00d70	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JEOHLAID@Flank?5Damage?5Modifier@
  00d75	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00d78	50		 push	 eax
  00d79	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00d7e	83 c4 08	 add	 esp, 8
  00d81	85 c0		 test	 eax, eax
  00d83	74 14		 je	 SHORT $LN122@ReadWutFil
  00d85	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00d8c	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00d91	f3 0f 11 80 a0
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+160], xmm0
$LN122@ReadWutFil:

; 364  : 					 if (strstr(buf1 , "Rear Damage Modifier")) {  vehicle_database[i].armour_rear=v2;}  

  00d99	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BBEELPEJ@Rear?5Damage?5Modifier@
  00d9e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00da1	50		 push	 eax
  00da2	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00da7	83 c4 08	 add	 esp, 8
  00daa	85 c0		 test	 eax, eax
  00dac	74 14		 je	 SHORT $LN123@ReadWutFil
  00dae	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00db5	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v2$22[ebp]
  00dba	f3 0f 11 80 a4
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+164], xmm0
$LN123@ReadWutFil:

; 365  : 					 if (strstr(buf1 , "Structure Points")) {  vehicle_database[i].initial_damage_level=d2;}

  00dc2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CAKEMKPL@Structure?5Points@
  00dc7	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00dca	50		 push	 eax
  00dcb	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00dd0	83 c4 08	 add	 esp, 8
  00dd3	85 c0		 test	 eax, eax
  00dd5	74 10		 je	 SHORT $LN124@ReadWutFil
  00dd7	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00dde	8b 4d 90	 mov	 ecx, DWORD PTR _d2$21[ebp]
  00de1	89 88 a8 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+168], ecx
$LN124@ReadWutFil:

; 366  : 
; 367  : 
; 368  : 				#if WUT_DEBUG
; 369  : 					 q = buf1+41;
; 370  : 					 vname = strtok(q,"-");
; 371  : 				debug_log("WUT: VEHICLE: Entity - %s [%s]; VAR %s - %f [%d]\n", vehicle_database[i].full_name, ent, vname,v2,d2);
; 372  : 				
; 373  : 				#endif
; 374  : 					 
; 375  : 				}//variable names
; 376  : 		}//for VEHICLES entities

  00de7	e9 79 fb ff ff	 jmp	 $LN13@ReadWutFil
$LN14@ReadWutFil:

; 377  : 	 }//while VEHICLES

  00dec	e9 6a f9 ff ff	 jmp	 $LN9@ReadWutFil
$LN10@ReadWutFil:

; 378  : 
; 379  : 
; 380  : 	 //#######################################################################
; 381  : 	 //#### WEAPONS ##########################################################
; 382  : 	 //#######################################################################
; 383  : 
; 384  : 	 fscanf(f,"%[^\n]\n",buf);

  00df1	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00df4	50		 push	 eax
  00df5	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00dfa	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00dfd	51		 push	 ecx
  00dfe	e8 00 00 00 00	 call	 _fscanf
  00e03	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 	 strcpy(buf1, buf);

  00e06	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00e09	50		 push	 eax
  00e0a	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  00e0d	51		 push	 ecx
  00e0e	e8 00 00 00 00	 call	 _strcpy
  00e13	83 c4 08	 add	 esp, 8
$LN16@ReadWutFil:

; 386  : 
; 387  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Keysites")==0))

  00e16	b8 01 00 00 00	 mov	 eax, 1
  00e1b	6b c8 00	 imul	 ecx, eax, 0
  00e1e	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  00e21	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  00e25	85 c0		 test	 eax, eax
  00e27	0f 84 0b 08 00
	00		 je	 $LN17@ReadWutFil
  00e2d	b8 01 00 00 00	 mov	 eax, 1
  00e32	6b c8 00	 imul	 ecx, eax, 0
  00e35	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  00e38	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  00e3c	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00e3f	0f 84 f3 07 00
	00		 je	 $LN17@ReadWutFil
  00e45	68 00 00 00 00	 push	 OFFSET ??_C@_08BDANDDMK@Keysites@
  00e4a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00e4d	50		 push	 eax
  00e4e	e8 00 00 00 00	 call	 _strcmp
  00e53	83 c4 08	 add	 esp, 8
  00e56	85 c0		 test	 eax, eax
  00e58	0f 84 da 07 00
	00		 je	 $LN17@ReadWutFil

; 388  : 	 {
; 389  : 		  fscanf(f,"%[^\n]\n",buf);

  00e5e	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00e61	50		 push	 eax
  00e62	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00e67	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00e6a	51		 push	 ecx
  00e6b	e8 00 00 00 00	 call	 _fscanf
  00e70	83 c4 0c	 add	 esp, 12			; 0000000cH

; 390  : 		  // read a line
; 391  : 		  strcpy(buf1, buf);

  00e73	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00e76	50		 push	 eax
  00e77	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  00e7a	51		 push	 ecx
  00e7b	e8 00 00 00 00	 call	 _strcpy
  00e80	83 c4 08	 add	 esp, 8

; 392  : 
; 393  : 		  strncpy(ent,buf,63);

  00e83	6a 3f		 push	 63			; 0000003fH
  00e85	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  00e88	50		 push	 eax
  00e89	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  00e8c	51		 push	 ecx
  00e8d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00e93	83 c4 0c	 add	 esp, 12			; 0000000cH

; 394  : 		  ent[39] = '\0';        

  00e96	b8 01 00 00 00	 mov	 eax, 1
  00e9b	6b c8 27	 imul	 ecx, eax, 39
  00e9e	c6 44 0d ac 00	 mov	 BYTE PTR _ent$[ebp+ecx], 0

; 395  : 		  i = (int)strlen(ent) - 1;        

  00ea3	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00ea6	50		 push	 eax
  00ea7	e8 00 00 00 00	 call	 _strlen
  00eac	83 c4 04	 add	 esp, 4
  00eaf	83 e8 01	 sub	 eax, 1
  00eb2	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN18@ReadWutFil:

; 396  : 		  while (ent[i] == '-') 

  00eb5	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00eb8	0f b6 4c 05 ac	 movzx	 ecx, BYTE PTR _ent$[ebp+eax]
  00ebd	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  00ec0	75 0b		 jne	 SHORT $LN19@ReadWutFil

; 397  : 			  i--;        

  00ec2	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00ec5	83 e8 01	 sub	 eax, 1
  00ec8	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  00ecb	eb e8		 jmp	 SHORT $LN18@ReadWutFil
$LN19@ReadWutFil:

; 398  : 		  ent[i+1] = '\0';        

  00ecd	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00ed0	c6 44 05 ad 00	 mov	 BYTE PTR _ent$[ebp+eax+1], 0

; 399  : 		  
; 400  : 
; 401  : 		  // search through all the vehicle list
; 402  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_WEAPONS; i++)

  00ed5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00edc	eb 09		 jmp	 SHORT $LN22@ReadWutFil
$LN20@ReadWutFil:
  00ede	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00ee1	83 c0 01	 add	 eax, 1
  00ee4	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN22@ReadWutFil:
  00ee7	83 7d f8 4c	 cmp	 DWORD PTR _i$[ebp], 76	; 0000004cH
  00eeb	0f 8d 42 07 00
	00		 jge	 $LN21@ReadWutFil

; 403  : 		  {
; 404  : 			  if (strcmp(weapon_database[i].full_name, ent) == 0)

  00ef1	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  00ef4	50		 push	 eax
  00ef5	69 4d f8 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  00efc	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx]
  00f02	52		 push	 edx
  00f03	e8 00 00 00 00	 call	 _strcmp
  00f08	83 c4 08	 add	 esp, 8
  00f0b	85 c0		 test	 eax, eax
  00f0d	0f 85 1b 07 00
	00		 jne	 $LN171@ReadWutFil

; 405  : 			  {
; 406  : 					float v2 = 0;

  00f13	0f 57 c0	 xorps	 xmm0, xmm0
  00f16	f3 0f 11 45 88	 movss	 DWORD PTR _v2$19[ebp], xmm0

; 407  : 					int d2 = 0;

  00f1b	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _d2$18[ebp], 0

; 408  : 					char *q = buf1+83;

  00f22	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00f25	83 c0 53	 add	 eax, 83			; 00000053H
  00f28	89 45 80	 mov	 DWORD PTR _q$17[ebp], eax

; 409  : 
; 410  : 					get_values(q, &v2, &d2);

  00f2b	8d 45 84	 lea	 eax, DWORD PTR _d2$18[ebp]
  00f2e	50		 push	 eax
  00f2f	8d 4d 88	 lea	 ecx, DWORD PTR _v2$19[ebp]
  00f32	51		 push	 ecx
  00f33	8b 55 80	 mov	 edx, DWORD PTR _q$17[ebp]
  00f36	52		 push	 edx
  00f37	e8 00 00 00 00	 call	 ?get_values@@YGXPADPAMPAH@Z ; get_values

; 411  : 				//VJ 030603 changed "Guidance Type" to "Guidance" for WUT 3.5
; 412  : 				if ( strstr(buf1, "Guidance"                            )) { weapon_database[i].guidance_type = ( weapon_guidance_types ) d2; }                         

  00f3c	68 00 00 00 00	 push	 OFFSET ??_C@_08OHEOGKEH@Guidance@
  00f41	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00f44	50		 push	 eax
  00f45	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00f4a	83 c4 08	 add	 esp, 8
  00f4d	85 c0		 test	 eax, eax
  00f4f	74 10		 je	 SHORT $LN126@ReadWutFil
  00f51	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  00f58	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  00f5b	89 88 18 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+24], ecx
$LN126@ReadWutFil:

; 413  : 				if ( strstr(buf1, "Aiming Type"                         )) { weapon_database[i].aiming_type = ( weapon_aiming_types ) d2; }                           

  00f61	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MLKPGGPG@Aiming?5Type@
  00f66	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00f69	50		 push	 eax
  00f6a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00f6f	83 c4 08	 add	 esp, 8
  00f72	85 c0		 test	 eax, eax
  00f74	74 10		 je	 SHORT $LN127@ReadWutFil
  00f76	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  00f7d	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  00f80	89 88 1c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28], ecx
$LN127@ReadWutFil:

; 414  : 				if ( strstr(buf1, "Decoy Type"                          )) { weapon_database[i].decoy_type = ( weapon_decoy_types ) d2; }                            

  00f86	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EAIBAFFN@Decoy?5Type@
  00f8b	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00f8e	50		 push	 eax
  00f8f	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00f94	83 c4 08	 add	 esp, 8
  00f97	85 c0		 test	 eax, eax
  00f99	74 10		 je	 SHORT $LN128@ReadWutFil
  00f9b	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  00fa2	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  00fa5	89 88 20 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+32], ecx
$LN128@ReadWutFil:

; 415  : 				if ( strstr(buf1, "Warhead Type"                        )) { weapon_database[i].warhead_type = ( weapon_warhead_types ) d2; }                          

  00fab	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LGMEHPCE@Warhead?5Type@
  00fb0	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00fb3	50		 push	 eax
  00fb4	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00fb9	83 c4 08	 add	 esp, 8
  00fbc	85 c0		 test	 eax, eax
  00fbe	74 10		 je	 SHORT $LN129@ReadWutFil
  00fc0	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  00fc7	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  00fca	89 88 24 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+36], ecx
$LN129@ReadWutFil:

; 416  : 				if ( strstr(buf1, "Threat Type"                         )) { weapon_database[i].threat_type = ( threat_types ) d2; }                           

  00fd0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CBBNJOFE@Threat?5Type@
  00fd5	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00fd8	50		 push	 eax
  00fd9	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  00fde	83 c4 08	 add	 esp, 8
  00fe1	85 c0		 test	 eax, eax
  00fe3	74 10		 je	 SHORT $LN130@ReadWutFil
  00fe5	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  00fec	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  00fef	89 88 28 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+40], ecx
$LN130@ReadWutFil:

; 417  : 				if ( strstr(buf1, "Launch Sound Effect Sub Type"        )) { weapon_database[i].launch_sound_effect_sub_type = d2; }          

  00ff5	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PLCBKFOK@Launch?5Sound?5Effect?5Sub?5Type@
  00ffa	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  00ffd	50		 push	 eax
  00ffe	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01003	83 c4 08	 add	 esp, 8
  01006	85 c0		 test	 eax, eax
  01008	74 10		 je	 SHORT $LN131@ReadWutFil
  0100a	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01011	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01014	89 88 2c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+44], ecx
$LN131@ReadWutFil:

; 418  : 				if ( strstr(buf1, "Interior Launch Sound Effect"        )) { weapon_database[i].interior_launch_sound_effect = d2; }          

  0101a	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@EAHBKPCE@Interior?5Launch?5Sound?5Effect@
  0101f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01022	50		 push	 eax
  01023	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01028	83 c4 08	 add	 esp, 8
  0102b	85 c0		 test	 eax, eax
  0102d	74 10		 je	 SHORT $LN132@ReadWutFil
  0102f	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01036	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01039	89 88 30 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+48], ecx
$LN132@ReadWutFil:

; 419  : 				if ( strstr(buf1, "Exterior Launch Sound Effect"        )) { weapon_database[i].exterior_launch_sound_effect = d2; }          

  0103f	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KHCANHMJ@Exterior?5Launch?5Sound?5Effect@
  01044	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01047	50		 push	 eax
  01048	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0104d	83 c4 08	 add	 esp, 8
  01050	85 c0		 test	 eax, eax
  01052	74 10		 je	 SHORT $LN133@ReadWutFil
  01054	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0105b	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  0105e	89 88 34 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+52], ecx
$LN133@ReadWutFil:

; 420  : 				if ( strstr(buf1, "Continuous Sound Effect"             )) { weapon_database[i].continuous_sound_effect = d2; }               

  01064	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KKLAJHCJ@Continuous?5Sound?5Effect@
  01069	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0106c	50		 push	 eax
  0106d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01072	83 c4 08	 add	 esp, 8
  01075	85 c0		 test	 eax, eax
  01077	74 10		 je	 SHORT $LN134@ReadWutFil
  01079	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01080	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01083	89 88 38 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+56], ecx
$LN134@ReadWutFil:

; 421  : 				if ( strstr(buf1, "Weapon Selected CPG Speech"          )) { weapon_database[i].weapon_selected_cpg_speech = d2; }            

  01089	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CMJDCDJC@Weapon?5Selected?5CPG?5Speech@
  0108e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01091	50		 push	 eax
  01092	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01097	83 c4 08	 add	 esp, 8
  0109a	85 c0		 test	 eax, eax
  0109c	74 10		 je	 SHORT $LN135@ReadWutFil
  0109e	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  010a5	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  010a8	89 88 3c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+60], ecx
$LN135@ReadWutFil:

; 422  : 				if ( strstr(buf1, "Weapon Low CPG Speech"               )) { weapon_database[i].weapon_low_cpg_speech = d2; }                 

  010ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CFBBAMAI@Weapon?5Low?5CPG?5Speech@
  010b3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  010b6	50		 push	 eax
  010b7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  010bc	83 c4 08	 add	 esp, 8
  010bf	85 c0		 test	 eax, eax
  010c1	74 10		 je	 SHORT $LN136@ReadWutFil
  010c3	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  010ca	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  010cd	89 88 40 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+64], ecx
$LN136@ReadWutFil:

; 423  : 				if ( strstr(buf1, "Weapon Out CPG Speech"               )) { weapon_database[i].weapon_out_cpg_speech = d2; }                 

  010d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DNCDOMEI@Weapon?5Out?5CPG?5Speech@
  010d8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  010db	50		 push	 eax
  010dc	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  010e1	83 c4 08	 add	 esp, 8
  010e4	85 c0		 test	 eax, eax
  010e6	74 10		 je	 SHORT $LN137@ReadWutFil
  010e8	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  010ef	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  010f2	89 88 44 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+68], ecx
$LN137@ReadWutFil:

; 424  : 				if ( strstr(buf1, "Weapon Launched CPG Speech"          )) { weapon_database[i].weapon_launched_cpg_speech = d2; }            

  010f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DLBPJDDA@Weapon?5Launched?5CPG?5Speech@
  010fd	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01100	50		 push	 eax
  01101	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01106	83 c4 08	 add	 esp, 8
  01109	85 c0		 test	 eax, eax
  0110b	74 10		 je	 SHORT $LN138@ReadWutFil
  0110d	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01114	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01117	89 88 48 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+72], ecx
$LN138@ReadWutFil:

; 425  : 				if ( strstr(buf1, "Weapon Launched Wingman Speech"      )) { weapon_database[i].weapon_launched_wingman_speech = d2; }        

  0111d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GEIANBOO@Weapon?5Launched?5Wingman?5Speech@
  01122	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01125	50		 push	 eax
  01126	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0112b	83 c4 08	 add	 esp, 8
  0112e	85 c0		 test	 eax, eax
  01130	74 10		 je	 SHORT $LN139@ReadWutFil
  01132	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01139	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  0113c	89 88 4c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+76], ecx
$LN139@ReadWutFil:

; 426  : 				if ( strstr(buf1, "Report Ammo Low Count"               )) { weapon_database[i].report_ammo_low_count = d2; }                 

  01142	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@KLFIDINK@Report?5Ammo?5Low?5Count@
  01147	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0114a	50		 push	 eax
  0114b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01150	83 c4 08	 add	 esp, 8
  01153	85 c0		 test	 eax, eax
  01155	74 10		 je	 SHORT $LN140@ReadWutFil
  01157	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0115e	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01161	89 88 50 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+80], ecx
$LN140@ReadWutFil:

; 427  : 				if ( strstr(buf1, "Gun Shake"                           )) { weapon_database[i].gun_shake = d2; }                             

  01167	68 00 00 00 00	 push	 OFFSET ??_C@_09CMDBOLEP@Gun?5Shake@
  0116c	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0116f	50		 push	 eax
  01170	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01175	83 c4 08	 add	 esp, 8
  01178	85 c0		 test	 eax, eax
  0117a	74 10		 je	 SHORT $LN141@ReadWutFil
  0117c	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01183	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01186	89 88 54 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+84], ecx
$LN141@ReadWutFil:

; 428  : 				if ( strstr(buf1, "Damage Soft"                         )) { weapon_database[i].soft_damage_capability = d2; }                

  0118c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FGOHHADI@Damage?5Soft@
  01191	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01194	50		 push	 eax
  01195	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0119a	83 c4 08	 add	 esp, 8
  0119d	85 c0		 test	 eax, eax
  0119f	74 10		 je	 SHORT $LN142@ReadWutFil
  011a1	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  011a8	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  011ab	89 88 58 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+88], ecx
$LN142@ReadWutFil:

; 429  : 				if ( strstr(buf1, "Damage Hard"                         )) { weapon_database[i].hard_damage_capability = d2; }                

  011b1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PAOFLIGF@Damage?5Hard@
  011b6	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  011b9	50		 push	 eax
  011ba	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  011bf	83 c4 08	 add	 esp, 8
  011c2	85 c0		 test	 eax, eax
  011c4	74 10		 je	 SHORT $LN143@ReadWutFil
  011c6	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  011cd	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  011d0	89 88 5c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+92], ecx
$LN143@ReadWutFil:

; 430  : 				if ( strstr(buf1, "Smoke Trail Type"                    )) { weapon_database[i].smoke_trail_type = d2; }                      

  011d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KDCKGBOC@Smoke?5Trail?5Type@
  011db	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  011de	50		 push	 eax
  011df	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  011e4	83 c4 08	 add	 esp, 8
  011e7	85 c0		 test	 eax, eax
  011e9	74 10		 je	 SHORT $LN144@ReadWutFil
  011eb	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  011f2	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  011f5	89 88 60 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+96], ecx
$LN144@ReadWutFil:

; 431  : 				if ( strstr(buf1, "Acquires Launchers Forward Velocity" )) { weapon_database[i].acquire_parent_forward_velocity = d2; }       

  011fb	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@IJJCBDEE@Acquires?5Launchers?5Forward?5Velo@
  01200	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01203	50		 push	 eax
  01204	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01209	83 c4 08	 add	 esp, 8
  0120c	85 c0		 test	 eax, eax
  0120e	74 10		 je	 SHORT $LN145@ReadWutFil
  01210	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01217	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  0121a	89 88 64 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+100], ecx
$LN145@ReadWutFil:

; 432  : 				if ( strstr(buf1, "Ignore Gravity"                      )) { weapon_database[i].ignore_gravity = d2; }                        

  01220	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MGKJEPAN@Ignore?5Gravity@
  01225	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01228	50		 push	 eax
  01229	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0122e	83 c4 08	 add	 esp, 8
  01231	85 c0		 test	 eax, eax
  01233	74 10		 je	 SHORT $LN146@ReadWutFil
  01235	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0123c	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  0123f	89 88 68 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+104], ecx
$LN146@ReadWutFil:

; 433  : 				if ( strstr(buf1, "Survive Ground Impact"               )) { weapon_database[i].survive_ground_impact = d2; }                 

  01245	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FNLJLNGG@Survive?5Ground?5Impact@
  0124a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0124d	50		 push	 eax
  0124e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01253	83 c4 08	 add	 esp, 8
  01256	85 c0		 test	 eax, eax
  01258	74 10		 je	 SHORT $LN147@ReadWutFil
  0125a	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01261	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01264	89 88 6c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+108], ecx
$LN147@ReadWutFil:

; 434  : 				if ( strstr(buf1, "In Flight Collision Check"           )) { weapon_database[i].in_flight_collision_check = d2; }             

  0126a	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@PHIEOBIL@In?5Flight?5Collision?5Check@
  0126f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01272	50		 push	 eax
  01273	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01278	83 c4 08	 add	 esp, 8
  0127b	85 c0		 test	 eax, eax
  0127d	74 10		 je	 SHORT $LN148@ReadWutFil
  0127f	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01286	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  01289	89 88 70 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+112], ecx
$LN148@ReadWutFil:

; 435  : 				if ( strstr(buf1, "Viewable Weapon"                     )) { weapon_database[i].viewable_weapon = d2; }                       

  0128f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CFPMOMGG@Viewable?5Weapon@
  01294	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01297	50		 push	 eax
  01298	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0129d	83 c4 08	 add	 esp, 8
  012a0	85 c0		 test	 eax, eax
  012a2	74 10		 je	 SHORT $LN149@ReadWutFil
  012a4	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  012ab	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  012ae	89 88 74 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+116], ecx
$LN149@ReadWutFil:

; 436  : 				if ( strstr(buf1, "Boresight Weapon"                    )) { weapon_database[i].boresight_weapon = d2; }                      

  012b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DKJFJHFD@Boresight?5Weapon@
  012b9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  012bc	50		 push	 eax
  012bd	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  012c2	83 c4 08	 add	 esp, 8
  012c5	85 c0		 test	 eax, eax
  012c7	74 10		 je	 SHORT $LN150@ReadWutFil
  012c9	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  012d0	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  012d3	89 88 78 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+120], ecx
$LN150@ReadWutFil:

; 437  : 				if ( strstr(buf1, "Hellfire Flight Profile"             )) { weapon_database[i].hellfire_flight_profile = d2; }               

  012d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FHHHLFMJ@Hellfire?5Flight?5Profile@
  012de	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  012e1	50		 push	 eax
  012e2	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  012e7	83 c4 08	 add	 esp, 8
  012ea	85 c0		 test	 eax, eax
  012ec	74 10		 je	 SHORT $LN151@ReadWutFil
  012ee	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  012f5	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  012f8	89 88 7c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+124], ecx
$LN151@ReadWutFil:

; 438  : 				if ( strstr(buf1, "Weapon Class"                        )) { weapon_database[i].weapon_class = d2; }                          

  012fe	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NOKHBEJI@Weapon?5Class@
  01303	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01306	50		 push	 eax
  01307	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0130c	83 c4 08	 add	 esp, 8
  0130f	85 c0		 test	 eax, eax
  01311	74 10		 je	 SHORT $LN152@ReadWutFil
  01313	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0131a	8b 4d 84	 mov	 ecx, DWORD PTR _d2$18[ebp]
  0131d	89 88 84 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132], ecx
$LN152@ReadWutFil:

; 439  : 				if ( strstr(buf1, "Weight {kg}"                         )) { weapon_database[i].weight = v2; }                                     

  01323	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FBBDECHM@Weight?5?$HLkg?$HN@
  01328	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0132b	50		 push	 eax
  0132c	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01331	83 c4 08	 add	 esp, 8
  01334	85 c0		 test	 eax, eax
  01336	74 14		 je	 SHORT $LN153@ReadWutFil
  01338	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0133f	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01344	f3 0f 11 80 88
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+136], xmm0
$LN153@ReadWutFil:

; 440  : 				if ( strstr(buf1, "Min Range {m}"                       )) { weapon_database[i].min_range = v2; }                                  

  0134c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JEEPCLCN@Min?5Range?5?$HLm?$HN@
  01351	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01354	50		 push	 eax
  01355	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0135a	83 c4 08	 add	 esp, 8
  0135d	85 c0		 test	 eax, eax
  0135f	74 14		 je	 SHORT $LN154@ReadWutFil
  01361	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01368	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  0136d	f3 0f 11 80 8c
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+140], xmm0
$LN154@ReadWutFil:

; 441  : 				if ( strstr(buf1, "Max Range {m}"                       )) { weapon_database[i].max_range = v2; }                                  

  01375	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CNGJLAFM@Max?5Range?5?$HLm?$HN@
  0137a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0137d	50		 push	 eax
  0137e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01383	83 c4 08	 add	 esp, 8
  01386	85 c0		 test	 eax, eax
  01388	74 14		 je	 SHORT $LN155@ReadWutFil
  0138a	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01391	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01396	f3 0f 11 80 90
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144], xmm0
$LN155@ReadWutFil:

; 442  : 				if ( strstr(buf1, "Effective Range used by AI {m}"      )) { weapon_database[i].effective_range = v2; }                            

  0139e	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@COCFOLBA@Effective?5Range?5used?5by?5AI?5?$HLm?$HN@
  013a3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  013a6	50		 push	 eax
  013a7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  013ac	83 c4 08	 add	 esp, 8
  013af	85 c0		 test	 eax, eax
  013b1	74 14		 je	 SHORT $LN156@ReadWutFil
  013b3	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  013ba	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  013bf	f3 0f 11 80 94
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+148], xmm0
$LN156@ReadWutFil:

; 443  : 				if ( strstr(buf1, "Min Range LOAL {m}"                  )) { weapon_database[i].min_range_loal = v2; }                             

  013c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GBLCNMDJ@Min?5Range?5LOAL?5?$HLm?$HN@
  013cc	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  013cf	50		 push	 eax
  013d0	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  013d5	83 c4 08	 add	 esp, 8
  013d8	85 c0		 test	 eax, eax
  013da	74 14		 je	 SHORT $LN157@ReadWutFil
  013dc	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  013e3	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  013e8	f3 0f 11 80 98
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+152], xmm0
$LN157@ReadWutFil:

; 444  : 				if ( strstr(buf1, "Max Range LOAL {m}"                  )) { weapon_database[i].max_range_loal = v2; }                             

  013f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MGIGFMEA@Max?5Range?5LOAL?5?$HLm?$HN@
  013f5	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  013f8	50		 push	 eax
  013f9	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  013fe	83 c4 08	 add	 esp, 8
  01401	85 c0		 test	 eax, eax
  01403	74 14		 je	 SHORT $LN158@ReadWutFil
  01405	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0140c	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01411	f3 0f 11 80 9c
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+156], xmm0
$LN158@ReadWutFil:

; 445  : 				if ( strstr(buf1, "Max Range Error Ratio"               )) { weapon_database[i].max_range_error_ratio = v2; }                      

  01419	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DHDDEJN@Max?5Range?5Error?5Ratio@
  0141e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01421	50		 push	 eax
  01422	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01427	83 c4 08	 add	 esp, 8
  0142a	85 c0		 test	 eax, eax
  0142c	74 14		 je	 SHORT $LN159@ReadWutFil
  0142e	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01435	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  0143a	f3 0f 11 80 a0
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+160], xmm0
$LN159@ReadWutFil:

; 446  : 				if ( strstr(buf1, "Muzzle Velocity {m/s}"               )) { weapon_database[i].muzzle_velocity = v2; }                            

  01442	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FHHNOOBI@Muzzle?5Velocity?5?$HLm?1s?$HN@
  01447	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0144a	50		 push	 eax
  0144b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01450	83 c4 08	 add	 esp, 8
  01453	85 c0		 test	 eax, eax
  01455	74 14		 je	 SHORT $LN160@ReadWutFil
  01457	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0145e	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01463	f3 0f 11 80 a4
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+164], xmm0
$LN160@ReadWutFil:

; 447  : 				if ( strstr(buf1, "Muzzle Velocity Max Error"           )) { weapon_database[i].muzzle_velocity_max_error = v2; }                  

  0146b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GDMHIALJ@Muzzle?5Velocity?5Max?5Error@
  01470	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01473	50		 push	 eax
  01474	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01479	83 c4 08	 add	 esp, 8
  0147c	85 c0		 test	 eax, eax
  0147e	74 14		 je	 SHORT $LN161@ReadWutFil
  01480	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01487	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  0148c	f3 0f 11 80 a8
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+168], xmm0
$LN161@ReadWutFil:

; 448  : 				if ( strstr(buf1, "Cruise Velocity {m/s}"               )) { weapon_database[i].cruise_velocity = v2; }                            

  01494	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OBHPCBDC@Cruise?5Velocity?5?$HLm?1s?$HN@
  01499	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0149c	50		 push	 eax
  0149d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  014a2	83 c4 08	 add	 esp, 8
  014a5	85 c0		 test	 eax, eax
  014a7	74 14		 je	 SHORT $LN162@ReadWutFil
  014a9	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  014b0	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  014b5	f3 0f 11 80 ac
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+172], xmm0
$LN162@ReadWutFil:

; 449  : 				if ( strstr(buf1, "G Max {m/s/s}"                       )) { weapon_database[i].g_max = v2; }                                      

  014bd	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IGBDMLBA@G?5Max?5?$HLm?1s?1s?$HN@
  014c2	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  014c5	50		 push	 eax
  014c6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  014cb	83 c4 08	 add	 esp, 8
  014ce	85 c0		 test	 eax, eax
  014d0	74 14		 je	 SHORT $LN163@ReadWutFil
  014d2	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  014d9	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  014de	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+176], xmm0
$LN163@ReadWutFil:

; 450  : 				if ( strstr(buf1, "Burn Time {s}"                       )) { weapon_database[i].burn_time = v2; }                                  

  014e6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EPFNBKHL@Burn?5Time?5?$HLs?$HN@
  014eb	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  014ee	50		 push	 eax
  014ef	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  014f4	83 c4 08	 add	 esp, 8
  014f7	85 c0		 test	 eax, eax
  014f9	74 14		 je	 SHORT $LN164@ReadWutFil
  014fb	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01502	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01507	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+180], xmm0
$LN164@ReadWutFil:

; 451  : 				if ( strstr(buf1, "Cruise Time {s}"                     )) { weapon_database[i].cruise_time = v2; }                                

  0150f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IDBDDLKC@Cruise?5Time?5?$HLs?$HN@
  01514	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01517	50		 push	 eax
  01518	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0151d	83 c4 08	 add	 esp, 8
  01520	85 c0		 test	 eax, eax
  01522	74 14		 je	 SHORT $LN165@ReadWutFil
  01524	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0152b	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01530	f3 0f 11 80 b8
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+184], xmm0
$LN165@ReadWutFil:

; 452  : 				if ( strstr(buf1, "Cruise Time Max Error {s}"           )) { weapon_database[i].cruise_time_max_error = v2; }                      

  01538	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BBANFOKH@Cruise?5Time?5Max?5Error?5?$HLs?$HN@
  0153d	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01540	50		 push	 eax
  01541	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01546	83 c4 08	 add	 esp, 8
  01549	85 c0		 test	 eax, eax
  0154b	74 14		 je	 SHORT $LN166@ReadWutFil
  0154d	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01554	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01559	f3 0f 11 80 bc
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+188], xmm0
$LN166@ReadWutFil:

; 453  : 				if ( strstr(buf1, "Inhibit Time {s}"                    )) { weapon_database[i].inhibit_time = v2; }                               

  01561	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IFHGLHGK@Inhibit?5Time?5?$HLs?$HN@
  01566	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01569	50		 push	 eax
  0156a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0156f	83 c4 08	 add	 esp, 8
  01572	85 c0		 test	 eax, eax
  01574	74 14		 je	 SHORT $LN167@ReadWutFil
  01576	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0157d	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01582	f3 0f 11 80 c0
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+192], xmm0
$LN167@ReadWutFil:

; 454  : 				if ( strstr(buf1, "Burst Duration"                      )) { weapon_database[i].burst_duration = v2; }                             

  0158a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IBFPLHAG@Burst?5Duration@
  0158f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01592	50		 push	 eax
  01593	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01598	83 c4 08	 add	 esp, 8
  0159b	85 c0		 test	 eax, eax
  0159d	74 14		 je	 SHORT $LN168@ReadWutFil
  0159f	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  015a6	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  015ab	f3 0f 11 80 c4
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+196], xmm0
$LN168@ReadWutFil:

; 455  : 				if ( strstr(buf1, "Rate Of Fire"                        )) { weapon_database[i].rate_of_fire = v2; }                               

  015b3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BAHLONNC@Rate?5Of?5Fire@
  015b8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  015bb	50		 push	 eax
  015bc	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  015c1	83 c4 08	 add	 esp, 8
  015c4	85 c0		 test	 eax, eax
  015c6	74 14		 je	 SHORT $LN169@ReadWutFil
  015c8	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  015cf	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  015d4	f3 0f 11 80 c8
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+200], xmm0
$LN169@ReadWutFil:

; 456  : 				if ( strstr(buf1, "Reload Time {s}"                     )) { weapon_database[i].reload_time = v2; }                                

  015dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FNJDLEKK@Reload?5Time?5?$HLs?$HN@
  015e1	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  015e4	50		 push	 eax
  015e5	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  015ea	83 c4 08	 add	 esp, 8
  015ed	85 c0		 test	 eax, eax
  015ef	74 14		 je	 SHORT $LN170@ReadWutFil
  015f1	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  015f8	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  015fd	f3 0f 11 80 cc
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+204], xmm0
$LN170@ReadWutFil:

; 457  : 				if ( strstr(buf1, "Seeker Field Of View {rad}"          )) { weapon_database[i].max_launch_angle_error = v2; }                     

  01605	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@LGLCJJOI@Seeker?5Field?5Of?5View?5?$HLrad?$HN@
  0160a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0160d	50		 push	 eax
  0160e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01613	83 c4 08	 add	 esp, 8
  01616	85 c0		 test	 eax, eax
  01618	74 14		 je	 SHORT $LN171@ReadWutFil
  0161a	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01621	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$19[ebp]
  01626	f3 0f 11 80 d0
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+208], xmm0
$LN171@ReadWutFil:

; 458  : 
; 459  : 				#if WUT_DEBUG
; 460  : 						q = buf1+41;
; 461  : 						vname = strtok(q,"-");
; 462  : 					debug_log("WUT: WEAPON: Entity - %s [%s]; VAR %s - %f [%d]\n", weapon_database[i].full_name, ent, vname,v2,d2);
; 463  : 				#endif
; 464  : 				}   //variable names
; 465  : 		  }//for WEAPONS entities

  0162e	e9 ab f8 ff ff	 jmp	 $LN20@ReadWutFil
$LN21@ReadWutFil:

; 466  : 	 }//while WEAPONS

  01633	e9 de f7 ff ff	 jmp	 $LN16@ReadWutFil
$LN17@ReadWutFil:

; 467  : 
; 468  : 
; 469  : 	 //########################################################################
; 470  : 	 //#### KEYSITES ##########################################################
; 471  : 	 //########################################################################
; 472  : 
; 473  : 	 fscanf(f,"%[^\n]\n",buf);

  01638	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  0163b	50		 push	 eax
  0163c	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  01641	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  01644	51		 push	 ecx
  01645	e8 00 00 00 00	 call	 _fscanf
  0164a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 474  : 	 strcpy(buf1, buf);

  0164d	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  01650	50		 push	 eax
  01651	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  01654	51		 push	 ecx
  01655	e8 00 00 00 00	 call	 _strcpy
  0165a	83 c4 08	 add	 esp, 8
$LN23@ReadWutFil:

; 475  : 
; 476  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Groups")==0))

  0165d	b8 01 00 00 00	 mov	 eax, 1
  01662	6b c8 00	 imul	 ecx, eax, 0
  01665	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  01668	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  0166c	85 c0		 test	 eax, eax
  0166e	0f 84 dc 04 00
	00		 je	 $LN24@ReadWutFil
  01674	b8 01 00 00 00	 mov	 eax, 1
  01679	6b c8 00	 imul	 ecx, eax, 0
  0167c	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  0167f	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  01683	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  01686	0f 84 c4 04 00
	00		 je	 $LN24@ReadWutFil
  0168c	68 00 00 00 00	 push	 OFFSET ??_C@_06LCLFDFOL@Groups@
  01691	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01694	50		 push	 eax
  01695	e8 00 00 00 00	 call	 _strcmp
  0169a	83 c4 08	 add	 esp, 8
  0169d	85 c0		 test	 eax, eax
  0169f	0f 84 ab 04 00
	00		 je	 $LN24@ReadWutFil

; 477  : 	 {
; 478  : 		
; 479  : 		  fscanf(f,"%[^\n]\n",buf);

  016a5	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  016a8	50		 push	 eax
  016a9	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  016ae	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  016b1	51		 push	 ecx
  016b2	e8 00 00 00 00	 call	 _fscanf
  016b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 480  : 		  // read a line
; 481  : 		  strcpy(buf1, buf);

  016ba	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  016bd	50		 push	 eax
  016be	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  016c1	51		 push	 ecx
  016c2	e8 00 00 00 00	 call	 _strcpy
  016c7	83 c4 08	 add	 esp, 8

; 482  : 		  
; 483  : 		  strncpy(ent,buf,63);

  016ca	6a 3f		 push	 63			; 0000003fH
  016cc	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  016cf	50		 push	 eax
  016d0	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  016d3	51		 push	 ecx
  016d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  016da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 484  : 		  ent[39] = '\0';        

  016dd	b8 01 00 00 00	 mov	 eax, 1
  016e2	6b c8 27	 imul	 ecx, eax, 39
  016e5	c6 44 0d ac 00	 mov	 BYTE PTR _ent$[ebp+ecx], 0

; 485  : 		  i = (int)strlen(ent) - 1;        

  016ea	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  016ed	50		 push	 eax
  016ee	e8 00 00 00 00	 call	 _strlen
  016f3	83 c4 04	 add	 esp, 4
  016f6	83 e8 01	 sub	 eax, 1
  016f9	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN25@ReadWutFil:

; 486  : 		  while (ent[i] == '-') 

  016fc	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  016ff	0f b6 4c 05 ac	 movzx	 ecx, BYTE PTR _ent$[ebp+eax]
  01704	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  01707	75 0b		 jne	 SHORT $LN26@ReadWutFil

; 487  : 			  i--;        

  01709	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0170c	83 e8 01	 sub	 eax, 1
  0170f	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  01712	eb e8		 jmp	 SHORT $LN25@ReadWutFil
$LN26@ReadWutFil:

; 488  : 		  ent[i+1] = '\0';        

  01714	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01717	c6 44 05 ad 00	 mov	 BYTE PTR _ent$[ebp+eax+1], 0

; 489  : 
; 490  : 
; 491  : 		  // search through all the keysite list
; 492  : 		  // see aphavoc\source\entity\system\en_types\en_sbtyp.h
; 493  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_KEYSITES; i++)

  0171c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01723	eb 09		 jmp	 SHORT $LN29@ReadWutFil
$LN27@ReadWutFil:
  01725	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01728	83 c0 01	 add	 eax, 1
  0172b	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN29@ReadWutFil:
  0172e	83 7d f8 09	 cmp	 DWORD PTR _i$[ebp], 9
  01732	0f 8d 13 04 00
	00		 jge	 $LN28@ReadWutFil

; 494  : 		  {        	
; 495  : 				// if entity found
; 496  : 				if (strcmp(keysite_database[i].full_name, ent) == 0)

  01738	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0173b	50		 push	 eax
  0173c	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01740	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx]
  01746	52		 push	 edx
  01747	e8 00 00 00 00	 call	 _strcmp
  0174c	83 c4 08	 add	 esp, 8
  0174f	85 c0		 test	 eax, eax
  01751	0f 85 ef 03 00
	00		 jne	 $LN186@ReadWutFil

; 497  : 				{
; 498  : 					float v2 = 0;

  01757	0f 57 c0	 xorps	 xmm0, xmm0
  0175a	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _v2$16[ebp], xmm0

; 499  : 					int d2 = 0;

  01762	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _d2$15[ebp], 0

; 500  : 					char *q = buf1+83;

  0176c	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0176f	83 c0 53	 add	 eax, 83			; 00000053H
  01772	89 85 74 ff ff
	ff		 mov	 DWORD PTR _q$14[ebp], eax

; 501  : 
; 502  : 					 get_values(q, &v2, &d2);

  01778	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _d2$15[ebp]
  0177e	50		 push	 eax
  0177f	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _v2$16[ebp]
  01785	51		 push	 ecx
  01786	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _q$14[ebp]
  0178c	52		 push	 edx
  0178d	e8 00 00 00 00	 call	 ?get_values@@YGXPADPAMPAH@Z ; get_values

; 503  : 					 
; 504  : 					 // see keysite properties: \aphavoc\source\entity\special\keysite\ks_dbase.h         
; 505  : 					 if (strstr(buf1 ,"Air Ground Supply")) { keysite_database[i].default_supply_usage.air_to_ground_ammo_supply_level = v2; }  

  01792	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HHNMENPP@Air?5Ground?5Supply@
  01797	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0179a	50		 push	 eax
  0179b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  017a0	83 c4 08	 add	 esp, 8
  017a3	85 c0		 test	 eax, eax
  017a5	74 14		 je	 SHORT $LN173@ReadWutFil
  017a7	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  017ab	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  017b3	f3 0f 11 80 08
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+8], xmm0
$LN173@ReadWutFil:

; 506  : 					 if (strstr(buf1 ,"Air Air Supply")) { keysite_database[i].default_supply_usage.air_to_air_ammo_supply_level = v2; }     

  017bb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MCCGIBLD@Air?5Air?5Supply@
  017c0	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  017c3	50		 push	 eax
  017c4	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  017c9	83 c4 08	 add	 esp, 8
  017cc	85 c0		 test	 eax, eax
  017ce	74 14		 je	 SHORT $LN174@ReadWutFil
  017d0	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  017d4	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  017dc	f3 0f 11 80 0c
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+12], xmm0
$LN174@ReadWutFil:

; 507  : 					 if (strstr(buf1 ,"Ammo Usage")) { keysite_database[i].default_supply_usage.ammo_supply_level = v2; }                  

  017e4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PIEEDLPO@Ammo?5Usage@
  017e9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  017ec	50		 push	 eax
  017ed	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  017f2	83 c4 08	 add	 esp, 8
  017f5	85 c0		 test	 eax, eax
  017f7	74 14		 je	 SHORT $LN175@ReadWutFil
  017f9	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  017fd	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  01805	f3 0f 11 80 10
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+16], xmm0
$LN175@ReadWutFil:

; 508  : 					 if (strstr(buf1 ,"Fuel Usage")) { keysite_database[i].default_supply_usage.fuel_supply_level = v2; }                                 

  0180d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NAFBEKJK@Fuel?5Usage@
  01812	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01815	50		 push	 eax
  01816	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0181b	83 c4 08	 add	 esp, 8
  0181e	85 c0		 test	 eax, eax
  01820	74 14		 je	 SHORT $LN176@ReadWutFil
  01822	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01826	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  0182e	f3 0f 11 80 14
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+20], xmm0
$LN176@ReadWutFil:

; 509  : 					 if (strstr(buf1 ,"Importance")) { keysite_database[i].importance = v2; }                   

  01836	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CCPICNPI@Importance@
  0183b	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0183e	50		 push	 eax
  0183f	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01844	83 c4 08	 add	 esp, 8
  01847	85 c0		 test	 eax, eax
  01849	74 14		 je	 SHORT $LN177@ReadWutFil
  0184b	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0184f	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  01857	f3 0f 11 80 18
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+24], xmm0
$LN177@ReadWutFil:

; 510  : 					 if (strstr(buf1 ,"Minimum Efficiency")) { keysite_database[i].minimum_efficiency = v2; }   

  0185f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CHCMHIOB@Minimum?5Efficiency@
  01864	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01867	50		 push	 eax
  01868	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0186d	83 c4 08	 add	 esp, 8
  01870	85 c0		 test	 eax, eax
  01872	74 14		 je	 SHORT $LN178@ReadWutFil
  01874	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01878	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  01880	f3 0f 11 80 1c
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+28], xmm0
$LN178@ReadWutFil:

; 511  : 					 if (strstr(buf1 ,"Importance Radius {m}")) { keysite_database[i].importance_radius = v2; }    

  01888	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EDLEGGDJ@Importance?5Radius?5?$HLm?$HN@
  0188d	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01890	50		 push	 eax
  01891	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01896	83 c4 08	 add	 esp, 8
  01899	85 c0		 test	 eax, eax
  0189b	74 14		 je	 SHORT $LN179@ReadWutFil
  0189d	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  018a1	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  018a9	f3 0f 11 80 20
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+32], xmm0
$LN179@ReadWutFil:

; 512  : 					 if (strstr(buf1 ,"Air Coverage Radius {m}")) { keysite_database[i].air_coverage_radius = v2; }  

  018b1	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MCCEFLGH@Air?5Coverage?5Radius?5?$HLm?$HN@
  018b6	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  018b9	50		 push	 eax
  018ba	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  018bf	83 c4 08	 add	 esp, 8
  018c2	85 c0		 test	 eax, eax
  018c4	74 14		 je	 SHORT $LN180@ReadWutFil
  018c6	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  018ca	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  018d2	f3 0f 11 80 24
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+36], xmm0
$LN180@ReadWutFil:

; 513  : 					 if (strstr(buf1 ,"Recon Distance {m}")) { keysite_database[i].recon_distance = v2; }       

  018da	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GCBHIJJH@Recon?5Distance?5?$HLm?$HN@
  018df	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  018e2	50		 push	 eax
  018e3	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  018e8	83 c4 08	 add	 esp, 8
  018eb	85 c0		 test	 eax, eax
  018ed	74 14		 je	 SHORT $LN181@ReadWutFil
  018ef	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  018f3	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  018fb	f3 0f 11 80 28
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+40], xmm0
$LN181@ReadWutFil:

; 514  : 					 if (strstr(buf1 ,"Sector Side Max Value")) { keysite_database[i].sector_side_max_value = v2; }  

  01903	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NEMMIFLJ@Sector?5Side?5Max?5Value@
  01908	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0190b	50		 push	 eax
  0190c	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01911	83 c4 08	 add	 esp, 8
  01914	85 c0		 test	 eax, eax
  01916	74 14		 je	 SHORT $LN182@ReadWutFil
  01918	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0191c	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  01924	f3 0f 11 80 2c
	00 00 00	 movss	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+44], xmm0
$LN182@ReadWutFil:

; 515  : 					 if (strstr(buf1 ,"Binary (col.13)")) { ;

  0192c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CJDOCCEN@Binary?5?$CIcol?413?$CJ@
  01931	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01934	50		 push	 eax
  01935	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0193a	83 c4 08	 add	 esp, 8

; 516  : 						// bitwise stuff controls map display, do not touch!               	
; 517  : 					 }  	
; 518  : 					 
; 519  : // this is not correct                 
; 520  : 					 if (strstr(buf1 ,"Report Ammo Level")) { keysite_database[i].report_ammo_level = v2; }           

  0193d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JGDFAHDD@Report?5Ammo?5Level@
  01942	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01945	50		 push	 eax
  01946	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0194b	83 c4 08	 add	 esp, 8
  0194e	85 c0		 test	 eax, eax
  01950	74 17		 je	 SHORT $LN184@ReadWutFil
  01952	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  0195a	e8 00 00 00 00	 call	 __ftoui3
  0195f	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01963	89 81 34 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+52], eax
$LN184@ReadWutFil:

; 521  : 					 //  UNDEFINED if (strcmp(keysite_varname[j].name,"15")) { dummy = v2; }  
; 522  : 					 if (strstr(buf1 ,"Report Fuel Level")) { keysite_database[i].report_fuel_level = v2; }   

  01969	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LOCAHGFH@Report?5Fuel?5Level@
  0196e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01971	50		 push	 eax
  01972	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01977	83 c4 08	 add	 esp, 8
  0197a	85 c0		 test	 eax, eax
  0197c	74 17		 je	 SHORT $LN185@ReadWutFil
  0197e	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$16[ebp]
  01986	e8 00 00 00 00	 call	 __ftoui3
  0198b	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  0198f	89 81 3c 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+60], eax
$LN185@ReadWutFil:

; 523  : 					 if (strstr(buf1,"Binary (col.17)")) 

  01995	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CODHIKJB@Binary?5?$CIcol?417?$CJ@
  0199a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0199d	50		 push	 eax
  0199e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  019a3	83 c4 08	 add	 esp, 8
  019a6	85 c0		 test	 eax, eax
  019a8	0f 84 98 01 00
	00		 je	 $LN186@ReadWutFil

; 524  : 					 { 
; 525  : 						//VJ 040122 fixed a few bugs here: starting bit is 6 not 4
; 526  : 						 //DO NOT USE keysite_database[i].assign_task_count = (0 | (d2 & 3));   //this is a two bit variable
; 527  : 						 //DO NOT USE keysite_database[i].reserve_task_count = (0 | (d2 & 12)); //this is a two bit variable
; 528  : 						 keysite_database[i].requires_cap			= 	((d2 >> 6) & 0x01);

  019ae	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  019b4	c1 f8 06	 sar	 eax, 6
  019b7	83 e0 01	 and	 eax, 1
  019ba	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  019be	83 e0 01	 and	 eax, 1
  019c1	c1 e0 05	 shl	 eax, 5
  019c4	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  019ca	83 e2 df	 and	 edx, -33		; ffffffdfH
  019cd	0b d0		 or	 edx, eax
  019cf	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  019d3	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 529  : 						 keysite_database[i].requires_barcap		= 	((d2 >> 7) & 0x01);

  019d9	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  019df	c1 f8 07	 sar	 eax, 7
  019e2	83 e0 01	 and	 eax, 1
  019e5	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  019e9	83 e0 01	 and	 eax, 1
  019ec	c1 e0 06	 shl	 eax, 6
  019ef	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  019f5	83 e2 bf	 and	 edx, -65		; ffffffbfH
  019f8	0b d0		 or	 edx, eax
  019fa	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  019fe	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 530  : 						 keysite_database[i].repairable				= 	((d2 >> 8) & 0x01);

  01a04	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01a0a	c1 f8 08	 sar	 eax, 8
  01a0d	83 e0 01	 and	 eax, 1
  01a10	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01a14	83 e0 01	 and	 eax, 1
  01a17	c1 e0 07	 shl	 eax, 7
  01a1a	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01a20	81 e2 7f ff ff
	ff		 and	 edx, -129		; ffffff7fH
  01a26	0b d0		 or	 edx, eax
  01a28	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01a2c	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 531  : 						 keysite_database[i].oca_target				= 	((d2 >> 9) & 0x01);

  01a32	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01a38	c1 f8 09	 sar	 eax, 9
  01a3b	83 e0 01	 and	 eax, 1
  01a3e	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01a42	83 e0 01	 and	 eax, 1
  01a45	c1 e0 08	 shl	 eax, 8
  01a48	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01a4e	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  01a54	0b d0		 or	 edx, eax
  01a56	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01a5a	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 532  : 						 keysite_database[i].recon_target			= 	((d2 >> 10) & 0x01);

  01a60	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01a66	c1 f8 0a	 sar	 eax, 10			; 0000000aH
  01a69	83 e0 01	 and	 eax, 1
  01a6c	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01a70	83 e0 01	 and	 eax, 1
  01a73	c1 e0 09	 shl	 eax, 9
  01a76	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01a7c	81 e2 ff fd ff
	ff		 and	 edx, -513		; fffffdffH
  01a82	0b d0		 or	 edx, eax
  01a84	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01a88	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 533  : 						 keysite_database[i].ground_strike_target	= 	((d2 >> 11) & 0x01);

  01a8e	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01a94	c1 f8 0b	 sar	 eax, 11			; 0000000bH
  01a97	83 e0 01	 and	 eax, 1
  01a9a	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01a9e	83 e0 01	 and	 eax, 1
  01aa1	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  01aa4	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01aaa	81 e2 ff fb ff
	ff		 and	 edx, -1025		; fffffbffH
  01ab0	0b d0		 or	 edx, eax
  01ab2	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01ab6	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 534  : 						 keysite_database[i].ship_strike_target	= 	((d2 >> 12) & 0x01);

  01abc	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01ac2	c1 f8 0c	 sar	 eax, 12			; 0000000cH
  01ac5	83 e0 01	 and	 eax, 1
  01ac8	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01acc	83 e0 01	 and	 eax, 1
  01acf	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  01ad2	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01ad8	81 e2 ff f7 ff
	ff		 and	 edx, -2049		; fffff7ffH
  01ade	0b d0		 or	 edx, eax
  01ae0	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01ae4	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 535  : 						 keysite_database[i].troop_insertion_target =((d2 >> 13) & 0x01);

  01aea	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01af0	c1 f8 0d	 sar	 eax, 13			; 0000000dH
  01af3	83 e0 01	 and	 eax, 1
  01af6	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01afa	83 e0 01	 and	 eax, 1
  01afd	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  01b00	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01b06	81 e2 ff ef ff
	ff		 and	 edx, -4097		; ffffefffH
  01b0c	0b d0		 or	 edx, eax
  01b0e	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01b12	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 536  : 						 keysite_database[i].campaign_objective	= 	((d2 >> 14) & 0x01);       

  01b18	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _d2$15[ebp]
  01b1e	c1 f8 0e	 sar	 eax, 14			; 0000000eH
  01b21	83 e0 01	 and	 eax, 1
  01b24	6b 4d f8 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  01b28	83 e0 01	 and	 eax, 1
  01b2b	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  01b2e	8b 91 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+64]
  01b34	81 e2 ff df ff
	ff		 and	 edx, -8193		; ffffdfffH
  01b3a	0b d0		 or	 edx, eax
  01b3c	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  01b40	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx
$LN186@ReadWutFil:

; 537  : 
; 538  : // VJ 040122 WUT info sorry to make the code messy !                                         	                	
; 539  : /* info from the help file of WUT
; 540  : see file: \aphavoc\source\entity\special\keysite\ks_dbase.h
; 541  : Binary (col.13)
; 542  : The following data is packed into bit-fields
; 543  : [Bits 1 to 6] Unknown  <== MAP STUFF 
; 544  : [Bits 7 to 12] Unknown <== MAP STUFF 
; 545  : [Bit 13] Unknown <== align with terrain 
; 546  : [Bit 14] Unique Name, Specifies whether the keysite has a special name (e.g. Airbases all have individual names), or just a number (e.g. FARP #6)
; 547  : [Bit 15] Hidden by Fog
; 548  : [Bits 16 to 17] Unknown <== air_force_capacity = 2 bits
; 549  : 
; 550  :   Binary (col.17)
; 551  : The following data is packed into bit-fields
; 552  : [Bit 1] Unknown
; 553  : [Bits 2 to 3] Unknown
; 554  : [Bits 4 to 5] Unknown
; 555  : these are in fact 
; 556  : 		report_ammo_level,		: 1,
; 557  : 		report_fuel_level,		: 1,
; 558  : 		assign_task_count			: 2,
; 559  : 		reserve_task_count		: 2,
; 560  : however these are 6 bits not 5!!!
; 561  :  
; 562  : [Bit 6] Requires CAP   < so barcap starts in fact at bit 7 not 6 etc!
; 563  : [Bit 7] Requires BARCAP
; 564  : If set then these tasks will be generated when necessary.
; 565  : (Not sure if BARCAP actually works in the game)
; 566  : 
; 567  : [Bit 8] Repairable
; 568  : Whether structures at the site are to be repaired or not
; 569  :  
; 570  : [Bit 9] OCA Target
; 571  : [Bit 10] Recon Target
; 572  : [Bit 11] Ground Strike Target
; 573  : [Bit 12] Ship Strike Target
; 574  : [Bit 13] Troop Insertion Target
; 575  : Specifies whether the site can be a target of the listed mission types
; 576  :  
; 577  : [Bit 14] Campaign Objective
; 578  : Whether or not the site type can be considered a potential campaign objective                       
; 579  : */
; 580  : 				#if WUT_DEBUG
; 581  : 						 debug_log("1 [%s]: %d\n","requires_cap",keysite_database[i].requires_cap			);    
; 582  : 						 debug_log("2 [%s]: %d\n","requires_barcap",keysite_database[i].requires_barcap		);    
; 583  : 						 debug_log("3 [%s]: %d\n","repairable",keysite_database[i].repairable			);    
; 584  : 						 debug_log("4 [%s]: %d\n","oca_target",keysite_database[i].oca_target			);    
; 585  : 						 debug_log("5 [%s]: %d\n","recon_target",keysite_database[i].recon_target			);    
; 586  : 						 debug_log("6 [%s]: %d\n","ground_strike_target",keysite_database[i].ground_strike_target	);    
; 587  : 						 debug_log("7 [%s]: %d\n","ship_strike_target",keysite_database[i].ship_strike_target	);    
; 588  : 						 debug_log("8 [%s]: %d\n","troop_insertion_target",keysite_database[i].troop_insertion_target);   
; 589  : 						 debug_log("9 [%s]: %d\n","campaign_objective",keysite_database[i].campaign_objective	);    
; 590  : 						 
; 591  : 						//VJ 040122 print info to file without going through dmake!
; 592  : 						 fprintf(fout,"%s %s %d\n", ent, q, d2);
; 593  : 						 fprintf(fout,"1 [%s]: %d %d\n","requires_cap",keysite_database[i].requires_cap							, (d2 >> 6 ) & 1);    
; 594  : 						 fprintf(fout,"2 [%s]: %d %d\n","requires_barcap",keysite_database[i].requires_barcap					, (d2 >> 7 ) & 1);    
; 595  : 						 fprintf(fout,"3 [%s]: %d %d\n","repairable",keysite_database[i].repairable								, (d2 >> 8 ) & 1);    
; 596  : 						 fprintf(fout,"4 [%s]: %d %d\n","oca_target",keysite_database[i].oca_target								, (d2 >> 9 ) & 1);    
; 597  : 						 fprintf(fout,"5 [%s]: %d %d\n","recon_target",keysite_database[i].recon_target							, (d2 >> 10) & 1);    
; 598  : 						 fprintf(fout,"6 [%s]: %d %d\n","ground_strike_target",keysite_database[i].ground_strike_target		, (d2 >> 11) & 1);    
; 599  : 						 fprintf(fout,"7 [%s]: %d %d\n","ship_strike_target",keysite_database[i].ship_strike_target			, (d2 >> 12) & 1);    
; 600  : 						 fprintf(fout,"8 [%s]: %d %d\n","troop_insertion_target",keysite_database[i].troop_insertion_target, (d2 >> 13) & 1);   
; 601  : 						 fprintf(fout,"9 [%s]: %d %d\n","campaign_objective",keysite_database[i].campaign_objective			, (d2 >> 14) & 1);    
; 602  : 						 
; 603  : 					 #endif   
; 604  : 					 }
; 605  : 					 
; 606  : 				#if WUT_DEBUG
; 607  : 					 
; 608  : 					 q = buf1+41;
; 609  : 					 vname = strtok(q,"-");
; 610  : 					 debug_log("WUT: KEYSITE: Entity - %s [%s]; VAR [%s] - %f [%d]\n", keysite_database[i].full_name, ent, vname,v2,d2);
; 611  : 				
; 612  : 				#endif
; 613  : 				}//variable names
; 614  : 		}//for KEYSITES entities

  01b46	e9 da fb ff ff	 jmp	 $LN27@ReadWutFil
$LN28@ReadWutFil:

; 615  : 	 }//while KEYSITES

  01b4b	e9 0d fb ff ff	 jmp	 $LN23@ReadWutFil
$LN24@ReadWutFil:

; 616  : 
; 617  : 
; 618  : 	 //########################################################################
; 619  : 	 //#### GROUPS ############################################################
; 620  : 	 //########################################################################
; 621  : 
; 622  : 	 fscanf(f,"%[^\n]\n",buf);

  01b50	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  01b53	50		 push	 eax
  01b54	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  01b59	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  01b5c	51		 push	 ecx
  01b5d	e8 00 00 00 00	 call	 _fscanf
  01b62	83 c4 0c	 add	 esp, 12			; 0000000cH

; 623  : 	 strcpy(buf1, buf);

  01b65	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  01b68	50		 push	 eax
  01b69	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  01b6c	51		 push	 ecx
  01b6d	e8 00 00 00 00	 call	 _strcpy
  01b72	83 c4 08	 add	 esp, 8
$LN30@ReadWutFil:

; 624  : 	 
; 625  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Tasks")==0))

  01b75	b8 01 00 00 00	 mov	 eax, 1
  01b7a	6b c8 00	 imul	 ecx, eax, 0
  01b7d	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  01b80	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  01b84	85 c0		 test	 eax, eax
  01b86	0f 84 b5 06 00
	00		 je	 $LN31@ReadWutFil
  01b8c	b8 01 00 00 00	 mov	 eax, 1
  01b91	6b c8 00	 imul	 ecx, eax, 0
  01b94	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  01b97	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  01b9b	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  01b9e	0f 84 9d 06 00
	00		 je	 $LN31@ReadWutFil
  01ba4	68 00 00 00 00	 push	 OFFSET ??_C@_05EEGKELMG@Tasks@
  01ba9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01bac	50		 push	 eax
  01bad	e8 00 00 00 00	 call	 _strcmp
  01bb2	83 c4 08	 add	 esp, 8
  01bb5	85 c0		 test	 eax, eax
  01bb7	0f 84 84 06 00
	00		 je	 $LN31@ReadWutFil

; 626  : 	 {
; 627  : 		  fscanf(f,"%[^\n]\n",buf);

  01bbd	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  01bc0	50		 push	 eax
  01bc1	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  01bc6	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  01bc9	51		 push	 ecx
  01bca	e8 00 00 00 00	 call	 _fscanf
  01bcf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 628  : 		  strcpy(buf1, buf);

  01bd2	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  01bd5	50		 push	 eax
  01bd6	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  01bd9	51		 push	 ecx
  01bda	e8 00 00 00 00	 call	 _strcpy
  01bdf	83 c4 08	 add	 esp, 8

; 629  : 					
; 630  : 		  strncpy(ent,buf,63);

  01be2	6a 3f		 push	 63			; 0000003fH
  01be4	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  01be7	50		 push	 eax
  01be8	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  01beb	51		 push	 ecx
  01bec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  01bf2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 631  : 		  ent[39] = '\0';        

  01bf5	b8 01 00 00 00	 mov	 eax, 1
  01bfa	6b c8 27	 imul	 ecx, eax, 39
  01bfd	c6 44 0d ac 00	 mov	 BYTE PTR _ent$[ebp+ecx], 0

; 632  : 		  i = (int)strlen(ent) - 1;        

  01c02	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  01c05	50		 push	 eax
  01c06	e8 00 00 00 00	 call	 _strlen
  01c0b	83 c4 04	 add	 esp, 4
  01c0e	83 e8 01	 sub	 eax, 1
  01c11	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN32@ReadWutFil:

; 633  : 		  while (ent[i] == '-') 

  01c14	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01c17	0f b6 4c 05 ac	 movzx	 ecx, BYTE PTR _ent$[ebp+eax]
  01c1c	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  01c1f	75 0b		 jne	 SHORT $LN33@ReadWutFil

; 634  : 			  i--;        

  01c21	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01c24	83 e8 01	 sub	 eax, 1
  01c27	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  01c2a	eb e8		 jmp	 SHORT $LN32@ReadWutFil
$LN33@ReadWutFil:

; 635  : 		  ent[i+1] = '\0';        

  01c2c	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01c2f	c6 44 05 ad 00	 mov	 BYTE PTR _ent$[ebp+eax+1], 0

; 636  : 
; 637  : //NOTE: infantry 3 groups not distinguished, but these are static entities anyway...
; 638  : 
; 639  : 		  // search through all the vehicle list
; 640  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_GROUPS; i++)

  01c34	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01c3b	eb 09		 jmp	 SHORT $LN36@ReadWutFil
$LN34@ReadWutFil:
  01c3d	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01c40	83 c0 01	 add	 eax, 1
  01c43	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN36@ReadWutFil:
  01c46	83 7d f8 1a	 cmp	 DWORD PTR _i$[ebp], 26	; 0000001aH
  01c4a	0f 8d ec 05 00
	00		 jge	 $LN35@ReadWutFil

; 641  : 		  {        	
; 642  : 				if (strcmp(group_database[i].full_name, ent) == 0)

  01c50	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  01c53	50		 push	 eax
  01c54	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01c58	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx]
  01c5e	52		 push	 edx
  01c5f	e8 00 00 00 00	 call	 _strcmp
  01c64	83 c4 08	 add	 esp, 8
  01c67	85 c0		 test	 eax, eax
  01c69	0f 85 c8 05 00
	00		 jne	 $LN216@ReadWutFil

; 643  : 				{
; 644  : 					 float v2=0;

  01c6f	0f 57 c0	 xorps	 xmm0, xmm0
  01c72	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _v2$13[ebp], xmm0

; 645  : 					 int d2 = 0;

  01c7a	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _d2$12[ebp], 0

; 646  : 					 char *q = buf1+83;

  01c84	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01c87	83 c0 53	 add	 eax, 83			; 00000053H
  01c8a	89 85 68 ff ff
	ff		 mov	 DWORD PTR _q$11[ebp], eax

; 647  : 					 
; 648  : 					 get_values(q, &v2, &d2);

  01c90	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _d2$12[ebp]
  01c96	50		 push	 eax
  01c97	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _v2$13[ebp]
  01c9d	51		 push	 ecx
  01c9e	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _q$11[ebp]
  01ca4	52		 push	 edx
  01ca5	e8 00 00 00 00	 call	 ?get_values@@YGXPADPAMPAH@Z ; get_values

; 649  : 			  
; 650  : 					 //if (strstr(buf1,"Full Name {text}"           )) { group_database[i].full_name                       = v2; }                          
; 651  : 					 //if (strstr(buf1,"Group Short Name {text}"    )) { group_database[i].group_short_name                = v2; }                          
; 652  : 					 if (strstr(buf1,"Group Category"             )) { group_database[i].group_category                  = ( group_category_types ) d2; }                           

  01caa	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MFNJAIE@Group?5Category@
  01caf	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01cb2	50		 push	 eax
  01cb3	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01cb8	83 c4 08	 add	 esp, 8
  01cbb	85 c0		 test	 eax, eax
  01cbd	74 10		 je	 SHORT $LN188@ReadWutFil
  01cbf	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01cc3	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01cc9	89 88 08 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+8], ecx
$LN188@ReadWutFil:

; 653  : 					 if (strstr(buf1,"Registery List"             )) { group_database[i].registry_list_type              = ( list_types ) d2; }                           

  01ccf	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BIEAHGIC@Registery?5List@
  01cd4	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01cd7	50		 push	 eax
  01cd8	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01cdd	83 c4 08	 add	 esp, 8
  01ce0	85 c0		 test	 eax, eax
  01ce2	74 10		 je	 SHORT $LN189@ReadWutFil
  01ce4	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01ce8	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01cee	89 88 0c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+12], ecx
$LN189@ReadWutFil:

; 654  : 					 if (strstr(buf1,"Group List"                 )) { group_database[i].group_list_type                 = ( list_types ) d2; }                           

  01cf4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NDNAHEHM@Group?5List@
  01cf9	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01cfc	50		 push	 eax
  01cfd	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01d02	83 c4 08	 add	 esp, 8
  01d05	85 c0		 test	 eax, eax
  01d07	74 10		 je	 SHORT $LN190@ReadWutFil
  01d09	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01d0d	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01d13	89 88 10 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+16], ecx
$LN190@ReadWutFil:

; 655  : 					 if (strstr(buf1,"Movement Type"              )) { group_database[i].movement_type                   = ( movement_types ) d2; }                           

  01d19	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GEKIGJJE@Movement?5Type@
  01d1e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01d21	50		 push	 eax
  01d22	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01d27	83 c4 08	 add	 esp, 8
  01d2a	85 c0		 test	 eax, eax
  01d2c	74 10		 je	 SHORT $LN191@ReadWutFil
  01d2e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01d32	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01d38	89 88 14 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+20], ecx
$LN191@ReadWutFil:

; 656  : 					 if (strstr(buf1,"Landing Type"               )) { group_database[i].default_landing_type            = ( entity_types ) d2; }                           

  01d3e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FFCGCLPK@Landing?5Type@
  01d43	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01d46	50		 push	 eax
  01d47	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01d4c	83 c4 08	 add	 esp, 8
  01d4f	85 c0		 test	 eax, eax
  01d51	74 10		 je	 SHORT $LN192@ReadWutFil
  01d53	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01d57	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01d5d	89 88 18 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+24], ecx
$LN192@ReadWutFil:

; 657  : 					 if (strstr(buf1,"Default Entity Type"        )) { group_database[i].default_entity_type             = ( entity_types ) d2; }                           

  01d63	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EFBNDEEI@Default?5Entity?5Type@
  01d68	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01d6b	50		 push	 eax
  01d6c	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01d71	83 c4 08	 add	 esp, 8
  01d74	85 c0		 test	 eax, eax
  01d76	74 10		 je	 SHORT $LN193@ReadWutFil
  01d78	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01d7c	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01d82	89 88 1c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+28], ecx
$LN193@ReadWutFil:

; 658  : 					 if (strstr(buf1,"Default Blue Force Sub Type")) { group_database[i].default_blue_force_sub_type     = d2; }                           

  01d88	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IEGMLLNF@Default?5Blue?5Force?5Sub?5Type@
  01d8d	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01d90	50		 push	 eax
  01d91	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01d96	83 c4 08	 add	 esp, 8
  01d99	85 c0		 test	 eax, eax
  01d9b	74 10		 je	 SHORT $LN194@ReadWutFil
  01d9d	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01da1	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01da7	89 88 20 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+32], ecx
$LN194@ReadWutFil:

; 659  : 					 if (strstr(buf1,"Default Red Force Sub Type" )) { group_database[i].default_red_force_sub_type      = d2; }                           

  01dad	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EHEFMCHJ@Default?5Red?5Force?5Sub?5Type@
  01db2	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01db5	50		 push	 eax
  01db6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01dbb	83 c4 08	 add	 esp, 8
  01dbe	85 c0		 test	 eax, eax
  01dc0	74 10		 je	 SHORT $LN195@ReadWutFil
  01dc2	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01dc6	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01dcc	89 88 24 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+36], ecx
$LN195@ReadWutFil:

; 660  : 					 if (strstr(buf1,"Default Group Formation"    )) { group_database[i].default_group_formation         = ( formation_types ) d2; }                           

  01dd2	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EHALIKOP@Default?5Group?5Formation@
  01dd7	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01dda	50		 push	 eax
  01ddb	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01de0	83 c4 08	 add	 esp, 8
  01de3	85 c0		 test	 eax, eax
  01de5	74 10		 je	 SHORT $LN196@ReadWutFil
  01de7	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01deb	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01df1	89 88 28 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+40], ecx
$LN196@ReadWutFil:

; 661  : 					 if (strstr(buf1,"Default Group Division"     )) { group_database[i].default_group_division          = d2; }                           

  01df7	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DBMNJNOG@Default?5Group?5Division@
  01dfc	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01dff	50		 push	 eax
  01e00	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01e05	83 c4 08	 add	 esp, 8
  01e08	85 c0		 test	 eax, eax
  01e0a	74 10		 je	 SHORT $LN197@ReadWutFil
  01e0c	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01e10	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01e16	89 88 2c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+44], ecx
$LN197@ReadWutFil:

; 662  : 					 if (strstr(buf1,"Maximum Groups Per Division")) { group_database[i].maximum_groups_per_division     = d2; }                           

  01e1c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KGJKALPF@Maximum?5Groups?5Per?5Division@
  01e21	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01e24	50		 push	 eax
  01e25	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01e2a	83 c4 08	 add	 esp, 8
  01e2d	85 c0		 test	 eax, eax
  01e2f	74 10		 je	 SHORT $LN198@ReadWutFil
  01e31	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01e35	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01e3b	89 88 30 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+48], ecx
$LN198@ReadWutFil:

; 663  : 					 if (strstr(buf1,"Platoon Name {text}"        )) 

  01e41	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CPCOPHJM@Platoon?5Name?5?$HLtext?$HN@
  01e46	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01e49	50		 push	 eax
  01e4a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01e4f	83 c4 08	 add	 esp, 8
  01e52	85 c0		 test	 eax, eax
  01e54	0f 84 d8 00 00
	00		 je	 $LN205@ReadWutFil

; 664  : 					 {
; 665  : 						if (d2 == 6708896) group_database[i].platoon_name = strdup("N/A");

  01e5a	81 bd 6c ff ff
	ff a0 5e 66 00	 cmp	 DWORD PTR _d2$12[ebp], 6708896 ; 00665ea0H
  01e64	75 18		 jne	 SHORT $LN200@ReadWutFil
  01e66	68 00 00 00 00	 push	 OFFSET ??_C@_03HPADHAHE@N?1A@
  01e6b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strdup
  01e71	83 c4 04	 add	 esp, 4
  01e74	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01e78	89 81 34 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52], eax
$LN200@ReadWutFil:

; 666  : 						if (d2 == 6709584) group_database[i].platoon_name = strdup("Landing Craft (%s)");

  01e7e	81 bd 6c ff ff
	ff 50 61 66 00	 cmp	 DWORD PTR _d2$12[ebp], 6709584 ; 00666150H
  01e88	75 18		 jne	 SHORT $LN201@ReadWutFil
  01e8a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MMAIMAJI@Landing?5Craft?5?$CI?$CFs?$CJ@
  01e8f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strdup
  01e95	83 c4 04	 add	 esp, 4
  01e98	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01e9c	89 81 34 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52], eax
$LN201@ReadWutFil:

; 667  : 						if (d2 == 6709548) group_database[i].platoon_name = strdup("Frigates (%s)");

  01ea2	81 bd 6c ff ff
	ff 2c 61 66 00	 cmp	 DWORD PTR _d2$12[ebp], 6709548 ; 0066612cH
  01eac	75 18		 jne	 SHORT $LN202@ReadWutFil
  01eae	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CEGCMIHB@Frigates?5?$CI?$CFs?$CJ@
  01eb3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strdup
  01eb9	83 c4 04	 add	 esp, 4
  01ebc	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01ec0	89 81 34 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52], eax
$LN202@ReadWutFil:

; 668  : 						if (d2 == 6709524) group_database[i].platoon_name = strdup("%s");

  01ec6	81 bd 6c ff ff
	ff 14 61 66 00	 cmp	 DWORD PTR _d2$12[ebp], 6709524 ; 00666114H
  01ed0	75 18		 jne	 SHORT $LN203@ReadWutFil
  01ed2	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  01ed7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strdup
  01edd	83 c4 04	 add	 esp, 4
  01ee0	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01ee4	89 81 34 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52], eax
$LN203@ReadWutFil:

; 669  : 						if (d2 == 6709496) group_database[i].platoon_name = strdup("%c Company");

  01eea	81 bd 6c ff ff
	ff f8 60 66 00	 cmp	 DWORD PTR _d2$12[ebp], 6709496 ; 006660f8H
  01ef4	75 18		 jne	 SHORT $LN204@ReadWutFil
  01ef6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HDOIOBOM@?$CFc?5Company@
  01efb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strdup
  01f01	83 c4 04	 add	 esp, 4
  01f04	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01f08	89 81 34 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52], eax
$LN204@ReadWutFil:

; 670  : 						if (d2 == 6709428) group_database[i].platoon_name = strdup("%s Battalion");

  01f0e	81 bd 6c ff ff
	ff b4 60 66 00	 cmp	 DWORD PTR _d2$12[ebp], 6709428 ; 006660b4H
  01f18	75 18		 jne	 SHORT $LN205@ReadWutFil
  01f1a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LEJIAGO@?$CFs?5Battalion@
  01f1f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strdup
  01f25	83 c4 04	 add	 esp, 4
  01f28	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01f2c	89 81 34 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52], eax
$LN205@ReadWutFil:

; 671  : 						
; 672  : 					#if WUT_DEBUG
; 673  : 							debug_log("WUT: platoon: %s",group_database[i].platoon_name);
; 674  : 						#endif    
; 675  : 					 }
; 676  : 					 if (strstr(buf1,"Platoon Short Name Type"    )) { group_database[i].platoon_short_name_type         = v2; }                           

  01f32	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MCCMLKOG@Platoon?5Short?5Name?5Type@
  01f37	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01f3a	50		 push	 eax
  01f3b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01f40	83 c4 08	 add	 esp, 8
  01f43	85 c0		 test	 eax, eax
  01f45	74 12		 je	 SHORT $LN206@ReadWutFil
  01f47	f3 0f 2c 85 70
	ff ff ff	 cvttss2si eax, DWORD PTR _v2$13[ebp]
  01f4f	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  01f53	89 81 38 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+56], eax
$LN206@ReadWutFil:

; 677  : 					 if (strstr(buf1,"Map Layer Type"             )) { group_database[i].map_layer_type                  = d2; }                           

  01f59	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GADGLGOG@Map?5Layer?5Type@
  01f5e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01f61	50		 push	 eax
  01f62	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01f67	83 c4 08	 add	 esp, 8
  01f6a	85 c0		 test	 eax, eax
  01f6c	74 10		 je	 SHORT $LN207@ReadWutFil
  01f6e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01f72	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01f78	89 88 3c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+60], ecx
$LN207@ReadWutFil:

; 678  : 					 if (strstr(buf1,"Map Icon Type"              )) { group_database[i].map_icon                        = d2; }                           

  01f7e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OMMEGMFH@Map?5Icon?5Type@
  01f83	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01f86	50		 push	 eax
  01f87	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01f8c	83 c4 08	 add	 esp, 8
  01f8f	85 c0		 test	 eax, eax
  01f91	74 10		 je	 SHORT $LN208@ReadWutFil
  01f93	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01f97	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  01f9d	89 88 40 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+64], ecx
$LN208@ReadWutFil:

; 679  : 					 if (strstr(buf1,"Rearming Time (s)"          )) { group_database[i].rearming_time                   = v2; }             

  01fa3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BGMCFCEI@Rearming?5Time?5?$CIs?$CJ@
  01fa8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01fab	50		 push	 eax
  01fac	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01fb1	83 c4 08	 add	 esp, 8
  01fb4	85 c0		 test	 eax, eax
  01fb6	74 14		 je	 SHORT $LN209@ReadWutFil
  01fb8	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  01fbc	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$13[ebp]
  01fc4	f3 0f 11 80 44
	00 00 00	 movss	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+68], xmm0
$LN209@ReadWutFil:

; 680  : 					 if (strstr(buf1,"Binary (col.19)"            )) 

  01fcc	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CEKJKHJL@Binary?5?$CIcol?419?$CJ@
  01fd1	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  01fd4	50		 push	 eax
  01fd5	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01fda	83 c4 08	 add	 esp, 8
  01fdd	85 c0		 test	 eax, eax
  01fdf	0f 84 74 01 00
	00		 je	 $LN210@ReadWutFil

; 681  : 					 {
; 682  : 						long value = (long) v2;

  01fe5	f3 0f 2c 85 70
	ff ff ff	 cvttss2si eax, DWORD PTR _v2$13[ebp]
  01fed	89 85 64 ff ff
	ff		 mov	 DWORD PTR _value$10[ebp], eax

; 683  : 						group_database[i].frontline_flag		= 		(0 | (value & 3));     //2

  01ff3	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  01ff9	83 e0 03	 and	 eax, 3
  01ffc	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02000	83 e0 03	 and	 eax, 3
  02003	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  02009	83 e2 fc	 and	 edx, -4			; fffffffcH
  0200c	0b d0		 or	 edx, eax
  0200e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02012	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 684  : 						group_database[i].local_only_group	    = ((value >> 2) & 0x01); //1

  02018	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  0201e	c1 f8 02	 sar	 eax, 2
  02021	83 e0 01	 and	 eax, 1
  02024	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02028	83 e0 01	 and	 eax, 1
  0202b	c1 e0 02	 shl	 eax, 2
  0202e	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  02034	83 e2 fb	 and	 edx, -5			; fffffffbH
  02037	0b d0		 or	 edx, eax
  02039	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0203d	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 685  : 						group_database[i].default_engage_enemy  = ((value >> 3) & 0x01); //1

  02043	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  02049	c1 f8 03	 sar	 eax, 3
  0204c	83 e0 01	 and	 eax, 1
  0204f	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02053	83 e0 01	 and	 eax, 1
  02056	c1 e0 03	 shl	 eax, 3
  02059	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  0205f	83 e2 f7	 and	 edx, -9			; fffffff7H
  02062	0b d0		 or	 edx, eax
  02064	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02068	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 686  : 						group_database[i].amalgamate			= 		((value >> 4) & 0x01); //1

  0206e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  02074	c1 f8 04	 sar	 eax, 4
  02077	83 e0 01	 and	 eax, 1
  0207a	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  0207e	83 e0 01	 and	 eax, 1
  02081	c1 e0 04	 shl	 eax, 4
  02084	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  0208a	83 e2 ef	 and	 edx, -17		; ffffffefH
  0208d	0b d0		 or	 edx, eax
  0208f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02093	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 687  : 						group_database[i].platoon_id_type		=  ((0 | (value & 224)) >> 5);//3

  02099	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  0209f	25 e0 00 00 00	 and	 eax, 224		; 000000e0H
  020a4	c1 f8 05	 sar	 eax, 5
  020a7	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  020ab	83 e0 07	 and	 eax, 7
  020ae	c1 e0 05	 shl	 eax, 5
  020b1	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  020b7	81 e2 1f ff ff
	ff		 and	 edx, -225		; ffffff1fH
  020bd	0b d0		 or	 edx, eax
  020bf	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  020c3	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 688  : 						group_database[i].maximum_member_count  = ((0 | (value & 7936)) >> 8); //5

  020c9	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  020cf	25 00 1f 00 00	 and	 eax, 7936		; 00001f00H
  020d4	c1 f8 08	 sar	 eax, 8
  020d7	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  020db	83 e0 1f	 and	 eax, 31			; 0000001fH
  020de	c1 e0 08	 shl	 eax, 8
  020e1	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  020e7	81 e2 ff e0 ff
	ff		 and	 edx, -7937		; ffffe0ffH
  020ed	0b d0		 or	 edx, eax
  020ef	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  020f3	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 689  : 						group_database[i].minimum_idle_count	=  ((0 | (value & 122880)) >> 13); //4

  020f9	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  020ff	25 00 e0 01 00	 and	 eax, 122880		; 0001e000H
  02104	c1 f8 0d	 sar	 eax, 13			; 0000000dH
  02107	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  0210b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0210e	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  02111	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  02117	81 e2 ff 1f fe
	ff		 and	 edx, -122881		; fffe1fffH
  0211d	0b d0		 or	 edx, eax
  0211f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02123	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 690  : 						group_database[i].resupply_source		=  ((0 | (value & 917504)) >> 17); //3                	

  02129	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _value$10[ebp]
  0212f	25 00 00 0e 00	 and	 eax, 917504		; 000e0000H
  02134	c1 f8 11	 sar	 eax, 17			; 00000011H
  02137	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  0213b	83 e0 07	 and	 eax, 7
  0213e	c1 e0 11	 shl	 eax, 17			; 00000011H
  02141	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  02147	81 e2 ff ff f1
	ff		 and	 edx, -917505		; fff1ffffH
  0214d	0b d0		 or	 edx, eax
  0214f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02153	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx
$LN210@ReadWutFil:

; 691  : 					 }
; 692  : 					 if (strstr(buf1,"Air Attack Strength"        )) { group_database[i].ai_stats.air_attack_strength    = d2; } 

  02159	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IGLFOEAA@Air?5Attack?5Strength@
  0215e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02161	50		 push	 eax
  02162	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02167	83 c4 08	 add	 esp, 8
  0216a	85 c0		 test	 eax, eax
  0216c	74 10		 je	 SHORT $LN211@ReadWutFil
  0216e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02172	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  02178	89 88 4c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+76], ecx
$LN211@ReadWutFil:

; 693  : 					 if (strstr(buf1,"Ground Attack Strength"     )) { group_database[i].ai_stats.ground_attack_strength = d2; }

  0217e	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LMMPHEDE@Ground?5Attack?5Strength@
  02183	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02186	50		 push	 eax
  02187	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0218c	83 c4 08	 add	 esp, 8
  0218f	85 c0		 test	 eax, eax
  02191	74 10		 je	 SHORT $LN212@ReadWutFil
  02193	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02197	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  0219d	89 88 50 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+80], ecx
$LN212@ReadWutFil:

; 694  : 					 if (strstr(buf1,"Movement Speed"             )) { group_database[i].ai_stats.movement_speed         = d2; }  

  021a3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IBEFKEPD@Movement?5Speed@
  021a8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  021ab	50		 push	 eax
  021ac	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  021b1	83 c4 08	 add	 esp, 8
  021b4	85 c0		 test	 eax, eax
  021b6	74 10		 je	 SHORT $LN213@ReadWutFil
  021b8	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  021bc	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  021c2	89 88 54 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+84], ecx
$LN213@ReadWutFil:

; 695  : 					 if (strstr(buf1,"Movement Stealth"           )) { group_database[i].ai_stats.movement_stealth       = d2; }

  021c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NEINNPNF@Movement?5Stealth@
  021cd	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  021d0	50		 push	 eax
  021d1	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  021d6	83 c4 08	 add	 esp, 8
  021d9	85 c0		 test	 eax, eax
  021db	74 10		 je	 SHORT $LN214@ReadWutFil
  021dd	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  021e1	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  021e7	89 88 58 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+88], ecx
$LN214@ReadWutFil:

; 696  : 					 if (strstr(buf1,"Cargo Space"                )) { group_database[i].ai_stats.cargo_space            = d2; }

  021ed	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PMAMMHEA@Cargo?5Space@
  021f2	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  021f5	50		 push	 eax
  021f6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  021fb	83 c4 08	 add	 esp, 8
  021fe	85 c0		 test	 eax, eax
  02200	74 10		 je	 SHORT $LN215@ReadWutFil
  02202	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02206	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  0220c	89 88 5c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+92], ecx
$LN215@ReadWutFil:

; 697  : 					 if (strstr(buf1,"Troop Space"                )) { group_database[i].ai_stats.troop_space            = d2; }

  02212	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HPILOKDO@Troop?5Space@
  02217	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0221a	50		 push	 eax
  0221b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02220	83 c4 08	 add	 esp, 8
  02223	85 c0		 test	 eax, eax
  02225	74 10		 je	 SHORT $LN216@ReadWutFil
  02227	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0222b	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _d2$12[ebp]
  02231	89 88 60 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+96], ecx
$LN216@ReadWutFil:

; 698  : 					 
; 699  : 				 #if WUT_DEBUG
; 700  : 						
; 701  : 					 q = buf1+41;
; 702  : 					 vname = strtok(q,"-");
; 703  : 					 debug_log("WUT: GROUPS: Entity - %s [%s]; VAR [%s] - %f [%d]\n", group_database[i].full_name, ent,vname,v2,d2);
; 704  : 
; 705  : 				 #endif
; 706  : 				}//variable names
; 707  : 		  }//for GROUP entities

  02237	e9 01 fa ff ff	 jmp	 $LN34@ReadWutFil
$LN35@ReadWutFil:

; 708  : 	 }//while GROUP

  0223c	e9 34 f9 ff ff	 jmp	 $LN30@ReadWutFil
$LN31@ReadWutFil:

; 709  : 
; 710  : 	 //########################################################################
; 711  : 	 //#### TASKS #############################################################
; 712  : 	 //########################################################################
; 713  : 
; 714  : 	 fscanf(f,"%[^\n]\n",buf);

  02241	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02244	50		 push	 eax
  02245	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0224a	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0224d	51		 push	 ecx
  0224e	e8 00 00 00 00	 call	 _fscanf
  02253	83 c4 0c	 add	 esp, 12			; 0000000cH

; 715  : 	 strcpy(buf1, buf);

  02256	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02259	50		 push	 eax
  0225a	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  0225d	51		 push	 ecx
  0225e	e8 00 00 00 00	 call	 _strcpy
  02263	83 c4 08	 add	 esp, 8
$LN37@ReadWutFil:

; 716  : 
; 717  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Waypoints")==0))

  02266	b8 01 00 00 00	 mov	 eax, 1
  0226b	6b c8 00	 imul	 ecx, eax, 0
  0226e	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  02271	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  02275	85 c0		 test	 eax, eax
  02277	0f 84 aa 0a 00
	00		 je	 $LN38@ReadWutFil
  0227d	b8 01 00 00 00	 mov	 eax, 1
  02282	6b c8 00	 imul	 ecx, eax, 0
  02285	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  02288	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  0228c	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0228f	0f 84 92 0a 00
	00		 je	 $LN38@ReadWutFil
  02295	68 00 00 00 00	 push	 OFFSET ??_C@_09LCEBAHPF@Waypoints@
  0229a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0229d	50		 push	 eax
  0229e	e8 00 00 00 00	 call	 _strcmp
  022a3	83 c4 08	 add	 esp, 8
  022a6	85 c0		 test	 eax, eax
  022a8	0f 84 79 0a 00
	00		 je	 $LN38@ReadWutFil

; 718  : 	 {
; 719  : 		  int done = 0;    	

  022ae	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _done$9[ebp], 0

; 720  : 		  
; 721  : 		  fscanf(f,"%[^\n]\n",buf);

  022b8	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  022bb	50		 push	 eax
  022bc	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  022c1	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  022c4	51		 push	 ecx
  022c5	e8 00 00 00 00	 call	 _fscanf
  022ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 722  : 		  // read a line
; 723  : 		  strcpy(buf1, buf);

  022cd	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  022d0	50		 push	 eax
  022d1	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  022d4	51		 push	 ecx
  022d5	e8 00 00 00 00	 call	 _strcpy
  022da	83 c4 08	 add	 esp, 8

; 724  : 		  
; 725  : 		  strncpy(ent,buf,63);

  022dd	6a 3f		 push	 63			; 0000003fH
  022df	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  022e2	50		 push	 eax
  022e3	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  022e6	51		 push	 ecx
  022e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  022ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 		  ent[39] = '\0';        

  022f0	b8 01 00 00 00	 mov	 eax, 1
  022f5	6b c8 27	 imul	 ecx, eax, 39
  022f8	c6 44 0d ac 00	 mov	 BYTE PTR _ent$[ebp+ecx], 0

; 727  : 		  i = (int)strlen(ent) - 1;        

  022fd	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  02300	50		 push	 eax
  02301	e8 00 00 00 00	 call	 _strlen
  02306	83 c4 04	 add	 esp, 4
  02309	83 e8 01	 sub	 eax, 1
  0230c	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN39@ReadWutFil:

; 728  : 		  while (ent[i] == '-') 

  0230f	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02312	0f b6 4c 05 ac	 movzx	 ecx, BYTE PTR _ent$[ebp+eax]
  02317	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  0231a	75 0b		 jne	 SHORT $LN40@ReadWutFil

; 729  : 			  i--;        

  0231c	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0231f	83 e8 01	 sub	 eax, 1
  02322	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  02325	eb e8		 jmp	 SHORT $LN39@ReadWutFil
$LN40@ReadWutFil:

; 730  : 		  ent[i+1] = '\0';        

  02327	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0232a	c6 44 05 ad 00	 mov	 BYTE PTR _ent$[ebp+eax+1], 0

; 731  : 
; 732  : 
; 733  : 		  // search through all the vehicle list
; 734  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_TASKS; i++)

  0232f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  02336	eb 09		 jmp	 SHORT $LN43@ReadWutFil
$LN41@ReadWutFil:
  02338	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0233b	83 c0 01	 add	 eax, 1
  0233e	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN43@ReadWutFil:
  02341	83 7d f8 1e	 cmp	 DWORD PTR _i$[ebp], 30	; 0000001eH
  02345	0f 8d d7 09 00
	00		 jge	 $LN42@ReadWutFil

; 735  : 		  {        	
; 736  : 				if (strcmp(task_database[i].full_name, ent) == 0)

  0234b	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  0234e	50		 push	 eax
  0234f	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02353	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx]
  02359	52		 push	 edx
  0235a	e8 00 00 00 00	 call	 _strcmp
  0235f	83 c4 08	 add	 esp, 8
  02362	85 c0		 test	 eax, eax
  02364	0f 85 b3 09 00
	00		 jne	 $LN254@ReadWutFil

; 737  : 				{
; 738  : 					 float v2=0;

  0236a	0f 57 c0	 xorps	 xmm0, xmm0
  0236d	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _v2$8[ebp], xmm0

; 739  : 					 int d2 = 0;

  02375	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _d2$7[ebp], 0

; 740  : 					 char *q = buf1+83;

  0237f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02382	83 c0 53	 add	 eax, 83			; 00000053H
  02385	89 85 54 ff ff
	ff		 mov	 DWORD PTR _q$6[ebp], eax

; 741  : 	 
; 742  : 					 if (strcmp(ent,"Transfer"))

  0238b	68 00 00 00 00	 push	 OFFSET ??_C@_08DECIGEMC@Transfer@
  02390	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  02393	50		 push	 eax
  02394	e8 00 00 00 00	 call	 _strcmp
  02399	83 c4 08	 add	 esp, 8
  0239c	85 c0		 test	 eax, eax
  0239e	74 18		 je	 SHORT $LN218@ReadWutFil

; 743  : 					 { 
; 744  : 						 if (done) break;

  023a0	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR _done$9[ebp], 0
  023a7	74 05		 je	 SHORT $LN219@ReadWutFil
  023a9	e9 74 09 00 00	 jmp	 $LN42@ReadWutFil
$LN219@ReadWutFil:

; 745  : 						 done = 1;

  023ae	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _done$9[ebp], 1
$LN218@ReadWutFil:

; 746  : 					 }
; 747  : 						 
; 748  : 					 get_values(q, &v2, &d2);                

  023b8	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _d2$7[ebp]
  023be	50		 push	 eax
  023bf	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _v2$8[ebp]
  023c5	51		 push	 ecx
  023c6	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _q$6[ebp]
  023cc	52		 push	 edx
  023cd	e8 00 00 00 00	 call	 ?get_values@@YGXPADPAMPAH@Z ; get_values

; 749  : 
; 750  : 					 //if (strstr(buf1,"Name {text}"            )) { task_database[i].*full_name = v2; }                          
; 751  : 					 //if (strstr(buf1,"Short Name {text}"      )) { task_database[i].*short_name = v2; }                         
; 752  : 					 //if (strstr(buf1,"Key {text}"             )) { task_database[i].*key = v2; }                                
; 753  : 					 if (strstr(buf1,"Task Category"          )) { task_database[i].task_category = ( task_category_types ) d2; }                    

  023d2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PGGFEHHC@Task?5Category@
  023d7	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  023da	50		 push	 eax
  023db	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  023e0	83 c4 08	 add	 esp, 8
  023e3	85 c0		 test	 eax, eax
  023e5	74 10		 je	 SHORT $LN220@ReadWutFil
  023e7	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  023eb	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  023f1	89 88 0c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+12], ecx
$LN220@ReadWutFil:

; 754  : 					 if (strstr(buf1,"Task Priority"          )) { task_database[i].task_priority = v2; }  //the only float                

  023f7	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LPGIOKPK@Task?5Priority@
  023fc	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  023ff	50		 push	 eax
  02400	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02405	83 c4 08	 add	 esp, 8
  02408	85 c0		 test	 eax, eax
  0240a	74 14		 je	 SHORT $LN221@ReadWutFil
  0240c	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02410	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$8[ebp]
  02418	f3 0f 11 80 10
	00 00 00	 movss	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+16], xmm0
$LN221@ReadWutFil:

; 755  : 					 if (strstr(buf1,"Difficulty Rating"      )) { task_database[i].difficulty_rating = d2; }                     

  02420	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EJKMPGAA@Difficulty?5Rating@
  02425	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02428	50		 push	 eax
  02429	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0242e	83 c4 08	 add	 esp, 8
  02431	85 c0		 test	 eax, eax
  02433	74 10		 je	 SHORT $LN222@ReadWutFil
  02435	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02439	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  0243f	89 88 14 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+20], ecx
$LN222@ReadWutFil:

; 756  : 					 if (strstr(buf1,"7"                      )) 

  02445	68 00 00 00 00	 push	 OFFSET ??_C@_01COCBENDE@7@
  0244a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0244d	50		 push	 eax
  0244e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02453	83 c4 08	 add	 esp, 8
  02456	85 c0		 test	 eax, eax
  02458	74 4d		 je	 SHORT $LN223@ReadWutFil

; 757  : 					 { 
; 758  : 						task_database[i].task_default_target_class = (0 | (d2 & 3));

  0245a	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02460	83 e0 03	 and	 eax, 3
  02463	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02467	83 e0 03	 and	 eax, 3
  0246a	8b 91 18 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+24]
  02470	83 e2 fc	 and	 edx, -4			; fffffffcH
  02473	0b d0		 or	 edx, eax
  02475	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02479	89 90 18 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24], edx

; 759  : 						task_database[i].task_default_target_source = (d2 >> 2);

  0247f	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02485	c1 f8 02	 sar	 eax, 2
  02488	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  0248c	83 e0 0f	 and	 eax, 15			; 0000000fH
  0248f	c1 e0 02	 shl	 eax, 2
  02492	8b 91 18 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+24]
  02498	83 e2 c3	 and	 edx, -61		; ffffffc3H
  0249b	0b d0		 or	 edx, eax
  0249d	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  024a1	89 90 18 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24], edx
$LN223@ReadWutFil:

; 760  : 
; 761  : /*                	
; 762  : 						//task_default_target_class en task_default_target_source
; 763  : 						1e 2 bits zijn getallen 0,1of 2
; 764  : 						bits 3-6 zijn getallen 0,1,2,3,4,5,6
; 765  : 						bijv 22 = 10110 = 101:10 = 5 en 2 = SOURCE_TASK_OBJECTIVE, en _CLASS_ground,
; 766  : 						bijv 20 = 10100 = 101:00 = 5 en 0     source none            class all
; 767  : 						
; 768  : 						4 = 100 = 001:00 = 1 en 0 scan air en class all
; 769  : 						
; 770  : 						16 = 10000 = 100:00 = 4 en 0 = source objective en class all 
; 771  : 										class ground source none 6 en 2
; 772  : 					00 0    TASK_TARGET_CLASS_ALL,                    
; 773  : 					01 1	TASK_TARGET_CLASS_AIR,                    
; 774  : 					10 2	TASK_TARGET_CLASS_GROUND,                 
; 775  : 						
; 776  : 					001 1	TASK_TARGET_SOURCE_SCAN_AIR,              
; 777  : 					010 2	TASK_TARGET_SOURCE_SCAN_ALL,              
; 778  : 					011 3	TASK_TARGET_SOURCE_SCAN_GROUND,             
; 779  : 					100 4	TASK_TARGET_SOURCE_OBJECTIVE_NOMINATED,   
; 780  : 					101 5	TASK_TARGET_SOURCE_TASK_OBJECTIVE,        
; 781  : 					110 6	TASK_TARGET_SOURCE_NONE,                  					
; 782  : 					111	7   NUM_TASK_TASK_TARGET_SOURCE_TYPES
; 783  : */	 
; 784  : 					 }
; 785  : 					 if (strstr(buf1,"Binary (col.8)"         )) 

  024a7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BKKFIMEB@Binary?5?$CIcol?48?$CJ@
  024ac	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  024af	50		 push	 eax
  024b0	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  024b5	83 c4 08	 add	 esp, 8
  024b8	85 c0		 test	 eax, eax
  024ba	0f 84 e5 02 00
	00		 je	 $LN242@ReadWutFil

; 786  : 					 {
; 787  : 					if ((d2 == 0) & 0x01) task_database[i].task_default_target_type = 0;   

  024c0	83 bd 58 ff ff
	ff 00		 cmp	 DWORD PTR _d2$7[ebp], 0
  024c7	75 0c		 jne	 SHORT $LN274@ReadWutFil
  024c9	c7 85 fc fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv1932[ebp], 1
  024d3	eb 0a		 jmp	 SHORT $LN275@ReadWutFil
$LN274@ReadWutFil:
  024d5	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1932[ebp], 0
$LN275@ReadWutFil:
  024df	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR tv1932[ebp]
  024e5	83 e0 01	 and	 eax, 1
  024e8	74 17		 je	 SHORT $LN225@ReadWutFil
  024ea	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  024ee	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  024f4	83 e1 00	 and	 ecx, 0
  024f7	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  024fb	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN225@ReadWutFil:

; 788  : 					if ((d2 >> 0) & 0x01) task_database[i].task_default_target_type = 1;   

  02501	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02507	83 e0 01	 and	 eax, 1
  0250a	74 1a		 je	 SHORT $LN226@ReadWutFil
  0250c	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02510	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  02516	83 e1 00	 and	 ecx, 0
  02519	83 c9 01	 or	 ecx, 1
  0251c	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02520	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN226@ReadWutFil:

; 789  : 					if ((d2 >> 1) & 0x01) task_database[i].task_default_target_type = 2;   

  02526	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0252c	d1 f8		 sar	 eax, 1
  0252e	83 e0 01	 and	 eax, 1
  02531	74 1a		 je	 SHORT $LN227@ReadWutFil
  02533	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02537	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0253d	83 e1 00	 and	 ecx, 0
  02540	83 c9 02	 or	 ecx, 2
  02543	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02547	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN227@ReadWutFil:

; 790  : 					if ((d2 >> 2) & 0x01) task_database[i].task_default_target_type = 3;   

  0254d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02553	c1 f8 02	 sar	 eax, 2
  02556	83 e0 01	 and	 eax, 1
  02559	74 1a		 je	 SHORT $LN228@ReadWutFil
  0255b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0255f	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  02565	83 e1 00	 and	 ecx, 0
  02568	83 c9 03	 or	 ecx, 3
  0256b	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  0256f	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN228@ReadWutFil:

; 791  : 					if ((d2 >> 3) & 0x01) task_database[i].task_default_target_type = 4;   

  02575	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0257b	c1 f8 03	 sar	 eax, 3
  0257e	83 e0 01	 and	 eax, 1
  02581	74 1a		 je	 SHORT $LN229@ReadWutFil
  02583	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02587	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0258d	83 e1 00	 and	 ecx, 0
  02590	83 c9 04	 or	 ecx, 4
  02593	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02597	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN229@ReadWutFil:

; 792  : 					if ((d2 >> 4) & 0x01) task_database[i].task_default_target_type = 5;   

  0259d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  025a3	c1 f8 04	 sar	 eax, 4
  025a6	83 e0 01	 and	 eax, 1
  025a9	74 1a		 je	 SHORT $LN230@ReadWutFil
  025ab	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  025af	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  025b5	83 e1 00	 and	 ecx, 0
  025b8	83 c9 05	 or	 ecx, 5
  025bb	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  025bf	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN230@ReadWutFil:

; 793  : 					if ((d2 >> 5) & 0x01) task_database[i].task_default_target_type = 6;   

  025c5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  025cb	c1 f8 05	 sar	 eax, 5
  025ce	83 e0 01	 and	 eax, 1
  025d1	74 1a		 je	 SHORT $LN231@ReadWutFil
  025d3	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  025d7	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  025dd	83 e1 00	 and	 ecx, 0
  025e0	83 c9 06	 or	 ecx, 6
  025e3	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  025e7	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN231@ReadWutFil:

; 794  : 					if ((d2 >> 6) & 0x01) task_database[i].task_default_target_type = 7;   

  025ed	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  025f3	c1 f8 06	 sar	 eax, 6
  025f6	83 e0 01	 and	 eax, 1
  025f9	74 1a		 je	 SHORT $LN232@ReadWutFil
  025fb	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  025ff	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  02605	83 e1 00	 and	 ecx, 0
  02608	83 c9 07	 or	 ecx, 7
  0260b	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  0260f	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN232@ReadWutFil:

; 795  : 					if ((d2 >> 7) & 0x01) task_database[i].task_default_target_type = 8;   

  02615	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0261b	c1 f8 07	 sar	 eax, 7
  0261e	83 e0 01	 and	 eax, 1
  02621	74 1a		 je	 SHORT $LN233@ReadWutFil
  02623	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02627	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0262d	83 e1 00	 and	 ecx, 0
  02630	83 c9 08	 or	 ecx, 8
  02633	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02637	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN233@ReadWutFil:

; 796  : 					if ((d2 >> 8) & 0x01) task_database[i].task_default_target_type = 9;   

  0263d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02643	c1 f8 08	 sar	 eax, 8
  02646	83 e0 01	 and	 eax, 1
  02649	74 1a		 je	 SHORT $LN234@ReadWutFil
  0264b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0264f	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  02655	83 e1 00	 and	 ecx, 0
  02658	83 c9 09	 or	 ecx, 9
  0265b	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  0265f	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN234@ReadWutFil:

; 797  : 					if ((d2 >> 9) & 0x01) task_database[i].task_default_target_type = 10;  

  02665	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0266b	c1 f8 09	 sar	 eax, 9
  0266e	83 e0 01	 and	 eax, 1
  02671	74 1a		 je	 SHORT $LN235@ReadWutFil
  02673	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02677	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0267d	83 e1 00	 and	 ecx, 0
  02680	83 c9 0a	 or	 ecx, 10			; 0000000aH
  02683	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02687	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN235@ReadWutFil:

; 798  : 					if ((d2 >> 10)& 0x01) task_database[i].task_default_target_type = 11;  

  0268d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02693	c1 f8 0a	 sar	 eax, 10			; 0000000aH
  02696	83 e0 01	 and	 eax, 1
  02699	74 1a		 je	 SHORT $LN236@ReadWutFil
  0269b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0269f	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  026a5	83 e1 00	 and	 ecx, 0
  026a8	83 c9 0b	 or	 ecx, 11			; 0000000bH
  026ab	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  026af	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN236@ReadWutFil:

; 799  : 					if ((d2 >> 11)& 0x01) task_database[i].task_default_target_type = 12;  

  026b5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  026bb	c1 f8 0b	 sar	 eax, 11			; 0000000bH
  026be	83 e0 01	 and	 eax, 1
  026c1	74 1a		 je	 SHORT $LN237@ReadWutFil
  026c3	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  026c7	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  026cd	83 e1 00	 and	 ecx, 0
  026d0	83 c9 0c	 or	 ecx, 12			; 0000000cH
  026d3	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  026d7	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN237@ReadWutFil:

; 800  : 					if ((d2 >> 12)& 0x01) task_database[i].task_default_target_type = 13;  

  026dd	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  026e3	c1 f8 0c	 sar	 eax, 12			; 0000000cH
  026e6	83 e0 01	 and	 eax, 1
  026e9	74 1a		 je	 SHORT $LN238@ReadWutFil
  026eb	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  026ef	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  026f5	83 e1 00	 and	 ecx, 0
  026f8	83 c9 0d	 or	 ecx, 13			; 0000000dH
  026fb	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  026ff	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN238@ReadWutFil:

; 801  : 					if ((d2 >> 13)& 0x01) task_database[i].task_default_target_type = 14;  

  02705	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0270b	c1 f8 0d	 sar	 eax, 13			; 0000000dH
  0270e	83 e0 01	 and	 eax, 1
  02711	74 1a		 je	 SHORT $LN239@ReadWutFil
  02713	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02717	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0271d	83 e1 00	 and	 ecx, 0
  02720	83 c9 0e	 or	 ecx, 14			; 0000000eH
  02723	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02727	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN239@ReadWutFil:

; 802  : 					if ((d2 >> 14)& 0x01) task_database[i].task_default_target_type = 15;  

  0272d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02733	c1 f8 0e	 sar	 eax, 14			; 0000000eH
  02736	83 e0 01	 and	 eax, 1
  02739	74 1a		 je	 SHORT $LN240@ReadWutFil
  0273b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0273f	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  02745	83 e1 00	 and	 ecx, 0
  02748	83 c9 0f	 or	 ecx, 15			; 0000000fH
  0274b	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  0274f	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN240@ReadWutFil:

; 803  : 					if ((d2 >> 15)& 0x01) task_database[i].task_default_target_type = 16;  

  02755	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0275b	c1 f8 0f	 sar	 eax, 15			; 0000000fH
  0275e	83 e0 01	 and	 eax, 1
  02761	74 1a		 je	 SHORT $LN241@ReadWutFil
  02763	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02767	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0276d	83 e1 00	 and	 ecx, 0
  02770	83 c9 10	 or	 ecx, 16			; 00000010H
  02773	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  02777	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN241@ReadWutFil:

; 804  : 					if ((d2 >> 16)& 0x01) task_database[i].task_default_target_type = 17;                 

  0277d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02783	c1 f8 10	 sar	 eax, 16			; 00000010H
  02786	83 e0 01	 and	 eax, 1
  02789	74 1a		 je	 SHORT $LN242@ReadWutFil
  0278b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0278f	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  02795	83 e1 00	 and	 ecx, 0
  02798	83 c9 11	 or	 ecx, 17			; 00000011H
  0279b	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  0279f	89 8a 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28], ecx
$LN242@ReadWutFil:

; 805  : 					 }
; 806  : 					 if (strstr(buf1,"Binary (col.9)"         )) 

  027a5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BLGHOGHG@Binary?5?$CIcol?49?$CJ@
  027aa	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  027ad	50		 push	 eax
  027ae	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  027b3	83 c4 08	 add	 esp, 8
  027b6	85 c0		 test	 eax, eax
  027b8	0f 84 6c 01 00
	00		 je	 $LN243@ReadWutFil

; 807  : 					 {  
; 808  : 						int value = 0;

  027be	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _value$5[ebp], 0

; 809  : 						value = value | (d2 & 3); //0000000000000011

  027c8	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  027ce	83 e0 03	 and	 eax, 3
  027d1	0b 85 50 ff ff
	ff		 or	 eax, DWORD PTR _value$5[ebp]
  027d7	89 85 50 ff ff
	ff		 mov	 DWORD PTR _value$5[ebp], eax

; 810  : 						task_database[i].task_objective_info = value;

  027dd	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  027e1	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _value$5[ebp]
  027e7	83 e1 03	 and	 ecx, 3
  027ea	8b 90 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  027f0	83 e2 fc	 and	 edx, -4			; fffffffcH
  027f3	0b d1		 or	 edx, ecx
  027f5	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  027f9	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 811  : 						 
; 812  : 						  value = 0;

  027ff	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _value$5[ebp], 0

; 813  : 						value = value | (d2 & 60); //0000000000111100

  02809	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0280f	83 e0 3c	 and	 eax, 60			; 0000003cH
  02812	0b 85 50 ff ff
	ff		 or	 eax, DWORD PTR _value$5[ebp]
  02818	89 85 50 ff ff
	ff		 mov	 DWORD PTR _value$5[ebp], eax

; 814  : 						  task_database[i].minimum_member_count = value >> 2;

  0281e	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _value$5[ebp]
  02824	c1 f8 02	 sar	 eax, 2
  02827	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  0282b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0282e	c1 e0 02	 shl	 eax, 2
  02831	8b 91 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+32]
  02837	83 e2 c3	 and	 edx, -61		; ffffffc3H
  0283a	0b d0		 or	 edx, eax
  0283c	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02840	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 815  : 								 
; 816  : 						  value = 0;

  02846	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _value$5[ebp], 0

; 817  : 						value = value | (d2 & 384); //0000 0000 1100 0000

  02850	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02856	25 80 01 00 00	 and	 eax, 384		; 00000180H
  0285b	0b 85 50 ff ff
	ff		 or	 eax, DWORD PTR _value$5[ebp]
  02861	89 85 50 ff ff
	ff		 mov	 DWORD PTR _value$5[ebp], eax

; 818  : 						  task_database[i].rules_of_engagement = value >> 6;

  02867	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _value$5[ebp]
  0286d	c1 f8 06	 sar	 eax, 6
  02870	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02874	83 e0 03	 and	 eax, 3
  02877	c1 e0 06	 shl	 eax, 6
  0287a	8b 91 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+32]
  02880	81 e2 3f ff ff
	ff		 and	 edx, -193		; ffffff3fH
  02886	0b d0		 or	 edx, eax
  02888	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0288c	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 819  : 
; 820  : 						  value = 0;

  02892	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _value$5[ebp], 0

; 821  : 						value = value | (d2 & 512); //0000 0001 0000 0000

  0289c	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  028a2	25 00 02 00 00	 and	 eax, 512		; 00000200H
  028a7	0b 85 50 ff ff
	ff		 or	 eax, DWORD PTR _value$5[ebp]
  028ad	89 85 50 ff ff
	ff		 mov	 DWORD PTR _value$5[ebp], eax

; 822  : 						  task_database[i].engage_enemy = value >> 8;

  028b3	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _value$5[ebp]
  028b9	c1 f8 08	 sar	 eax, 8
  028bc	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  028c0	83 e0 01	 and	 eax, 1
  028c3	c1 e0 08	 shl	 eax, 8
  028c6	8b 91 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+32]
  028cc	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  028d2	0b d0		 or	 edx, eax
  028d4	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  028d8	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 823  : 
; 824  : 						  value = 0;

  028de	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _value$5[ebp], 0

; 825  : 						value = value | (d2 & 7680); //0001 1110 0000 0000

  028e8	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  028ee	25 00 1e 00 00	 and	 eax, 7680		; 00001e00H
  028f3	0b 85 50 ff ff
	ff		 or	 eax, DWORD PTR _value$5[ebp]
  028f9	89 85 50 ff ff
	ff		 mov	 DWORD PTR _value$5[ebp], eax

; 826  : 						  task_database[i].escort_required_threshold = value >> 9;

  028ff	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _value$5[ebp]
  02905	c1 f8 09	 sar	 eax, 9
  02908	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  0290c	83 e0 0f	 and	 eax, 15			; 0000000fH
  0290f	c1 e0 09	 shl	 eax, 9
  02912	8b 91 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+32]
  02918	81 e2 ff e1 ff
	ff		 and	 edx, -7681		; ffffe1ffH
  0291e	0b d0		 or	 edx, eax
  02920	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02924	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx
$LN243@ReadWutFil:

; 827  : 					 }                                                            
; 828  : 					 if (strstr(buf1,"10"                     )) { ; } //waypoint_route_colour

  0292a	68 00 00 00 00	 push	 OFFSET ??_C@_02PKFBJPLJ@10@
  0292f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02932	50		 push	 eax
  02933	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02938	83 c4 08	 add	 esp, 8

; 829  : 					 if (strstr(buf1,"Binary 11"              )) 

  0293b	68 00 00 00 00	 push	 OFFSET ??_C@_09GPLEILGM@Binary?511@
  02940	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02943	50		 push	 eax
  02944	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02949	83 c4 08	 add	 esp, 8
  0294c	85 c0		 test	 eax, eax
  0294e	0f 84 64 02 00
	00		 je	 $LN245@ReadWutFil

; 830  : 					 { 
; 831  : 						task_database[i].add_start_waypoint				= ((d2 >> 0) & 0x01); 

  02954	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0295a	83 e0 01	 and	 eax, 1
  0295d	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02961	83 e0 01	 and	 eax, 1
  02964	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  0296a	83 e2 fe	 and	 edx, -2			; fffffffeH
  0296d	0b d0		 or	 edx, eax
  0296f	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02973	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 832  : 						task_database[i].primary_task					= ((d2 >> 1) & 0x01); 

  02979	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  0297f	d1 f8		 sar	 eax, 1
  02981	83 e0 01	 and	 eax, 1
  02984	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02988	83 e0 01	 and	 eax, 1
  0298b	d1 e0		 shl	 eax, 1
  0298d	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02993	83 e2 fd	 and	 edx, -3			; fffffffdH
  02996	0b d0		 or	 edx, eax
  02998	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0299c	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 833  : 						task_database[i].solo_task						= ((d2 >> 2) & 0x01); 

  029a2	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  029a8	c1 f8 02	 sar	 eax, 2
  029ab	83 e0 01	 and	 eax, 1
  029ae	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  029b2	83 e0 01	 and	 eax, 1
  029b5	c1 e0 02	 shl	 eax, 2
  029b8	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  029be	83 e2 fb	 and	 edx, -5			; fffffffbH
  029c1	0b d0		 or	 edx, eax
  029c3	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  029c7	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 834  : 						task_database[i].persistent_task				= ((d2 >> 3) & 0x01); 

  029cd	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  029d3	c1 f8 03	 sar	 eax, 3
  029d6	83 e0 01	 and	 eax, 1
  029d9	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  029dd	83 e0 01	 and	 eax, 1
  029e0	c1 e0 03	 shl	 eax, 3
  029e3	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  029e9	83 e2 f7	 and	 edx, -9			; fffffff7H
  029ec	0b d0		 or	 edx, eax
  029ee	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  029f2	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 835  : 						task_database[i].visible_task					= ((d2 >> 4) & 0x01); 

  029f8	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  029fe	c1 f8 04	 sar	 eax, 4
  02a01	83 e0 01	 and	 eax, 1
  02a04	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02a08	83 e0 01	 and	 eax, 1
  02a0b	c1 e0 04	 shl	 eax, 4
  02a0e	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02a14	83 e2 ef	 and	 edx, -17		; ffffffefH
  02a17	0b d0		 or	 edx, eax
  02a19	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02a1d	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 836  : 						task_database[i].keysite_air_force_capacity		= (0 | (d2 & 96)); // 2 bit value

  02a23	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02a29	83 e0 60	 and	 eax, 96			; 00000060H
  02a2c	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02a30	83 e0 03	 and	 eax, 3
  02a33	c1 e0 05	 shl	 eax, 5
  02a36	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02a3c	83 e2 9f	 and	 edx, -97		; ffffff9fH
  02a3f	0b d0		 or	 edx, eax
  02a41	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02a45	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 837  : 							task_database[i].assess_landing					= ((d2 >> 7) & 0x01); 

  02a4b	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02a51	c1 f8 07	 sar	 eax, 7
  02a54	83 e0 01	 and	 eax, 1
  02a57	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02a5b	83 e0 01	 and	 eax, 1
  02a5e	c1 e0 07	 shl	 eax, 7
  02a61	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02a67	81 e2 7f ff ff
	ff		 and	 edx, -129		; ffffff7fH
  02a6d	0b d0		 or	 edx, eax
  02a6f	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02a73	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 838  : 						task_database[i].task_route_search				= ((d2 >> 8) & 0x01); 

  02a79	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02a7f	c1 f8 08	 sar	 eax, 8
  02a82	83 e0 01	 and	 eax, 1
  02a85	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02a89	83 e0 01	 and	 eax, 1
  02a8c	c1 e0 08	 shl	 eax, 8
  02a8f	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02a95	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  02a9b	0b d0		 or	 edx, eax
  02a9d	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02aa1	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 839  : 						task_database[i].perform_debrief				= ((d2 >> 9) & 0x01); 

  02aa7	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02aad	c1 f8 09	 sar	 eax, 9
  02ab0	83 e0 01	 and	 eax, 1
  02ab3	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02ab7	83 e0 01	 and	 eax, 1
  02aba	c1 e0 09	 shl	 eax, 9
  02abd	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02ac3	81 e2 ff fd ff
	ff		 and	 edx, -513		; fffffdffH
  02ac9	0b d0		 or	 edx, eax
  02acb	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02acf	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 840  : 						task_database[i].delay_task_assignment			= ((d2 >> 10) & 0x01); 

  02ad5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02adb	c1 f8 0a	 sar	 eax, 10			; 0000000aH
  02ade	83 e0 01	 and	 eax, 1
  02ae1	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02ae5	83 e0 01	 and	 eax, 1
  02ae8	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  02aeb	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02af1	81 e2 ff fb ff
	ff		 and	 edx, -1025		; fffffbffH
  02af7	0b d0		 or	 edx, eax
  02af9	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02afd	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 841  : 						task_database[i].task_objective_preview			= ((d2 >> 11) & 0x01); 

  02b03	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02b09	c1 f8 0b	 sar	 eax, 11			; 0000000bH
  02b0c	83 e0 01	 and	 eax, 1
  02b0f	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02b13	83 e0 03	 and	 eax, 3
  02b16	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  02b19	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02b1f	81 e2 ff e7 ff
	ff		 and	 edx, -6145		; ffffe7ffH
  02b25	0b d0		 or	 edx, eax
  02b27	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02b2b	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 842  : 						task_database[i].counts_towards_player_log		= ((d2 >> 12) & 0x01); 

  02b31	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02b37	c1 f8 0c	 sar	 eax, 12			; 0000000cH
  02b3a	83 e0 01	 and	 eax, 1
  02b3d	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02b41	83 e0 01	 and	 eax, 1
  02b44	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  02b47	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02b4d	81 e2 ff df ff
	ff		 and	 edx, -8193		; ffffdfffH
  02b53	0b d0		 or	 edx, eax
  02b55	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02b59	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 843  : 						task_database[i].wait_for_end_task				= ((d2 >> 13) & 0x01); 

  02b5f	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02b65	c1 f8 0d	 sar	 eax, 13			; 0000000dH
  02b68	83 e0 01	 and	 eax, 1
  02b6b	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02b6f	83 e0 01	 and	 eax, 1
  02b72	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  02b75	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02b7b	81 e2 ff bf ff
	ff		 and	 edx, -16385		; ffffbfffH
  02b81	0b d0		 or	 edx, eax
  02b83	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02b87	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 844  : 						task_database[i].player_reserve_factor			= (d2 >> 14); // 3 bit value

  02b8d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _d2$7[ebp]
  02b93	c1 f8 0e	 sar	 eax, 14			; 0000000eH
  02b96	6b 4d f8 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02b9a	83 e0 07	 and	 eax, 7
  02b9d	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  02ba0	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  02ba6	81 e2 ff 7f fc
	ff		 and	 edx, -229377		; fffc7fffH
  02bac	0b d0		 or	 edx, eax
  02bae	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02bb2	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx
$LN245@ReadWutFil:

; 845  : 					 }                    
; 846  : 					 if (strstr(buf1,"TaskCompleted Score"   )) { task_database[i].task_completed_score = d2; }             

  02bb8	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KEGGANKI@TaskCompleted?5Score@
  02bbd	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02bc0	50		 push	 eax
  02bc1	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02bc6	83 c4 08	 add	 esp, 8
  02bc9	85 c0		 test	 eax, eax
  02bcb	74 28		 je	 SHORT $LN246@ReadWutFil
  02bcd	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02bd1	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02bd7	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  02bdd	8b 90 2c 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+44]
  02be3	81 e2 00 00 ff
	ff		 and	 edx, -65536		; ffff0000H
  02be9	0b d1		 or	 edx, ecx
  02beb	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02bef	89 90 2c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+44], edx
$LN246@ReadWutFil:

; 847  : 					 if (strstr(buf1,"Movement Type"          )) { task_database[i].movement_type = ( movement_types ) d2; }                    

  02bf5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GEKIGJJE@Movement?5Type@
  02bfa	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02bfd	50		 push	 eax
  02bfe	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02c03	83 c4 08	 add	 esp, 8
  02c06	85 c0		 test	 eax, eax
  02c08	74 10		 je	 SHORT $LN247@ReadWutFil
  02c0a	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02c0e	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02c14	89 88 30 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+48], ecx
$LN247@ReadWutFil:

; 848  : 					 if (strstr(buf1,"Landing Types"         )) { task_database[i].landing_types = d2; }             

  02c1a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FJCPBHBM@Landing?5Types@
  02c1f	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02c22	50		 push	 eax
  02c23	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02c28	83 c4 08	 add	 esp, 8
  02c2b	85 c0		 test	 eax, eax
  02c2d	74 10		 je	 SHORT $LN248@ReadWutFil
  02c2f	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02c33	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02c39	89 88 34 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52], ecx
$LN248@ReadWutFil:

; 849  : 					 if (strstr(buf1,"Air Attack strength"   )) { task_database[i].ai_stats.air_attack_strength = d2; }     

  02c3f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EEEGGKD@Air?5Attack?5strength@
  02c44	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02c47	50		 push	 eax
  02c48	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02c4d	83 c4 08	 add	 esp, 8
  02c50	85 c0		 test	 eax, eax
  02c52	74 10		 je	 SHORT $LN249@ReadWutFil
  02c54	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02c58	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02c5e	89 88 38 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+56], ecx
$LN249@ReadWutFil:

; 850  : 					 if (strstr(buf1,"Ground Attack strength")) { task_database[i].ai_stats.ground_attack_strength = d2; }  

  02c64	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DODOPGJH@Ground?5Attack?5strength@
  02c69	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02c6c	50		 push	 eax
  02c6d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02c72	83 c4 08	 add	 esp, 8
  02c75	85 c0		 test	 eax, eax
  02c77	74 10		 je	 SHORT $LN250@ReadWutFil
  02c79	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02c7d	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02c83	89 88 3c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+60], ecx
$LN250@ReadWutFil:

; 851  : 					 if (strstr(buf1,"Movement Speed"        )) { task_database[i].ai_stats.movement_speed = d2; }          

  02c89	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IBEFKEPD@Movement?5Speed@
  02c8e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02c91	50		 push	 eax
  02c92	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02c97	83 c4 08	 add	 esp, 8
  02c9a	85 c0		 test	 eax, eax
  02c9c	74 10		 je	 SHORT $LN251@ReadWutFil
  02c9e	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02ca2	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02ca8	89 88 40 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+64], ecx
$LN251@ReadWutFil:

; 852  : 					 if (strstr(buf1,"Movement"              )) { task_database[i].ai_stats.movement_stealth = d2; }        

  02cae	68 00 00 00 00	 push	 OFFSET ??_C@_08IMCBCIPL@Movement@
  02cb3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02cb6	50		 push	 eax
  02cb7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02cbc	83 c4 08	 add	 esp, 8
  02cbf	85 c0		 test	 eax, eax
  02cc1	74 10		 je	 SHORT $LN252@ReadWutFil
  02cc3	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02cc7	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02ccd	89 88 44 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+68], ecx
$LN252@ReadWutFil:

; 853  : 					 if (strstr(buf1,"Cargo Space"           )) { task_database[i].ai_stats.cargo_space = d2; }             

  02cd3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PMAMMHEA@Cargo?5Space@
  02cd8	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02cdb	50		 push	 eax
  02cdc	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02ce1	83 c4 08	 add	 esp, 8
  02ce4	85 c0		 test	 eax, eax
  02ce6	74 10		 je	 SHORT $LN253@ReadWutFil
  02ce8	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02cec	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02cf2	89 88 48 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+72], ecx
$LN253@ReadWutFil:

; 854  : 					 if (strstr(buf1,"Troop Space"           )) { task_database[i].ai_stats.troop_space = d2; }             

  02cf8	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HPILOKDO@Troop?5Space@
  02cfd	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02d00	50		 push	 eax
  02d01	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02d06	83 c4 08	 add	 esp, 8
  02d09	85 c0		 test	 eax, eax
  02d0b	74 10		 je	 SHORT $LN254@ReadWutFil
  02d0d	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02d11	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _d2$7[ebp]
  02d17	89 88 4c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+76], ecx
$LN254@ReadWutFil:

; 855  : 
; 856  : 				#if WUT_DEBUG
; 857  : 					 
; 858  : 					 q = buf1+41;
; 859  : 					 vname = strtok(q,"-");
; 860  : 					 debug_log("WUT: TASK: Entity - %s [%s]; VAR [%s] - %f [%d]\n", task_database[i].full_name, ent, vname,v2,d2);
; 861  : 				
; 862  : 				#endif
; 863  : 				}//variable names
; 864  : 		}//for TASK entities

  02d1d	e9 16 f6 ff ff	 jmp	 $LN41@ReadWutFil
$LN42@ReadWutFil:

; 865  : 	 }//while TASK

  02d22	e9 3f f5 ff ff	 jmp	 $LN37@ReadWutFil
$LN38@ReadWutFil:

; 866  : 
; 867  : 
; 868  : 	 //########################################################################
; 869  : 	 //#### WAYPOINTS #########################################################
; 870  : 	 //########################################################################
; 871  : 
; 872  : 	 fscanf(f,"%[^\n]\n",buf);

  02d27	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02d2a	50		 push	 eax
  02d2b	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02d30	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02d33	51		 push	 ecx
  02d34	e8 00 00 00 00	 call	 _fscanf
  02d39	83 c4 0c	 add	 esp, 12			; 0000000cH

; 873  : 	 strcpy(buf1, buf);

  02d3c	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02d3f	50		 push	 eax
  02d40	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  02d43	51		 push	 ecx
  02d44	e8 00 00 00 00	 call	 _strcpy
  02d49	83 c4 08	 add	 esp, 8
$LN44@ReadWutFil:

; 874  : 
; 875  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' && !(strcmp(buf1,"Weapon Config Types")==0))

  02d4c	b8 01 00 00 00	 mov	 eax, 1
  02d51	6b c8 00	 imul	 ecx, eax, 0
  02d54	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  02d57	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  02d5b	85 c0		 test	 eax, eax
  02d5d	0f 84 31 04 00
	00		 je	 $LN45@ReadWutFil
  02d63	b8 01 00 00 00	 mov	 eax, 1
  02d68	6b c8 00	 imul	 ecx, eax, 0
  02d6b	8b 55 f0	 mov	 edx, DWORD PTR _buf1$[ebp]
  02d6e	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  02d72	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  02d75	0f 84 19 04 00
	00		 je	 $LN45@ReadWutFil
  02d7b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LJMIKIM@Weapon?5Config?5Types@
  02d80	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02d83	50		 push	 eax
  02d84	e8 00 00 00 00	 call	 _strcmp
  02d89	83 c4 08	 add	 esp, 8
  02d8c	85 c0		 test	 eax, eax
  02d8e	0f 84 00 04 00
	00		 je	 $LN45@ReadWutFil

; 876  : 	 {
; 877  : 		
; 878  : 		  fscanf(f,"%[^\n]\n",buf);

  02d94	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02d97	50		 push	 eax
  02d98	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02d9d	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02da0	51		 push	 ecx
  02da1	e8 00 00 00 00	 call	 _fscanf
  02da6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 879  : 		  // read a line
; 880  : 		  strcpy(buf1, buf);

  02da9	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02dac	50		 push	 eax
  02dad	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  02db0	51		 push	 ecx
  02db1	e8 00 00 00 00	 call	 _strcpy
  02db6	83 c4 08	 add	 esp, 8

; 881  : 		  
; 882  : 		  
; 883  : 		  strncpy(ent,buf,63);

  02db9	6a 3f		 push	 63			; 0000003fH
  02dbb	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  02dbe	50		 push	 eax
  02dbf	8d 4d ac	 lea	 ecx, DWORD PTR _ent$[ebp]
  02dc2	51		 push	 ecx
  02dc3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  02dc9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 884  : 		  ent[39] = '\0';        

  02dcc	b8 01 00 00 00	 mov	 eax, 1
  02dd1	6b c8 27	 imul	 ecx, eax, 39
  02dd4	c6 44 0d ac 00	 mov	 BYTE PTR _ent$[ebp+ecx], 0

; 885  : 		  i = (int)strlen(ent) - 1;        

  02dd9	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  02ddc	50		 push	 eax
  02ddd	e8 00 00 00 00	 call	 _strlen
  02de2	83 c4 04	 add	 esp, 4
  02de5	83 e8 01	 sub	 eax, 1
  02de8	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN46@ReadWutFil:

; 886  : 		  while (ent[i] == '-') 

  02deb	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02dee	0f b6 4c 05 ac	 movzx	 ecx, BYTE PTR _ent$[ebp+eax]
  02df3	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  02df6	75 0b		 jne	 SHORT $LN47@ReadWutFil

; 887  : 			  i--;        

  02df8	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02dfb	83 e8 01	 sub	 eax, 1
  02dfe	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  02e01	eb e8		 jmp	 SHORT $LN46@ReadWutFil
$LN47@ReadWutFil:

; 888  : 		  ent[i+1] = '\0';        

  02e03	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02e06	c6 44 05 ad 00	 mov	 BYTE PTR _ent$[ebp+eax+1], 0

; 889  : 
; 890  : 
; 891  : 		  // search through all the vehicle list
; 892  : 		  for (i = 0; i < NUM_ENTITY_SUB_TYPE_WAYPOINTS; i++)

  02e0b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  02e12	eb 09		 jmp	 SHORT $LN50@ReadWutFil
$LN48@ReadWutFil:
  02e14	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02e17	83 c0 01	 add	 eax, 1
  02e1a	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN50@ReadWutFil:
  02e1d	83 7d f8 25	 cmp	 DWORD PTR _i$[ebp], 37	; 00000025H
  02e21	0f 8d 68 03 00
	00		 jge	 $LN49@ReadWutFil

; 893  : 		  {        	
; 894  : 				// if entity found, but not Landed, that is taken care of in the new code
; 895  : 				if (strcmp(waypoint_database[i].full_name, ent) == 0 && !strcmp(ent,"Landed"))

  02e27	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  02e2a	50		 push	 eax
  02e2b	6b 4d f8 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02e2f	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[ecx]
  02e35	52		 push	 edx
  02e36	e8 00 00 00 00	 call	 _strcmp
  02e3b	83 c4 08	 add	 esp, 8
  02e3e	85 c0		 test	 eax, eax
  02e40	0f 85 44 03 00
	00		 jne	 $LN272@ReadWutFil
  02e46	68 00 00 00 00	 push	 OFFSET ??_C@_06PPFLONGD@Landed@
  02e4b	8d 45 ac	 lea	 eax, DWORD PTR _ent$[ebp]
  02e4e	50		 push	 eax
  02e4f	e8 00 00 00 00	 call	 _strcmp
  02e54	83 c4 08	 add	 esp, 8
  02e57	85 c0		 test	 eax, eax
  02e59	0f 85 2b 03 00
	00		 jne	 $LN272@ReadWutFil

; 896  : 				{
; 897  : 					 float v1=0, v2=0;

  02e5f	0f 57 c0	 xorps	 xmm0, xmm0
  02e62	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _v1$4[ebp], xmm0
  02e6a	0f 57 c0	 xorps	 xmm0, xmm0
  02e6d	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _v2$3[ebp], xmm0

; 898  : 					 unsigned j;
; 899  : 					 char *q = buf1+83;

  02e75	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02e78	83 c0 53	 add	 eax, 83			; 00000053H
  02e7b	89 85 40 ff ff
	ff		 mov	 DWORD PTR _q$1[ebp], eax

; 900  : 
; 901  : 					 for (j = 0; j < strlen(q); j++)

  02e81	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$2[ebp], 0
  02e8b	eb 0f		 jmp	 SHORT $LN53@ReadWutFil
$LN51@ReadWutFil:
  02e8d	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _j$2[ebp]
  02e93	83 c0 01	 add	 eax, 1
  02e96	89 85 44 ff ff
	ff		 mov	 DWORD PTR _j$2[ebp], eax
$LN53@ReadWutFil:
  02e9c	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _q$1[ebp]
  02ea2	50		 push	 eax
  02ea3	e8 00 00 00 00	 call	 _strlen
  02ea8	83 c4 04	 add	 esp, 4
  02eab	39 85 44 ff ff
	ff		 cmp	 DWORD PTR _j$2[ebp], eax
  02eb1	73 25		 jae	 SHORT $LN52@ReadWutFil

; 902  : 						 if (q[j] == ',') q[j] = '.';

  02eb3	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _q$1[ebp]
  02eb9	03 85 44 ff ff
	ff		 add	 eax, DWORD PTR _j$2[ebp]
  02ebf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  02ec2	83 f9 2c	 cmp	 ecx, 44			; 0000002cH
  02ec5	75 0f		 jne	 SHORT $LN256@ReadWutFil
  02ec7	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _q$1[ebp]
  02ecd	03 85 44 ff ff
	ff		 add	 eax, DWORD PTR _j$2[ebp]
  02ed3	c6 00 2e	 mov	 BYTE PTR [eax], 46	; 0000002eH
$LN256@ReadWutFil:

; 903  : 					 // get the values at the end of the string                
; 904  : 					 // replace , with .
; 905  : 					 sscanf(q,"%f %f",&v1, &v2);       	    

  02ed6	eb b5		 jmp	 SHORT $LN51@ReadWutFil
$LN52@ReadWutFil:
  02ed8	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _v2$3[ebp]
  02ede	50		 push	 eax
  02edf	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _v1$4[ebp]
  02ee5	51		 push	 ecx
  02ee6	68 00 00 00 00	 push	 OFFSET ??_C@_05KCDNKPCA@?$CFf?5?$CFf@
  02eeb	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _q$1[ebp]
  02ef1	52		 push	 edx
  02ef2	e8 00 00 00 00	 call	 _sscanf
  02ef7	83 c4 10	 add	 esp, 16			; 00000010H

; 906  : 
; 907  : 					 if (strstr(buf1,"Fixed Wing Minimum Previous Waypoint Distance {m}" )) {waypoint_database[i].fw_minimum_previous_waypoint_distance = v2; }    

  02efa	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GPHPAIAG@Fixed?5Wing?5Minimum?5Previous?5Way@
  02eff	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02f02	50		 push	 eax
  02f03	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02f08	83 c4 08	 add	 esp, 8
  02f0b	85 c0		 test	 eax, eax
  02f0d	74 14		 je	 SHORT $LN257@ReadWutFil
  02f0f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f13	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  02f1b	f3 0f 11 80 14
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+20], xmm0
$LN257@ReadWutFil:

; 908  : 					 if (strstr(buf1,"Fixed Wing Action Radius {m}"                      )) {waypoint_database[i].fw_action_radius                      = v2; }    

  02f23	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LAOHHFHJ@Fixed?5Wing?5Action?5Radius?5?$HLm?$HN@
  02f28	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02f2b	50		 push	 eax
  02f2c	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02f31	83 c4 08	 add	 esp, 8
  02f34	85 c0		 test	 eax, eax
  02f36	74 14		 je	 SHORT $LN258@ReadWutFil
  02f38	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f3c	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  02f44	f3 0f 11 80 18
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+24], xmm0
$LN258@ReadWutFil:

; 909  : 					 if (strstr(buf1,"Fixed Wing Reached Radius {m}"                     )) {waypoint_database[i].fw_reached_radius                     = v2; }    

  02f4c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DJAHAIOM@Fixed?5Wing?5Reached?5Radius?5?$HLm?$HN@
  02f51	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02f54	50		 push	 eax
  02f55	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02f5a	83 c4 08	 add	 esp, 8
  02f5d	85 c0		 test	 eax, eax
  02f5f	74 14		 je	 SHORT $LN259@ReadWutFil
  02f61	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f65	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  02f6d	f3 0f 11 80 1c
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+28], xmm0
$LN259@ReadWutFil:

; 910  : 					 if (strstr(buf1,"Fixed Wing Velocity {m}"                           )) {waypoint_database[i].fw_velocity                           = v2; }    

  02f75	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JNGOJDJM@Fixed?5Wing?5Velocity?5?$HLm?$HN@
  02f7a	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02f7d	50		 push	 eax
  02f7e	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02f83	83 c4 08	 add	 esp, 8
  02f86	85 c0		 test	 eax, eax
  02f88	74 14		 je	 SHORT $LN260@ReadWutFil
  02f8a	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f8e	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  02f96	f3 0f 11 80 20
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+32], xmm0
$LN260@ReadWutFil:

; 911  : 					 if (strstr(buf1,"Helicopter Minimum Previous Waypoint Distance {m}" )) {waypoint_database[i].hc_minimum_previous_waypoint_distance = v2; }

  02f9e	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@CIJGJBJI@Helicopter?5Minimum?5Previous?5Way@
  02fa3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02fa6	50		 push	 eax
  02fa7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02fac	83 c4 08	 add	 esp, 8
  02faf	85 c0		 test	 eax, eax
  02fb1	74 14		 je	 SHORT $LN261@ReadWutFil
  02fb3	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02fb7	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  02fbf	f3 0f 11 80 28
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+40], xmm0
$LN261@ReadWutFil:

; 912  : 					 if (strstr(buf1,"Helicopter Action Radius {m}"                      )) {waypoint_database[i].hc_action_radius                      = v2; }

  02fc7	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HFPCPFGA@Helicopter?5Action?5Radius?5?$HLm?$HN@
  02fcc	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02fcf	50		 push	 eax
  02fd0	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02fd5	83 c4 08	 add	 esp, 8
  02fd8	85 c0		 test	 eax, eax
  02fda	74 14		 je	 SHORT $LN262@ReadWutFil
  02fdc	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02fe0	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  02fe8	f3 0f 11 80 2c
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+44], xmm0
$LN262@ReadWutFil:

; 913  : 					 if (strstr(buf1,"Helicopter Reached Radius {m}"                     )) {waypoint_database[i].hc_reached_radius                     = v2; }

  02ff0	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@FNKJLFKM@Helicopter?5Reached?5Radius?5?$HLm?$HN@
  02ff5	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  02ff8	50		 push	 eax
  02ff9	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  02ffe	83 c4 08	 add	 esp, 8
  03001	85 c0		 test	 eax, eax
  03003	74 14		 je	 SHORT $LN263@ReadWutFil
  03005	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03009	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  03011	f3 0f 11 80 30
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+48], xmm0
$LN263@ReadWutFil:

; 914  : 					 if (strstr(buf1,"Helicopter Velocity {m}"                           )) {waypoint_database[i].hc_velocity                           = v2; }

  03019	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EGIMJFHM@Helicopter?5Velocity?5?$HLm?$HN@
  0301e	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  03021	50		 push	 eax
  03022	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  03027	83 c4 08	 add	 esp, 8
  0302a	85 c0		 test	 eax, eax
  0302c	74 14		 je	 SHORT $LN264@ReadWutFil
  0302e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03032	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  0303a	f3 0f 11 80 34
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+52], xmm0
$LN264@ReadWutFil:

; 915  : 					 if (strstr(buf1,"Ground Minimum Previous Waypoint Distance {m}"     )) {waypoint_database[i].rv_minimum_previous_waypoint_distance = v2; }

  03042	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@HDMFPFGG@Ground?5Minimum?5Previous?5Waypoin@
  03047	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0304a	50		 push	 eax
  0304b	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  03050	83 c4 08	 add	 esp, 8
  03053	85 c0		 test	 eax, eax
  03055	74 14		 je	 SHORT $LN265@ReadWutFil
  03057	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0305b	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  03063	f3 0f 11 80 3c
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+60], xmm0
$LN265@ReadWutFil:

; 916  : 					 if (strstr(buf1,"Ground Action Radius {m}"                          )) {waypoint_database[i].rv_action_radius                      = v2; }

  0306b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DJBAMEB@Ground?5Action?5Radius?5?$HLm?$HN@
  03070	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  03073	50		 push	 eax
  03074	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  03079	83 c4 08	 add	 esp, 8
  0307c	85 c0		 test	 eax, eax
  0307e	74 14		 je	 SHORT $LN266@ReadWutFil
  03080	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03084	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  0308c	f3 0f 11 80 40
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+64], xmm0
$LN266@ReadWutFil:

; 917  : 					 if (strstr(buf1,"Ground Reached Radius {m}"                         )) {waypoint_database[i].rv_reached_radius                     = v2; }

  03094	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BBLGMGAL@Ground?5Reached?5Radius?5?$HLm?$HN@
  03099	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  0309c	50		 push	 eax
  0309d	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  030a2	83 c4 08	 add	 esp, 8
  030a5	85 c0		 test	 eax, eax
  030a7	74 14		 je	 SHORT $LN267@ReadWutFil
  030a9	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  030ad	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  030b5	f3 0f 11 80 44
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+68], xmm0
$LN267@ReadWutFil:

; 918  : 					 if (strstr(buf1,"Ground Velocity {m}"                               )) {waypoint_database[i].rv_velocity                           = v2; }

  030bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OPDKPJKE@Ground?5Velocity?5?$HLm?$HN@
  030c2	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  030c5	50		 push	 eax
  030c6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  030cb	83 c4 08	 add	 esp, 8
  030ce	85 c0		 test	 eax, eax
  030d0	74 14		 je	 SHORT $LN268@ReadWutFil
  030d2	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  030d6	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  030de	f3 0f 11 80 48
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+72], xmm0
$LN268@ReadWutFil:

; 919  : 					 if (strstr(buf1,"Sea Minimum Previous Waypoint Distance {m}"        )) {waypoint_database[i].sh_minimum_previous_waypoint_distance = v2; }   

  030e6	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KPKIMJMH@Sea?5Minimum?5Previous?5Waypoint?5D@
  030eb	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  030ee	50		 push	 eax
  030ef	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  030f4	83 c4 08	 add	 esp, 8
  030f7	85 c0		 test	 eax, eax
  030f9	74 14		 je	 SHORT $LN269@ReadWutFil
  030fb	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  030ff	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  03107	f3 0f 11 80 50
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+80], xmm0
$LN269@ReadWutFil:

; 920  : 					 if (strstr(buf1,"Sea Action Radius {m}"                             )) {waypoint_database[i].sh_action_radius                      = v2; }   

  0310f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LHHHDOGL@Sea?5Action?5Radius?5?$HLm?$HN@
  03114	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  03117	50		 push	 eax
  03118	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0311d	83 c4 08	 add	 esp, 8
  03120	85 c0		 test	 eax, eax
  03122	74 14		 je	 SHORT $LN270@ReadWutFil
  03124	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03128	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  03130	f3 0f 11 80 54
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+84], xmm0
$LN270@ReadWutFil:

; 921  : 					 if (strstr(buf1,"Sea Reached Radius {m}"                            )) {waypoint_database[i].sh_reached_radius                     = v2; }   

  03138	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@MKLJOJOP@Sea?5Reached?5Radius?5?$HLm?$HN@
  0313d	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  03140	50		 push	 eax
  03141	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  03146	83 c4 08	 add	 esp, 8
  03149	85 c0		 test	 eax, eax
  0314b	74 14		 je	 SHORT $LN271@ReadWutFil
  0314d	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03151	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  03159	f3 0f 11 80 58
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+88], xmm0
$LN271@ReadWutFil:

; 922  : 					 if (strstr(buf1,"Sea Velocity {m}"                                  )) {waypoint_database[i].sh_velocity                           = v2; }   

  03161	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LJEOCK@Sea?5Velocity?5?$HLm?$HN@
  03166	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  03169	50		 push	 eax
  0316a	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  0316f	83 c4 08	 add	 esp, 8
  03172	85 c0		 test	 eax, eax
  03174	74 14		 je	 SHORT $LN272@ReadWutFil
  03176	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0317a	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _v2$3[ebp]
  03182	f3 0f 11 80 5c
	00 00 00	 movss	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+92], xmm0
$LN272@ReadWutFil:

; 923  : 
; 924  : 				#if WUT_DEBUG
; 925  : 					 
; 926  : 					 q = buf1+41;
; 927  : 					 vname = strtok(q,"-");
; 928  : 					 debug_log("WUT: WAYPOINT: Entity - %s [%s]; VAR [%s] - %f [%f]\n", waypoint_database[i].full_name, ent, vname,v2,v1);
; 929  : 				
; 930  : 				#endif
; 931  : 					
; 932  : 				}//variable names
; 933  : 		}//for WAYPOINT entities

  0318a	e9 85 fc ff ff	 jmp	 $LN48@ReadWutFil
$LN49@ReadWutFil:

; 934  : 	 }//while WAYPOINT

  0318f	e9 b8 fb ff ff	 jmp	 $LN44@ReadWutFil
$LN45@ReadWutFil:

; 935  : 
; 936  : 
; 937  : 	 //######################################################################
; 938  : 	 //#### WEAPON CONFIG TYPES #############################################
; 939  : 	 //######################################################################
; 940  : 	 // struct WEAPON_PACKAGE in weapon.h line 1418                 
; 941  : 	 // enum WEAPON_CONFIG_TYPES in weapon.h line 291               
; 942  : 	 //weapon_package weapon_config_database in wp_dbase.c line 5010
; 943  : 
; 944  : 	 fscanf(f,"%[^\n]\n",buf);

  03194	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  03197	50		 push	 eax
  03198	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0319d	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  031a0	51		 push	 ecx
  031a1	e8 00 00 00 00	 call	 _fscanf
  031a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 945  : 	 strcpy(buf1, buf);

  031a9	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  031ac	50		 push	 eax
  031ad	8b 4d f0	 mov	 ecx, DWORD PTR _buf1$[ebp]
  031b0	51		 push	 ecx
  031b1	e8 00 00 00 00	 call	 _strcpy
  031b6	83 c4 08	 add	 esp, 8

; 946  : /*
; 947  : 	 while (buf1[0] != '\0' && buf1[0] != '\n' &&!(strcmp(buf1,"End - List Of Changes")==0))
; 948  : 	 {
; 949  : 		//
; 950  : 		int entnr = 0;
; 951  : 		  float v1=0, v2=0;
; 952  : 		  int d1 = 0, d2 = 0;
; 953  : 		  int j;
; 954  : 		  char *q = buf1+83;
; 955  : 
; 956  : 		  fscanf(f,"%[^\n]\n",buf);
; 957  : 		  // read a line
; 958  : 
; 959  : 		  
; 960  : 		  if (buf1[0] == '\0' || buf1[0] == '\n')
; 961  : 			  break;       
; 962  : 		  
; 963  : 		  strcpy(buf1, buf);
; 964  : 		  
; 965  : 		  p = strtok(buf,"-");
; 966  : 		  entnr = atoi(p);
; 967  : 		  // entities are numbers 495-553 see below
; 968  : 		  
; 969  : 		  if (entnr == 0)
; 970  : 			 break;
; 971  : 		  
; 972  : 		  if (entnr != oldentnr)
; 973  : 			  wcp = 0;        
; 974  : 
; 975  : 
; 976  : 		  get_values(q, &v2, &d2);
; 977  : 		  debug_log("try wut %f %d\n",v2, d2);
; 978  : 			  
; 979  : 			if (strchr(q,',')|| strchr(q,'.'))
; 980  : 			{
; 981  : 				 for (j = 0; j < strlen(q); j++)
; 982  : 					 if (q[j] == ',') q[j] = '.';
; 983  : 				 // get the values at the end of the string
; 984  : 				 // replace , with .
; 985  : 			
; 986  : 				 sscanf(q,"%f %f",&v1, &v2);
; 987  : 			}
; 988  : 			else
; 989  : 			{
; 990  : 				 sscanf(q,"%d %d",&d1, &d2);
; 991  : 			}              
; 992  : 		  
; 993  : 		  
; 994  : 		  
; 995  : 		  if (strstr(buf1, "Weapon Type"                        )) {weapon_config_database[entnr][wcp].sub_type = (int)d2;}
; 996  : 		  if (strstr(buf1, "Number Of Weapons"                  )) {weapon_config_database[entnr][wcp].number = (int)d2;}
; 997  : 		  if (strstr(buf1, "Hard Point"                         )) {weapon_config_database[entnr][wcp].heading_depth = (int)d2;}
; 998  : 		  if (strstr(buf1, "Salvo"                              )) {weapon_config_database[entnr][wcp].salvo_size = (int)d2;}
; 999  : 
; 1000 : 		  if (strstr(buf1, "Horizontal Turn Speed {rad/s}"      )) {weapon_config_database[entnr][wcp].heading_rate = v2;}
; 1001 : 		  if (strstr(buf1, "Min Horizontal Tracking Angle {rad}")) {weapon_config_database[entnr][wcp].min_heading_limit = v2;}
; 1002 : 		  if (strstr(buf1, "Max Horizontal Tracking Angle {rad}")) {weapon_config_database[entnr][wcp].max_heading_limit = v2;}
; 1003 : 		  if (strstr(buf1, "Vertical Turn Speed {rad/s}"        )) {weapon_config_database[entnr][wcp].pitch_rate = v2;}
; 1004 : 		  if (strstr(buf1, "Min Vertical Tracking Angle {rad}"  )) {weapon_config_database[entnr][wcp].min_pitch_limit = v2;}
; 1005 : 		  if (strstr(buf1, "Max Vertical Tracking Angle {rad}"  )) {weapon_config_database[entnr][wcp].max_pitch_limit = v2;}
; 1006 : 		  if (strstr(buf1, "15 {rad}"                           )) {weapon_config_database[entnr][wcp].muzzle_rotate_rate = v2;}
; 1007 : 		 // if (strstr(buf1, "16"                                 )) {weapon_config_database[entnr][wcp].rotate_inhibit_velocity = v2;}
; 1008 : 				  
; 1009 : 		  #if WUT_DEBUG
; 1010 : 				  
; 1011 : 				if(entnr == 495) strcpy(vname,"UH60_BLACK_HAWK          ");                
; 1012 : 				if(entnr == 496) strcpy(vname,"MI24D_HIND               ");                
; 1013 : 				if(entnr == 497) strcpy(vname,"CH46E_SEA_KNIGHT         ");                
; 1014 : 				if(entnr == 498) strcpy(vname,"KA29_HELIX_B             ");                
; 1015 : 				if(entnr == 499) strcpy(vname,"CH3_JOLLY_GREEN_GIANT    ");                
; 1016 : 				if(entnr == 500) strcpy(vname,"MI17_HIP                 ");                
; 1017 : 				if(entnr == 501) strcpy(vname,"CH47D_CHINOOK            ");                
; 1018 : 				if(entnr == 502) strcpy(vname,"MI6_HOOK                 ");
; 1019 : 				if(entnr == 503) strcpy(vname,"A10A_THUNDERBOLT         ");
; 1020 : 				if(entnr == 504) strcpy(vname,"SU25_FROGFOOT            ");
; 1021 : 				if(entnr == 505) strcpy(vname,"F16_FIGHTING_FALCON      ");
; 1022 : 				if(entnr == 506) strcpy(vname,"F16_FIGHTING_FALCON      ");
; 1023 : 				if(entnr == 507) strcpy(vname,"MIG29_FULCRUM            ");
; 1024 : 				if(entnr == 508) strcpy(vname,"MIG29_FULCRUM            ");
; 1025 : 				if(entnr == 509) strcpy(vname,"AV8B_HARRIER             ");
; 1026 : 				if(entnr == 510) strcpy(vname,"YAK141_FREESTYLE         ");
; 1027 : 				if(entnr == 511) strcpy(vname,"FA18_HORNET              ");
; 1028 : 				if(entnr == 512) strcpy(vname,"FA18_HORNET              ");
; 1029 : 				if(entnr == 513) strcpy(vname,"SU33_FLANKER             ");
; 1030 : 				if(entnr == 514) strcpy(vname,"SU33_FLANKER             ");
; 1031 : 				if(entnr == 515) strcpy(vname,"AH64A_APACHE             ");
; 1032 : 				if(entnr == 516) strcpy(vname,"AH64A_APACHE             ");
; 1033 : 				if(entnr == 517) strcpy(vname,"KA50_HOKUM               ");
; 1034 : 				if(entnr == 518) strcpy(vname,"KA50_HOKUM               ");
; 1035 : 				if(entnr == 519) strcpy(vname,"OH58D_KIOWA_WARRIOR      ");
; 1036 : 				if(entnr == 520) strcpy(vname,"MV22_OSPREY              ");
; 1037 : 				if(entnr == 521) strcpy(vname,"AH1T_SEACOBRA            ");
; 1038 : 				if(entnr == 522) strcpy(vname,"AH1W_SUPERCOBRA          ");
; 1039 : 				if(entnr == 523) strcpy(vname,"CH53E_SUPER_STALLION     ");
; 1040 : 				if(entnr == 524) strcpy(vname,"C17_GLOBEMASTER_III      ");
; 1041 : 				if(entnr == 525) strcpy(vname,"IL76MD_CANDID_B          ");
; 1042 : 				if(entnr == 526) strcpy(vname,"C130J_HERCULES_II        ");
; 1043 : 				if(entnr == 527) strcpy(vname,"AN12B_CUB                ");
; 1044 : 				if(entnr == 528) strcpy(vname,"M1A2_ABRAMS              ");
; 1045 : 				if(entnr == 529) strcpy(vname,"T80U                     ");
; 1046 : 				if(entnr == 530) strcpy(vname,"M2A2_BRADLEY             ");
; 1047 : 				if(entnr == 531) strcpy(vname,"BMP2                     ");
; 1048 : 				if(entnr == 532) strcpy(vname,"BMP3                     ");
; 1049 : 				if(entnr == 533) strcpy(vname,"M113A2                   ");
; 1050 : 				if(entnr == 534) strcpy(vname,"BTR80                    ");
; 1051 : 				if(entnr == 535) strcpy(vname,"BRDM2                    ");
; 1052 : 				if(entnr == 536) strcpy(vname,"M109A2                   ");
; 1053 : 				if(entnr == 537) strcpy(vname,"2S19                     ");
; 1054 : 				if(entnr == 538) strcpy(vname,"M270_MLRS                ");
; 1055 : 				if(entnr == 539) strcpy(vname,"BM21_GRAD                ");
; 1056 : 				if(entnr == 540) strcpy(vname,"M163_VULCAN              ");
; 1057 : 				if(entnr == 541) strcpy(vname,"SA19_GRISON              ");
; 1058 : 				if(entnr == 542) strcpy(vname,"M1037_AVENGER            ");
; 1059 : 				if(entnr == 543) strcpy(vname,"M48A1_CHAPARRAL          ");
; 1060 : 				if(entnr == 544) strcpy(vname,"SA13_GOPHER              ");
; 1061 : 				if(entnr == 545) strcpy(vname,"TARAWA_CLASS             ");
; 1062 : 				if(entnr == 546) strcpy(vname,"KIEV_CLASS               ");
; 1063 : 				if(entnr == 547) strcpy(vname,"OLIVER_HAZARD_PERRY_CLASS");
; 1064 : 				if(entnr == 548) strcpy(vname,"KRIVAK_II_CLASS          ");
; 1065 : 				if(entnr == 549) strcpy(vname,"AIST_CLASS               ");
; 1066 : 				if(entnr == 550) strcpy(vname,"US_INFANTRY_SAM_STANDING ");
; 1067 : 				if(entnr == 551) strcpy(vname,"US_INFANTRY_SAM_KNEELING ");
; 1068 : 				if(entnr == 552) strcpy(vname,"CIS_INFANTRY_SAM_STANDING");
; 1069 : 				if(entnr == 553) strcpy(vname,"CIS_INFANTRY_SAM_KNEELING");
; 1070 : 				q = buf1+41;
; 1071 : 				vname = strtok(q,"-");
; 1072 : 				debug_log("WUT: WEAPON CONFIG: Entity - %d %s VAR [%d] - %f [%f] %d [%d]\n", entnr, vname, wcp,v2,v1,d2,d1);
; 1073 : 		
; 1074 : 		#endif
; 1075 : 
; 1076 : 		  wcp++;           
; 1077 : 		  oldentnr = entnr;		
; 1078 : 
; 1079 : 		  
; 1080 : 	 }//while WEAPON CONFIG  
; 1081 : */
; 1082 : 
; 1083 : 		#if WUT_DEBUG
; 1084 : 			debug_log("WUT: DONE!!!\n");
; 1085 : 			fclose(fout);		
; 1086 : 		#endif
; 1087 : 	 
; 1088 : 	 
; 1089 : 	 // close wut cfg file            
; 1090 : 	 fclose(f);  

  031b9	8b 45 fc	 mov	 eax, DWORD PTR _f$[ebp]
  031bc	50		 push	 eax
  031bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  031c3	83 c4 04	 add	 esp, 4

; 1091 : 	 
; 1092 : 	 // free text buffers
; 1093 : 	 free(buf);  

  031c6	8b 45 f4	 mov	 eax, DWORD PTR _buf$[ebp]
  031c9	50		 push	 eax
  031ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  031d0	83 c4 04	 add	 esp, 4

; 1094 : 	 free(buf1); 

  031d3	8b 45 f0	 mov	 eax, DWORD PTR _buf1$[ebp]
  031d6	50		 push	 eax
  031d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  031dd	83 c4 04	 add	 esp, 4
$LN1@ReadWutFil:

; 1095 : }               

  031e0	5f		 pop	 edi
  031e1	5e		 pop	 esi
  031e2	5b		 pop	 ebx
  031e3	8b e5		 mov	 esp, ebp
  031e5	5d		 pop	 ebp
  031e6	c2 04 00	 ret	 4
?ReadWutFile@@YGXPBD@Z ENDP				; ReadWutFile
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\wutcfg.c
;	COMDAT ?parse_WUT_file@@YGXPBD@Z
_TEXT	SEGMENT
_buf$ = -260						; size = 255
_f$ = -4						; size = 4
_fname$ = 8						; size = 4
?parse_WUT_file@@YGXPBD@Z PROC				; parse_WUT_file, COMDAT

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 115  : 	 FILE *f;
; 116  : 	 char buf[255];
; 117  : 	 
; 118  : 	 
; 119  : 	if (fname[0] == '\0')

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	8b 55 08	 mov	 edx, DWORD PTR _fname$[ebp]
  00017	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  0001b	85 c0		 test	 eax, eax
  0001d	75 05		 jne	 SHORT $LN2@parse_WUT_

; 120  : 	{
; 121  : 	  	return;  

  0001f	e9 b2 00 00 00	 jmp	 $LN1@parse_WUT_
$LN2@parse_WUT_:

; 122  : 	} 
; 123  : 	if (fname[0] != '\0' && !file_exist(fname))

  00024	b8 01 00 00 00	 mov	 eax, 1
  00029	6b c8 00	 imul	 ecx, eax, 0
  0002c	8b 55 08	 mov	 edx, DWORD PTR _fname$[ebp]
  0002f	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  00033	85 c0		 test	 eax, eax
  00035	74 20		 je	 SHORT $LN3@parse_WUT_
  00037	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  00040	85 c0		 test	 eax, eax
  00042	75 13		 jne	 SHORT $LN3@parse_WUT_

; 124  : 	{
; 125  : 		debug_fatal("WUT file cannot be found: [%s]",fname);

  00044	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IONJHCKF@WUT?5file?5cannot?5be?5found?3?5?$FL?$CFs?$FN@
  0004d	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00052	83 c4 08	 add	 esp, 8

; 126  : 		return;

  00055	eb 7f		 jmp	 SHORT $LN1@parse_WUT_
$LN3@parse_WUT_:

; 127  : 	}
; 128  : 
; 129  : 	f = fopen(fname, "r");

  00057	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  0005c	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  0005f	50		 push	 eax
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00066	83 c4 08	 add	 esp, 8
  00069	89 45 fc	 mov	 DWORD PTR _f$[ebp], eax

; 130  : 	if (!f)

  0006c	83 7d fc 00	 cmp	 DWORD PTR _f$[ebp], 0
  00070	75 13		 jne	 SHORT $LN4@parse_WUT_

; 131  : 	{
; 132  : 		debug_fatal("Error opening WUT file: [%s]",fname);   

  00072	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  00075	50		 push	 eax
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IELBJLGL@Error?5opening?5WUT?5file?3?5?$FL?$CFs?$FN@
  0007b	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00080	83 c4 08	 add	 esp, 8

; 133  : 		return;    

  00083	eb 51		 jmp	 SHORT $LN1@parse_WUT_
$LN4@parse_WUT_:

; 134  : 	}   
; 135  : 	fscanf(f,"%[^\n]\n",buf);

  00085	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0008b	50		 push	 eax
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 _fscanf
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 136  : 	fclose(f);

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _f$[ebp]
  000a0	50		 push	 eax
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  000a7	83 c4 04	 add	 esp, 4

; 137  : 	
; 138  : //VJ 040321 relaxed crterium for checking GWUT file
; 139  : 	if (strstr(buf,"GWUT"))

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_04DBHEMPKL@GWUT@
  000af	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  000bb	83 c4 08	 add	 esp, 8
  000be	85 c0		 test	 eax, eax
  000c0	74 0b		 je	 SHORT $LN5@parse_WUT_

; 140  : 	{
; 141  : 		ReadGWutInfo(fname);

  000c2	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?ReadGWutInfo@@YGXPBD@Z	; ReadGWutInfo

; 142  : 	}	
; 143  : 	else

  000cb	eb 09		 jmp	 SHORT $LN1@parse_WUT_
$LN5@parse_WUT_:

; 144  : 		ReadWutFile(fname);

  000cd	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?ReadWutFile@@YGXPBD@Z	; ReadWutFile
$LN1@parse_WUT_:

; 145  : }

  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
?parse_WUT_file@@YGXPBD@Z ENDP				; parse_WUT_file
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\string.h
;	COMDAT ?strstr@@YAPADQADQBD@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__SubString$ = 12					; size = 4
?strstr@@YAPADQADQBD@Z PROC				; strstr, COMDAT

; 523  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __SubString$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __String$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _strstr
  00016	83 c4 08	 add	 esp, 8

; 525  :     }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?strstr@@YAPADQADQBD@Z ENDP				; strstr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2270 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2271 :         int _Result;
; 2272 :         va_list _ArgList;
; 2273 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsscanf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 2275 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 2276 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 2277 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT

; 2175 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2176 :         return __stdio_common_vsscanf(

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  00020	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00023	51		 push	 ecx
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	52		 push	 edx
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsscanf
  0002d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2177 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 2178 :             _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2179 :     }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fscanf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fscanf	PROC						; COMDAT

; 1204 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1205 :         int _Result;
; 1206 :         va_list _ArgList;
; 1207 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1208 :         _Result = _vfscanf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfscanf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1209 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1210 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1211 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT

; 1062 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1063 :         return __stdio_common_vfscanf(

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfscanf
  0002b	83 c4 18	 add	 esp, 24			; 00000018H

; 1064 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 1065 :             _Stream, _Format, _Locale, _ArgList);
; 1066 :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END
