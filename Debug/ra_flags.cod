; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\radio\ra_flags.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_radio_ui_object_flag_functions@@YGXH@Z ; overload_radio_ui_object_flag_functions
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\radio\ra_flags.c
;	COMDAT ?set_radio_ui_object_state@@YGXPAUUI_OBJECT@@H@Z
_TEXT	SEGMENT
_parent$ = -12						; size = 4
_next$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_flag$ = 12						; size = 4
?set_radio_ui_object_state@@YGXPAUUI_OBJECT@@H@Z PROC	; set_radio_ui_object_state, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	
; 76   : 	area_ui_object
; 77   : 		*area;
; 78   : 
; 79   : 	ui_object
; 80   : 		*next,
; 81   : 		*parent;
; 82   : 
; 83   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 84   : 
; 85   : 	if (flag == UI_OBJECT_STATE_ON)

  00012	83 7d 0c 01	 cmp	 DWORD PTR _flag$[ebp], 1
  00016	0f 85 26 01 00
	00		 jne	 $LN6@set_radio_

; 86   : 	{
; 87   : 	
; 88   : 		parent = get_ui_object_parent (obj);

  0001c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0002c	ff d0		 call	 eax
  0002e	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 89   : 	
; 90   : 		if (parent)

  00031	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00035	74 17		 je	 SHORT $LN8@set_radio_

; 91   : 		{
; 92   : 	
; 93   : 			next = get_ui_object_child (parent);

  00037	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00047	ff d0		 call	 eax
  00049	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax

; 94   : 		}
; 95   : 		else

  0004c	eb 15		 jmp	 SHORT $LN2@set_radio_
$LN8@set_radio_:

; 96   : 		{
; 97   : 	
; 98   : 			next = get_ui_object_next (obj);

  0004e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0005e	ff d0		 call	 eax
  00060	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax
$LN2@set_radio_:

; 99   : 		}
; 100  : 	
; 101  : 		while (next)

  00063	83 7d f8 00	 cmp	 DWORD PTR _next$[ebp], 0
  00067	74 37		 je	 SHORT $LN3@set_radio_

; 102  : 		{
; 103  : 
; 104  : 			if (next->type == UI_TYPE_RADIO)

  00069	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  0006c	83 38 03	 cmp	 DWORD PTR [eax], 3
  0006f	75 18		 jne	 SHORT $LN10@set_radio_

; 105  : 			{
; 106  : 		
; 107  : 				area = (area_ui_object *) next->data;

  00071	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  00074	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00077	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 108  : 		
; 109  : 				area->state = UI_OBJECT_STATE_OFF;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0007d	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00080	83 e1 e7	 and	 ecx, -25		; ffffffe7H
  00083	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00086	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx
$LN10@set_radio_:

; 110  : 			}
; 111  : 		
; 112  : 			next = get_ui_object_next (next);

  00089	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  00090	8b 11		 mov	 edx, DWORD PTR [ecx]
  00092	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00099	ff d0		 call	 eax
  0009b	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax

; 113  : 		}

  0009e	eb c3		 jmp	 SHORT $LN2@set_radio_
$LN3@set_radio_:

; 114  : 
; 115  : 		area = (area_ui_object *) obj->data;

  000a0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a6	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 116  : 								
; 117  : 		area->state = flag;

  000a9	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  000ac	83 e0 03	 and	 eax, 3
  000af	c1 e0 03	 shl	 eax, 3
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  000b5	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  000b8	83 e2 e7	 and	 edx, -25		; ffffffe7H
  000bb	0b d0		 or	 edx, eax
  000bd	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000c0	89 50 4c	 mov	 DWORD PTR [eax+76], edx

; 118  : 	
; 119  : 		if (parent)

  000c3	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000c7	74 63		 je	 SHORT $LN11@set_radio_

; 120  : 		{
; 121  : 	
; 122  : 			set_ui_object_redraw (parent, TRUE);

  000c9	6a 01		 push	 1
  000cb	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000ce	50		 push	 eax
  000cf	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000db	ff d0		 call	 eax
$LN4@set_radio_:

; 123  : 
; 124  : 			while ((parent) && (get_ui_object_clear (parent)))

  000dd	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000e1	74 47		 je	 SHORT $LN5@set_radio_
  000e3	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000e6	50		 push	 eax
  000e7	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000ea	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ec	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000f3	ff d0		 call	 eax
  000f5	85 c0		 test	 eax, eax
  000f7	74 31		 je	 SHORT $LN5@set_radio_

; 125  : 			{
; 126  : 	
; 127  : 				parent = get_ui_object_parent (parent);

  000f9	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000fc	50		 push	 eax
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  00100	8b 11		 mov	 edx, DWORD PTR [ecx]
  00102	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00109	ff d0		 call	 eax
  0010b	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 128  : 	
; 129  : 				if (parent)

  0010e	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00112	74 14		 je	 SHORT $LN13@set_radio_

; 130  : 				{
; 131  : 	
; 132  : 					set_ui_object_redraw (parent, TRUE);

  00114	6a 01		 push	 1
  00116	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  00119	50		 push	 eax
  0011a	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  0011d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00126	ff d0		 call	 eax
$LN13@set_radio_:

; 133  : 				}
; 134  : 			}

  00128	eb b3		 jmp	 SHORT $LN4@set_radio_
$LN5@set_radio_:

; 135  : 		}
; 136  : 		else

  0012a	eb 14		 jmp	 SHORT $LN12@set_radio_
$LN11@set_radio_:

; 137  : 		{
; 138  : 	
; 139  : 			set_ui_object_redraw (obj, TRUE);

  0012c	6a 01		 push	 1
  0012e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00131	50		 push	 eax
  00132	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00135	8b 11		 mov	 edx, DWORD PTR [ecx]
  00137	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0013e	ff d0		 call	 eax
$LN12@set_radio_:

; 140  : 		}

  00140	eb 42		 jmp	 SHORT $LN1@set_radio_
$LN6@set_radio_:

; 141  : 	}
; 142  : 	else if (flag == UI_OBJECT_STATE_HIGHLIGHTED)

  00142	83 7d 0c 02	 cmp	 DWORD PTR _flag$[ebp], 2
  00146	75 1c		 jne	 SHORT $LN14@set_radio_

; 143  : 	{
; 144  : 
; 145  : 		area->state = flag;

  00148	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  0014b	83 e0 03	 and	 eax, 3
  0014e	c1 e0 03	 shl	 eax, 3
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  00154	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00157	83 e2 e7	 and	 edx, -25		; ffffffe7H
  0015a	0b d0		 or	 edx, eax
  0015c	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0015f	89 50 4c	 mov	 DWORD PTR [eax+76], edx
  00162	eb 20		 jmp	 SHORT $LN1@set_radio_
$LN14@set_radio_:

; 146  : 	}
; 147  : 	else if (flag == UI_OBJECT_STATE_OFF)

  00164	83 7d 0c 00	 cmp	 DWORD PTR _flag$[ebp], 0
  00168	75 1a		 jne	 SHORT $LN1@set_radio_

; 148  : 	{
; 149  : 
; 150  : //		if (area->state == UI_OBJECT_STATE_HIGHLIGHTED)			// Removed - DL
; 151  : 		{
; 152  : 
; 153  : 			area->state = flag;

  0016a	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  0016d	83 e0 03	 and	 eax, 3
  00170	c1 e0 03	 shl	 eax, 3
  00173	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  00176	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00179	83 e2 e7	 and	 edx, -25		; ffffffe7H
  0017c	0b d0		 or	 edx, eax
  0017e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00181	89 50 4c	 mov	 DWORD PTR [eax+76], edx
$LN1@set_radio_:

; 154  : 		}
; 155  : 	}
; 156  : }

  00184	5f		 pop	 edi
  00185	5e		 pop	 esi
  00186	5b		 pop	 ebx
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c2 08 00	 ret	 8
?set_radio_ui_object_state@@YGXPAUUI_OBJECT@@H@Z ENDP	; set_radio_ui_object_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\radio\ra_flags.c
;	COMDAT ?overload_radio_ui_object_flag_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_radio_ui_object_flag_functions@@YGXH@Z PROC	; overload_radio_ui_object_flag_functions, COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 164  : 
; 165  : 	fn_set_ui_object_state [type] = set_radio_ui_object_state;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4], OFFSET ?set_radio_ui_object_state@@YGXPAUUI_OBJECT@@H@Z ; set_radio_ui_object_state

; 166  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_radio_ui_object_flag_functions@@YGXH@Z ENDP	; overload_radio_ui_object_flag_functions
_TEXT	ENDS
END
