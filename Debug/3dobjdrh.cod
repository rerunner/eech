; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dobjdrh.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?current_object_3d_surface_info@@3PAUOBJECT_3D_SURFACE_INFO@@A ; current_object_3d_surface_info
_BSS	SEGMENT
?current_object_3d_surface_info@@3PAUOBJECT_3D_SURFACE_INFO@@A DD 01H DUP (?) ; current_object_3d_surface_info
_BSS	ENDS
PUBLIC	_fabsf
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?draw_hardware_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@H@Z ; draw_hardware_3d_object
PUBLIC	?draw_hardware_zbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z ; draw_hardware_zbuffered_3d_object
PUBLIC	?draw_3d_hardware_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_hardware_translucent_object
PUBLIC	?draw_3d_hardware_zbuffered_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_hardware_zbuffered_translucent_object
PUBLIC	?draw_3d_object_hardware_translucent_faces@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_object_hardware_translucent_faces
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA ; `draw_3d_object_hardware_faces'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@	; `string'
PUBLIC	?__LINE__Var@?0??draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA ; `draw_3d_object_untextured_hardware_faces'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_transparent_surface@@YGXXZ@4JA ; `add_transparent_surface'::`1'::__LINE__Var
PUBLIC	??_C@_0EC@DPGMODHF@object_3d_transparent_surface_i@ ; `string'
PUBLIC	??_C@_0BE@OFLINIBN@Transparent?5matrix?3@	; `string'
PUBLIC	??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@	; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fbc28f5c28f5c29
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe2e147ae147ae1
PUBLIC	__real@406fe00000000000
PUBLIC	__real@40800000
PUBLIC	__real@40dfffc000000000
PUBLIC	__real@437f0000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fabs:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_any_3d_vector
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?get_fog_distance_value@@YGMM@Z:PROC		; get_fog_distance_value
EXTRN	?set_d3d_fog_face_intensity@@YGXH@Z:PROC	; set_d3d_fog_face_intensity
EXTRN	?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z:PROC	; set_d3d_alpha_fog_zbuffer
EXTRN	?set_d3d_material_colour@@YGXHHHHH@Z:PROC	; set_d3d_material_colour
EXTRN	?set_d3d_material_emissive_colour@@YGXHHHH@Z:PROC ; set_d3d_material_emissive_colour
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?reset_temporary_buffered_translucent_polygons@@YGXXZ:PROC ; reset_temporary_buffered_translucent_polygons
EXTRN	?get_number_of_temporary_translucent_polygons@@YGHXZ:PROC ; get_number_of_temporary_translucent_polygons
EXTRN	?draw_temporary_translucent_polygons@@YGXXZ:PROC ; draw_temporary_translucent_polygons
EXTRN	?initialise_object_texture_animations@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; initialise_object_texture_animations
EXTRN	?get_object_approximation_number@@YGHHMPAH@Z:PROC ; get_object_approximation_number
EXTRN	?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z:PROC	; f3d_set_transform
EXTRN	?f3d_vertex_lock@@YGHPAUIDirect3DVertexBuffer7@@IPAPAX@Z:PROC ; f3d_vertex_lock
EXTRN	?f3d_vertex_unlock@@YGXPAUIDirect3DVertexBuffer7@@@Z:PROC ; f3d_vertex_unlock
EXTRN	?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z:PROC ; f3d_draw_vb
EXTRN	?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ:PROC ; get_3d_scene_slot
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?insert_transparent_buffer_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z:PROC ; insert_transparent_buffer_into_3d_scene
EXTRN	?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z:PROC ; object_3d_render_hardware_surface
EXTRN	?calculate_line_normal@@YGXPAUOBJECT_3D_INFO@@PAUVEC3D@@@Z:PROC ; calculate_line_normal
EXTRN	?generate_relative_lights@@YGPAULIGHT_3D_SOURCE@@PAUVIEWPOINT@@PAUVEC3D@@PAU1@@Z:PROC ; generate_relative_lights
EXTRN	?draw_3d_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z:PROC ; draw_3d_translucent_object
EXTRN	?get_object_3d_outcode@@YGHHPAUVEC3D@@PAH@Z:PROC ; get_object_3d_outcode
EXTRN	?d3d@@3UDIRECT_3D_VECTORS@@A:BYTE		; d3d
EXTRN	?d3d_transparency_enabled@@3HA:DWORD		; d3d_transparency_enabled
EXTRN	?system_textures@@3PAPAUSCREEN@@A:BYTE		; system_textures
EXTRN	?zbuffer_constant@@3NA:QWORD			; zbuffer_constant
EXTRN	?zbuffer_constant_elevated_bias@@3NA:QWORD	; zbuffer_constant_elevated_bias
EXTRN	?zbuffer_constant_normal_bias@@3NA:QWORD	; zbuffer_constant_normal_bias
EXTRN	?visual_3d_vp@@3PAUVIEWPOINT@@A:DWORD		; visual_3d_vp
EXTRN	?objects_3d_scene_database@@3PAUOBJECT_3D_SCENE_DATABASE_ENTRY@@A:DWORD ; objects_3d_scene_database
EXTRN	?objects_3d_data@@3PAUOBJECT_3D@@A:DWORD	; objects_3d_data
EXTRN	?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A:DWORD ; texture_animations
EXTRN	?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A:BYTE	; ambient_3d_light
EXTRN	?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A:DWORD ; current_3d_lights
EXTRN	?d3d_hardware_vertex_indices@@3PAGA:BYTE	; d3d_hardware_vertex_indices
EXTRN	?current_object_3d_luminosity_texture@@3PAUSCREEN@@A:DWORD ; current_object_3d_luminosity_texture
EXTRN	?current_object_3d_luminosity_texture_u_address@@3HA:DWORD ; current_object_3d_luminosity_texture_u_address
EXTRN	?current_object_3d_luminosity_texture_v_address@@3HA:DWORD ; current_object_3d_luminosity_texture_v_address
EXTRN	?current_object_3d_luminosity_texture_filter@@3HA:DWORD ; current_object_3d_luminosity_texture_filter
EXTRN	?current_object_3d_luminosity_texture_mipmap@@3HA:DWORD ; current_object_3d_luminosity_texture_mipmap
EXTRN	?current_object_3d_light_maps_enabled@@3HA:DWORD ; current_object_3d_light_maps_enabled
EXTRN	?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A:DWORD ; current_object_3d_surface
EXTRN	?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A:DWORD ; current_object_3d_point_list
EXTRN	?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_face_normal_list
EXTRN	?current_object_3d_texture@@3PAUSCREEN@@A:DWORD	; current_object_3d_texture
EXTRN	?current_object_3d_reflection_texture_map@@3PAUSCREEN@@A:DWORD ; current_object_3d_reflection_texture_map
EXTRN	?current_object_3d_texture_u_address@@3HA:DWORD	; current_object_3d_texture_u_address
EXTRN	?current_object_3d_texture_v_address@@3HA:DWORD	; current_object_3d_texture_v_address
EXTRN	?current_object_3d_texture_filter@@3HA:DWORD	; current_object_3d_texture_filter
EXTRN	?current_object_3d_texture_mipmap@@3HA:DWORD	; current_object_3d_texture_mipmap
EXTRN	?current_object_3d_specular@@3HA:DWORD		; current_object_3d_specular
EXTRN	?current_object_3d_dissolve_factor@@3MA:DWORD	; current_object_3d_dissolve_factor
EXTRN	?current_object_3d_dissolve_value@@3EA:BYTE	; current_object_3d_dissolve_value
EXTRN	?specular_rendering_enabled@@3HA:DWORD		; specular_rendering_enabled
EXTRN	?object_3d_approximation_level@@3HA:DWORD	; object_3d_approximation_level
EXTRN	?current_3d_object_is_flat@@3HA:DWORD		; current_3d_object_is_flat
EXTRN	?object_3d_points_current_base@@3HA:DWORD	; object_3d_points_current_base
EXTRN	?object_3d_object_current_base@@3HA:DWORD	; object_3d_object_current_base
EXTRN	?object_3d_light_3d_current_base@@3HA:DWORD	; object_3d_light_3d_current_base
EXTRN	?object_3d_perform_lod_calculations@@3HA:DWORD	; object_3d_perform_lod_calculations
EXTRN	?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A:DWORD ; current_object_3d_surface_point_texture_list
EXTRN	?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_surface_point_list
EXTRN	?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_surface_point_normal_list
EXTRN	?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A:DWORD ; current_object_3d_faces
EXTRN	?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A:DWORD ; current_object_3d_object_base
EXTRN	?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A:BYTE ; object_3d_object_base
EXTRN	?object_3d_scale@@3UVEC3D@@A:BYTE		; object_3d_scale
EXTRN	?textured_object_rendering_enabled@@3HA:DWORD	; textured_object_rendering_enabled
EXTRN	?object_3d_transparent_surface_index@@3HA:DWORD	; object_3d_transparent_surface_index
EXTRN	?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A:BYTE ; object_3d_translucent_surfaces
EXTRN	?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A:DWORD ; current_object_3d_translucent_surfaces
EXTRN	?current_object_3d_relative_position@@3PAUVEC3D@@A:DWORD ; current_object_3d_relative_position
EXTRN	?current_object_3d_unit_position@@3PAUVEC3D@@A:DWORD ; current_object_3d_unit_position
EXTRN	?rotation_3d@@3PAY02MA:BYTE			; rotation_3d
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?d3d_matrix@@3U_D3DMATRIX@@A DB 040H DUP (?)		; d3d_matrix
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@40dfffc000000000
CONST	SEGMENT
__real@40dfffc000000000 DQ 040dfffc000000000r	; 32767
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@3fe2e147ae147ae1
CONST	SEGMENT
__real@3fe2e147ae147ae1 DQ 03fe2e147ae147ae1r	; 0.59
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fbc28f5c28f5c29
CONST	SEGMENT
__real@3fbc28f5c28f5c29 DQ 03fbc28f5c28f5c29r	; 0.11
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@
CONST	SEGMENT
??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@ DB '%f %f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OFLINIBN@Transparent?5matrix?3@
CONST	SEGMENT
??_C@_0BE@OFLINIBN@Transparent?5matrix?3@ DB 'Transparent matrix:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@DPGMODHF@object_3d_transparent_surface_i@
CONST	SEGMENT
??_C@_0EC@DPGMODHF@object_3d_transparent_surface_i@ DB 'object_3d_transpa'
	DB	'rent_surface_index < MAXIMUM_TRANLUCENT_SURFACES', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_transparent_surface@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_transparent_surface@@YGXXZ@4JA DD 0ae6H ; `add_transparent_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA DD 092dH ; `draw_3d_object_untextured_hardware_faces'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@
CONST	SEGMENT
??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@ DB 'point_count < 2048', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dobjdrh.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA DD 077fH ; `draw_3d_object_hardware_faces'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_3d_object_hardware_translucent_faces@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z
_TEXT	SEGMENT
tv72 = -104						; size = 8
tv76 = -100						; size = 4
_iblue$1 = -32						; size = 4
_igreen$2 = -28						; size = 4
_ired$3 = -24						; size = 4
_iblue$4 = -20						; size = 4
_igreen$5 = -16						; size = 4
_ired$6 = -12						; size = 4
_alpha$7 = -8						; size = 4
_ialpha$ = -4						; size = 4
_surface$ = 8						; size = 4
?draw_3d_object_hardware_translucent_faces@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z PROC ; draw_3d_object_hardware_translucent_faces, COMDAT

; 3267 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3268 : 
; 3269 : 	int
; 3270 : 		ialpha;
; 3271 : 
; 3272 : 	current_object_3d_surface = surface->surface;

  00009	8b 45 08	 mov	 eax, DWORD PTR _surface$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, ecx ; current_object_3d_surface

; 3273 : 
; 3274 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00014	6a 02		 push	 2
  00016	6a 09		 push	 9
  00018	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3275 : 
; 3276 : 	zbuffer_constant =				( current_object_3d_surface->detail )			?	zbuffer_constant_elevated_bias : zbuffer_constant_normal_bias;

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00022	66 8b 08	 mov	 cx, WORD PTR [eax]
  00025	66 d1 e9	 shr	 cx, 1
  00028	66 83 e1 01	 and	 cx, 1
  0002c	0f b7 d1	 movzx	 edx, cx
  0002f	85 d2		 test	 edx, edx
  00031	74 0f		 je	 SHORT $LN33@draw_3d_ob
  00033	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_elevated_bias@@3NA
  0003b	f2 0f 11 45 98	 movsd	 QWORD PTR tv72[ebp], xmm0
  00040	eb 0d		 jmp	 SHORT $LN34@draw_3d_ob
$LN33@draw_3d_ob:
  00042	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  0004a	f2 0f 11 45 98	 movsd	 QWORD PTR tv72[ebp], xmm0
$LN34@draw_3d_ob:
  0004f	f2 0f 10 45 98	 movsd	 xmm0, QWORD PTR tv72[ebp]
  00054	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 3277 : 	current_object_3d_specular =	( current_object_3d_surface->specularity )	?	specular_rendering_enabled : FALSE;

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00061	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  00065	85 c9		 test	 ecx, ecx
  00067	74 0b		 je	 SHORT $LN35@draw_3d_ob
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?specular_rendering_enabled@@3HA ; specular_rendering_enabled
  0006f	89 55 9c	 mov	 DWORD PTR tv76[ebp], edx
  00072	eb 07		 jmp	 SHORT $LN36@draw_3d_ob
$LN35@draw_3d_ob:
  00074	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN36@draw_3d_ob:
  0007b	8b 45 9c	 mov	 eax, DWORD PTR tv76[ebp]
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_specular@@3HA, eax ; current_object_3d_specular

; 3278 : 
; 3279 : 	if ( current_object_3d_surface->detail )

  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00088	66 8b 08	 mov	 cx, WORD PTR [eax]
  0008b	66 d1 e9	 shr	 cx, 1
  0008e	66 83 e1 01	 and	 cx, 1
  00092	0f b7 d1	 movzx	 edx, cx
  00095	85 d2		 test	 edx, edx
  00097	74 0b		 je	 SHORT $LN2@draw_3d_ob

; 3280 : 	{
; 3281 : 
; 3282 : 		set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, ELEVATED_ZBIAS );

  00099	6a 02		 push	 2
  0009b	6a 2f		 push	 47			; 0000002fH
  0009d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3283 : 	}
; 3284 : 	else

  000a2	eb 09		 jmp	 SHORT $LN3@draw_3d_ob
$LN2@draw_3d_ob:

; 3285 : 	{
; 3286 : 
; 3287 : 		set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, NORMAL_ZBIAS );

  000a4	6a 01		 push	 1
  000a6	6a 2f		 push	 47			; 0000002fH
  000a8	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN3@draw_3d_ob:

; 3288 : 	}
; 3289 : 
; 3290 : 	if ( current_object_3d_surface->polygons )

  000ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000b2	66 8b 08	 mov	 cx, WORD PTR [eax]
  000b5	66 83 e1 01	 and	 cx, 1
  000b9	0f b7 d1	 movzx	 edx, cx
  000bc	85 d2		 test	 edx, edx
  000be	0f 84 f8 05 00
	00		 je	 $LN31@draw_3d_ob

; 3291 : 	{
; 3292 : 	
; 3293 : 		if ( current_object_3d_surface->translucent )

  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000c9	66 8b 08	 mov	 cx, WORD PTR [eax]
  000cc	66 c1 e9 06	 shr	 cx, 6
  000d0	66 83 e1 01	 and	 cx, 1
  000d4	0f b7 d1	 movzx	 edx, cx
  000d7	85 d2		 test	 edx, edx
  000d9	74 30		 je	 SHORT $LN5@draw_3d_ob

; 3294 : 		{
; 3295 : 
; 3296 : 			float
; 3297 : 				alpha;
; 3298 : 		
; 3299 : 			alpha = current_object_3d_surface->alpha;

  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000e0	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  000e4	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000e8	f3 0f 11 45 f8	 movss	 DWORD PTR _alpha$7[ebp], xmm0

; 3300 : 
; 3301 : 			asm_convert_float_to_int ( ( alpha * current_object_3d_dissolve_factor ), &ialpha );

  000ed	8d 45 fc	 lea	 eax, DWORD PTR _ialpha$[ebp]
  000f0	50		 push	 eax
  000f1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _alpha$7[ebp]
  000f6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000fe	51		 push	 ecx
  000ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00104	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3302 : 		}
; 3303 : 		else

  00109	eb 0a		 jmp	 SHORT $LN6@draw_3d_ob
$LN5@draw_3d_ob:

; 3304 : 		{
; 3305 : 
; 3306 : 			ialpha = current_object_3d_dissolve_value;

  0010b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00112	89 45 fc	 mov	 DWORD PTR _ialpha$[ebp], eax
$LN6@draw_3d_ob:

; 3307 : 		}
; 3308 : 
; 3309 : 		if ( current_object_3d_surface->textured )

  00115	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0011a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0011d	66 c1 e9 03	 shr	 cx, 3
  00121	66 83 e1 01	 and	 cx, 1
  00125	0f b7 d1	 movzx	 edx, cx
  00128	85 d2		 test	 edx, edx
  0012a	0f 84 a4 02 00
	00		 je	 $LN7@draw_3d_ob

; 3310 : 		{
; 3311 : 	
; 3312 : 			current_object_3d_texture = system_textures[surface->texture_index];

  00130	8b 45 08	 mov	 eax, DWORD PTR _surface$[ebp]
  00133	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00136	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  0013d	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A, edx ; current_object_3d_texture

; 3313 : 	
; 3314 : 			if ( ( current_object_3d_surface->luminous ) || ( current_object_3d_surface->additive ) )

  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00148	66 8b 08	 mov	 cx, WORD PTR [eax]
  0014b	66 c1 e9 07	 shr	 cx, 7
  0014f	66 83 e1 01	 and	 cx, 1
  00153	0f b7 d1	 movzx	 edx, cx
  00156	85 d2		 test	 edx, edx
  00158	75 1b		 jne	 SHORT $LN11@draw_3d_ob
  0015a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0015f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00162	66 c1 e9 05	 shr	 cx, 5
  00166	66 83 e1 01	 and	 cx, 1
  0016a	0f b7 d1	 movzx	 edx, cx
  0016d	85 d2		 test	 edx, edx
  0016f	0f 84 cc 00 00
	00		 je	 $LN9@draw_3d_ob
$LN11@draw_3d_ob:

; 3315 : 			{
; 3316 : 	
; 3317 : 				if ( current_object_3d_surface->additive )

  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0017a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0017d	66 c1 e9 05	 shr	 cx, 5
  00181	66 83 e1 01	 and	 cx, 1
  00185	0f b7 d1	 movzx	 edx, cx
  00188	85 d2		 test	 edx, edx
  0018a	0f 84 86 00 00
	00		 je	 $LN12@draw_3d_ob

; 3318 : 				{
; 3319 : 			
; 3320 : 					int
; 3321 : 						ired,
; 3322 : 						igreen,
; 3323 : 						iblue;
; 3324 : 			
; 3325 : 					asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->red ) * current_object_3d_dissolve_factor ), &ired );

  00190	8d 45 f4	 lea	 eax, DWORD PTR _ired$6[ebp]
  00193	50		 push	 eax
  00194	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0019a	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  0019e	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001a2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001aa	51		 push	 ecx
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3326 : 					asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->green ) * current_object_3d_dissolve_factor ), &igreen );

  001b5	8d 45 f0	 lea	 eax, DWORD PTR _igreen$5[ebp]
  001b8	50		 push	 eax
  001b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001bf	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  001c3	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001c7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001cf	51		 push	 ecx
  001d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d5	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3327 : 					asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->blue ) * current_object_3d_dissolve_factor ), &iblue );

  001da	8d 45 ec	 lea	 eax, DWORD PTR _iblue$4[ebp]
  001dd	50		 push	 eax
  001de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001e4	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  001e8	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001ec	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001f4	51		 push	 ecx
  001f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fa	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3328 : 			
; 3329 : 					set_d3d_material_emissive_colour ( ired, igreen, iblue, ialpha );

  001ff	8b 45 fc	 mov	 eax, DWORD PTR _ialpha$[ebp]
  00202	50		 push	 eax
  00203	8b 4d ec	 mov	 ecx, DWORD PTR _iblue$4[ebp]
  00206	51		 push	 ecx
  00207	8b 55 f0	 mov	 edx, DWORD PTR _igreen$5[ebp]
  0020a	52		 push	 edx
  0020b	8b 45 f4	 mov	 eax, DWORD PTR _ired$6[ebp]
  0020e	50		 push	 eax
  0020f	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 3330 : 				}
; 3331 : 				else

  00214	eb 29		 jmp	 SHORT $LN13@draw_3d_ob
$LN12@draw_3d_ob:

; 3332 : 				{
; 3333 : 	
; 3334 : 					set_d3d_material_emissive_colour ( current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue, ialpha );

  00216	8b 45 fc	 mov	 eax, DWORD PTR _ialpha$[ebp]
  00219	50		 push	 eax
  0021a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00220	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00224	52		 push	 edx
  00225	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0022a	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  0022e	51		 push	 ecx
  0022f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00235	0f b6 42 0e	 movzx	 eax, BYTE PTR [edx+14]
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour
$LN13@draw_3d_ob:

; 3335 : 				}
; 3336 : 			}
; 3337 : 			else

  0023f	eb 1a		 jmp	 SHORT $LN10@draw_3d_ob
$LN9@draw_3d_ob:

; 3338 : 			{
; 3339 : 	
; 3340 : 				set_d3d_material_colour ( 255, 255, 255, ialpha, 0 );

  00241	6a 00		 push	 0
  00243	8b 45 fc	 mov	 eax, DWORD PTR _ialpha$[ebp]
  00246	50		 push	 eax
  00247	68 ff 00 00 00	 push	 255			; 000000ffH
  0024c	68 ff 00 00 00	 push	 255			; 000000ffH
  00251	68 ff 00 00 00	 push	 255			; 000000ffH
  00256	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour
$LN10@draw_3d_ob:

; 3341 : 			}
; 3342 : 	
; 3343 : 			if ( current_object_3d_surface->texture_wrapped_u )	{ current_object_3d_texture_u_address = D3DTADDRESS_WRAP; }

  0025b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00260	66 8b 08	 mov	 cx, WORD PTR [eax]
  00263	66 c1 e9 0c	 shr	 cx, 12			; 0000000cH
  00267	66 83 e1 01	 and	 cx, 1
  0026b	0f b7 d1	 movzx	 edx, cx
  0026e	85 d2		 test	 edx, edx
  00270	74 0c		 je	 SHORT $LN14@draw_3d_ob
  00272	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_u_address@@3HA, 1 ; current_object_3d_texture_u_address
  0027c	eb 0a		 jmp	 SHORT $LN15@draw_3d_ob
$LN14@draw_3d_ob:

; 3344 : 			else																	{ current_object_3d_texture_u_address = D3DTADDRESS_CLAMP; }

  0027e	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_u_address@@3HA, 3 ; current_object_3d_texture_u_address
$LN15@draw_3d_ob:

; 3345 : 	
; 3346 : 			if ( current_object_3d_surface->texture_wrapped_v )	{ current_object_3d_texture_v_address = D3DTADDRESS_WRAP; }

  00288	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0028d	66 8b 08	 mov	 cx, WORD PTR [eax]
  00290	66 c1 e9 0d	 shr	 cx, 13			; 0000000dH
  00294	66 83 e1 01	 and	 cx, 1
  00298	0f b7 d1	 movzx	 edx, cx
  0029b	85 d2		 test	 edx, edx
  0029d	74 0c		 je	 SHORT $LN16@draw_3d_ob
  0029f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_v_address@@3HA, 1 ; current_object_3d_texture_v_address
  002a9	eb 0a		 jmp	 SHORT $LN17@draw_3d_ob
$LN16@draw_3d_ob:

; 3347 : 			else																	{ current_object_3d_texture_v_address = D3DTADDRESS_CLAMP; }

  002ab	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_v_address@@3HA, 3 ; current_object_3d_texture_v_address
$LN17@draw_3d_ob:

; 3348 : 	
; 3349 : 			if ( current_object_3d_surface->texture_filtered )		{ current_object_3d_texture_filter = D3DTFG_LINEAR; }

  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  002ba	66 8b 08	 mov	 cx, WORD PTR [eax]
  002bd	66 c1 e9 0a	 shr	 cx, 10			; 0000000aH
  002c1	66 83 e1 01	 and	 cx, 1
  002c5	0f b7 d1	 movzx	 edx, cx
  002c8	85 d2		 test	 edx, edx
  002ca	74 0c		 je	 SHORT $LN18@draw_3d_ob
  002cc	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_filter@@3HA, 2 ; current_object_3d_texture_filter
  002d6	eb 0a		 jmp	 SHORT $LN19@draw_3d_ob
$LN18@draw_3d_ob:

; 3350 : 			else																	{ current_object_3d_texture_filter = D3DTFG_POINT; }

  002d8	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_filter@@3HA, 1 ; current_object_3d_texture_filter
$LN19@draw_3d_ob:

; 3351 : 	
; 3352 : 			if ( current_object_3d_surface->texture_mipmapped )	{ current_object_3d_texture_mipmap = D3DTFP_POINT; }

  002e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  002e7	66 8b 08	 mov	 cx, WORD PTR [eax]
  002ea	66 c1 e9 0b	 shr	 cx, 11			; 0000000bH
  002ee	66 83 e1 01	 and	 cx, 1
  002f2	0f b7 d1	 movzx	 edx, cx
  002f5	85 d2		 test	 edx, edx
  002f7	74 0c		 je	 SHORT $LN20@draw_3d_ob
  002f9	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_mipmap@@3HA, 2 ; current_object_3d_texture_mipmap
  00303	eb 0a		 jmp	 SHORT $LN21@draw_3d_ob
$LN20@draw_3d_ob:

; 3353 : 			else																	{ current_object_3d_texture_mipmap = D3DTFP_NONE; }

  00305	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_mipmap@@3HA, 1 ; current_object_3d_texture_mipmap
$LN21@draw_3d_ob:

; 3354 : 	
; 3355 : 			set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, current_object_3d_specular );

  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00314	50		 push	 eax
  00315	6a 1d		 push	 29			; 0000001dH
  00317	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3356 : 			set_d3d_texture ( 0, current_object_3d_texture );

  0031c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00321	50		 push	 eax
  00322	6a 00		 push	 0
  00324	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 3357 : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00329	6a 04		 push	 4
  0032b	6a 01		 push	 1
  0032d	6a 00		 push	 0
  0032f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3358 : 	
; 3359 : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, current_object_3d_texture_u_address );

  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  00339	50		 push	 eax
  0033a	6a 0d		 push	 13			; 0000000dH
  0033c	6a 00		 push	 0
  0033e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3360 : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, current_object_3d_texture_v_address );

  00343	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00348	50		 push	 eax
  00349	6a 0e		 push	 14			; 0000000eH
  0034b	6a 00		 push	 0
  0034d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3361 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, current_object_3d_texture_filter );

  00352	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00357	50		 push	 eax
  00358	6a 10		 push	 16			; 00000010H
  0035a	6a 00		 push	 0
  0035c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3362 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, current_object_3d_texture_filter );

  00361	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00366	50		 push	 eax
  00367	6a 11		 push	 17			; 00000011H
  00369	6a 00		 push	 0
  0036b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3363 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, current_object_3d_texture_mipmap );

  00370	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00375	50		 push	 eax
  00376	6a 12		 push	 18			; 00000012H
  00378	6a 00		 push	 0
  0037a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3364 : 	
; 3365 : 			if ( current_object_3d_surface->additive )

  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00384	66 8b 08	 mov	 cx, WORD PTR [eax]
  00387	66 c1 e9 05	 shr	 cx, 5
  0038b	66 83 e1 01	 and	 cx, 1
  0038f	0f b7 d1	 movzx	 edx, cx
  00392	85 d2		 test	 edx, edx
  00394	74 14		 je	 SHORT $LN22@draw_3d_ob

; 3366 : 			{
; 3367 : 	
; 3368 : 				set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_ONE );

  00396	6a 02		 push	 2
  00398	6a 13		 push	 19			; 00000013H
  0039a	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3369 : 				set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_ONE );

  0039f	6a 02		 push	 2
  003a1	6a 14		 push	 20			; 00000014H
  003a3	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3370 : 			}
; 3371 : 			else

  003a8	eb 12		 jmp	 SHORT $LN23@draw_3d_ob
$LN22@draw_3d_ob:

; 3372 : 			{
; 3373 : 	
; 3374 : 				set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  003aa	6a 05		 push	 5
  003ac	6a 13		 push	 19			; 00000013H
  003ae	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3375 : 				set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  003b3	6a 06		 push	 6
  003b5	6a 14		 push	 20			; 00000014H
  003b7	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN23@draw_3d_ob:

; 3376 : 			}
; 3377 : 	
; 3378 : 			object_3d_render_hardware_surface ( &objects_3d_data[surface->object_index] );

  003bc	8b 45 08	 mov	 eax, DWORD PTR _surface$[ebp]
  003bf	6b 48 38 68	 imul	 ecx, DWORD PTR [eax+56], 104
  003c3	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  003c9	51		 push	 ecx
  003ca	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 3379 : 		}
; 3380 : 		else

  003cf	e9 99 01 00 00	 jmp	 $LN8@draw_3d_ob
$LN7@draw_3d_ob:

; 3381 : 		{
; 3382 : 	
; 3383 : 			set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, current_object_3d_specular );

  003d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  003d9	50		 push	 eax
  003da	6a 1d		 push	 29			; 0000001dH
  003dc	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3384 : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  003e1	6a 01		 push	 1
  003e3	6a 01		 push	 1
  003e5	6a 00		 push	 0
  003e7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3385 : 	
; 3386 : 			if ( ( current_object_3d_surface->luminous ) || ( current_object_3d_surface->additive ) )

  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  003f1	66 8b 08	 mov	 cx, WORD PTR [eax]
  003f4	66 c1 e9 07	 shr	 cx, 7
  003f8	66 83 e1 01	 and	 cx, 1
  003fc	0f b7 d1	 movzx	 edx, cx
  003ff	85 d2		 test	 edx, edx
  00401	75 1b		 jne	 SHORT $LN26@draw_3d_ob
  00403	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00408	66 8b 08	 mov	 cx, WORD PTR [eax]
  0040b	66 c1 e9 05	 shr	 cx, 5
  0040f	66 83 e1 01	 and	 cx, 1
  00413	0f b7 d1	 movzx	 edx, cx
  00416	85 d2		 test	 edx, edx
  00418	0f 84 cc 00 00
	00		 je	 $LN24@draw_3d_ob
$LN26@draw_3d_ob:

; 3387 : 			{
; 3388 : 	
; 3389 : 				if ( current_object_3d_surface->additive )

  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00423	66 8b 08	 mov	 cx, WORD PTR [eax]
  00426	66 c1 e9 05	 shr	 cx, 5
  0042a	66 83 e1 01	 and	 cx, 1
  0042e	0f b7 d1	 movzx	 edx, cx
  00431	85 d2		 test	 edx, edx
  00433	0f 84 86 00 00
	00		 je	 $LN27@draw_3d_ob

; 3390 : 				{
; 3391 : 			
; 3392 : 					int
; 3393 : 						ired,
; 3394 : 						igreen,
; 3395 : 						iblue;
; 3396 : 			
; 3397 : 					asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->red ) * current_object_3d_dissolve_factor ), &ired );

  00439	8d 45 e8	 lea	 eax, DWORD PTR _ired$3[ebp]
  0043c	50		 push	 eax
  0043d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00443	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  00447	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0044b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00453	51		 push	 ecx
  00454	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00459	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3398 : 					asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->green ) * current_object_3d_dissolve_factor ), &igreen );

  0045e	8d 45 e4	 lea	 eax, DWORD PTR _igreen$2[ebp]
  00461	50		 push	 eax
  00462	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00468	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  0046c	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00470	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00478	51		 push	 ecx
  00479	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047e	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3399 : 					asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->blue ) * current_object_3d_dissolve_factor ), &iblue );

  00483	8d 45 e0	 lea	 eax, DWORD PTR _iblue$1[ebp]
  00486	50		 push	 eax
  00487	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0048d	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00491	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00495	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  0049d	51		 push	 ecx
  0049e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3400 : 			
; 3401 : 					set_d3d_material_emissive_colour ( ired, igreen, iblue, ialpha );

  004a8	8b 45 fc	 mov	 eax, DWORD PTR _ialpha$[ebp]
  004ab	50		 push	 eax
  004ac	8b 4d e0	 mov	 ecx, DWORD PTR _iblue$1[ebp]
  004af	51		 push	 ecx
  004b0	8b 55 e4	 mov	 edx, DWORD PTR _igreen$2[ebp]
  004b3	52		 push	 edx
  004b4	8b 45 e8	 mov	 eax, DWORD PTR _ired$3[ebp]
  004b7	50		 push	 eax
  004b8	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 3402 : 				}
; 3403 : 				else

  004bd	eb 29		 jmp	 SHORT $LN28@draw_3d_ob
$LN27@draw_3d_ob:

; 3404 : 				{
; 3405 : 	
; 3406 : 					set_d3d_material_emissive_colour ( current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue, ialpha );

  004bf	8b 45 fc	 mov	 eax, DWORD PTR _ialpha$[ebp]
  004c2	50		 push	 eax
  004c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004c9	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  004cd	52		 push	 edx
  004ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004d3	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  004d7	51		 push	 ecx
  004d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004de	0f b6 42 0e	 movzx	 eax, BYTE PTR [edx+14]
  004e2	50		 push	 eax
  004e3	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour
$LN28@draw_3d_ob:

; 3407 : 				}
; 3408 : 			}
; 3409 : 			else

  004e8	eb 33		 jmp	 SHORT $LN25@draw_3d_ob
$LN24@draw_3d_ob:

; 3410 : 			{
; 3411 : 	
; 3412 : 				set_d3d_material_colour ( current_object_3d_surface->red,

  004ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004ef	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  004f3	51		 push	 ecx
  004f4	8b 55 fc	 mov	 edx, DWORD PTR _ialpha$[ebp]
  004f7	52		 push	 edx
  004f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004fd	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00501	51		 push	 ecx
  00502	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00508	0f b6 42 0d	 movzx	 eax, BYTE PTR [edx+13]
  0050c	50		 push	 eax
  0050d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00513	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  00517	52		 push	 edx
  00518	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour
$LN25@draw_3d_ob:

; 3413 : 													current_object_3d_surface->green,
; 3414 : 													current_object_3d_surface->blue,
; 3415 : 													ialpha,
; 3416 : 													current_object_3d_surface->specularity );
; 3417 : 			}
; 3418 : 	
; 3419 : 			if ( current_object_3d_surface->additive )

  0051d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00522	66 8b 08	 mov	 cx, WORD PTR [eax]
  00525	66 c1 e9 05	 shr	 cx, 5
  00529	66 83 e1 01	 and	 cx, 1
  0052d	0f b7 d1	 movzx	 edx, cx
  00530	85 d2		 test	 edx, edx
  00532	74 14		 je	 SHORT $LN29@draw_3d_ob

; 3420 : 			{
; 3421 : 	
; 3422 : 				set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_ONE );

  00534	6a 02		 push	 2
  00536	6a 13		 push	 19			; 00000013H
  00538	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3423 : 				set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_ONE );

  0053d	6a 02		 push	 2
  0053f	6a 14		 push	 20			; 00000014H
  00541	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3424 : 			}
; 3425 : 			else

  00546	eb 12		 jmp	 SHORT $LN30@draw_3d_ob
$LN29@draw_3d_ob:

; 3426 : 			{
; 3427 : 	
; 3428 : 				set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  00548	6a 05		 push	 5
  0054a	6a 13		 push	 19			; 00000013H
  0054c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3429 : 				set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  00551	6a 06		 push	 6
  00553	6a 14		 push	 20			; 00000014H
  00555	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN30@draw_3d_ob:

; 3430 : 			}
; 3431 : 	
; 3432 : 			object_3d_render_hardware_surface ( &objects_3d_data[surface->object_index] );

  0055a	8b 45 08	 mov	 eax, DWORD PTR _surface$[ebp]
  0055d	6b 48 38 68	 imul	 ecx, DWORD PTR [eax+56], 104
  00561	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00567	51		 push	 ecx
  00568	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface
$LN8@draw_3d_ob:

; 3433 : 		}
; 3434 : 	
; 3435 : 		if ( ( current_object_3d_surface->polygons ) && ( current_object_3d_surface->reflectivity != 0 ) )

  0056d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00572	66 8b 08	 mov	 cx, WORD PTR [eax]
  00575	66 83 e1 01	 and	 cx, 1
  00579	0f b7 d1	 movzx	 edx, cx
  0057c	85 d2		 test	 edx, edx
  0057e	0f 84 38 01 00
	00		 je	 $LN31@draw_3d_ob
  00584	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00589	0f b6 48 0a	 movzx	 ecx, BYTE PTR [eax+10]
  0058d	85 c9		 test	 ecx, ecx
  0058f	0f 84 27 01 00
	00		 je	 $LN31@draw_3d_ob

; 3436 : 		{
; 3437 : 	
; 3438 : 			set_d3d_material_colour ( 255, 255, 255, current_object_3d_surface->reflectivity, 0 );

  00595	6a 00		 push	 0
  00597	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0059c	0f b6 48 0a	 movzx	 ecx, BYTE PTR [eax+10]
  005a0	51		 push	 ecx
  005a1	68 ff 00 00 00	 push	 255			; 000000ffH
  005a6	68 ff 00 00 00	 push	 255			; 000000ffH
  005ab	68 ff 00 00 00	 push	 255			; 000000ffH
  005b0	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour

; 3439 : 	
; 3440 : 			set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  005b5	6a 05		 push	 5
  005b7	6a 13		 push	 19			; 00000013H
  005b9	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3441 : 			set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  005be	6a 06		 push	 6
  005c0	6a 14		 push	 20			; 00000014H
  005c2	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3442 : 		
; 3443 : 			current_object_3d_texture = current_object_3d_reflection_texture_map;

  005c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_reflection_texture_map@@3PAUSCREEN@@A ; current_object_3d_reflection_texture_map
  005cc	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A, eax ; current_object_3d_texture

; 3444 : 		
; 3445 : 			current_object_3d_texture_u_address = D3DTADDRESS_WRAP;

  005d1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_u_address@@3HA, 1 ; current_object_3d_texture_u_address

; 3446 : 			current_object_3d_texture_v_address = D3DTADDRESS_WRAP;

  005db	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_v_address@@3HA, 1 ; current_object_3d_texture_v_address

; 3447 : 			current_object_3d_texture_filter = D3DTFG_LINEAR;

  005e5	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_filter@@3HA, 2 ; current_object_3d_texture_filter

; 3448 : 			current_object_3d_texture_mipmap = D3DTFP_POINT;

  005ef	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_mipmap@@3HA, 2 ; current_object_3d_texture_mipmap

; 3449 : 		
; 3450 : 			set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  005f9	6a 00		 push	 0
  005fb	6a 1d		 push	 29			; 0000001dH
  005fd	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3451 : 			set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00602	6a 02		 push	 2
  00604	6a 09		 push	 9
  00606	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3452 : 		
; 3453 : 			set_d3d_texture ( 0, current_object_3d_texture );

  0060b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00610	50		 push	 eax
  00611	6a 00		 push	 0
  00613	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 3454 : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00618	6a 04		 push	 4
  0061a	6a 01		 push	 1
  0061c	6a 00		 push	 0
  0061e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3455 : 		
; 3456 : 			set_d3d_int_state ( D3DRENDERSTATE_NORMALIZENORMALS, TRUE );

  00623	6a 01		 push	 1
  00625	68 8f 00 00 00	 push	 143			; 0000008fH
  0062a	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3457 : 			set_d3d_texture_stage_state ( 0, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR );

  0062f	68 00 00 03 00	 push	 196608			; 00030000H
  00634	6a 0b		 push	 11			; 0000000bH
  00636	6a 00		 push	 0
  00638	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3458 : 			set_d3d_texture_stage_state ( 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2 );// | D3DTTFF_PROJECTED );

  0063d	6a 02		 push	 2
  0063f	6a 18		 push	 24			; 00000018H
  00641	6a 00		 push	 0
  00643	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3459 : 	
; 3460 : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, current_object_3d_texture_u_address );

  00648	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  0064d	50		 push	 eax
  0064e	6a 0d		 push	 13			; 0000000dH
  00650	6a 00		 push	 0
  00652	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3461 : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, current_object_3d_texture_v_address );

  00657	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  0065c	50		 push	 eax
  0065d	6a 0e		 push	 14			; 0000000eH
  0065f	6a 00		 push	 0
  00661	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3462 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, current_object_3d_texture_filter );

  00666	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  0066b	50		 push	 eax
  0066c	6a 10		 push	 16			; 00000010H
  0066e	6a 00		 push	 0
  00670	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3463 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, current_object_3d_texture_filter );

  00675	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  0067a	50		 push	 eax
  0067b	6a 11		 push	 17			; 00000011H
  0067d	6a 00		 push	 0
  0067f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3464 : 			set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, current_object_3d_texture_mipmap );

  00684	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00689	50		 push	 eax
  0068a	6a 12		 push	 18			; 00000012H
  0068c	6a 00		 push	 0
  0068e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3465 : 	
; 3466 : 			object_3d_render_hardware_surface ( &objects_3d_data[surface->object_index] );

  00693	8b 45 08	 mov	 eax, DWORD PTR _surface$[ebp]
  00696	6b 48 38 68	 imul	 ecx, DWORD PTR [eax+56], 104
  0069a	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  006a0	51		 push	 ecx
  006a1	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 3467 : 	
; 3468 : 			set_d3d_texture_stage_state ( 0, D3DTSS_TEXCOORDINDEX, 0 );

  006a6	6a 00		 push	 0
  006a8	6a 0b		 push	 11			; 0000000bH
  006aa	6a 00		 push	 0
  006ac	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3469 : 			set_d3d_texture_stage_state ( 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE );

  006b1	6a 00		 push	 0
  006b3	6a 18		 push	 24			; 00000018H
  006b5	6a 00		 push	 0
  006b7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN31@draw_3d_ob:

; 3470 : 		}
; 3471 : 	}
; 3472 : }

  006bc	5f		 pop	 edi
  006bd	5e		 pop	 esi
  006be	5b		 pop	 ebx
  006bf	8b e5		 mov	 esp, ebp
  006c1	5d		 pop	 ebp
  006c2	c2 04 00	 ret	 4
?draw_3d_object_hardware_translucent_faces@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ENDP ; draw_3d_object_hardware_translucent_faces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?add_transparent_surface@@YGXXZ
_TEXT	SEGMENT
_frame$1 = -4						; size = 4
?add_transparent_surface@@YGXXZ PROC			; add_transparent_surface, COMDAT

; 2790 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2791 : 
; 2792 : 	if ( current_object_3d_surface->polygons )

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	0f 84 a3 02 00
	00		 je	 $LN1@add_transp

; 2793 : 	{
; 2794 : 	
; 2795 : 		ASSERT ( object_3d_transparent_surface_index < MAXIMUM_TRANLUCENT_SURFACES );

  00020	81 3d 00 00 00
	00 00 10 00 00	 cmp	 DWORD PTR ?object_3d_transparent_surface_index@@3HA, 4096 ; object_3d_transparent_surface_index, 00001000H
  0002a	7c 18		 jl	 SHORT $LN3@add_transp
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_transparent_surface@@YGXXZ@4JA
  00031	83 c0 05	 add	 eax, 5
  00034	50		 push	 eax
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@DPGMODHF@object_3d_transparent_surface_i@
  0003f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@add_transp:

; 2796 : 	
; 2797 : 		//
; 2798 : 		// Setup the data in the translucent surface holder
; 2799 : 		//
; 2800 : 	
; 2801 : 		memcpy ( object_3d_translucent_surfaces[object_3d_transparent_surface_index].vp.attitude, current_object_3d_object_base->object_vp->attitude, sizeof ( matrix3x3 ) );

  00044	6a 24		 push	 36			; 00000024H
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0004b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0004e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00051	51		 push	 ecx
  00052	69 15 00 00 00
	00 84 00 00 00	 imul	 edx, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  0005c	81 c2 10 00 00
	00		 add	 edx, OFFSET ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A+16
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 _memcpy
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2802 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].vp.position = current_object_3d_object_base->object_vp->position;

  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00070	69 0d 00 00 00
	00 84 00 00 00	 imul	 ecx, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  0007a	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A+4
  00080	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	89 01		 mov	 DWORD PTR [ecx], eax
  00087	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0008a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0008d	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00090	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 2803 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].object_view_position = *current_object_3d_relative_position;

  00093	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  0009d	05 50 00 00 00	 add	 eax, OFFSET ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A+80
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  000a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000aa	89 10		 mov	 DWORD PTR [eax], edx
  000ac	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000af	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000b2	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  000b5	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2804 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].object_unit_position = *current_object_3d_unit_position;

  000b8	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  000c2	05 5c 00 00 00	 add	 eax, OFFSET ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A+92
  000c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A ; current_object_3d_unit_position
  000cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cf	89 10		 mov	 DWORD PTR [eax], edx
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000d7	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  000da	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2805 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].dissolve_value = current_object_3d_dissolve_value;

  000dd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000e4	69 0d 00 00 00
	00 84 00 00 00	 imul	 ecx, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  000ee	89 81 3c 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[ecx+60], eax

; 2806 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].object_3d_scale = object_3d_scale;

  000f4	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  000fe	05 44 00 00 00	 add	 eax, OFFSET ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A+68
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00109	89 08		 mov	 DWORD PTR [eax], ecx
  0010b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00111	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00114	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0011a	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2807 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].object_index = current_object_3d_object_base->object_number;

  0011d	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0012d	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00130	89 90 38 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+56], edx

; 2808 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].surface = current_object_3d_surface;

  00136	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00140	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00146	89 88 00 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax], ecx

; 2809 : 	
; 2810 : 			object_3d_translucent_surfaces[object_3d_transparent_surface_index].surface_point_list = current_object_3d_surface_point_list;

  0014c	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00156	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0015c	89 88 6c 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+108], ecx

; 2811 : 			object_3d_translucent_surfaces[object_3d_transparent_surface_index].surface_point_normal_list = current_object_3d_surface_point_normal_list;

  00162	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  0016c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00172	89 88 70 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+112], ecx

; 2812 : 			object_3d_translucent_surfaces[object_3d_transparent_surface_index].surface_point_texture_list = current_object_3d_surface_point_texture_list;

  00178	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00182	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00188	89 88 74 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+116], ecx

; 2813 : 			object_3d_translucent_surfaces[object_3d_transparent_surface_index].faces = current_object_3d_faces;

  0018e	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A ; current_object_3d_faces
  0019e	89 88 68 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+104], ecx

; 2814 : 			object_3d_translucent_surfaces[object_3d_transparent_surface_index].faces_point_list = current_object_3d_point_list;

  001a4	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  001ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  001b4	89 88 78 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+120], ecx

; 2815 : 			object_3d_translucent_surfaces[object_3d_transparent_surface_index].faces_normal_list = current_object_3d_face_normal_list;

  001ba	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  001ca	89 88 7c 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+124], ecx

; 2816 : 	
; 2817 : 	//	object_3d_translucent_surfaces[object_3d_transparent_surface_index].surface_info = current_object_3d_surface_info;
; 2818 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].lightmaps_enabled = current_object_3d_light_maps_enabled;

  001d0	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  001da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_light_maps_enabled@@3HA ; current_object_3d_light_maps_enabled
  001e0	83 e1 01	 and	 ecx, 1
  001e3	d1 e1		 shl	 ecx, 1
  001e5	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+64]
  001eb	83 e2 fd	 and	 edx, -3			; fffffffdH
  001ee	0b d1		 or	 edx, ecx
  001f0	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  001fa	89 90 40 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+64], edx

; 2819 : 	
; 2820 : 		if ( current_object_3d_surface->textured )

  00200	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00205	66 8b 08	 mov	 cx, WORD PTR [eax]
  00208	66 c1 e9 03	 shr	 cx, 3
  0020c	66 83 e1 01	 and	 cx, 1
  00210	0f b7 d1	 movzx	 edx, cx
  00213	85 d2		 test	 edx, edx
  00215	74 75		 je	 SHORT $LN4@add_transp

; 2821 : 		{
; 2822 : 	
; 2823 : 			if ( current_object_3d_surface->texture_animation )

  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0021c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0021f	66 c1 e9 09	 shr	 cx, 9
  00223	66 83 e1 01	 and	 cx, 1
  00227	0f b7 d1	 movzx	 edx, cx
  0022a	85 d2		 test	 edx, edx
  0022c	74 45		 je	 SHORT $LN5@add_transp

; 2824 : 			{
; 2825 : 		
; 2826 : 				int
; 2827 : 					frame;
; 2828 : 		
; 2829 : 				frame = texture_animations[current_object_3d_surface->texture_index].current_frame;

  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00233	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00237	6b d1 0c	 imul	 edx, ecx, 12
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  0023f	8b 4c 10 04	 mov	 ecx, DWORD PTR [eax+edx+4]
  00243	89 4d fc	 mov	 DWORD PTR _frame$1[ebp], ecx

; 2830 : 		
; 2831 : 				object_3d_translucent_surfaces[object_3d_transparent_surface_index].texture_index = texture_animations[current_object_3d_surface->texture_index].texture_indices[frame];

  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0024b	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0024f	6b d1 0c	 imul	 edx, ecx, 12
  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  00257	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  0025b	69 15 00 00 00
	00 84 00 00 00	 imul	 edx, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00265	8b 45 fc	 mov	 eax, DWORD PTR _frame$1[ebp]
  00268	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  0026b	89 8a 34 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[edx+52], ecx

; 2832 : 			}
; 2833 : 			else

  00271	eb 19		 jmp	 SHORT $LN4@add_transp
$LN5@add_transp:

; 2834 : 			{
; 2835 : 	
; 2836 : 				object_3d_translucent_surfaces[object_3d_transparent_surface_index].texture_index = current_object_3d_surface->texture_index;

  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00278	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0027c	69 15 00 00 00
	00 84 00 00 00	 imul	 edx, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00286	89 8a 34 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[edx+52], ecx
$LN4@add_transp:

; 2837 : 			}
; 2838 : 		}
; 2839 : 		
; 2840 : 		//
; 2841 : 		// Attach this surface to the list of transparent surfaces
; 2842 : 		//
; 2843 : 	
; 2844 : 		object_3d_translucent_surfaces[object_3d_transparent_surface_index].succ = current_object_3d_translucent_surfaces;

  0028c	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  00296	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A ; current_object_3d_translucent_surfaces
  0029c	89 88 80 00 00
	00		 mov	 DWORD PTR ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A[eax+128], ecx

; 2845 : 	
; 2846 : 		current_object_3d_translucent_surfaces = &object_3d_translucent_surfaces[object_3d_transparent_surface_index];

  002a2	69 05 00 00 00
	00 84 00 00 00	 imul	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA, 132 ; object_3d_transparent_surface_index
  002ac	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A
  002b1	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A, eax ; current_object_3d_translucent_surfaces

; 2847 : 	
; 2848 : 		object_3d_transparent_surface_index++;

  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?object_3d_transparent_surface_index@@3HA ; object_3d_transparent_surface_index
  002bb	83 c0 01	 add	 eax, 1
  002be	a3 00 00 00 00	 mov	 DWORD PTR ?object_3d_transparent_surface_index@@3HA, eax ; object_3d_transparent_surface_index
$LN1@add_transp:

; 2849 : 	}
; 2850 : }

  002c3	5f		 pop	 edi
  002c4	5e		 pop	 esi
  002c5	5b		 pop	 ebx
  002c6	8b e5		 mov	 esp, ebp
  002c8	5d		 pop	 ebp
  002c9	c3		 ret	 0
?add_transparent_surface@@YGXXZ ENDP			; add_transparent_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z
_TEXT	SEGMENT
tv255 = -268						; size = 4
tv249 = -268						; size = 4
tv243 = -268						; size = 4
tv237 = -268						; size = 4
$T1 = -264						; size = 4
$T2 = -260						; size = 4
$T3 = -256						; size = 4
$T4 = -252						; size = 4
$T5 = -248						; size = 4
$T6 = -244						; size = 4
$T7 = -240						; size = 4
$T8 = -236						; size = 4
$T9 = -232						; size = 4
$T10 = -228						; size = 4
$T11 = -224						; size = 4
$T12 = -220						; size = 4
_faces_left$13 = -152					; size = 4
_normal$14 = -148					; size = 12
_point_index$15 = -136					; size = 4
_surface_point_index$16 = -132				; size = 4
_zmax$17 = -128						; size = 4
_ymax$18 = -124						; size = 4
_xmax$19 = -120						; size = 4
_vertices$20 = -116					; size = 4
_count$21 = -112					; size = 4
_point_count$22 = -108					; size = 4
_intensity$23 = -104					; size = 4
_b$24 = -100						; size = 4
_g$25 = -96						; size = 4
_r$26 = -92						; size = 4
_iint$27 = -88						; size = 4
_normal$28 = -84					; size = 12
_point_index$29 = -72					; size = 4
_surface_point_index$30 = -68				; size = 4
_zmax$31 = -64						; size = 4
_ymax$32 = -60						; size = 4
_xmax$33 = -56						; size = 4
_vertices$34 = -52					; size = 4
_count$35 = -48						; size = 4
_point_count$36 = -44					; size = 4
_intensity$37 = -40					; size = 4
_b$38 = -36						; size = 4
_g$39 = -32						; size = 4
_r$40 = -28						; size = 4
_ib$41 = -24						; size = 4
_ig$42 = -20						; size = 4
_ir$43 = -16						; size = 4
_frame$44 = -12						; size = 4
_number_of_surface_points$45 = -8			; size = 4
_surfaces_left$ = -4					; size = 4
_object_number$ = 8					; size = 4
_this_object_3d_info$ = 12				; size = 4
?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z PROC ; draw_3d_object_untextured_hardware_faces, COMDAT

; 2349 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2350 : 
; 2351 : 	int
; 2352 : 		surfaces_left;
; 2353 : 
; 2354 : 	current_object_3d_surface = objects_3d_data[object_number].surfaces;

  0000c	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00016	8b 54 01 50	 mov	 edx, DWORD PTR [ecx+eax+80]
  0001a	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, edx ; current_object_3d_surface

; 2355 : 	current_object_3d_faces = objects_3d_data[object_number].faces;

  00020	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0002a	8b 54 01 44	 mov	 edx, DWORD PTR [ecx+eax+68]
  0002e	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A, edx ; current_object_3d_faces

; 2356 : 	current_object_3d_point_list = objects_3d_data[object_number].object_faces_point_plain_list;

  00034	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0003e	8b 54 01 4c	 mov	 edx, DWORD PTR [ecx+eax+76]
  00042	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, edx ; current_object_3d_point_list

; 2357 : 	current_object_3d_face_normal_list = objects_3d_data[object_number].object_face_normal_references;

  00048	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00052	8b 54 01 54	 mov	 edx, DWORD PTR [ecx+eax+84]
  00056	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_face_normal_list

; 2358 : 
; 2359 : 	current_object_3d_surface_point_list = objects_3d_data[object_number].surface_points;

  0005c	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00066	8b 54 01 5c	 mov	 edx, DWORD PTR [ecx+eax+92]
  0006a	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_list

; 2360 : 	current_object_3d_surface_point_texture_list = objects_3d_data[object_number].surface_texture_points;

  00070	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0007a	8b 54 01 58	 mov	 edx, DWORD PTR [ecx+eax+88]
  0007e	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, edx ; current_object_3d_surface_point_texture_list

; 2361 : 	current_object_3d_surface_point_normal_list = objects_3d_data[object_number].surface_point_normals;

  00084	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0008e	8b 54 01 60	 mov	 edx, DWORD PTR [ecx+eax+96]
  00092	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_normal_list

; 2362 : 
; 2363 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00098	6a 02		 push	 2
  0009a	6a 09		 push	 9
  0009c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2364 : 
; 2365 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  000a1	6a 01		 push	 1
  000a3	6a 01		 push	 1
  000a5	6a 00		 push	 0
  000a7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2366 : 	set_d3d_texture_stage_state ( 1, D3DTSS_COLOROP, D3DTOP_DISABLE );

  000ac	6a 01		 push	 1
  000ae	6a 01		 push	 1
  000b0	6a 01		 push	 1
  000b2	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2367 : 
; 2368 : 	for ( surfaces_left = objects_3d_data[object_number].number_of_surfaces; surfaces_left > 0; surfaces_left-- )

  000b7	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  000bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  000c1	0f b7 54 01 06	 movzx	 edx, WORD PTR [ecx+eax+6]
  000c6	89 55 fc	 mov	 DWORD PTR _surfaces_left$[ebp], edx
  000c9	eb 09		 jmp	 SHORT $LN4@draw_3d_ob
$LN2@draw_3d_ob:
  000cb	8b 45 fc	 mov	 eax, DWORD PTR _surfaces_left$[ebp]
  000ce	83 e8 01	 sub	 eax, 1
  000d1	89 45 fc	 mov	 DWORD PTR _surfaces_left$[ebp], eax
$LN4@draw_3d_ob:
  000d4	83 7d fc 00	 cmp	 DWORD PTR _surfaces_left$[ebp], 0
  000d8	0f 8e 7f 0f 00
	00		 jle	 $LN3@draw_3d_ob

; 2369 : 	{
; 2370 : 
; 2371 : 		int
; 2372 : 			number_of_surface_points;
; 2373 : 
; 2374 : 		number_of_surface_points = current_object_3d_surface->number_of_points;

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000e3	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  000e7	89 4d f8	 mov	 DWORD PTR _number_of_surface_points$45[ebp], ecx

; 2375 : 
; 2376 : 		if ( number_of_surface_points == 0 )

  000ea	83 7d f8 00	 cmp	 DWORD PTR _number_of_surface_points$45[ebp], 0
  000ee	75 07		 jne	 SHORT $LN14@draw_3d_ob

; 2377 : 		{
; 2378 : 
; 2379 : 			number_of_surface_points = 256;

  000f0	c7 45 f8 00 01
	00 00		 mov	 DWORD PTR _number_of_surface_points$45[ebp], 256 ; 00000100H
$LN14@draw_3d_ob:

; 2380 : 		}
; 2381 : 	
; 2382 : 		if ( current_object_3d_surface->detail )				{ zbuffer_constant = zbuffer_constant_elevated_bias; }

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000fc	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ff	66 d1 e9	 shr	 cx, 1
  00102	66 83 e1 01	 and	 cx, 1
  00106	0f b7 d1	 movzx	 edx, cx
  00109	85 d2		 test	 edx, edx
  0010b	74 12		 je	 SHORT $LN15@draw_3d_ob
  0010d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_elevated_bias@@3NA
  00115	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0
  0011d	eb 10		 jmp	 SHORT $LN16@draw_3d_ob
$LN15@draw_3d_ob:

; 2383 : 		else																{ zbuffer_constant = zbuffer_constant_normal_bias; }

  0011f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00127	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0
$LN16@draw_3d_ob:

; 2384 : 
; 2385 : 		if ( current_object_3d_surface->specularity )		{ current_object_3d_specular = specular_rendering_enabled; }

  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00134	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  00138	85 c9		 test	 ecx, ecx
  0013a	74 0c		 je	 SHORT $LN17@draw_3d_ob
  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?specular_rendering_enabled@@3HA ; specular_rendering_enabled
  00141	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_specular@@3HA, eax ; current_object_3d_specular
  00146	eb 0a		 jmp	 SHORT $LN18@draw_3d_ob
$LN17@draw_3d_ob:

; 2386 : 		else																{ current_object_3d_specular = FALSE; }

  00148	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
$LN18@draw_3d_ob:

; 2387 : 
; 2388 : 		if ( current_object_3d_surface->textured )

  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00157	66 8b 08	 mov	 cx, WORD PTR [eax]
  0015a	66 c1 e9 03	 shr	 cx, 3
  0015e	66 83 e1 01	 and	 cx, 1
  00162	0f b7 d1	 movzx	 edx, cx
  00165	85 d2		 test	 edx, edx
  00167	0f 84 f9 07 00
	00		 je	 $LN19@draw_3d_ob

; 2389 : 		{
; 2390 : 
; 2391 : 			if ( current_object_3d_surface->texture_animation )

  0016d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00172	66 8b 08	 mov	 cx, WORD PTR [eax]
  00175	66 c1 e9 09	 shr	 cx, 9
  00179	66 83 e1 01	 and	 cx, 1
  0017d	0f b7 d1	 movzx	 edx, cx
  00180	85 d2		 test	 edx, edx
  00182	74 42		 je	 SHORT $LN21@draw_3d_ob

; 2392 : 			{
; 2393 : 		
; 2394 : 				int
; 2395 : 					frame;
; 2396 : 		
; 2397 : 				frame = texture_animations[current_object_3d_surface->texture_index].current_frame;

  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00189	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0018d	6b d1 0c	 imul	 edx, ecx, 12
  00190	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  00195	8b 4c 10 04	 mov	 ecx, DWORD PTR [eax+edx+4]
  00199	89 4d f4	 mov	 DWORD PTR _frame$44[ebp], ecx

; 2398 : 		
; 2399 : 				current_object_3d_texture = system_textures[ texture_animations[current_object_3d_surface->texture_index].texture_indices[frame] ];

  0019c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001a1	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  001a5	6b d1 0c	 imul	 edx, ecx, 12
  001a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  001ad	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  001b1	8b 55 f4	 mov	 edx, DWORD PTR _frame$44[ebp]
  001b4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  001b7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  001be	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A, ecx ; current_object_3d_texture

; 2400 : 			}
; 2401 : 			else

  001c4	eb 16		 jmp	 SHORT $LN22@draw_3d_ob
$LN21@draw_3d_ob:

; 2402 : 			{
; 2403 : 		
; 2404 : 				current_object_3d_texture = system_textures[current_object_3d_surface->texture_index];

  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001cb	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  001cf	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  001d6	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A, edx ; current_object_3d_texture
$LN22@draw_3d_ob:

; 2405 : 			}
; 2406 : 
; 2407 : 			if ( ( current_object_3d_surface->translucent ) || ( current_object_3d_texture->contains_alpha ) )

  001dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001e1	66 8b 08	 mov	 cx, WORD PTR [eax]
  001e4	66 c1 e9 06	 shr	 cx, 6
  001e8	66 83 e1 01	 and	 cx, 1
  001ec	0f b7 d1	 movzx	 edx, cx
  001ef	85 d2		 test	 edx, edx
  001f1	75 18		 jne	 SHORT $LN25@draw_3d_ob
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  001f8	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  001fc	66 c1 e9 07	 shr	 cx, 7
  00200	66 83 e1 01	 and	 cx, 1
  00204	0f b7 d1	 movzx	 edx, cx
  00207	85 d2		 test	 edx, edx
  00209	74 05		 je	 SHORT $LN23@draw_3d_ob
$LN25@draw_3d_ob:

; 2408 : 			{
; 2409 : 
; 2410 : //				add_transparent_surface ();
; 2411 : 			}
; 2412 : 			else

  0020b	e9 51 07 00 00	 jmp	 $LN36@draw_3d_ob
$LN23@draw_3d_ob:

; 2413 : 			{
; 2414 : 
; 2415 : 				if ( ( current_object_3d_surface->luminous ) || ( current_object_3d_surface->additive ) )

  00210	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00215	66 8b 08	 mov	 cx, WORD PTR [eax]
  00218	66 c1 e9 07	 shr	 cx, 7
  0021c	66 83 e1 01	 and	 cx, 1
  00220	0f b7 d1	 movzx	 edx, cx
  00223	85 d2		 test	 edx, edx
  00225	75 1b		 jne	 SHORT $LN28@draw_3d_ob
  00227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0022c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0022f	66 c1 e9 05	 shr	 cx, 5
  00233	66 83 e1 01	 and	 cx, 1
  00237	0f b7 d1	 movzx	 edx, cx
  0023a	85 d2		 test	 edx, edx
  0023c	0f 84 80 02 00
	00		 je	 $LN26@draw_3d_ob
$LN28@draw_3d_ob:

; 2416 : 				{
; 2417 : 
; 2418 : 					int
; 2419 : 						ir,
; 2420 : 						ig,
; 2421 : 						ib;
; 2422 : 
; 2423 : 					float
; 2424 : 						r,
; 2425 : 						g,
; 2426 : 						b,
; 2427 : 						intensity;
; 2428 : 
; 2429 : 					r = current_object_3d_surface->red;

  00242	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00247	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  0024b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0024f	f3 0f 11 45 e4	 movss	 DWORD PTR _r$40[ebp], xmm0

; 2430 : 					g = current_object_3d_surface->green;

  00254	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00259	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  0025d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00261	f3 0f 11 45 e0	 movss	 DWORD PTR _g$39[ebp], xmm0

; 2431 : 					b = current_object_3d_surface->blue;

  00266	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0026b	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  0026f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00273	f3 0f 11 45 dc	 movss	 DWORD PTR _b$38[ebp], xmm0

; 2432 : 
; 2433 : 					intensity = r * 0.3 + g * 0.59 + b * 0.11;

  00278	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _r$40[ebp]
  0027d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00285	f3 0f 5a 4d e0	 cvtss2sd xmm1, DWORD PTR _g$39[ebp]
  0028a	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  00292	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00296	f3 0f 5a 4d dc	 cvtss2sd xmm1, DWORD PTR _b$38[ebp]
  0029b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  002a3	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002a7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ab	f3 0f 11 45 d8	 movss	 DWORD PTR _intensity$37[ebp], xmm0

; 2434 : 
; 2435 : 					intensity *= current_object_3d_dissolve_factor;

  002b0	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _intensity$37[ebp]
  002b5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  002bd	f3 0f 11 45 d8	 movss	 DWORD PTR _intensity$37[ebp], xmm0

; 2436 : 		
; 2437 : 					convert_float_to_int ( ( intensity * ambient_3d_light.colour.red ), &ir );

  002c2	8d 45 f0	 lea	 eax, DWORD PTR _ir$43[ebp]
  002c5	50		 push	 eax
  002c6	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _intensity$37[ebp]
  002cb	f3 0f 59 05 18
	00 00 00	 mulss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+24
  002d3	51		 push	 ecx
  002d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d9	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 2438 : 					convert_float_to_int ( ( intensity * ambient_3d_light.colour.green ), &ig );

  002de	8d 45 ec	 lea	 eax, DWORD PTR _ig$42[ebp]
  002e1	50		 push	 eax
  002e2	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _intensity$37[ebp]
  002e7	f3 0f 59 05 1c
	00 00 00	 mulss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+28
  002ef	51		 push	 ecx
  002f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f5	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 2439 : 					convert_float_to_int ( ( intensity * ambient_3d_light.colour.blue ), &ib );

  002fa	8d 45 e8	 lea	 eax, DWORD PTR _ib$41[ebp]
  002fd	50		 push	 eax
  002fe	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _intensity$37[ebp]
  00303	f3 0f 59 05 20
	00 00 00	 mulss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+32
  0030b	51		 push	 ecx
  0030c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00311	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 2440 : 	
; 2441 : 					set_d3d_material_emissive_colour ( ir, ig, ib, current_object_3d_surface->alpha );

  00316	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0031b	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  0031f	51		 push	 ecx
  00320	8b 55 e8	 mov	 edx, DWORD PTR _ib$41[ebp]
  00323	52		 push	 edx
  00324	8b 45 ec	 mov	 eax, DWORD PTR _ig$42[ebp]
  00327	50		 push	 eax
  00328	8b 4d f0	 mov	 ecx, DWORD PTR _ir$43[ebp]
  0032b	51		 push	 ecx
  0032c	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 2442 : 
; 2443 : 					if ( current_object_3d_surface->additive )

  00331	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00336	66 8b 08	 mov	 cx, WORD PTR [eax]
  00339	66 c1 e9 05	 shr	 cx, 5
  0033d	66 83 e1 01	 and	 cx, 1
  00341	0f b7 d1	 movzx	 edx, cx
  00344	85 d2		 test	 edx, edx
  00346	0f 84 60 01 00
	00		 je	 $LN29@draw_3d_ob

; 2444 : 					{
; 2445 : 
; 2446 : 						current_object_3d_texture_u_address = ( current_object_3d_surface->texture_wrapped_u ) ? D3DTADDRESS_WRAP: D3DTADDRESS_CLAMP;

  0034c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00351	66 8b 08	 mov	 cx, WORD PTR [eax]
  00354	66 c1 e9 0c	 shr	 cx, 12			; 0000000cH
  00358	66 83 e1 01	 and	 cx, 1
  0035c	0f b7 d1	 movzx	 edx, cx
  0035f	85 d2		 test	 edx, edx
  00361	74 0c		 je	 SHORT $LN56@draw_3d_ob
  00363	c7 85 f4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv237[ebp], 1
  0036d	eb 0a		 jmp	 SHORT $LN57@draw_3d_ob
$LN56@draw_3d_ob:
  0036f	c7 85 f4 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR tv237[ebp], 3
$LN57@draw_3d_ob:
  00379	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv237[ebp]
  0037f	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_u_address@@3HA, eax ; current_object_3d_texture_u_address

; 2447 : 						current_object_3d_texture_v_address = ( current_object_3d_surface->texture_wrapped_v ) ? D3DTADDRESS_WRAP: D3DTADDRESS_CLAMP;

  00384	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00389	66 8b 08	 mov	 cx, WORD PTR [eax]
  0038c	66 c1 e9 0d	 shr	 cx, 13			; 0000000dH
  00390	66 83 e1 01	 and	 cx, 1
  00394	0f b7 d1	 movzx	 edx, cx
  00397	85 d2		 test	 edx, edx
  00399	74 0c		 je	 SHORT $LN58@draw_3d_ob
  0039b	c7 85 f4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv243[ebp], 1
  003a5	eb 0a		 jmp	 SHORT $LN59@draw_3d_ob
$LN58@draw_3d_ob:
  003a7	c7 85 f4 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR tv243[ebp], 3
$LN59@draw_3d_ob:
  003b1	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv243[ebp]
  003b7	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_v_address@@3HA, eax ; current_object_3d_texture_v_address

; 2448 : 						current_object_3d_texture_filter = ( current_object_3d_surface->texture_filtered ) ? D3DTFG_LINEAR : D3DTFG_POINT;

  003bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  003c1	66 8b 08	 mov	 cx, WORD PTR [eax]
  003c4	66 c1 e9 0a	 shr	 cx, 10			; 0000000aH
  003c8	66 83 e1 01	 and	 cx, 1
  003cc	0f b7 d1	 movzx	 edx, cx
  003cf	85 d2		 test	 edx, edx
  003d1	74 0c		 je	 SHORT $LN60@draw_3d_ob
  003d3	c7 85 f4 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv249[ebp], 2
  003dd	eb 0a		 jmp	 SHORT $LN61@draw_3d_ob
$LN60@draw_3d_ob:
  003df	c7 85 f4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv249[ebp], 1
$LN61@draw_3d_ob:
  003e9	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv249[ebp]
  003ef	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_filter@@3HA, eax ; current_object_3d_texture_filter

; 2449 : 						current_object_3d_texture_mipmap = ( current_object_3d_surface->texture_mipmapped )	? D3DTFP_POINT : D3DTFP_NONE;

  003f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  003f9	66 8b 08	 mov	 cx, WORD PTR [eax]
  003fc	66 c1 e9 0b	 shr	 cx, 11			; 0000000bH
  00400	66 83 e1 01	 and	 cx, 1
  00404	0f b7 d1	 movzx	 edx, cx
  00407	85 d2		 test	 edx, edx
  00409	74 0c		 je	 SHORT $LN62@draw_3d_ob
  0040b	c7 85 f4 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv255[ebp], 2
  00415	eb 0a		 jmp	 SHORT $LN63@draw_3d_ob
$LN62@draw_3d_ob:
  00417	c7 85 f4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv255[ebp], 1
$LN63@draw_3d_ob:
  00421	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv255[ebp]
  00427	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_mipmap@@3HA, eax ; current_object_3d_texture_mipmap

; 2450 : 		
; 2451 : 						set_d3d_texture ( 0, current_object_3d_texture );

  0042c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00431	50		 push	 eax
  00432	6a 00		 push	 0
  00434	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 2452 : 						set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00439	6a 04		 push	 4
  0043b	6a 01		 push	 1
  0043d	6a 00		 push	 0
  0043f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2453 : 		
; 2454 : 						set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, current_object_3d_texture_u_address );

  00444	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  00449	50		 push	 eax
  0044a	6a 0d		 push	 13			; 0000000dH
  0044c	6a 00		 push	 0
  0044e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2455 : 						set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, current_object_3d_texture_v_address );

  00453	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00458	50		 push	 eax
  00459	6a 0e		 push	 14			; 0000000eH
  0045b	6a 00		 push	 0
  0045d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2456 : 						set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, current_object_3d_texture_filter );

  00462	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00467	50		 push	 eax
  00468	6a 10		 push	 16			; 00000010H
  0046a	6a 00		 push	 0
  0046c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2457 : 						set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, current_object_3d_texture_filter );

  00471	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00476	50		 push	 eax
  00477	6a 11		 push	 17			; 00000011H
  00479	6a 00		 push	 0
  0047b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2458 : 						set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, current_object_3d_texture_mipmap );

  00480	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00485	50		 push	 eax
  00486	6a 12		 push	 18			; 00000012H
  00488	6a 00		 push	 0
  0048a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2459 : 
; 2460 : 						set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, TRUE );

  0048f	6a 01		 push	 1
  00491	6a 1b		 push	 27			; 0000001bH
  00493	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2461 : 						set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_ONE );

  00498	6a 02		 push	 2
  0049a	6a 13		 push	 19			; 00000013H
  0049c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2462 : 						set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_ONE );

  004a1	6a 02		 push	 2
  004a3	6a 14		 push	 20			; 00000014H
  004a5	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2463 : 					}
; 2464 : 					else

  004aa	eb 14		 jmp	 SHORT $LN30@draw_3d_ob
$LN29@draw_3d_ob:

; 2465 : 					{
; 2466 : 
; 2467 : 						set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  004ac	6a 00		 push	 0
  004ae	6a 1b		 push	 27			; 0000001bH
  004b0	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2468 : 						set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  004b5	6a 01		 push	 1
  004b7	6a 01		 push	 1
  004b9	6a 00		 push	 0
  004bb	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN30@draw_3d_ob:

; 2469 : 					}
; 2470 : 				}
; 2471 : 				else

  004c0	eb 29		 jmp	 SHORT $LN27@draw_3d_ob
$LN26@draw_3d_ob:

; 2472 : 				{
; 2473 : 
; 2474 : 					set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  004c2	6a 00		 push	 0
  004c4	6a 1b		 push	 27			; 0000001bH
  004c6	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2475 : 					set_d3d_material_colour ( 255, 255, 255, current_object_3d_surface->alpha, 0 );

  004cb	6a 00		 push	 0
  004cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004d2	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  004d6	51		 push	 ecx
  004d7	68 ff 00 00 00	 push	 255			; 000000ffH
  004dc	68 ff 00 00 00	 push	 255			; 000000ffH
  004e1	68 ff 00 00 00	 push	 255			; 000000ffH
  004e6	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour
$LN27@draw_3d_ob:

; 2476 : 				}
; 2477 : 
; 2478 : 				set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, current_object_3d_specular );

  004eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  004f0	50		 push	 eax
  004f1	6a 1d		 push	 29			; 0000001dH
  004f3	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2479 : 
; 2480 : 				if ( current_object_3d_surface->detail )

  004f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004fd	66 8b 08	 mov	 cx, WORD PTR [eax]
  00500	66 d1 e9	 shr	 cx, 1
  00503	66 83 e1 01	 and	 cx, 1
  00507	0f b7 d1	 movzx	 edx, cx
  0050a	85 d2		 test	 edx, edx
  0050c	74 0b		 je	 SHORT $LN31@draw_3d_ob

; 2481 : 				{
; 2482 : 
; 2483 : 					set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, ELEVATED_ZBIAS );

  0050e	6a 02		 push	 2
  00510	6a 2f		 push	 47			; 0000002fH
  00512	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2484 : 				}
; 2485 : 				else

  00517	eb 09		 jmp	 SHORT $LN32@draw_3d_ob
$LN31@draw_3d_ob:

; 2486 : 				{
; 2487 : 
; 2488 : 					set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, NORMAL_ZBIAS );

  00519	6a 01		 push	 1
  0051b	6a 2f		 push	 47			; 0000002fH
  0051d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN32@draw_3d_ob:

; 2489 : 				}
; 2490 : 
; 2491 : 				if ( current_object_3d_surface->polygons )

  00522	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00527	66 8b 08	 mov	 cx, WORD PTR [eax]
  0052a	66 83 e1 01	 and	 cx, 1
  0052e	0f b7 d1	 movzx	 edx, cx
  00531	85 d2		 test	 edx, edx
  00533	74 15		 je	 SHORT $LN33@draw_3d_ob

; 2492 : 				{
; 2493 : 
; 2494 : 					object_3d_render_hardware_surface ( &objects_3d_data[object_number] );

  00535	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00539	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0053f	50		 push	 eax
  00540	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 2495 : 				}
; 2496 : 				else

  00545	e9 17 04 00 00	 jmp	 $LN36@draw_3d_ob
$LN33@draw_3d_ob:

; 2497 : 				{
; 2498 : 
; 2499 : 					int
; 2500 : 						point_count,
; 2501 : 						count;
; 2502 : 
; 2503 : 					D3DVERTEX
; 2504 : 						*vertices;
; 2505 : 
; 2506 : 					float
; 2507 : 						xmax,
; 2508 : 						ymax,
; 2509 : 						zmax;
; 2510 : 
; 2511 : 					if ( !f3d_vertex_lock ( d3d.hardware_untransformed_buffer, DDLOCK_DISCARDCONTENTS, ( LPVOID * ) &vertices ) )

  0054a	8d 45 cc	 lea	 eax, DWORD PTR _vertices$34[ebp]
  0054d	50		 push	 eax
  0054e	68 00 20 00 00	 push	 8192			; 00002000H
  00553	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00559	51		 push	 ecx
  0055a	e8 00 00 00 00	 call	 ?f3d_vertex_lock@@YGHPAUIDirect3DVertexBuffer7@@IPAPAX@Z ; f3d_vertex_lock
  0055f	85 c0		 test	 eax, eax
  00561	75 1c		 jne	 SHORT $LN35@draw_3d_ob

; 2512 : 					{
; 2513 : 
; 2514 : 						current_object_3d_point_list += current_object_3d_surface->number_of_faces * 2;

  00563	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00568	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0056c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00572	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00575	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2515 : 					}
; 2516 : 					else

  0057a	e9 e2 03 00 00	 jmp	 $LN36@draw_3d_ob
$LN35@draw_3d_ob:

; 2517 : 					{
; 2518 : 	
; 2519 : 						xmax = max ( fabs ( objects_3d_data[object_number].bounding_box.xmin ), fabs ( objects_3d_data[object_number].bounding_box.xmax ) );

  0057f	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00583	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00589	51		 push	 ecx
  0058a	f3 0f 10 44 01
	14		 movss	 xmm0, DWORD PTR [ecx+eax+20]
  00590	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00595	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0059a	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR $T12[ebp]
  005a0	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  005a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  005a9	51		 push	 ecx
  005aa	f3 0f 10 44 10
	10		 movss	 xmm0, DWORD PTR [eax+edx+16]
  005b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b5	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  005ba	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR $T11[ebp]
  005c0	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  005c6	51		 push	 ecx
  005c7	8d 95 20 ff ff
	ff		 lea	 edx, DWORD PTR $T11[ebp]
  005cd	52		 push	 edx
  005ce	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  005d3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005d7	f3 0f 11 45 c8	 movss	 DWORD PTR _xmax$33[ebp], xmm0

; 2520 : 						ymax = max ( fabs ( objects_3d_data[object_number].bounding_box.ymin ), fabs ( objects_3d_data[object_number].bounding_box.ymax ) );

  005dc	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  005e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  005e6	51		 push	 ecx
  005e7	f3 0f 10 44 01
	1c		 movss	 xmm0, DWORD PTR [ecx+eax+28]
  005ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f2	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  005f7	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR $T10[ebp]
  005fd	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00601	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00606	51		 push	 ecx
  00607	f3 0f 10 44 10
	18		 movss	 xmm0, DWORD PTR [eax+edx+24]
  0060d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00612	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00617	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR $T9[ebp]
  0061d	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00623	51		 push	 ecx
  00624	8d 95 18 ff ff
	ff		 lea	 edx, DWORD PTR $T9[ebp]
  0062a	52		 push	 edx
  0062b	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00630	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00634	f3 0f 11 45 c4	 movss	 DWORD PTR _ymax$32[ebp], xmm0

; 2521 : 						zmax = max ( fabs ( objects_3d_data[object_number].bounding_box.zmin ), fabs ( objects_3d_data[object_number].bounding_box.zmax ) );

  00639	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0063d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00643	51		 push	 ecx
  00644	f3 0f 10 44 01
	24		 movss	 xmm0, DWORD PTR [ecx+eax+36]
  0064a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064f	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00654	d9 9d 14 ff ff
	ff		 fstp	 DWORD PTR $T8[ebp]
  0065a	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  0065e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00663	51		 push	 ecx
  00664	f3 0f 10 44 10
	20		 movss	 xmm0, DWORD PTR [eax+edx+32]
  0066a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066f	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00674	d9 9d 10 ff ff
	ff		 fstp	 DWORD PTR $T7[ebp]
  0067a	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00680	51		 push	 ecx
  00681	8d 95 10 ff ff
	ff		 lea	 edx, DWORD PTR $T7[ebp]
  00687	52		 push	 edx
  00688	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0068d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00691	f3 0f 11 45 c0	 movss	 DWORD PTR _zmax$31[ebp], xmm0

; 2522 : 	
; 2523 : 						xmax = xmax / 32767.0;

  00696	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _xmax$33[ebp]
  0069b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  006a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a7	f3 0f 11 45 c8	 movss	 DWORD PTR _xmax$33[ebp], xmm0

; 2524 : 						ymax = ymax / 32767.0;

  006ac	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _ymax$32[ebp]
  006b1	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  006b9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006bd	f3 0f 11 45 c4	 movss	 DWORD PTR _ymax$32[ebp], xmm0

; 2525 : 						zmax = zmax / 32767.0;

  006c2	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _zmax$31[ebp]
  006c7	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  006cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d3	f3 0f 11 45 c0	 movss	 DWORD PTR _zmax$31[ebp], xmm0

; 2526 : 	
; 2527 : 						point_count = 0;

  006d8	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _point_count$36[ebp], 0

; 2528 : 	
; 2529 : 						for ( count = 0; count < current_object_3d_surface->number_of_faces; count++ )

  006df	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _count$35[ebp], 0
  006e6	eb 09		 jmp	 SHORT $LN7@draw_3d_ob
$LN5@draw_3d_ob:
  006e8	8b 45 d0	 mov	 eax, DWORD PTR _count$35[ebp]
  006eb	83 c0 01	 add	 eax, 1
  006ee	89 45 d0	 mov	 DWORD PTR _count$35[ebp], eax
$LN7@draw_3d_ob:
  006f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  006f6	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  006fa	39 4d d0	 cmp	 DWORD PTR _count$35[ebp], ecx
  006fd	0f 8d 02 02 00
	00		 jge	 $LN6@draw_3d_ob

; 2530 : 						{
; 2531 : 	
; 2532 : 							int
; 2533 : 								surface_point_index,
; 2534 : 								point_index;
; 2535 : 	
; 2536 : 							vec3d
; 2537 : 								normal;
; 2538 : 	
; 2539 : 							calculate_line_normal ( this_object_3d_info, &normal );

  00703	8d 45 ac	 lea	 eax, DWORD PTR _normal$28[ebp]
  00706	50		 push	 eax
  00707	8b 4d 0c	 mov	 ecx, DWORD PTR _this_object_3d_info$[ebp]
  0070a	51		 push	 ecx
  0070b	e8 00 00 00 00	 call	 ?calculate_line_normal@@YGXPAUOBJECT_3D_INFO@@PAUVEC3D@@@Z ; calculate_line_normal

; 2540 : 	
; 2541 : 							surface_point_index = current_object_3d_point_list->point;

  00710	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00715	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00718	89 4d bc	 mov	 DWORD PTR _surface_point_index$30[ebp], ecx

; 2542 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  0071b	8b 45 bc	 mov	 eax, DWORD PTR _surface_point_index$30[ebp]
  0071e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00724	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00728	89 55 b8	 mov	 DWORD PTR _point_index$29[ebp], edx

; 2543 : 	
; 2544 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  0072b	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0072f	6b 4d b8 06	 imul	 ecx, DWORD PTR _point_index$29[ebp], 6
  00733	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00739	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  0073d	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00741	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00745	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _xmax$33[ebp]
  0074a	8b 55 d4	 mov	 edx, DWORD PTR _point_count$36[ebp]
  0074d	c1 e2 05	 shl	 edx, 5
  00750	8b 45 cc	 mov	 eax, DWORD PTR _vertices$34[ebp]
  00753	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2545 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00758	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0075c	6b 4d b8 06	 imul	 ecx, DWORD PTR _point_index$29[ebp], 6
  00760	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00766	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  0076a	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  0076f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00773	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _ymax$32[ebp]
  00778	8b 55 d4	 mov	 edx, DWORD PTR _point_count$36[ebp]
  0077b	c1 e2 05	 shl	 edx, 5
  0077e	8b 45 cc	 mov	 eax, DWORD PTR _vertices$34[ebp]
  00781	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2546 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  00787	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0078b	6b 4d b8 06	 imul	 ecx, DWORD PTR _point_index$29[ebp], 6
  0078f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00795	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00799	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  0079e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  007a2	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _zmax$31[ebp]
  007a7	8b 55 d4	 mov	 edx, DWORD PTR _point_count$36[ebp]
  007aa	c1 e2 05	 shl	 edx, 5
  007ad	8b 45 cc	 mov	 eax, DWORD PTR _vertices$34[ebp]
  007b0	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2547 : 	
; 2548 : 	
; 2549 : 							vertices[point_count].nx = normal.x;

  007b6	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  007b9	c1 e0 05	 shl	 eax, 5
  007bc	8b 4d cc	 mov	 ecx, DWORD PTR _vertices$34[ebp]
  007bf	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _normal$28[ebp]
  007c4	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2550 : 							vertices[point_count].ny = normal.y;

  007ca	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  007cd	c1 e0 05	 shl	 eax, 5
  007d0	8b 4d cc	 mov	 ecx, DWORD PTR _vertices$34[ebp]
  007d3	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _normal$28[ebp+4]
  007d8	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2551 : 							vertices[point_count].nz = normal.z;

  007de	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  007e1	c1 e0 05	 shl	 eax, 5
  007e4	8b 4d cc	 mov	 ecx, DWORD PTR _vertices$34[ebp]
  007e7	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _normal$28[ebp+8]
  007ec	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2552 : 	
; 2553 : 							current_object_3d_point_list++;

  007f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  007f7	83 c0 01	 add	 eax, 1
  007fa	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2554 : 							point_count++;

  007ff	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  00802	83 c0 01	 add	 eax, 1
  00805	89 45 d4	 mov	 DWORD PTR _point_count$36[ebp], eax

; 2555 : 	
; 2556 : 							surface_point_index = current_object_3d_point_list->point;

  00808	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0080d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00810	89 4d bc	 mov	 DWORD PTR _surface_point_index$30[ebp], ecx

; 2557 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00813	8b 45 bc	 mov	 eax, DWORD PTR _surface_point_index$30[ebp]
  00816	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0081c	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00820	89 55 b8	 mov	 DWORD PTR _point_index$29[ebp], edx

; 2558 : 	
; 2559 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00823	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00827	6b 4d b8 06	 imul	 ecx, DWORD PTR _point_index$29[ebp], 6
  0082b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00831	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00835	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00839	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0083d	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _xmax$33[ebp]
  00842	8b 55 d4	 mov	 edx, DWORD PTR _point_count$36[ebp]
  00845	c1 e2 05	 shl	 edx, 5
  00848	8b 45 cc	 mov	 eax, DWORD PTR _vertices$34[ebp]
  0084b	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2560 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00850	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00854	6b 4d b8 06	 imul	 ecx, DWORD PTR _point_index$29[ebp], 6
  00858	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0085e	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00862	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  00867	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0086b	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _ymax$32[ebp]
  00870	8b 55 d4	 mov	 edx, DWORD PTR _point_count$36[ebp]
  00873	c1 e2 05	 shl	 edx, 5
  00876	8b 45 cc	 mov	 eax, DWORD PTR _vertices$34[ebp]
  00879	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2561 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  0087f	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00883	6b 4d b8 06	 imul	 ecx, DWORD PTR _point_index$29[ebp], 6
  00887	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0088d	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00891	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  00896	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0089a	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _zmax$31[ebp]
  0089f	8b 55 d4	 mov	 edx, DWORD PTR _point_count$36[ebp]
  008a2	c1 e2 05	 shl	 edx, 5
  008a5	8b 45 cc	 mov	 eax, DWORD PTR _vertices$34[ebp]
  008a8	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2562 : 	
; 2563 : 							vertices[point_count].nx = normal.x;

  008ae	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  008b1	c1 e0 05	 shl	 eax, 5
  008b4	8b 4d cc	 mov	 ecx, DWORD PTR _vertices$34[ebp]
  008b7	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _normal$28[ebp]
  008bc	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2564 : 							vertices[point_count].ny = normal.y;

  008c2	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  008c5	c1 e0 05	 shl	 eax, 5
  008c8	8b 4d cc	 mov	 ecx, DWORD PTR _vertices$34[ebp]
  008cb	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _normal$28[ebp+4]
  008d0	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2565 : 							vertices[point_count].nz = normal.z;

  008d6	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  008d9	c1 e0 05	 shl	 eax, 5
  008dc	8b 4d cc	 mov	 ecx, DWORD PTR _vertices$34[ebp]
  008df	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _normal$28[ebp+8]
  008e4	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2566 : 	
; 2567 : 							current_object_3d_point_list++;

  008ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  008ef	83 c0 01	 add	 eax, 1
  008f2	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2568 : 							point_count++;

  008f7	8b 45 d4	 mov	 eax, DWORD PTR _point_count$36[ebp]
  008fa	83 c0 01	 add	 eax, 1
  008fd	89 45 d4	 mov	 DWORD PTR _point_count$36[ebp], eax

; 2569 : 						}

  00900	e9 e3 fd ff ff	 jmp	 $LN5@draw_3d_ob
$LN6@draw_3d_ob:

; 2570 : 	
; 2571 : 						ASSERT ( point_count < 2048 );

  00905	81 7d d4 00 08
	00 00		 cmp	 DWORD PTR _point_count$36[ebp], 2048 ; 00000800H
  0090c	7c 1a		 jl	 SHORT $LN37@draw_3d_ob
  0090e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA
  00913	05 de 00 00 00	 add	 eax, 222		; 000000deH
  00918	50		 push	 eax
  00919	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@
  0091e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@
  00923	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN37@draw_3d_ob:

; 2572 : 	
; 2573 : 						f3d_vertex_unlock ( d3d.hardware_untransformed_buffer );

  00928	a1 5c 24 02 00	 mov	 eax, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  0092d	50		 push	 eax
  0092e	e8 00 00 00 00	 call	 ?f3d_vertex_unlock@@YGXPAUIDirect3DVertexBuffer7@@@Z ; f3d_vertex_unlock

; 2574 : 	
; 2575 : 						f3d_draw_vb ( D3DPT_LINELIST, d3d.hardware_untransformed_buffer,

  00933	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00938	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0093c	d1 e1		 shl	 ecx, 1
  0093e	51		 push	 ecx
  0093f	68 00 00 00 00	 push	 OFFSET ?d3d_hardware_vertex_indices@@3PAGA ; d3d_hardware_vertex_indices
  00944	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0094a	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  0094e	d1 e0		 shl	 eax, 1
  00950	50		 push	 eax
  00951	6a 00		 push	 0
  00953	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00959	51		 push	 ecx
  0095a	6a 02		 push	 2
  0095c	e8 00 00 00 00	 call	 ?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z ; f3d_draw_vb
$LN36@draw_3d_ob:

; 2576 : 																							0,
; 2577 : 																							current_object_3d_surface->number_of_faces * 2,
; 2578 : 																							d3d_hardware_vertex_indices,
; 2579 : 																							current_object_3d_surface->number_of_faces * 2 );
; 2580 : 					}
; 2581 : 				}
; 2582 : 			}
; 2583 : 		}
; 2584 : 		else

  00961	e9 d5 05 00 00	 jmp	 $LN48@draw_3d_ob
$LN19@draw_3d_ob:

; 2585 : 		{
; 2586 : 
; 2587 : 			set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  00966	6a 00		 push	 0
  00968	6a 1b		 push	 27			; 0000001bH
  0096a	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2588 : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  0096f	6a 01		 push	 1
  00971	6a 01		 push	 1
  00973	6a 00		 push	 0
  00975	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2589 : 
; 2590 : 			if ( ( current_object_3d_surface->additive ) || ( current_object_3d_surface->translucent ) )

  0097a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0097f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00982	66 c1 e9 05	 shr	 cx, 5
  00986	66 83 e1 01	 and	 cx, 1
  0098a	0f b7 d1	 movzx	 edx, cx
  0098d	85 d2		 test	 edx, edx
  0098f	75 17		 jne	 SHORT $LN40@draw_3d_ob
  00991	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00996	66 8b 08	 mov	 cx, WORD PTR [eax]
  00999	66 c1 e9 06	 shr	 cx, 6
  0099d	66 83 e1 01	 and	 cx, 1
  009a1	0f b7 d1	 movzx	 edx, cx
  009a4	85 d2		 test	 edx, edx
  009a6	74 05		 je	 SHORT $LN38@draw_3d_ob
$LN40@draw_3d_ob:

; 2591 : 			{
; 2592 : 
; 2593 : //				add_transparent_surface ();
; 2594 : 			}
; 2595 : 			else

  009a8	e9 8e 05 00 00	 jmp	 $LN48@draw_3d_ob
$LN38@draw_3d_ob:

; 2596 : 			{
; 2597 : 	
; 2598 : 				int
; 2599 : 					iint;
; 2600 : 
; 2601 : 				float
; 2602 : 					r,
; 2603 : 					g,
; 2604 : 					b,
; 2605 : 					intensity;
; 2606 : 
; 2607 : 				r = current_object_3d_surface->red;

  009ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  009b2	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  009b6	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  009ba	f3 0f 11 45 a4	 movss	 DWORD PTR _r$26[ebp], xmm0

; 2608 : 				g = current_object_3d_surface->green;

  009bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  009c4	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  009c8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  009cc	f3 0f 11 45 a0	 movss	 DWORD PTR _g$25[ebp], xmm0

; 2609 : 				b = current_object_3d_surface->blue;

  009d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  009d6	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  009da	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  009de	f3 0f 11 45 9c	 movss	 DWORD PTR _b$24[ebp], xmm0

; 2610 : 
; 2611 : 				intensity = r * 0.3 + g * 0.59 + b * 0.11;

  009e3	f3 0f 5a 45 a4	 cvtss2sd xmm0, DWORD PTR _r$26[ebp]
  009e8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  009f0	f3 0f 5a 4d a0	 cvtss2sd xmm1, DWORD PTR _g$25[ebp]
  009f5	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  009fd	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00a01	f3 0f 5a 4d 9c	 cvtss2sd xmm1, DWORD PTR _b$24[ebp]
  00a06	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  00a0e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00a12	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a16	f3 0f 11 45 98	 movss	 DWORD PTR _intensity$23[ebp], xmm0

; 2612 : 
; 2613 : 				convert_float_to_int ( intensity, &iint );

  00a1b	8d 45 a8	 lea	 eax, DWORD PTR _iint$27[ebp]
  00a1e	50		 push	 eax
  00a1f	51		 push	 ecx
  00a20	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _intensity$23[ebp]
  00a25	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a2a	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 2614 : 
; 2615 : 				set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, current_object_3d_specular );

  00a2f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00a34	50		 push	 eax
  00a35	6a 1d		 push	 29			; 0000001dH
  00a37	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2616 : 	
; 2617 : 				if ( current_object_3d_surface->luminous )

  00a3c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a41	66 8b 08	 mov	 cx, WORD PTR [eax]
  00a44	66 c1 e9 07	 shr	 cx, 7
  00a48	66 83 e1 01	 and	 cx, 1
  00a4c	0f b7 d1	 movzx	 edx, cx
  00a4f	85 d2		 test	 edx, edx
  00a51	74 1d		 je	 SHORT $LN41@draw_3d_ob

; 2618 : 				{
; 2619 : 
; 2620 : 					set_d3d_material_emissive_colour ( iint, iint, iint, current_object_3d_surface->alpha );

  00a53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a58	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00a5c	51		 push	 ecx
  00a5d	8b 55 a8	 mov	 edx, DWORD PTR _iint$27[ebp]
  00a60	52		 push	 edx
  00a61	8b 45 a8	 mov	 eax, DWORD PTR _iint$27[ebp]
  00a64	50		 push	 eax
  00a65	8b 4d a8	 mov	 ecx, DWORD PTR _iint$27[ebp]
  00a68	51		 push	 ecx
  00a69	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 2621 : 				}
; 2622 : 				else

  00a6e	eb 29		 jmp	 SHORT $LN42@draw_3d_ob
$LN41@draw_3d_ob:

; 2623 : 				{
; 2624 : 
; 2625 : 					set_d3d_material_colour ( 255, 255, 255, current_object_3d_surface->alpha, current_object_3d_surface->specularity );

  00a70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a75	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  00a79	51		 push	 ecx
  00a7a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a80	0f b6 42 0f	 movzx	 eax, BYTE PTR [edx+15]
  00a84	50		 push	 eax
  00a85	68 ff 00 00 00	 push	 255			; 000000ffH
  00a8a	68 ff 00 00 00	 push	 255			; 000000ffH
  00a8f	68 ff 00 00 00	 push	 255			; 000000ffH
  00a94	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour
$LN42@draw_3d_ob:

; 2626 : 				}
; 2627 : 
; 2628 : 				if ( current_object_3d_surface->detail )

  00a99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a9e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00aa1	66 d1 e9	 shr	 cx, 1
  00aa4	66 83 e1 01	 and	 cx, 1
  00aa8	0f b7 d1	 movzx	 edx, cx
  00aab	85 d2		 test	 edx, edx
  00aad	74 0b		 je	 SHORT $LN43@draw_3d_ob

; 2629 : 				{
; 2630 : 
; 2631 : 					set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, ELEVATED_ZBIAS );

  00aaf	6a 02		 push	 2
  00ab1	6a 2f		 push	 47			; 0000002fH
  00ab3	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2632 : 				}
; 2633 : 				else

  00ab8	eb 09		 jmp	 SHORT $LN44@draw_3d_ob
$LN43@draw_3d_ob:

; 2634 : 				{
; 2635 : 
; 2636 : 					set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, NORMAL_ZBIAS );

  00aba	6a 01		 push	 1
  00abc	6a 2f		 push	 47			; 0000002fH
  00abe	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN44@draw_3d_ob:

; 2637 : 				}
; 2638 : 
; 2639 : 				if ( current_object_3d_surface->polygons )

  00ac3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00ac8	66 8b 08	 mov	 cx, WORD PTR [eax]
  00acb	66 83 e1 01	 and	 cx, 1
  00acf	0f b7 d1	 movzx	 edx, cx
  00ad2	85 d2		 test	 edx, edx
  00ad4	74 15		 je	 SHORT $LN45@draw_3d_ob

; 2640 : 				{
; 2641 : 	
; 2642 : 					object_3d_render_hardware_surface ( &objects_3d_data[object_number] );

  00ad6	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00ada	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00ae0	50		 push	 eax
  00ae1	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 2643 : 				}
; 2644 : 				else

  00ae6	e9 50 04 00 00	 jmp	 $LN48@draw_3d_ob
$LN45@draw_3d_ob:

; 2645 : 				{
; 2646 : 
; 2647 : 					int
; 2648 : 						point_count,
; 2649 : 						count;
; 2650 : 
; 2651 : 					D3DVERTEX
; 2652 : 						*vertices;
; 2653 : 
; 2654 : 					float
; 2655 : 						xmax,
; 2656 : 						ymax,
; 2657 : 						zmax;
; 2658 : 
; 2659 : 					if ( !f3d_vertex_lock ( d3d.hardware_untransformed_buffer, DDLOCK_DISCARDCONTENTS, ( LPVOID * ) &vertices ) )

  00aeb	8d 45 8c	 lea	 eax, DWORD PTR _vertices$20[ebp]
  00aee	50		 push	 eax
  00aef	68 00 20 00 00	 push	 8192			; 00002000H
  00af4	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00afa	51		 push	 ecx
  00afb	e8 00 00 00 00	 call	 ?f3d_vertex_lock@@YGHPAUIDirect3DVertexBuffer7@@IPAPAX@Z ; f3d_vertex_lock
  00b00	85 c0		 test	 eax, eax
  00b02	75 1c		 jne	 SHORT $LN47@draw_3d_ob

; 2660 : 					{
; 2661 : 
; 2662 : 						current_object_3d_point_list += current_object_3d_surface->number_of_faces * 2;

  00b04	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b09	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00b0d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00b13	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00b16	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2663 : 					}
; 2664 : 					else

  00b1b	e9 1b 04 00 00	 jmp	 $LN48@draw_3d_ob
$LN47@draw_3d_ob:

; 2665 : 					{
; 2666 : 						
; 2667 : 						xmax = max ( fabs ( objects_3d_data[object_number].bounding_box.xmin ), fabs ( objects_3d_data[object_number].bounding_box.xmax ) );

  00b20	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00b24	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00b2a	51		 push	 ecx
  00b2b	f3 0f 10 44 01
	14		 movss	 xmm0, DWORD PTR [ecx+eax+20]
  00b31	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b36	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00b3b	d9 9d 0c ff ff
	ff		 fstp	 DWORD PTR $T6[ebp]
  00b41	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00b45	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00b4a	51		 push	 ecx
  00b4b	f3 0f 10 44 10
	10		 movss	 xmm0, DWORD PTR [eax+edx+16]
  00b51	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b56	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00b5b	d9 9d 08 ff ff
	ff		 fstp	 DWORD PTR $T5[ebp]
  00b61	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00b67	51		 push	 ecx
  00b68	8d 95 08 ff ff
	ff		 lea	 edx, DWORD PTR $T5[ebp]
  00b6e	52		 push	 edx
  00b6f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00b74	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00b78	f3 0f 11 45 88	 movss	 DWORD PTR _xmax$19[ebp], xmm0

; 2668 : 						ymax = max ( fabs ( objects_3d_data[object_number].bounding_box.ymin ), fabs ( objects_3d_data[object_number].bounding_box.ymax ) );

  00b7d	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00b81	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00b87	51		 push	 ecx
  00b88	f3 0f 10 44 01
	1c		 movss	 xmm0, DWORD PTR [ecx+eax+28]
  00b8e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b93	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00b98	d9 9d 04 ff ff
	ff		 fstp	 DWORD PTR $T4[ebp]
  00b9e	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00ba2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00ba7	51		 push	 ecx
  00ba8	f3 0f 10 44 10
	18		 movss	 xmm0, DWORD PTR [eax+edx+24]
  00bae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bb3	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00bb8	d9 9d 00 ff ff
	ff		 fstp	 DWORD PTR $T3[ebp]
  00bbe	8d 8d 04 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00bc4	51		 push	 ecx
  00bc5	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00bcb	52		 push	 edx
  00bcc	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00bd1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00bd5	f3 0f 11 45 84	 movss	 DWORD PTR _ymax$18[ebp], xmm0

; 2669 : 						zmax = max ( fabs ( objects_3d_data[object_number].bounding_box.zmin ), fabs ( objects_3d_data[object_number].bounding_box.zmax ) );

  00bda	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00bde	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00be4	51		 push	 ecx
  00be5	f3 0f 10 44 01
	24		 movss	 xmm0, DWORD PTR [ecx+eax+36]
  00beb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bf0	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00bf5	d9 9d fc fe ff
	ff		 fstp	 DWORD PTR $T2[ebp]
  00bfb	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00bff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00c04	51		 push	 ecx
  00c05	f3 0f 10 44 10
	20		 movss	 xmm0, DWORD PTR [eax+edx+32]
  00c0b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c10	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00c15	d9 9d f8 fe ff
	ff		 fstp	 DWORD PTR $T1[ebp]
  00c1b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00c21	51		 push	 ecx
  00c22	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00c28	52		 push	 edx
  00c29	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00c2e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c32	f3 0f 11 45 80	 movss	 DWORD PTR _zmax$17[ebp], xmm0

; 2670 : 	
; 2671 : 						xmax = xmax / 32767.0;

  00c37	f3 0f 5a 45 88	 cvtss2sd xmm0, DWORD PTR _xmax$19[ebp]
  00c3c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00c44	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c48	f3 0f 11 45 88	 movss	 DWORD PTR _xmax$19[ebp], xmm0

; 2672 : 						ymax = ymax / 32767.0;

  00c4d	f3 0f 5a 45 84	 cvtss2sd xmm0, DWORD PTR _ymax$18[ebp]
  00c52	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00c5a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c5e	f3 0f 11 45 84	 movss	 DWORD PTR _ymax$18[ebp], xmm0

; 2673 : 						zmax = zmax / 32767.0;

  00c63	f3 0f 5a 45 80	 cvtss2sd xmm0, DWORD PTR _zmax$17[ebp]
  00c68	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00c70	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c74	f3 0f 11 45 80	 movss	 DWORD PTR _zmax$17[ebp], xmm0

; 2674 : 	
; 2675 : 						point_count = 0;

  00c79	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _point_count$22[ebp], 0

; 2676 : 	
; 2677 : 						for ( count = 0; count < current_object_3d_surface->number_of_faces; count++ )

  00c80	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _count$21[ebp], 0
  00c87	eb 09		 jmp	 SHORT $LN10@draw_3d_ob
$LN8@draw_3d_ob:
  00c89	8b 45 90	 mov	 eax, DWORD PTR _count$21[ebp]
  00c8c	83 c0 01	 add	 eax, 1
  00c8f	89 45 90	 mov	 DWORD PTR _count$21[ebp], eax
$LN10@draw_3d_ob:
  00c92	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00c97	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00c9b	39 4d 90	 cmp	 DWORD PTR _count$21[ebp], ecx
  00c9e	0f 8d 3b 02 00
	00		 jge	 $LN9@draw_3d_ob

; 2678 : 						{
; 2679 : 	
; 2680 : 							int
; 2681 : 								surface_point_index,
; 2682 : 								point_index;
; 2683 : 	
; 2684 : 							vec3d
; 2685 : 								normal;
; 2686 : 	
; 2687 : 							calculate_line_normal ( this_object_3d_info, &normal );

  00ca4	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _normal$14[ebp]
  00caa	50		 push	 eax
  00cab	8b 4d 0c	 mov	 ecx, DWORD PTR _this_object_3d_info$[ebp]
  00cae	51		 push	 ecx
  00caf	e8 00 00 00 00	 call	 ?calculate_line_normal@@YGXPAUOBJECT_3D_INFO@@PAUVEC3D@@@Z ; calculate_line_normal

; 2688 : 	
; 2689 : 							surface_point_index = current_object_3d_point_list->point;

  00cb4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00cb9	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00cbc	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _surface_point_index$16[ebp], ecx

; 2690 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00cc2	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _surface_point_index$16[ebp]
  00cc8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00cce	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00cd2	89 95 78 ff ff
	ff		 mov	 DWORD PTR _point_index$15[ebp], edx

; 2691 : 	
; 2692 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00cd8	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00cdc	6b 8d 78 ff ff
	ff 06		 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00ce3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00ce9	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00ced	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00cf1	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00cf5	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR _xmax$19[ebp]
  00cfa	8b 55 94	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00cfd	c1 e2 05	 shl	 edx, 5
  00d00	8b 45 8c	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00d03	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2693 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00d08	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00d0c	6b 8d 78 ff ff
	ff 06		 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00d13	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00d19	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00d1d	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  00d22	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00d26	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _ymax$18[ebp]
  00d2b	8b 55 94	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00d2e	c1 e2 05	 shl	 edx, 5
  00d31	8b 45 8c	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00d34	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2694 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  00d3a	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00d3e	6b 8d 78 ff ff
	ff 06		 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00d45	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00d4b	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00d4f	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  00d54	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00d58	f3 0f 59 45 80	 mulss	 xmm0, DWORD PTR _zmax$17[ebp]
  00d5d	8b 55 94	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00d60	c1 e2 05	 shl	 edx, 5
  00d63	8b 45 8c	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00d66	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2695 : 	
; 2696 : 							vertices[point_count].nx = normal.x;

  00d6c	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00d6f	c1 e0 05	 shl	 eax, 5
  00d72	8b 4d 8c	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00d75	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _normal$14[ebp]
  00d7d	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2697 : 							vertices[point_count].ny = normal.y;

  00d83	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00d86	c1 e0 05	 shl	 eax, 5
  00d89	8b 4d 8c	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00d8c	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _normal$14[ebp+4]
  00d94	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2698 : 							vertices[point_count].nz = normal.z;

  00d9a	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00d9d	c1 e0 05	 shl	 eax, 5
  00da0	8b 4d 8c	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00da3	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _normal$14[ebp+8]
  00dab	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2699 : 	
; 2700 : 							current_object_3d_point_list++;

  00db1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00db6	83 c0 01	 add	 eax, 1
  00db9	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2701 : 							point_count++;

  00dbe	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00dc1	83 c0 01	 add	 eax, 1
  00dc4	89 45 94	 mov	 DWORD PTR _point_count$22[ebp], eax

; 2702 : 	
; 2703 : 							surface_point_index = current_object_3d_point_list->point;

  00dc7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00dcc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00dcf	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _surface_point_index$16[ebp], ecx

; 2704 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00dd5	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _surface_point_index$16[ebp]
  00ddb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00de1	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00de5	89 95 78 ff ff
	ff		 mov	 DWORD PTR _point_index$15[ebp], edx

; 2705 : 	
; 2706 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00deb	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00def	6b 8d 78 ff ff
	ff 06		 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00df6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00dfc	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00e00	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00e04	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00e08	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR _xmax$19[ebp]
  00e0d	8b 55 94	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00e10	c1 e2 05	 shl	 edx, 5
  00e13	8b 45 8c	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00e16	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2707 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00e1b	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00e1f	6b 8d 78 ff ff
	ff 06		 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00e26	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00e2c	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00e30	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  00e35	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00e39	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _ymax$18[ebp]
  00e3e	8b 55 94	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00e41	c1 e2 05	 shl	 edx, 5
  00e44	8b 45 8c	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00e47	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2708 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  00e4d	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00e51	6b 8d 78 ff ff
	ff 06		 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00e58	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00e5e	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00e62	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  00e67	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00e6b	f3 0f 59 45 80	 mulss	 xmm0, DWORD PTR _zmax$17[ebp]
  00e70	8b 55 94	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00e73	c1 e2 05	 shl	 edx, 5
  00e76	8b 45 8c	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00e79	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2709 : 	
; 2710 : 							vertices[point_count].nx = normal.x;

  00e7f	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00e82	c1 e0 05	 shl	 eax, 5
  00e85	8b 4d 8c	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00e88	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _normal$14[ebp]
  00e90	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2711 : 							vertices[point_count].ny = normal.y;

  00e96	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00e99	c1 e0 05	 shl	 eax, 5
  00e9c	8b 4d 8c	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00e9f	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _normal$14[ebp+4]
  00ea7	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2712 : 							vertices[point_count].nz = normal.z;

  00ead	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00eb0	c1 e0 05	 shl	 eax, 5
  00eb3	8b 4d 8c	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00eb6	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _normal$14[ebp+8]
  00ebe	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2713 : 	
; 2714 : 							current_object_3d_point_list++;

  00ec4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00ec9	83 c0 01	 add	 eax, 1
  00ecc	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2715 : 							point_count++;

  00ed1	8b 45 94	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00ed4	83 c0 01	 add	 eax, 1
  00ed7	89 45 94	 mov	 DWORD PTR _point_count$22[ebp], eax

; 2716 : 						}

  00eda	e9 aa fd ff ff	 jmp	 $LN8@draw_3d_ob
$LN9@draw_3d_ob:

; 2717 : 	
; 2718 : 						ASSERT ( point_count < 2048 );

  00edf	81 7d 94 00 08
	00 00		 cmp	 DWORD PTR _point_count$22[ebp], 2048 ; 00000800H
  00ee6	7c 1a		 jl	 SHORT $LN49@draw_3d_ob
  00ee8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA
  00eed	05 71 01 00 00	 add	 eax, 369		; 00000171H
  00ef2	50		 push	 eax
  00ef3	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@
  00ef8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@
  00efd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN49@draw_3d_ob:

; 2719 : 	
; 2720 : 						f3d_vertex_unlock ( d3d.hardware_untransformed_buffer );

  00f02	a1 5c 24 02 00	 mov	 eax, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00f07	50		 push	 eax
  00f08	e8 00 00 00 00	 call	 ?f3d_vertex_unlock@@YGXPAUIDirect3DVertexBuffer7@@@Z ; f3d_vertex_unlock

; 2721 : 	
; 2722 : 						f3d_draw_vb ( D3DPT_LINELIST, d3d.hardware_untransformed_buffer,

  00f0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f12	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00f16	d1 e1		 shl	 ecx, 1
  00f18	51		 push	 ecx
  00f19	68 00 00 00 00	 push	 OFFSET ?d3d_hardware_vertex_indices@@3PAGA ; d3d_hardware_vertex_indices
  00f1e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f24	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00f28	d1 e0		 shl	 eax, 1
  00f2a	50		 push	 eax
  00f2b	6a 00		 push	 0
  00f2d	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00f33	51		 push	 ecx
  00f34	6a 02		 push	 2
  00f36	e8 00 00 00 00	 call	 ?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z ; f3d_draw_vb
$LN48@draw_3d_ob:

; 2723 : 																							0,
; 2724 : 																							current_object_3d_surface->number_of_faces * 2,
; 2725 : 																							d3d_hardware_vertex_indices,
; 2726 : 																							current_object_3d_surface->number_of_faces * 2 );
; 2727 : 					}
; 2728 : 				}
; 2729 : 			}
; 2730 : 		}
; 2731 : 
; 2732 : 		//
; 2733 : 		// Move onto the next surface
; 2734 : 		//
; 2735 : 
; 2736 : 		if ( current_object_3d_surface->polygons )

  00f3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f40	66 8b 08	 mov	 cx, WORD PTR [eax]
  00f43	66 83 e1 01	 and	 cx, 1
  00f47	0f b7 d1	 movzx	 edx, cx
  00f4a	85 d2		 test	 edx, edx
  00f4c	74 70		 je	 SHORT $LN12@draw_3d_ob

; 2737 : 		{
; 2738 : 
; 2739 : 			int
; 2740 : 				faces_left;
; 2741 : 
; 2742 : 			//
; 2743 : 			// Only update point list if they're polygons - lines already have been updated.
; 2744 : 			//
; 2745 : 
; 2746 : 			for ( faces_left = current_object_3d_surface->number_of_faces; faces_left > 0; faces_left-- )

  00f4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f53	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00f57	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _faces_left$13[ebp], ecx
  00f5d	eb 0f		 jmp	 SHORT $LN13@draw_3d_ob
$LN11@draw_3d_ob:
  00f5f	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _faces_left$13[ebp]
  00f65	83 e8 01	 sub	 eax, 1
  00f68	89 85 68 ff ff
	ff		 mov	 DWORD PTR _faces_left$13[ebp], eax
$LN13@draw_3d_ob:
  00f6e	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _faces_left$13[ebp], 0
  00f75	7e 47		 jle	 SHORT $LN12@draw_3d_ob

; 2747 : 			{
; 2748 : 
; 2749 : 				current_object_3d_point_list += current_object_3d_faces->number_of_points;

  00f77	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A ; current_object_3d_faces
  00f7c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00f7f	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00f85	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, ecx ; current_object_3d_point_list

; 2750 : 
; 2751 : 				if ( !current_object_3d_surface->smoothed )

  00f8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f90	66 8b 08	 mov	 cx, WORD PTR [eax]
  00f93	66 c1 e9 02	 shr	 cx, 2
  00f97	66 83 e1 01	 and	 cx, 1
  00f9b	0f b7 d1	 movzx	 edx, cx
  00f9e	85 d2		 test	 edx, edx
  00fa0	75 0d		 jne	 SHORT $LN51@draw_3d_ob

; 2752 : 				{
; 2753 : 
; 2754 : 					current_object_3d_face_normal_list++;

  00fa2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00fa7	83 c0 02	 add	 eax, 2
  00faa	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, eax ; current_object_3d_face_normal_list
$LN51@draw_3d_ob:

; 2755 : 				}
; 2756 : 
; 2757 : 				current_object_3d_faces++;

  00faf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A ; current_object_3d_faces
  00fb4	83 c0 01	 add	 eax, 1
  00fb7	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A, eax ; current_object_3d_faces

; 2758 : 			}

  00fbc	eb a1		 jmp	 SHORT $LN11@draw_3d_ob
$LN12@draw_3d_ob:

; 2759 : 		}
; 2760 : 
; 2761 : 		current_object_3d_surface_point_list += number_of_surface_points;

  00fbe	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$45[ebp]
  00fc1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00fc7	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00fca	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_list

; 2762 : 
; 2763 : 		if ( current_object_3d_surface->smoothed )

  00fd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00fd5	66 8b 08	 mov	 cx, WORD PTR [eax]
  00fd8	66 c1 e9 02	 shr	 cx, 2
  00fdc	66 83 e1 01	 and	 cx, 1
  00fe0	0f b7 d1	 movzx	 edx, cx
  00fe3	85 d2		 test	 edx, edx
  00fe5	74 12		 je	 SHORT $LN52@draw_3d_ob

; 2764 : 		{
; 2765 : 	
; 2766 : 			current_object_3d_surface_point_normal_list += number_of_surface_points;

  00fe7	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$45[ebp]
  00fea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00ff0	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00ff3	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_normal_list
$LN52@draw_3d_ob:

; 2767 : 		}
; 2768 : 
; 2769 : 		if ( current_object_3d_surface->textured )

  00ff9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00ffe	66 8b 08	 mov	 cx, WORD PTR [eax]
  01001	66 c1 e9 03	 shr	 cx, 3
  01005	66 83 e1 01	 and	 cx, 1
  01009	0f b7 d1	 movzx	 edx, cx
  0100c	85 d2		 test	 edx, edx
  0100e	74 12		 je	 SHORT $LN53@draw_3d_ob

; 2770 : 		{
; 2771 : 
; 2772 : 			current_object_3d_surface_point_texture_list += number_of_surface_points;

  01010	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$45[ebp]
  01013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  01019	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  0101c	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, edx ; current_object_3d_surface_point_texture_list
$LN53@draw_3d_ob:

; 2773 : 		}
; 2774 : 
; 2775 : 		if ( current_object_3d_surface->has_luminosity_texture )

  01022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  01027	66 8b 08	 mov	 cx, WORD PTR [eax]
  0102a	66 c1 e9 04	 shr	 cx, 4
  0102e	66 83 e1 01	 and	 cx, 1
  01032	0f b7 d1	 movzx	 edx, cx
  01035	85 d2		 test	 edx, edx
  01037	74 12		 je	 SHORT $LN54@draw_3d_ob

; 2776 : 		{
; 2777 : 
; 2778 : 			current_object_3d_surface_point_texture_list += number_of_surface_points;

  01039	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$45[ebp]
  0103c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  01042	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  01045	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, edx ; current_object_3d_surface_point_texture_list
$LN54@draw_3d_ob:

; 2779 : 		}
; 2780 : 
; 2781 : 		current_object_3d_surface++;

  0104b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  01050	83 c0 10	 add	 eax, 16			; 00000010H
  01053	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, eax ; current_object_3d_surface

; 2782 : 	}

  01058	e9 6e f0 ff ff	 jmp	 $LN2@draw_3d_ob
$LN3@draw_3d_ob:

; 2783 : }

  0105d	5f		 pop	 edi
  0105e	5e		 pop	 esi
  0105f	5b		 pop	 ebx
  01060	8b e5		 mov	 esp, ebp
  01062	5d		 pop	 ebp
  01063	c2 08 00	 ret	 8
?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ENDP ; draw_3d_object_untextured_hardware_faces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z
_TEXT	SEGMENT
tv320 = -224						; size = 4
tv314 = -224						; size = 4
tv308 = -224						; size = 4
tv302 = -224						; size = 4
tv226 = -224						; size = 4
tv220 = -224						; size = 4
tv214 = -224						; size = 4
tv208 = -224						; size = 4
$T1 = -220						; size = 4
$T2 = -216						; size = 4
$T3 = -212						; size = 4
$T4 = -208						; size = 4
$T5 = -204						; size = 4
$T6 = -200						; size = 4
$T7 = -196						; size = 4
$T8 = -192						; size = 4
$T9 = -188						; size = 4
$T10 = -184						; size = 4
$T11 = -180						; size = 4
$T12 = -176						; size = 4
_faces_left$13 = -108					; size = 4
_normal$14 = -104					; size = 12
_point_index$15 = -92					; size = 4
_surface_point_index$16 = -88				; size = 4
_zmax$17 = -84						; size = 4
_ymax$18 = -80						; size = 4
_xmax$19 = -76						; size = 4
_vertices$20 = -72					; size = 4
_count$21 = -68						; size = 4
_point_count$22 = -64					; size = 4
_normal$23 = -60					; size = 12
_point_index$24 = -48					; size = 4
_surface_point_index$25 = -44				; size = 4
_zmax$26 = -40						; size = 4
_ymax$27 = -36						; size = 4
_xmax$28 = -32						; size = 4
_vertices$29 = -28					; size = 4
_count$30 = -24						; size = 4
_point_count$31 = -20					; size = 4
_frame$32 = -16						; size = 4
_frame$33 = -12						; size = 4
_number_of_surface_points$34 = -8			; size = 4
_surfaces_left$ = -4					; size = 4
_object_number$ = 8					; size = 4
_this_object_3d_info$ = 12				; size = 4
?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z PROC ; draw_3d_object_hardware_faces, COMDAT

; 1919 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1920 : 
; 1921 : 	int
; 1922 : 		surfaces_left;
; 1923 : 
; 1924 : 	current_object_3d_surface = objects_3d_data[object_number].surfaces;

  0000c	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00016	8b 54 01 50	 mov	 edx, DWORD PTR [ecx+eax+80]
  0001a	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, edx ; current_object_3d_surface

; 1925 : 	current_object_3d_faces = objects_3d_data[object_number].faces;

  00020	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0002a	8b 54 01 44	 mov	 edx, DWORD PTR [ecx+eax+68]
  0002e	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A, edx ; current_object_3d_faces

; 1926 : 	current_object_3d_point_list = objects_3d_data[object_number].object_faces_point_plain_list;

  00034	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0003e	8b 54 01 4c	 mov	 edx, DWORD PTR [ecx+eax+76]
  00042	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, edx ; current_object_3d_point_list

; 1927 : 	current_object_3d_face_normal_list = objects_3d_data[object_number].object_face_normal_references;

  00048	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00052	8b 54 01 54	 mov	 edx, DWORD PTR [ecx+eax+84]
  00056	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_face_normal_list

; 1928 : 
; 1929 : 	current_object_3d_surface_point_list = objects_3d_data[object_number].surface_points;

  0005c	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00066	8b 54 01 5c	 mov	 edx, DWORD PTR [ecx+eax+92]
  0006a	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_list

; 1930 : 	current_object_3d_surface_point_texture_list = objects_3d_data[object_number].surface_texture_points;

  00070	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0007a	8b 54 01 58	 mov	 edx, DWORD PTR [ecx+eax+88]
  0007e	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, edx ; current_object_3d_surface_point_texture_list

; 1931 : 	current_object_3d_surface_point_normal_list = objects_3d_data[object_number].surface_point_normals;

  00084	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0008e	8b 54 01 60	 mov	 edx, DWORD PTR [ecx+eax+96]
  00092	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_normal_list

; 1932 : 
; 1933 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00098	6a 02		 push	 2
  0009a	6a 09		 push	 9
  0009c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1934 : 
; 1935 : 	for ( surfaces_left = objects_3d_data[object_number].number_of_surfaces; surfaces_left > 0; surfaces_left-- )

  000a1	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  000a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  000ab	0f b7 54 01 06	 movzx	 edx, WORD PTR [ecx+eax+6]
  000b0	89 55 fc	 mov	 DWORD PTR _surfaces_left$[ebp], edx
  000b3	eb 09		 jmp	 SHORT $LN4@draw_3d_ob
$LN2@draw_3d_ob:
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _surfaces_left$[ebp]
  000b8	83 e8 01	 sub	 eax, 1
  000bb	89 45 fc	 mov	 DWORD PTR _surfaces_left$[ebp], eax
$LN4@draw_3d_ob:
  000be	83 7d fc 00	 cmp	 DWORD PTR _surfaces_left$[ebp], 0
  000c2	0f 8e 16 10 00
	00		 jle	 $LN3@draw_3d_ob

; 1936 : 	{
; 1937 : 
; 1938 : 		int
; 1939 : 			number_of_surface_points;
; 1940 : 
; 1941 : 		number_of_surface_points = current_object_3d_surface->number_of_points;

  000c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000cd	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  000d1	89 4d f8	 mov	 DWORD PTR _number_of_surface_points$34[ebp], ecx

; 1942 : 
; 1943 : 		if ( number_of_surface_points == 0 )

  000d4	83 7d f8 00	 cmp	 DWORD PTR _number_of_surface_points$34[ebp], 0
  000d8	75 07		 jne	 SHORT $LN14@draw_3d_ob

; 1944 : 		{
; 1945 : 
; 1946 : 			number_of_surface_points = 256;

  000da	c7 45 f8 00 01
	00 00		 mov	 DWORD PTR _number_of_surface_points$34[ebp], 256 ; 00000100H
$LN14@draw_3d_ob:

; 1947 : 		}
; 1948 : 	
; 1949 : 		if ( current_object_3d_surface->detail )				{ zbuffer_constant = zbuffer_constant_elevated_bias; }

  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000e6	66 8b 08	 mov	 cx, WORD PTR [eax]
  000e9	66 d1 e9	 shr	 cx, 1
  000ec	66 83 e1 01	 and	 cx, 1
  000f0	0f b7 d1	 movzx	 edx, cx
  000f3	85 d2		 test	 edx, edx
  000f5	74 12		 je	 SHORT $LN15@draw_3d_ob
  000f7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_elevated_bias@@3NA
  000ff	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0
  00107	eb 10		 jmp	 SHORT $LN16@draw_3d_ob
$LN15@draw_3d_ob:

; 1950 : 		else																{ zbuffer_constant = zbuffer_constant_normal_bias; }

  00109	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00111	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0
$LN16@draw_3d_ob:

; 1951 : 
; 1952 : 		if ( current_object_3d_surface->specularity )		{ current_object_3d_specular = specular_rendering_enabled; }

  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0011e	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  00122	85 c9		 test	 ecx, ecx
  00124	74 0c		 je	 SHORT $LN17@draw_3d_ob
  00126	a1 00 00 00 00	 mov	 eax, DWORD PTR ?specular_rendering_enabled@@3HA ; specular_rendering_enabled
  0012b	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_specular@@3HA, eax ; current_object_3d_specular
  00130	eb 0a		 jmp	 SHORT $LN18@draw_3d_ob
$LN17@draw_3d_ob:

; 1953 : 		else																{ current_object_3d_specular = FALSE; }

  00132	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
$LN18@draw_3d_ob:

; 1954 : 
; 1955 : 		if ( current_object_3d_surface->textured )

  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00141	66 8b 08	 mov	 cx, WORD PTR [eax]
  00144	66 c1 e9 03	 shr	 cx, 3
  00148	66 83 e1 01	 and	 cx, 1
  0014c	0f b7 d1	 movzx	 edx, cx
  0014f	85 d2		 test	 edx, edx
  00151	0f 84 31 09 00
	00		 je	 $LN19@draw_3d_ob

; 1956 : 		{
; 1957 : 
; 1958 : 			if ( current_object_3d_surface->texture_animation )

  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0015c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0015f	66 c1 e9 09	 shr	 cx, 9
  00163	66 83 e1 01	 and	 cx, 1
  00167	0f b7 d1	 movzx	 edx, cx
  0016a	85 d2		 test	 edx, edx
  0016c	74 42		 je	 SHORT $LN21@draw_3d_ob

; 1959 : 			{
; 1960 : 		
; 1961 : 				int
; 1962 : 					frame;
; 1963 : 		
; 1964 : 				frame = texture_animations[current_object_3d_surface->texture_index].current_frame;

  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00173	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00177	6b d1 0c	 imul	 edx, ecx, 12
  0017a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  0017f	8b 4c 10 04	 mov	 ecx, DWORD PTR [eax+edx+4]
  00183	89 4d f4	 mov	 DWORD PTR _frame$33[ebp], ecx

; 1965 : 		
; 1966 : 				current_object_3d_texture = system_textures[ texture_animations[current_object_3d_surface->texture_index].texture_indices[frame] ];

  00186	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0018b	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0018f	6b d1 0c	 imul	 edx, ecx, 12
  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  00197	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  0019b	8b 55 f4	 mov	 edx, DWORD PTR _frame$33[ebp]
  0019e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  001a1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  001a8	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A, ecx ; current_object_3d_texture

; 1967 : 			}
; 1968 : 			else

  001ae	eb 16		 jmp	 SHORT $LN22@draw_3d_ob
$LN21@draw_3d_ob:

; 1969 : 			{
; 1970 : 		
; 1971 : 				current_object_3d_texture = system_textures[current_object_3d_surface->texture_index];

  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001b5	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  001b9	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  001c0	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A, edx ; current_object_3d_texture
$LN22@draw_3d_ob:

; 1972 : 			}
; 1973 : 
; 1974 : 			if ( ( current_object_3d_surface->additive ) || ( current_object_3d_surface->translucent ) || ( current_object_3d_texture->contains_alpha ) )

  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001cb	66 8b 08	 mov	 cx, WORD PTR [eax]
  001ce	66 c1 e9 05	 shr	 cx, 5
  001d2	66 83 e1 01	 and	 cx, 1
  001d6	0f b7 d1	 movzx	 edx, cx
  001d9	85 d2		 test	 edx, edx
  001db	75 2f		 jne	 SHORT $LN25@draw_3d_ob
  001dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001e2	66 8b 08	 mov	 cx, WORD PTR [eax]
  001e5	66 c1 e9 06	 shr	 cx, 6
  001e9	66 83 e1 01	 and	 cx, 1
  001ed	0f b7 d1	 movzx	 edx, cx
  001f0	85 d2		 test	 edx, edx
  001f2	75 18		 jne	 SHORT $LN25@draw_3d_ob
  001f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  001f9	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  001fd	66 c1 e9 07	 shr	 cx, 7
  00201	66 83 e1 01	 and	 cx, 1
  00205	0f b7 d1	 movzx	 edx, cx
  00208	85 d2		 test	 edx, edx
  0020a	74 0a		 je	 SHORT $LN23@draw_3d_ob
$LN25@draw_3d_ob:

; 1975 : 			{
; 1976 : 
; 1977 : 				add_transparent_surface ();

  0020c	e8 00 00 00 00	 call	 ?add_transparent_surface@@YGXXZ ; add_transparent_surface

; 1978 : 			}
; 1979 : 			else

  00211	e9 6d 08 00 00	 jmp	 $LN36@draw_3d_ob
$LN23@draw_3d_ob:

; 1980 : 			{
; 1981 : 
; 1982 : 				if ( current_object_3d_surface->luminous )

  00216	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0021b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0021e	66 c1 e9 07	 shr	 cx, 7
  00222	66 83 e1 01	 and	 cx, 1
  00226	0f b7 d1	 movzx	 edx, cx
  00229	85 d2		 test	 edx, edx
  0022b	74 31		 je	 SHORT $LN26@draw_3d_ob

; 1983 : 				{
; 1984 : 
; 1985 : 					set_d3d_material_emissive_colour ( current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue, current_object_3d_surface->alpha );

  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00232	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00236	51		 push	 ecx
  00237	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0023d	0f b6 42 0c	 movzx	 eax, BYTE PTR [edx+12]
  00241	50		 push	 eax
  00242	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00248	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  0024c	52		 push	 edx
  0024d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00252	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00256	51		 push	 ecx
  00257	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 1986 : 				}
; 1987 : 				else

  0025c	eb 20		 jmp	 SHORT $LN27@draw_3d_ob
$LN26@draw_3d_ob:

; 1988 : 				{
; 1989 : 
; 1990 : 					set_d3d_material_colour ( 255, 255, 255, current_object_3d_surface->alpha, 0 );

  0025e	6a 00		 push	 0
  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00265	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00269	51		 push	 ecx
  0026a	68 ff 00 00 00	 push	 255			; 000000ffH
  0026f	68 ff 00 00 00	 push	 255			; 000000ffH
  00274	68 ff 00 00 00	 push	 255			; 000000ffH
  00279	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour
$LN27@draw_3d_ob:

; 1991 : 				}
; 1992 : 
; 1993 : 				current_object_3d_texture_u_address = ( current_object_3d_surface->texture_wrapped_u ) ? D3DTADDRESS_WRAP: D3DTADDRESS_CLAMP;

  0027e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00283	66 8b 08	 mov	 cx, WORD PTR [eax]
  00286	66 c1 e9 0c	 shr	 cx, 12			; 0000000cH
  0028a	66 83 e1 01	 and	 cx, 1
  0028e	0f b7 d1	 movzx	 edx, cx
  00291	85 d2		 test	 edx, edx
  00293	74 0c		 je	 SHORT $LN57@draw_3d_ob
  00295	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv208[ebp], 1
  0029f	eb 0a		 jmp	 SHORT $LN58@draw_3d_ob
$LN57@draw_3d_ob:
  002a1	c7 85 20 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv208[ebp], 3
$LN58@draw_3d_ob:
  002ab	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  002b1	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_u_address@@3HA, eax ; current_object_3d_texture_u_address

; 1994 : 				current_object_3d_texture_v_address = ( current_object_3d_surface->texture_wrapped_v ) ? D3DTADDRESS_WRAP: D3DTADDRESS_CLAMP;

  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  002bb	66 8b 08	 mov	 cx, WORD PTR [eax]
  002be	66 c1 e9 0d	 shr	 cx, 13			; 0000000dH
  002c2	66 83 e1 01	 and	 cx, 1
  002c6	0f b7 d1	 movzx	 edx, cx
  002c9	85 d2		 test	 edx, edx
  002cb	74 0c		 je	 SHORT $LN59@draw_3d_ob
  002cd	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv214[ebp], 1
  002d7	eb 0a		 jmp	 SHORT $LN60@draw_3d_ob
$LN59@draw_3d_ob:
  002d9	c7 85 20 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv214[ebp], 3
$LN60@draw_3d_ob:
  002e3	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv214[ebp]
  002e9	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_v_address@@3HA, eax ; current_object_3d_texture_v_address

; 1995 : 				current_object_3d_texture_filter = ( current_object_3d_surface->texture_filtered ) ? D3DTFG_LINEAR : D3DTFG_POINT;

  002ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  002f3	66 8b 08	 mov	 cx, WORD PTR [eax]
  002f6	66 c1 e9 0a	 shr	 cx, 10			; 0000000aH
  002fa	66 83 e1 01	 and	 cx, 1
  002fe	0f b7 d1	 movzx	 edx, cx
  00301	85 d2		 test	 edx, edx
  00303	74 0c		 je	 SHORT $LN61@draw_3d_ob
  00305	c7 85 20 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv220[ebp], 2
  0030f	eb 0a		 jmp	 SHORT $LN62@draw_3d_ob
$LN61@draw_3d_ob:
  00311	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv220[ebp], 1
$LN62@draw_3d_ob:
  0031b	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv220[ebp]
  00321	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_filter@@3HA, eax ; current_object_3d_texture_filter

; 1996 : 				current_object_3d_texture_mipmap = ( current_object_3d_surface->texture_mipmapped )	? D3DTFP_POINT : D3DTFP_NONE;

  00326	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0032b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0032e	66 c1 e9 0b	 shr	 cx, 11			; 0000000bH
  00332	66 83 e1 01	 and	 cx, 1
  00336	0f b7 d1	 movzx	 edx, cx
  00339	85 d2		 test	 edx, edx
  0033b	74 0c		 je	 SHORT $LN63@draw_3d_ob
  0033d	c7 85 20 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv226[ebp], 2
  00347	eb 0a		 jmp	 SHORT $LN64@draw_3d_ob
$LN63@draw_3d_ob:
  00349	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv226[ebp], 1
$LN64@draw_3d_ob:
  00353	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv226[ebp]
  00359	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_texture_mipmap@@3HA, eax ; current_object_3d_texture_mipmap

; 1997 : 
; 1998 : 				set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, current_object_3d_specular );

  0035e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00363	50		 push	 eax
  00364	6a 1d		 push	 29			; 0000001dH
  00366	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1999 : 				set_d3d_texture ( 0, current_object_3d_texture );

  0036b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00370	50		 push	 eax
  00371	6a 00		 push	 0
  00373	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 2000 : 				set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00378	6a 04		 push	 4
  0037a	6a 01		 push	 1
  0037c	6a 00		 push	 0
  0037e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2001 : 
; 2002 : 				set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, current_object_3d_texture_u_address );

  00383	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  00388	50		 push	 eax
  00389	6a 0d		 push	 13			; 0000000dH
  0038b	6a 00		 push	 0
  0038d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2003 : 				set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, current_object_3d_texture_v_address );

  00392	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00397	50		 push	 eax
  00398	6a 0e		 push	 14			; 0000000eH
  0039a	6a 00		 push	 0
  0039c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2004 : 				set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, current_object_3d_texture_filter );

  003a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  003a6	50		 push	 eax
  003a7	6a 10		 push	 16			; 00000010H
  003a9	6a 00		 push	 0
  003ab	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2005 : 				set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, current_object_3d_texture_filter );

  003b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  003b5	50		 push	 eax
  003b6	6a 11		 push	 17			; 00000011H
  003b8	6a 00		 push	 0
  003ba	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2006 : 				set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, current_object_3d_texture_mipmap );

  003bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  003c4	50		 push	 eax
  003c5	6a 12		 push	 18			; 00000012H
  003c7	6a 00		 push	 0
  003c9	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2007 : 
; 2008 : 				if ( current_object_3d_surface->detail )

  003ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  003d3	66 8b 08	 mov	 cx, WORD PTR [eax]
  003d6	66 d1 e9	 shr	 cx, 1
  003d9	66 83 e1 01	 and	 cx, 1
  003dd	0f b7 d1	 movzx	 edx, cx
  003e0	85 d2		 test	 edx, edx
  003e2	74 0b		 je	 SHORT $LN28@draw_3d_ob

; 2009 : 				{
; 2010 : 
; 2011 : 					set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, ELEVATED_ZBIAS );

  003e4	6a 02		 push	 2
  003e6	6a 2f		 push	 47			; 0000002fH
  003e8	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2012 : 				}
; 2013 : 				else

  003ed	eb 09		 jmp	 SHORT $LN29@draw_3d_ob
$LN28@draw_3d_ob:

; 2014 : 				{
; 2015 : 
; 2016 : 					set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, NORMAL_ZBIAS );

  003ef	6a 01		 push	 1
  003f1	6a 2f		 push	 47			; 0000002fH
  003f3	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN29@draw_3d_ob:

; 2017 : 				}
; 2018 : 
; 2019 : 				if ( current_object_3d_surface->polygons )

  003f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  003fd	66 8b 08	 mov	 cx, WORD PTR [eax]
  00400	66 83 e1 01	 and	 cx, 1
  00404	0f b7 d1	 movzx	 edx, cx
  00407	85 d2		 test	 edx, edx
  00409	0f 84 71 02 00
	00		 je	 $LN30@draw_3d_ob

; 2020 : 				{
; 2021 : 
; 2022 : 					object_3d_render_hardware_surface ( &objects_3d_data[object_number] );

  0040f	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00413	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00419	50		 push	 eax
  0041a	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 2023 : 
; 2024 : 					if ( ( current_object_3d_surface->has_luminosity_texture ) && ( current_object_3d_surface->polygons ) && ( current_object_3d_light_maps_enabled ) )

  0041f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00424	66 8b 08	 mov	 cx, WORD PTR [eax]
  00427	66 c1 e9 04	 shr	 cx, 4
  0042b	66 83 e1 01	 and	 cx, 1
  0042f	0f b7 d1	 movzx	 edx, cx
  00432	85 d2		 test	 edx, edx
  00434	0f 84 41 02 00
	00		 je	 $LN32@draw_3d_ob
  0043a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0043f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00442	66 83 e1 01	 and	 cx, 1
  00446	0f b7 d1	 movzx	 edx, cx
  00449	85 d2		 test	 edx, edx
  0044b	0f 84 2a 02 00
	00		 je	 $LN32@draw_3d_ob
  00451	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, 0 ; current_object_3d_light_maps_enabled
  00458	0f 84 1d 02 00
	00		 je	 $LN32@draw_3d_ob

; 2025 : 					{
; 2026 : 	
; 2027 : 						if ( current_object_3d_surface->luminosity_texture_animation )

  0045e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00463	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  00466	80 e1 01	 and	 cl, 1
  00469	0f b6 d1	 movzx	 edx, cl
  0046c	85 d2		 test	 edx, edx
  0046e	74 42		 je	 SHORT $LN33@draw_3d_ob

; 2028 : 						{
; 2029 : 					
; 2030 : 							int
; 2031 : 								frame;
; 2032 : 					
; 2033 : 							frame = texture_animations[current_object_3d_surface->luminosity_texture_index].current_frame;

  00470	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00475	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00479	6b d1 0c	 imul	 edx, ecx, 12
  0047c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  00481	8b 4c 10 04	 mov	 ecx, DWORD PTR [eax+edx+4]
  00485	89 4d f0	 mov	 DWORD PTR _frame$32[ebp], ecx

; 2034 : 					
; 2035 : 							current_object_3d_luminosity_texture = system_textures[ texture_animations[current_object_3d_surface->luminosity_texture_index].texture_indices[frame] ];

  00488	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0048d	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00491	6b d1 0c	 imul	 edx, ecx, 12
  00494	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  00499	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  0049d	8b 55 f0	 mov	 edx, DWORD PTR _frame$32[ebp]
  004a0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  004a3	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  004aa	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A, ecx ; current_object_3d_luminosity_texture

; 2036 : 						}
; 2037 : 						else

  004b0	eb 16		 jmp	 SHORT $LN34@draw_3d_ob
$LN33@draw_3d_ob:

; 2038 : 						{
; 2039 : 					
; 2040 : 							current_object_3d_luminosity_texture = system_textures[current_object_3d_surface->luminosity_texture_index];

  004b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004b7	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  004bb	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  004c2	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A, edx ; current_object_3d_luminosity_texture
$LN34@draw_3d_ob:

; 2041 : 						}
; 2042 : 		
; 2043 : 						current_object_3d_luminosity_texture_u_address = ( current_object_3d_surface->luminosity_texture_wrapped_u ) ? D3DTADDRESS_WRAP: D3DTADDRESS_CLAMP;

  004c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  004cd	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  004d0	c0 e9 03	 shr	 cl, 3
  004d3	80 e1 01	 and	 cl, 1
  004d6	0f b6 d1	 movzx	 edx, cl
  004d9	85 d2		 test	 edx, edx
  004db	74 0c		 je	 SHORT $LN65@draw_3d_ob
  004dd	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv302[ebp], 1
  004e7	eb 0a		 jmp	 SHORT $LN66@draw_3d_ob
$LN65@draw_3d_ob:
  004e9	c7 85 20 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv302[ebp], 3
$LN66@draw_3d_ob:
  004f3	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv302[ebp]
  004f9	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA, eax ; current_object_3d_luminosity_texture_u_address

; 2044 : 						current_object_3d_luminosity_texture_v_address = ( current_object_3d_surface->luminosity_texture_wrapped_v ) ? D3DTADDRESS_WRAP: D3DTADDRESS_CLAMP;

  004fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00503	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  00506	c0 e9 04	 shr	 cl, 4
  00509	80 e1 01	 and	 cl, 1
  0050c	0f b6 d1	 movzx	 edx, cl
  0050f	85 d2		 test	 edx, edx
  00511	74 0c		 je	 SHORT $LN67@draw_3d_ob
  00513	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv308[ebp], 1
  0051d	eb 0a		 jmp	 SHORT $LN68@draw_3d_ob
$LN67@draw_3d_ob:
  0051f	c7 85 20 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv308[ebp], 3
$LN68@draw_3d_ob:
  00529	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv308[ebp]
  0052f	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA, eax ; current_object_3d_luminosity_texture_v_address

; 2045 : 						current_object_3d_luminosity_texture_filter = ( current_object_3d_surface->luminosity_texture_filtered )	? D3DTFG_LINEAR : D3DTFG_POINT;

  00534	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00539	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  0053c	d0 e9		 shr	 cl, 1
  0053e	80 e1 01	 and	 cl, 1
  00541	0f b6 d1	 movzx	 edx, cl
  00544	85 d2		 test	 edx, edx
  00546	74 0c		 je	 SHORT $LN69@draw_3d_ob
  00548	c7 85 20 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv314[ebp], 2
  00552	eb 0a		 jmp	 SHORT $LN70@draw_3d_ob
$LN69@draw_3d_ob:
  00554	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv314[ebp], 1
$LN70@draw_3d_ob:
  0055e	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv314[ebp]
  00564	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA, eax ; current_object_3d_luminosity_texture_filter

; 2046 : 						current_object_3d_luminosity_texture_mipmap = ( current_object_3d_surface->luminosity_texture_mipmapped )	? D3DTFP_POINT : D3DTFP_NONE;

  00569	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0056e	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  00571	c0 e9 02	 shr	 cl, 2
  00574	80 e1 01	 and	 cl, 1
  00577	0f b6 d1	 movzx	 edx, cl
  0057a	85 d2		 test	 edx, edx
  0057c	74 0c		 je	 SHORT $LN71@draw_3d_ob
  0057e	c7 85 20 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv320[ebp], 2
  00588	eb 0a		 jmp	 SHORT $LN72@draw_3d_ob
$LN71@draw_3d_ob:
  0058a	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv320[ebp], 1
$LN72@draw_3d_ob:
  00594	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv320[ebp]
  0059a	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA, eax ; current_object_3d_luminosity_texture_mipmap

; 2047 : 	
; 2048 : #if ( FORCE_LIGHTMAP_MIPMAPPING )
; 2049 : 						current_object_3d_luminosity_texture_mipmap = D3DTFP_POINT;
; 2050 : #endif
; 2051 : 	
; 2052 : 						set_d3d_material_emissive_colour ( current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue, current_object_3d_surface->alpha );

  0059f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  005a4	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  005a8	51		 push	 ecx
  005a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  005af	0f b6 42 0c	 movzx	 eax, BYTE PTR [edx+12]
  005b3	50		 push	 eax
  005b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  005ba	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  005be	52		 push	 edx
  005bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  005c4	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  005c8	51		 push	 ecx
  005c9	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 2053 : 	
; 2054 : 						set_d3d_texture ( 0, current_object_3d_luminosity_texture );

  005ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A ; current_object_3d_luminosity_texture
  005d3	50		 push	 eax
  005d4	6a 00		 push	 0
  005d6	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 2055 : 						set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  005db	6a 04		 push	 4
  005dd	6a 01		 push	 1
  005df	6a 00		 push	 0
  005e1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2056 : 	
; 2057 : 						set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, TRUE );

  005e6	6a 01		 push	 1
  005e8	6a 1b		 push	 27			; 0000001bH
  005ea	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2058 : 						set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_ONE );

  005ef	6a 02		 push	 2
  005f1	6a 13		 push	 19			; 00000013H
  005f3	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2059 : 						set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_ONE );

  005f8	6a 02		 push	 2
  005fa	6a 14		 push	 20			; 00000014H
  005fc	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2060 : 	
; 2061 : 						set_d3d_texture_stage_state ( 0, D3DTSS_TEXCOORDINDEX, 1 );

  00601	6a 01		 push	 1
  00603	6a 0b		 push	 11			; 0000000bH
  00605	6a 00		 push	 0
  00607	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2062 : 						set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, current_object_3d_luminosity_texture_u_address );

  0060c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA ; current_object_3d_luminosity_texture_u_address
  00611	50		 push	 eax
  00612	6a 0d		 push	 13			; 0000000dH
  00614	6a 00		 push	 0
  00616	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2063 : 						set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, current_object_3d_luminosity_texture_v_address );

  0061b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA ; current_object_3d_luminosity_texture_v_address
  00620	50		 push	 eax
  00621	6a 0e		 push	 14			; 0000000eH
  00623	6a 00		 push	 0
  00625	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2064 : 						set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, current_object_3d_luminosity_texture_filter );

  0062a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  0062f	50		 push	 eax
  00630	6a 10		 push	 16			; 00000010H
  00632	6a 00		 push	 0
  00634	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2065 : 						set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, current_object_3d_luminosity_texture_filter );

  00639	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  0063e	50		 push	 eax
  0063f	6a 11		 push	 17			; 00000011H
  00641	6a 00		 push	 0
  00643	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2066 : 						set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, current_object_3d_luminosity_texture_mipmap );

  00648	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA ; current_object_3d_luminosity_texture_mipmap
  0064d	50		 push	 eax
  0064e	6a 12		 push	 18			; 00000012H
  00650	6a 00		 push	 0
  00652	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2067 : 	
; 2068 : 						object_3d_render_hardware_surface ( &objects_3d_data[object_number] );

  00657	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  0065b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00661	50		 push	 eax
  00662	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 2069 : 
; 2070 : 						set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  00667	6a 00		 push	 0
  00669	6a 1b		 push	 27			; 0000001bH
  0066b	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2071 : 						set_d3d_texture_stage_state ( 0, D3DTSS_TEXCOORDINDEX, 0 );

  00670	6a 00		 push	 0
  00672	6a 0b		 push	 11			; 0000000bH
  00674	6a 00		 push	 0
  00676	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state
$LN32@draw_3d_ob:

; 2072 : 					}
; 2073 : 				}
; 2074 : 				else

  0067b	e9 03 04 00 00	 jmp	 $LN36@draw_3d_ob
$LN30@draw_3d_ob:

; 2075 : 				{
; 2076 : 
; 2077 : 					int
; 2078 : 						point_count,
; 2079 : 						count;
; 2080 : 
; 2081 : 					D3DVERTEX
; 2082 : 						*vertices;
; 2083 : 
; 2084 : 					float
; 2085 : 						xmax,
; 2086 : 						ymax,
; 2087 : 						zmax;
; 2088 : 
; 2089 : 					if ( !f3d_vertex_lock ( d3d.hardware_untransformed_buffer, DDLOCK_DISCARDCONTENTS, ( LPVOID * ) &vertices ) )

  00680	8d 45 e4	 lea	 eax, DWORD PTR _vertices$29[ebp]
  00683	50		 push	 eax
  00684	68 00 20 00 00	 push	 8192			; 00002000H
  00689	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  0068f	51		 push	 ecx
  00690	e8 00 00 00 00	 call	 ?f3d_vertex_lock@@YGHPAUIDirect3DVertexBuffer7@@IPAPAX@Z ; f3d_vertex_lock
  00695	85 c0		 test	 eax, eax
  00697	75 1c		 jne	 SHORT $LN35@draw_3d_ob

; 2090 : 					{
; 2091 : 
; 2092 : 						current_object_3d_point_list += current_object_3d_surface->number_of_faces * 2;

  00699	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0069e	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  006a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  006a8	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  006ab	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2093 : 					}
; 2094 : 					else

  006b0	e9 ce 03 00 00	 jmp	 $LN36@draw_3d_ob
$LN35@draw_3d_ob:

; 2095 : 					{
; 2096 : 	
; 2097 : 						xmax = max ( fabs ( objects_3d_data[object_number].bounding_box.xmin ), fabs ( objects_3d_data[object_number].bounding_box.xmax ) );

  006b5	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  006b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  006bf	51		 push	 ecx
  006c0	f3 0f 10 44 01
	14		 movss	 xmm0, DWORD PTR [ecx+eax+20]
  006c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006cb	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  006d0	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR $T12[ebp]
  006d6	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  006da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  006df	51		 push	 ecx
  006e0	f3 0f 10 44 10
	10		 movss	 xmm0, DWORD PTR [eax+edx+16]
  006e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006eb	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  006f0	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR $T11[ebp]
  006f6	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  006fc	51		 push	 ecx
  006fd	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR $T11[ebp]
  00703	52		 push	 edx
  00704	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00709	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0070d	f3 0f 11 45 e0	 movss	 DWORD PTR _xmax$28[ebp], xmm0

; 2098 : 						ymax = max ( fabs ( objects_3d_data[object_number].bounding_box.ymin ), fabs ( objects_3d_data[object_number].bounding_box.ymax ) );

  00712	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00716	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0071c	51		 push	 ecx
  0071d	f3 0f 10 44 01
	1c		 movss	 xmm0, DWORD PTR [ecx+eax+28]
  00723	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00728	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0072d	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR $T10[ebp]
  00733	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00737	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0073c	51		 push	 ecx
  0073d	f3 0f 10 44 10
	18		 movss	 xmm0, DWORD PTR [eax+edx+24]
  00743	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00748	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0074d	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR $T9[ebp]
  00753	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00759	51		 push	 ecx
  0075a	8d 95 44 ff ff
	ff		 lea	 edx, DWORD PTR $T9[ebp]
  00760	52		 push	 edx
  00761	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00766	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0076a	f3 0f 11 45 dc	 movss	 DWORD PTR _ymax$27[ebp], xmm0

; 2099 : 						zmax = max ( fabs ( objects_3d_data[object_number].bounding_box.zmin ), fabs ( objects_3d_data[object_number].bounding_box.zmax ) );

  0076f	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00773	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00779	51		 push	 ecx
  0077a	f3 0f 10 44 01
	24		 movss	 xmm0, DWORD PTR [ecx+eax+36]
  00780	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00785	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0078a	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR $T8[ebp]
  00790	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00794	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00799	51		 push	 ecx
  0079a	f3 0f 10 44 10
	20		 movss	 xmm0, DWORD PTR [eax+edx+32]
  007a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a5	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  007aa	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR $T7[ebp]
  007b0	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  007b6	51		 push	 ecx
  007b7	8d 95 3c ff ff
	ff		 lea	 edx, DWORD PTR $T7[ebp]
  007bd	52		 push	 edx
  007be	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  007c3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  007c7	f3 0f 11 45 d8	 movss	 DWORD PTR _zmax$26[ebp], xmm0

; 2100 : 	
; 2101 : 						xmax = xmax / 32767.0;

  007cc	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _xmax$28[ebp]
  007d1	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  007d9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007dd	f3 0f 11 45 e0	 movss	 DWORD PTR _xmax$28[ebp], xmm0

; 2102 : 						ymax = ymax / 32767.0;

  007e2	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _ymax$27[ebp]
  007e7	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  007ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f3	f3 0f 11 45 dc	 movss	 DWORD PTR _ymax$27[ebp], xmm0

; 2103 : 						zmax = zmax / 32767.0;

  007f8	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _zmax$26[ebp]
  007fd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00805	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00809	f3 0f 11 45 d8	 movss	 DWORD PTR _zmax$26[ebp], xmm0

; 2104 : 	
; 2105 : 						point_count = 0;

  0080e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _point_count$31[ebp], 0

; 2106 : 	
; 2107 : 						for ( count = 0; count < current_object_3d_surface->number_of_faces; count++ )

  00815	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _count$30[ebp], 0
  0081c	eb 09		 jmp	 SHORT $LN7@draw_3d_ob
$LN5@draw_3d_ob:
  0081e	8b 45 e8	 mov	 eax, DWORD PTR _count$30[ebp]
  00821	83 c0 01	 add	 eax, 1
  00824	89 45 e8	 mov	 DWORD PTR _count$30[ebp], eax
$LN7@draw_3d_ob:
  00827	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0082c	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00830	39 4d e8	 cmp	 DWORD PTR _count$30[ebp], ecx
  00833	0f 8d ee 01 00
	00		 jge	 $LN6@draw_3d_ob

; 2108 : 						{
; 2109 : 	
; 2110 : 							int
; 2111 : 								surface_point_index,
; 2112 : 								point_index;
; 2113 : 	
; 2114 : 							vec3d
; 2115 : 								normal;
; 2116 : 	
; 2117 : 							calculate_line_normal ( this_object_3d_info, &normal );

  00839	8d 45 c4	 lea	 eax, DWORD PTR _normal$23[ebp]
  0083c	50		 push	 eax
  0083d	8b 4d 0c	 mov	 ecx, DWORD PTR _this_object_3d_info$[ebp]
  00840	51		 push	 ecx
  00841	e8 00 00 00 00	 call	 ?calculate_line_normal@@YGXPAUOBJECT_3D_INFO@@PAUVEC3D@@@Z ; calculate_line_normal

; 2118 : 	
; 2119 : 							surface_point_index = current_object_3d_point_list[point_count].point;

  00846	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0084b	03 45 ec	 add	 eax, DWORD PTR _point_count$31[ebp]
  0084e	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00851	89 4d d4	 mov	 DWORD PTR _surface_point_index$25[ebp], ecx

; 2120 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00854	8b 45 d4	 mov	 eax, DWORD PTR _surface_point_index$25[ebp]
  00857	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0085d	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00861	89 55 d0	 mov	 DWORD PTR _point_index$24[ebp], edx

; 2121 : 	
; 2122 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00864	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00868	6b 4d d0 06	 imul	 ecx, DWORD PTR _point_index$24[ebp], 6
  0086c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00872	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00876	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  0087a	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0087e	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _xmax$28[ebp]
  00883	8b 55 ec	 mov	 edx, DWORD PTR _point_count$31[ebp]
  00886	c1 e2 05	 shl	 edx, 5
  00889	8b 45 e4	 mov	 eax, DWORD PTR _vertices$29[ebp]
  0088c	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2123 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00891	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00895	6b 4d d0 06	 imul	 ecx, DWORD PTR _point_index$24[ebp], 6
  00899	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0089f	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  008a3	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  008a8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  008ac	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _ymax$27[ebp]
  008b1	8b 55 ec	 mov	 edx, DWORD PTR _point_count$31[ebp]
  008b4	c1 e2 05	 shl	 edx, 5
  008b7	8b 45 e4	 mov	 eax, DWORD PTR _vertices$29[ebp]
  008ba	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2124 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  008c0	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  008c4	6b 4d d0 06	 imul	 ecx, DWORD PTR _point_index$24[ebp], 6
  008c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  008ce	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  008d2	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  008d7	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  008db	f3 0f 59 45 d8	 mulss	 xmm0, DWORD PTR _zmax$26[ebp]
  008e0	8b 55 ec	 mov	 edx, DWORD PTR _point_count$31[ebp]
  008e3	c1 e2 05	 shl	 edx, 5
  008e6	8b 45 e4	 mov	 eax, DWORD PTR _vertices$29[ebp]
  008e9	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2125 : 	
; 2126 : 	
; 2127 : 							vertices[point_count].nx = normal.x;

  008ef	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  008f2	c1 e0 05	 shl	 eax, 5
  008f5	8b 4d e4	 mov	 ecx, DWORD PTR _vertices$29[ebp]
  008f8	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _normal$23[ebp]
  008fd	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2128 : 							vertices[point_count].ny = normal.y;

  00903	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  00906	c1 e0 05	 shl	 eax, 5
  00909	8b 4d e4	 mov	 ecx, DWORD PTR _vertices$29[ebp]
  0090c	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _normal$23[ebp+4]
  00911	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2129 : 							vertices[point_count].nz = normal.z;

  00917	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  0091a	c1 e0 05	 shl	 eax, 5
  0091d	8b 4d e4	 mov	 ecx, DWORD PTR _vertices$29[ebp]
  00920	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _normal$23[ebp+8]
  00925	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2130 : 	
; 2131 : 							point_count++;

  0092b	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  0092e	83 c0 01	 add	 eax, 1
  00931	89 45 ec	 mov	 DWORD PTR _point_count$31[ebp], eax

; 2132 : 	
; 2133 : 							surface_point_index = current_object_3d_point_list[point_count].point;

  00934	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00939	03 45 ec	 add	 eax, DWORD PTR _point_count$31[ebp]
  0093c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0093f	89 4d d4	 mov	 DWORD PTR _surface_point_index$25[ebp], ecx

; 2134 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00942	8b 45 d4	 mov	 eax, DWORD PTR _surface_point_index$25[ebp]
  00945	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0094b	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0094f	89 55 d0	 mov	 DWORD PTR _point_index$24[ebp], edx

; 2135 : 	
; 2136 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00952	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00956	6b 4d d0 06	 imul	 ecx, DWORD PTR _point_index$24[ebp], 6
  0095a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00960	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00964	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00968	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0096c	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _xmax$28[ebp]
  00971	8b 55 ec	 mov	 edx, DWORD PTR _point_count$31[ebp]
  00974	c1 e2 05	 shl	 edx, 5
  00977	8b 45 e4	 mov	 eax, DWORD PTR _vertices$29[ebp]
  0097a	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2137 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  0097f	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00983	6b 4d d0 06	 imul	 ecx, DWORD PTR _point_index$24[ebp], 6
  00987	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0098d	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00991	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  00996	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0099a	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _ymax$27[ebp]
  0099f	8b 55 ec	 mov	 edx, DWORD PTR _point_count$31[ebp]
  009a2	c1 e2 05	 shl	 edx, 5
  009a5	8b 45 e4	 mov	 eax, DWORD PTR _vertices$29[ebp]
  009a8	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2138 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  009ae	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  009b2	6b 4d d0 06	 imul	 ecx, DWORD PTR _point_index$24[ebp], 6
  009b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  009bc	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  009c0	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  009c5	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  009c9	f3 0f 59 45 d8	 mulss	 xmm0, DWORD PTR _zmax$26[ebp]
  009ce	8b 55 ec	 mov	 edx, DWORD PTR _point_count$31[ebp]
  009d1	c1 e2 05	 shl	 edx, 5
  009d4	8b 45 e4	 mov	 eax, DWORD PTR _vertices$29[ebp]
  009d7	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2139 : 	
; 2140 : 							vertices[point_count].nx = normal.x;

  009dd	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  009e0	c1 e0 05	 shl	 eax, 5
  009e3	8b 4d e4	 mov	 ecx, DWORD PTR _vertices$29[ebp]
  009e6	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _normal$23[ebp]
  009eb	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2141 : 							vertices[point_count].ny = normal.y;

  009f1	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  009f4	c1 e0 05	 shl	 eax, 5
  009f7	8b 4d e4	 mov	 ecx, DWORD PTR _vertices$29[ebp]
  009fa	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _normal$23[ebp+4]
  009ff	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2142 : 							vertices[point_count].nz = normal.z;

  00a05	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  00a08	c1 e0 05	 shl	 eax, 5
  00a0b	8b 4d e4	 mov	 ecx, DWORD PTR _vertices$29[ebp]
  00a0e	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _normal$23[ebp+8]
  00a13	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2143 : 	
; 2144 : 							point_count++;

  00a19	8b 45 ec	 mov	 eax, DWORD PTR _point_count$31[ebp]
  00a1c	83 c0 01	 add	 eax, 1
  00a1f	89 45 ec	 mov	 DWORD PTR _point_count$31[ebp], eax

; 2145 : 						}

  00a22	e9 f7 fd ff ff	 jmp	 $LN5@draw_3d_ob
$LN6@draw_3d_ob:

; 2146 : 	
; 2147 : 						ASSERT ( point_count < 2048 );

  00a27	81 7d ec 00 08
	00 00		 cmp	 DWORD PTR _point_count$31[ebp], 2048 ; 00000800H
  00a2e	7c 1a		 jl	 SHORT $LN37@draw_3d_ob
  00a30	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA
  00a35	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  00a3a	50		 push	 eax
  00a3b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@
  00a40	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@
  00a45	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN37@draw_3d_ob:

; 2148 : 	
; 2149 : 						f3d_vertex_unlock ( d3d.hardware_untransformed_buffer );

  00a4a	a1 5c 24 02 00	 mov	 eax, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00a4f	50		 push	 eax
  00a50	e8 00 00 00 00	 call	 ?f3d_vertex_unlock@@YGXPAUIDirect3DVertexBuffer7@@@Z ; f3d_vertex_unlock

; 2150 : 	
; 2151 : 						f3d_draw_vb ( D3DPT_LINELIST, d3d.hardware_untransformed_buffer,

  00a55	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a5a	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00a5e	d1 e1		 shl	 ecx, 1
  00a60	51		 push	 ecx
  00a61	68 00 00 00 00	 push	 OFFSET ?d3d_hardware_vertex_indices@@3PAGA ; d3d_hardware_vertex_indices
  00a66	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a6c	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00a70	d1 e0		 shl	 eax, 1
  00a72	50		 push	 eax
  00a73	6a 00		 push	 0
  00a75	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00a7b	51		 push	 ecx
  00a7c	6a 02		 push	 2
  00a7e	e8 00 00 00 00	 call	 ?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z ; f3d_draw_vb
$LN36@draw_3d_ob:

; 2152 : 																							0,
; 2153 : 																							current_object_3d_surface->number_of_faces * 2,
; 2154 : 																							d3d_hardware_vertex_indices,
; 2155 : 																							current_object_3d_surface->number_of_faces * 2 );
; 2156 : 					}
; 2157 : 				}
; 2158 : 			}
; 2159 : 		}
; 2160 : 		else

  00a83	e9 27 05 00 00	 jmp	 $LN48@draw_3d_ob
$LN19@draw_3d_ob:

; 2161 : 		{
; 2162 : 
; 2163 : 			if ( ( current_object_3d_surface->additive ) || ( current_object_3d_surface->translucent ) )

  00a88	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00a8d	66 8b 08	 mov	 cx, WORD PTR [eax]
  00a90	66 c1 e9 05	 shr	 cx, 5
  00a94	66 83 e1 01	 and	 cx, 1
  00a98	0f b7 d1	 movzx	 edx, cx
  00a9b	85 d2		 test	 edx, edx
  00a9d	75 17		 jne	 SHORT $LN40@draw_3d_ob
  00a9f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00aa4	66 8b 08	 mov	 cx, WORD PTR [eax]
  00aa7	66 c1 e9 06	 shr	 cx, 6
  00aab	66 83 e1 01	 and	 cx, 1
  00aaf	0f b7 d1	 movzx	 edx, cx
  00ab2	85 d2		 test	 edx, edx
  00ab4	74 0a		 je	 SHORT $LN38@draw_3d_ob
$LN40@draw_3d_ob:

; 2164 : 			{
; 2165 : 
; 2166 : 				add_transparent_surface ();

  00ab6	e8 00 00 00 00	 call	 ?add_transparent_surface@@YGXXZ ; add_transparent_surface

; 2167 : 			}
; 2168 : 			else

  00abb	e9 ef 04 00 00	 jmp	 $LN48@draw_3d_ob
$LN38@draw_3d_ob:

; 2169 : 			{
; 2170 : 	
; 2171 : 				set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, current_object_3d_specular );

  00ac0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00ac5	50		 push	 eax
  00ac6	6a 1d		 push	 29			; 0000001dH
  00ac8	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2172 : 				set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  00acd	6a 01		 push	 1
  00acf	6a 01		 push	 1
  00ad1	6a 00		 push	 0
  00ad3	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2173 : 	
; 2174 : 				if ( current_object_3d_surface->luminous )

  00ad8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00add	66 8b 08	 mov	 cx, WORD PTR [eax]
  00ae0	66 c1 e9 07	 shr	 cx, 7
  00ae4	66 83 e1 01	 and	 cx, 1
  00ae8	0f b7 d1	 movzx	 edx, cx
  00aeb	85 d2		 test	 edx, edx
  00aed	74 31		 je	 SHORT $LN41@draw_3d_ob

; 2175 : 				{
; 2176 : 
; 2177 : 					set_d3d_material_emissive_colour ( current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue, current_object_3d_surface->alpha );

  00aef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00af4	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00af8	51		 push	 ecx
  00af9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00aff	0f b6 42 0c	 movzx	 eax, BYTE PTR [edx+12]
  00b03	50		 push	 eax
  00b04	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b0a	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  00b0e	52		 push	 edx
  00b0f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b14	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00b18	51		 push	 ecx
  00b19	e8 00 00 00 00	 call	 ?set_d3d_material_emissive_colour@@YGXHHHH@Z ; set_d3d_material_emissive_colour

; 2178 : 				}
; 2179 : 				else

  00b1e	eb 3a		 jmp	 SHORT $LN42@draw_3d_ob
$LN41@draw_3d_ob:

; 2180 : 				{
; 2181 : 
; 2182 : 					set_d3d_material_colour ( current_object_3d_surface->red,

  00b20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b25	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  00b29	51		 push	 ecx
  00b2a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b30	0f b6 42 0f	 movzx	 eax, BYTE PTR [edx+15]
  00b34	50		 push	 eax
  00b35	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b3b	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00b3f	52		 push	 edx
  00b40	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b45	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00b49	51		 push	 ecx
  00b4a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b50	0f b6 42 0e	 movzx	 eax, BYTE PTR [edx+14]
  00b54	50		 push	 eax
  00b55	e8 00 00 00 00	 call	 ?set_d3d_material_colour@@YGXHHHHH@Z ; set_d3d_material_colour
$LN42@draw_3d_ob:

; 2183 : 														current_object_3d_surface->green,
; 2184 : 														current_object_3d_surface->blue,
; 2185 : 														current_object_3d_surface->alpha,
; 2186 : 														current_object_3d_surface->specularity );
; 2187 : 				}
; 2188 : 
; 2189 : 				if ( current_object_3d_surface->polygons )

  00b5a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b5f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00b62	66 83 e1 01	 and	 cx, 1
  00b66	0f b7 d1	 movzx	 edx, cx
  00b69	85 d2		 test	 edx, edx
  00b6b	74 3f		 je	 SHORT $LN43@draw_3d_ob

; 2190 : 				{
; 2191 : 	
; 2192 : 					if ( current_object_3d_surface->detail )

  00b6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00b72	66 8b 08	 mov	 cx, WORD PTR [eax]
  00b75	66 d1 e9	 shr	 cx, 1
  00b78	66 83 e1 01	 and	 cx, 1
  00b7c	0f b7 d1	 movzx	 edx, cx
  00b7f	85 d2		 test	 edx, edx
  00b81	74 0b		 je	 SHORT $LN45@draw_3d_ob

; 2193 : 					{
; 2194 : 	
; 2195 : 						set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, ELEVATED_ZBIAS );

  00b83	6a 02		 push	 2
  00b85	6a 2f		 push	 47			; 0000002fH
  00b87	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2196 : 					}
; 2197 : 					else

  00b8c	eb 09		 jmp	 SHORT $LN46@draw_3d_ob
$LN45@draw_3d_ob:

; 2198 : 					{
; 2199 : 	
; 2200 : 						set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, NORMAL_ZBIAS );

  00b8e	6a 01		 push	 1
  00b90	6a 2f		 push	 47			; 0000002fH
  00b92	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN46@draw_3d_ob:

; 2201 : 					}
; 2202 : 	
; 2203 : 					object_3d_render_hardware_surface ( &objects_3d_data[object_number] );

  00b97	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00b9b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00ba1	50		 push	 eax
  00ba2	e8 00 00 00 00	 call	 ?object_3d_render_hardware_surface@@YGXPAUOBJECT_3D@@@Z ; object_3d_render_hardware_surface

; 2204 : 				}
; 2205 : 				else

  00ba7	e9 03 04 00 00	 jmp	 $LN48@draw_3d_ob
$LN43@draw_3d_ob:

; 2206 : 				{
; 2207 : 
; 2208 : 					int
; 2209 : 						point_count,
; 2210 : 						count;
; 2211 : 
; 2212 : 					D3DVERTEX
; 2213 : 						*vertices;
; 2214 : 
; 2215 : 					float
; 2216 : 						xmax,
; 2217 : 						ymax,
; 2218 : 						zmax;
; 2219 : 
; 2220 : 					if ( !f3d_vertex_lock ( d3d.hardware_untransformed_buffer, DDLOCK_DISCARDCONTENTS, ( LPVOID * ) &vertices ) )

  00bac	8d 45 b8	 lea	 eax, DWORD PTR _vertices$20[ebp]
  00baf	50		 push	 eax
  00bb0	68 00 20 00 00	 push	 8192			; 00002000H
  00bb5	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00bbb	51		 push	 ecx
  00bbc	e8 00 00 00 00	 call	 ?f3d_vertex_lock@@YGHPAUIDirect3DVertexBuffer7@@IPAPAX@Z ; f3d_vertex_lock
  00bc1	85 c0		 test	 eax, eax
  00bc3	75 1c		 jne	 SHORT $LN47@draw_3d_ob

; 2221 : 					{
; 2222 : 
; 2223 : 						current_object_3d_point_list += current_object_3d_surface->number_of_faces * 2;

  00bc5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00bca	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00bce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00bd4	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00bd7	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list

; 2224 : 					}
; 2225 : 					else

  00bdc	e9 ce 03 00 00	 jmp	 $LN48@draw_3d_ob
$LN47@draw_3d_ob:

; 2226 : 					{
; 2227 : 						
; 2228 : 						xmax = max ( fabs ( objects_3d_data[object_number].bounding_box.xmin ), fabs ( objects_3d_data[object_number].bounding_box.xmax ) );

  00be1	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00be5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00beb	51		 push	 ecx
  00bec	f3 0f 10 44 01
	14		 movss	 xmm0, DWORD PTR [ecx+eax+20]
  00bf2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bf7	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00bfc	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR $T6[ebp]
  00c02	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00c06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00c0b	51		 push	 ecx
  00c0c	f3 0f 10 44 10
	10		 movss	 xmm0, DWORD PTR [eax+edx+16]
  00c12	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c17	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00c1c	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR $T5[ebp]
  00c22	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00c28	51		 push	 ecx
  00c29	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR $T5[ebp]
  00c2f	52		 push	 edx
  00c30	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00c35	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c39	f3 0f 11 45 b4	 movss	 DWORD PTR _xmax$19[ebp], xmm0

; 2229 : 						ymax = max ( fabs ( objects_3d_data[object_number].bounding_box.ymin ), fabs ( objects_3d_data[object_number].bounding_box.ymax ) );

  00c3e	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00c42	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00c48	51		 push	 ecx
  00c49	f3 0f 10 44 01
	1c		 movss	 xmm0, DWORD PTR [ecx+eax+28]
  00c4f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c54	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00c59	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR $T4[ebp]
  00c5f	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00c63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00c68	51		 push	 ecx
  00c69	f3 0f 10 44 10
	18		 movss	 xmm0, DWORD PTR [eax+edx+24]
  00c6f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c74	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00c79	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR $T3[ebp]
  00c7f	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00c85	51		 push	 ecx
  00c86	8d 95 2c ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00c8c	52		 push	 edx
  00c8d	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00c92	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c96	f3 0f 11 45 b0	 movss	 DWORD PTR _ymax$18[ebp], xmm0

; 2230 : 						zmax = max ( fabs ( objects_3d_data[object_number].bounding_box.zmin ), fabs ( objects_3d_data[object_number].bounding_box.zmax ) );

  00c9b	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00c9f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00ca5	51		 push	 ecx
  00ca6	f3 0f 10 44 01
	24		 movss	 xmm0, DWORD PTR [ecx+eax+36]
  00cac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cb1	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00cb6	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR $T2[ebp]
  00cbc	6b 55 08 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00cc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00cc5	51		 push	 ecx
  00cc6	f3 0f 10 44 10
	20		 movss	 xmm0, DWORD PTR [eax+edx+32]
  00ccc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cd1	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00cd6	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR $T1[ebp]
  00cdc	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00ce2	51		 push	 ecx
  00ce3	8d 95 24 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00ce9	52		 push	 edx
  00cea	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00cef	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00cf3	f3 0f 11 45 ac	 movss	 DWORD PTR _zmax$17[ebp], xmm0

; 2231 : 	
; 2232 : 						xmax = xmax / 32767.0;

  00cf8	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _xmax$19[ebp]
  00cfd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00d05	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d09	f3 0f 11 45 b4	 movss	 DWORD PTR _xmax$19[ebp], xmm0

; 2233 : 						ymax = ymax / 32767.0;

  00d0e	f3 0f 5a 45 b0	 cvtss2sd xmm0, DWORD PTR _ymax$18[ebp]
  00d13	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00d1b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d1f	f3 0f 11 45 b0	 movss	 DWORD PTR _ymax$18[ebp], xmm0

; 2234 : 						zmax = zmax / 32767.0;

  00d24	f3 0f 5a 45 ac	 cvtss2sd xmm0, DWORD PTR _zmax$17[ebp]
  00d29	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40dfffc000000000
  00d31	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d35	f3 0f 11 45 ac	 movss	 DWORD PTR _zmax$17[ebp], xmm0

; 2235 : 	
; 2236 : 						point_count = 0;

  00d3a	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _point_count$22[ebp], 0

; 2237 : 	
; 2238 : 						for ( count = 0; count < current_object_3d_surface->number_of_faces; count++ )

  00d41	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _count$21[ebp], 0
  00d48	eb 09		 jmp	 SHORT $LN10@draw_3d_ob
$LN8@draw_3d_ob:
  00d4a	8b 45 bc	 mov	 eax, DWORD PTR _count$21[ebp]
  00d4d	83 c0 01	 add	 eax, 1
  00d50	89 45 bc	 mov	 DWORD PTR _count$21[ebp], eax
$LN10@draw_3d_ob:
  00d53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00d58	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00d5c	39 4d bc	 cmp	 DWORD PTR _count$21[ebp], ecx
  00d5f	0f 8d ee 01 00
	00		 jge	 $LN9@draw_3d_ob

; 2239 : 						{
; 2240 : 	
; 2241 : 							int
; 2242 : 								surface_point_index,
; 2243 : 								point_index;
; 2244 : 	
; 2245 : 							vec3d
; 2246 : 								normal;
; 2247 : 	
; 2248 : 							calculate_line_normal ( this_object_3d_info, &normal );

  00d65	8d 45 98	 lea	 eax, DWORD PTR _normal$14[ebp]
  00d68	50		 push	 eax
  00d69	8b 4d 0c	 mov	 ecx, DWORD PTR _this_object_3d_info$[ebp]
  00d6c	51		 push	 ecx
  00d6d	e8 00 00 00 00	 call	 ?calculate_line_normal@@YGXPAUOBJECT_3D_INFO@@PAUVEC3D@@@Z ; calculate_line_normal

; 2249 : 	
; 2250 : 							surface_point_index = current_object_3d_point_list[point_count].point;

  00d72	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00d77	03 45 c0	 add	 eax, DWORD PTR _point_count$22[ebp]
  00d7a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00d7d	89 4d a8	 mov	 DWORD PTR _surface_point_index$16[ebp], ecx

; 2251 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00d80	8b 45 a8	 mov	 eax, DWORD PTR _surface_point_index$16[ebp]
  00d83	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00d89	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00d8d	89 55 a4	 mov	 DWORD PTR _point_index$15[ebp], edx

; 2252 : 	
; 2253 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00d90	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00d94	6b 4d a4 06	 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00d98	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00d9e	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00da2	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00da6	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00daa	f3 0f 59 45 b4	 mulss	 xmm0, DWORD PTR _xmax$19[ebp]
  00daf	8b 55 c0	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00db2	c1 e2 05	 shl	 edx, 5
  00db5	8b 45 b8	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00db8	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2254 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00dbd	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00dc1	6b 4d a4 06	 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00dc5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00dcb	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00dcf	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  00dd4	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00dd8	f3 0f 59 45 b0	 mulss	 xmm0, DWORD PTR _ymax$18[ebp]
  00ddd	8b 55 c0	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00de0	c1 e2 05	 shl	 edx, 5
  00de3	8b 45 b8	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00de6	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2255 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  00dec	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00df0	6b 4d a4 06	 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00df4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00dfa	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00dfe	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  00e03	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00e07	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _zmax$17[ebp]
  00e0c	8b 55 c0	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00e0f	c1 e2 05	 shl	 edx, 5
  00e12	8b 45 b8	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00e15	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2256 : 	
; 2257 : 							vertices[point_count].nx = normal.x;

  00e1b	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00e1e	c1 e0 05	 shl	 eax, 5
  00e21	8b 4d b8	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00e24	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _normal$14[ebp]
  00e29	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2258 : 							vertices[point_count].ny = normal.y;

  00e2f	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00e32	c1 e0 05	 shl	 eax, 5
  00e35	8b 4d b8	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00e38	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _normal$14[ebp+4]
  00e3d	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2259 : 							vertices[point_count].nz = normal.z;

  00e43	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00e46	c1 e0 05	 shl	 eax, 5
  00e49	8b 4d b8	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00e4c	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _normal$14[ebp+8]
  00e51	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2260 : 	
; 2261 : 							point_count++;

  00e57	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00e5a	83 c0 01	 add	 eax, 1
  00e5d	89 45 c0	 mov	 DWORD PTR _point_count$22[ebp], eax

; 2262 : 	
; 2263 : 							surface_point_index = current_object_3d_point_list[point_count].point;

  00e60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00e65	03 45 c0	 add	 eax, DWORD PTR _point_count$22[ebp]
  00e68	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00e6b	89 4d a8	 mov	 DWORD PTR _surface_point_index$16[ebp], ecx

; 2264 : 							point_index = current_object_3d_surface_point_list[surface_point_index].point;

  00e6e	8b 45 a8	 mov	 eax, DWORD PTR _surface_point_index$16[ebp]
  00e71	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00e77	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00e7b	89 55 a4	 mov	 DWORD PTR _point_index$15[ebp], edx

; 2265 : 	
; 2266 : 							vertices[point_count].x = ( float ) objects_3d_data[object_number].points[point_index].x * xmax;

  00e7e	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00e82	6b 4d a4 06	 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00e86	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00e8c	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00e90	0f bf 0c 08	 movsx	 ecx, WORD PTR [eax+ecx]
  00e94	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00e98	f3 0f 59 45 b4	 mulss	 xmm0, DWORD PTR _xmax$19[ebp]
  00e9d	8b 55 c0	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00ea0	c1 e2 05	 shl	 edx, 5
  00ea3	8b 45 b8	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00ea6	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 2267 : 							vertices[point_count].y = ( float ) objects_3d_data[object_number].points[point_index].y * ymax;

  00eab	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00eaf	6b 4d a4 06	 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00eb3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00eb9	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00ebd	0f bf 4c 08 02	 movsx	 ecx, WORD PTR [eax+ecx+2]
  00ec2	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00ec6	f3 0f 59 45 b0	 mulss	 xmm0, DWORD PTR _ymax$18[ebp]
  00ecb	8b 55 c0	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00ece	c1 e2 05	 shl	 edx, 5
  00ed1	8b 45 b8	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00ed4	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 2268 : 							vertices[point_count].z = ( float ) objects_3d_data[object_number].points[point_index].z * zmax;

  00eda	6b 45 08 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00ede	6b 4d a4 06	 imul	 ecx, DWORD PTR _point_index$15[ebp], 6
  00ee2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00ee8	8b 44 02 40	 mov	 eax, DWORD PTR [edx+eax+64]
  00eec	0f bf 4c 08 04	 movsx	 ecx, WORD PTR [eax+ecx+4]
  00ef1	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00ef5	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _zmax$17[ebp]
  00efa	8b 55 c0	 mov	 edx, DWORD PTR _point_count$22[ebp]
  00efd	c1 e2 05	 shl	 edx, 5
  00f00	8b 45 b8	 mov	 eax, DWORD PTR _vertices$20[ebp]
  00f03	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 2269 : 	
; 2270 : 							vertices[point_count].nx = normal.x;

  00f09	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00f0c	c1 e0 05	 shl	 eax, 5
  00f0f	8b 4d b8	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00f12	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _normal$14[ebp]
  00f17	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 2271 : 							vertices[point_count].ny = normal.y;

  00f1d	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00f20	c1 e0 05	 shl	 eax, 5
  00f23	8b 4d b8	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00f26	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _normal$14[ebp+4]
  00f2b	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 2272 : 							vertices[point_count].nz = normal.z;

  00f31	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00f34	c1 e0 05	 shl	 eax, 5
  00f37	8b 4d b8	 mov	 ecx, DWORD PTR _vertices$20[ebp]
  00f3a	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _normal$14[ebp+8]
  00f3f	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 2273 : 	
; 2274 : 							point_count++;

  00f45	8b 45 c0	 mov	 eax, DWORD PTR _point_count$22[ebp]
  00f48	83 c0 01	 add	 eax, 1
  00f4b	89 45 c0	 mov	 DWORD PTR _point_count$22[ebp], eax

; 2275 : 						}

  00f4e	e9 f7 fd ff ff	 jmp	 $LN8@draw_3d_ob
$LN9@draw_3d_ob:

; 2276 : 	
; 2277 : 						ASSERT ( point_count < 2048 );

  00f53	81 7d c0 00 08
	00 00		 cmp	 DWORD PTR _point_count$22[ebp], 2048 ; 00000800H
  00f5a	7c 1a		 jl	 SHORT $LN49@draw_3d_ob
  00f5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z@4JA
  00f61	05 66 01 00 00	 add	 eax, 358		; 00000166H
  00f66	50		 push	 eax
  00f67	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BJCIJNJI@c?3?2users?2nhv90?2projects?2eech?2mo@
  00f6c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DAGHMEDB@point_count?5?$DM?52048@
  00f71	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN49@draw_3d_ob:

; 2278 : 	
; 2279 : 						f3d_vertex_unlock ( d3d.hardware_untransformed_buffer );

  00f76	a1 5c 24 02 00	 mov	 eax, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00f7b	50		 push	 eax
  00f7c	e8 00 00 00 00	 call	 ?f3d_vertex_unlock@@YGXPAUIDirect3DVertexBuffer7@@@Z ; f3d_vertex_unlock

; 2280 : 	
; 2281 : 						f3d_draw_vb ( D3DPT_LINELIST, d3d.hardware_untransformed_buffer,

  00f81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f86	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00f8a	d1 e1		 shl	 ecx, 1
  00f8c	51		 push	 ecx
  00f8d	68 00 00 00 00	 push	 OFFSET ?d3d_hardware_vertex_indices@@3PAGA ; d3d_hardware_vertex_indices
  00f92	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00f98	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00f9c	d1 e0		 shl	 eax, 1
  00f9e	50		 push	 eax
  00f9f	6a 00		 push	 0
  00fa1	8b 0d 5c 24 02
	00		 mov	 ecx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A+140380
  00fa7	51		 push	 ecx
  00fa8	6a 02		 push	 2
  00faa	e8 00 00 00 00	 call	 ?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z ; f3d_draw_vb
$LN48@draw_3d_ob:

; 2282 : 																							0,
; 2283 : 																							current_object_3d_surface->number_of_faces * 2,
; 2284 : 																							d3d_hardware_vertex_indices,
; 2285 : 																							current_object_3d_surface->number_of_faces * 2 );
; 2286 : 					}
; 2287 : 				}
; 2288 : 			}
; 2289 : 		}
; 2290 : 
; 2291 : 		//
; 2292 : 		// Move onto the next surface
; 2293 : 		//
; 2294 : 
; 2295 : 		if ( current_object_3d_surface->polygons )

  00faf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00fb4	66 8b 08	 mov	 cx, WORD PTR [eax]
  00fb7	66 83 e1 01	 and	 cx, 1
  00fbb	0f b7 d1	 movzx	 edx, cx
  00fbe	85 d2		 test	 edx, edx
  00fc0	74 66		 je	 SHORT $LN50@draw_3d_ob

; 2296 : 		{
; 2297 : 
; 2298 : 			int
; 2299 : 				faces_left;
; 2300 : 
; 2301 : 			for ( faces_left = current_object_3d_surface->number_of_faces; faces_left > 0; faces_left-- )

  00fc2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00fc7	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00fcb	89 4d 94	 mov	 DWORD PTR _faces_left$13[ebp], ecx
  00fce	eb 09		 jmp	 SHORT $LN13@draw_3d_ob
$LN11@draw_3d_ob:
  00fd0	8b 45 94	 mov	 eax, DWORD PTR _faces_left$13[ebp]
  00fd3	83 e8 01	 sub	 eax, 1
  00fd6	89 45 94	 mov	 DWORD PTR _faces_left$13[ebp], eax
$LN13@draw_3d_ob:
  00fd9	83 7d 94 00	 cmp	 DWORD PTR _faces_left$13[ebp], 0
  00fdd	7e 47		 jle	 SHORT $LN12@draw_3d_ob

; 2302 : 			{
; 2303 : 
; 2304 : 				current_object_3d_point_list += current_object_3d_faces->number_of_points;

  00fdf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A ; current_object_3d_faces
  00fe4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00fe7	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00fed	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, ecx ; current_object_3d_point_list

; 2305 : 
; 2306 : 				if ( !current_object_3d_surface->smoothed )

  00ff3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00ff8	66 8b 08	 mov	 cx, WORD PTR [eax]
  00ffb	66 c1 e9 02	 shr	 cx, 2
  00fff	66 83 e1 01	 and	 cx, 1
  01003	0f b7 d1	 movzx	 edx, cx
  01006	85 d2		 test	 edx, edx
  01008	75 0d		 jne	 SHORT $LN52@draw_3d_ob

; 2307 : 				{
; 2308 : 
; 2309 : 					current_object_3d_face_normal_list++;

  0100a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0100f	83 c0 02	 add	 eax, 2
  01012	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, eax ; current_object_3d_face_normal_list
$LN52@draw_3d_ob:

; 2310 : 				}
; 2311 : 
; 2312 : 				current_object_3d_faces++;

  01017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A ; current_object_3d_faces
  0101c	83 c0 01	 add	 eax, 1
  0101f	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A, eax ; current_object_3d_faces

; 2313 : 			}

  01024	eb aa		 jmp	 SHORT $LN11@draw_3d_ob
$LN12@draw_3d_ob:

; 2314 : 		}
; 2315 : 		else

  01026	eb 17		 jmp	 SHORT $LN51@draw_3d_ob
$LN50@draw_3d_ob:

; 2316 : 		{
; 2317 : 			current_object_3d_point_list += current_object_3d_surface->number_of_faces * 2;

  01028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0102d	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  01031	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  01037	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  0103a	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, eax ; current_object_3d_point_list
$LN51@draw_3d_ob:

; 2318 : 		}
; 2319 : 
; 2320 : 		current_object_3d_surface_point_list += number_of_surface_points;

  0103f	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$34[ebp]
  01042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  01048	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0104b	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_list

; 2321 : 
; 2322 : 		if ( current_object_3d_surface->smoothed )

  01051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  01056	66 8b 08	 mov	 cx, WORD PTR [eax]
  01059	66 c1 e9 02	 shr	 cx, 2
  0105d	66 83 e1 01	 and	 cx, 1
  01061	0f b7 d1	 movzx	 edx, cx
  01064	85 d2		 test	 edx, edx
  01066	74 12		 je	 SHORT $LN53@draw_3d_ob

; 2323 : 		{
; 2324 : 	
; 2325 : 			current_object_3d_surface_point_normal_list += number_of_surface_points;

  01068	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$34[ebp]
  0106b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  01071	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  01074	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, edx ; current_object_3d_surface_point_normal_list
$LN53@draw_3d_ob:

; 2326 : 		}
; 2327 : 
; 2328 : 		if ( current_object_3d_surface->textured )

  0107a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0107f	66 8b 08	 mov	 cx, WORD PTR [eax]
  01082	66 c1 e9 03	 shr	 cx, 3
  01086	66 83 e1 01	 and	 cx, 1
  0108a	0f b7 d1	 movzx	 edx, cx
  0108d	85 d2		 test	 edx, edx
  0108f	74 12		 je	 SHORT $LN54@draw_3d_ob

; 2329 : 		{
; 2330 : 
; 2331 : 			current_object_3d_surface_point_texture_list += number_of_surface_points;

  01091	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$34[ebp]
  01094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0109a	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  0109d	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, edx ; current_object_3d_surface_point_texture_list
$LN54@draw_3d_ob:

; 2332 : 		}
; 2333 : 
; 2334 : 		if ( current_object_3d_surface->has_luminosity_texture )

  010a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  010a8	66 8b 08	 mov	 cx, WORD PTR [eax]
  010ab	66 c1 e9 04	 shr	 cx, 4
  010af	66 83 e1 01	 and	 cx, 1
  010b3	0f b7 d1	 movzx	 edx, cx
  010b6	85 d2		 test	 edx, edx
  010b8	74 12		 je	 SHORT $LN55@draw_3d_ob

; 2335 : 		{
; 2336 : 
; 2337 : 			current_object_3d_surface_point_texture_list += number_of_surface_points;

  010ba	8b 45 f8	 mov	 eax, DWORD PTR _number_of_surface_points$34[ebp]
  010bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  010c3	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  010c6	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, edx ; current_object_3d_surface_point_texture_list
$LN55@draw_3d_ob:

; 2338 : 		}
; 2339 : 
; 2340 : 		current_object_3d_surface++;

  010cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  010d1	83 c0 10	 add	 eax, 16			; 00000010H
  010d4	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, eax ; current_object_3d_surface

; 2341 : 	}

  010d9	e9 d7 ef ff ff	 jmp	 $LN2@draw_3d_ob
$LN3@draw_3d_ob:

; 2342 : }

  010de	5f		 pop	 edi
  010df	5e		 pop	 esi
  010e0	5b		 pop	 ebx
  010e1	8b e5		 mov	 esp, ebp
  010e3	5d		 pop	 ebp
  010e4	c2 08 00	 ret	 8
?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ENDP ; draw_3d_object_hardware_faces
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z
_TEXT	SEGMENT
_itmp$1 = -376						; size = 4
_rel$2 = -372						; size = 12
_matrix$3 = -360					; size = 64
_object_outcode$4 = -296				; size = 4
_z$5 = -292						; size = 4
_y$6 = -288						; size = 4
_x$7 = -284						; size = 4
_rel_pos$8 = -280					; size = 12
_itmp$9 = -268						; size = 4
_tmp$10 = -264						; size = 4
_vp$ = -260						; size = 48
_relative_roll$ = -212					; size = 4
_relative_pitch$ = -208					; size = 4
_relative_heading$ = -204				; size = 4
_old_current_object_3d_relative_position$ = -200	; size = 4
_relative_scale$ = -196					; size = 12
_relative_position$ = -184				; size = 12
_sub_pos$ = -172					; size = 12
_object_unit_pos$ = -160				; size = 12
_object_pos$ = -148					; size = 12
_temp_scale$ = -136					; size = 12
_scaled_relative_position$ = -124			; size = 12
_object_camera_direction$ = -112			; size = 12
_object_camera_position$ = -100				; size = 12
_temp_matrix$ = -88					; size = 36
_relative_attitude$ = -52				; size = 36
_old_current_object_3d_dissolve_factor$ = -16		; size = 4
_relative_dissolve$ = -12				; size = 4
_object_number$ = -8					; size = 4
_count$ = -4						; size = 4
_obj$ = 8						; size = 4
_scene$ = 12						; size = 4
_parent_viewpoint$ = 16					; size = 4
_position$ = 20						; size = 4
_infrared_override$ = 24				; size = 4
?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z PROC ; draw_zbuffered_sub_object, COMDAT

; 1474 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 01 00
	00		 sub	 esp, 440		; 000001b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1475 : 	
; 1476 : 	int
; 1477 : 		count,
; 1478 : 		object_number,
; 1479 : 		relative_dissolve;
; 1480 : 
; 1481 : 	float
; 1482 : 		old_current_object_3d_dissolve_factor;
; 1483 : 
; 1484 : 	matrix3x3
; 1485 : 		relative_attitude,
; 1486 : 		temp_matrix;
; 1487 : 
; 1488 : 	vec3d
; 1489 : 		object_camera_position,
; 1490 : 		object_camera_direction,
; 1491 : 		scaled_relative_position,
; 1492 : 		temp_scale,
; 1493 : 		object_pos,
; 1494 : 		object_unit_pos,
; 1495 : 		sub_pos,
; 1496 : 		relative_position,
; 1497 : 		relative_scale,
; 1498 : 		*old_current_object_3d_relative_position;
; 1499 : 
; 1500 : 	float
; 1501 : 		relative_heading,
; 1502 : 		relative_pitch,
; 1503 : 		relative_roll;
; 1504 : 
; 1505 : 	viewpoint
; 1506 : 		vp;
; 1507 : 
; 1508 : 	//
; 1509 : 	// We no longer need the lights to be used for all the objects, so just reset the stats!
; 1510 : 	//
; 1511 : 
; 1512 : 	object_3d_points_current_base = 0;

  0000c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_points_current_base@@3HA, 0 ; object_3d_points_current_base

; 1513 : 
; 1514 : 	object_3d_object_current_base = 0;

  00016	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_current_base@@3HA, 0 ; object_3d_object_current_base

; 1515 : 
; 1516 : 	object_3d_light_3d_current_base = 0;

  00020	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_light_3d_current_base@@3HA, 0 ; object_3d_light_3d_current_base

; 1517 : 
; 1518 : 	//
; 1519 : 	// Get the positions & object number
; 1520 : 	//
; 1521 : 
; 1522 : 	if ( obj )

  0002a	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0002e	0f 84 87 00 00
	00		 je	 $LN8@draw_zbuff

; 1523 : 	{
; 1524 : 
; 1525 : 		relative_position = obj->relative_position;

  00034	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00037	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003c	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _relative_position$[ebp], ecx
  00042	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00045	89 95 4c ff ff
	ff		 mov	 DWORD PTR _relative_position$[ebp+4], edx
  0004b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0004e	89 85 50 ff ff
	ff		 mov	 DWORD PTR _relative_position$[ebp+8], eax

; 1526 : 		relative_scale = obj->relative_scale;

  00054	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00057	83 c0 24	 add	 eax, 36			; 00000024H
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _relative_scale$[ebp], ecx
  00062	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00065	89 95 40 ff ff
	ff		 mov	 DWORD PTR _relative_scale$[ebp+4], edx
  0006b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0006e	89 85 44 ff ff
	ff		 mov	 DWORD PTR _relative_scale$[ebp+8], eax

; 1527 : 		relative_heading = obj->relative_heading;

  00074	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00077	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  0007c	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _relative_heading$[ebp], xmm0

; 1528 : 		relative_pitch = obj->relative_pitch;

  00084	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00087	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0008c	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _relative_pitch$[ebp], xmm0

; 1529 : 		relative_roll = obj->relative_roll;

  00094	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00097	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0009c	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _relative_roll$[ebp], xmm0

; 1530 : 		relative_dissolve = obj->object_dissolve_value;

  000a4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000aa	c1 e9 04	 shr	 ecx, 4
  000ad	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000b3	89 4d f4	 mov	 DWORD PTR _relative_dissolve$[ebp], ecx

; 1531 : 	}
; 1532 : 	else

  000b6	e9 13 01 00 00	 jmp	 $LN9@draw_zbuff
$LN8@draw_zbuff:

; 1533 : 	{
; 1534 : 
; 1535 : 		relative_position.x = scene->keyframes[0].x;

  000bb	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000c0	6b c8 00	 imul	 ecx, eax, 0
  000c3	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  000c6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000c9	f3 0f 10 44 08
	08		 movss	 xmm0, DWORD PTR [eax+ecx+8]
  000cf	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _relative_position$[ebp], xmm0

; 1536 : 		relative_position.y = scene->keyframes[0].y;

  000d7	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000dc	6b c8 00	 imul	 ecx, eax, 0
  000df	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  000e2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000e5	f3 0f 10 44 08
	0c		 movss	 xmm0, DWORD PTR [eax+ecx+12]
  000eb	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _relative_position$[ebp+4], xmm0

; 1537 : 		relative_position.z = scene->keyframes[0].z;

  000f3	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000f8	6b c8 00	 imul	 ecx, eax, 0
  000fb	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  000fe	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00101	f3 0f 10 44 08
	10		 movss	 xmm0, DWORD PTR [eax+ecx+16]
  00107	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _relative_position$[ebp+8], xmm0

; 1538 : 		relative_scale.x = scene->keyframes[0].scale_x;

  0010f	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00114	6b c8 00	 imul	 ecx, eax, 0
  00117	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  0011a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0011d	f3 0f 10 44 08
	20		 movss	 xmm0, DWORD PTR [eax+ecx+32]
  00123	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _relative_scale$[ebp], xmm0

; 1539 : 		relative_scale.y = scene->keyframes[0].scale_y;

  0012b	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00130	6b c8 00	 imul	 ecx, eax, 0
  00133	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  00136	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00139	f3 0f 10 44 08
	24		 movss	 xmm0, DWORD PTR [eax+ecx+36]
  0013f	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _relative_scale$[ebp+4], xmm0

; 1540 : 		relative_scale.z = scene->keyframes[0].scale_z;

  00147	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  0014c	6b c8 00	 imul	 ecx, eax, 0
  0014f	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  00152	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00155	f3 0f 10 44 08
	28		 movss	 xmm0, DWORD PTR [eax+ecx+40]
  0015b	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _relative_scale$[ebp+8], xmm0

; 1541 : 		relative_heading = scene->keyframes[0].heading;

  00163	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00168	6b c8 00	 imul	 ecx, eax, 0
  0016b	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  0016e	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00171	f3 0f 10 44 08
	14		 movss	 xmm0, DWORD PTR [eax+ecx+20]
  00177	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _relative_heading$[ebp], xmm0

; 1542 : 		relative_pitch = scene->keyframes[0].pitch;

  0017f	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00184	6b c8 00	 imul	 ecx, eax, 0
  00187	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  0018a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0018d	f3 0f 10 44 08
	18		 movss	 xmm0, DWORD PTR [eax+ecx+24]
  00193	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _relative_pitch$[ebp], xmm0

; 1543 : 		relative_roll = scene->keyframes[0].roll;

  0019b	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  001a0	6b c8 00	 imul	 ecx, eax, 0
  001a3	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  001a6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001a9	f3 0f 10 44 08
	1c		 movss	 xmm0, DWORD PTR [eax+ecx+28]
  001af	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _relative_roll$[ebp], xmm0

; 1544 : 		relative_dissolve = scene->object_dissolve * 255.0;

  001b7	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  001ba	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  001bf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  001c7	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  001cb	89 4d f4	 mov	 DWORD PTR _relative_dissolve$[ebp], ecx
$LN9@draw_zbuff:

; 1545 : 	}
; 1546 : 
; 1547 : 	object_number = scene->index;

  001ce	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  001d1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001d4	89 4d f8	 mov	 DWORD PTR _object_number$[ebp], ecx

; 1548 : 
; 1549 : 	//
; 1550 : 	// Set the object dissolve variables
; 1551 : 	//
; 1552 : 
; 1553 : 	{
; 1554 : 
; 1555 : 		float
; 1556 : 			tmp;
; 1557 : 
; 1558 : 		int
; 1559 : 			itmp;
; 1560 : 
; 1561 : 		old_current_object_3d_dissolve_factor = current_object_3d_dissolve_factor;

  001d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001df	f3 0f 11 45 f0	 movss	 DWORD PTR _old_current_object_3d_dissolve_factor$[ebp], xmm0

; 1562 : 
; 1563 : 		current_object_3d_dissolve_value = relative_dissolve;	//obj->object_dissolve_value;

  001e4	8a 45 f4	 mov	 al, BYTE PTR _relative_dissolve$[ebp]
  001e7	a2 00 00 00 00	 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, al ; current_object_3d_dissolve_value

; 1564 : 
; 1565 : 		tmp = current_object_3d_dissolve_value;

  001ec	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  001f3	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001f7	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _tmp$10[ebp], xmm0

; 1566 : 		tmp /= 255.0;

  001ff	f3 0f 5a 85 f8
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _tmp$10[ebp]
  00207	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0020f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00213	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _tmp$10[ebp], xmm0

; 1567 : 
; 1568 : 		current_object_3d_dissolve_factor *= tmp;

  0021b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00223	f3 0f 59 85 f8
	fe ff ff	 mulss	 xmm0, DWORD PTR _tmp$10[ebp]
  0022b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 1569 : 
; 1570 : 		asm_convert_float_to_int ( current_object_3d_dissolve_factor * 255.0, &itmp );

  00233	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _itmp$9[ebp]
  00239	50		 push	 eax
  0023a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00242	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  0024a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0024e	51		 push	 ecx
  0024f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00254	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1571 : 
; 1572 : 		current_object_3d_dissolve_value = itmp;

  00259	8a 85 f4 fe ff
	ff		 mov	 al, BYTE PTR _itmp$9[ebp]
  0025f	a2 00 00 00 00	 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, al ; current_object_3d_dissolve_value

; 1573 : 	}
; 1574 : 	
; 1575 : 	//
; 1576 : 	// Calculate the object's position relative to the viewer.
; 1577 : 	//
; 1578 : 	// NOTE:
; 1579 : 	//		BECAUSE THIS USES THE ROTATION_3D MATRIX, IT TAKES INTO ACCOUNT THE PARENT'S SCALE
; 1580 : 	//
; 1581 : 
; 1582 : 	sub_pos.x = ( ( relative_position.x * rotation_3d[0][0] ) +

  00264	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00269	6b c8 00	 imul	 ecx, eax, 0
  0026c	ba 04 00 00 00	 mov	 edx, 4
  00271	6b c2 00	 imul	 eax, edx, 0
  00274	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  0027c	f3 0f 59 84 01
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  00285	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0028a	c1 e1 00	 shl	 ecx, 0
  0028d	ba 04 00 00 00	 mov	 edx, 4
  00292	6b c2 00	 imul	 eax, edx, 0
  00295	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+4]
  0029d	f3 0f 59 8c 01
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  002a6	f3 0f 58 c1	 addss	 xmm0, xmm1
  002aa	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002af	d1 e1		 shl	 ecx, 1
  002b1	ba 04 00 00 00	 mov	 edx, 4
  002b6	6b c2 00	 imul	 eax, edx, 0
  002b9	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+8]
  002c1	f3 0f 59 8c 01
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  002ca	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ce	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp], xmm0

; 1583 : 					  ( relative_position.y * rotation_3d[1][0] ) +
; 1584 : 					  ( relative_position.z * rotation_3d[2][0] ) );
; 1585 : 	sub_pos.y = ( ( relative_position.x * rotation_3d[0][1] ) +

  002d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002db	6b c8 00	 imul	 ecx, eax, 0
  002de	ba 04 00 00 00	 mov	 edx, 4
  002e3	c1 e2 00	 shl	 edx, 0
  002e6	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  002ee	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  002f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002fc	c1 e0 00	 shl	 eax, 0
  002ff	b9 04 00 00 00	 mov	 ecx, 4
  00304	c1 e1 00	 shl	 ecx, 0
  00307	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+4]
  0030f	f3 0f 59 8c 08
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00318	f3 0f 58 c1	 addss	 xmm0, xmm1
  0031c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00321	d1 e2		 shl	 edx, 1
  00323	b8 04 00 00 00	 mov	 eax, 4
  00328	c1 e0 00	 shl	 eax, 0
  0032b	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+8]
  00333	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  0033c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00340	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+4], xmm0

; 1586 : 					  ( relative_position.y * rotation_3d[1][1] ) +
; 1587 : 					  ( relative_position.z * rotation_3d[2][1] ) );
; 1588 : 	sub_pos.z = ( ( relative_position.x * rotation_3d[0][2] ) +

  00348	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0034d	6b c8 00	 imul	 ecx, eax, 0
  00350	ba 04 00 00 00	 mov	 edx, 4
  00355	d1 e2		 shl	 edx, 1
  00357	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  0035f	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00368	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0036d	c1 e0 00	 shl	 eax, 0
  00370	b9 04 00 00 00	 mov	 ecx, 4
  00375	d1 e1		 shl	 ecx, 1
  00377	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+4]
  0037f	f3 0f 59 8c 08
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00388	f3 0f 58 c1	 addss	 xmm0, xmm1
  0038c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00391	d1 e2		 shl	 edx, 1
  00393	b8 04 00 00 00	 mov	 eax, 4
  00398	d1 e0		 shl	 eax, 1
  0039a	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+8]
  003a2	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  003ab	f3 0f 58 c1	 addss	 xmm0, xmm1
  003af	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+8], xmm0

; 1589 : 					  ( relative_position.y * rotation_3d[1][2] ) +
; 1590 : 					  ( relative_position.z * rotation_3d[2][2] ) );
; 1591 : 
; 1592 : 	sub_pos.x += position->x;

  003b7	8b 45 14	 mov	 eax, DWORD PTR _position$[ebp]
  003ba	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _sub_pos$[ebp]
  003c2	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  003c6	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp], xmm0

; 1593 : 	sub_pos.y += position->y;

  003ce	8b 45 14	 mov	 eax, DWORD PTR _position$[ebp]
  003d1	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _sub_pos$[ebp+4]
  003d9	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  003de	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+4], xmm0

; 1594 : 	sub_pos.z += position->z;

  003e6	8b 45 14	 mov	 eax, DWORD PTR _position$[ebp]
  003e9	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR _sub_pos$[ebp+8]
  003f1	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  003f6	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+8], xmm0

; 1595 : 
; 1596 : 	old_current_object_3d_relative_position = current_object_3d_relative_position;

  003fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00403	89 85 38 ff ff
	ff		 mov	 DWORD PTR _old_current_object_3d_relative_position$[ebp], eax

; 1597 : 
; 1598 : 	current_object_3d_relative_position = &sub_pos;

  00409	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _sub_pos$[ebp]
  0040f	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 1599 : 
; 1600 : 	//
; 1601 : 	// Calculate the object's real world position
; 1602 : 	//
; 1603 : 
; 1604 : 	scaled_relative_position.x = relative_position.x * object_3d_scale.x;

  00414	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  0041c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00424	f3 0f 11 45 84	 movss	 DWORD PTR _scaled_relative_position$[ebp], xmm0

; 1605 : 	scaled_relative_position.y = relative_position.y * object_3d_scale.y;

  00429	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp+4]
  00431	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00439	f3 0f 11 45 88	 movss	 DWORD PTR _scaled_relative_position$[ebp+4], xmm0

; 1606 : 	scaled_relative_position.z = relative_position.z * object_3d_scale.z;

  0043e	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp+8]
  00446	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0044e	f3 0f 11 45 8c	 movss	 DWORD PTR _scaled_relative_position$[ebp+8], xmm0

; 1607 : 
; 1608 : 	vp.x = (	( scaled_relative_position.x * parent_viewpoint->xv.x ) +

  00453	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00456	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _scaled_relative_position$[ebp]
  0045b	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00460	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00463	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+4]
  00468	f3 0f 59 49 18	 mulss	 xmm1, DWORD PTR [ecx+24]
  0046d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00471	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00474	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+8]
  00479	f3 0f 59 4a 24	 mulss	 xmm1, DWORD PTR [edx+36]
  0047e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00482	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _vp$[ebp], xmm0

; 1609 : 				( scaled_relative_position.y * parent_viewpoint->yv.x ) +
; 1610 : 				( scaled_relative_position.z * parent_viewpoint->zv.x ) );
; 1611 : 
; 1612 : 	vp.y = (	( scaled_relative_position.x * parent_viewpoint->xv.y ) +

  0048a	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0048d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _scaled_relative_position$[ebp]
  00492	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  00497	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  0049a	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+4]
  0049f	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  004a4	f3 0f 58 c1	 addss	 xmm0, xmm1
  004a8	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  004ab	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+8]
  004b0	f3 0f 59 4a 28	 mulss	 xmm1, DWORD PTR [edx+40]
  004b5	f3 0f 58 c1	 addss	 xmm0, xmm1
  004b9	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+4], xmm0

; 1613 : 				( scaled_relative_position.y * parent_viewpoint->yv.y ) +
; 1614 : 				( scaled_relative_position.z * parent_viewpoint->zv.y ) );
; 1615 : 
; 1616 : 	vp.z = (	( scaled_relative_position.x * parent_viewpoint->xv.z ) +

  004c1	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  004c4	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _scaled_relative_position$[ebp]
  004c9	f3 0f 59 40 14	 mulss	 xmm0, DWORD PTR [eax+20]
  004ce	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  004d1	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+4]
  004d6	f3 0f 59 49 20	 mulss	 xmm1, DWORD PTR [ecx+32]
  004db	f3 0f 58 c1	 addss	 xmm0, xmm1
  004df	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  004e2	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+8]
  004e7	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  004ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  004f0	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+8], xmm0

; 1617 : 				( scaled_relative_position.y * parent_viewpoint->yv.z ) +
; 1618 : 				( scaled_relative_position.z * parent_viewpoint->zv.z ) );
; 1619 : 
; 1620 : 	vp.x += parent_viewpoint->x;

  004f8	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  004fb	f3 0f 10 85 fc
	fe ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp]
  00503	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00507	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _vp$[ebp], xmm0

; 1621 : 	vp.y += parent_viewpoint->y;

  0050f	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00512	f3 0f 10 85 00
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+4]
  0051a	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0051f	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+4], xmm0

; 1622 : 	vp.z += parent_viewpoint->z;

  00527	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0052a	f3 0f 10 85 04
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+8]
  00532	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00537	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+8], xmm0

; 1623 : 
; 1624 : 	//
; 1625 : 	//	Store the rotation matrix, so when we go back to the parent, other sub objects can inherit the matrix safely
; 1626 : 	//
; 1627 : 
; 1628 : 	memcpy ( temp_matrix, rotation_3d, sizeof ( matrix3x3 ) );

  0053f	6a 24		 push	 36			; 00000024H
  00541	68 00 00 00 00	 push	 OFFSET ?rotation_3d@@3PAY02MA ; rotation_3d
  00546	8d 45 a8	 lea	 eax, DWORD PTR _temp_matrix$[ebp]
  00549	50		 push	 eax
  0054a	e8 00 00 00 00	 call	 _memcpy
  0054f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1629 : 
; 1630 : 	//
; 1631 : 	// Store the scaling before we trash it
; 1632 : 	//
; 1633 : 
; 1634 : 	memcpy ( &temp_scale, &object_3d_scale, sizeof ( vec3d ) );

  00552	6a 0c		 push	 12			; 0000000cH
  00554	68 00 00 00 00	 push	 OFFSET ?object_3d_scale@@3UVEC3D@@A ; object_3d_scale
  00559	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _temp_scale$[ebp]
  0055f	50		 push	 eax
  00560	e8 00 00 00 00	 call	 _memcpy
  00565	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1635 : 
; 1636 : 	//
; 1637 : 	// Alter the scaling according to this object's scale
; 1638 : 	//
; 1639 : 
; 1640 : 	object_3d_scale.x *= relative_scale.x;

  00568	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00570	f3 0f 59 85 3c
	ff ff ff	 mulss	 xmm0, DWORD PTR _relative_scale$[ebp]
  00578	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A, xmm0

; 1641 : 	object_3d_scale.y *= relative_scale.y;

  00580	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00588	f3 0f 59 85 40
	ff ff ff	 mulss	 xmm0, DWORD PTR _relative_scale$[ebp+4]
  00590	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4, xmm0

; 1642 : 	object_3d_scale.z *= relative_scale.z;

  00598	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  005a0	f3 0f 59 85 44
	ff ff ff	 mulss	 xmm0, DWORD PTR _relative_scale$[ebp+8]
  005a8	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8, xmm0

; 1643 : 
; 1644 : 	//
; 1645 : 	// Compute the sub object's relative attitude matrix
; 1646 : 	//
; 1647 : 
; 1648 : 	get_3d_transformation_matrix ( relative_attitude, relative_heading, -relative_pitch, -relative_roll );

  005b0	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_roll$[ebp]
  005b8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005bf	51		 push	 ecx
  005c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c5	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_pitch$[ebp]
  005cd	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005d4	51		 push	 ecx
  005d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005da	51		 push	 ecx
  005db	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_heading$[ebp]
  005e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e8	8d 45 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp]
  005eb	50		 push	 eax
  005ec	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1649 : 
; 1650 : 	//
; 1651 : 	// Calculate the sub object's rotation matrix, to transform its 3d points relative to the parent object.
; 1652 : 	//
; 1653 : 
; 1654 : 	vp.xv.x = ( ( relative_attitude[0][0] * parent_viewpoint->xv.x ) + ( relative_attitude[0][1] * parent_viewpoint->yv.x ) + ( relative_attitude[0][2] * parent_viewpoint->zv.x ) );

  005f1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005f6	6b c8 00	 imul	 ecx, eax, 0
  005f9	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  005fd	b8 04 00 00 00	 mov	 eax, 4
  00602	6b c8 00	 imul	 ecx, eax, 0
  00605	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00608	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0060d	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00612	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00617	6b d1 00	 imul	 edx, ecx, 0
  0061a	8d 44 15 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp+edx]
  0061e	b9 04 00 00 00	 mov	 ecx, 4
  00623	c1 e1 00	 shl	 ecx, 0
  00626	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00629	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  0062e	f3 0f 59 4a 18	 mulss	 xmm1, DWORD PTR [edx+24]
  00633	f3 0f 58 c1	 addss	 xmm0, xmm1
  00637	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0063c	6b c8 00	 imul	 ecx, eax, 0
  0063f	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  00643	b8 04 00 00 00	 mov	 eax, 4
  00648	d1 e0		 shl	 eax, 1
  0064a	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  0064d	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00652	f3 0f 59 49 24	 mulss	 xmm1, DWORD PTR [ecx+36]
  00657	f3 0f 58 c1	 addss	 xmm0, xmm1
  0065b	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+12], xmm0

; 1655 : 	vp.xv.y = ( ( relative_attitude[0][0] * parent_viewpoint->xv.y ) + ( relative_attitude[0][1] * parent_viewpoint->yv.y ) + ( relative_attitude[0][2] * parent_viewpoint->zv.y ) );

  00663	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00668	6b c8 00	 imul	 ecx, eax, 0
  0066b	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0066f	b8 04 00 00 00	 mov	 eax, 4
  00674	6b c8 00	 imul	 ecx, eax, 0
  00677	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0067a	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0067f	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  00684	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00689	6b d1 00	 imul	 edx, ecx, 0
  0068c	8d 44 15 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp+edx]
  00690	b9 04 00 00 00	 mov	 ecx, 4
  00695	c1 e1 00	 shl	 ecx, 0
  00698	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  0069b	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  006a0	f3 0f 59 4a 1c	 mulss	 xmm1, DWORD PTR [edx+28]
  006a5	f3 0f 58 c1	 addss	 xmm0, xmm1
  006a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006ae	6b c8 00	 imul	 ecx, eax, 0
  006b1	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  006b5	b8 04 00 00 00	 mov	 eax, 4
  006ba	d1 e0		 shl	 eax, 1
  006bc	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  006bf	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  006c4	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  006c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  006cd	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+16], xmm0

; 1656 : 	vp.xv.z = ( ( relative_attitude[0][0] * parent_viewpoint->xv.z ) + ( relative_attitude[0][1] * parent_viewpoint->yv.z ) + ( relative_attitude[0][2] * parent_viewpoint->zv.z ) );

  006d5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006da	6b c8 00	 imul	 ecx, eax, 0
  006dd	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  006e1	b8 04 00 00 00	 mov	 eax, 4
  006e6	6b c8 00	 imul	 ecx, eax, 0
  006e9	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  006ec	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  006f1	f3 0f 59 40 14	 mulss	 xmm0, DWORD PTR [eax+20]
  006f6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006fb	6b d1 00	 imul	 edx, ecx, 0
  006fe	8d 44 15 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp+edx]
  00702	b9 04 00 00 00	 mov	 ecx, 4
  00707	c1 e1 00	 shl	 ecx, 0
  0070a	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  0070d	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  00712	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00717	f3 0f 58 c1	 addss	 xmm0, xmm1
  0071b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00720	6b c8 00	 imul	 ecx, eax, 0
  00723	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  00727	b8 04 00 00 00	 mov	 eax, 4
  0072c	d1 e0		 shl	 eax, 1
  0072e	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00731	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00736	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  0073b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0073f	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+20], xmm0

; 1657 : 
; 1658 : 	vp.yv.x = ( ( relative_attitude[1][0] * parent_viewpoint->xv.x ) + ( relative_attitude[1][1] * parent_viewpoint->yv.x ) + ( relative_attitude[1][2] * parent_viewpoint->zv.x ) );

  00747	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0074c	c1 e0 00	 shl	 eax, 0
  0074f	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00753	ba 04 00 00 00	 mov	 edx, 4
  00758	6b c2 00	 imul	 eax, edx, 0
  0075b	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  0075e	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00763	f3 0f 59 42 0c	 mulss	 xmm0, DWORD PTR [edx+12]
  00768	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0076d	c1 e0 00	 shl	 eax, 0
  00770	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00774	ba 04 00 00 00	 mov	 edx, 4
  00779	c1 e2 00	 shl	 edx, 0
  0077c	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0077f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00784	f3 0f 59 48 18	 mulss	 xmm1, DWORD PTR [eax+24]
  00789	f3 0f 58 c1	 addss	 xmm0, xmm1
  0078d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00792	c1 e1 00	 shl	 ecx, 0
  00795	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  00799	b8 04 00 00 00	 mov	 eax, 4
  0079e	d1 e0		 shl	 eax, 1
  007a0	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  007a3	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  007a8	f3 0f 59 49 24	 mulss	 xmm1, DWORD PTR [ecx+36]
  007ad	f3 0f 58 c1	 addss	 xmm0, xmm1
  007b1	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+24], xmm0

; 1659 : 	vp.yv.y = ( ( relative_attitude[1][0] * parent_viewpoint->xv.y ) + ( relative_attitude[1][1] * parent_viewpoint->yv.y ) + ( relative_attitude[1][2] * parent_viewpoint->zv.y ) );

  007b9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007be	c1 e0 00	 shl	 eax, 0
  007c1	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  007c5	ba 04 00 00 00	 mov	 edx, 4
  007ca	6b c2 00	 imul	 eax, edx, 0
  007cd	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  007d0	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  007d5	f3 0f 59 42 10	 mulss	 xmm0, DWORD PTR [edx+16]
  007da	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007df	c1 e0 00	 shl	 eax, 0
  007e2	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  007e6	ba 04 00 00 00	 mov	 edx, 4
  007eb	c1 e2 00	 shl	 edx, 0
  007ee	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  007f1	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  007f6	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  007fb	f3 0f 58 c1	 addss	 xmm0, xmm1
  007ff	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00804	c1 e1 00	 shl	 ecx, 0
  00807	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0080b	b8 04 00 00 00	 mov	 eax, 4
  00810	d1 e0		 shl	 eax, 1
  00812	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00815	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0081a	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  0081f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00823	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+28], xmm0

; 1660 : 	vp.yv.z = ( ( relative_attitude[1][0] * parent_viewpoint->xv.z ) + ( relative_attitude[1][1] * parent_viewpoint->yv.z ) + ( relative_attitude[1][2] * parent_viewpoint->zv.z ) );

  0082b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00830	c1 e0 00	 shl	 eax, 0
  00833	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00837	ba 04 00 00 00	 mov	 edx, 4
  0083c	6b c2 00	 imul	 eax, edx, 0
  0083f	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00842	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00847	f3 0f 59 42 14	 mulss	 xmm0, DWORD PTR [edx+20]
  0084c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00851	c1 e0 00	 shl	 eax, 0
  00854	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00858	ba 04 00 00 00	 mov	 edx, 4
  0085d	c1 e2 00	 shl	 edx, 0
  00860	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00863	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00868	f3 0f 59 48 20	 mulss	 xmm1, DWORD PTR [eax+32]
  0086d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00871	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00876	c1 e1 00	 shl	 ecx, 0
  00879	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0087d	b8 04 00 00 00	 mov	 eax, 4
  00882	d1 e0		 shl	 eax, 1
  00884	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00887	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0088c	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  00891	f3 0f 58 c1	 addss	 xmm0, xmm1
  00895	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+32], xmm0

; 1661 : 
; 1662 : 	vp.zv.x = ( ( relative_attitude[2][0] * parent_viewpoint->xv.x ) + ( relative_attitude[2][1] * parent_viewpoint->yv.x ) + ( relative_attitude[2][2] * parent_viewpoint->zv.x ) );

  0089d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008a2	d1 e0		 shl	 eax, 1
  008a4	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  008a8	ba 04 00 00 00	 mov	 edx, 4
  008ad	6b c2 00	 imul	 eax, edx, 0
  008b0	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  008b3	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  008b8	f3 0f 59 42 0c	 mulss	 xmm0, DWORD PTR [edx+12]
  008bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008c2	d1 e0		 shl	 eax, 1
  008c4	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  008c8	ba 04 00 00 00	 mov	 edx, 4
  008cd	c1 e2 00	 shl	 edx, 0
  008d0	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  008d3	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  008d8	f3 0f 59 48 18	 mulss	 xmm1, DWORD PTR [eax+24]
  008dd	f3 0f 58 c1	 addss	 xmm0, xmm1
  008e1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  008e6	d1 e1		 shl	 ecx, 1
  008e8	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  008ec	b8 04 00 00 00	 mov	 eax, 4
  008f1	d1 e0		 shl	 eax, 1
  008f3	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  008f6	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  008fb	f3 0f 59 49 24	 mulss	 xmm1, DWORD PTR [ecx+36]
  00900	f3 0f 58 c1	 addss	 xmm0, xmm1
  00904	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+36], xmm0

; 1663 : 	vp.zv.y = ( ( relative_attitude[2][0] * parent_viewpoint->xv.y ) + ( relative_attitude[2][1] * parent_viewpoint->yv.y ) + ( relative_attitude[2][2] * parent_viewpoint->zv.y ) );

  0090c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00911	d1 e0		 shl	 eax, 1
  00913	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00917	ba 04 00 00 00	 mov	 edx, 4
  0091c	6b c2 00	 imul	 eax, edx, 0
  0091f	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00922	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00927	f3 0f 59 42 10	 mulss	 xmm0, DWORD PTR [edx+16]
  0092c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00931	d1 e0		 shl	 eax, 1
  00933	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00937	ba 04 00 00 00	 mov	 edx, 4
  0093c	c1 e2 00	 shl	 edx, 0
  0093f	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00942	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00947	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  0094c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00950	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00955	d1 e1		 shl	 ecx, 1
  00957	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0095b	b8 04 00 00 00	 mov	 eax, 4
  00960	d1 e0		 shl	 eax, 1
  00962	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00965	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0096a	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  0096f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00973	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+40], xmm0

; 1664 : 	vp.zv.z = ( ( relative_attitude[2][0] * parent_viewpoint->xv.z ) + ( relative_attitude[2][1] * parent_viewpoint->yv.z ) + ( relative_attitude[2][2] * parent_viewpoint->zv.z ) );

  0097b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00980	d1 e0		 shl	 eax, 1
  00982	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00986	ba 04 00 00 00	 mov	 edx, 4
  0098b	6b c2 00	 imul	 eax, edx, 0
  0098e	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00991	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00996	f3 0f 59 42 14	 mulss	 xmm0, DWORD PTR [edx+20]
  0099b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009a0	d1 e0		 shl	 eax, 1
  009a2	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  009a6	ba 04 00 00 00	 mov	 edx, 4
  009ab	c1 e2 00	 shl	 edx, 0
  009ae	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  009b1	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  009b6	f3 0f 59 48 20	 mulss	 xmm1, DWORD PTR [eax+32]
  009bb	f3 0f 58 c1	 addss	 xmm0, xmm1
  009bf	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  009c4	d1 e1		 shl	 ecx, 1
  009c6	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  009ca	b8 04 00 00 00	 mov	 eax, 4
  009cf	d1 e0		 shl	 eax, 1
  009d1	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  009d4	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  009d9	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  009de	f3 0f 58 c1	 addss	 xmm0, xmm1
  009e2	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+44], xmm0

; 1665 : 
; 1666 : 	//
; 1667 : 	// Calculate the main matrix to transform the points to the screen
; 1668 : 	//
; 1669 : 
; 1670 : 	rotation_3d[0][0] = ( ( vp.xv.x * visual_3d_vp->xv.x ) + ( vp.xv.y * visual_3d_vp->xv.y ) + ( vp.xv.z * visual_3d_vp->xv.z ) );

  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  009ef	f3 0f 10 85 08
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+12]
  009f7	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  009fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a02	f3 0f 10 8d 0c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+16]
  00a0a	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  00a0f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a13	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a19	f3 0f 10 8d 10
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+20]
  00a21	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00a26	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a2a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a2f	6b c8 00	 imul	 ecx, eax, 0
  00a32	ba 04 00 00 00	 mov	 edx, 4
  00a37	6b c2 00	 imul	 eax, edx, 0
  00a3a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 1671 : 	rotation_3d[0][1] = ( ( vp.xv.x * visual_3d_vp->yv.x ) + ( vp.xv.y * visual_3d_vp->yv.y ) + ( vp.xv.z * visual_3d_vp->yv.z ) );

  00a43	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a48	f3 0f 10 85 08
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+12]
  00a50	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00a55	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a5b	f3 0f 10 8d 0c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+16]
  00a63	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  00a68	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a6c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a72	f3 0f 10 8d 10
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+20]
  00a7a	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00a7f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a83	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a88	6b c8 00	 imul	 ecx, eax, 0
  00a8b	ba 04 00 00 00	 mov	 edx, 4
  00a90	c1 e2 00	 shl	 edx, 0
  00a93	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 1672 : 	rotation_3d[0][2] = ( ( vp.xv.x * visual_3d_vp->zv.x ) + ( vp.xv.y * visual_3d_vp->zv.y ) + ( vp.xv.z * visual_3d_vp->zv.z ) );

  00a9c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00aa1	f3 0f 10 85 08
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+12]
  00aa9	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00aae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ab4	f3 0f 10 8d 0c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+16]
  00abc	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00ac1	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ac5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00acb	f3 0f 10 8d 10
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+20]
  00ad3	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00ad8	f3 0f 58 c1	 addss	 xmm0, xmm1
  00adc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ae1	6b c8 00	 imul	 ecx, eax, 0
  00ae4	ba 04 00 00 00	 mov	 edx, 4
  00ae9	d1 e2		 shl	 edx, 1
  00aeb	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 1673 : 
; 1674 : 	rotation_3d[1][0] = ( ( vp.yv.x * visual_3d_vp->xv.x ) + ( vp.yv.y * visual_3d_vp->xv.y ) + ( vp.yv.z * visual_3d_vp->xv.z ) );

  00af4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00af9	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+24]
  00b01	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00b06	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b0c	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+28]
  00b14	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  00b19	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b1d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b23	f3 0f 10 8d 1c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+32]
  00b2b	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00b30	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b34	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b39	c1 e0 00	 shl	 eax, 0
  00b3c	b9 04 00 00 00	 mov	 ecx, 4
  00b41	6b d1 00	 imul	 edx, ecx, 0
  00b44	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1675 : 	rotation_3d[1][1] = ( ( vp.yv.x * visual_3d_vp->yv.x ) + ( vp.yv.y * visual_3d_vp->yv.y ) + ( vp.yv.z * visual_3d_vp->yv.z ) );

  00b4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b52	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+24]
  00b5a	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00b5f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b65	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+28]
  00b6d	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  00b72	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b76	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b7c	f3 0f 10 8d 1c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+32]
  00b84	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00b89	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b8d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b92	c1 e0 00	 shl	 eax, 0
  00b95	b9 04 00 00 00	 mov	 ecx, 4
  00b9a	c1 e1 00	 shl	 ecx, 0
  00b9d	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1676 : 	rotation_3d[1][2] = ( ( vp.yv.x * visual_3d_vp->zv.x ) + ( vp.yv.y * visual_3d_vp->zv.y ) + ( vp.yv.z * visual_3d_vp->zv.z ) );

  00ba6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00bab	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+24]
  00bb3	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00bb8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00bbe	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+28]
  00bc6	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00bcb	f3 0f 58 c1	 addss	 xmm0, xmm1
  00bcf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00bd5	f3 0f 10 8d 1c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+32]
  00bdd	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00be2	f3 0f 58 c1	 addss	 xmm0, xmm1
  00be6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00beb	c1 e0 00	 shl	 eax, 0
  00bee	b9 04 00 00 00	 mov	 ecx, 4
  00bf3	d1 e1		 shl	 ecx, 1
  00bf5	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1677 : 
; 1678 : 	rotation_3d[2][0] = ( ( vp.zv.x * visual_3d_vp->xv.x ) + ( vp.zv.y * visual_3d_vp->xv.y ) + ( vp.zv.z * visual_3d_vp->xv.z ) );

  00bfe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c03	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+36]
  00c0b	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00c10	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c16	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+40]
  00c1e	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  00c23	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c27	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c2d	f3 0f 10 8d 28
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+44]
  00c35	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00c3a	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c3e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c43	d1 e0		 shl	 eax, 1
  00c45	b9 04 00 00 00	 mov	 ecx, 4
  00c4a	6b d1 00	 imul	 edx, ecx, 0
  00c4d	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1679 : 	rotation_3d[2][1] = ( ( vp.zv.x * visual_3d_vp->yv.x ) + ( vp.zv.y * visual_3d_vp->yv.y ) + ( vp.zv.z * visual_3d_vp->yv.z ) );

  00c56	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c5b	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+36]
  00c63	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00c68	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c6e	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+40]
  00c76	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  00c7b	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c7f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c85	f3 0f 10 8d 28
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+44]
  00c8d	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00c92	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c96	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c9b	d1 e0		 shl	 eax, 1
  00c9d	b9 04 00 00 00	 mov	 ecx, 4
  00ca2	c1 e1 00	 shl	 ecx, 0
  00ca5	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1680 : 	rotation_3d[2][2] = ( ( vp.zv.x * visual_3d_vp->zv.x ) + ( vp.zv.y * visual_3d_vp->zv.y ) + ( vp.zv.z * visual_3d_vp->zv.z ) );

  00cae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cb3	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+36]
  00cbb	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00cc0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cc6	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+40]
  00cce	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00cd3	f3 0f 58 c1	 addss	 xmm0, xmm1
  00cd7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cdd	f3 0f 10 8d 28
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+44]
  00ce5	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00cea	f3 0f 58 c1	 addss	 xmm0, xmm1
  00cee	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00cf3	d1 e0		 shl	 eax, 1
  00cf5	b9 04 00 00 00	 mov	 ecx, 4
  00cfa	d1 e1		 shl	 ecx, 1
  00cfc	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1681 : 
; 1682 : 	//
; 1683 : 	// Scale the rotation matrix
; 1684 : 	//
; 1685 : 
; 1686 : 	rotation_3d[0][0] *= object_3d_scale.x;

  00d05	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d0a	6b c8 00	 imul	 ecx, eax, 0
  00d0d	ba 04 00 00 00	 mov	 edx, 4
  00d12	6b c2 00	 imul	 eax, edx, 0
  00d15	f3 0f 10 84 01
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  00d1e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00d26	b9 04 00 00 00	 mov	 ecx, 4
  00d2b	6b d1 00	 imul	 edx, ecx, 0
  00d2e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d33	6b c8 00	 imul	 ecx, eax, 0
  00d36	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 1687 : 	rotation_3d[1][0] *= object_3d_scale.y;

  00d3f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d44	c1 e0 00	 shl	 eax, 0
  00d47	b9 04 00 00 00	 mov	 ecx, 4
  00d4c	6b d1 00	 imul	 edx, ecx, 0
  00d4f	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00d58	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00d60	b8 04 00 00 00	 mov	 eax, 4
  00d65	6b c8 00	 imul	 ecx, eax, 0
  00d68	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00d6d	c1 e2 00	 shl	 edx, 0
  00d70	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 1688 : 	rotation_3d[2][0] *= object_3d_scale.z;

  00d79	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d7e	d1 e0		 shl	 eax, 1
  00d80	b9 04 00 00 00	 mov	 ecx, 4
  00d85	6b d1 00	 imul	 edx, ecx, 0
  00d88	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00d91	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00d99	b8 04 00 00 00	 mov	 eax, 4
  00d9e	6b c8 00	 imul	 ecx, eax, 0
  00da1	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00da6	d1 e2		 shl	 edx, 1
  00da8	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 1689 : 
; 1690 : 	rotation_3d[0][1] *= object_3d_scale.x;

  00db1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00db6	6b c8 00	 imul	 ecx, eax, 0
  00db9	ba 04 00 00 00	 mov	 edx, 4
  00dbe	c1 e2 00	 shl	 edx, 0
  00dc1	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00dca	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00dd2	b8 04 00 00 00	 mov	 eax, 4
  00dd7	c1 e0 00	 shl	 eax, 0
  00dda	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00ddf	6b d1 00	 imul	 edx, ecx, 0
  00de2	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 1691 : 	rotation_3d[1][1] *= object_3d_scale.y;

  00deb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00df0	c1 e0 00	 shl	 eax, 0
  00df3	b9 04 00 00 00	 mov	 ecx, 4
  00df8	c1 e1 00	 shl	 ecx, 0
  00dfb	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00e04	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00e0c	ba 04 00 00 00	 mov	 edx, 4
  00e11	c1 e2 00	 shl	 edx, 0
  00e14	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e19	c1 e0 00	 shl	 eax, 0
  00e1c	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1692 : 	rotation_3d[2][1] *= object_3d_scale.z;

  00e25	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e2a	d1 e0		 shl	 eax, 1
  00e2c	b9 04 00 00 00	 mov	 ecx, 4
  00e31	c1 e1 00	 shl	 ecx, 0
  00e34	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00e3d	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00e45	ba 04 00 00 00	 mov	 edx, 4
  00e4a	c1 e2 00	 shl	 edx, 0
  00e4d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e52	d1 e0		 shl	 eax, 1
  00e54	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1693 : 
; 1694 : 	rotation_3d[0][2] *= object_3d_scale.x;

  00e5d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e62	6b c8 00	 imul	 ecx, eax, 0
  00e65	ba 04 00 00 00	 mov	 edx, 4
  00e6a	d1 e2		 shl	 edx, 1
  00e6c	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00e75	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00e7d	b8 04 00 00 00	 mov	 eax, 4
  00e82	d1 e0		 shl	 eax, 1
  00e84	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00e89	6b d1 00	 imul	 edx, ecx, 0
  00e8c	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 1695 : 	rotation_3d[1][2] *= object_3d_scale.y;

  00e95	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e9a	c1 e0 00	 shl	 eax, 0
  00e9d	b9 04 00 00 00	 mov	 ecx, 4
  00ea2	d1 e1		 shl	 ecx, 1
  00ea4	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00ead	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00eb5	ba 04 00 00 00	 mov	 edx, 4
  00eba	d1 e2		 shl	 edx, 1
  00ebc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ec1	c1 e0 00	 shl	 eax, 0
  00ec4	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1696 : 	rotation_3d[2][2] *= object_3d_scale.z;

  00ecd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ed2	d1 e0		 shl	 eax, 1
  00ed4	b9 04 00 00 00	 mov	 ecx, 4
  00ed9	d1 e1		 shl	 ecx, 1
  00edb	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00ee4	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00eec	ba 04 00 00 00	 mov	 edx, 4
  00ef1	d1 e2		 shl	 edx, 1
  00ef3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ef8	d1 e0		 shl	 eax, 1
  00efa	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1697 : 
; 1698 : 	if ( object_number )

  00f03	83 7d f8 00	 cmp	 DWORD PTR _object_number$[ebp], 0
  00f07	0f 84 ec 0a 00
	00		 je	 $LN14@draw_zbuff

; 1699 : 	{
; 1700 : 
; 1701 : 		//
; 1702 : 		// Calculate the relative camera position in the object viewspace
; 1703 : 		//
; 1704 : 	
; 1705 : 		{
; 1706 : 	
; 1707 : 			vec3d
; 1708 : 				rel_pos;
; 1709 : 	
; 1710 : 			rel_pos.x = visual_3d_vp->x - vp.x;

  00f0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f12	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00f16	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00f1e	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _rel_pos$8[ebp], xmm0

; 1711 : 			rel_pos.y = visual_3d_vp->y - vp.y;

  00f26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f2b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00f30	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  00f38	f3 0f 11 85 ec
	fe ff ff	 movss	 DWORD PTR _rel_pos$8[ebp+4], xmm0

; 1712 : 			rel_pos.z = visual_3d_vp->z - vp.z;

  00f40	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f45	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00f4a	f3 0f 5c 85 04
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00f52	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _rel_pos$8[ebp+8], xmm0

; 1713 : 	
; 1714 : 			object_camera_position.x = ( rel_pos.x * vp.attitude[0][0] + rel_pos.y * vp.attitude[0][1] + rel_pos.z * vp.attitude[0][2] );

  00f5a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f5f	6b c8 00	 imul	 ecx, eax, 0
  00f62	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  00f69	b8 04 00 00 00	 mov	 eax, 4
  00f6e	6b c8 00	 imul	 ecx, eax, 0
  00f71	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _rel_pos$8[ebp]
  00f79	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00f7e	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00f83	6b c2 00	 imul	 eax, edx, 0
  00f86	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  00f8d	ba 04 00 00 00	 mov	 edx, 4
  00f92	c1 e2 00	 shl	 edx, 0
  00f95	f3 0f 10 8d ec
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$8[ebp+4]
  00f9d	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00fa2	f3 0f 58 c1	 addss	 xmm0, xmm1
  00fa6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00fab	6b c8 00	 imul	 ecx, eax, 0
  00fae	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  00fb5	b8 04 00 00 00	 mov	 eax, 4
  00fba	d1 e0		 shl	 eax, 1
  00fbc	f3 0f 10 8d f0
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$8[ebp+8]
  00fc4	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00fc9	f3 0f 58 c1	 addss	 xmm0, xmm1
  00fcd	f3 0f 11 45 9c	 movss	 DWORD PTR _object_camera_position$[ebp], xmm0

; 1715 : 			object_camera_position.y = ( rel_pos.x * vp.attitude[1][0] + rel_pos.y * vp.attitude[1][1] + rel_pos.z * vp.attitude[1][2] );

  00fd2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00fd7	c1 e0 00	 shl	 eax, 0
  00fda	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  00fe1	ba 04 00 00 00	 mov	 edx, 4
  00fe6	6b c2 00	 imul	 eax, edx, 0
  00fe9	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _rel_pos$8[ebp]
  00ff1	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00ff6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00ffb	c1 e1 00	 shl	 ecx, 0
  00ffe	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  01005	b8 04 00 00 00	 mov	 eax, 4
  0100a	c1 e0 00	 shl	 eax, 0
  0100d	f3 0f 10 8d ec
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$8[ebp+4]
  01015	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0101a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0101e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01023	c1 e1 00	 shl	 ecx, 0
  01026	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0102d	b8 04 00 00 00	 mov	 eax, 4
  01032	d1 e0		 shl	 eax, 1
  01034	f3 0f 10 8d f0
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$8[ebp+8]
  0103c	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  01041	f3 0f 58 c1	 addss	 xmm0, xmm1
  01045	f3 0f 11 45 a0	 movss	 DWORD PTR _object_camera_position$[ebp+4], xmm0

; 1716 : 			object_camera_position.z = ( rel_pos.x * vp.attitude[2][0] + rel_pos.y * vp.attitude[2][1] + rel_pos.z * vp.attitude[2][2] );

  0104a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0104f	d1 e0		 shl	 eax, 1
  01051	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  01058	ba 04 00 00 00	 mov	 edx, 4
  0105d	6b c2 00	 imul	 eax, edx, 0
  01060	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _rel_pos$8[ebp]
  01068	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0106d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01072	d1 e1		 shl	 ecx, 1
  01074	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0107b	b8 04 00 00 00	 mov	 eax, 4
  01080	c1 e0 00	 shl	 eax, 0
  01083	f3 0f 10 8d ec
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$8[ebp+4]
  0108b	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  01090	f3 0f 58 c1	 addss	 xmm0, xmm1
  01094	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01099	d1 e1		 shl	 ecx, 1
  0109b	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  010a2	b8 04 00 00 00	 mov	 eax, 4
  010a7	d1 e0		 shl	 eax, 1
  010a9	f3 0f 10 8d f0
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$8[ebp+8]
  010b1	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  010b6	f3 0f 58 c1	 addss	 xmm0, xmm1
  010ba	f3 0f 11 45 a4	 movss	 DWORD PTR _object_camera_position$[ebp+8], xmm0

; 1717 : 	
; 1718 : 			object_camera_direction.x = ( visual_3d_vp->zv.x * vp.attitude[0][0] + visual_3d_vp->zv.y * vp.attitude[1][0] + visual_3d_vp->zv.z * vp.attitude[2][0] );

  010bf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  010c4	6b c8 00	 imul	 ecx, eax, 0
  010c7	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  010ce	b8 04 00 00 00	 mov	 eax, 4
  010d3	6b c8 00	 imul	 ecx, eax, 0
  010d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  010db	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  010e0	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  010e5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  010ea	c1 e1 00	 shl	 ecx, 0
  010ed	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  010f4	b8 04 00 00 00	 mov	 eax, 4
  010f9	6b c8 00	 imul	 ecx, eax, 0
  010fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01101	f3 0f 10 48 28	 movss	 xmm1, DWORD PTR [eax+40]
  01106	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  0110b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0110f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01114	d1 e1		 shl	 ecx, 1
  01116	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0111d	b8 04 00 00 00	 mov	 eax, 4
  01122	6b c8 00	 imul	 ecx, eax, 0
  01125	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0112a	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0112f	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  01134	f3 0f 58 c1	 addss	 xmm0, xmm1
  01138	f3 0f 11 45 90	 movss	 DWORD PTR _object_camera_direction$[ebp], xmm0

; 1719 : 			object_camera_direction.y = ( visual_3d_vp->zv.x * vp.attitude[0][1] + visual_3d_vp->zv.y * vp.attitude[1][1] + visual_3d_vp->zv.z * vp.attitude[2][1] );

  0113d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01142	6b c8 00	 imul	 ecx, eax, 0
  01145	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0114c	b8 04 00 00 00	 mov	 eax, 4
  01151	c1 e0 00	 shl	 eax, 0
  01154	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0115a	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  0115f	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  01164	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01169	c1 e2 00	 shl	 edx, 0
  0116c	8d 84 15 08 ff
	ff ff		 lea	 eax, DWORD PTR _vp$[ebp+edx+12]
  01173	b9 04 00 00 00	 mov	 ecx, 4
  01178	c1 e1 00	 shl	 ecx, 0
  0117b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01181	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  01186	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  0118b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0118f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01194	d1 e0		 shl	 eax, 1
  01196	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0119d	ba 04 00 00 00	 mov	 edx, 4
  011a2	c1 e2 00	 shl	 edx, 0
  011a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  011aa	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  011af	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  011b4	f3 0f 58 c1	 addss	 xmm0, xmm1
  011b8	f3 0f 11 45 94	 movss	 DWORD PTR _object_camera_direction$[ebp+4], xmm0

; 1720 : 			object_camera_direction.z = ( visual_3d_vp->zv.x * vp.attitude[0][2] + visual_3d_vp->zv.y * vp.attitude[1][2] + visual_3d_vp->zv.z * vp.attitude[2][2] );

  011bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  011c2	6b c8 00	 imul	 ecx, eax, 0
  011c5	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  011cc	b8 04 00 00 00	 mov	 eax, 4
  011d1	d1 e0		 shl	 eax, 1
  011d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  011d9	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  011de	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  011e3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  011e8	c1 e2 00	 shl	 edx, 0
  011eb	8d 84 15 08 ff
	ff ff		 lea	 eax, DWORD PTR _vp$[ebp+edx+12]
  011f2	b9 04 00 00 00	 mov	 ecx, 4
  011f7	d1 e1		 shl	 ecx, 1
  011f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  011ff	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  01204	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  01209	f3 0f 58 c1	 addss	 xmm0, xmm1
  0120d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01212	d1 e0		 shl	 eax, 1
  01214	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0121b	ba 04 00 00 00	 mov	 edx, 4
  01220	d1 e2		 shl	 edx, 1
  01222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01227	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0122c	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  01231	f3 0f 58 c1	 addss	 xmm0, xmm1
  01235	f3 0f 11 45 98	 movss	 DWORD PTR _object_camera_direction$[ebp+8], xmm0

; 1721 : 		}
; 1722 : 	
; 1723 : 		//
; 1724 : 		// Calculate the vector from the object to the viewpoint, in the object's view system
; 1725 : 		//
; 1726 : 	
; 1727 : 		{
; 1728 : 	
; 1729 : 			float
; 1730 : 				x,
; 1731 : 				y,
; 1732 : 				z;
; 1733 : 	
; 1734 : 			x = ( ( visual_3d_vp->x - vp.x ) * vp.xv.x );

  0123a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0123f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  01243	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  0124b	f3 0f 59 85 08
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+12]
  01253	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _x$7[ebp], xmm0

; 1735 : 			x += ( ( visual_3d_vp->y - vp.y ) *  vp.xv.y );

  0125b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01260	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  01265	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  0126d	f3 0f 59 85 0c
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+16]
  01275	f3 0f 58 85 e4
	fe ff ff	 addss	 xmm0, DWORD PTR _x$7[ebp]
  0127d	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _x$7[ebp], xmm0

; 1736 : 			x += ( ( visual_3d_vp->z - vp.z ) *  vp.xv.z );

  01285	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0128a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0128f	f3 0f 5c 85 04
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  01297	f3 0f 59 85 10
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+20]
  0129f	f3 0f 58 85 e4
	fe ff ff	 addss	 xmm0, DWORD PTR _x$7[ebp]
  012a7	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _x$7[ebp], xmm0

; 1737 : 	
; 1738 : 			y = ( ( visual_3d_vp->x - vp.x ) * vp.yv.x );

  012af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012b4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  012b8	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  012c0	f3 0f 59 85 14
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+24]
  012c8	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _y$6[ebp], xmm0

; 1739 : 			y += ( ( visual_3d_vp->y - vp.y ) *  vp.yv.y );

  012d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012d5	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  012da	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  012e2	f3 0f 59 85 18
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+28]
  012ea	f3 0f 58 85 e0
	fe ff ff	 addss	 xmm0, DWORD PTR _y$6[ebp]
  012f2	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _y$6[ebp], xmm0

; 1740 : 			y += ( ( visual_3d_vp->z - vp.z ) *  vp.yv.z );

  012fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012ff	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  01304	f3 0f 5c 85 04
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  0130c	f3 0f 59 85 1c
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+32]
  01314	f3 0f 58 85 e0
	fe ff ff	 addss	 xmm0, DWORD PTR _y$6[ebp]
  0131c	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _y$6[ebp], xmm0

; 1741 : 	
; 1742 : 			z = ( ( visual_3d_vp->x - vp.x ) * vp.zv.x );

  01324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01329	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0132d	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  01335	f3 0f 59 85 20
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+36]
  0133d	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _z$5[ebp], xmm0

; 1743 : 			z += ( ( visual_3d_vp->y - vp.y ) *  vp.zv.y );

  01345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0134a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0134f	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  01357	f3 0f 59 85 24
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+40]
  0135f	f3 0f 58 85 dc
	fe ff ff	 addss	 xmm0, DWORD PTR _z$5[ebp]
  01367	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _z$5[ebp], xmm0

; 1744 : 			z += ( ( visual_3d_vp->z - vp.z ) *  vp.zv.z );

  0136f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01374	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  01379	f3 0f 5c 85 04
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  01381	f3 0f 59 85 28
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+44]
  01389	f3 0f 58 85 dc
	fe ff ff	 addss	 xmm0, DWORD PTR _z$5[ebp]
  01391	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _z$5[ebp], xmm0

; 1745 : 	
; 1746 : 			object_pos.x = x;

  01399	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _x$7[ebp]
  013a1	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _object_pos$[ebp], xmm0

; 1747 : 			object_pos.y = y;

  013a9	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _y$6[ebp]
  013b1	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _object_pos$[ebp+4], xmm0

; 1748 : 			object_pos.z = z;

  013b9	f3 0f 10 85 dc
	fe ff ff	 movss	 xmm0, DWORD PTR _z$5[ebp]
  013c1	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _object_pos$[ebp+8], xmm0

; 1749 : 	
; 1750 : 			object_unit_pos.x = -object_pos.x;

  013c9	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _object_pos$[ebp]
  013d1	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  013d8	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _object_unit_pos$[ebp], xmm0

; 1751 : 			object_unit_pos.y = -object_pos.y;

  013e0	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _object_pos$[ebp+4]
  013e8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  013ef	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _object_unit_pos$[ebp+4], xmm0

; 1752 : 			object_unit_pos.z = -object_pos.z;

  013f7	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _object_pos$[ebp+8]
  013ff	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01406	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _object_unit_pos$[ebp+8], xmm0

; 1753 : 	
; 1754 : 			normalise_any_3d_vector ( &object_unit_pos );

  0140e	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  01414	50		 push	 eax
  01415	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  0141a	dd d8		 fstp	 ST(0)

; 1755 : 
; 1756 : 			current_object_3d_unit_position = &object_unit_pos;

  0141c	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  01422	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A, eax ; current_object_3d_unit_position

; 1757 : 		}
; 1758 : 	
; 1759 : 		//
; 1760 : 		//	Set up this objects' object info structure
; 1761 : 		//
; 1762 : 	
; 1763 : 		object_3d_object_base[object_3d_object_current_base].lights = NULL;	//light;

  01427	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0142e	c7 80 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+4], 0

; 1764 : 		object_3d_object_base[object_3d_object_current_base].points_base = object_3d_points_current_base;

  01438	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0143f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_points_current_base@@3HA ; object_3d_points_current_base
  01445	89 88 24 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+36], ecx

; 1765 : 		object_3d_object_base[object_3d_object_current_base].camera_position = object_camera_position;

  0144b	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  01452	05 08 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+8
  01457	8b 4d 9c	 mov	 ecx, DWORD PTR _object_camera_position$[ebp]
  0145a	89 08		 mov	 DWORD PTR [eax], ecx
  0145c	8b 55 a0	 mov	 edx, DWORD PTR _object_camera_position$[ebp+4]
  0145f	89 50 04	 mov	 DWORD PTR [eax+4], edx
  01462	8b 4d a4	 mov	 ecx, DWORD PTR _object_camera_position$[ebp+8]
  01465	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1766 : 		object_3d_object_base[object_3d_object_current_base].camera_direction = object_camera_direction;

  01468	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0146f	05 14 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+20
  01474	8b 4d 90	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp]
  01477	89 08		 mov	 DWORD PTR [eax], ecx
  01479	8b 55 94	 mov	 edx, DWORD PTR _object_camera_direction$[ebp+4]
  0147c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0147f	8b 4d 98	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp+8]
  01482	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1767 : 		object_3d_object_base[object_3d_object_current_base].object_vp = &vp;

  01485	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0148c	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp]
  01492	89 88 28 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+40], ecx

; 1768 : 		object_3d_object_base[object_3d_object_current_base].object_number = object_number;

  01498	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0149f	8b 4d f8	 mov	 ecx, DWORD PTR _object_number$[ebp]
  014a2	89 88 20 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+32], ecx

; 1769 : 	
; 1770 : 		current_object_3d_object_base = &object_3d_object_base[object_3d_object_current_base];

  014a8	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  014af	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; object_3d_object_base
  014b4	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A, eax ; current_object_3d_object_base

; 1771 : 	
; 1772 : 		if ( objects_3d_data[object_number].number_of_points )

  014b9	6b 45 f8 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  014bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  014c3	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  014c7	85 d2		 test	 edx, edx
  014c9	0f 84 2a 05 00
	00		 je	 $LN14@draw_zbuff

; 1773 : 		{
; 1774 : 		
; 1775 : 			int
; 1776 : 				object_outcode;
; 1777 : 	
; 1778 : 			//
; 1779 : 			// Setup the objects scaling information
; 1780 : 			//
; 1781 : 		
; 1782 : 			if ( !get_object_3d_outcode ( object_number, &sub_pos, &object_outcode ) )

  014cf	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _object_outcode$4[ebp]
  014d5	50		 push	 eax
  014d6	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _sub_pos$[ebp]
  014dc	51		 push	 ecx
  014dd	8b 55 f8	 mov	 edx, DWORD PTR _object_number$[ebp]
  014e0	52		 push	 edx
  014e1	e8 00 00 00 00	 call	 ?get_object_3d_outcode@@YGHHPAUVEC3D@@PAH@Z ; get_object_3d_outcode
  014e6	85 c0		 test	 eax, eax
  014e8	0f 85 0b 05 00
	00		 jne	 $LN14@draw_zbuff

; 1783 : 			{
; 1784 : 
; 1785 : 				matrix4x4
; 1786 : 					matrix;
; 1787 : 
; 1788 : 				//
; 1789 : 				// Set the world transformation matrix
; 1790 : 				//
; 1791 : 
; 1792 : 				matrix[0][0] = vp.attitude[0][0] * object_3d_scale.x;

  014ee	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  014f3	6b c8 00	 imul	 ecx, eax, 0
  014f6	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  014fd	b8 04 00 00 00	 mov	 eax, 4
  01502	6b c8 00	 imul	 ecx, eax, 0
  01505	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0150a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  01512	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  01517	6b c2 00	 imul	 eax, edx, 0
  0151a	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  01521	ba 04 00 00 00	 mov	 edx, 4
  01526	6b c2 00	 imul	 eax, edx, 0
  01529	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1793 : 				matrix[0][1] = vp.attitude[0][1] * object_3d_scale.y;

  0152e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01533	6b c8 00	 imul	 ecx, eax, 0
  01536	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0153d	b8 04 00 00 00	 mov	 eax, 4
  01542	c1 e0 00	 shl	 eax, 0
  01545	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0154a	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  01552	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  01557	6b d1 00	 imul	 edx, ecx, 0
  0155a	8d 84 15 98 fe
	ff ff		 lea	 eax, DWORD PTR _matrix$3[ebp+edx]
  01561	b9 04 00 00 00	 mov	 ecx, 4
  01566	c1 e1 00	 shl	 ecx, 0
  01569	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1794 : 				matrix[0][2] = vp.attitude[0][2] * object_3d_scale.z;

  0156e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01573	6b c8 00	 imul	 ecx, eax, 0
  01576	8d 94 0d 08 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0157d	b8 04 00 00 00	 mov	 eax, 4
  01582	d1 e0		 shl	 eax, 1
  01584	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01589	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  01591	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  01596	6b d1 00	 imul	 edx, ecx, 0
  01599	8d 84 15 98 fe
	ff ff		 lea	 eax, DWORD PTR _matrix$3[ebp+edx]
  015a0	b9 04 00 00 00	 mov	 ecx, 4
  015a5	d1 e1		 shl	 ecx, 1
  015a7	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1795 : 				matrix[0][3] = 0;

  015ac	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  015b1	6b c8 00	 imul	 ecx, eax, 0
  015b4	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  015bb	b8 04 00 00 00	 mov	 eax, 4
  015c0	6b c8 03	 imul	 ecx, eax, 3
  015c3	0f 57 c0	 xorps	 xmm0, xmm0
  015c6	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1796 : 	
; 1797 : 				matrix[1][0] = vp.attitude[1][0] * object_3d_scale.x;

  015cb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  015d0	c1 e0 00	 shl	 eax, 0
  015d3	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  015da	ba 04 00 00 00	 mov	 edx, 4
  015df	6b c2 00	 imul	 eax, edx, 0
  015e2	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  015e7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  015ef	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  015f4	c1 e1 00	 shl	 ecx, 0
  015f7	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  015fe	b8 04 00 00 00	 mov	 eax, 4
  01603	6b c8 00	 imul	 ecx, eax, 0
  01606	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1798 : 				matrix[1][1] = vp.attitude[1][1] * object_3d_scale.y;

  0160b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01610	c1 e0 00	 shl	 eax, 0
  01613	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0161a	ba 04 00 00 00	 mov	 edx, 4
  0161f	c1 e2 00	 shl	 edx, 0
  01622	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01627	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  0162f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01634	c1 e0 00	 shl	 eax, 0
  01637	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  0163e	ba 04 00 00 00	 mov	 edx, 4
  01643	c1 e2 00	 shl	 edx, 0
  01646	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 1799 : 				matrix[1][2] = vp.attitude[1][2] * object_3d_scale.z;

  0164b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01650	c1 e0 00	 shl	 eax, 0
  01653	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0165a	ba 04 00 00 00	 mov	 edx, 4
  0165f	d1 e2		 shl	 edx, 1
  01661	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01666	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0166e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01673	c1 e0 00	 shl	 eax, 0
  01676	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  0167d	ba 04 00 00 00	 mov	 edx, 4
  01682	d1 e2		 shl	 edx, 1
  01684	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 1800 : 				matrix[1][3] = 0;

  01689	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0168e	c1 e0 00	 shl	 eax, 0
  01691	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  01698	ba 04 00 00 00	 mov	 edx, 4
  0169d	6b c2 03	 imul	 eax, edx, 3
  016a0	0f 57 c0	 xorps	 xmm0, xmm0
  016a3	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1801 : 	
; 1802 : 				matrix[2][0] = vp.attitude[2][0] * object_3d_scale.x;

  016a8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  016ad	d1 e0		 shl	 eax, 1
  016af	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  016b6	ba 04 00 00 00	 mov	 edx, 4
  016bb	6b c2 00	 imul	 eax, edx, 0
  016be	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  016c3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  016cb	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  016d0	d1 e1		 shl	 ecx, 1
  016d2	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  016d9	b8 04 00 00 00	 mov	 eax, 4
  016de	6b c8 00	 imul	 ecx, eax, 0
  016e1	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1803 : 				matrix[2][1] = vp.attitude[2][1] * object_3d_scale.y;

  016e6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  016eb	d1 e0		 shl	 eax, 1
  016ed	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  016f4	ba 04 00 00 00	 mov	 edx, 4
  016f9	c1 e2 00	 shl	 edx, 0
  016fc	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01701	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  01709	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0170e	d1 e0		 shl	 eax, 1
  01710	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  01717	ba 04 00 00 00	 mov	 edx, 4
  0171c	c1 e2 00	 shl	 edx, 0
  0171f	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 1804 : 				matrix[2][2] = vp.attitude[2][2] * object_3d_scale.z;

  01724	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01729	d1 e0		 shl	 eax, 1
  0172b	8d 8c 05 08 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  01732	ba 04 00 00 00	 mov	 edx, 4
  01737	d1 e2		 shl	 edx, 1
  01739	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0173e	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  01746	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0174b	d1 e0		 shl	 eax, 1
  0174d	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  01754	ba 04 00 00 00	 mov	 edx, 4
  01759	d1 e2		 shl	 edx, 1
  0175b	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 1805 : 				matrix[2][3] = 0;

  01760	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01765	d1 e0		 shl	 eax, 1
  01767	8d 8c 05 98 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$3[ebp+eax]
  0176e	ba 04 00 00 00	 mov	 edx, 4
  01773	6b c2 03	 imul	 eax, edx, 3
  01776	0f 57 c0	 xorps	 xmm0, xmm0
  01779	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1806 : 
; 1807 : 				{
; 1808 : 	
; 1809 : 					vec3d
; 1810 : 						rel;
; 1811 : 	
; 1812 : 					rel.x = visual_3d_vp->attitude[0][0] * current_object_3d_relative_position->x +

  0177e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01783	6b c8 00	 imul	 ecx, eax, 0
  01786	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0178c	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  01790	b9 04 00 00 00	 mov	 ecx, 4
  01795	6b d1 00	 imul	 edx, ecx, 0
  01798	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  0179e	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  017a3	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  017a7	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  017ac	c1 e2 00	 shl	 edx, 0
  017af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  017b4	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  017b8	ba 04 00 00 00	 mov	 edx, 4
  017bd	6b c2 00	 imul	 eax, edx, 0
  017c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  017c6	f3 0f 10 0c 01	 movss	 xmm1, DWORD PTR [ecx+eax]
  017cb	f3 0f 59 4a 04	 mulss	 xmm1, DWORD PTR [edx+4]
  017d0	f3 0f 58 c1	 addss	 xmm0, xmm1
  017d4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  017d9	d1 e0		 shl	 eax, 1
  017db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  017e1	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  017e5	b8 04 00 00 00	 mov	 eax, 4
  017ea	6b c8 00	 imul	 ecx, eax, 0
  017ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  017f2	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  017f7	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  017fc	f3 0f 58 c1	 addss	 xmm0, xmm1
  01800	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _rel$2[ebp], xmm0

; 1813 : 								visual_3d_vp->attitude[1][0] * current_object_3d_relative_position->y +
; 1814 : 								visual_3d_vp->attitude[2][0] * current_object_3d_relative_position->z;
; 1815 : 		
; 1816 : 					rel.y = visual_3d_vp->attitude[0][1] * current_object_3d_relative_position->x +

  01808	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0180d	6b c8 00	 imul	 ecx, eax, 0
  01810	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01816	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0181a	b9 04 00 00 00	 mov	 ecx, 4
  0181f	c1 e1 00	 shl	 ecx, 0
  01822	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  01828	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  0182d	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  01831	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01836	c1 e0 00	 shl	 eax, 0
  01839	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0183f	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  01843	b8 04 00 00 00	 mov	 eax, 4
  01848	c1 e0 00	 shl	 eax, 0
  0184b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  01851	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  01856	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  0185b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0185f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01864	d1 e2		 shl	 edx, 1
  01866	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0186b	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  0186f	ba 04 00 00 00	 mov	 edx, 4
  01874	c1 e2 00	 shl	 edx, 0
  01877	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  0187c	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  01881	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  01886	f3 0f 58 c1	 addss	 xmm0, xmm1
  0188a	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _rel$2[ebp+4], xmm0

; 1817 : 								visual_3d_vp->attitude[1][1] * current_object_3d_relative_position->y +
; 1818 : 								visual_3d_vp->attitude[2][1] * current_object_3d_relative_position->z;
; 1819 : 		
; 1820 : 					rel.z = visual_3d_vp->attitude[0][2] * current_object_3d_relative_position->x +

  01892	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01897	6b c8 00	 imul	 ecx, eax, 0
  0189a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  018a0	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  018a4	b9 04 00 00 00	 mov	 ecx, 4
  018a9	d1 e1		 shl	 ecx, 1
  018ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  018b1	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  018b6	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  018ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  018bf	c1 e0 00	 shl	 eax, 0
  018c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  018c8	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  018cc	b8 04 00 00 00	 mov	 eax, 4
  018d1	d1 e0		 shl	 eax, 1
  018d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  018d9	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  018de	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  018e3	f3 0f 58 c1	 addss	 xmm0, xmm1
  018e7	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  018ec	d1 e2		 shl	 edx, 1
  018ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  018f3	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  018f7	ba 04 00 00 00	 mov	 edx, 4
  018fc	d1 e2		 shl	 edx, 1
  018fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  01903	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  01908	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  0190d	f3 0f 58 c1	 addss	 xmm0, xmm1
  01911	f3 0f 11 85 94
	fe ff ff	 movss	 DWORD PTR _rel$2[ebp+8], xmm0

; 1821 : 								visual_3d_vp->attitude[1][2] * current_object_3d_relative_position->y +
; 1822 : 								visual_3d_vp->attitude[2][2] * current_object_3d_relative_position->z;
; 1823 : 
; 1824 : 					matrix[3][0] = rel.x;

  01919	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0191e	6b c8 03	 imul	 ecx, eax, 3
  01921	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  01928	b8 04 00 00 00	 mov	 eax, 4
  0192d	6b c8 00	 imul	 ecx, eax, 0
  01930	f3 0f 10 85 8c
	fe ff ff	 movss	 xmm0, DWORD PTR _rel$2[ebp]
  01938	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1825 : 					matrix[3][1] = rel.y;

  0193d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01942	6b c8 03	 imul	 ecx, eax, 3
  01945	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  0194c	b8 04 00 00 00	 mov	 eax, 4
  01951	c1 e0 00	 shl	 eax, 0
  01954	f3 0f 10 85 90
	fe ff ff	 movss	 xmm0, DWORD PTR _rel$2[ebp+4]
  0195c	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1826 : 					matrix[3][2] = rel.z;

  01961	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01966	6b c8 03	 imul	 ecx, eax, 3
  01969	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  01970	b8 04 00 00 00	 mov	 eax, 4
  01975	d1 e0		 shl	 eax, 1
  01977	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _rel$2[ebp+8]
  0197f	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1827 : 					matrix[3][3] = 1;

  01984	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01989	6b c8 03	 imul	 ecx, eax, 3
  0198c	8d 94 0d 98 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$3[ebp+ecx]
  01993	b8 04 00 00 00	 mov	 eax, 4
  01998	6b c8 03	 imul	 ecx, eax, 3
  0199b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  019a3	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1828 : 				}
; 1829 : 
; 1830 : 				memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  019a8	6a 40		 push	 64			; 00000040H
  019aa	8d 85 98 fe ff
	ff		 lea	 eax, DWORD PTR _matrix$3[ebp]
  019b0	50		 push	 eax
  019b1	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  019b6	e8 00 00 00 00	 call	 _memcpy
  019bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1831 : 	
; 1832 : 				f3d_set_transform ( D3DTRANSFORMSTATE_WORLD, &d3d_matrix );

  019be	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  019c3	6a 01		 push	 1
  019c5	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 1833 : 
; 1834 : 				if ( ( textured_object_rendering_enabled ) || ( infrared_override ) )

  019ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?textured_object_rendering_enabled@@3HA, 0 ; textured_object_rendering_enabled
  019d1	75 06		 jne	 SHORT $LN15@draw_zbuff
  019d3	83 7d 18 00	 cmp	 DWORD PTR _infrared_override$[ebp], 0
  019d7	74 11		 je	 SHORT $LN13@draw_zbuff
$LN15@draw_zbuff:

; 1835 : 				{
; 1836 : 		
; 1837 : 					draw_3d_object_hardware_faces ( object_number, current_object_3d_object_base );

  019d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  019de	50		 push	 eax
  019df	8b 4d f8	 mov	 ecx, DWORD PTR _object_number$[ebp]
  019e2	51		 push	 ecx
  019e3	e8 00 00 00 00	 call	 ?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_hardware_faces

; 1838 : 				}
; 1839 : 				else

  019e8	eb 0f		 jmp	 SHORT $LN14@draw_zbuff
$LN13@draw_zbuff:

; 1840 : 				{
; 1841 : 	
; 1842 : 					draw_3d_object_untextured_hardware_faces ( object_number, current_object_3d_object_base );

  019ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  019ef	50		 push	 eax
  019f0	8b 4d f8	 mov	 ecx, DWORD PTR _object_number$[ebp]
  019f3	51		 push	 ecx
  019f4	e8 00 00 00 00	 call	 ?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_untextured_hardware_faces
$LN14@draw_zbuff:

; 1843 : 				}
; 1844 : 			}
; 1845 : 		}
; 1846 : 	}
; 1847 : 
; 1848 : 	//
; 1849 : 	// Recurse down any sub objects
; 1850 : 	//
; 1851 : 
; 1852 : 	if ( scene->number_of_sub_objects )

  019f9	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  019fc	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01a00	85 c9		 test	 ecx, ecx
  01a02	0f 84 36 01 00
	00		 je	 $LN6@draw_zbuff

; 1853 : 	{
; 1854 : 
; 1855 : 		if ( ( obj ) && ( obj->sub_objects ) )

  01a08	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  01a0c	0f 84 a0 00 00
	00		 je	 $LN17@draw_zbuff
  01a12	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01a15	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  01a19	0f 84 93 00 00
	00		 je	 $LN17@draw_zbuff

; 1856 : 		{
; 1857 : 	
; 1858 : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01a1f	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  01a22	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01a26	83 e9 01	 sub	 ecx, 1
  01a29	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  01a2c	eb 09		 jmp	 SHORT $LN4@draw_zbuff
$LN2@draw_zbuff:
  01a2e	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  01a31	83 e8 01	 sub	 eax, 1
  01a34	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_zbuff:
  01a37	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  01a3b	7c 70		 jl	 SHORT $LN3@draw_zbuff

; 1859 : 			{
; 1860 : 	
; 1861 : 				if (	( obj->sub_objects[count].visible_object ) &&
; 1862 : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01a3d	6b 45 fc 30	 imul	 eax, DWORD PTR _count$[ebp], 48
  01a41	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01a44	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01a47	8b 44 02 08	 mov	 eax, DWORD PTR [edx+eax+8]
  01a4b	83 e0 01	 and	 eax, 1
  01a4e	74 5b		 je	 SHORT $LN19@draw_zbuff
  01a50	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01a54	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01a57	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01a5a	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  01a5f	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01a65	7f 44		 jg	 SHORT $LN19@draw_zbuff
  01a67	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01a6b	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01a6e	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01a71	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  01a76	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01a7c	7c 2d		 jl	 SHORT $LN19@draw_zbuff

; 1863 : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 1864 : 				{
; 1865 : 	
; 1866 : 					draw_zbuffered_sub_object ( &obj->sub_objects[count], &scene->sub_objects[count], &vp, &sub_pos, infrared_override );

  01a7e	8b 45 18	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  01a81	50		 push	 eax
  01a82	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _sub_pos$[ebp]
  01a88	51		 push	 ecx
  01a89	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  01a8f	52		 push	 edx
  01a90	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01a94	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01a97	03 41 34	 add	 eax, DWORD PTR [ecx+52]
  01a9a	50		 push	 eax
  01a9b	6b 55 fc 30	 imul	 edx, DWORD PTR _count$[ebp], 48
  01a9f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01aa2	03 50 04	 add	 edx, DWORD PTR [eax+4]
  01aa5	52		 push	 edx
  01aa6	e8 00 00 00 00	 call	 ?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_zbuffered_sub_object
$LN19@draw_zbuff:

; 1867 : 				}
; 1868 : 			}

  01aab	eb 81		 jmp	 SHORT $LN2@draw_zbuff
$LN3@draw_zbuff:

; 1869 : 		}
; 1870 : 		else

  01aad	e9 8c 00 00 00	 jmp	 $LN6@draw_zbuff
$LN17@draw_zbuff:

; 1871 : 		{
; 1872 : 	
; 1873 : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01ab2	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  01ab5	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01ab9	83 e9 01	 sub	 ecx, 1
  01abc	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  01abf	eb 09		 jmp	 SHORT $LN7@draw_zbuff
$LN5@draw_zbuff:
  01ac1	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  01ac4	83 e8 01	 sub	 eax, 1
  01ac7	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_zbuff:
  01aca	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  01ace	7c 6e		 jl	 SHORT $LN6@draw_zbuff

; 1874 : 			{
; 1875 : 	
; 1876 : 				if (	( scene->sub_objects[count].default_visibility ) &&
; 1877 : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01ad0	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01ad4	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01ad7	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01ada	8a 44 02 07	 mov	 al, BYTE PTR [edx+eax+7]
  01ade	c0 e8 06	 shr	 al, 6
  01ae1	24 01		 and	 al, 1
  01ae3	0f b6 c8	 movzx	 ecx, al
  01ae6	85 c9		 test	 ecx, ecx
  01ae8	74 52		 je	 SHORT $LN20@draw_zbuff
  01aea	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01aee	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01af1	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01af4	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  01af9	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01aff	7f 3b		 jg	 SHORT $LN20@draw_zbuff
  01b01	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01b05	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01b08	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01b0b	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  01b10	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01b16	7c 24		 jl	 SHORT $LN20@draw_zbuff

; 1878 : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 1879 : 				{
; 1880 : 	
; 1881 : 					draw_zbuffered_sub_object ( NULL, &scene->sub_objects[count], &vp, &sub_pos, infrared_override );

  01b18	8b 45 18	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  01b1b	50		 push	 eax
  01b1c	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _sub_pos$[ebp]
  01b22	51		 push	 ecx
  01b23	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  01b29	52		 push	 edx
  01b2a	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01b2e	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01b31	03 41 34	 add	 eax, DWORD PTR [ecx+52]
  01b34	50		 push	 eax
  01b35	6a 00		 push	 0
  01b37	e8 00 00 00 00	 call	 ?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_zbuffered_sub_object
$LN20@draw_zbuff:

; 1882 : 				}
; 1883 : 			}

  01b3c	eb 83		 jmp	 SHORT $LN5@draw_zbuff
$LN6@draw_zbuff:

; 1884 : 		}
; 1885 : 	}
; 1886 : 
; 1887 : 	//
; 1888 : 	// Restore object dissolve
; 1889 : 	//
; 1890 : 
; 1891 : 	{
; 1892 : 
; 1893 : 		int
; 1894 : 			itmp;
; 1895 : 
; 1896 : 		current_object_3d_dissolve_factor = old_current_object_3d_dissolve_factor;

  01b3e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _old_current_object_3d_dissolve_factor$[ebp]
  01b43	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 1897 : 
; 1898 : 		asm_convert_float_to_int ( current_object_3d_dissolve_factor * 255, &itmp );

  01b4b	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR _itmp$1[ebp]
  01b51	50		 push	 eax
  01b52	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  01b5a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  01b62	51		 push	 ecx
  01b63	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01b68	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1899 : 
; 1900 : 		current_object_3d_dissolve_value = itmp;

  01b6d	8a 85 88 fe ff
	ff		 mov	 al, BYTE PTR _itmp$1[ebp]
  01b73	a2 00 00 00 00	 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, al ; current_object_3d_dissolve_value

; 1901 : 	}
; 1902 : 
; 1903 : 	//
; 1904 : 	// Restore the object rotation matrix
; 1905 : 	//
; 1906 : 
; 1907 : 	memcpy ( rotation_3d, temp_matrix, sizeof ( matrix3x3 ) );

  01b78	6a 24		 push	 36			; 00000024H
  01b7a	8d 45 a8	 lea	 eax, DWORD PTR _temp_matrix$[ebp]
  01b7d	50		 push	 eax
  01b7e	68 00 00 00 00	 push	 OFFSET ?rotation_3d@@3PAY02MA ; rotation_3d
  01b83	e8 00 00 00 00	 call	 _memcpy
  01b88	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1908 : 
; 1909 : 	memcpy ( &object_3d_scale, &temp_scale, sizeof ( vec3d ) );

  01b8b	6a 0c		 push	 12			; 0000000cH
  01b8d	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _temp_scale$[ebp]
  01b93	50		 push	 eax
  01b94	68 00 00 00 00	 push	 OFFSET ?object_3d_scale@@3UVEC3D@@A ; object_3d_scale
  01b99	e8 00 00 00 00	 call	 _memcpy
  01b9e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1910 : 
; 1911 : 	current_object_3d_relative_position = old_current_object_3d_relative_position;

  01ba1	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _old_current_object_3d_relative_position$[ebp]
  01ba7	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 1912 : }

  01bac	5f		 pop	 edi
  01bad	5e		 pop	 esi
  01bae	5b		 pop	 ebx
  01baf	8b e5		 mov	 esp, ebp
  01bb1	5d		 pop	 ebp
  01bb2	c2 14 00	 ret	 20			; 00000014H
?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ENDP ; draw_zbuffered_sub_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z
_TEXT	SEGMENT
_itmp$1 = -392						; size = 4
_rel$2 = -388						; size = 12
_posn$3 = -376						; size = 12
_matrix$4 = -364					; size = 64
_object_outcode$5 = -300				; size = 4
_z$6 = -296						; size = 4
_y$7 = -292						; size = 4
_x$8 = -288						; size = 4
_rel_pos$9 = -284					; size = 12
_itmp$10 = -272						; size = 4
_tmp$11 = -268						; size = 4
_vp$ = -264						; size = 48
_light$ = -216						; size = 4
_relative_roll$ = -212					; size = 4
_relative_pitch$ = -208					; size = 4
_relative_heading$ = -204				; size = 4
_old_current_object_3d_relative_position$ = -200	; size = 4
_relative_scale$ = -196					; size = 12
_relative_position$ = -184				; size = 12
_sub_pos$ = -172					; size = 12
_object_unit_pos$ = -160				; size = 12
_object_pos$ = -148					; size = 12
_temp_scale$ = -136					; size = 12
_scaled_relative_position$ = -124			; size = 12
_object_camera_direction$ = -112			; size = 12
_object_camera_position$ = -100				; size = 12
_temp_matrix$ = -88					; size = 36
_relative_attitude$ = -52				; size = 36
_old_current_object_3d_dissolve_factor$ = -16		; size = 4
_relative_dissolve$ = -12				; size = 4
_object_number$ = -8					; size = 4
_count$ = -4						; size = 4
_obj$ = 8						; size = 4
_scene$ = 12						; size = 4
_parent_viewpoint$ = 16					; size = 4
_position$ = 20						; size = 4
_infrared_override$ = 24				; size = 4
?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z PROC ; draw_sub_object, COMDAT

; 568  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 01 00
	00		 sub	 esp, 456		; 000001c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 569  : 	
; 570  : 	int
; 571  : 		count,
; 572  : 		object_number,
; 573  : 		relative_dissolve;
; 574  : 
; 575  : 	float
; 576  : 		old_current_object_3d_dissolve_factor;
; 577  : 
; 578  : 	matrix3x3
; 579  : 		relative_attitude,
; 580  : 		temp_matrix;
; 581  : 
; 582  : 	vec3d
; 583  : 		object_camera_position,
; 584  : 		object_camera_direction,
; 585  : 		scaled_relative_position,
; 586  : 		temp_scale,
; 587  : 		object_pos,
; 588  : 		object_unit_pos,
; 589  : 		sub_pos,
; 590  : 		relative_position,
; 591  : 		relative_scale,
; 592  : 		*old_current_object_3d_relative_position;
; 593  : 
; 594  : 	float
; 595  : 		relative_heading,
; 596  : 		relative_pitch,
; 597  : 		relative_roll;
; 598  : 
; 599  : 	light_3d_source
; 600  : 		*light;
; 601  : 
; 602  : 	viewpoint
; 603  : 		vp;
; 604  : 
; 605  : 	//
; 606  : 	// We no longer need the lights to be used for all the objects, so just reset the stats!
; 607  : 	//
; 608  : 
; 609  : 	object_3d_points_current_base = 0;

  0000c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_points_current_base@@3HA, 0 ; object_3d_points_current_base

; 610  : 
; 611  : 	object_3d_object_current_base = 0;

  00016	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_current_base@@3HA, 0 ; object_3d_object_current_base

; 612  : 
; 613  : 	object_3d_light_3d_current_base = 0;

  00020	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_light_3d_current_base@@3HA, 0 ; object_3d_light_3d_current_base

; 614  : 
; 615  : 	//
; 616  : 	// Get the positions & object number
; 617  : 	//
; 618  : 
; 619  : 	if ( obj )

  0002a	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0002e	0f 84 87 00 00
	00		 je	 $LN8@draw_sub_o

; 620  : 	{
; 621  : 
; 622  : 		relative_position = obj->relative_position;

  00034	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00037	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003c	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _relative_position$[ebp], ecx
  00042	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00045	89 95 4c ff ff
	ff		 mov	 DWORD PTR _relative_position$[ebp+4], edx
  0004b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0004e	89 85 50 ff ff
	ff		 mov	 DWORD PTR _relative_position$[ebp+8], eax

; 623  : 		relative_scale = obj->relative_scale;

  00054	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00057	83 c0 24	 add	 eax, 36			; 00000024H
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _relative_scale$[ebp], ecx
  00062	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00065	89 95 40 ff ff
	ff		 mov	 DWORD PTR _relative_scale$[ebp+4], edx
  0006b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0006e	89 85 44 ff ff
	ff		 mov	 DWORD PTR _relative_scale$[ebp+8], eax

; 624  : 		relative_heading = obj->relative_heading;

  00074	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00077	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  0007c	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _relative_heading$[ebp], xmm0

; 625  : 		relative_pitch = obj->relative_pitch;

  00084	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00087	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0008c	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _relative_pitch$[ebp], xmm0

; 626  : 		relative_roll = obj->relative_roll;

  00094	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00097	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0009c	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _relative_roll$[ebp], xmm0

; 627  : 		relative_dissolve = obj->object_dissolve_value;

  000a4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000aa	c1 e9 04	 shr	 ecx, 4
  000ad	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000b3	89 4d f4	 mov	 DWORD PTR _relative_dissolve$[ebp], ecx

; 628  : 	}
; 629  : 	else

  000b6	e9 13 01 00 00	 jmp	 $LN9@draw_sub_o
$LN8@draw_sub_o:

; 630  : 	{
; 631  : 
; 632  : 		relative_position.x = scene->keyframes[0].x;

  000bb	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000c0	6b c8 00	 imul	 ecx, eax, 0
  000c3	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  000c6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000c9	f3 0f 10 44 08
	08		 movss	 xmm0, DWORD PTR [eax+ecx+8]
  000cf	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _relative_position$[ebp], xmm0

; 633  : 		relative_position.y = scene->keyframes[0].y;

  000d7	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000dc	6b c8 00	 imul	 ecx, eax, 0
  000df	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  000e2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000e5	f3 0f 10 44 08
	0c		 movss	 xmm0, DWORD PTR [eax+ecx+12]
  000eb	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _relative_position$[ebp+4], xmm0

; 634  : 		relative_position.z = scene->keyframes[0].z;

  000f3	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000f8	6b c8 00	 imul	 ecx, eax, 0
  000fb	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  000fe	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00101	f3 0f 10 44 08
	10		 movss	 xmm0, DWORD PTR [eax+ecx+16]
  00107	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _relative_position$[ebp+8], xmm0

; 635  : 		relative_scale.x = scene->keyframes[0].scale_x;

  0010f	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00114	6b c8 00	 imul	 ecx, eax, 0
  00117	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  0011a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0011d	f3 0f 10 44 08
	20		 movss	 xmm0, DWORD PTR [eax+ecx+32]
  00123	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _relative_scale$[ebp], xmm0

; 636  : 		relative_scale.y = scene->keyframes[0].scale_y;

  0012b	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00130	6b c8 00	 imul	 ecx, eax, 0
  00133	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  00136	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00139	f3 0f 10 44 08
	24		 movss	 xmm0, DWORD PTR [eax+ecx+36]
  0013f	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _relative_scale$[ebp+4], xmm0

; 637  : 		relative_scale.z = scene->keyframes[0].scale_z;

  00147	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  0014c	6b c8 00	 imul	 ecx, eax, 0
  0014f	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  00152	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00155	f3 0f 10 44 08
	28		 movss	 xmm0, DWORD PTR [eax+ecx+40]
  0015b	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _relative_scale$[ebp+8], xmm0

; 638  : 		relative_heading = scene->keyframes[0].heading;

  00163	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00168	6b c8 00	 imul	 ecx, eax, 0
  0016b	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  0016e	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00171	f3 0f 10 44 08
	14		 movss	 xmm0, DWORD PTR [eax+ecx+20]
  00177	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _relative_heading$[ebp], xmm0

; 639  : 		relative_pitch = scene->keyframes[0].pitch;

  0017f	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00184	6b c8 00	 imul	 ecx, eax, 0
  00187	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  0018a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0018d	f3 0f 10 44 08
	18		 movss	 xmm0, DWORD PTR [eax+ecx+24]
  00193	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _relative_pitch$[ebp], xmm0

; 640  : 		relative_roll = scene->keyframes[0].roll;

  0019b	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  001a0	6b c8 00	 imul	 ecx, eax, 0
  001a3	8b 55 0c	 mov	 edx, DWORD PTR _scene$[ebp]
  001a6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001a9	f3 0f 10 44 08
	1c		 movss	 xmm0, DWORD PTR [eax+ecx+28]
  001af	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _relative_roll$[ebp], xmm0

; 641  : 		relative_dissolve = scene->object_dissolve * 255.0;

  001b7	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  001ba	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  001bf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  001c7	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  001cb	89 4d f4	 mov	 DWORD PTR _relative_dissolve$[ebp], ecx
$LN9@draw_sub_o:

; 642  : 	}
; 643  : 
; 644  : 	object_number = scene->index;

  001ce	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  001d1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001d4	89 4d f8	 mov	 DWORD PTR _object_number$[ebp], ecx

; 645  : 
; 646  : 	//
; 647  : 	// Set the object dissolve variables
; 648  : 	//
; 649  : 
; 650  : 	{
; 651  : 
; 652  : 		float
; 653  : 			tmp;
; 654  : 
; 655  : 		int
; 656  : 			itmp;
; 657  : 
; 658  : 		old_current_object_3d_dissolve_factor = current_object_3d_dissolve_factor;

  001d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001df	f3 0f 11 45 f0	 movss	 DWORD PTR _old_current_object_3d_dissolve_factor$[ebp], xmm0

; 659  : 
; 660  : 		current_object_3d_dissolve_value = relative_dissolve;	//obj->object_dissolve_value;

  001e4	8a 45 f4	 mov	 al, BYTE PTR _relative_dissolve$[ebp]
  001e7	a2 00 00 00 00	 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, al ; current_object_3d_dissolve_value

; 661  : 
; 662  : 		tmp = current_object_3d_dissolve_value;

  001ec	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  001f3	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001f7	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _tmp$11[ebp], xmm0

; 663  : 		tmp /= 255.0;

  001ff	f3 0f 5a 85 f4
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _tmp$11[ebp]
  00207	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0020f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00213	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _tmp$11[ebp], xmm0

; 664  : 
; 665  : 		current_object_3d_dissolve_factor *= tmp;

  0021b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00223	f3 0f 59 85 f4
	fe ff ff	 mulss	 xmm0, DWORD PTR _tmp$11[ebp]
  0022b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 666  : 
; 667  : 		asm_convert_float_to_int ( current_object_3d_dissolve_factor * 255.0, &itmp );

  00233	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _itmp$10[ebp]
  00239	50		 push	 eax
  0023a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00242	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  0024a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0024e	51		 push	 ecx
  0024f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00254	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 668  : 
; 669  : 		current_object_3d_dissolve_value = itmp;

  00259	8a 85 f0 fe ff
	ff		 mov	 al, BYTE PTR _itmp$10[ebp]
  0025f	a2 00 00 00 00	 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, al ; current_object_3d_dissolve_value

; 670  : 	}
; 671  : 	
; 672  : 	//
; 673  : 	// Calculate the object's position relative to the viewer.
; 674  : 	//
; 675  : 	// NOTE:
; 676  : 	//		BECAUSE THIS USES THE ROTATION_3D MATRIX, IT TAKES INTO ACCOUNT THE PARENT'S SCALE
; 677  : 	//
; 678  : 
; 679  : 	sub_pos.x = ( ( relative_position.x * rotation_3d[0][0] ) +

  00264	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00269	6b c8 00	 imul	 ecx, eax, 0
  0026c	ba 04 00 00 00	 mov	 edx, 4
  00271	6b c2 00	 imul	 eax, edx, 0
  00274	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  0027c	f3 0f 59 84 01
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  00285	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0028a	c1 e1 00	 shl	 ecx, 0
  0028d	ba 04 00 00 00	 mov	 edx, 4
  00292	6b c2 00	 imul	 eax, edx, 0
  00295	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+4]
  0029d	f3 0f 59 8c 01
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  002a6	f3 0f 58 c1	 addss	 xmm0, xmm1
  002aa	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002af	d1 e1		 shl	 ecx, 1
  002b1	ba 04 00 00 00	 mov	 edx, 4
  002b6	6b c2 00	 imul	 eax, edx, 0
  002b9	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+8]
  002c1	f3 0f 59 8c 01
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  002ca	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ce	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp], xmm0

; 680  : 					  ( relative_position.y * rotation_3d[1][0] ) +
; 681  : 					  ( relative_position.z * rotation_3d[2][0] ) );
; 682  : 	sub_pos.y = ( ( relative_position.x * rotation_3d[0][1] ) +

  002d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002db	6b c8 00	 imul	 ecx, eax, 0
  002de	ba 04 00 00 00	 mov	 edx, 4
  002e3	c1 e2 00	 shl	 edx, 0
  002e6	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  002ee	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  002f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002fc	c1 e0 00	 shl	 eax, 0
  002ff	b9 04 00 00 00	 mov	 ecx, 4
  00304	c1 e1 00	 shl	 ecx, 0
  00307	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+4]
  0030f	f3 0f 59 8c 08
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00318	f3 0f 58 c1	 addss	 xmm0, xmm1
  0031c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00321	d1 e2		 shl	 edx, 1
  00323	b8 04 00 00 00	 mov	 eax, 4
  00328	c1 e0 00	 shl	 eax, 0
  0032b	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+8]
  00333	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  0033c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00340	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+4], xmm0

; 683  : 					  ( relative_position.y * rotation_3d[1][1] ) +
; 684  : 					  ( relative_position.z * rotation_3d[2][1] ) );
; 685  : 	sub_pos.z = ( ( relative_position.x * rotation_3d[0][2] ) +

  00348	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0034d	6b c8 00	 imul	 ecx, eax, 0
  00350	ba 04 00 00 00	 mov	 edx, 4
  00355	d1 e2		 shl	 edx, 1
  00357	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  0035f	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00368	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0036d	c1 e0 00	 shl	 eax, 0
  00370	b9 04 00 00 00	 mov	 ecx, 4
  00375	d1 e1		 shl	 ecx, 1
  00377	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+4]
  0037f	f3 0f 59 8c 08
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00388	f3 0f 58 c1	 addss	 xmm0, xmm1
  0038c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00391	d1 e2		 shl	 edx, 1
  00393	b8 04 00 00 00	 mov	 eax, 4
  00398	d1 e0		 shl	 eax, 1
  0039a	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _relative_position$[ebp+8]
  003a2	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  003ab	f3 0f 58 c1	 addss	 xmm0, xmm1
  003af	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+8], xmm0

; 686  : 					  ( relative_position.y * rotation_3d[1][2] ) +
; 687  : 					  ( relative_position.z * rotation_3d[2][2] ) );
; 688  : 
; 689  : 	sub_pos.x += position->x;

  003b7	8b 45 14	 mov	 eax, DWORD PTR _position$[ebp]
  003ba	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _sub_pos$[ebp]
  003c2	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  003c6	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp], xmm0

; 690  : 	sub_pos.y += position->y;

  003ce	8b 45 14	 mov	 eax, DWORD PTR _position$[ebp]
  003d1	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _sub_pos$[ebp+4]
  003d9	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  003de	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+4], xmm0

; 691  : 	sub_pos.z += position->z;

  003e6	8b 45 14	 mov	 eax, DWORD PTR _position$[ebp]
  003e9	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR _sub_pos$[ebp+8]
  003f1	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  003f6	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _sub_pos$[ebp+8], xmm0

; 692  : 
; 693  : 	old_current_object_3d_relative_position = current_object_3d_relative_position;

  003fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00403	89 85 38 ff ff
	ff		 mov	 DWORD PTR _old_current_object_3d_relative_position$[ebp], eax

; 694  : 
; 695  : 	current_object_3d_relative_position = &sub_pos;

  00409	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _sub_pos$[ebp]
  0040f	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 696  : 
; 697  : 	//
; 698  : 	// Calculate the object's real world position
; 699  : 	//
; 700  : 
; 701  : 	scaled_relative_position.x = relative_position.x * object_3d_scale.x;

  00414	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp]
  0041c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00424	f3 0f 11 45 84	 movss	 DWORD PTR _scaled_relative_position$[ebp], xmm0

; 702  : 	scaled_relative_position.y = relative_position.y * object_3d_scale.y;

  00429	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp+4]
  00431	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00439	f3 0f 11 45 88	 movss	 DWORD PTR _scaled_relative_position$[ebp+4], xmm0

; 703  : 	scaled_relative_position.z = relative_position.z * object_3d_scale.z;

  0043e	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_position$[ebp+8]
  00446	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0044e	f3 0f 11 45 8c	 movss	 DWORD PTR _scaled_relative_position$[ebp+8], xmm0

; 704  : 
; 705  : 	vp.x = (	( scaled_relative_position.x * parent_viewpoint->xv.x ) +

  00453	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00456	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _scaled_relative_position$[ebp]
  0045b	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00460	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00463	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+4]
  00468	f3 0f 59 49 18	 mulss	 xmm1, DWORD PTR [ecx+24]
  0046d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00471	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00474	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+8]
  00479	f3 0f 59 4a 24	 mulss	 xmm1, DWORD PTR [edx+36]
  0047e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00482	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _vp$[ebp], xmm0

; 706  : 				( scaled_relative_position.y * parent_viewpoint->yv.x ) +
; 707  : 				( scaled_relative_position.z * parent_viewpoint->zv.x ) );
; 708  : 
; 709  : 	vp.y = (	( scaled_relative_position.x * parent_viewpoint->xv.y ) +

  0048a	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0048d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _scaled_relative_position$[ebp]
  00492	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  00497	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  0049a	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+4]
  0049f	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  004a4	f3 0f 58 c1	 addss	 xmm0, xmm1
  004a8	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  004ab	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+8]
  004b0	f3 0f 59 4a 28	 mulss	 xmm1, DWORD PTR [edx+40]
  004b5	f3 0f 58 c1	 addss	 xmm0, xmm1
  004b9	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _vp$[ebp+4], xmm0

; 710  : 				( scaled_relative_position.y * parent_viewpoint->yv.y ) +
; 711  : 				( scaled_relative_position.z * parent_viewpoint->zv.y ) );
; 712  : 
; 713  : 	vp.z = (	( scaled_relative_position.x * parent_viewpoint->xv.z ) +

  004c1	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  004c4	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _scaled_relative_position$[ebp]
  004c9	f3 0f 59 40 14	 mulss	 xmm0, DWORD PTR [eax+20]
  004ce	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  004d1	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+4]
  004d6	f3 0f 59 49 20	 mulss	 xmm1, DWORD PTR [ecx+32]
  004db	f3 0f 58 c1	 addss	 xmm0, xmm1
  004df	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  004e2	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _scaled_relative_position$[ebp+8]
  004e7	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  004ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  004f0	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+8], xmm0

; 714  : 				( scaled_relative_position.y * parent_viewpoint->yv.z ) +
; 715  : 				( scaled_relative_position.z * parent_viewpoint->zv.z ) );
; 716  : 
; 717  : 	vp.x += parent_viewpoint->x;

  004f8	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  004fb	f3 0f 10 85 f8
	fe ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp]
  00503	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00507	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _vp$[ebp], xmm0

; 718  : 	vp.y += parent_viewpoint->y;

  0050f	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00512	f3 0f 10 85 fc
	fe ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+4]
  0051a	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0051f	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _vp$[ebp+4], xmm0

; 719  : 	vp.z += parent_viewpoint->z;

  00527	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0052a	f3 0f 10 85 00
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+8]
  00532	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00537	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+8], xmm0

; 720  : 
; 721  : 	//
; 722  : 	//	Store the rotation matrix, so when we go back to the parent, other sub objects can inherit the matrix safely
; 723  : 	//
; 724  : 
; 725  : 	memcpy ( temp_matrix, rotation_3d, sizeof ( matrix3x3 ) );

  0053f	6a 24		 push	 36			; 00000024H
  00541	68 00 00 00 00	 push	 OFFSET ?rotation_3d@@3PAY02MA ; rotation_3d
  00546	8d 45 a8	 lea	 eax, DWORD PTR _temp_matrix$[ebp]
  00549	50		 push	 eax
  0054a	e8 00 00 00 00	 call	 _memcpy
  0054f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 
; 727  : 	//
; 728  : 	// Store the scaling before we trash it
; 729  : 	//
; 730  : 
; 731  : 	memcpy ( &temp_scale, &object_3d_scale, sizeof ( vec3d ) );

  00552	6a 0c		 push	 12			; 0000000cH
  00554	68 00 00 00 00	 push	 OFFSET ?object_3d_scale@@3UVEC3D@@A ; object_3d_scale
  00559	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _temp_scale$[ebp]
  0055f	50		 push	 eax
  00560	e8 00 00 00 00	 call	 _memcpy
  00565	83 c4 0c	 add	 esp, 12			; 0000000cH

; 732  : 
; 733  : 	//
; 734  : 	// Alter the scaling according to this object's scale
; 735  : 	//
; 736  : 
; 737  : 	object_3d_scale.x *= relative_scale.x;

  00568	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00570	f3 0f 59 85 3c
	ff ff ff	 mulss	 xmm0, DWORD PTR _relative_scale$[ebp]
  00578	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A, xmm0

; 738  : 	object_3d_scale.y *= relative_scale.y;

  00580	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00588	f3 0f 59 85 40
	ff ff ff	 mulss	 xmm0, DWORD PTR _relative_scale$[ebp+4]
  00590	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4, xmm0

; 739  : 	object_3d_scale.z *= relative_scale.z;

  00598	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  005a0	f3 0f 59 85 44
	ff ff ff	 mulss	 xmm0, DWORD PTR _relative_scale$[ebp+8]
  005a8	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8, xmm0

; 740  : 
; 741  : 	//
; 742  : 	// Compute the sub object's relative attitude matrix
; 743  : 	//
; 744  : 
; 745  : 	get_3d_transformation_matrix ( relative_attitude, relative_heading, -relative_pitch, -relative_roll );

  005b0	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_roll$[ebp]
  005b8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005bf	51		 push	 ecx
  005c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c5	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_pitch$[ebp]
  005cd	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005d4	51		 push	 ecx
  005d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005da	51		 push	 ecx
  005db	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _relative_heading$[ebp]
  005e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e8	8d 45 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp]
  005eb	50		 push	 eax
  005ec	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 746  : 
; 747  : 	//
; 748  : 	// Calculate the sub object's rotation matrix, to transform its 3d points relative to the parent object.
; 749  : 	//
; 750  : 
; 751  : 	vp.xv.x = ( ( relative_attitude[0][0] * parent_viewpoint->xv.x ) + ( relative_attitude[0][1] * parent_viewpoint->yv.x ) + ( relative_attitude[0][2] * parent_viewpoint->zv.x ) );

  005f1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005f6	6b c8 00	 imul	 ecx, eax, 0
  005f9	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  005fd	b8 04 00 00 00	 mov	 eax, 4
  00602	6b c8 00	 imul	 ecx, eax, 0
  00605	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00608	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0060d	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00612	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00617	6b d1 00	 imul	 edx, ecx, 0
  0061a	8d 44 15 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp+edx]
  0061e	b9 04 00 00 00	 mov	 ecx, 4
  00623	c1 e1 00	 shl	 ecx, 0
  00626	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00629	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  0062e	f3 0f 59 4a 18	 mulss	 xmm1, DWORD PTR [edx+24]
  00633	f3 0f 58 c1	 addss	 xmm0, xmm1
  00637	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0063c	6b c8 00	 imul	 ecx, eax, 0
  0063f	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  00643	b8 04 00 00 00	 mov	 eax, 4
  00648	d1 e0		 shl	 eax, 1
  0064a	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  0064d	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00652	f3 0f 59 49 24	 mulss	 xmm1, DWORD PTR [ecx+36]
  00657	f3 0f 58 c1	 addss	 xmm0, xmm1
  0065b	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+12], xmm0

; 752  : 	vp.xv.y = ( ( relative_attitude[0][0] * parent_viewpoint->xv.y ) + ( relative_attitude[0][1] * parent_viewpoint->yv.y ) + ( relative_attitude[0][2] * parent_viewpoint->zv.y ) );

  00663	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00668	6b c8 00	 imul	 ecx, eax, 0
  0066b	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0066f	b8 04 00 00 00	 mov	 eax, 4
  00674	6b c8 00	 imul	 ecx, eax, 0
  00677	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0067a	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0067f	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  00684	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00689	6b d1 00	 imul	 edx, ecx, 0
  0068c	8d 44 15 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp+edx]
  00690	b9 04 00 00 00	 mov	 ecx, 4
  00695	c1 e1 00	 shl	 ecx, 0
  00698	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  0069b	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  006a0	f3 0f 59 4a 1c	 mulss	 xmm1, DWORD PTR [edx+28]
  006a5	f3 0f 58 c1	 addss	 xmm0, xmm1
  006a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006ae	6b c8 00	 imul	 ecx, eax, 0
  006b1	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  006b5	b8 04 00 00 00	 mov	 eax, 4
  006ba	d1 e0		 shl	 eax, 1
  006bc	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  006bf	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  006c4	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  006c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  006cd	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+16], xmm0

; 753  : 	vp.xv.z = ( ( relative_attitude[0][0] * parent_viewpoint->xv.z ) + ( relative_attitude[0][1] * parent_viewpoint->yv.z ) + ( relative_attitude[0][2] * parent_viewpoint->zv.z ) );

  006d5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006da	6b c8 00	 imul	 ecx, eax, 0
  006dd	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  006e1	b8 04 00 00 00	 mov	 eax, 4
  006e6	6b c8 00	 imul	 ecx, eax, 0
  006e9	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  006ec	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  006f1	f3 0f 59 40 14	 mulss	 xmm0, DWORD PTR [eax+20]
  006f6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006fb	6b d1 00	 imul	 edx, ecx, 0
  006fe	8d 44 15 cc	 lea	 eax, DWORD PTR _relative_attitude$[ebp+edx]
  00702	b9 04 00 00 00	 mov	 ecx, 4
  00707	c1 e1 00	 shl	 ecx, 0
  0070a	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  0070d	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  00712	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00717	f3 0f 58 c1	 addss	 xmm0, xmm1
  0071b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00720	6b c8 00	 imul	 ecx, eax, 0
  00723	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  00727	b8 04 00 00 00	 mov	 eax, 4
  0072c	d1 e0		 shl	 eax, 1
  0072e	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00731	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00736	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  0073b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0073f	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+20], xmm0

; 754  : 
; 755  : 	vp.yv.x = ( ( relative_attitude[1][0] * parent_viewpoint->xv.x ) + ( relative_attitude[1][1] * parent_viewpoint->yv.x ) + ( relative_attitude[1][2] * parent_viewpoint->zv.x ) );

  00747	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0074c	c1 e0 00	 shl	 eax, 0
  0074f	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00753	ba 04 00 00 00	 mov	 edx, 4
  00758	6b c2 00	 imul	 eax, edx, 0
  0075b	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  0075e	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00763	f3 0f 59 42 0c	 mulss	 xmm0, DWORD PTR [edx+12]
  00768	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0076d	c1 e0 00	 shl	 eax, 0
  00770	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00774	ba 04 00 00 00	 mov	 edx, 4
  00779	c1 e2 00	 shl	 edx, 0
  0077c	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  0077f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00784	f3 0f 59 48 18	 mulss	 xmm1, DWORD PTR [eax+24]
  00789	f3 0f 58 c1	 addss	 xmm0, xmm1
  0078d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00792	c1 e1 00	 shl	 ecx, 0
  00795	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  00799	b8 04 00 00 00	 mov	 eax, 4
  0079e	d1 e0		 shl	 eax, 1
  007a0	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  007a3	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  007a8	f3 0f 59 49 24	 mulss	 xmm1, DWORD PTR [ecx+36]
  007ad	f3 0f 58 c1	 addss	 xmm0, xmm1
  007b1	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+24], xmm0

; 756  : 	vp.yv.y = ( ( relative_attitude[1][0] * parent_viewpoint->xv.y ) + ( relative_attitude[1][1] * parent_viewpoint->yv.y ) + ( relative_attitude[1][2] * parent_viewpoint->zv.y ) );

  007b9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007be	c1 e0 00	 shl	 eax, 0
  007c1	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  007c5	ba 04 00 00 00	 mov	 edx, 4
  007ca	6b c2 00	 imul	 eax, edx, 0
  007cd	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  007d0	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  007d5	f3 0f 59 42 10	 mulss	 xmm0, DWORD PTR [edx+16]
  007da	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007df	c1 e0 00	 shl	 eax, 0
  007e2	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  007e6	ba 04 00 00 00	 mov	 edx, 4
  007eb	c1 e2 00	 shl	 edx, 0
  007ee	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  007f1	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  007f6	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  007fb	f3 0f 58 c1	 addss	 xmm0, xmm1
  007ff	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00804	c1 e1 00	 shl	 ecx, 0
  00807	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0080b	b8 04 00 00 00	 mov	 eax, 4
  00810	d1 e0		 shl	 eax, 1
  00812	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00815	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0081a	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  0081f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00823	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+28], xmm0

; 757  : 	vp.yv.z = ( ( relative_attitude[1][0] * parent_viewpoint->xv.z ) + ( relative_attitude[1][1] * parent_viewpoint->yv.z ) + ( relative_attitude[1][2] * parent_viewpoint->zv.z ) );

  0082b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00830	c1 e0 00	 shl	 eax, 0
  00833	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00837	ba 04 00 00 00	 mov	 edx, 4
  0083c	6b c2 00	 imul	 eax, edx, 0
  0083f	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00842	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00847	f3 0f 59 42 14	 mulss	 xmm0, DWORD PTR [edx+20]
  0084c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00851	c1 e0 00	 shl	 eax, 0
  00854	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00858	ba 04 00 00 00	 mov	 edx, 4
  0085d	c1 e2 00	 shl	 edx, 0
  00860	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00863	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00868	f3 0f 59 48 20	 mulss	 xmm1, DWORD PTR [eax+32]
  0086d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00871	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00876	c1 e1 00	 shl	 ecx, 0
  00879	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0087d	b8 04 00 00 00	 mov	 eax, 4
  00882	d1 e0		 shl	 eax, 1
  00884	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00887	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0088c	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  00891	f3 0f 58 c1	 addss	 xmm0, xmm1
  00895	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+32], xmm0

; 758  : 
; 759  : 	vp.zv.x = ( ( relative_attitude[2][0] * parent_viewpoint->xv.x ) + ( relative_attitude[2][1] * parent_viewpoint->yv.x ) + ( relative_attitude[2][2] * parent_viewpoint->zv.x ) );

  0089d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008a2	d1 e0		 shl	 eax, 1
  008a4	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  008a8	ba 04 00 00 00	 mov	 edx, 4
  008ad	6b c2 00	 imul	 eax, edx, 0
  008b0	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  008b3	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  008b8	f3 0f 59 42 0c	 mulss	 xmm0, DWORD PTR [edx+12]
  008bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008c2	d1 e0		 shl	 eax, 1
  008c4	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  008c8	ba 04 00 00 00	 mov	 edx, 4
  008cd	c1 e2 00	 shl	 edx, 0
  008d0	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  008d3	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  008d8	f3 0f 59 48 18	 mulss	 xmm1, DWORD PTR [eax+24]
  008dd	f3 0f 58 c1	 addss	 xmm0, xmm1
  008e1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  008e6	d1 e1		 shl	 ecx, 1
  008e8	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  008ec	b8 04 00 00 00	 mov	 eax, 4
  008f1	d1 e0		 shl	 eax, 1
  008f3	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  008f6	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  008fb	f3 0f 59 49 24	 mulss	 xmm1, DWORD PTR [ecx+36]
  00900	f3 0f 58 c1	 addss	 xmm0, xmm1
  00904	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+36], xmm0

; 760  : 	vp.zv.y = ( ( relative_attitude[2][0] * parent_viewpoint->xv.y ) + ( relative_attitude[2][1] * parent_viewpoint->yv.y ) + ( relative_attitude[2][2] * parent_viewpoint->zv.y ) );

  0090c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00911	d1 e0		 shl	 eax, 1
  00913	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00917	ba 04 00 00 00	 mov	 edx, 4
  0091c	6b c2 00	 imul	 eax, edx, 0
  0091f	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00922	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00927	f3 0f 59 42 10	 mulss	 xmm0, DWORD PTR [edx+16]
  0092c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00931	d1 e0		 shl	 eax, 1
  00933	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00937	ba 04 00 00 00	 mov	 edx, 4
  0093c	c1 e2 00	 shl	 edx, 0
  0093f	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  00942	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00947	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  0094c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00950	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00955	d1 e1		 shl	 ecx, 1
  00957	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  0095b	b8 04 00 00 00	 mov	 eax, 4
  00960	d1 e0		 shl	 eax, 1
  00962	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  00965	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0096a	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  0096f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00973	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+40], xmm0

; 761  : 	vp.zv.z = ( ( relative_attitude[2][0] * parent_viewpoint->xv.z ) + ( relative_attitude[2][1] * parent_viewpoint->yv.z ) + ( relative_attitude[2][2] * parent_viewpoint->zv.z ) );

  0097b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00980	d1 e0		 shl	 eax, 1
  00982	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  00986	ba 04 00 00 00	 mov	 edx, 4
  0098b	6b c2 00	 imul	 eax, edx, 0
  0098e	8b 55 10	 mov	 edx, DWORD PTR _parent_viewpoint$[ebp]
  00991	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00996	f3 0f 59 42 14	 mulss	 xmm0, DWORD PTR [edx+20]
  0099b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009a0	d1 e0		 shl	 eax, 1
  009a2	8d 4c 05 cc	 lea	 ecx, DWORD PTR _relative_attitude$[ebp+eax]
  009a6	ba 04 00 00 00	 mov	 edx, 4
  009ab	c1 e2 00	 shl	 edx, 0
  009ae	8b 45 10	 mov	 eax, DWORD PTR _parent_viewpoint$[ebp]
  009b1	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  009b6	f3 0f 59 48 20	 mulss	 xmm1, DWORD PTR [eax+32]
  009bb	f3 0f 58 c1	 addss	 xmm0, xmm1
  009bf	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  009c4	d1 e1		 shl	 ecx, 1
  009c6	8d 54 0d cc	 lea	 edx, DWORD PTR _relative_attitude$[ebp+ecx]
  009ca	b8 04 00 00 00	 mov	 eax, 4
  009cf	d1 e0		 shl	 eax, 1
  009d1	8b 4d 10	 mov	 ecx, DWORD PTR _parent_viewpoint$[ebp]
  009d4	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  009d9	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  009de	f3 0f 58 c1	 addss	 xmm0, xmm1
  009e2	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _vp$[ebp+44], xmm0

; 762  : 
; 763  : 	//
; 764  : 	// Calculate the main matrix to transform the points to the screen
; 765  : 	//
; 766  : 
; 767  : 	rotation_3d[0][0] = ( ( vp.xv.x * visual_3d_vp->xv.x ) + ( vp.xv.y * visual_3d_vp->xv.y ) + ( vp.xv.z * visual_3d_vp->xv.z ) );

  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  009ef	f3 0f 10 85 04
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+12]
  009f7	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  009fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a02	f3 0f 10 8d 08
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+16]
  00a0a	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  00a0f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a13	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a19	f3 0f 10 8d 0c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+20]
  00a21	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00a26	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a2a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a2f	6b c8 00	 imul	 ecx, eax, 0
  00a32	ba 04 00 00 00	 mov	 edx, 4
  00a37	6b c2 00	 imul	 eax, edx, 0
  00a3a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 768  : 	rotation_3d[0][1] = ( ( vp.xv.x * visual_3d_vp->yv.x ) + ( vp.xv.y * visual_3d_vp->yv.y ) + ( vp.xv.z * visual_3d_vp->yv.z ) );

  00a43	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a48	f3 0f 10 85 04
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+12]
  00a50	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00a55	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a5b	f3 0f 10 8d 08
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+16]
  00a63	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  00a68	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a6c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a72	f3 0f 10 8d 0c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+20]
  00a7a	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00a7f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a83	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a88	6b c8 00	 imul	 ecx, eax, 0
  00a8b	ba 04 00 00 00	 mov	 edx, 4
  00a90	c1 e2 00	 shl	 edx, 0
  00a93	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 769  : 	rotation_3d[0][2] = ( ( vp.xv.x * visual_3d_vp->zv.x ) + ( vp.xv.y * visual_3d_vp->zv.y ) + ( vp.xv.z * visual_3d_vp->zv.z ) );

  00a9c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00aa1	f3 0f 10 85 04
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+12]
  00aa9	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00aae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ab4	f3 0f 10 8d 08
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+16]
  00abc	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00ac1	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ac5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00acb	f3 0f 10 8d 0c
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+20]
  00ad3	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00ad8	f3 0f 58 c1	 addss	 xmm0, xmm1
  00adc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ae1	6b c8 00	 imul	 ecx, eax, 0
  00ae4	ba 04 00 00 00	 mov	 edx, 4
  00ae9	d1 e2		 shl	 edx, 1
  00aeb	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 770  : 
; 771  : 	rotation_3d[1][0] = ( ( vp.yv.x * visual_3d_vp->xv.x ) + ( vp.yv.y * visual_3d_vp->xv.y ) + ( vp.yv.z * visual_3d_vp->xv.z ) );

  00af4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00af9	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+24]
  00b01	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00b06	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b0c	f3 0f 10 8d 14
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+28]
  00b14	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  00b19	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b1d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b23	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+32]
  00b2b	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00b30	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b34	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b39	c1 e0 00	 shl	 eax, 0
  00b3c	b9 04 00 00 00	 mov	 ecx, 4
  00b41	6b d1 00	 imul	 edx, ecx, 0
  00b44	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 772  : 	rotation_3d[1][1] = ( ( vp.yv.x * visual_3d_vp->yv.x ) + ( vp.yv.y * visual_3d_vp->yv.y ) + ( vp.yv.z * visual_3d_vp->yv.z ) );

  00b4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b52	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+24]
  00b5a	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00b5f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b65	f3 0f 10 8d 14
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+28]
  00b6d	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  00b72	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b76	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b7c	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+32]
  00b84	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00b89	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b8d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b92	c1 e0 00	 shl	 eax, 0
  00b95	b9 04 00 00 00	 mov	 ecx, 4
  00b9a	c1 e1 00	 shl	 ecx, 0
  00b9d	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 773  : 	rotation_3d[1][2] = ( ( vp.yv.x * visual_3d_vp->zv.x ) + ( vp.yv.y * visual_3d_vp->zv.y ) + ( vp.yv.z * visual_3d_vp->zv.z ) );

  00ba6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00bab	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+24]
  00bb3	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00bb8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00bbe	f3 0f 10 8d 14
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+28]
  00bc6	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00bcb	f3 0f 58 c1	 addss	 xmm0, xmm1
  00bcf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00bd5	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+32]
  00bdd	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00be2	f3 0f 58 c1	 addss	 xmm0, xmm1
  00be6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00beb	c1 e0 00	 shl	 eax, 0
  00bee	b9 04 00 00 00	 mov	 ecx, 4
  00bf3	d1 e1		 shl	 ecx, 1
  00bf5	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 774  : 
; 775  : 	rotation_3d[2][0] = ( ( vp.zv.x * visual_3d_vp->xv.x ) + ( vp.zv.y * visual_3d_vp->xv.y ) + ( vp.zv.z * visual_3d_vp->xv.z ) );

  00bfe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c03	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+36]
  00c0b	f3 0f 59 40 0c	 mulss	 xmm0, DWORD PTR [eax+12]
  00c10	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c16	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+40]
  00c1e	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]
  00c23	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c27	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c2d	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+44]
  00c35	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00c3a	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c3e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c43	d1 e0		 shl	 eax, 1
  00c45	b9 04 00 00 00	 mov	 ecx, 4
  00c4a	6b d1 00	 imul	 edx, ecx, 0
  00c4d	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 776  : 	rotation_3d[2][1] = ( ( vp.zv.x * visual_3d_vp->yv.x ) + ( vp.zv.y * visual_3d_vp->yv.y ) + ( vp.zv.z * visual_3d_vp->yv.z ) );

  00c56	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c5b	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+36]
  00c63	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00c68	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c6e	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+40]
  00c76	f3 0f 59 49 1c	 mulss	 xmm1, DWORD PTR [ecx+28]
  00c7b	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c7f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c85	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+44]
  00c8d	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00c92	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c96	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c9b	d1 e0		 shl	 eax, 1
  00c9d	b9 04 00 00 00	 mov	 ecx, 4
  00ca2	c1 e1 00	 shl	 ecx, 0
  00ca5	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 777  : 	rotation_3d[2][2] = ( ( vp.zv.x * visual_3d_vp->zv.x ) + ( vp.zv.y * visual_3d_vp->zv.y ) + ( vp.zv.z * visual_3d_vp->zv.z ) );

  00cae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cb3	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+36]
  00cbb	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  00cc0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cc6	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+40]
  00cce	f3 0f 59 49 28	 mulss	 xmm1, DWORD PTR [ecx+40]
  00cd3	f3 0f 58 c1	 addss	 xmm0, xmm1
  00cd7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cdd	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR _vp$[ebp+44]
  00ce5	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00cea	f3 0f 58 c1	 addss	 xmm0, xmm1
  00cee	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00cf3	d1 e0		 shl	 eax, 1
  00cf5	b9 04 00 00 00	 mov	 ecx, 4
  00cfa	d1 e1		 shl	 ecx, 1
  00cfc	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 778  : 
; 779  : 	//
; 780  : 	// Scale the rotation matrix
; 781  : 	//
; 782  : 
; 783  : 	rotation_3d[0][0] *= object_3d_scale.x;

  00d05	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d0a	6b c8 00	 imul	 ecx, eax, 0
  00d0d	ba 04 00 00 00	 mov	 edx, 4
  00d12	6b c2 00	 imul	 eax, edx, 0
  00d15	f3 0f 10 84 01
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  00d1e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00d26	b9 04 00 00 00	 mov	 ecx, 4
  00d2b	6b d1 00	 imul	 edx, ecx, 0
  00d2e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d33	6b c8 00	 imul	 ecx, eax, 0
  00d36	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 784  : 	rotation_3d[1][0] *= object_3d_scale.y;

  00d3f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d44	c1 e0 00	 shl	 eax, 0
  00d47	b9 04 00 00 00	 mov	 ecx, 4
  00d4c	6b d1 00	 imul	 edx, ecx, 0
  00d4f	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00d58	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00d60	b8 04 00 00 00	 mov	 eax, 4
  00d65	6b c8 00	 imul	 ecx, eax, 0
  00d68	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00d6d	c1 e2 00	 shl	 edx, 0
  00d70	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 785  : 	rotation_3d[2][0] *= object_3d_scale.z;

  00d79	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d7e	d1 e0		 shl	 eax, 1
  00d80	b9 04 00 00 00	 mov	 ecx, 4
  00d85	6b d1 00	 imul	 edx, ecx, 0
  00d88	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00d91	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00d99	b8 04 00 00 00	 mov	 eax, 4
  00d9e	6b c8 00	 imul	 ecx, eax, 0
  00da1	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00da6	d1 e2		 shl	 edx, 1
  00da8	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 786  : 
; 787  : 	rotation_3d[0][1] *= object_3d_scale.x;

  00db1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00db6	6b c8 00	 imul	 ecx, eax, 0
  00db9	ba 04 00 00 00	 mov	 edx, 4
  00dbe	c1 e2 00	 shl	 edx, 0
  00dc1	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00dca	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00dd2	b8 04 00 00 00	 mov	 eax, 4
  00dd7	c1 e0 00	 shl	 eax, 0
  00dda	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00ddf	6b d1 00	 imul	 edx, ecx, 0
  00de2	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 788  : 	rotation_3d[1][1] *= object_3d_scale.y;

  00deb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00df0	c1 e0 00	 shl	 eax, 0
  00df3	b9 04 00 00 00	 mov	 ecx, 4
  00df8	c1 e1 00	 shl	 ecx, 0
  00dfb	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00e04	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00e0c	ba 04 00 00 00	 mov	 edx, 4
  00e11	c1 e2 00	 shl	 edx, 0
  00e14	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e19	c1 e0 00	 shl	 eax, 0
  00e1c	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 789  : 	rotation_3d[2][1] *= object_3d_scale.z;

  00e25	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e2a	d1 e0		 shl	 eax, 1
  00e2c	b9 04 00 00 00	 mov	 ecx, 4
  00e31	c1 e1 00	 shl	 ecx, 0
  00e34	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00e3d	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00e45	ba 04 00 00 00	 mov	 edx, 4
  00e4a	c1 e2 00	 shl	 edx, 0
  00e4d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e52	d1 e0		 shl	 eax, 1
  00e54	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 790  : 
; 791  : 	rotation_3d[0][2] *= object_3d_scale.x;

  00e5d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e62	6b c8 00	 imul	 ecx, eax, 0
  00e65	ba 04 00 00 00	 mov	 edx, 4
  00e6a	d1 e2		 shl	 edx, 1
  00e6c	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00e75	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00e7d	b8 04 00 00 00	 mov	 eax, 4
  00e82	d1 e0		 shl	 eax, 1
  00e84	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00e89	6b d1 00	 imul	 edx, ecx, 0
  00e8c	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 792  : 	rotation_3d[1][2] *= object_3d_scale.y;

  00e95	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e9a	c1 e0 00	 shl	 eax, 0
  00e9d	b9 04 00 00 00	 mov	 ecx, 4
  00ea2	d1 e1		 shl	 ecx, 1
  00ea4	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00ead	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00eb5	ba 04 00 00 00	 mov	 edx, 4
  00eba	d1 e2		 shl	 edx, 1
  00ebc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ec1	c1 e0 00	 shl	 eax, 0
  00ec4	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 793  : 	rotation_3d[2][2] *= object_3d_scale.z;

  00ecd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ed2	d1 e0		 shl	 eax, 1
  00ed4	b9 04 00 00 00	 mov	 ecx, 4
  00ed9	d1 e1		 shl	 ecx, 1
  00edb	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00ee4	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00eec	ba 04 00 00 00	 mov	 edx, 4
  00ef1	d1 e2		 shl	 edx, 1
  00ef3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ef8	d1 e0		 shl	 eax, 1
  00efa	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 794  : 
; 795  : 	if ( object_number )

  00f03	83 7d f8 00	 cmp	 DWORD PTR _object_number$[ebp], 0
  00f07	0f 84 2d 0b 00
	00		 je	 $LN14@draw_sub_o

; 796  : 	{
; 797  : 
; 798  : 		//
; 799  : 		// Calculate the relative camera position in the object viewspace
; 800  : 		//
; 801  : 	
; 802  : 		{
; 803  : 	
; 804  : 			vec3d
; 805  : 				rel_pos;
; 806  : 	
; 807  : 			rel_pos.x = visual_3d_vp->x - vp.x;

  00f0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f12	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00f16	f3 0f 5c 85 f8
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00f1e	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _rel_pos$9[ebp], xmm0

; 808  : 			rel_pos.y = visual_3d_vp->y - vp.y;

  00f26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f2b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00f30	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  00f38	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _rel_pos$9[ebp+4], xmm0

; 809  : 			rel_pos.z = visual_3d_vp->z - vp.z;

  00f40	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f45	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00f4a	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00f52	f3 0f 11 85 ec
	fe ff ff	 movss	 DWORD PTR _rel_pos$9[ebp+8], xmm0

; 810  : 	
; 811  : 			object_camera_position.x = ( rel_pos.x * vp.attitude[0][0] + rel_pos.y * vp.attitude[0][1] + rel_pos.z * vp.attitude[0][2] );

  00f5a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f5f	6b c8 00	 imul	 ecx, eax, 0
  00f62	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  00f69	b8 04 00 00 00	 mov	 eax, 4
  00f6e	6b c8 00	 imul	 ecx, eax, 0
  00f71	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _rel_pos$9[ebp]
  00f79	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00f7e	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00f83	6b c2 00	 imul	 eax, edx, 0
  00f86	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  00f8d	ba 04 00 00 00	 mov	 edx, 4
  00f92	c1 e2 00	 shl	 edx, 0
  00f95	f3 0f 10 8d e8
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+4]
  00f9d	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00fa2	f3 0f 58 c1	 addss	 xmm0, xmm1
  00fa6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00fab	6b c8 00	 imul	 ecx, eax, 0
  00fae	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  00fb5	b8 04 00 00 00	 mov	 eax, 4
  00fba	d1 e0		 shl	 eax, 1
  00fbc	f3 0f 10 8d ec
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+8]
  00fc4	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00fc9	f3 0f 58 c1	 addss	 xmm0, xmm1
  00fcd	f3 0f 11 45 9c	 movss	 DWORD PTR _object_camera_position$[ebp], xmm0

; 812  : 			object_camera_position.y = ( rel_pos.x * vp.attitude[1][0] + rel_pos.y * vp.attitude[1][1] + rel_pos.z * vp.attitude[1][2] );

  00fd2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00fd7	c1 e0 00	 shl	 eax, 0
  00fda	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  00fe1	ba 04 00 00 00	 mov	 edx, 4
  00fe6	6b c2 00	 imul	 eax, edx, 0
  00fe9	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _rel_pos$9[ebp]
  00ff1	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00ff6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00ffb	c1 e1 00	 shl	 ecx, 0
  00ffe	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  01005	b8 04 00 00 00	 mov	 eax, 4
  0100a	c1 e0 00	 shl	 eax, 0
  0100d	f3 0f 10 8d e8
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+4]
  01015	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0101a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0101e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01023	c1 e1 00	 shl	 ecx, 0
  01026	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0102d	b8 04 00 00 00	 mov	 eax, 4
  01032	d1 e0		 shl	 eax, 1
  01034	f3 0f 10 8d ec
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+8]
  0103c	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  01041	f3 0f 58 c1	 addss	 xmm0, xmm1
  01045	f3 0f 11 45 a0	 movss	 DWORD PTR _object_camera_position$[ebp+4], xmm0

; 813  : 			object_camera_position.z = ( rel_pos.x * vp.attitude[2][0] + rel_pos.y * vp.attitude[2][1] + rel_pos.z * vp.attitude[2][2] );

  0104a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0104f	d1 e0		 shl	 eax, 1
  01051	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  01058	ba 04 00 00 00	 mov	 edx, 4
  0105d	6b c2 00	 imul	 eax, edx, 0
  01060	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _rel_pos$9[ebp]
  01068	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0106d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01072	d1 e1		 shl	 ecx, 1
  01074	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0107b	b8 04 00 00 00	 mov	 eax, 4
  01080	c1 e0 00	 shl	 eax, 0
  01083	f3 0f 10 8d e8
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+4]
  0108b	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  01090	f3 0f 58 c1	 addss	 xmm0, xmm1
  01094	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01099	d1 e1		 shl	 ecx, 1
  0109b	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  010a2	b8 04 00 00 00	 mov	 eax, 4
  010a7	d1 e0		 shl	 eax, 1
  010a9	f3 0f 10 8d ec
	fe ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+8]
  010b1	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  010b6	f3 0f 58 c1	 addss	 xmm0, xmm1
  010ba	f3 0f 11 45 a4	 movss	 DWORD PTR _object_camera_position$[ebp+8], xmm0

; 814  : 	
; 815  : 			object_camera_direction.x = ( visual_3d_vp->zv.x * vp.attitude[0][0] + visual_3d_vp->zv.y * vp.attitude[1][0] + visual_3d_vp->zv.z * vp.attitude[2][0] );

  010bf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  010c4	6b c8 00	 imul	 ecx, eax, 0
  010c7	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  010ce	b8 04 00 00 00	 mov	 eax, 4
  010d3	6b c8 00	 imul	 ecx, eax, 0
  010d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  010db	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  010e0	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  010e5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  010ea	c1 e1 00	 shl	 ecx, 0
  010ed	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  010f4	b8 04 00 00 00	 mov	 eax, 4
  010f9	6b c8 00	 imul	 ecx, eax, 0
  010fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01101	f3 0f 10 48 28	 movss	 xmm1, DWORD PTR [eax+40]
  01106	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  0110b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0110f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01114	d1 e1		 shl	 ecx, 1
  01116	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0111d	b8 04 00 00 00	 mov	 eax, 4
  01122	6b c8 00	 imul	 ecx, eax, 0
  01125	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0112a	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0112f	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  01134	f3 0f 58 c1	 addss	 xmm0, xmm1
  01138	f3 0f 11 45 90	 movss	 DWORD PTR _object_camera_direction$[ebp], xmm0

; 816  : 			object_camera_direction.y = ( visual_3d_vp->zv.x * vp.attitude[0][1] + visual_3d_vp->zv.y * vp.attitude[1][1] + visual_3d_vp->zv.z * vp.attitude[2][1] );

  0113d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01142	6b c8 00	 imul	 ecx, eax, 0
  01145	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0114c	b8 04 00 00 00	 mov	 eax, 4
  01151	c1 e0 00	 shl	 eax, 0
  01154	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0115a	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  0115f	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  01164	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01169	c1 e2 00	 shl	 edx, 0
  0116c	8d 84 15 04 ff
	ff ff		 lea	 eax, DWORD PTR _vp$[ebp+edx+12]
  01173	b9 04 00 00 00	 mov	 ecx, 4
  01178	c1 e1 00	 shl	 ecx, 0
  0117b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01181	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  01186	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  0118b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0118f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01194	d1 e0		 shl	 eax, 1
  01196	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0119d	ba 04 00 00 00	 mov	 edx, 4
  011a2	c1 e2 00	 shl	 edx, 0
  011a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  011aa	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  011af	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  011b4	f3 0f 58 c1	 addss	 xmm0, xmm1
  011b8	f3 0f 11 45 94	 movss	 DWORD PTR _object_camera_direction$[ebp+4], xmm0

; 817  : 			object_camera_direction.z = ( visual_3d_vp->zv.x * vp.attitude[0][2] + visual_3d_vp->zv.y * vp.attitude[1][2] + visual_3d_vp->zv.z * vp.attitude[2][2] );

  011bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  011c2	6b c8 00	 imul	 ecx, eax, 0
  011c5	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  011cc	b8 04 00 00 00	 mov	 eax, 4
  011d1	d1 e0		 shl	 eax, 1
  011d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  011d9	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  011de	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  011e3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  011e8	c1 e2 00	 shl	 edx, 0
  011eb	8d 84 15 04 ff
	ff ff		 lea	 eax, DWORD PTR _vp$[ebp+edx+12]
  011f2	b9 04 00 00 00	 mov	 ecx, 4
  011f7	d1 e1		 shl	 ecx, 1
  011f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  011ff	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  01204	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  01209	f3 0f 58 c1	 addss	 xmm0, xmm1
  0120d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01212	d1 e0		 shl	 eax, 1
  01214	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0121b	ba 04 00 00 00	 mov	 edx, 4
  01220	d1 e2		 shl	 edx, 1
  01222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01227	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0122c	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  01231	f3 0f 58 c1	 addss	 xmm0, xmm1
  01235	f3 0f 11 45 98	 movss	 DWORD PTR _object_camera_direction$[ebp+8], xmm0

; 818  : 		}
; 819  : 	
; 820  : 		//
; 821  : 		// Calculate the vector from the object to the viewpoint, in the object's view system
; 822  : 		//
; 823  : 	
; 824  : 		{
; 825  : 	
; 826  : 			float
; 827  : 				x,
; 828  : 				y,
; 829  : 				z;
; 830  : 	
; 831  : 			x = ( ( visual_3d_vp->x - vp.x ) * vp.xv.x );

  0123a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0123f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  01243	f3 0f 5c 85 f8
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  0124b	f3 0f 59 85 04
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+12]
  01253	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _x$8[ebp], xmm0

; 832  : 			x += ( ( visual_3d_vp->y - vp.y ) *  vp.xv.y );

  0125b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01260	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  01265	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  0126d	f3 0f 59 85 08
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+16]
  01275	f3 0f 58 85 e0
	fe ff ff	 addss	 xmm0, DWORD PTR _x$8[ebp]
  0127d	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _x$8[ebp], xmm0

; 833  : 			x += ( ( visual_3d_vp->z - vp.z ) *  vp.xv.z );

  01285	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0128a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0128f	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  01297	f3 0f 59 85 0c
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+20]
  0129f	f3 0f 58 85 e0
	fe ff ff	 addss	 xmm0, DWORD PTR _x$8[ebp]
  012a7	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _x$8[ebp], xmm0

; 834  : 	
; 835  : 			y = ( ( visual_3d_vp->x - vp.x ) * vp.yv.x );

  012af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012b4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  012b8	f3 0f 5c 85 f8
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  012c0	f3 0f 59 85 10
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+24]
  012c8	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _y$7[ebp], xmm0

; 836  : 			y += ( ( visual_3d_vp->y - vp.y ) *  vp.yv.y );

  012d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012d5	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  012da	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  012e2	f3 0f 59 85 14
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+28]
  012ea	f3 0f 58 85 dc
	fe ff ff	 addss	 xmm0, DWORD PTR _y$7[ebp]
  012f2	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _y$7[ebp], xmm0

; 837  : 			y += ( ( visual_3d_vp->z - vp.z ) *  vp.yv.z );

  012fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  012ff	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  01304	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  0130c	f3 0f 59 85 18
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+32]
  01314	f3 0f 58 85 dc
	fe ff ff	 addss	 xmm0, DWORD PTR _y$7[ebp]
  0131c	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _y$7[ebp], xmm0

; 838  : 	
; 839  : 			z = ( ( visual_3d_vp->x - vp.x ) * vp.zv.x );

  01324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01329	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0132d	f3 0f 5c 85 f8
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  01335	f3 0f 59 85 1c
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+36]
  0133d	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR _z$6[ebp], xmm0

; 840  : 			z += ( ( visual_3d_vp->y - vp.y ) *  vp.zv.y );

  01345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0134a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0134f	f3 0f 5c 85 fc
	fe ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  01357	f3 0f 59 85 20
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+40]
  0135f	f3 0f 58 85 d8
	fe ff ff	 addss	 xmm0, DWORD PTR _z$6[ebp]
  01367	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR _z$6[ebp], xmm0

; 841  : 			z += ( ( visual_3d_vp->z - vp.z ) *  vp.zv.z );

  0136f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01374	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  01379	f3 0f 5c 85 00
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  01381	f3 0f 59 85 24
	ff ff ff	 mulss	 xmm0, DWORD PTR _vp$[ebp+44]
  01389	f3 0f 58 85 d8
	fe ff ff	 addss	 xmm0, DWORD PTR _z$6[ebp]
  01391	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR _z$6[ebp], xmm0

; 842  : 	
; 843  : 			object_pos.x = x;

  01399	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _x$8[ebp]
  013a1	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _object_pos$[ebp], xmm0

; 844  : 			object_pos.y = y;

  013a9	f3 0f 10 85 dc
	fe ff ff	 movss	 xmm0, DWORD PTR _y$7[ebp]
  013b1	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _object_pos$[ebp+4], xmm0

; 845  : 			object_pos.z = z;

  013b9	f3 0f 10 85 d8
	fe ff ff	 movss	 xmm0, DWORD PTR _z$6[ebp]
  013c1	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _object_pos$[ebp+8], xmm0

; 846  : 	
; 847  : 			object_unit_pos.x = -object_pos.x;

  013c9	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _object_pos$[ebp]
  013d1	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  013d8	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _object_unit_pos$[ebp], xmm0

; 848  : 			object_unit_pos.y = -object_pos.y;

  013e0	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _object_pos$[ebp+4]
  013e8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  013ef	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _object_unit_pos$[ebp+4], xmm0

; 849  : 			object_unit_pos.z = -object_pos.z;

  013f7	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _object_pos$[ebp+8]
  013ff	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01406	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _object_unit_pos$[ebp+8], xmm0

; 850  : 	
; 851  : 			normalise_any_3d_vector ( &object_unit_pos );

  0140e	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  01414	50		 push	 eax
  01415	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  0141a	dd d8		 fstp	 ST(0)

; 852  : 
; 853  : 			current_object_3d_unit_position = &object_unit_pos;

  0141c	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  01422	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A, eax ; current_object_3d_unit_position

; 854  : 		}
; 855  : 	
; 856  : 		//
; 857  : 		// Rotate the light source vector to be relative to the object.
; 858  : 		//
; 859  : 	
; 860  : 		light = generate_relative_lights ( &vp, current_object_3d_unit_position, current_3d_lights );

  01427	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A ; current_3d_lights
  0142c	50		 push	 eax
  0142d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A ; current_object_3d_unit_position
  01433	51		 push	 ecx
  01434	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  0143a	52		 push	 edx
  0143b	e8 00 00 00 00	 call	 ?generate_relative_lights@@YGPAULIGHT_3D_SOURCE@@PAUVIEWPOINT@@PAUVEC3D@@PAU1@@Z ; generate_relative_lights
  01440	89 85 28 ff ff
	ff		 mov	 DWORD PTR _light$[ebp], eax

; 861  : 	
; 862  : 		object_3d_object_base[object_3d_object_current_base].lights = light;

  01446	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0144d	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _light$[ebp]
  01453	89 88 04 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+4], ecx

; 863  : 	
; 864  : 		//
; 865  : 		//	Set up this objects' object info structure
; 866  : 		//
; 867  : 	
; 868  : 		object_3d_object_base[object_3d_object_current_base].points_base = object_3d_points_current_base;

  01459	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  01460	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_points_current_base@@3HA ; object_3d_points_current_base
  01466	89 88 24 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+36], ecx

; 869  : 		object_3d_object_base[object_3d_object_current_base].camera_position = object_camera_position;

  0146c	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  01473	05 08 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+8
  01478	8b 4d 9c	 mov	 ecx, DWORD PTR _object_camera_position$[ebp]
  0147b	89 08		 mov	 DWORD PTR [eax], ecx
  0147d	8b 55 a0	 mov	 edx, DWORD PTR _object_camera_position$[ebp+4]
  01480	89 50 04	 mov	 DWORD PTR [eax+4], edx
  01483	8b 4d a4	 mov	 ecx, DWORD PTR _object_camera_position$[ebp+8]
  01486	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 870  : 		object_3d_object_base[object_3d_object_current_base].camera_direction = object_camera_direction;

  01489	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  01490	05 14 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+20
  01495	8b 4d 90	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp]
  01498	89 08		 mov	 DWORD PTR [eax], ecx
  0149a	8b 55 94	 mov	 edx, DWORD PTR _object_camera_direction$[ebp+4]
  0149d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  014a0	8b 4d 98	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp+8]
  014a3	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 871  : 		object_3d_object_base[object_3d_object_current_base].object_vp = &vp;

  014a6	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  014ad	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp]
  014b3	89 88 28 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+40], ecx

; 872  : 		object_3d_object_base[object_3d_object_current_base].object_number = object_number;

  014b9	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  014c0	8b 4d f8	 mov	 ecx, DWORD PTR _object_number$[ebp]
  014c3	89 88 20 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+32], ecx

; 873  : 	
; 874  : 		current_object_3d_object_base = &object_3d_object_base[object_3d_object_current_base];

  014c9	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  014d0	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; object_3d_object_base
  014d5	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A, eax ; current_object_3d_object_base

; 875  : 	
; 876  : 		if ( objects_3d_data[object_number].number_of_points )

  014da	6b 45 f8 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  014de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  014e4	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  014e8	85 d2		 test	 edx, edx
  014ea	0f 84 4a 05 00
	00		 je	 $LN14@draw_sub_o

; 877  : 		{
; 878  : 		
; 879  : 			int
; 880  : 				object_outcode;
; 881  : 	
; 882  : 			//
; 883  : 			// Setup the objects scaling information
; 884  : 			//
; 885  : 		
; 886  : 			if ( !get_object_3d_outcode ( object_number, &sub_pos, &object_outcode ) )

  014f0	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _object_outcode$5[ebp]
  014f6	50		 push	 eax
  014f7	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _sub_pos$[ebp]
  014fd	51		 push	 ecx
  014fe	8b 55 f8	 mov	 edx, DWORD PTR _object_number$[ebp]
  01501	52		 push	 edx
  01502	e8 00 00 00 00	 call	 ?get_object_3d_outcode@@YGHHPAUVEC3D@@PAH@Z ; get_object_3d_outcode
  01507	85 c0		 test	 eax, eax
  01509	0f 85 2b 05 00
	00		 jne	 $LN14@draw_sub_o

; 887  : 			{
; 888  : 
; 889  : 				matrix4x4
; 890  : 					matrix;
; 891  : 
; 892  : 				vec3d
; 893  : 					posn,
; 894  : 					rel;
; 895  : 	
; 896  : 				//
; 897  : 				// Set the world transformation matrix
; 898  : 				//
; 899  : 
; 900  : 				matrix[0][0] = vp.attitude[0][0] * object_3d_scale.x;

  0150f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01514	6b c8 00	 imul	 ecx, eax, 0
  01517	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0151e	b8 04 00 00 00	 mov	 eax, 4
  01523	6b c8 00	 imul	 ecx, eax, 0
  01526	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0152b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  01533	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  01538	6b c2 00	 imul	 eax, edx, 0
  0153b	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  01542	ba 04 00 00 00	 mov	 edx, 4
  01547	6b c2 00	 imul	 eax, edx, 0
  0154a	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 901  : 				matrix[0][1] = vp.attitude[0][1] * object_3d_scale.x;

  0154f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01554	6b c8 00	 imul	 ecx, eax, 0
  01557	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0155e	b8 04 00 00 00	 mov	 eax, 4
  01563	c1 e0 00	 shl	 eax, 0
  01566	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0156b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  01573	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  01578	6b d1 00	 imul	 edx, ecx, 0
  0157b	8d 84 15 94 fe
	ff ff		 lea	 eax, DWORD PTR _matrix$4[ebp+edx]
  01582	b9 04 00 00 00	 mov	 ecx, 4
  01587	c1 e1 00	 shl	 ecx, 0
  0158a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 902  : 				matrix[0][2] = vp.attitude[0][2] * object_3d_scale.x;

  0158f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01594	6b c8 00	 imul	 ecx, eax, 0
  01597	8d 94 0d 04 ff
	ff ff		 lea	 edx, DWORD PTR _vp$[ebp+ecx+12]
  0159e	b8 04 00 00 00	 mov	 eax, 4
  015a3	d1 e0		 shl	 eax, 1
  015a5	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  015aa	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  015b2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  015b7	6b d1 00	 imul	 edx, ecx, 0
  015ba	8d 84 15 94 fe
	ff ff		 lea	 eax, DWORD PTR _matrix$4[ebp+edx]
  015c1	b9 04 00 00 00	 mov	 ecx, 4
  015c6	d1 e1		 shl	 ecx, 1
  015c8	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 903  : 				matrix[0][3] = 0;

  015cd	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  015d2	6b c8 00	 imul	 ecx, eax, 0
  015d5	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  015dc	b8 04 00 00 00	 mov	 eax, 4
  015e1	6b c8 03	 imul	 ecx, eax, 3
  015e4	0f 57 c0	 xorps	 xmm0, xmm0
  015e7	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 904  : 	
; 905  : 				matrix[1][0] = vp.attitude[1][0] * object_3d_scale.y;

  015ec	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  015f1	c1 e0 00	 shl	 eax, 0
  015f4	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  015fb	ba 04 00 00 00	 mov	 edx, 4
  01600	6b c2 00	 imul	 eax, edx, 0
  01603	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  01608	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  01610	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  01615	c1 e1 00	 shl	 ecx, 0
  01618	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  0161f	b8 04 00 00 00	 mov	 eax, 4
  01624	6b c8 00	 imul	 ecx, eax, 0
  01627	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 906  : 				matrix[1][1] = vp.attitude[1][1] * object_3d_scale.y;

  0162c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01631	c1 e0 00	 shl	 eax, 0
  01634	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0163b	ba 04 00 00 00	 mov	 edx, 4
  01640	c1 e2 00	 shl	 edx, 0
  01643	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01648	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  01650	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01655	c1 e0 00	 shl	 eax, 0
  01658	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  0165f	ba 04 00 00 00	 mov	 edx, 4
  01664	c1 e2 00	 shl	 edx, 0
  01667	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 907  : 				matrix[1][2] = vp.attitude[1][2] * object_3d_scale.y;

  0166c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01671	c1 e0 00	 shl	 eax, 0
  01674	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  0167b	ba 04 00 00 00	 mov	 edx, 4
  01680	d1 e2		 shl	 edx, 1
  01682	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01687	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  0168f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01694	c1 e0 00	 shl	 eax, 0
  01697	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  0169e	ba 04 00 00 00	 mov	 edx, 4
  016a3	d1 e2		 shl	 edx, 1
  016a5	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 908  : 				matrix[1][3] = 0;

  016aa	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  016af	c1 e0 00	 shl	 eax, 0
  016b2	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  016b9	ba 04 00 00 00	 mov	 edx, 4
  016be	6b c2 03	 imul	 eax, edx, 3
  016c1	0f 57 c0	 xorps	 xmm0, xmm0
  016c4	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 909  : 	
; 910  : 				matrix[2][0] = vp.attitude[2][0] * object_3d_scale.z;

  016c9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  016ce	d1 e0		 shl	 eax, 1
  016d0	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  016d7	ba 04 00 00 00	 mov	 edx, 4
  016dc	6b c2 00	 imul	 eax, edx, 0
  016df	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  016e4	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  016ec	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  016f1	d1 e1		 shl	 ecx, 1
  016f3	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  016fa	b8 04 00 00 00	 mov	 eax, 4
  016ff	6b c8 00	 imul	 ecx, eax, 0
  01702	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 911  : 				matrix[2][1] = vp.attitude[2][1] * object_3d_scale.z;

  01707	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0170c	d1 e0		 shl	 eax, 1
  0170e	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  01715	ba 04 00 00 00	 mov	 edx, 4
  0171a	c1 e2 00	 shl	 edx, 0
  0171d	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01722	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0172a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0172f	d1 e0		 shl	 eax, 1
  01731	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  01738	ba 04 00 00 00	 mov	 edx, 4
  0173d	c1 e2 00	 shl	 edx, 0
  01740	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 912  : 				matrix[2][2] = vp.attitude[2][2] * object_3d_scale.z;

  01745	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0174a	d1 e0		 shl	 eax, 1
  0174c	8d 8c 05 04 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  01753	ba 04 00 00 00	 mov	 edx, 4
  01758	d1 e2		 shl	 edx, 1
  0175a	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0175f	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  01767	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0176c	d1 e0		 shl	 eax, 1
  0176e	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  01775	ba 04 00 00 00	 mov	 edx, 4
  0177a	d1 e2		 shl	 edx, 1
  0177c	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 913  : 				matrix[2][3] = 0;

  01781	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01786	d1 e0		 shl	 eax, 1
  01788	8d 8c 05 94 fe
	ff ff		 lea	 ecx, DWORD PTR _matrix$4[ebp+eax]
  0178f	ba 04 00 00 00	 mov	 edx, 4
  01794	6b c2 03	 imul	 eax, edx, 3
  01797	0f 57 c0	 xorps	 xmm0, xmm0
  0179a	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 914  : 
; 915  : 				rel.x = current_object_3d_relative_position->x;

  0179f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  017a4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  017a8	f3 0f 11 85 7c
	fe ff ff	 movss	 DWORD PTR _rel$2[ebp], xmm0

; 916  : 				rel.y = current_object_3d_relative_position->y;

  017b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  017b5	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  017ba	f3 0f 11 85 80
	fe ff ff	 movss	 DWORD PTR _rel$2[ebp+4], xmm0

; 917  : 				rel.z = current_object_3d_relative_position->z;

  017c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  017c7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  017cc	f3 0f 11 85 84
	fe ff ff	 movss	 DWORD PTR _rel$2[ebp+8], xmm0

; 918  : 	
; 919  : 				posn.x = visual_3d_vp->attitude[0][0] * rel.x + visual_3d_vp->attitude[1][0] * rel.y + visual_3d_vp->attitude[2][0] * rel.z;

  017d4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  017d9	6b c8 00	 imul	 ecx, eax, 0
  017dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  017e2	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  017e6	b9 04 00 00 00	 mov	 ecx, 4
  017eb	6b d1 00	 imul	 edx, ecx, 0
  017ee	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  017f3	f3 0f 59 85 7c
	fe ff ff	 mulss	 xmm0, DWORD PTR _rel$2[ebp]
  017fb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01800	c1 e0 00	 shl	 eax, 0
  01803	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01809	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0180d	b8 04 00 00 00	 mov	 eax, 4
  01812	6b c8 00	 imul	 ecx, eax, 0
  01815	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  0181a	f3 0f 59 8d 80
	fe ff ff	 mulss	 xmm1, DWORD PTR _rel$2[ebp+4]
  01822	f3 0f 58 c1	 addss	 xmm0, xmm1
  01826	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0182b	d1 e2		 shl	 edx, 1
  0182d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01832	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  01836	ba 04 00 00 00	 mov	 edx, 4
  0183b	6b c2 00	 imul	 eax, edx, 0
  0183e	f3 0f 10 0c 01	 movss	 xmm1, DWORD PTR [ecx+eax]
  01843	f3 0f 59 8d 84
	fe ff ff	 mulss	 xmm1, DWORD PTR _rel$2[ebp+8]
  0184b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0184f	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _posn$3[ebp], xmm0

; 920  : 				posn.y = visual_3d_vp->attitude[0][1] * rel.x + visual_3d_vp->attitude[1][1] * rel.y + visual_3d_vp->attitude[2][1] * rel.z;

  01857	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0185c	6b c8 00	 imul	 ecx, eax, 0
  0185f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01865	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  01869	b9 04 00 00 00	 mov	 ecx, 4
  0186e	c1 e1 00	 shl	 ecx, 0
  01871	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  01876	f3 0f 59 85 7c
	fe ff ff	 mulss	 xmm0, DWORD PTR _rel$2[ebp]
  0187e	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01883	c1 e2 00	 shl	 edx, 0
  01886	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0188b	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  0188f	ba 04 00 00 00	 mov	 edx, 4
  01894	c1 e2 00	 shl	 edx, 0
  01897	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  0189c	f3 0f 59 8d 80
	fe ff ff	 mulss	 xmm1, DWORD PTR _rel$2[ebp+4]
  018a4	f3 0f 58 c1	 addss	 xmm0, xmm1
  018a8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  018ad	d1 e0		 shl	 eax, 1
  018af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  018b5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  018b9	b8 04 00 00 00	 mov	 eax, 4
  018be	c1 e0 00	 shl	 eax, 0
  018c1	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  018c6	f3 0f 59 8d 84
	fe ff ff	 mulss	 xmm1, DWORD PTR _rel$2[ebp+8]
  018ce	f3 0f 58 c1	 addss	 xmm0, xmm1
  018d2	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _posn$3[ebp+4], xmm0

; 921  : 				posn.z = visual_3d_vp->attitude[0][2] * rel.x + visual_3d_vp->attitude[1][2] * rel.y + visual_3d_vp->attitude[2][2] * rel.z;

  018da	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  018df	6b c8 00	 imul	 ecx, eax, 0
  018e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  018e8	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  018ec	b9 04 00 00 00	 mov	 ecx, 4
  018f1	d1 e1		 shl	 ecx, 1
  018f3	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  018f8	f3 0f 59 85 7c
	fe ff ff	 mulss	 xmm0, DWORD PTR _rel$2[ebp]
  01900	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01905	c1 e2 00	 shl	 edx, 0
  01908	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0190d	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  01911	ba 04 00 00 00	 mov	 edx, 4
  01916	d1 e2		 shl	 edx, 1
  01918	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  0191d	f3 0f 59 8d 80
	fe ff ff	 mulss	 xmm1, DWORD PTR _rel$2[ebp+4]
  01925	f3 0f 58 c1	 addss	 xmm0, xmm1
  01929	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0192e	d1 e0		 shl	 eax, 1
  01930	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01936	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0193a	b8 04 00 00 00	 mov	 eax, 4
  0193f	d1 e0		 shl	 eax, 1
  01941	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  01946	f3 0f 59 8d 84
	fe ff ff	 mulss	 xmm1, DWORD PTR _rel$2[ebp+8]
  0194e	f3 0f 58 c1	 addss	 xmm0, xmm1
  01952	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _posn$3[ebp+8], xmm0

; 922  : 	/*
; 923  : 				matrix[3][0] = vp.position.x;
; 924  : 				matrix[3][1] = vp.position.y;
; 925  : 				matrix[3][2] = vp.position.z;
; 926  : 				matrix[3][3] = 1;
; 927  : */
; 928  : 				matrix[3][0] = posn.x;

  0195a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0195f	6b c8 03	 imul	 ecx, eax, 3
  01962	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  01969	b8 04 00 00 00	 mov	 eax, 4
  0196e	6b c8 00	 imul	 ecx, eax, 0
  01971	f3 0f 10 85 88
	fe ff ff	 movss	 xmm0, DWORD PTR _posn$3[ebp]
  01979	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 929  : 				matrix[3][1] = posn.y;

  0197e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01983	6b c8 03	 imul	 ecx, eax, 3
  01986	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  0198d	b8 04 00 00 00	 mov	 eax, 4
  01992	c1 e0 00	 shl	 eax, 0
  01995	f3 0f 10 85 8c
	fe ff ff	 movss	 xmm0, DWORD PTR _posn$3[ebp+4]
  0199d	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 930  : 				matrix[3][2] = posn.z;

  019a2	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  019a7	6b c8 03	 imul	 ecx, eax, 3
  019aa	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  019b1	b8 04 00 00 00	 mov	 eax, 4
  019b6	d1 e0		 shl	 eax, 1
  019b8	f3 0f 10 85 90
	fe ff ff	 movss	 xmm0, DWORD PTR _posn$3[ebp+8]
  019c0	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 931  : 				matrix[3][3] = 1;

  019c5	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  019ca	6b c8 03	 imul	 ecx, eax, 3
  019cd	8d 94 0d 94 fe
	ff ff		 lea	 edx, DWORD PTR _matrix$4[ebp+ecx]
  019d4	b8 04 00 00 00	 mov	 eax, 4
  019d9	6b c8 03	 imul	 ecx, eax, 3
  019dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  019e4	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 932  : 
; 933  : 				memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  019e9	6a 40		 push	 64			; 00000040H
  019eb	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR _matrix$4[ebp]
  019f1	50		 push	 eax
  019f2	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  019f7	e8 00 00 00 00	 call	 _memcpy
  019fc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 934  : 	
; 935  : 				f3d_set_transform ( D3DTRANSFORMSTATE_WORLD, &d3d_matrix );

  019ff	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  01a04	6a 01		 push	 1
  01a06	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 936  : 
; 937  : 				if ( ( textured_object_rendering_enabled ) || ( infrared_override ) )

  01a0b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?textured_object_rendering_enabled@@3HA, 0 ; textured_object_rendering_enabled
  01a12	75 06		 jne	 SHORT $LN15@draw_sub_o
  01a14	83 7d 18 00	 cmp	 DWORD PTR _infrared_override$[ebp], 0
  01a18	74 11		 je	 SHORT $LN13@draw_sub_o
$LN15@draw_sub_o:

; 938  : 				{
; 939  : 		
; 940  : 					draw_3d_object_hardware_faces ( object_number, current_object_3d_object_base );

  01a1a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  01a1f	50		 push	 eax
  01a20	8b 4d f8	 mov	 ecx, DWORD PTR _object_number$[ebp]
  01a23	51		 push	 ecx
  01a24	e8 00 00 00 00	 call	 ?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_hardware_faces

; 941  : 				}
; 942  : 				else

  01a29	eb 0f		 jmp	 SHORT $LN14@draw_sub_o
$LN13@draw_sub_o:

; 943  : 				{
; 944  : 	
; 945  : 					draw_3d_object_untextured_hardware_faces ( object_number, current_object_3d_object_base );

  01a2b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  01a30	50		 push	 eax
  01a31	8b 4d f8	 mov	 ecx, DWORD PTR _object_number$[ebp]
  01a34	51		 push	 ecx
  01a35	e8 00 00 00 00	 call	 ?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_untextured_hardware_faces
$LN14@draw_sub_o:

; 946  : 				}
; 947  : 			}
; 948  : 		}
; 949  : 	}
; 950  : 
; 951  : 	//
; 952  : 	// Recurse down any sub objects
; 953  : 	//
; 954  : 
; 955  : 	if ( scene->number_of_sub_objects )

  01a3a	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  01a3d	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01a41	85 c9		 test	 ecx, ecx
  01a43	0f 84 36 01 00
	00		 je	 $LN6@draw_sub_o

; 956  : 	{
; 957  : 
; 958  : 		if ( ( obj ) && ( obj->sub_objects ) )

  01a49	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  01a4d	0f 84 a0 00 00
	00		 je	 $LN17@draw_sub_o
  01a53	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01a56	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  01a5a	0f 84 93 00 00
	00		 je	 $LN17@draw_sub_o

; 959  : 		{
; 960  : 	
; 961  : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01a60	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  01a63	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01a67	83 e9 01	 sub	 ecx, 1
  01a6a	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  01a6d	eb 09		 jmp	 SHORT $LN4@draw_sub_o
$LN2@draw_sub_o:
  01a6f	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  01a72	83 e8 01	 sub	 eax, 1
  01a75	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_sub_o:
  01a78	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  01a7c	7c 70		 jl	 SHORT $LN3@draw_sub_o

; 962  : 			{
; 963  : 	
; 964  : 				if (	( obj->sub_objects[count].visible_object ) &&
; 965  : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01a7e	6b 45 fc 30	 imul	 eax, DWORD PTR _count$[ebp], 48
  01a82	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01a85	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01a88	8b 44 02 08	 mov	 eax, DWORD PTR [edx+eax+8]
  01a8c	83 e0 01	 and	 eax, 1
  01a8f	74 5b		 je	 SHORT $LN19@draw_sub_o
  01a91	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01a95	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01a98	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01a9b	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  01aa0	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01aa6	7f 44		 jg	 SHORT $LN19@draw_sub_o
  01aa8	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01aac	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01aaf	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01ab2	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  01ab7	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01abd	7c 2d		 jl	 SHORT $LN19@draw_sub_o

; 966  : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 967  : 				{
; 968  : 	
; 969  : 					draw_sub_object ( &obj->sub_objects[count], &scene->sub_objects[count], &vp, &sub_pos, infrared_override );

  01abf	8b 45 18	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  01ac2	50		 push	 eax
  01ac3	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _sub_pos$[ebp]
  01ac9	51		 push	 ecx
  01aca	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  01ad0	52		 push	 edx
  01ad1	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01ad5	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01ad8	03 41 34	 add	 eax, DWORD PTR [ecx+52]
  01adb	50		 push	 eax
  01adc	6b 55 fc 30	 imul	 edx, DWORD PTR _count$[ebp], 48
  01ae0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01ae3	03 50 04	 add	 edx, DWORD PTR [eax+4]
  01ae6	52		 push	 edx
  01ae7	e8 00 00 00 00	 call	 ?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_sub_object
$LN19@draw_sub_o:

; 970  : 				}
; 971  : 			}

  01aec	eb 81		 jmp	 SHORT $LN2@draw_sub_o
$LN3@draw_sub_o:

; 972  : 		}
; 973  : 		else

  01aee	e9 8c 00 00 00	 jmp	 $LN6@draw_sub_o
$LN17@draw_sub_o:

; 974  : 		{
; 975  : 	
; 976  : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01af3	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  01af6	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  01afa	83 e9 01	 sub	 ecx, 1
  01afd	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  01b00	eb 09		 jmp	 SHORT $LN7@draw_sub_o
$LN5@draw_sub_o:
  01b02	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  01b05	83 e8 01	 sub	 eax, 1
  01b08	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_sub_o:
  01b0b	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  01b0f	7c 6e		 jl	 SHORT $LN6@draw_sub_o

; 977  : 			{
; 978  : 	
; 979  : 				if (	( scene->sub_objects[count].default_visibility ) &&
; 980  : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01b11	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01b15	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01b18	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01b1b	8a 44 02 07	 mov	 al, BYTE PTR [edx+eax+7]
  01b1f	c0 e8 06	 shr	 al, 6
  01b22	24 01		 and	 al, 1
  01b24	0f b6 c8	 movzx	 ecx, al
  01b27	85 c9		 test	 ecx, ecx
  01b29	74 52		 je	 SHORT $LN20@draw_sub_o
  01b2b	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01b2f	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01b32	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01b35	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  01b3a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01b40	7f 3b		 jg	 SHORT $LN20@draw_sub_o
  01b42	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01b46	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01b49	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01b4c	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  01b51	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01b57	7c 24		 jl	 SHORT $LN20@draw_sub_o

; 981  : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 982  : 				{
; 983  : 	
; 984  : 					draw_sub_object ( NULL, &scene->sub_objects[count], &vp, &sub_pos, infrared_override );

  01b59	8b 45 18	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  01b5c	50		 push	 eax
  01b5d	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _sub_pos$[ebp]
  01b63	51		 push	 ecx
  01b64	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  01b6a	52		 push	 edx
  01b6b	6b 45 fc 38	 imul	 eax, DWORD PTR _count$[ebp], 56
  01b6f	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  01b72	03 41 34	 add	 eax, DWORD PTR [ecx+52]
  01b75	50		 push	 eax
  01b76	6a 00		 push	 0
  01b78	e8 00 00 00 00	 call	 ?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_sub_object
$LN20@draw_sub_o:

; 985  : 				}
; 986  : 			}

  01b7d	eb 83		 jmp	 SHORT $LN5@draw_sub_o
$LN6@draw_sub_o:

; 987  : 		}
; 988  : 	}
; 989  : 
; 990  : 	//
; 991  : 	// Restore object dissolve
; 992  : 	//
; 993  : 
; 994  : 	{
; 995  : 
; 996  : 		int
; 997  : 			itmp;
; 998  : 
; 999  : 		current_object_3d_dissolve_factor = old_current_object_3d_dissolve_factor;

  01b7f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _old_current_object_3d_dissolve_factor$[ebp]
  01b84	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 1000 : 
; 1001 : 		asm_convert_float_to_int ( current_object_3d_dissolve_factor * 255, &itmp );

  01b8c	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _itmp$1[ebp]
  01b92	50		 push	 eax
  01b93	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  01b9b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  01ba3	51		 push	 ecx
  01ba4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ba9	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1002 : 
; 1003 : 		current_object_3d_dissolve_value = itmp;

  01bae	8a 85 78 fe ff
	ff		 mov	 al, BYTE PTR _itmp$1[ebp]
  01bb4	a2 00 00 00 00	 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, al ; current_object_3d_dissolve_value

; 1004 : 	}
; 1005 : 
; 1006 : 	//
; 1007 : 	// Restore the object rotation matrix
; 1008 : 	//
; 1009 : 
; 1010 : 	memcpy ( rotation_3d, temp_matrix, sizeof ( matrix3x3 ) );

  01bb9	6a 24		 push	 36			; 00000024H
  01bbb	8d 45 a8	 lea	 eax, DWORD PTR _temp_matrix$[ebp]
  01bbe	50		 push	 eax
  01bbf	68 00 00 00 00	 push	 OFFSET ?rotation_3d@@3PAY02MA ; rotation_3d
  01bc4	e8 00 00 00 00	 call	 _memcpy
  01bc9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1011 : 
; 1012 : 	memcpy ( &object_3d_scale, &temp_scale, sizeof ( vec3d ) );

  01bcc	6a 0c		 push	 12			; 0000000cH
  01bce	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _temp_scale$[ebp]
  01bd4	50		 push	 eax
  01bd5	68 00 00 00 00	 push	 OFFSET ?object_3d_scale@@3UVEC3D@@A ; object_3d_scale
  01bda	e8 00 00 00 00	 call	 _memcpy
  01bdf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1013 : 
; 1014 : 	current_object_3d_relative_position = old_current_object_3d_relative_position;

  01be2	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _old_current_object_3d_relative_position$[ebp]
  01be8	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 1015 : }

  01bed	5f		 pop	 edi
  01bee	5e		 pop	 esi
  01bef	5b		 pop	 ebx
  01bf0	8b e5		 mov	 esp, ebp
  01bf2	5d		 pop	 ebp
  01bf3	c2 14 00	 ret	 20			; 00000014H
?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ENDP ; draw_sub_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_3d_hardware_zbuffered_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z
_TEXT	SEGMENT
_rel$1 = -120						; size = 12
_matrix$2 = -108					; size = 64
_rel_pos$3 = -44					; size = 12
_surface$ = -32						; size = 4
_object_camera_direction$ = -28				; size = 12
_object_camera_position$ = -16				; size = 12
_object_number$ = -4					; size = 4
_translucent_surfaces$ = 8				; size = 4
?draw_3d_hardware_zbuffered_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z PROC ; draw_3d_hardware_zbuffered_translucent_object, COMDAT

; 3046 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3047 : 
; 3048 : 	int
; 3049 : 		object_number;
; 3050 : 
; 3051 : 	vec3d
; 3052 : 		object_camera_position,
; 3053 : 		object_camera_direction;
; 3054 : 
; 3055 : 	translucent_object_surface
; 3056 : 		*surface;
; 3057 : 
; 3058 : 	surface = translucent_surfaces;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _translucent_surfaces$[ebp]
  0000f	89 45 e0	 mov	 DWORD PTR _surface$[ebp], eax
$LN2@draw_3d_ha:

; 3059 : 
; 3060 : 	while ( surface )

  00012	83 7d e0 00	 cmp	 DWORD PTR _surface$[ebp], 0
  00016	0f 84 ff 10 00
	00		 je	 $LN3@draw_3d_ha

; 3061 : 	{
; 3062 : 	
; 3063 : 		//
; 3064 : 		// Set up the object drawing global variables
; 3065 : 		//
; 3066 : 	
; 3067 : 		object_3d_points_current_base = 0;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_points_current_base@@3HA, 0 ; object_3d_points_current_base

; 3068 : 		object_3d_object_current_base = 0;

  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_current_base@@3HA, 0 ; object_3d_object_current_base

; 3069 : 		object_3d_light_3d_current_base = 0;

  00030	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_light_3d_current_base@@3HA, 0 ; object_3d_light_3d_current_base

; 3070 : 	
; 3071 : 		current_object_3d_light_maps_enabled = surface->lightmaps_enabled;

  0003a	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0003d	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00040	d1 e9		 shr	 ecx, 1
  00042	83 e1 01	 and	 ecx, 1
  00045	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, ecx ; current_object_3d_light_maps_enabled

; 3072 : 	
; 3073 : 		//
; 3074 : 		// Get the object's position relative to the camera
; 3075 : 		//
; 3076 : 	
; 3077 : 		current_object_3d_relative_position = &surface->object_view_position;

  0004b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0004e	83 c0 50	 add	 eax, 80			; 00000050H
  00051	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 3078 : 	
; 3079 : 		//
; 3080 : 		// Set the main objects' scaling values
; 3081 : 		//
; 3082 : 	
; 3083 : 		object_3d_scale = surface->object_3d_scale;

  00056	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00059	83 c0 44	 add	 eax, 68			; 00000044H
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A, ecx
  00064	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00067	89 15 04 00 00
	00		 mov	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4, edx
  0006d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00070	a3 08 00 00 00	 mov	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8, eax

; 3084 : 	
; 3085 : 		//
; 3086 : 		// Set the object dissolve variables
; 3087 : 		//
; 3088 : 	
; 3089 : 		current_object_3d_dissolve_value = surface->dissolve_value;

  00075	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00078	8a 48 3c	 mov	 cl, BYTE PTR [eax+60]
  0007b	88 0d 00 00 00
	00		 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, cl ; current_object_3d_dissolve_value

; 3090 : 		current_object_3d_dissolve_factor = current_object_3d_dissolve_value;

  00081	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00088	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0008c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 3091 : 		current_object_3d_dissolve_factor /= 255.0;

  00094	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  0009c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 3092 : 	
; 3093 : 		//
; 3094 : 		// Calculate the object's rotation matrix, to transform its 3d points relative to the view.
; 3095 : 		//
; 3096 : 	
; 3097 : 		rotation_3d[0][0] = ( surface->vp.xv.x * visual_3d_vp->xv.x + surface->vp.xv.y * visual_3d_vp->xv.y + surface->vp.xv.z * visual_3d_vp->xv.z );

  000b0	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000b9	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000be	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  000c3	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000cb	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  000d0	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  000d5	f3 0f 58 c1	 addss	 xmm0, xmm1
  000d9	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000e2	f3 0f 10 49 18	 movss	 xmm1, DWORD PTR [ecx+24]
  000e7	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  000ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  000f0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f5	6b c8 00	 imul	 ecx, eax, 0
  000f8	ba 04 00 00 00	 mov	 edx, 4
  000fd	6b c2 00	 imul	 eax, edx, 0
  00100	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3098 : 		rotation_3d[0][1] = ( surface->vp.xv.x * visual_3d_vp->yv.x + surface->vp.xv.y * visual_3d_vp->yv.y + surface->vp.xv.z * visual_3d_vp->yv.z );

  00109	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0010c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00112	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00117	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0011c	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00124	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  00129	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  0012e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00132	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0013b	f3 0f 10 49 18	 movss	 xmm1, DWORD PTR [ecx+24]
  00140	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00145	f3 0f 58 c1	 addss	 xmm0, xmm1
  00149	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0014e	6b c8 00	 imul	 ecx, eax, 0
  00151	ba 04 00 00 00	 mov	 edx, 4
  00156	c1 e2 00	 shl	 edx, 0
  00159	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 3099 : 		rotation_3d[0][2] = ( surface->vp.xv.x * visual_3d_vp->zv.x + surface->vp.xv.y * visual_3d_vp->zv.y + surface->vp.xv.z * visual_3d_vp->zv.z );

  00162	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00165	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0016b	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00170	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  00175	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0017d	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  00182	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00187	f3 0f 58 c1	 addss	 xmm0, xmm1
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  0018e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00194	f3 0f 10 49 18	 movss	 xmm1, DWORD PTR [ecx+24]
  00199	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0019e	f3 0f 58 c1	 addss	 xmm0, xmm1
  001a2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001a7	6b c8 00	 imul	 ecx, eax, 0
  001aa	ba 04 00 00 00	 mov	 edx, 4
  001af	d1 e2		 shl	 edx, 1
  001b1	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 3100 : 	
; 3101 : 		rotation_3d[1][0] = ( surface->vp.yv.x * visual_3d_vp->xv.x + surface->vp.yv.y * visual_3d_vp->xv.y + surface->vp.yv.z * visual_3d_vp->xv.z );

  001ba	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  001bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001c3	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  001c8	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  001cd	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001d5	f3 0f 10 4a 20	 movss	 xmm1, DWORD PTR [edx+32]
  001da	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  001df	f3 0f 58 c1	 addss	 xmm0, xmm1
  001e3	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  001e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001ec	f3 0f 10 49 24	 movss	 xmm1, DWORD PTR [ecx+36]
  001f1	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  001f6	f3 0f 58 c1	 addss	 xmm0, xmm1
  001fa	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ff	c1 e0 00	 shl	 eax, 0
  00202	b9 04 00 00 00	 mov	 ecx, 4
  00207	6b d1 00	 imul	 edx, ecx, 0
  0020a	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 3102 : 		rotation_3d[1][1] = ( surface->vp.yv.x * visual_3d_vp->yv.x + surface->vp.yv.y * visual_3d_vp->yv.y + surface->vp.yv.z * visual_3d_vp->yv.z );

  00213	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00216	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0021c	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00221	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  00226	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0022e	f3 0f 10 4a 20	 movss	 xmm1, DWORD PTR [edx+32]
  00233	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  00238	f3 0f 58 c1	 addss	 xmm0, xmm1
  0023c	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  0023f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00245	f3 0f 10 49 24	 movss	 xmm1, DWORD PTR [ecx+36]
  0024a	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  0024f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00253	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00258	c1 e0 00	 shl	 eax, 0
  0025b	b9 04 00 00 00	 mov	 ecx, 4
  00260	c1 e1 00	 shl	 ecx, 0
  00263	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3103 : 		rotation_3d[1][2] = ( surface->vp.yv.x * visual_3d_vp->zv.x + surface->vp.yv.y * visual_3d_vp->zv.y + surface->vp.yv.z * visual_3d_vp->zv.z );

  0026c	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0026f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00275	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0027a	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  0027f	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00287	f3 0f 10 4a 20	 movss	 xmm1, DWORD PTR [edx+32]
  0028c	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00291	f3 0f 58 c1	 addss	 xmm0, xmm1
  00295	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00298	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0029e	f3 0f 10 49 24	 movss	 xmm1, DWORD PTR [ecx+36]
  002a3	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  002a8	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ac	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002b1	c1 e0 00	 shl	 eax, 0
  002b4	b9 04 00 00 00	 mov	 ecx, 4
  002b9	d1 e1		 shl	 ecx, 1
  002bb	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3104 : 	
; 3105 : 		rotation_3d[2][0] = ( surface->vp.zv.x * visual_3d_vp->xv.x + surface->vp.zv.y * visual_3d_vp->xv.y + surface->vp.zv.z * visual_3d_vp->xv.z );

  002c4	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  002c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002cd	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  002d2	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  002d7	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  002da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002df	f3 0f 10 4a 2c	 movss	 xmm1, DWORD PTR [edx+44]
  002e4	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  002e9	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ed	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  002f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f6	f3 0f 10 49 30	 movss	 xmm1, DWORD PTR [ecx+48]
  002fb	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00300	f3 0f 58 c1	 addss	 xmm0, xmm1
  00304	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00309	d1 e0		 shl	 eax, 1
  0030b	b9 04 00 00 00	 mov	 ecx, 4
  00310	6b d1 00	 imul	 edx, ecx, 0
  00313	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 3106 : 		rotation_3d[2][1] = ( surface->vp.zv.x * visual_3d_vp->yv.x + surface->vp.zv.y * visual_3d_vp->yv.y + surface->vp.zv.z * visual_3d_vp->yv.z );

  0031c	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0031f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00325	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  0032a	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0032f	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00332	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00337	f3 0f 10 4a 2c	 movss	 xmm1, DWORD PTR [edx+44]
  0033c	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  00341	f3 0f 58 c1	 addss	 xmm0, xmm1
  00345	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00348	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0034e	f3 0f 10 49 30	 movss	 xmm1, DWORD PTR [ecx+48]
  00353	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00358	f3 0f 58 c1	 addss	 xmm0, xmm1
  0035c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00361	d1 e0		 shl	 eax, 1
  00363	b9 04 00 00 00	 mov	 ecx, 4
  00368	c1 e1 00	 shl	 ecx, 0
  0036b	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3107 : 		rotation_3d[2][2] = ( surface->vp.zv.x * visual_3d_vp->zv.x + surface->vp.zv.y * visual_3d_vp->zv.y + surface->vp.zv.z * visual_3d_vp->zv.z );

  00374	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00377	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0037d	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00382	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  00387	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0038f	f3 0f 10 4a 2c	 movss	 xmm1, DWORD PTR [edx+44]
  00394	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00399	f3 0f 58 c1	 addss	 xmm0, xmm1
  0039d	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003a6	f3 0f 10 49 30	 movss	 xmm1, DWORD PTR [ecx+48]
  003ab	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  003b0	f3 0f 58 c1	 addss	 xmm0, xmm1
  003b4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003b9	d1 e0		 shl	 eax, 1
  003bb	b9 04 00 00 00	 mov	 ecx, 4
  003c0	d1 e1		 shl	 ecx, 1
  003c2	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3108 : 	
; 3109 : 		rotation_3d[0][0] *= surface->object_3d_scale.x;

  003cb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003d0	6b c8 00	 imul	 ecx, eax, 0
  003d3	ba 04 00 00 00	 mov	 edx, 4
  003d8	6b c2 00	 imul	 eax, edx, 0
  003db	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  003de	f3 0f 10 84 01
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  003e7	f3 0f 59 42 44	 mulss	 xmm0, DWORD PTR [edx+68]
  003ec	b8 04 00 00 00	 mov	 eax, 4
  003f1	6b c8 00	 imul	 ecx, eax, 0
  003f4	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  003f9	6b c2 00	 imul	 eax, edx, 0
  003fc	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3110 : 		rotation_3d[1][0] *= surface->object_3d_scale.y;

  00405	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0040a	c1 e0 00	 shl	 eax, 0
  0040d	b9 04 00 00 00	 mov	 ecx, 4
  00412	6b d1 00	 imul	 edx, ecx, 0
  00415	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00418	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00421	f3 0f 59 41 48	 mulss	 xmm0, DWORD PTR [ecx+72]
  00426	ba 04 00 00 00	 mov	 edx, 4
  0042b	6b c2 00	 imul	 eax, edx, 0
  0042e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00433	c1 e1 00	 shl	 ecx, 0
  00436	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3111 : 		rotation_3d[2][0] *= surface->object_3d_scale.z;

  0043f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00444	d1 e0		 shl	 eax, 1
  00446	b9 04 00 00 00	 mov	 ecx, 4
  0044b	6b d1 00	 imul	 edx, ecx, 0
  0044e	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00451	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  0045a	f3 0f 59 41 4c	 mulss	 xmm0, DWORD PTR [ecx+76]
  0045f	ba 04 00 00 00	 mov	 edx, 4
  00464	6b c2 00	 imul	 eax, edx, 0
  00467	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0046c	d1 e1		 shl	 ecx, 1
  0046e	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3112 : 	
; 3113 : 		rotation_3d[0][1] *= surface->object_3d_scale.x;

  00477	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0047c	6b c8 00	 imul	 ecx, eax, 0
  0047f	ba 04 00 00 00	 mov	 edx, 4
  00484	c1 e2 00	 shl	 edx, 0
  00487	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0048a	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00493	f3 0f 59 40 44	 mulss	 xmm0, DWORD PTR [eax+68]
  00498	b9 04 00 00 00	 mov	 ecx, 4
  0049d	c1 e1 00	 shl	 ecx, 0
  004a0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004a5	6b c2 00	 imul	 eax, edx, 0
  004a8	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3114 : 		rotation_3d[1][1] *= surface->object_3d_scale.y;

  004b1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004b6	c1 e0 00	 shl	 eax, 0
  004b9	b9 04 00 00 00	 mov	 ecx, 4
  004be	c1 e1 00	 shl	 ecx, 0
  004c1	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  004c4	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  004cd	f3 0f 59 42 48	 mulss	 xmm0, DWORD PTR [edx+72]
  004d2	b8 04 00 00 00	 mov	 eax, 4
  004d7	c1 e0 00	 shl	 eax, 0
  004da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004df	c1 e1 00	 shl	 ecx, 0
  004e2	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3115 : 		rotation_3d[2][1] *= surface->object_3d_scale.z;

  004eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004f0	d1 e0		 shl	 eax, 1
  004f2	b9 04 00 00 00	 mov	 ecx, 4
  004f7	c1 e1 00	 shl	 ecx, 0
  004fa	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  004fd	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00506	f3 0f 59 42 4c	 mulss	 xmm0, DWORD PTR [edx+76]
  0050b	b8 04 00 00 00	 mov	 eax, 4
  00510	c1 e0 00	 shl	 eax, 0
  00513	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00518	d1 e1		 shl	 ecx, 1
  0051a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3116 : 	
; 3117 : 		rotation_3d[0][2] *= surface->object_3d_scale.x;

  00523	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00528	6b c8 00	 imul	 ecx, eax, 0
  0052b	ba 04 00 00 00	 mov	 edx, 4
  00530	d1 e2		 shl	 edx, 1
  00532	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00535	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  0053e	f3 0f 59 40 44	 mulss	 xmm0, DWORD PTR [eax+68]
  00543	b9 04 00 00 00	 mov	 ecx, 4
  00548	d1 e1		 shl	 ecx, 1
  0054a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0054f	6b c2 00	 imul	 eax, edx, 0
  00552	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 3118 : 		rotation_3d[1][2] *= surface->object_3d_scale.y;

  0055b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00560	c1 e0 00	 shl	 eax, 0
  00563	b9 04 00 00 00	 mov	 ecx, 4
  00568	d1 e1		 shl	 ecx, 1
  0056a	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0056d	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00576	f3 0f 59 42 48	 mulss	 xmm0, DWORD PTR [edx+72]
  0057b	b8 04 00 00 00	 mov	 eax, 4
  00580	d1 e0		 shl	 eax, 1
  00582	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00587	c1 e1 00	 shl	 ecx, 0
  0058a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3119 : 		rotation_3d[2][2] *= surface->object_3d_scale.z;

  00593	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00598	d1 e0		 shl	 eax, 1
  0059a	b9 04 00 00 00	 mov	 ecx, 4
  0059f	d1 e1		 shl	 ecx, 1
  005a1	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  005a4	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  005ad	f3 0f 59 42 4c	 mulss	 xmm0, DWORD PTR [edx+76]
  005b2	b8 04 00 00 00	 mov	 eax, 4
  005b7	d1 e0		 shl	 eax, 1
  005b9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005be	d1 e1		 shl	 ecx, 1
  005c0	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 3120 : 	
; 3121 : 		//
; 3122 : 		// Get the object number
; 3123 : 		//
; 3124 : 	
; 3125 : 		object_number = surface->object_index;

  005c9	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  005cc	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  005cf	89 4d fc	 mov	 DWORD PTR _object_number$[ebp], ecx

; 3126 : 	
; 3127 : 		//
; 3128 : 		// Rotate the light source vector to be relative to the object.
; 3129 : 		//
; 3130 : 	
; 3131 : 		{
; 3132 : 	
; 3133 : 			vec3d
; 3134 : 				rel_pos;
; 3135 : 	
; 3136 : 			//
; 3137 : 			// Calculate the relative camera position in the object viewspace
; 3138 : 			//
; 3139 : 	
; 3140 : 			rel_pos.x = visual_3d_vp->x - surface->vp.x;

  005d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005d7	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  005da	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005de	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  005e3	f3 0f 11 45 d4	 movss	 DWORD PTR _rel_pos$3[ebp], xmm0

; 3141 : 			rel_pos.y = visual_3d_vp->y - surface->vp.y;

  005e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005ed	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  005f0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005f5	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  005fa	f3 0f 11 45 d8	 movss	 DWORD PTR _rel_pos$3[ebp+4], xmm0

; 3142 : 			rel_pos.z = visual_3d_vp->z - surface->vp.z;

  005ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00604	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00607	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0060c	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00611	f3 0f 11 45 dc	 movss	 DWORD PTR _rel_pos$3[ebp+8], xmm0

; 3143 : 	
; 3144 : 			object_camera_position.x = ( rel_pos.x * surface->vp.attitude[0][0] + rel_pos.y * surface->vp.attitude[0][1] + rel_pos.z * surface->vp.attitude[0][2] );

  00616	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0061b	6b c8 00	 imul	 ecx, eax, 0
  0061e	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00621	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00625	b9 04 00 00 00	 mov	 ecx, 4
  0062a	6b d1 00	 imul	 edx, ecx, 0
  0062d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _rel_pos$3[ebp]
  00632	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00637	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0063c	6b c8 00	 imul	 ecx, eax, 0
  0063f	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00642	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00646	b9 04 00 00 00	 mov	 ecx, 4
  0064b	c1 e1 00	 shl	 ecx, 0
  0064e	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _rel_pos$3[ebp+4]
  00653	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  00658	f3 0f 58 c1	 addss	 xmm0, xmm1
  0065c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00661	6b c2 00	 imul	 eax, edx, 0
  00664	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00667	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  0066b	b8 04 00 00 00	 mov	 eax, 4
  00670	d1 e0		 shl	 eax, 1
  00672	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _rel_pos$3[ebp+8]
  00677	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0067c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00680	f3 0f 11 45 f0	 movss	 DWORD PTR _object_camera_position$[ebp], xmm0

; 3145 : 			object_camera_position.y = ( rel_pos.x * surface->vp.attitude[1][0] + rel_pos.y * surface->vp.attitude[1][1] + rel_pos.z * surface->vp.attitude[1][2] );

  00685	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0068a	c1 e0 00	 shl	 eax, 0
  0068d	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00690	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00694	b8 04 00 00 00	 mov	 eax, 4
  00699	6b c8 00	 imul	 ecx, eax, 0
  0069c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _rel_pos$3[ebp]
  006a1	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  006a6	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  006ab	c1 e2 00	 shl	 edx, 0
  006ae	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  006b1	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  006b5	ba 04 00 00 00	 mov	 edx, 4
  006ba	c1 e2 00	 shl	 edx, 0
  006bd	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _rel_pos$3[ebp+4]
  006c2	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  006c7	f3 0f 58 c1	 addss	 xmm0, xmm1
  006cb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006d0	c1 e0 00	 shl	 eax, 0
  006d3	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  006d6	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  006da	b8 04 00 00 00	 mov	 eax, 4
  006df	d1 e0		 shl	 eax, 1
  006e1	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _rel_pos$3[ebp+8]
  006e6	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  006eb	f3 0f 58 c1	 addss	 xmm0, xmm1
  006ef	f3 0f 11 45 f4	 movss	 DWORD PTR _object_camera_position$[ebp+4], xmm0

; 3146 : 			object_camera_position.z = ( rel_pos.x * surface->vp.attitude[2][0] + rel_pos.y * surface->vp.attitude[2][1] + rel_pos.z * surface->vp.attitude[2][2] );

  006f4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006f9	d1 e0		 shl	 eax, 1
  006fb	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  006fe	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00702	b8 04 00 00 00	 mov	 eax, 4
  00707	6b c8 00	 imul	 ecx, eax, 0
  0070a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _rel_pos$3[ebp]
  0070f	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00714	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00719	d1 e2		 shl	 edx, 1
  0071b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0071e	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00722	ba 04 00 00 00	 mov	 edx, 4
  00727	c1 e2 00	 shl	 edx, 0
  0072a	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _rel_pos$3[ebp+4]
  0072f	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00734	f3 0f 58 c1	 addss	 xmm0, xmm1
  00738	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0073d	d1 e0		 shl	 eax, 1
  0073f	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00742	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00746	b8 04 00 00 00	 mov	 eax, 4
  0074b	d1 e0		 shl	 eax, 1
  0074d	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _rel_pos$3[ebp+8]
  00752	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00757	f3 0f 58 c1	 addss	 xmm0, xmm1
  0075b	f3 0f 11 45 f8	 movss	 DWORD PTR _object_camera_position$[ebp+8], xmm0

; 3147 : 	
; 3148 : 			object_camera_direction.x = ( visual_3d_vp->zv.x * surface->vp.attitude[0][0] + visual_3d_vp->zv.y * surface->vp.attitude[1][0] + visual_3d_vp->zv.z * surface->vp.attitude[2][0] );

  00760	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00765	6b c8 00	 imul	 ecx, eax, 0
  00768	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0076b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  0076f	b9 04 00 00 00	 mov	 ecx, 4
  00774	6b d1 00	 imul	 edx, ecx, 0
  00777	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0077d	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  00782	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00787	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0078c	c1 e2 00	 shl	 edx, 0
  0078f	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00792	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00796	ba 04 00 00 00	 mov	 edx, 4
  0079b	6b c2 00	 imul	 eax, edx, 0
  0079e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  007a4	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  007a9	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  007ae	f3 0f 58 c1	 addss	 xmm0, xmm1
  007b2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007b7	d1 e0		 shl	 eax, 1
  007b9	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  007bc	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  007c0	b8 04 00 00 00	 mov	 eax, 4
  007c5	6b c8 00	 imul	 ecx, eax, 0
  007c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  007cd	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  007d2	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  007d7	f3 0f 58 c1	 addss	 xmm0, xmm1
  007db	f3 0f 11 45 e4	 movss	 DWORD PTR _object_camera_direction$[ebp], xmm0

; 3149 : 			object_camera_direction.y = ( visual_3d_vp->zv.x * surface->vp.attitude[0][1] + visual_3d_vp->zv.y * surface->vp.attitude[1][1] + visual_3d_vp->zv.z * surface->vp.attitude[2][1] );

  007e0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007e5	6b c8 00	 imul	 ecx, eax, 0
  007e8	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  007eb	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  007ef	b9 04 00 00 00	 mov	 ecx, 4
  007f4	c1 e1 00	 shl	 ecx, 0
  007f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  007fd	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00802	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00807	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0080c	c1 e0 00	 shl	 eax, 0
  0080f	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00812	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00816	b8 04 00 00 00	 mov	 eax, 4
  0081b	c1 e0 00	 shl	 eax, 0
  0081e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00824	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00829	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0082e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00832	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00837	d1 e2		 shl	 edx, 1
  00839	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0083c	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00840	ba 04 00 00 00	 mov	 edx, 4
  00845	c1 e2 00	 shl	 edx, 0
  00848	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0084d	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00852	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00857	f3 0f 58 c1	 addss	 xmm0, xmm1
  0085b	f3 0f 11 45 e8	 movss	 DWORD PTR _object_camera_direction$[ebp+4], xmm0

; 3150 : 			object_camera_direction.z = ( visual_3d_vp->zv.x * surface->vp.attitude[0][2] + visual_3d_vp->zv.y * surface->vp.attitude[1][2] + visual_3d_vp->zv.z * surface->vp.attitude[2][2] );

  00860	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00865	6b c8 00	 imul	 ecx, eax, 0
  00868	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0086b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  0086f	b9 04 00 00 00	 mov	 ecx, 4
  00874	d1 e1		 shl	 ecx, 1
  00876	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0087c	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00881	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00886	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0088b	c1 e0 00	 shl	 eax, 0
  0088e	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00891	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00895	b8 04 00 00 00	 mov	 eax, 4
  0089a	d1 e0		 shl	 eax, 1
  0089c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  008a2	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  008a7	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  008ac	f3 0f 58 c1	 addss	 xmm0, xmm1
  008b0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  008b5	d1 e2		 shl	 edx, 1
  008b7	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  008ba	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  008be	ba 04 00 00 00	 mov	 edx, 4
  008c3	d1 e2		 shl	 edx, 1
  008c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  008ca	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  008cf	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  008d4	f3 0f 58 c1	 addss	 xmm0, xmm1
  008d8	f3 0f 11 45 ec	 movss	 DWORD PTR _object_camera_direction$[ebp+8], xmm0

; 3151 : 		}
; 3152 : 	
; 3153 : 	
; 3154 : 		//
; 3155 : 		//	Set up this objects' object info structure
; 3156 : 		//
; 3157 : 	
; 3158 : 		object_3d_object_base[object_3d_object_current_base].lights = NULL;

  008dd	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  008e4	c7 80 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+4], 0

; 3159 : 		object_3d_object_base[object_3d_object_current_base].camera_position = object_camera_position;

  008ee	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  008f5	05 08 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+8
  008fa	8b 4d f0	 mov	 ecx, DWORD PTR _object_camera_position$[ebp]
  008fd	89 08		 mov	 DWORD PTR [eax], ecx
  008ff	8b 55 f4	 mov	 edx, DWORD PTR _object_camera_position$[ebp+4]
  00902	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00905	8b 4d f8	 mov	 ecx, DWORD PTR _object_camera_position$[ebp+8]
  00908	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 3160 : 		object_3d_object_base[object_3d_object_current_base].camera_direction = object_camera_direction;

  0090b	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00912	05 14 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+20
  00917	8b 4d e4	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp]
  0091a	89 08		 mov	 DWORD PTR [eax], ecx
  0091c	8b 55 e8	 mov	 edx, DWORD PTR _object_camera_direction$[ebp+4]
  0091f	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00922	8b 4d ec	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp+8]
  00925	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 3161 : 		object_3d_object_base[object_3d_object_current_base].points_base = object_3d_points_current_base;

  00928	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0092f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_points_current_base@@3HA ; object_3d_points_current_base
  00935	89 88 24 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+36], ecx

; 3162 : 		object_3d_object_base[object_3d_object_current_base].object_number = object_number;

  0093b	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00942	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  00945	89 88 20 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+32], ecx

; 3163 : 		object_3d_object_base[object_3d_object_current_base].object_vp = &surface->vp;

  0094b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0094e	83 c0 04	 add	 eax, 4
  00951	6b 0d 00 00 00
	00 2c		 imul	 ecx, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00958	89 81 28 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[ecx+40], eax

; 3164 : 	
; 3165 : 		current_object_3d_object_base = &object_3d_object_base[object_3d_object_current_base];

  0095e	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00965	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; object_3d_object_base
  0096a	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A, eax ; current_object_3d_object_base

; 3166 : 	
; 3167 : 		//
; 3168 : 		// Now start transforming etc
; 3169 : 		//
; 3170 : 	
; 3171 : 		current_object_3d_surface = surface->surface;

  0096f	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00972	8b 08		 mov	 ecx, DWORD PTR [eax]
  00974	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, ecx ; current_object_3d_surface

; 3172 : 		current_object_3d_faces = surface->faces;

  0097a	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0097d	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00980	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A, ecx ; current_object_3d_faces

; 3173 : 		current_object_3d_surface_point_list = surface->surface_point_list;

  00986	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00989	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  0098c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, ecx ; current_object_3d_surface_point_list

; 3174 : 		current_object_3d_surface_point_normal_list = surface->surface_point_normal_list;

  00992	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00995	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  00998	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, ecx ; current_object_3d_surface_point_normal_list

; 3175 : 		current_object_3d_surface_point_texture_list = surface->surface_point_texture_list;

  0099e	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009a1	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  009a4	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, ecx ; current_object_3d_surface_point_texture_list

; 3176 : 		current_object_3d_point_list = surface->faces_point_list;

  009aa	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009ad	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  009b0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, ecx ; current_object_3d_point_list

; 3177 : 		current_object_3d_face_normal_list = surface->faces_normal_list;

  009b6	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009b9	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  009bc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, ecx ; current_object_3d_face_normal_list

; 3178 : 		current_object_3d_light_maps_enabled = surface->lightmaps_enabled;

  009c2	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009c5	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  009c8	d1 e9		 shr	 ecx, 1
  009ca	83 e1 01	 and	 ecx, 1
  009cd	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, ecx ; current_object_3d_light_maps_enabled

; 3179 : 	
; 3180 : 		//
; 3181 : 		// Set the world transformation matrix
; 3182 : 		//
; 3183 : 
; 3184 : 		{
; 3185 : 
; 3186 : 			matrix4x4
; 3187 : 				matrix;
; 3188 : 
; 3189 : 			matrix[0][0] = surface->vp.attitude[0][0] * object_3d_scale.x;

  009d3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009d8	6b c8 00	 imul	 ecx, eax, 0
  009db	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  009de	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  009e2	b9 04 00 00 00	 mov	 ecx, 4
  009e7	6b d1 00	 imul	 edx, ecx, 0
  009ea	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  009ef	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  009f7	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  009fc	6b c8 00	 imul	 ecx, eax, 0
  009ff	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00a03	b8 04 00 00 00	 mov	 eax, 4
  00a08	6b c8 00	 imul	 ecx, eax, 0
  00a0b	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3190 : 			matrix[0][1] = surface->vp.attitude[0][1] * object_3d_scale.x;

  00a10	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a15	6b c8 00	 imul	 ecx, eax, 0
  00a18	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00a1b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00a1f	b9 04 00 00 00	 mov	 ecx, 4
  00a24	c1 e1 00	 shl	 ecx, 0
  00a27	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00a2c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00a34	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00a39	6b c2 00	 imul	 eax, edx, 0
  00a3c	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  00a40	ba 04 00 00 00	 mov	 edx, 4
  00a45	c1 e2 00	 shl	 edx, 0
  00a48	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 3191 : 			matrix[0][2] = surface->vp.attitude[0][2] * object_3d_scale.x;

  00a4d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a52	6b c8 00	 imul	 ecx, eax, 0
  00a55	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00a58	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00a5c	b9 04 00 00 00	 mov	 ecx, 4
  00a61	d1 e1		 shl	 ecx, 1
  00a63	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00a68	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00a70	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00a75	6b c2 00	 imul	 eax, edx, 0
  00a78	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  00a7c	ba 04 00 00 00	 mov	 edx, 4
  00a81	d1 e2		 shl	 edx, 1
  00a83	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 3192 : 			matrix[0][3] = 0;

  00a88	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a8d	6b c8 00	 imul	 ecx, eax, 0
  00a90	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00a94	b8 04 00 00 00	 mov	 eax, 4
  00a99	6b c8 03	 imul	 ecx, eax, 3
  00a9c	0f 57 c0	 xorps	 xmm0, xmm0
  00a9f	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3193 : 	
; 3194 : 			matrix[1][0] = surface->vp.attitude[1][0] * object_3d_scale.y;

  00aa4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00aa9	c1 e0 00	 shl	 eax, 0
  00aac	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00aaf	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00ab3	b8 04 00 00 00	 mov	 eax, 4
  00ab8	6b c8 00	 imul	 ecx, eax, 0
  00abb	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00ac0	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00ac8	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00acd	c1 e2 00	 shl	 edx, 0
  00ad0	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$2[ebp+edx]
  00ad4	b9 04 00 00 00	 mov	 ecx, 4
  00ad9	6b d1 00	 imul	 edx, ecx, 0
  00adc	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 3195 : 			matrix[1][1] = surface->vp.attitude[1][1] * object_3d_scale.y;

  00ae1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ae6	c1 e0 00	 shl	 eax, 0
  00ae9	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00aec	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00af0	b8 04 00 00 00	 mov	 eax, 4
  00af5	c1 e0 00	 shl	 eax, 0
  00af8	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00afd	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00b05	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00b0a	c1 e1 00	 shl	 ecx, 0
  00b0d	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00b11	b8 04 00 00 00	 mov	 eax, 4
  00b16	c1 e0 00	 shl	 eax, 0
  00b19	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3196 : 			matrix[1][2] = surface->vp.attitude[1][2] * object_3d_scale.y;

  00b1e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b23	c1 e0 00	 shl	 eax, 0
  00b26	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00b29	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00b2d	b8 04 00 00 00	 mov	 eax, 4
  00b32	d1 e0		 shl	 eax, 1
  00b34	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00b39	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00b41	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00b46	c1 e1 00	 shl	 ecx, 0
  00b49	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00b4d	b8 04 00 00 00	 mov	 eax, 4
  00b52	d1 e0		 shl	 eax, 1
  00b54	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3197 : 			matrix[1][3] = 0;

  00b59	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b5e	c1 e0 00	 shl	 eax, 0
  00b61	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  00b65	ba 04 00 00 00	 mov	 edx, 4
  00b6a	6b c2 03	 imul	 eax, edx, 3
  00b6d	0f 57 c0	 xorps	 xmm0, xmm0
  00b70	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3198 : 	
; 3199 : 			matrix[2][0] = surface->vp.attitude[2][0] * object_3d_scale.z;

  00b75	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b7a	d1 e0		 shl	 eax, 1
  00b7c	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00b7f	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00b83	b8 04 00 00 00	 mov	 eax, 4
  00b88	6b c8 00	 imul	 ecx, eax, 0
  00b8b	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00b90	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00b98	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00b9d	d1 e2		 shl	 edx, 1
  00b9f	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$2[ebp+edx]
  00ba3	b9 04 00 00 00	 mov	 ecx, 4
  00ba8	6b d1 00	 imul	 edx, ecx, 0
  00bab	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 3200 : 			matrix[2][1] = surface->vp.attitude[2][1] * object_3d_scale.z;

  00bb0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00bb5	d1 e0		 shl	 eax, 1
  00bb7	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00bba	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00bbe	b8 04 00 00 00	 mov	 eax, 4
  00bc3	c1 e0 00	 shl	 eax, 0
  00bc6	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00bcb	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00bd3	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00bd8	d1 e1		 shl	 ecx, 1
  00bda	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00bde	b8 04 00 00 00	 mov	 eax, 4
  00be3	c1 e0 00	 shl	 eax, 0
  00be6	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3201 : 			matrix[2][2] = surface->vp.attitude[2][2] * object_3d_scale.z;

  00beb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00bf0	d1 e0		 shl	 eax, 1
  00bf2	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00bf5	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00bf9	b8 04 00 00 00	 mov	 eax, 4
  00bfe	d1 e0		 shl	 eax, 1
  00c00	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00c05	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00c0d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00c12	d1 e1		 shl	 ecx, 1
  00c14	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00c18	b8 04 00 00 00	 mov	 eax, 4
  00c1d	d1 e0		 shl	 eax, 1
  00c1f	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3202 : 			matrix[2][3] = 0;

  00c24	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c29	d1 e0		 shl	 eax, 1
  00c2b	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  00c2f	ba 04 00 00 00	 mov	 edx, 4
  00c34	6b c2 03	 imul	 eax, edx, 3
  00c37	0f 57 c0	 xorps	 xmm0, xmm0
  00c3a	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3203 : 	
; 3204 : 			{
; 3205 : 
; 3206 : 				vec3d
; 3207 : 					rel;
; 3208 : 
; 3209 : 				rel.x = visual_3d_vp->attitude[0][0] * current_object_3d_relative_position->x +

  00c3f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c44	6b c8 00	 imul	 ecx, eax, 0
  00c47	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c4d	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00c51	b9 04 00 00 00	 mov	 ecx, 4
  00c56	6b d1 00	 imul	 edx, ecx, 0
  00c59	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c5f	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00c64	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00c68	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00c6d	c1 e2 00	 shl	 edx, 0
  00c70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c75	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00c79	ba 04 00 00 00	 mov	 edx, 4
  00c7e	6b c2 00	 imul	 eax, edx, 0
  00c81	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c87	f3 0f 10 0c 01	 movss	 xmm1, DWORD PTR [ecx+eax]
  00c8c	f3 0f 59 4a 04	 mulss	 xmm1, DWORD PTR [edx+4]
  00c91	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c95	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c9a	d1 e0		 shl	 eax, 1
  00c9c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ca2	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00ca6	b8 04 00 00 00	 mov	 eax, 4
  00cab	6b c8 00	 imul	 ecx, eax, 0
  00cae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00cb3	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00cb8	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00cbd	f3 0f 58 c1	 addss	 xmm0, xmm1
  00cc1	f3 0f 11 45 88	 movss	 DWORD PTR _rel$1[ebp], xmm0

; 3210 : 							visual_3d_vp->attitude[1][0] * current_object_3d_relative_position->y +
; 3211 : 							visual_3d_vp->attitude[2][0] * current_object_3d_relative_position->z;
; 3212 : 	
; 3213 : 				rel.y = visual_3d_vp->attitude[0][1] * current_object_3d_relative_position->x +

  00cc6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ccb	6b c8 00	 imul	 ecx, eax, 0
  00cce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cd4	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00cd8	b9 04 00 00 00	 mov	 ecx, 4
  00cdd	c1 e1 00	 shl	 ecx, 0
  00ce0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00ce6	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00ceb	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  00cef	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00cf4	c1 e0 00	 shl	 eax, 0
  00cf7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cfd	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00d01	b8 04 00 00 00	 mov	 eax, 4
  00d06	c1 e0 00	 shl	 eax, 0
  00d09	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00d0f	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00d14	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  00d19	f3 0f 58 c1	 addss	 xmm0, xmm1
  00d1d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00d22	d1 e2		 shl	 edx, 1
  00d24	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d29	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00d2d	ba 04 00 00 00	 mov	 edx, 4
  00d32	c1 e2 00	 shl	 edx, 0
  00d35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00d3a	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00d3f	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00d44	f3 0f 58 c1	 addss	 xmm0, xmm1
  00d48	f3 0f 11 45 8c	 movss	 DWORD PTR _rel$1[ebp+4], xmm0

; 3214 : 							visual_3d_vp->attitude[1][1] * current_object_3d_relative_position->y +
; 3215 : 							visual_3d_vp->attitude[2][1] * current_object_3d_relative_position->z;
; 3216 : 	
; 3217 : 				rel.z = visual_3d_vp->attitude[0][2] * current_object_3d_relative_position->x +

  00d4d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d52	6b c8 00	 imul	 ecx, eax, 0
  00d55	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d5b	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00d5f	b9 04 00 00 00	 mov	 ecx, 4
  00d64	d1 e1		 shl	 ecx, 1
  00d66	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00d6c	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00d71	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  00d75	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d7a	c1 e0 00	 shl	 eax, 0
  00d7d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d83	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00d87	b8 04 00 00 00	 mov	 eax, 4
  00d8c	d1 e0		 shl	 eax, 1
  00d8e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00d94	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00d99	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  00d9e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00da2	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00da7	d1 e2		 shl	 edx, 1
  00da9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00dae	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00db2	ba 04 00 00 00	 mov	 edx, 4
  00db7	d1 e2		 shl	 edx, 1
  00db9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00dbe	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00dc3	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00dc8	f3 0f 58 c1	 addss	 xmm0, xmm1
  00dcc	f3 0f 11 45 90	 movss	 DWORD PTR _rel$1[ebp+8], xmm0

; 3218 : 							visual_3d_vp->attitude[1][2] * current_object_3d_relative_position->y +
; 3219 : 							visual_3d_vp->attitude[2][2] * current_object_3d_relative_position->z;
; 3220 : 
; 3221 : 				matrix[3][0] = rel.x;

  00dd1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00dd6	6b c8 03	 imul	 ecx, eax, 3
  00dd9	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00ddd	b8 04 00 00 00	 mov	 eax, 4
  00de2	6b c8 00	 imul	 ecx, eax, 0
  00de5	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _rel$1[ebp]
  00dea	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3222 : 				matrix[3][1] = rel.y;

  00def	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00df4	6b c8 03	 imul	 ecx, eax, 3
  00df7	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00dfb	b8 04 00 00 00	 mov	 eax, 4
  00e00	c1 e0 00	 shl	 eax, 0
  00e03	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _rel$1[ebp+4]
  00e08	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3223 : 				matrix[3][2] = rel.z;

  00e0d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00e12	6b c8 03	 imul	 ecx, eax, 3
  00e15	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00e19	b8 04 00 00 00	 mov	 eax, 4
  00e1e	d1 e0		 shl	 eax, 1
  00e20	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _rel$1[ebp+8]
  00e25	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3224 : 				matrix[3][3] = 1;

  00e2a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00e2f	6b c8 03	 imul	 ecx, eax, 3
  00e32	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00e36	b8 04 00 00 00	 mov	 eax, 4
  00e3b	6b c8 03	 imul	 ecx, eax, 3
  00e3e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00e46	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3225 : 			}
; 3226 : 
; 3227 : 			memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  00e4b	6a 40		 push	 64			; 00000040H
  00e4d	8d 45 94	 lea	 eax, DWORD PTR _matrix$2[ebp]
  00e50	50		 push	 eax
  00e51	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  00e56	e8 00 00 00 00	 call	 _memcpy
  00e5b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3228 : 	
; 3229 : 			f3d_set_transform ( D3DTRANSFORMSTATE_WORLD, &d3d_matrix );

  00e5e	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  00e63	6a 01		 push	 1
  00e65	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 3230 : 
; 3231 : 			matrix[0][0] = visual_3d_vp->xv.x * 0.5;

  00e6a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00e6f	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00e74	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00e7c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00e80	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e85	6b d1 00	 imul	 edx, ecx, 0
  00e88	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$2[ebp+edx]
  00e8c	b9 04 00 00 00	 mov	 ecx, 4
  00e91	6b d1 00	 imul	 edx, ecx, 0
  00e94	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 3232 : 			matrix[1][0] = visual_3d_vp->yv.x * 0.5;

  00e99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00e9e	f3 0f 5a 40 18	 cvtss2sd xmm0, DWORD PTR [eax+24]
  00ea3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00eab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00eaf	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00eb4	c1 e1 00	 shl	 ecx, 0
  00eb7	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00ebb	b8 04 00 00 00	 mov	 eax, 4
  00ec0	6b c8 00	 imul	 ecx, eax, 0
  00ec3	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3233 : 			matrix[2][0] = visual_3d_vp->zv.x * 0.5;

  00ec8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ecd	f3 0f 5a 40 24	 cvtss2sd xmm0, DWORD PTR [eax+36]
  00ed2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00eda	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ede	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ee3	d1 e1		 shl	 ecx, 1
  00ee5	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00ee9	b8 04 00 00 00	 mov	 eax, 4
  00eee	6b c8 00	 imul	 ecx, eax, 0
  00ef1	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3234 : 			matrix[3][0] = 0.5;

  00ef6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00efb	6b c8 03	 imul	 ecx, eax, 3
  00efe	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00f02	b8 04 00 00 00	 mov	 eax, 4
  00f07	6b c8 00	 imul	 ecx, eax, 0
  00f0a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00f12	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3235 : 
; 3236 : 			matrix[0][1] = -visual_3d_vp->xv.y * 0.5;

  00f17	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f1c	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00f21	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00f28	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00f2c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00f34	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00f38	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00f3d	6b d1 00	 imul	 edx, ecx, 0
  00f40	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$2[ebp+edx]
  00f44	b9 04 00 00 00	 mov	 ecx, 4
  00f49	c1 e1 00	 shl	 ecx, 0
  00f4c	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3237 : 			matrix[1][1] = -visual_3d_vp->yv.y * 0.5;

  00f51	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f56	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00f5b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00f62	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00f66	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00f6e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00f72	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00f77	c1 e1 00	 shl	 ecx, 0
  00f7a	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00f7e	b8 04 00 00 00	 mov	 eax, 4
  00f83	c1 e0 00	 shl	 eax, 0
  00f86	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3238 : 			matrix[2][1] = -visual_3d_vp->zv.y * 0.5;

  00f8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f90	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00f95	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00f9c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00fa0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00fa8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00fac	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00fb1	d1 e1		 shl	 ecx, 1
  00fb3	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00fb7	b8 04 00 00 00	 mov	 eax, 4
  00fbc	c1 e0 00	 shl	 eax, 0
  00fbf	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3239 : 			matrix[3][1] = 0.5;

  00fc4	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00fc9	6b c8 03	 imul	 ecx, eax, 3
  00fcc	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00fd0	b8 04 00 00 00	 mov	 eax, 4
  00fd5	c1 e0 00	 shl	 eax, 0
  00fd8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00fe0	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3240 : 
; 3241 : 			matrix[0][2] = visual_3d_vp->xv.z;

  00fe5	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00fea	6b c8 00	 imul	 ecx, eax, 0
  00fed	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  00ff1	b8 04 00 00 00	 mov	 eax, 4
  00ff6	d1 e0		 shl	 eax, 1
  00ff8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ffe	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  01001	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx

; 3242 : 			matrix[1][2] = visual_3d_vp->yv.z;

  01004	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01009	c1 e0 00	 shl	 eax, 0
  0100c	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  01010	ba 04 00 00 00	 mov	 edx, 4
  01015	d1 e2		 shl	 edx, 1
  01017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0101c	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0101f	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 3243 : 			matrix[2][2] = visual_3d_vp->zv.z;

  01022	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01027	d1 e0		 shl	 eax, 1
  01029	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  0102d	ba 04 00 00 00	 mov	 edx, 4
  01032	d1 e2		 shl	 edx, 1
  01034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01039	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0103c	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 3244 : 			matrix[3][2] = 1;

  0103f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01044	6b c8 03	 imul	 ecx, eax, 3
  01047	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  0104b	b8 04 00 00 00	 mov	 eax, 4
  01050	d1 e0		 shl	 eax, 1
  01052	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0105a	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3245 : 
; 3246 : 			matrix[0][3] = 1.0;

  0105f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01064	6b c8 00	 imul	 ecx, eax, 0
  01067	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  0106b	b8 04 00 00 00	 mov	 eax, 4
  01070	6b c8 03	 imul	 ecx, eax, 3
  01073	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0107b	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3247 : 			matrix[1][3] = 1.0;

  01080	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01085	c1 e0 00	 shl	 eax, 0
  01088	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  0108c	ba 04 00 00 00	 mov	 edx, 4
  01091	6b c2 03	 imul	 eax, edx, 3
  01094	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0109c	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3248 : 			matrix[2][3] = 1.0;

  010a1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  010a6	d1 e0		 shl	 eax, 1
  010a8	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$2[ebp+eax]
  010ac	ba 04 00 00 00	 mov	 edx, 4
  010b1	6b c2 03	 imul	 eax, edx, 3
  010b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  010bc	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3249 : 			matrix[3][3] = 1.0;

  010c1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  010c6	6b c8 03	 imul	 ecx, eax, 3
  010c9	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$2[ebp+ecx]
  010cd	b8 04 00 00 00	 mov	 eax, 4
  010d2	6b c8 03	 imul	 ecx, eax, 3
  010d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  010dd	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3250 : 
; 3251 : 			memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  010e2	6a 40		 push	 64			; 00000040H
  010e4	8d 45 94	 lea	 eax, DWORD PTR _matrix$2[ebp]
  010e7	50		 push	 eax
  010e8	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  010ed	e8 00 00 00 00	 call	 _memcpy
  010f2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3252 : 	
; 3253 : 			f3d_set_transform ( D3DTRANSFORMSTATE_TEXTURE0, &d3d_matrix );

  010f5	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  010fa	6a 10		 push	 16			; 00000010H
  010fc	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 3254 : 		}
; 3255 : 
; 3256 : 		draw_3d_object_hardware_translucent_faces ( surface );

  01101	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  01104	50		 push	 eax
  01105	e8 00 00 00 00	 call	 ?draw_3d_object_hardware_translucent_faces@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_object_hardware_translucent_faces

; 3257 : 
; 3258 : 		surface = surface->succ;

  0110a	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0110d	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  01113	89 4d e0	 mov	 DWORD PTR _surface$[ebp], ecx

; 3259 : 	}

  01116	e9 f7 ee ff ff	 jmp	 $LN2@draw_3d_ha
$LN3@draw_3d_ha:

; 3260 : }

  0111b	5f		 pop	 edi
  0111c	5e		 pop	 esi
  0111d	5b		 pop	 ebx
  0111e	8b e5		 mov	 esp, ebp
  01120	5d		 pop	 ebp
  01121	c2 04 00	 ret	 4
?draw_3d_hardware_zbuffered_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ENDP ; draw_3d_hardware_zbuffered_translucent_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_3d_hardware_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z
_TEXT	SEGMENT
_matrix$1 = -108					; size = 64
_rel_pos$2 = -44					; size = 12
_surface$ = -32						; size = 4
_object_camera_direction$ = -28				; size = 12
_object_camera_position$ = -16				; size = 12
_object_number$ = -4					; size = 4
_translucent_surfaces$ = 8				; size = 4
?draw_3d_hardware_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z PROC ; draw_3d_hardware_translucent_object, COMDAT

; 2857 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2858 : 
; 2859 : 	int
; 2860 : 		object_number;
; 2861 : 
; 2862 : 	vec3d
; 2863 : 		object_camera_position,
; 2864 : 		object_camera_direction;
; 2865 : 
; 2866 : 	translucent_object_surface
; 2867 : 		*surface;
; 2868 : 
; 2869 : 	surface = translucent_surfaces;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _translucent_surfaces$[ebp]
  0000f	89 45 e0	 mov	 DWORD PTR _surface$[ebp], eax
$LN2@draw_3d_ha:

; 2870 : 
; 2871 : 	while ( surface )

  00012	83 7d e0 00	 cmp	 DWORD PTR _surface$[ebp], 0
  00016	0f 84 2c 0f 00
	00		 je	 $LN3@draw_3d_ha

; 2872 : 	{
; 2873 : 	
; 2874 : 		//
; 2875 : 		// Set up the object drawing global variables
; 2876 : 		//
; 2877 : 	
; 2878 : 		object_3d_points_current_base = 0;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_points_current_base@@3HA, 0 ; object_3d_points_current_base

; 2879 : 		object_3d_object_current_base = 0;

  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_current_base@@3HA, 0 ; object_3d_object_current_base

; 2880 : 		object_3d_light_3d_current_base = 0;

  00030	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_light_3d_current_base@@3HA, 0 ; object_3d_light_3d_current_base

; 2881 : 	
; 2882 : 		current_object_3d_light_maps_enabled = surface->lightmaps_enabled;

  0003a	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0003d	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00040	d1 e9		 shr	 ecx, 1
  00042	83 e1 01	 and	 ecx, 1
  00045	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, ecx ; current_object_3d_light_maps_enabled

; 2883 : 	
; 2884 : 		//
; 2885 : 		// Get the object's position relative to the camera
; 2886 : 		//
; 2887 : 	
; 2888 : 		current_object_3d_relative_position = &surface->object_view_position;

  0004b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0004e	83 c0 50	 add	 eax, 80			; 00000050H
  00051	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 2889 : 	
; 2890 : 		//
; 2891 : 		// Set the main objects' scaling values
; 2892 : 		//
; 2893 : 	
; 2894 : 		object_3d_scale = surface->object_3d_scale;

  00056	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00059	83 c0 44	 add	 eax, 68			; 00000044H
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A, ecx
  00064	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00067	89 15 04 00 00
	00		 mov	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4, edx
  0006d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00070	a3 08 00 00 00	 mov	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8, eax

; 2895 : 	
; 2896 : 		//
; 2897 : 		// Set the object dissolve variables
; 2898 : 		//
; 2899 : 	
; 2900 : 		current_object_3d_dissolve_value = surface->dissolve_value;

  00075	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00078	8a 48 3c	 mov	 cl, BYTE PTR [eax+60]
  0007b	88 0d 00 00 00
	00		 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, cl ; current_object_3d_dissolve_value

; 2901 : 		current_object_3d_dissolve_factor = current_object_3d_dissolve_value;

  00081	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00088	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0008c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 2902 : 		current_object_3d_dissolve_factor /= 255.0;

  00094	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  0009c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 2903 : 	
; 2904 : 		//
; 2905 : 		// Calculate the object's rotation matrix, to transform its 3d points relative to the view.
; 2906 : 		//
; 2907 : 	
; 2908 : 		rotation_3d[0][0] = ( surface->vp.xv.x * visual_3d_vp->xv.x + surface->vp.xv.y * visual_3d_vp->xv.y + surface->vp.xv.z * visual_3d_vp->xv.z );

  000b0	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000b9	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000be	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  000c3	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000cb	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  000d0	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  000d5	f3 0f 58 c1	 addss	 xmm0, xmm1
  000d9	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000e2	f3 0f 10 49 18	 movss	 xmm1, DWORD PTR [ecx+24]
  000e7	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  000ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  000f0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f5	6b c8 00	 imul	 ecx, eax, 0
  000f8	ba 04 00 00 00	 mov	 edx, 4
  000fd	6b c2 00	 imul	 eax, edx, 0
  00100	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2909 : 		rotation_3d[0][1] = ( surface->vp.xv.x * visual_3d_vp->yv.x + surface->vp.xv.y * visual_3d_vp->yv.y + surface->vp.xv.z * visual_3d_vp->yv.z );

  00109	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0010c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00112	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00117	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0011c	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00124	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  00129	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  0012e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00132	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0013b	f3 0f 10 49 18	 movss	 xmm1, DWORD PTR [ecx+24]
  00140	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00145	f3 0f 58 c1	 addss	 xmm0, xmm1
  00149	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0014e	6b c8 00	 imul	 ecx, eax, 0
  00151	ba 04 00 00 00	 mov	 edx, 4
  00156	c1 e2 00	 shl	 edx, 0
  00159	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 2910 : 		rotation_3d[0][2] = ( surface->vp.xv.x * visual_3d_vp->zv.x + surface->vp.xv.y * visual_3d_vp->zv.y + surface->vp.xv.z * visual_3d_vp->zv.z );

  00162	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00165	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0016b	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00170	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  00175	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0017d	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  00182	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00187	f3 0f 58 c1	 addss	 xmm0, xmm1
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  0018e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00194	f3 0f 10 49 18	 movss	 xmm1, DWORD PTR [ecx+24]
  00199	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0019e	f3 0f 58 c1	 addss	 xmm0, xmm1
  001a2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001a7	6b c8 00	 imul	 ecx, eax, 0
  001aa	ba 04 00 00 00	 mov	 edx, 4
  001af	d1 e2		 shl	 edx, 1
  001b1	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 2911 : 	
; 2912 : 		rotation_3d[1][0] = ( surface->vp.yv.x * visual_3d_vp->xv.x + surface->vp.yv.y * visual_3d_vp->xv.y + surface->vp.yv.z * visual_3d_vp->xv.z );

  001ba	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  001bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001c3	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  001c8	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  001cd	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001d5	f3 0f 10 4a 20	 movss	 xmm1, DWORD PTR [edx+32]
  001da	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  001df	f3 0f 58 c1	 addss	 xmm0, xmm1
  001e3	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  001e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001ec	f3 0f 10 49 24	 movss	 xmm1, DWORD PTR [ecx+36]
  001f1	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  001f6	f3 0f 58 c1	 addss	 xmm0, xmm1
  001fa	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ff	c1 e0 00	 shl	 eax, 0
  00202	b9 04 00 00 00	 mov	 ecx, 4
  00207	6b d1 00	 imul	 edx, ecx, 0
  0020a	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 2913 : 		rotation_3d[1][1] = ( surface->vp.yv.x * visual_3d_vp->yv.x + surface->vp.yv.y * visual_3d_vp->yv.y + surface->vp.yv.z * visual_3d_vp->yv.z );

  00213	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00216	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0021c	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00221	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  00226	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0022e	f3 0f 10 4a 20	 movss	 xmm1, DWORD PTR [edx+32]
  00233	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  00238	f3 0f 58 c1	 addss	 xmm0, xmm1
  0023c	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  0023f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00245	f3 0f 10 49 24	 movss	 xmm1, DWORD PTR [ecx+36]
  0024a	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  0024f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00253	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00258	c1 e0 00	 shl	 eax, 0
  0025b	b9 04 00 00 00	 mov	 ecx, 4
  00260	c1 e1 00	 shl	 ecx, 0
  00263	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2914 : 		rotation_3d[1][2] = ( surface->vp.yv.x * visual_3d_vp->zv.x + surface->vp.yv.y * visual_3d_vp->zv.y + surface->vp.yv.z * visual_3d_vp->zv.z );

  0026c	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0026f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00275	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0027a	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  0027f	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00287	f3 0f 10 4a 20	 movss	 xmm1, DWORD PTR [edx+32]
  0028c	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00291	f3 0f 58 c1	 addss	 xmm0, xmm1
  00295	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00298	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0029e	f3 0f 10 49 24	 movss	 xmm1, DWORD PTR [ecx+36]
  002a3	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  002a8	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ac	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002b1	c1 e0 00	 shl	 eax, 0
  002b4	b9 04 00 00 00	 mov	 ecx, 4
  002b9	d1 e1		 shl	 ecx, 1
  002bb	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2915 : 	
; 2916 : 		rotation_3d[2][0] = ( surface->vp.zv.x * visual_3d_vp->xv.x + surface->vp.zv.y * visual_3d_vp->xv.y + surface->vp.zv.z * visual_3d_vp->xv.z );

  002c4	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  002c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002cd	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  002d2	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  002d7	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  002da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002df	f3 0f 10 4a 2c	 movss	 xmm1, DWORD PTR [edx+44]
  002e4	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  002e9	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ed	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  002f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f6	f3 0f 10 49 30	 movss	 xmm1, DWORD PTR [ecx+48]
  002fb	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00300	f3 0f 58 c1	 addss	 xmm0, xmm1
  00304	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00309	d1 e0		 shl	 eax, 1
  0030b	b9 04 00 00 00	 mov	 ecx, 4
  00310	6b d1 00	 imul	 edx, ecx, 0
  00313	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 2917 : 		rotation_3d[2][1] = ( surface->vp.zv.x * visual_3d_vp->yv.x + surface->vp.zv.y * visual_3d_vp->yv.y + surface->vp.zv.z * visual_3d_vp->yv.z );

  0031c	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0031f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00325	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  0032a	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0032f	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00332	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00337	f3 0f 10 4a 2c	 movss	 xmm1, DWORD PTR [edx+44]
  0033c	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  00341	f3 0f 58 c1	 addss	 xmm0, xmm1
  00345	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00348	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0034e	f3 0f 10 49 30	 movss	 xmm1, DWORD PTR [ecx+48]
  00353	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00358	f3 0f 58 c1	 addss	 xmm0, xmm1
  0035c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00361	d1 e0		 shl	 eax, 1
  00363	b9 04 00 00 00	 mov	 ecx, 4
  00368	c1 e1 00	 shl	 ecx, 0
  0036b	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2918 : 		rotation_3d[2][2] = ( surface->vp.zv.x * visual_3d_vp->zv.x + surface->vp.zv.y * visual_3d_vp->zv.y + surface->vp.zv.z * visual_3d_vp->zv.z );

  00374	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00377	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0037d	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00382	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  00387	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0038f	f3 0f 10 4a 2c	 movss	 xmm1, DWORD PTR [edx+44]
  00394	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00399	f3 0f 58 c1	 addss	 xmm0, xmm1
  0039d	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003a6	f3 0f 10 49 30	 movss	 xmm1, DWORD PTR [ecx+48]
  003ab	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  003b0	f3 0f 58 c1	 addss	 xmm0, xmm1
  003b4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003b9	d1 e0		 shl	 eax, 1
  003bb	b9 04 00 00 00	 mov	 ecx, 4
  003c0	d1 e1		 shl	 ecx, 1
  003c2	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2919 : 	
; 2920 : 		rotation_3d[0][0] *= surface->object_3d_scale.x;

  003cb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003d0	6b c8 00	 imul	 ecx, eax, 0
  003d3	ba 04 00 00 00	 mov	 edx, 4
  003d8	6b c2 00	 imul	 eax, edx, 0
  003db	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  003de	f3 0f 10 84 01
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  003e7	f3 0f 59 42 44	 mulss	 xmm0, DWORD PTR [edx+68]
  003ec	b8 04 00 00 00	 mov	 eax, 4
  003f1	6b c8 00	 imul	 ecx, eax, 0
  003f4	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  003f9	6b c2 00	 imul	 eax, edx, 0
  003fc	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2921 : 		rotation_3d[1][0] *= surface->object_3d_scale.y;

  00405	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0040a	c1 e0 00	 shl	 eax, 0
  0040d	b9 04 00 00 00	 mov	 ecx, 4
  00412	6b d1 00	 imul	 edx, ecx, 0
  00415	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00418	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00421	f3 0f 59 41 48	 mulss	 xmm0, DWORD PTR [ecx+72]
  00426	ba 04 00 00 00	 mov	 edx, 4
  0042b	6b c2 00	 imul	 eax, edx, 0
  0042e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00433	c1 e1 00	 shl	 ecx, 0
  00436	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2922 : 		rotation_3d[2][0] *= surface->object_3d_scale.z;

  0043f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00444	d1 e0		 shl	 eax, 1
  00446	b9 04 00 00 00	 mov	 ecx, 4
  0044b	6b d1 00	 imul	 edx, ecx, 0
  0044e	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00451	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  0045a	f3 0f 59 41 4c	 mulss	 xmm0, DWORD PTR [ecx+76]
  0045f	ba 04 00 00 00	 mov	 edx, 4
  00464	6b c2 00	 imul	 eax, edx, 0
  00467	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0046c	d1 e1		 shl	 ecx, 1
  0046e	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2923 : 	
; 2924 : 		rotation_3d[0][1] *= surface->object_3d_scale.x;

  00477	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0047c	6b c8 00	 imul	 ecx, eax, 0
  0047f	ba 04 00 00 00	 mov	 edx, 4
  00484	c1 e2 00	 shl	 edx, 0
  00487	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0048a	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00493	f3 0f 59 40 44	 mulss	 xmm0, DWORD PTR [eax+68]
  00498	b9 04 00 00 00	 mov	 ecx, 4
  0049d	c1 e1 00	 shl	 ecx, 0
  004a0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004a5	6b c2 00	 imul	 eax, edx, 0
  004a8	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2925 : 		rotation_3d[1][1] *= surface->object_3d_scale.y;

  004b1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004b6	c1 e0 00	 shl	 eax, 0
  004b9	b9 04 00 00 00	 mov	 ecx, 4
  004be	c1 e1 00	 shl	 ecx, 0
  004c1	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  004c4	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  004cd	f3 0f 59 42 48	 mulss	 xmm0, DWORD PTR [edx+72]
  004d2	b8 04 00 00 00	 mov	 eax, 4
  004d7	c1 e0 00	 shl	 eax, 0
  004da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004df	c1 e1 00	 shl	 ecx, 0
  004e2	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2926 : 		rotation_3d[2][1] *= surface->object_3d_scale.z;

  004eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004f0	d1 e0		 shl	 eax, 1
  004f2	b9 04 00 00 00	 mov	 ecx, 4
  004f7	c1 e1 00	 shl	 ecx, 0
  004fa	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  004fd	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00506	f3 0f 59 42 4c	 mulss	 xmm0, DWORD PTR [edx+76]
  0050b	b8 04 00 00 00	 mov	 eax, 4
  00510	c1 e0 00	 shl	 eax, 0
  00513	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00518	d1 e1		 shl	 ecx, 1
  0051a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2927 : 	
; 2928 : 		rotation_3d[0][2] *= surface->object_3d_scale.x;

  00523	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00528	6b c8 00	 imul	 ecx, eax, 0
  0052b	ba 04 00 00 00	 mov	 edx, 4
  00530	d1 e2		 shl	 edx, 1
  00532	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00535	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  0053e	f3 0f 59 40 44	 mulss	 xmm0, DWORD PTR [eax+68]
  00543	b9 04 00 00 00	 mov	 ecx, 4
  00548	d1 e1		 shl	 ecx, 1
  0054a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0054f	6b c2 00	 imul	 eax, edx, 0
  00552	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 2929 : 		rotation_3d[1][2] *= surface->object_3d_scale.y;

  0055b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00560	c1 e0 00	 shl	 eax, 0
  00563	b9 04 00 00 00	 mov	 ecx, 4
  00568	d1 e1		 shl	 ecx, 1
  0056a	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0056d	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00576	f3 0f 59 42 48	 mulss	 xmm0, DWORD PTR [edx+72]
  0057b	b8 04 00 00 00	 mov	 eax, 4
  00580	d1 e0		 shl	 eax, 1
  00582	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00587	c1 e1 00	 shl	 ecx, 0
  0058a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2930 : 		rotation_3d[2][2] *= surface->object_3d_scale.z;

  00593	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00598	d1 e0		 shl	 eax, 1
  0059a	b9 04 00 00 00	 mov	 ecx, 4
  0059f	d1 e1		 shl	 ecx, 1
  005a1	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  005a4	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  005ad	f3 0f 59 42 4c	 mulss	 xmm0, DWORD PTR [edx+76]
  005b2	b8 04 00 00 00	 mov	 eax, 4
  005b7	d1 e0		 shl	 eax, 1
  005b9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005be	d1 e1		 shl	 ecx, 1
  005c0	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 2931 : 	
; 2932 : 		//
; 2933 : 		// Get the object number
; 2934 : 		//
; 2935 : 	
; 2936 : 		object_number = surface->object_index;

  005c9	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  005cc	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  005cf	89 4d fc	 mov	 DWORD PTR _object_number$[ebp], ecx

; 2937 : 	
; 2938 : 		//
; 2939 : 		// Rotate the light source vector to be relative to the object.
; 2940 : 		//
; 2941 : 	
; 2942 : 		{
; 2943 : 	
; 2944 : 			vec3d
; 2945 : 				rel_pos;
; 2946 : 	
; 2947 : 			//
; 2948 : 			// Calculate the relative camera position in the object viewspace
; 2949 : 			//
; 2950 : 	
; 2951 : 			rel_pos.x = visual_3d_vp->x - surface->vp.x;

  005d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005d7	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  005da	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005de	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  005e3	f3 0f 11 45 d4	 movss	 DWORD PTR _rel_pos$2[ebp], xmm0

; 2952 : 			rel_pos.y = visual_3d_vp->y - surface->vp.y;

  005e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005ed	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  005f0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005f5	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  005fa	f3 0f 11 45 d8	 movss	 DWORD PTR _rel_pos$2[ebp+4], xmm0

; 2953 : 			rel_pos.z = visual_3d_vp->z - surface->vp.z;

  005ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00604	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00607	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0060c	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00611	f3 0f 11 45 dc	 movss	 DWORD PTR _rel_pos$2[ebp+8], xmm0

; 2954 : 	
; 2955 : 			object_camera_position.x = ( rel_pos.x * surface->vp.attitude[0][0] + rel_pos.y * surface->vp.attitude[0][1] + rel_pos.z * surface->vp.attitude[0][2] );

  00616	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0061b	6b c8 00	 imul	 ecx, eax, 0
  0061e	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00621	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00625	b9 04 00 00 00	 mov	 ecx, 4
  0062a	6b d1 00	 imul	 edx, ecx, 0
  0062d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _rel_pos$2[ebp]
  00632	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00637	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0063c	6b c8 00	 imul	 ecx, eax, 0
  0063f	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00642	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00646	b9 04 00 00 00	 mov	 ecx, 4
  0064b	c1 e1 00	 shl	 ecx, 0
  0064e	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _rel_pos$2[ebp+4]
  00653	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  00658	f3 0f 58 c1	 addss	 xmm0, xmm1
  0065c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00661	6b c2 00	 imul	 eax, edx, 0
  00664	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00667	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  0066b	b8 04 00 00 00	 mov	 eax, 4
  00670	d1 e0		 shl	 eax, 1
  00672	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _rel_pos$2[ebp+8]
  00677	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0067c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00680	f3 0f 11 45 f0	 movss	 DWORD PTR _object_camera_position$[ebp], xmm0

; 2956 : 			object_camera_position.y = ( rel_pos.x * surface->vp.attitude[1][0] + rel_pos.y * surface->vp.attitude[1][1] + rel_pos.z * surface->vp.attitude[1][2] );

  00685	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0068a	c1 e0 00	 shl	 eax, 0
  0068d	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00690	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00694	b8 04 00 00 00	 mov	 eax, 4
  00699	6b c8 00	 imul	 ecx, eax, 0
  0069c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _rel_pos$2[ebp]
  006a1	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  006a6	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  006ab	c1 e2 00	 shl	 edx, 0
  006ae	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  006b1	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  006b5	ba 04 00 00 00	 mov	 edx, 4
  006ba	c1 e2 00	 shl	 edx, 0
  006bd	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _rel_pos$2[ebp+4]
  006c2	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  006c7	f3 0f 58 c1	 addss	 xmm0, xmm1
  006cb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006d0	c1 e0 00	 shl	 eax, 0
  006d3	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  006d6	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  006da	b8 04 00 00 00	 mov	 eax, 4
  006df	d1 e0		 shl	 eax, 1
  006e1	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _rel_pos$2[ebp+8]
  006e6	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  006eb	f3 0f 58 c1	 addss	 xmm0, xmm1
  006ef	f3 0f 11 45 f4	 movss	 DWORD PTR _object_camera_position$[ebp+4], xmm0

; 2957 : 			object_camera_position.z = ( rel_pos.x * surface->vp.attitude[2][0] + rel_pos.y * surface->vp.attitude[2][1] + rel_pos.z * surface->vp.attitude[2][2] );

  006f4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006f9	d1 e0		 shl	 eax, 1
  006fb	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  006fe	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00702	b8 04 00 00 00	 mov	 eax, 4
  00707	6b c8 00	 imul	 ecx, eax, 0
  0070a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _rel_pos$2[ebp]
  0070f	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00714	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00719	d1 e2		 shl	 edx, 1
  0071b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0071e	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00722	ba 04 00 00 00	 mov	 edx, 4
  00727	c1 e2 00	 shl	 edx, 0
  0072a	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _rel_pos$2[ebp+4]
  0072f	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00734	f3 0f 58 c1	 addss	 xmm0, xmm1
  00738	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0073d	d1 e0		 shl	 eax, 1
  0073f	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00742	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00746	b8 04 00 00 00	 mov	 eax, 4
  0074b	d1 e0		 shl	 eax, 1
  0074d	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR _rel_pos$2[ebp+8]
  00752	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00757	f3 0f 58 c1	 addss	 xmm0, xmm1
  0075b	f3 0f 11 45 f8	 movss	 DWORD PTR _object_camera_position$[ebp+8], xmm0

; 2958 : 	
; 2959 : 			object_camera_direction.x = ( visual_3d_vp->zv.x * surface->vp.attitude[0][0] + visual_3d_vp->zv.y * surface->vp.attitude[1][0] + visual_3d_vp->zv.z * surface->vp.attitude[2][0] );

  00760	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00765	6b c8 00	 imul	 ecx, eax, 0
  00768	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0076b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  0076f	b9 04 00 00 00	 mov	 ecx, 4
  00774	6b d1 00	 imul	 edx, ecx, 0
  00777	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0077d	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  00782	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00787	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0078c	c1 e2 00	 shl	 edx, 0
  0078f	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00792	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00796	ba 04 00 00 00	 mov	 edx, 4
  0079b	6b c2 00	 imul	 eax, edx, 0
  0079e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  007a4	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  007a9	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  007ae	f3 0f 58 c1	 addss	 xmm0, xmm1
  007b2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007b7	d1 e0		 shl	 eax, 1
  007b9	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  007bc	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  007c0	b8 04 00 00 00	 mov	 eax, 4
  007c5	6b c8 00	 imul	 ecx, eax, 0
  007c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  007cd	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  007d2	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  007d7	f3 0f 58 c1	 addss	 xmm0, xmm1
  007db	f3 0f 11 45 e4	 movss	 DWORD PTR _object_camera_direction$[ebp], xmm0

; 2960 : 			object_camera_direction.y = ( visual_3d_vp->zv.x * surface->vp.attitude[0][1] + visual_3d_vp->zv.y * surface->vp.attitude[1][1] + visual_3d_vp->zv.z * surface->vp.attitude[2][1] );

  007e0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007e5	6b c8 00	 imul	 ecx, eax, 0
  007e8	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  007eb	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  007ef	b9 04 00 00 00	 mov	 ecx, 4
  007f4	c1 e1 00	 shl	 ecx, 0
  007f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  007fd	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00802	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00807	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0080c	c1 e0 00	 shl	 eax, 0
  0080f	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00812	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00816	b8 04 00 00 00	 mov	 eax, 4
  0081b	c1 e0 00	 shl	 eax, 0
  0081e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00824	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00829	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0082e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00832	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00837	d1 e2		 shl	 edx, 1
  00839	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0083c	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  00840	ba 04 00 00 00	 mov	 edx, 4
  00845	c1 e2 00	 shl	 edx, 0
  00848	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0084d	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00852	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00857	f3 0f 58 c1	 addss	 xmm0, xmm1
  0085b	f3 0f 11 45 e8	 movss	 DWORD PTR _object_camera_direction$[ebp+4], xmm0

; 2961 : 			object_camera_direction.z = ( visual_3d_vp->zv.x * surface->vp.attitude[0][2] + visual_3d_vp->zv.y * surface->vp.attitude[1][2] + visual_3d_vp->zv.z * surface->vp.attitude[2][2] );

  00860	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00865	6b c8 00	 imul	 ecx, eax, 0
  00868	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  0086b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  0086f	b9 04 00 00 00	 mov	 ecx, 4
  00874	d1 e1		 shl	 ecx, 1
  00876	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0087c	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00881	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00886	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0088b	c1 e0 00	 shl	 eax, 0
  0088e	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00891	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00895	b8 04 00 00 00	 mov	 eax, 4
  0089a	d1 e0		 shl	 eax, 1
  0089c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  008a2	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  008a7	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  008ac	f3 0f 58 c1	 addss	 xmm0, xmm1
  008b0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  008b5	d1 e2		 shl	 edx, 1
  008b7	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  008ba	8d 4c 10 10	 lea	 ecx, DWORD PTR [eax+edx+16]
  008be	ba 04 00 00 00	 mov	 edx, 4
  008c3	d1 e2		 shl	 edx, 1
  008c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  008ca	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  008cf	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  008d4	f3 0f 58 c1	 addss	 xmm0, xmm1
  008d8	f3 0f 11 45 ec	 movss	 DWORD PTR _object_camera_direction$[ebp+8], xmm0

; 2962 : 		}
; 2963 : 	
; 2964 : 	
; 2965 : 		//
; 2966 : 		//	Set up this objects' object info structure
; 2967 : 		//
; 2968 : 	
; 2969 : 		object_3d_object_base[object_3d_object_current_base].lights = NULL;

  008dd	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  008e4	c7 80 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+4], 0

; 2970 : 		object_3d_object_base[object_3d_object_current_base].camera_position = object_camera_position;

  008ee	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  008f5	05 08 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+8
  008fa	8b 4d f0	 mov	 ecx, DWORD PTR _object_camera_position$[ebp]
  008fd	89 08		 mov	 DWORD PTR [eax], ecx
  008ff	8b 55 f4	 mov	 edx, DWORD PTR _object_camera_position$[ebp+4]
  00902	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00905	8b 4d f8	 mov	 ecx, DWORD PTR _object_camera_position$[ebp+8]
  00908	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2971 : 		object_3d_object_base[object_3d_object_current_base].camera_direction = object_camera_direction;

  0090b	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00912	05 14 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+20
  00917	8b 4d e4	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp]
  0091a	89 08		 mov	 DWORD PTR [eax], ecx
  0091c	8b 55 e8	 mov	 edx, DWORD PTR _object_camera_direction$[ebp+4]
  0091f	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00922	8b 4d ec	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp+8]
  00925	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2972 : 		object_3d_object_base[object_3d_object_current_base].points_base = object_3d_points_current_base;

  00928	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  0092f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_points_current_base@@3HA ; object_3d_points_current_base
  00935	89 88 24 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+36], ecx

; 2973 : 		object_3d_object_base[object_3d_object_current_base].object_number = object_number;

  0093b	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00942	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  00945	89 88 20 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+32], ecx

; 2974 : 		object_3d_object_base[object_3d_object_current_base].object_vp = &surface->vp;

  0094b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0094e	83 c0 04	 add	 eax, 4
  00951	6b 0d 00 00 00
	00 2c		 imul	 ecx, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00958	89 81 28 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[ecx+40], eax

; 2975 : 	
; 2976 : 		current_object_3d_object_base = &object_3d_object_base[object_3d_object_current_base];

  0095e	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00965	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; object_3d_object_base
  0096a	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A, eax ; current_object_3d_object_base

; 2977 : 	
; 2978 : 		//
; 2979 : 		// Now start transforming etc
; 2980 : 		//
; 2981 : 	
; 2982 : 		current_object_3d_surface = surface->surface;

  0096f	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00972	8b 08		 mov	 ecx, DWORD PTR [eax]
  00974	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A, ecx ; current_object_3d_surface

; 2983 : 		current_object_3d_faces = surface->faces;

  0097a	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  0097d	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00980	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_faces@@3PAUOBJECT_3D_FACE@@A, ecx ; current_object_3d_faces

; 2984 : 		current_object_3d_surface_point_list = surface->surface_point_list;

  00986	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00989	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  0098c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, ecx ; current_object_3d_surface_point_list

; 2985 : 		current_object_3d_surface_point_normal_list = surface->surface_point_normal_list;

  00992	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00995	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  00998	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, ecx ; current_object_3d_surface_point_normal_list

; 2986 : 		current_object_3d_surface_point_texture_list = surface->surface_point_texture_list;

  0099e	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009a1	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  009a4	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, ecx ; current_object_3d_surface_point_texture_list

; 2987 : 		current_object_3d_point_list = surface->faces_point_list;

  009aa	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009ad	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  009b0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A, ecx ; current_object_3d_point_list

; 2988 : 		current_object_3d_face_normal_list = surface->faces_normal_list;

  009b6	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009b9	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  009bc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A, ecx ; current_object_3d_face_normal_list

; 2989 : 		current_object_3d_light_maps_enabled = surface->lightmaps_enabled;

  009c2	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  009c5	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  009c8	d1 e9		 shr	 ecx, 1
  009ca	83 e1 01	 and	 ecx, 1
  009cd	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, ecx ; current_object_3d_light_maps_enabled

; 2990 : 	
; 2991 : 		//
; 2992 : 		// Set the world transformation matrix
; 2993 : 		//
; 2994 : 
; 2995 : 		{
; 2996 : 
; 2997 : 			matrix4x4
; 2998 : 				matrix;
; 2999 : 
; 3000 : 			matrix[0][0] = surface->vp.attitude[0][0] * surface->object_3d_scale.x;

  009d3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009d8	6b c8 00	 imul	 ecx, eax, 0
  009db	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  009de	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  009e2	b9 04 00 00 00	 mov	 ecx, 4
  009e7	6b d1 00	 imul	 edx, ecx, 0
  009ea	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  009ed	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  009f2	f3 0f 59 41 44	 mulss	 xmm0, DWORD PTR [ecx+68]
  009f7	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  009fc	6b c2 00	 imul	 eax, edx, 0
  009ff	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00a03	ba 04 00 00 00	 mov	 edx, 4
  00a08	6b c2 00	 imul	 eax, edx, 0
  00a0b	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3001 : 			matrix[0][1] = surface->vp.attitude[0][1] * surface->object_3d_scale.x;

  00a10	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a15	6b c8 00	 imul	 ecx, eax, 0
  00a18	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00a1b	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00a1f	b9 04 00 00 00	 mov	 ecx, 4
  00a24	c1 e1 00	 shl	 ecx, 0
  00a27	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00a2a	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00a2f	f3 0f 59 42 44	 mulss	 xmm0, DWORD PTR [edx+68]
  00a34	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a39	6b c8 00	 imul	 ecx, eax, 0
  00a3c	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00a40	b8 04 00 00 00	 mov	 eax, 4
  00a45	c1 e0 00	 shl	 eax, 0
  00a48	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3002 : 			matrix[0][2] = surface->vp.attitude[0][2] * surface->object_3d_scale.x;

  00a4d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a52	6b c8 00	 imul	 ecx, eax, 0
  00a55	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00a58	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  00a5c	b9 04 00 00 00	 mov	 ecx, 4
  00a61	d1 e1		 shl	 ecx, 1
  00a63	8b 55 e0	 mov	 edx, DWORD PTR _surface$[ebp]
  00a66	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00a6b	f3 0f 59 42 44	 mulss	 xmm0, DWORD PTR [edx+68]
  00a70	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a75	6b c8 00	 imul	 ecx, eax, 0
  00a78	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00a7c	b8 04 00 00 00	 mov	 eax, 4
  00a81	d1 e0		 shl	 eax, 1
  00a83	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3003 : 			matrix[0][3] = 0;

  00a88	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a8d	6b c8 00	 imul	 ecx, eax, 0
  00a90	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00a94	b8 04 00 00 00	 mov	 eax, 4
  00a99	6b c8 03	 imul	 ecx, eax, 3
  00a9c	0f 57 c0	 xorps	 xmm0, xmm0
  00a9f	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3004 : 	
; 3005 : 			matrix[1][0] = surface->vp.attitude[1][0] * surface->object_3d_scale.y;

  00aa4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00aa9	c1 e0 00	 shl	 eax, 0
  00aac	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00aaf	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00ab3	b8 04 00 00 00	 mov	 eax, 4
  00ab8	6b c8 00	 imul	 ecx, eax, 0
  00abb	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00abe	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00ac3	f3 0f 59 40 48	 mulss	 xmm0, DWORD PTR [eax+72]
  00ac8	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00acd	c1 e1 00	 shl	 ecx, 0
  00ad0	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00ad4	b8 04 00 00 00	 mov	 eax, 4
  00ad9	6b c8 00	 imul	 ecx, eax, 0
  00adc	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3006 : 			matrix[1][1] = surface->vp.attitude[1][1] * surface->object_3d_scale.y;

  00ae1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ae6	c1 e0 00	 shl	 eax, 0
  00ae9	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00aec	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00af0	b8 04 00 00 00	 mov	 eax, 4
  00af5	c1 e0 00	 shl	 eax, 0
  00af8	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00afb	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00b00	f3 0f 59 41 48	 mulss	 xmm0, DWORD PTR [ecx+72]
  00b05	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00b0a	c1 e2 00	 shl	 edx, 0
  00b0d	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$1[ebp+edx]
  00b11	b9 04 00 00 00	 mov	 ecx, 4
  00b16	c1 e1 00	 shl	 ecx, 0
  00b19	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3007 : 			matrix[1][2] = surface->vp.attitude[1][2] * surface->object_3d_scale.y;

  00b1e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b23	c1 e0 00	 shl	 eax, 0
  00b26	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00b29	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00b2d	b8 04 00 00 00	 mov	 eax, 4
  00b32	d1 e0		 shl	 eax, 1
  00b34	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00b37	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00b3c	f3 0f 59 41 48	 mulss	 xmm0, DWORD PTR [ecx+72]
  00b41	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00b46	c1 e2 00	 shl	 edx, 0
  00b49	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$1[ebp+edx]
  00b4d	b9 04 00 00 00	 mov	 ecx, 4
  00b52	d1 e1		 shl	 ecx, 1
  00b54	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3008 : 			matrix[1][3] = 0;

  00b59	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b5e	c1 e0 00	 shl	 eax, 0
  00b61	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00b65	ba 04 00 00 00	 mov	 edx, 4
  00b6a	6b c2 03	 imul	 eax, edx, 3
  00b6d	0f 57 c0	 xorps	 xmm0, xmm0
  00b70	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3009 : 	
; 3010 : 			matrix[2][0] = surface->vp.attitude[2][0] * surface->object_3d_scale.z;

  00b75	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b7a	d1 e0		 shl	 eax, 1
  00b7c	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00b7f	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00b83	b8 04 00 00 00	 mov	 eax, 4
  00b88	6b c8 00	 imul	 ecx, eax, 0
  00b8b	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00b8e	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00b93	f3 0f 59 40 4c	 mulss	 xmm0, DWORD PTR [eax+76]
  00b98	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00b9d	d1 e1		 shl	 ecx, 1
  00b9f	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00ba3	b8 04 00 00 00	 mov	 eax, 4
  00ba8	6b c8 00	 imul	 ecx, eax, 0
  00bab	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3011 : 			matrix[2][1] = surface->vp.attitude[2][1] * surface->object_3d_scale.z;

  00bb0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00bb5	d1 e0		 shl	 eax, 1
  00bb7	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00bba	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00bbe	b8 04 00 00 00	 mov	 eax, 4
  00bc3	c1 e0 00	 shl	 eax, 0
  00bc6	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00bc9	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00bce	f3 0f 59 41 4c	 mulss	 xmm0, DWORD PTR [ecx+76]
  00bd3	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00bd8	d1 e2		 shl	 edx, 1
  00bda	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$1[ebp+edx]
  00bde	b9 04 00 00 00	 mov	 ecx, 4
  00be3	c1 e1 00	 shl	 ecx, 0
  00be6	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3012 : 			matrix[2][2] = surface->vp.attitude[2][2] * surface->object_3d_scale.z;

  00beb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00bf0	d1 e0		 shl	 eax, 1
  00bf2	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00bf5	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00bf9	b8 04 00 00 00	 mov	 eax, 4
  00bfe	d1 e0		 shl	 eax, 1
  00c00	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00c03	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00c08	f3 0f 59 41 4c	 mulss	 xmm0, DWORD PTR [ecx+76]
  00c0d	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00c12	d1 e2		 shl	 edx, 1
  00c14	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$1[ebp+edx]
  00c18	b9 04 00 00 00	 mov	 ecx, 4
  00c1d	d1 e1		 shl	 ecx, 1
  00c1f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3013 : 			matrix[2][3] = 0;

  00c24	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c29	d1 e0		 shl	 eax, 1
  00c2b	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00c2f	ba 04 00 00 00	 mov	 edx, 4
  00c34	6b c2 03	 imul	 eax, edx, 3
  00c37	0f 57 c0	 xorps	 xmm0, xmm0
  00c3a	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3014 : 	
; 3015 : 			matrix[3][0] = surface->vp.position.x;

  00c3f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c44	6b c8 03	 imul	 ecx, eax, 3
  00c47	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00c4b	b8 04 00 00 00	 mov	 eax, 4
  00c50	6b c8 00	 imul	 ecx, eax, 0
  00c53	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00c56	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00c59	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 3016 : 			matrix[3][1] = surface->vp.position.y;

  00c5c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c61	6b c8 03	 imul	 ecx, eax, 3
  00c64	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00c68	b8 04 00 00 00	 mov	 eax, 4
  00c6d	c1 e0 00	 shl	 eax, 0
  00c70	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00c73	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00c76	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx

; 3017 : 			matrix[3][2] = surface->vp.position.z;

  00c79	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c7e	6b c8 03	 imul	 ecx, eax, 3
  00c81	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00c85	b8 04 00 00 00	 mov	 eax, 4
  00c8a	d1 e0		 shl	 eax, 1
  00c8c	8b 4d e0	 mov	 ecx, DWORD PTR _surface$[ebp]
  00c8f	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00c92	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx

; 3018 : 			matrix[3][3] = 1;

  00c95	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c9a	6b c8 03	 imul	 ecx, eax, 3
  00c9d	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00ca1	b8 04 00 00 00	 mov	 eax, 4
  00ca6	6b c8 03	 imul	 ecx, eax, 3
  00ca9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00cb1	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3019 : 
; 3020 : 			if ( surface->object_index == 7830 )	//OBJECT_3D_CANNON_SHELL_RED )

  00cb6	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00cb9	81 78 38 96 1e
	00 00		 cmp	 DWORD PTR [eax+56], 7830 ; 00001e96H
  00cc0	0f 85 49 02 00
	00		 jne	 $LN4@draw_3d_ha

; 3021 : 			{
; 3022 : 
; 3023 : 				debug_log ( "Transparent matrix:" );

  00cc6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OFLINIBN@Transparent?5matrix?3@
  00ccb	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00cd0	83 c4 04	 add	 esp, 4

; 3024 : 				debug_log ( "%f %f %f %f", matrix[0][0], matrix[0][1], matrix[0][2], matrix[0][3] );

  00cd3	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00cd8	6b c8 00	 imul	 ecx, eax, 0
  00cdb	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00cdf	b8 04 00 00 00	 mov	 eax, 4
  00ce4	6b c8 03	 imul	 ecx, eax, 3
  00ce7	f3 0f 5a 04 0a	 cvtss2sd xmm0, DWORD PTR [edx+ecx]
  00cec	83 ec 08	 sub	 esp, 8
  00cef	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00cf4	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00cf9	6b c2 00	 imul	 eax, edx, 0
  00cfc	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00d00	ba 04 00 00 00	 mov	 edx, 4
  00d05	d1 e2		 shl	 edx, 1
  00d07	f3 0f 5a 04 11	 cvtss2sd xmm0, DWORD PTR [ecx+edx]
  00d0c	83 ec 08	 sub	 esp, 8
  00d0f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d14	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00d19	6b c8 00	 imul	 ecx, eax, 0
  00d1c	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00d20	b8 04 00 00 00	 mov	 eax, 4
  00d25	c1 e0 00	 shl	 eax, 0
  00d28	f3 0f 5a 04 02	 cvtss2sd xmm0, DWORD PTR [edx+eax]
  00d2d	83 ec 08	 sub	 esp, 8
  00d30	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d35	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00d3a	6b d1 00	 imul	 edx, ecx, 0
  00d3d	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$1[ebp+edx]
  00d41	b9 04 00 00 00	 mov	 ecx, 4
  00d46	6b d1 00	 imul	 edx, ecx, 0
  00d49	f3 0f 5a 04 10	 cvtss2sd xmm0, DWORD PTR [eax+edx]
  00d4e	83 ec 08	 sub	 esp, 8
  00d51	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d56	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@
  00d5b	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00d60	83 c4 24	 add	 esp, 36			; 00000024H

; 3025 : 				debug_log ( "%f %f %f %f", matrix[1][0], matrix[1][1], matrix[1][2], matrix[1][3] );

  00d63	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00d68	c1 e0 00	 shl	 eax, 0
  00d6b	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00d6f	ba 04 00 00 00	 mov	 edx, 4
  00d74	6b c2 03	 imul	 eax, edx, 3
  00d77	f3 0f 5a 04 01	 cvtss2sd xmm0, DWORD PTR [ecx+eax]
  00d7c	83 ec 08	 sub	 esp, 8
  00d7f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d84	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00d89	c1 e1 00	 shl	 ecx, 0
  00d8c	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00d90	b8 04 00 00 00	 mov	 eax, 4
  00d95	d1 e0		 shl	 eax, 1
  00d97	f3 0f 5a 04 02	 cvtss2sd xmm0, DWORD PTR [edx+eax]
  00d9c	83 ec 08	 sub	 esp, 8
  00d9f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00da4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00da9	c1 e1 00	 shl	 ecx, 0
  00dac	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00db0	b8 04 00 00 00	 mov	 eax, 4
  00db5	c1 e0 00	 shl	 eax, 0
  00db8	f3 0f 5a 04 02	 cvtss2sd xmm0, DWORD PTR [edx+eax]
  00dbd	83 ec 08	 sub	 esp, 8
  00dc0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00dc5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00dca	c1 e1 00	 shl	 ecx, 0
  00dcd	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00dd1	b8 04 00 00 00	 mov	 eax, 4
  00dd6	6b c8 00	 imul	 ecx, eax, 0
  00dd9	f3 0f 5a 04 0a	 cvtss2sd xmm0, DWORD PTR [edx+ecx]
  00dde	83 ec 08	 sub	 esp, 8
  00de1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00de6	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@
  00deb	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00df0	83 c4 24	 add	 esp, 36			; 00000024H

; 3026 : 				debug_log ( "%f %f %f %f", matrix[2][0], matrix[2][1], matrix[2][2], matrix[2][3] );

  00df3	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00df8	d1 e0		 shl	 eax, 1
  00dfa	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00dfe	ba 04 00 00 00	 mov	 edx, 4
  00e03	6b c2 03	 imul	 eax, edx, 3
  00e06	f3 0f 5a 04 01	 cvtss2sd xmm0, DWORD PTR [ecx+eax]
  00e0b	83 ec 08	 sub	 esp, 8
  00e0e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e13	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e18	d1 e1		 shl	 ecx, 1
  00e1a	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00e1e	b8 04 00 00 00	 mov	 eax, 4
  00e23	d1 e0		 shl	 eax, 1
  00e25	f3 0f 5a 04 02	 cvtss2sd xmm0, DWORD PTR [edx+eax]
  00e2a	83 ec 08	 sub	 esp, 8
  00e2d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e32	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e37	d1 e1		 shl	 ecx, 1
  00e39	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00e3d	b8 04 00 00 00	 mov	 eax, 4
  00e42	c1 e0 00	 shl	 eax, 0
  00e45	f3 0f 5a 04 02	 cvtss2sd xmm0, DWORD PTR [edx+eax]
  00e4a	83 ec 08	 sub	 esp, 8
  00e4d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e52	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e57	d1 e1		 shl	 ecx, 1
  00e59	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00e5d	b8 04 00 00 00	 mov	 eax, 4
  00e62	6b c8 00	 imul	 ecx, eax, 0
  00e65	f3 0f 5a 04 0a	 cvtss2sd xmm0, DWORD PTR [edx+ecx]
  00e6a	83 ec 08	 sub	 esp, 8
  00e6d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e72	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@
  00e77	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00e7c	83 c4 24	 add	 esp, 36			; 00000024H

; 3027 : 				debug_log ( "%f %f %f %f", matrix[3][0], matrix[3][1], matrix[3][2], matrix[3][3] );

  00e7f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00e84	6b c8 03	 imul	 ecx, eax, 3
  00e87	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00e8b	b8 04 00 00 00	 mov	 eax, 4
  00e90	6b c8 03	 imul	 ecx, eax, 3
  00e93	f3 0f 5a 04 0a	 cvtss2sd xmm0, DWORD PTR [edx+ecx]
  00e98	83 ec 08	 sub	 esp, 8
  00e9b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ea0	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00ea5	6b c2 03	 imul	 eax, edx, 3
  00ea8	8d 4c 05 94	 lea	 ecx, DWORD PTR _matrix$1[ebp+eax]
  00eac	ba 04 00 00 00	 mov	 edx, 4
  00eb1	d1 e2		 shl	 edx, 1
  00eb3	f3 0f 5a 04 11	 cvtss2sd xmm0, DWORD PTR [ecx+edx]
  00eb8	83 ec 08	 sub	 esp, 8
  00ebb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ec0	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00ec5	6b c8 03	 imul	 ecx, eax, 3
  00ec8	8d 54 0d 94	 lea	 edx, DWORD PTR _matrix$1[ebp+ecx]
  00ecc	b8 04 00 00 00	 mov	 eax, 4
  00ed1	c1 e0 00	 shl	 eax, 0
  00ed4	f3 0f 5a 04 02	 cvtss2sd xmm0, DWORD PTR [edx+eax]
  00ed9	83 ec 08	 sub	 esp, 8
  00edc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ee1	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ee6	6b d1 03	 imul	 edx, ecx, 3
  00ee9	8d 44 15 94	 lea	 eax, DWORD PTR _matrix$1[ebp+edx]
  00eed	b9 04 00 00 00	 mov	 ecx, 4
  00ef2	6b d1 00	 imul	 edx, ecx, 0
  00ef5	f3 0f 5a 04 10	 cvtss2sd xmm0, DWORD PTR [eax+edx]
  00efa	83 ec 08	 sub	 esp, 8
  00efd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f02	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ONLGMOD@?$CFf?5?$CFf?5?$CFf?5?$CFf@
  00f07	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00f0c	83 c4 24	 add	 esp, 36			; 00000024H
$LN4@draw_3d_ha:

; 3028 : 			}
; 3029 : 
; 3030 : 			memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  00f0f	6a 40		 push	 64			; 00000040H
  00f11	8d 45 94	 lea	 eax, DWORD PTR _matrix$1[ebp]
  00f14	50		 push	 eax
  00f15	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  00f1a	e8 00 00 00 00	 call	 _memcpy
  00f1f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3031 : 	
; 3032 : 			f3d_set_transform ( D3DTRANSFORMSTATE_WORLD, &d3d_matrix );

  00f22	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  00f27	6a 01		 push	 1
  00f29	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 3033 : 		}
; 3034 : 
; 3035 : 		draw_3d_object_hardware_translucent_faces ( surface );

  00f2e	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00f31	50		 push	 eax
  00f32	e8 00 00 00 00	 call	 ?draw_3d_object_hardware_translucent_faces@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_object_hardware_translucent_faces

; 3036 : 
; 3037 : 		surface = surface->succ;

  00f37	8b 45 e0	 mov	 eax, DWORD PTR _surface$[ebp]
  00f3a	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  00f40	89 4d e0	 mov	 DWORD PTR _surface$[ebp], ecx

; 3038 : 	}

  00f43	e9 ca f0 ff ff	 jmp	 $LN2@draw_3d_ha
$LN3@draw_3d_ha:

; 3039 : }

  00f48	5f		 pop	 edi
  00f49	5e		 pop	 esi
  00f4a	5b		 pop	 ebx
  00f4b	8b e5		 mov	 esp, ebp
  00f4d	5d		 pop	 ebp
  00f4e	c2 04 00	 ret	 4
?draw_3d_hardware_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ENDP ; draw_3d_hardware_translucent_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_hardware_zbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z
_TEXT	SEGMENT
_position$1 = -272					; size = 12
_count$2 = -260						; size = 4
_sprite$3 = -256					; size = 32
_buffer$4 = -224					; size = 4
_count$5 = -220						; size = 4
_rel$6 = -216						; size = 12
_matrix$7 = -204					; size = 64
_object_outcode$8 = -140				; size = 4
_rel_pos$9 = -136					; size = 12
_v2$10 = -124						; size = 12
_v1$11 = -112						; size = 12
_ifog_intensity$12 = -100				; size = 4
_fog_intensity$13 = -96					; size = 4
_old_object_vp$ = -92					; size = 48
_scene$ = -44						; size = 4
_object_unit_pos$ = -40					; size = 12
_object_camera_direction$ = -28				; size = 12
_object_camera_position$ = -16				; size = 12
_object_number$ = -4					; size = 4
_obj$ = 8						; size = 4
_object_is_flat$ = 12					; size = 4
_infrared_override$ = 16				; size = 4
?draw_hardware_zbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z PROC ; draw_hardware_zbuffered_3d_object, COMDAT

; 1022 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1023 : 
; 1024 : 	int
; 1025 : 		object_number;
; 1026 : 
; 1027 : 	vec3d
; 1028 : 		object_camera_position,
; 1029 : 		object_camera_direction,
; 1030 : 		object_unit_pos;
; 1031 : 
; 1032 : 	object_3d_scene_database_entry
; 1033 : 		*scene;
; 1034 : 
; 1035 : 	viewpoint
; 1036 : 		old_object_vp;
; 1037 : 
; 1038 : 	set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, FALSE );

  0000c	6a 00		 push	 0
  0000e	6a 1c		 push	 28			; 0000001cH
  00010	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1039 : 
; 1040 : 	//
; 1041 : 	// Set the scene pointer
; 1042 : 	//
; 1043 : 
; 1044 : 	scene = &objects_3d_scene_database[obj->object_number];

  00015	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00018	69 48 04 e0 00
	00 00		 imul	 ecx, DWORD PTR [eax+4], 224
  0001f	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?objects_3d_scene_database@@3PAUOBJECT_3D_SCENE_DATABASE_ENTRY@@A ; objects_3d_scene_database
  00025	89 4d d4	 mov	 DWORD PTR _scene$[ebp], ecx

; 1045 : 
; 1046 : 	//
; 1047 : 	// Set up the texture animations for this object.
; 1048 : 	//
; 1049 : 
; 1050 : 	initialise_object_texture_animations ( obj );

  00028	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?initialise_object_texture_animations@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; initialise_object_texture_animations

; 1051 : 
; 1052 : 	//
; 1053 : 	// Set up the object drawing global variables
; 1054 : 	//
; 1055 : 
; 1056 : 	object_3d_points_current_base = 0;

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_points_current_base@@3HA, 0 ; object_3d_points_current_base

; 1057 : 	object_3d_object_current_base = 0;

  0003b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_current_base@@3HA, 0 ; object_3d_object_current_base

; 1058 : 	object_3d_light_3d_current_base = 0;

  00045	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_light_3d_current_base@@3HA, 0 ; object_3d_light_3d_current_base

; 1059 : 
; 1060 : 	current_3d_object_is_flat = object_is_flat;

  0004f	8b 45 0c	 mov	 eax, DWORD PTR _object_is_flat$[ebp]
  00052	a3 00 00 00 00	 mov	 DWORD PTR ?current_3d_object_is_flat@@3HA, eax ; current_3d_object_is_flat

; 1061 : 
; 1062 : 	current_object_3d_light_maps_enabled = obj->object_internal_lighting;

  00057	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0005a	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0005d	c1 e9 03	 shr	 ecx, 3
  00060	83 e1 01	 and	 ecx, 1
  00063	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, ecx ; current_object_3d_light_maps_enabled

; 1063 : 
; 1064 : 	//
; 1065 : 	// Get the object's position relative to the camera
; 1066 : 	//
; 1067 : 
; 1068 : 	current_object_3d_relative_position = &obj->view_position;

  00069	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006c	83 c0 38	 add	 eax, 56			; 00000038H
  0006f	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 1069 : 
; 1070 : 	{
; 1071 : 
; 1072 : 		float
; 1073 : 			fog_intensity;
; 1074 : 
; 1075 : 		int
; 1076 : 			ifog_intensity;
; 1077 : 
; 1078 : 		fog_intensity = get_fog_distance_value ( current_object_3d_relative_position->z );

  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00079	51		 push	 ecx
  0007a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0007f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00084	e8 00 00 00 00	 call	 ?get_fog_distance_value@@YGMM@Z ; get_fog_distance_value
  00089	d9 5d a0	 fstp	 DWORD PTR _fog_intensity$13[ebp]

; 1079 : 
; 1080 : 		asm_convert_float_to_int ( fog_intensity, &ifog_intensity );

  0008c	8d 45 9c	 lea	 eax, DWORD PTR _ifog_intensity$12[ebp]
  0008f	50		 push	 eax
  00090	51		 push	 ecx
  00091	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fog_intensity$13[ebp]
  00096	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009b	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1081 : 
; 1082 : 		set_d3d_fog_face_intensity ( ifog_intensity );

  000a0	8b 45 9c	 mov	 eax, DWORD PTR _ifog_intensity$12[ebp]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ?set_d3d_fog_face_intensity@@YGXH@Z ; set_d3d_fog_face_intensity

; 1083 : 	}
; 1084 : 
; 1085 : 	//
; 1086 : 	// Set the main objects' scaling values
; 1087 : 	//
; 1088 : 
; 1089 : 	object_3d_scale.x = obj->relative_scale.x;

  000a9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ac	f3 0f 10 40 44	 movss	 xmm0, DWORD PTR [eax+68]
  000b1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A, xmm0

; 1090 : 	object_3d_scale.y = obj->relative_scale.y;

  000b9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000bc	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
  000c1	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4, xmm0

; 1091 : 	object_3d_scale.z = obj->relative_scale.z;

  000c9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000cc	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  000d1	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8, xmm0

; 1092 : 
; 1093 : 	//
; 1094 : 	// Set the object dissolve variables
; 1095 : 	//
; 1096 : 
; 1097 : 	current_object_3d_dissolve_value = obj->object_dissolve_value;

  000d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000dc	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  000df	c1 e9 04	 shr	 ecx, 4
  000e2	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000e8	88 0d 00 00 00
	00		 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, cl ; current_object_3d_dissolve_value

; 1098 : 	current_object_3d_dissolve_factor = current_object_3d_dissolve_value;

  000ee	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000f5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 1099 : 	current_object_3d_dissolve_factor /= 255.0;

  00101	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00109	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00111	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00115	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 1100 : 
; 1101 : 	//
; 1102 : 	// Calculate the object's rotation matrix, to transform its 3d points relative to the view.
; 1103 : 	//
; 1104 : 
; 1105 : 	rotation_3d[0][0] = ( obj->vp.xv.x * visual_3d_vp->xv.x + obj->vp.xv.y * visual_3d_vp->xv.y + obj->vp.xv.z * visual_3d_vp->xv.z );

  0011d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00126	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0012b	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  00130	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00138	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  0013d	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  00142	f3 0f 58 c1	 addss	 xmm0, xmm1
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00149	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0014f	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  00154	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00159	f3 0f 58 c1	 addss	 xmm0, xmm1
  0015d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00162	6b c8 00	 imul	 ecx, eax, 0
  00165	ba 04 00 00 00	 mov	 edx, 4
  0016a	6b c2 00	 imul	 eax, edx, 0
  0016d	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 1106 : 	rotation_3d[0][1] = ( obj->vp.xv.x * visual_3d_vp->yv.x + obj->vp.xv.y * visual_3d_vp->yv.y + obj->vp.xv.z * visual_3d_vp->yv.z );

  00176	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00179	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0017f	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00184	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  00189	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00191	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  00196	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  0019b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0019f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001a8	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  001ad	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  001b2	f3 0f 58 c1	 addss	 xmm0, xmm1
  001b6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001bb	6b c8 00	 imul	 ecx, eax, 0
  001be	ba 04 00 00 00	 mov	 edx, 4
  001c3	c1 e2 00	 shl	 edx, 0
  001c6	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 1107 : 	rotation_3d[0][2] = ( obj->vp.xv.x * visual_3d_vp->zv.x + obj->vp.xv.y * visual_3d_vp->zv.y + obj->vp.xv.z * visual_3d_vp->zv.z );

  001cf	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001d8	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  001dd	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  001e2	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001ea	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  001ef	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  001f4	f3 0f 58 c1	 addss	 xmm0, xmm1
  001f8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00201	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  00206	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0020b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0020f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00214	6b c8 00	 imul	 ecx, eax, 0
  00217	ba 04 00 00 00	 mov	 edx, 4
  0021c	d1 e2		 shl	 edx, 1
  0021e	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 1108 : 
; 1109 : 	rotation_3d[1][0] = ( obj->vp.yv.x * visual_3d_vp->xv.x + obj->vp.yv.y * visual_3d_vp->xv.y + obj->vp.yv.z * visual_3d_vp->xv.z );

  00227	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0022a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00230	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00235	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  0023a	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0023d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00242	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  00247	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  0024c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00250	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00253	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00259	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  0025e	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00263	f3 0f 58 c1	 addss	 xmm0, xmm1
  00267	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0026c	c1 e0 00	 shl	 eax, 0
  0026f	b9 04 00 00 00	 mov	 ecx, 4
  00274	6b d1 00	 imul	 edx, ecx, 0
  00277	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1110 : 	rotation_3d[1][1] = ( obj->vp.yv.x * visual_3d_vp->yv.x + obj->vp.yv.y * visual_3d_vp->yv.y + obj->vp.yv.z * visual_3d_vp->yv.z );

  00280	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00283	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00289	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0028e	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  00293	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00296	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0029b	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  002a0	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  002a5	f3 0f 58 c1	 addss	 xmm0, xmm1
  002a9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002b2	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  002b7	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  002bc	f3 0f 58 c1	 addss	 xmm0, xmm1
  002c0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002c5	c1 e0 00	 shl	 eax, 0
  002c8	b9 04 00 00 00	 mov	 ecx, 4
  002cd	c1 e1 00	 shl	 ecx, 0
  002d0	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1111 : 	rotation_3d[1][2] = ( obj->vp.yv.x * visual_3d_vp->zv.x + obj->vp.yv.y * visual_3d_vp->zv.y + obj->vp.yv.z * visual_3d_vp->zv.z );

  002d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002e2	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  002e7	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  002ec	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  002ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f4	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  002f9	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  002fe	f3 0f 58 c1	 addss	 xmm0, xmm1
  00302	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00305	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0030b	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00310	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00315	f3 0f 58 c1	 addss	 xmm0, xmm1
  00319	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0031e	c1 e0 00	 shl	 eax, 0
  00321	b9 04 00 00 00	 mov	 ecx, 4
  00326	d1 e1		 shl	 ecx, 1
  00328	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1112 : 
; 1113 : 	rotation_3d[2][0] = ( obj->vp.zv.x * visual_3d_vp->xv.x + obj->vp.zv.y * visual_3d_vp->xv.y + obj->vp.zv.z * visual_3d_vp->xv.z );

  00331	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00334	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0033a	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0033f	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  00344	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0034c	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  00351	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  00356	f3 0f 58 c1	 addss	 xmm0, xmm1
  0035a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0035d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00363	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  00368	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  0036d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00371	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00376	d1 e0		 shl	 eax, 1
  00378	b9 04 00 00 00	 mov	 ecx, 4
  0037d	6b d1 00	 imul	 edx, ecx, 0
  00380	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1114 : 	rotation_3d[2][1] = ( obj->vp.zv.x * visual_3d_vp->yv.x + obj->vp.zv.y * visual_3d_vp->yv.y + obj->vp.zv.z * visual_3d_vp->yv.z );

  00389	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0038c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00392	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00397	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0039c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003a4	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  003a9	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  003ae	f3 0f 58 c1	 addss	 xmm0, xmm1
  003b2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003bb	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  003c0	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  003c5	f3 0f 58 c1	 addss	 xmm0, xmm1
  003c9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003ce	d1 e0		 shl	 eax, 1
  003d0	b9 04 00 00 00	 mov	 ecx, 4
  003d5	c1 e1 00	 shl	 ecx, 0
  003d8	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1115 : 	rotation_3d[2][2] = ( obj->vp.zv.x * visual_3d_vp->zv.x + obj->vp.zv.y * visual_3d_vp->zv.y + obj->vp.zv.z * visual_3d_vp->zv.z );

  003e1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003ea	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  003ef	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  003f4	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003fc	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  00401	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00406	f3 0f 58 c1	 addss	 xmm0, xmm1
  0040a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0040d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00413	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  00418	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0041d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00421	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00426	d1 e0		 shl	 eax, 1
  00428	b9 04 00 00 00	 mov	 ecx, 4
  0042d	d1 e1		 shl	 ecx, 1
  0042f	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 1116 : 
; 1117 : 	rotation_3d[0][0] *= object_3d_scale.x;

  00438	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0043d	6b c8 00	 imul	 ecx, eax, 0
  00440	ba 04 00 00 00	 mov	 edx, 4
  00445	6b c2 00	 imul	 eax, edx, 0
  00448	f3 0f 10 84 01
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  00451	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00459	b9 04 00 00 00	 mov	 ecx, 4
  0045e	6b d1 00	 imul	 edx, ecx, 0
  00461	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00466	6b c8 00	 imul	 ecx, eax, 0
  00469	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 1118 : 	rotation_3d[1][0] *= object_3d_scale.y;

  00472	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00477	c1 e0 00	 shl	 eax, 0
  0047a	b9 04 00 00 00	 mov	 ecx, 4
  0047f	6b d1 00	 imul	 edx, ecx, 0
  00482	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  0048b	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00493	b8 04 00 00 00	 mov	 eax, 4
  00498	6b c8 00	 imul	 ecx, eax, 0
  0049b	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004a0	c1 e2 00	 shl	 edx, 0
  004a3	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 1119 : 	rotation_3d[2][0] *= object_3d_scale.z;

  004ac	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004b1	d1 e0		 shl	 eax, 1
  004b3	b9 04 00 00 00	 mov	 ecx, 4
  004b8	6b d1 00	 imul	 edx, ecx, 0
  004bb	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  004c4	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  004cc	b8 04 00 00 00	 mov	 eax, 4
  004d1	6b c8 00	 imul	 ecx, eax, 0
  004d4	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004d9	d1 e2		 shl	 edx, 1
  004db	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 1120 : 
; 1121 : 	rotation_3d[0][1] *= object_3d_scale.x;

  004e4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004e9	6b c8 00	 imul	 ecx, eax, 0
  004ec	ba 04 00 00 00	 mov	 edx, 4
  004f1	c1 e2 00	 shl	 edx, 0
  004f4	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  004fd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00505	b8 04 00 00 00	 mov	 eax, 4
  0050a	c1 e0 00	 shl	 eax, 0
  0050d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00512	6b d1 00	 imul	 edx, ecx, 0
  00515	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 1122 : 	rotation_3d[1][1] *= object_3d_scale.y;

  0051e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00523	c1 e0 00	 shl	 eax, 0
  00526	b9 04 00 00 00	 mov	 ecx, 4
  0052b	c1 e1 00	 shl	 ecx, 0
  0052e	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00537	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  0053f	ba 04 00 00 00	 mov	 edx, 4
  00544	c1 e2 00	 shl	 edx, 0
  00547	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0054c	c1 e0 00	 shl	 eax, 0
  0054f	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1123 : 	rotation_3d[2][1] *= object_3d_scale.z;

  00558	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0055d	d1 e0		 shl	 eax, 1
  0055f	b9 04 00 00 00	 mov	 ecx, 4
  00564	c1 e1 00	 shl	 ecx, 0
  00567	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00570	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00578	ba 04 00 00 00	 mov	 edx, 4
  0057d	c1 e2 00	 shl	 edx, 0
  00580	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00585	d1 e0		 shl	 eax, 1
  00587	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1124 : 
; 1125 : 	rotation_3d[0][2] *= object_3d_scale.x;

  00590	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00595	6b c8 00	 imul	 ecx, eax, 0
  00598	ba 04 00 00 00	 mov	 edx, 4
  0059d	d1 e2		 shl	 edx, 1
  0059f	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  005a8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  005b0	b8 04 00 00 00	 mov	 eax, 4
  005b5	d1 e0		 shl	 eax, 1
  005b7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005bc	6b d1 00	 imul	 edx, ecx, 0
  005bf	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 1126 : 	rotation_3d[1][2] *= object_3d_scale.y;

  005c8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005cd	c1 e0 00	 shl	 eax, 0
  005d0	b9 04 00 00 00	 mov	 ecx, 4
  005d5	d1 e1		 shl	 ecx, 1
  005d7	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  005e0	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  005e8	ba 04 00 00 00	 mov	 edx, 4
  005ed	d1 e2		 shl	 edx, 1
  005ef	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005f4	c1 e0 00	 shl	 eax, 0
  005f7	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1127 : 	rotation_3d[2][2] *= object_3d_scale.z;

  00600	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00605	d1 e0		 shl	 eax, 1
  00607	b9 04 00 00 00	 mov	 ecx, 4
  0060c	d1 e1		 shl	 ecx, 1
  0060e	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00617	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0061f	ba 04 00 00 00	 mov	 edx, 4
  00624	d1 e2		 shl	 edx, 1
  00626	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0062b	d1 e0		 shl	 eax, 1
  0062d	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 1128 : 
; 1129 : 	//
; 1130 : 	// Calculate the vector from the object to the viewpoint, in the object's view system
; 1131 : 	//
; 1132 : 
; 1133 : 	old_object_vp.position = obj->vp.position;

  00636	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00639	83 c0 08	 add	 eax, 8
  0063c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0063e	89 4d a4	 mov	 DWORD PTR _old_object_vp$[ebp], ecx
  00641	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00644	89 55 a8	 mov	 DWORD PTR _old_object_vp$[ebp+4], edx
  00647	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0064a	89 45 ac	 mov	 DWORD PTR _old_object_vp$[ebp+8], eax

; 1134 : 
; 1135 : 	{
; 1136 : 
; 1137 : 		vec3d
; 1138 : 			v1,
; 1139 : 			v2;
; 1140 : 
; 1141 : 		multiply_matrix3x3_vec3d ( &v1, visual_3d_vp->attitude, current_object_3d_relative_position );

  0064d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00652	50		 push	 eax
  00653	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00659	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0065c	51		 push	 ecx
  0065d	8d 55 90	 lea	 edx, DWORD PTR _v1$11[ebp]
  00660	52		 push	 edx
  00661	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1142 : 		v1.x = -v1.x;

  00666	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _v1$11[ebp]
  0066b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00672	f3 0f 11 45 90	 movss	 DWORD PTR _v1$11[ebp], xmm0

; 1143 : 		v1.y = -v1.y;

  00677	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v1$11[ebp+4]
  0067c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00683	f3 0f 11 45 94	 movss	 DWORD PTR _v1$11[ebp+4], xmm0

; 1144 : 		v1.z = -v1.z;

  00688	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _v1$11[ebp+8]
  0068d	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00694	f3 0f 11 45 98	 movss	 DWORD PTR _v1$11[ebp+8], xmm0

; 1145 : 
; 1146 : 		obj->vp.x = visual_3d_vp->x - v1.x;

  00699	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0069e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006a2	f3 0f 5c 45 90	 subss	 xmm0, DWORD PTR _v1$11[ebp]
  006a7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006aa	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1147 : 		obj->vp.y = visual_3d_vp->y - v1.y;

  006af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  006b4	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006b9	f3 0f 5c 45 94	 subss	 xmm0, DWORD PTR _v1$11[ebp+4]
  006be	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006c1	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 1148 : 		obj->vp.z = visual_3d_vp->z - v1.z;

  006c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  006cb	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  006d0	f3 0f 5c 45 98	 subss	 xmm0, DWORD PTR _v1$11[ebp+8]
  006d5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006d8	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 1149 : 
; 1150 : 		v2.x = ( v1.x * obj->vp.xv.x );

  006dd	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  006e0	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _v1$11[ebp]
  006e5	f3 0f 59 40 14	 mulss	 xmm0, DWORD PTR [eax+20]
  006ea	f3 0f 11 45 84	 movss	 DWORD PTR _v2$10[ebp], xmm0

; 1151 : 		v2.x += ( v1.y * obj->vp.xv.y );

  006ef	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  006f2	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v1$11[ebp+4]
  006f7	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  006fc	f3 0f 58 45 84	 addss	 xmm0, DWORD PTR _v2$10[ebp]
  00701	f3 0f 11 45 84	 movss	 DWORD PTR _v2$10[ebp], xmm0

; 1152 : 		v2.x += ( v1.z * obj->vp.xv.z );

  00706	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00709	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _v1$11[ebp+8]
  0070e	f3 0f 59 40 1c	 mulss	 xmm0, DWORD PTR [eax+28]
  00713	f3 0f 58 45 84	 addss	 xmm0, DWORD PTR _v2$10[ebp]
  00718	f3 0f 11 45 84	 movss	 DWORD PTR _v2$10[ebp], xmm0

; 1153 : 
; 1154 : 		v2.y = ( v1.x * obj->vp.yv.x );

  0071d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00720	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _v1$11[ebp]
  00725	f3 0f 59 40 20	 mulss	 xmm0, DWORD PTR [eax+32]
  0072a	f3 0f 11 45 88	 movss	 DWORD PTR _v2$10[ebp+4], xmm0

; 1155 : 		v2.y += ( v1.y * obj->vp.yv.y );

  0072f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00732	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v1$11[ebp+4]
  00737	f3 0f 59 40 24	 mulss	 xmm0, DWORD PTR [eax+36]
  0073c	f3 0f 58 45 88	 addss	 xmm0, DWORD PTR _v2$10[ebp+4]
  00741	f3 0f 11 45 88	 movss	 DWORD PTR _v2$10[ebp+4], xmm0

; 1156 : 		v2.y += ( v1.z * obj->vp.yv.z );

  00746	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00749	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _v1$11[ebp+8]
  0074e	f3 0f 59 40 28	 mulss	 xmm0, DWORD PTR [eax+40]
  00753	f3 0f 58 45 88	 addss	 xmm0, DWORD PTR _v2$10[ebp+4]
  00758	f3 0f 11 45 88	 movss	 DWORD PTR _v2$10[ebp+4], xmm0

; 1157 : 
; 1158 : 		v2.z = ( v1.x * obj->vp.zv.x );

  0075d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00760	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _v1$11[ebp]
  00765	f3 0f 59 40 2c	 mulss	 xmm0, DWORD PTR [eax+44]
  0076a	f3 0f 11 45 8c	 movss	 DWORD PTR _v2$10[ebp+8], xmm0

; 1159 : 		v2.z += ( v1.y * obj->vp.zv.y );

  0076f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00772	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _v1$11[ebp+4]
  00777	f3 0f 59 40 30	 mulss	 xmm0, DWORD PTR [eax+48]
  0077c	f3 0f 58 45 8c	 addss	 xmm0, DWORD PTR _v2$10[ebp+8]
  00781	f3 0f 11 45 8c	 movss	 DWORD PTR _v2$10[ebp+8], xmm0

; 1160 : 		v2.z += ( v1.z * obj->vp.zv.z );

  00786	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00789	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _v1$11[ebp+8]
  0078e	f3 0f 59 40 34	 mulss	 xmm0, DWORD PTR [eax+52]
  00793	f3 0f 58 45 8c	 addss	 xmm0, DWORD PTR _v2$10[ebp+8]
  00798	f3 0f 11 45 8c	 movss	 DWORD PTR _v2$10[ebp+8], xmm0

; 1161 : 
; 1162 : 		object_unit_pos.x = -v2.x;

  0079d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _v2$10[ebp]
  007a2	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007a9	f3 0f 11 45 d8	 movss	 DWORD PTR _object_unit_pos$[ebp], xmm0

; 1163 : 		object_unit_pos.y = -v2.y;

  007ae	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _v2$10[ebp+4]
  007b3	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007ba	f3 0f 11 45 dc	 movss	 DWORD PTR _object_unit_pos$[ebp+4], xmm0

; 1164 : 		object_unit_pos.z = -v2.z;

  007bf	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _v2$10[ebp+8]
  007c4	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007cb	f3 0f 11 45 e0	 movss	 DWORD PTR _object_unit_pos$[ebp+8], xmm0

; 1165 : 
; 1166 : 		normalise_any_3d_vector ( &object_unit_pos );

  007d0	8d 45 d8	 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  007d3	50		 push	 eax
  007d4	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  007d9	dd d8		 fstp	 ST(0)

; 1167 : 
; 1168 : 		current_object_3d_unit_position = &object_unit_pos;

  007db	8d 45 d8	 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  007de	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A, eax ; current_object_3d_unit_position

; 1169 : 	}
; 1170 : 
; 1171 : 	//
; 1172 : 	// Get the object number
; 1173 : 	//
; 1174 : 
; 1175 : #if DEBUG_MANUAL_VIEWS
; 1176 : 
; 1177 : 	object_number = get_object_approximation_number ( obj->object_number, 0, &object_3d_approximation_level );
; 1178 : 
; 1179 : #else
; 1180 : 
; 1181 : 	if ( object_3d_perform_lod_calculations )

  007e3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?object_3d_perform_lod_calculations@@3HA, 0 ; object_3d_perform_lod_calculations
  007ea	74 26		 je	 SHORT $LN11@draw_hardw

; 1182 : 	{
; 1183 : 
; 1184 : 		object_number = get_object_approximation_number ( obj->object_number, current_object_3d_relative_position->z, &object_3d_approximation_level );

  007ec	68 00 00 00 00	 push	 OFFSET ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  007f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  007f6	51		 push	 ecx
  007f7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  007fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00801	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00804	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00807	52		 push	 edx
  00808	e8 00 00 00 00	 call	 ?get_object_approximation_number@@YGHHMPAH@Z ; get_object_approximation_number
  0080d	89 45 fc	 mov	 DWORD PTR _object_number$[ebp], eax

; 1185 : 	}
; 1186 : 	else

  00810	eb 1d		 jmp	 SHORT $LN12@draw_hardw
$LN11@draw_hardw:

; 1187 : 	{
; 1188 : 
; 1189 : 		object_number = get_object_approximation_number ( obj->object_number, 0, &object_3d_approximation_level );

  00812	68 00 00 00 00	 push	 OFFSET ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  00817	51		 push	 ecx
  00818	0f 57 c0	 xorps	 xmm0, xmm0
  0081b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00820	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00823	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00826	51		 push	 ecx
  00827	e8 00 00 00 00	 call	 ?get_object_approximation_number@@YGHHMPAH@Z ; get_object_approximation_number
  0082c	89 45 fc	 mov	 DWORD PTR _object_number$[ebp], eax
$LN12@draw_hardw:

; 1190 : 	}
; 1191 : 
; 1192 : #endif
; 1193 : 
; 1194 : 	{
; 1195 : 
; 1196 : 		vec3d
; 1197 : 			rel_pos;
; 1198 : 
; 1199 : 		//
; 1200 : 		// Calculate the relative camera position in the object viewspace
; 1201 : 		//
; 1202 : 
; 1203 : 		rel_pos.x = visual_3d_vp->x - obj->vp.x;

  0082f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00834	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00837	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0083b	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00840	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _rel_pos$9[ebp], xmm0

; 1204 : 		rel_pos.y = visual_3d_vp->y - obj->vp.y;

  00848	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0084d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00850	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00855	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  0085a	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _rel_pos$9[ebp+4], xmm0

; 1205 : 		rel_pos.z = visual_3d_vp->z - obj->vp.z;

  00862	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00867	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0086a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0086f	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00874	f3 0f 11 45 80	 movss	 DWORD PTR _rel_pos$9[ebp+8], xmm0

; 1206 : 
; 1207 : 		object_camera_position.x = ( rel_pos.x * obj->vp.attitude[0][0] + rel_pos.y * obj->vp.attitude[0][1] + rel_pos.z * obj->vp.attitude[0][2] );

  00879	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0087e	6b c8 00	 imul	 ecx, eax, 0
  00881	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00884	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00888	b9 04 00 00 00	 mov	 ecx, 4
  0088d	6b d1 00	 imul	 edx, ecx, 0
  00890	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _rel_pos$9[ebp]
  00898	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0089d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008a2	6b c8 00	 imul	 ecx, eax, 0
  008a5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  008a8	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  008ac	b9 04 00 00 00	 mov	 ecx, 4
  008b1	c1 e1 00	 shl	 ecx, 0
  008b4	f3 0f 10 8d 7c
	ff ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+4]
  008bc	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  008c1	f3 0f 58 c1	 addss	 xmm0, xmm1
  008c5	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  008ca	6b c2 00	 imul	 eax, edx, 0
  008cd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  008d0	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  008d4	b8 04 00 00 00	 mov	 eax, 4
  008d9	d1 e0		 shl	 eax, 1
  008db	f3 0f 10 4d 80	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+8]
  008e0	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  008e5	f3 0f 58 c1	 addss	 xmm0, xmm1
  008e9	f3 0f 11 45 f0	 movss	 DWORD PTR _object_camera_position$[ebp], xmm0

; 1208 : 		object_camera_position.y = ( rel_pos.x * obj->vp.attitude[1][0] + rel_pos.y * obj->vp.attitude[1][1] + rel_pos.z * obj->vp.attitude[1][2] );

  008ee	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008f3	c1 e0 00	 shl	 eax, 0
  008f6	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  008f9	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  008fd	b8 04 00 00 00	 mov	 eax, 4
  00902	6b c8 00	 imul	 ecx, eax, 0
  00905	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _rel_pos$9[ebp]
  0090d	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00912	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00917	c1 e2 00	 shl	 edx, 0
  0091a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0091d	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00921	ba 04 00 00 00	 mov	 edx, 4
  00926	c1 e2 00	 shl	 edx, 0
  00929	f3 0f 10 8d 7c
	ff ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+4]
  00931	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00936	f3 0f 58 c1	 addss	 xmm0, xmm1
  0093a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0093f	c1 e0 00	 shl	 eax, 0
  00942	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00945	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00949	b8 04 00 00 00	 mov	 eax, 4
  0094e	d1 e0		 shl	 eax, 1
  00950	f3 0f 10 4d 80	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+8]
  00955	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0095a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0095e	f3 0f 11 45 f4	 movss	 DWORD PTR _object_camera_position$[ebp+4], xmm0

; 1209 : 		object_camera_position.z = ( rel_pos.x * obj->vp.attitude[2][0] + rel_pos.y * obj->vp.attitude[2][1] + rel_pos.z * obj->vp.attitude[2][2] );

  00963	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00968	d1 e0		 shl	 eax, 1
  0096a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0096d	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00971	b8 04 00 00 00	 mov	 eax, 4
  00976	6b c8 00	 imul	 ecx, eax, 0
  00979	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _rel_pos$9[ebp]
  00981	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00986	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0098b	d1 e2		 shl	 edx, 1
  0098d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00990	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00994	ba 04 00 00 00	 mov	 edx, 4
  00999	c1 e2 00	 shl	 edx, 0
  0099c	f3 0f 10 8d 7c
	ff ff ff	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+4]
  009a4	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  009a9	f3 0f 58 c1	 addss	 xmm0, xmm1
  009ad	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009b2	d1 e0		 shl	 eax, 1
  009b4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  009b7	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  009bb	b8 04 00 00 00	 mov	 eax, 4
  009c0	d1 e0		 shl	 eax, 1
  009c2	f3 0f 10 4d 80	 movss	 xmm1, DWORD PTR _rel_pos$9[ebp+8]
  009c7	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  009cc	f3 0f 58 c1	 addss	 xmm0, xmm1
  009d0	f3 0f 11 45 f8	 movss	 DWORD PTR _object_camera_position$[ebp+8], xmm0

; 1210 : 
; 1211 : 		object_camera_direction.x = ( visual_3d_vp->zv.x * obj->vp.attitude[0][0] + visual_3d_vp->zv.y * obj->vp.attitude[1][0] + visual_3d_vp->zv.z * obj->vp.attitude[2][0] );

  009d5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009da	6b c8 00	 imul	 ecx, eax, 0
  009dd	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  009e0	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  009e4	b9 04 00 00 00	 mov	 ecx, 4
  009e9	6b d1 00	 imul	 edx, ecx, 0
  009ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  009f2	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  009f7	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  009fc	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00a01	c1 e2 00	 shl	 edx, 0
  00a04	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00a07	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00a0b	ba 04 00 00 00	 mov	 edx, 4
  00a10	6b c2 00	 imul	 eax, edx, 0
  00a13	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a19	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  00a1e	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  00a23	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a27	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a2c	d1 e0		 shl	 eax, 1
  00a2e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00a31	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00a35	b8 04 00 00 00	 mov	 eax, 4
  00a3a	6b c8 00	 imul	 ecx, eax, 0
  00a3d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a42	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00a47	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  00a4c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a50	f3 0f 11 45 e4	 movss	 DWORD PTR _object_camera_direction$[ebp], xmm0

; 1212 : 		object_camera_direction.y = ( visual_3d_vp->zv.x * obj->vp.attitude[0][1] + visual_3d_vp->zv.y * obj->vp.attitude[1][1] + visual_3d_vp->zv.z * obj->vp.attitude[2][1] );

  00a55	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a5a	6b c8 00	 imul	 ecx, eax, 0
  00a5d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00a60	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00a64	b9 04 00 00 00	 mov	 ecx, 4
  00a69	c1 e1 00	 shl	 ecx, 0
  00a6c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a72	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00a77	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00a7c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a81	c1 e0 00	 shl	 eax, 0
  00a84	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00a87	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00a8b	b8 04 00 00 00	 mov	 eax, 4
  00a90	c1 e0 00	 shl	 eax, 0
  00a93	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a99	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00a9e	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00aa3	f3 0f 58 c1	 addss	 xmm0, xmm1
  00aa7	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00aac	d1 e2		 shl	 edx, 1
  00aae	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00ab1	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00ab5	ba 04 00 00 00	 mov	 edx, 4
  00aba	c1 e2 00	 shl	 edx, 0
  00abd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ac2	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00ac7	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00acc	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ad0	f3 0f 11 45 e8	 movss	 DWORD PTR _object_camera_direction$[ebp+4], xmm0

; 1213 : 		object_camera_direction.z = ( visual_3d_vp->zv.x * obj->vp.attitude[0][2] + visual_3d_vp->zv.y * obj->vp.attitude[1][2] + visual_3d_vp->zv.z * obj->vp.attitude[2][2] );

  00ad5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ada	6b c8 00	 imul	 ecx, eax, 0
  00add	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00ae0	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00ae4	b9 04 00 00 00	 mov	 ecx, 4
  00ae9	d1 e1		 shl	 ecx, 1
  00aeb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00af1	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00af6	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00afb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00b00	c1 e0 00	 shl	 eax, 0
  00b03	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00b06	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00b0a	b8 04 00 00 00	 mov	 eax, 4
  00b0f	d1 e0		 shl	 eax, 1
  00b11	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b17	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00b1c	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00b21	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b25	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00b2a	d1 e2		 shl	 edx, 1
  00b2c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00b2f	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00b33	ba 04 00 00 00	 mov	 edx, 4
  00b38	d1 e2		 shl	 edx, 1
  00b3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b3f	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00b44	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00b49	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b4d	f3 0f 11 45 ec	 movss	 DWORD PTR _object_camera_direction$[ebp+8], xmm0

; 1214 : 	}
; 1215 : 
; 1216 : 
; 1217 : 	//
; 1218 : 	//	Set up this objects' object info structure
; 1219 : 	//
; 1220 : 
; 1221 : 	object_3d_object_base[object_3d_object_current_base].lights = NULL;	//light;

  00b52	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b59	c7 80 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+4], 0

; 1222 : 	object_3d_object_base[object_3d_object_current_base].camera_position = object_camera_position;

  00b63	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b6a	05 08 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+8
  00b6f	8b 4d f0	 mov	 ecx, DWORD PTR _object_camera_position$[ebp]
  00b72	89 08		 mov	 DWORD PTR [eax], ecx
  00b74	8b 55 f4	 mov	 edx, DWORD PTR _object_camera_position$[ebp+4]
  00b77	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00b7a	8b 4d f8	 mov	 ecx, DWORD PTR _object_camera_position$[ebp+8]
  00b7d	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1223 : 	object_3d_object_base[object_3d_object_current_base].camera_direction = object_camera_direction;

  00b80	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b87	05 14 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+20
  00b8c	8b 4d e4	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp]
  00b8f	89 08		 mov	 DWORD PTR [eax], ecx
  00b91	8b 55 e8	 mov	 edx, DWORD PTR _object_camera_direction$[ebp+4]
  00b94	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00b97	8b 4d ec	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp+8]
  00b9a	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1224 : 	object_3d_object_base[object_3d_object_current_base].points_base = object_3d_points_current_base;

  00b9d	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00ba4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_points_current_base@@3HA ; object_3d_points_current_base
  00baa	89 88 24 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+36], ecx

; 1225 : 	object_3d_object_base[object_3d_object_current_base].object_number = object_number;

  00bb0	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00bb7	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  00bba	89 88 20 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+32], ecx

; 1226 : 	object_3d_object_base[object_3d_object_current_base].object_vp = &obj->vp;

  00bc0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00bc3	83 c0 08	 add	 eax, 8
  00bc6	6b 0d 00 00 00
	00 2c		 imul	 ecx, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00bcd	89 81 28 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[ecx+40], eax

; 1227 : 
; 1228 : 	current_object_3d_object_base = &object_3d_object_base[object_3d_object_current_base];

  00bd3	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00bda	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; object_3d_object_base
  00bdf	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A, eax ; current_object_3d_object_base

; 1229 : 
; 1230 : 	//
; 1231 : 	// Set up the face sorting variables
; 1232 : 	//
; 1233 : 
; 1234 : 	current_object_3d_translucent_surfaces = NULL;

  00be4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A, 0 ; current_object_3d_translucent_surfaces

; 1235 : 
; 1236 : 	//
; 1237 : 	// Reset the temporary buffered faces
; 1238 : 	//
; 1239 : 
; 1240 : 	reset_temporary_buffered_translucent_polygons ();

  00bee	e8 00 00 00 00	 call	 ?reset_temporary_buffered_translucent_polygons@@YGXXZ ; reset_temporary_buffered_translucent_polygons

; 1241 : 
; 1242 : 	//
; 1243 : 	// Now start transforming etc
; 1244 : 	//
; 1245 : 
; 1246 : 	if ( objects_3d_data[object_number].number_of_points )

  00bf3	6b 45 fc 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00bf7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00bfd	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00c01	85 d2		 test	 edx, edx
  00c03	0f 84 2a 05 00
	00		 je	 $LN16@draw_hardw

; 1247 : 	{
; 1248 : 
; 1249 : 		int
; 1250 : 			object_outcode;
; 1251 : 
; 1252 : 		if ( !get_object_3d_outcode ( object_number, current_object_3d_relative_position, &object_outcode ) )

  00c09	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _object_outcode$8[ebp]
  00c0f	50		 push	 eax
  00c10	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c16	51		 push	 ecx
  00c17	8b 55 fc	 mov	 edx, DWORD PTR _object_number$[ebp]
  00c1a	52		 push	 edx
  00c1b	e8 00 00 00 00	 call	 ?get_object_3d_outcode@@YGHHPAUVEC3D@@PAH@Z ; get_object_3d_outcode
  00c20	85 c0		 test	 eax, eax
  00c22	0f 85 0b 05 00
	00		 jne	 $LN16@draw_hardw

; 1253 : 		{
; 1254 : 
; 1255 : 			matrix4x4
; 1256 : 				matrix;
; 1257 : 
; 1258 : 			//
; 1259 : 			// Set the world transformation matrix
; 1260 : 			//
; 1261 : 
; 1262 : 			matrix[0][0] = obj->vp.attitude[0][0] * object_3d_scale.x;

  00c28	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c2d	6b c8 00	 imul	 ecx, eax, 0
  00c30	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00c33	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00c37	b9 04 00 00 00	 mov	 ecx, 4
  00c3c	6b d1 00	 imul	 edx, ecx, 0
  00c3f	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00c44	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00c4c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c51	6b c8 00	 imul	 ecx, eax, 0
  00c54	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  00c5b	b8 04 00 00 00	 mov	 eax, 4
  00c60	6b c8 00	 imul	 ecx, eax, 0
  00c63	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1263 : 			matrix[0][1] = obj->vp.attitude[0][1] * object_3d_scale.y;

  00c68	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c6d	6b c8 00	 imul	 ecx, eax, 0
  00c70	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00c73	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00c77	b9 04 00 00 00	 mov	 ecx, 4
  00c7c	c1 e1 00	 shl	 ecx, 0
  00c7f	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00c84	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00c8c	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00c91	6b c2 00	 imul	 eax, edx, 0
  00c94	8d 8c 05 34 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$7[ebp+eax]
  00c9b	ba 04 00 00 00	 mov	 edx, 4
  00ca0	c1 e2 00	 shl	 edx, 0
  00ca3	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 1264 : 			matrix[0][2] = obj->vp.attitude[0][2] * object_3d_scale.z;

  00ca8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00cad	6b c8 00	 imul	 ecx, eax, 0
  00cb0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00cb3	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00cb7	b9 04 00 00 00	 mov	 ecx, 4
  00cbc	d1 e1		 shl	 ecx, 1
  00cbe	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00cc3	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00ccb	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00cd0	6b c2 00	 imul	 eax, edx, 0
  00cd3	8d 8c 05 34 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$7[ebp+eax]
  00cda	ba 04 00 00 00	 mov	 edx, 4
  00cdf	d1 e2		 shl	 edx, 1
  00ce1	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 1265 : 			matrix[0][3] = 0;

  00ce6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00ceb	6b c8 00	 imul	 ecx, eax, 0
  00cee	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  00cf5	b8 04 00 00 00	 mov	 eax, 4
  00cfa	6b c8 03	 imul	 ecx, eax, 3
  00cfd	0f 57 c0	 xorps	 xmm0, xmm0
  00d00	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1266 : 
; 1267 : 			matrix[1][0] = obj->vp.attitude[1][0] * object_3d_scale.x;

  00d05	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d0a	c1 e0 00	 shl	 eax, 0
  00d0d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00d10	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00d14	b8 04 00 00 00	 mov	 eax, 4
  00d19	6b c8 00	 imul	 ecx, eax, 0
  00d1c	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00d21	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00d29	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00d2e	c1 e2 00	 shl	 edx, 0
  00d31	8d 84 15 34 ff
	ff ff		 lea	 eax, DWORD PTR _matrix$7[ebp+edx]
  00d38	b9 04 00 00 00	 mov	 ecx, 4
  00d3d	6b d1 00	 imul	 edx, ecx, 0
  00d40	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 1268 : 			matrix[1][1] = obj->vp.attitude[1][1] * object_3d_scale.y;

  00d45	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d4a	c1 e0 00	 shl	 eax, 0
  00d4d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00d50	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00d54	b8 04 00 00 00	 mov	 eax, 4
  00d59	c1 e0 00	 shl	 eax, 0
  00d5c	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00d61	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00d69	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00d6e	c1 e1 00	 shl	 ecx, 0
  00d71	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  00d78	b8 04 00 00 00	 mov	 eax, 4
  00d7d	c1 e0 00	 shl	 eax, 0
  00d80	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1269 : 			matrix[1][2] = obj->vp.attitude[1][2] * object_3d_scale.z;

  00d85	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d8a	c1 e0 00	 shl	 eax, 0
  00d8d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00d90	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00d94	b8 04 00 00 00	 mov	 eax, 4
  00d99	d1 e0		 shl	 eax, 1
  00d9b	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00da0	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00da8	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00dad	c1 e1 00	 shl	 ecx, 0
  00db0	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  00db7	b8 04 00 00 00	 mov	 eax, 4
  00dbc	d1 e0		 shl	 eax, 1
  00dbe	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1270 : 			matrix[1][3] = 0;

  00dc3	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00dc8	c1 e0 00	 shl	 eax, 0
  00dcb	8d 8c 05 34 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$7[ebp+eax]
  00dd2	ba 04 00 00 00	 mov	 edx, 4
  00dd7	6b c2 03	 imul	 eax, edx, 3
  00dda	0f 57 c0	 xorps	 xmm0, xmm0
  00ddd	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1271 : 
; 1272 : 			matrix[2][0] = obj->vp.attitude[2][0] * object_3d_scale.x;

  00de2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00de7	d1 e0		 shl	 eax, 1
  00de9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00dec	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00df0	b8 04 00 00 00	 mov	 eax, 4
  00df5	6b c8 00	 imul	 ecx, eax, 0
  00df8	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00dfd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00e05	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00e0a	d1 e2		 shl	 edx, 1
  00e0c	8d 84 15 34 ff
	ff ff		 lea	 eax, DWORD PTR _matrix$7[ebp+edx]
  00e13	b9 04 00 00 00	 mov	 ecx, 4
  00e18	6b d1 00	 imul	 edx, ecx, 0
  00e1b	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 1273 : 			matrix[2][1] = obj->vp.attitude[2][1] * object_3d_scale.y;

  00e20	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e25	d1 e0		 shl	 eax, 1
  00e27	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00e2a	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00e2e	b8 04 00 00 00	 mov	 eax, 4
  00e33	c1 e0 00	 shl	 eax, 0
  00e36	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00e3b	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00e43	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e48	d1 e1		 shl	 ecx, 1
  00e4a	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  00e51	b8 04 00 00 00	 mov	 eax, 4
  00e56	c1 e0 00	 shl	 eax, 0
  00e59	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1274 : 			matrix[2][2] = obj->vp.attitude[2][2] * object_3d_scale.z;

  00e5e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e63	d1 e0		 shl	 eax, 1
  00e65	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00e68	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00e6c	b8 04 00 00 00	 mov	 eax, 4
  00e71	d1 e0		 shl	 eax, 1
  00e73	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00e78	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00e80	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e85	d1 e1		 shl	 ecx, 1
  00e87	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  00e8e	b8 04 00 00 00	 mov	 eax, 4
  00e93	d1 e0		 shl	 eax, 1
  00e95	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1275 : 			matrix[2][3] = 0;

  00e9a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00e9f	d1 e0		 shl	 eax, 1
  00ea1	8d 8c 05 34 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$7[ebp+eax]
  00ea8	ba 04 00 00 00	 mov	 edx, 4
  00ead	6b c2 03	 imul	 eax, edx, 3
  00eb0	0f 57 c0	 xorps	 xmm0, xmm0
  00eb3	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1276 : 
; 1277 : 
; 1278 : 			{
; 1279 : 
; 1280 : 				vec3d
; 1281 : 					rel;
; 1282 : 
; 1283 : 				rel.x = visual_3d_vp->attitude[0][0] * current_object_3d_relative_position->x +

  00eb8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ebd	6b c8 00	 imul	 ecx, eax, 0
  00ec0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ec6	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00eca	b9 04 00 00 00	 mov	 ecx, 4
  00ecf	6b d1 00	 imul	 edx, ecx, 0
  00ed2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00ed8	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00edd	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00ee1	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00ee6	c1 e2 00	 shl	 edx, 0
  00ee9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00eee	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00ef2	ba 04 00 00 00	 mov	 edx, 4
  00ef7	6b c2 00	 imul	 eax, edx, 0
  00efa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00f00	f3 0f 10 0c 01	 movss	 xmm1, DWORD PTR [ecx+eax]
  00f05	f3 0f 59 4a 04	 mulss	 xmm1, DWORD PTR [edx+4]
  00f0a	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f0e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f13	d1 e0		 shl	 eax, 1
  00f15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f1b	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00f1f	b8 04 00 00 00	 mov	 eax, 4
  00f24	6b c8 00	 imul	 ecx, eax, 0
  00f27	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00f2c	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00f31	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00f36	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f3a	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _rel$6[ebp], xmm0

; 1284 : 							visual_3d_vp->attitude[1][0] * current_object_3d_relative_position->y +
; 1285 : 							visual_3d_vp->attitude[2][0] * current_object_3d_relative_position->z;
; 1286 : 
; 1287 : 				rel.y = visual_3d_vp->attitude[0][1] * current_object_3d_relative_position->x +

  00f42	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f47	6b c8 00	 imul	 ecx, eax, 0
  00f4a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f50	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00f54	b9 04 00 00 00	 mov	 ecx, 4
  00f59	c1 e1 00	 shl	 ecx, 0
  00f5c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00f62	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00f67	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  00f6b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f70	c1 e0 00	 shl	 eax, 0
  00f73	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f79	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00f7d	b8 04 00 00 00	 mov	 eax, 4
  00f82	c1 e0 00	 shl	 eax, 0
  00f85	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00f8b	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00f90	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  00f95	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f99	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00f9e	d1 e2		 shl	 edx, 1
  00fa0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00fa5	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00fa9	ba 04 00 00 00	 mov	 edx, 4
  00fae	c1 e2 00	 shl	 edx, 0
  00fb1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00fb6	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00fbb	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  00fc0	f3 0f 58 c1	 addss	 xmm0, xmm1
  00fc4	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _rel$6[ebp+4], xmm0

; 1288 : 							visual_3d_vp->attitude[1][1] * current_object_3d_relative_position->y +
; 1289 : 							visual_3d_vp->attitude[2][1] * current_object_3d_relative_position->z;
; 1290 : 
; 1291 : 				rel.z = visual_3d_vp->attitude[0][2] * current_object_3d_relative_position->x +

  00fcc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00fd1	6b c8 00	 imul	 ecx, eax, 0
  00fd4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00fda	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00fde	b9 04 00 00 00	 mov	 ecx, 4
  00fe3	d1 e1		 shl	 ecx, 1
  00fe5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00feb	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00ff0	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  00ff4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ff9	c1 e0 00	 shl	 eax, 0
  00ffc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  01002	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  01006	b8 04 00 00 00	 mov	 eax, 4
  0100b	d1 e0		 shl	 eax, 1
  0100d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  01013	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  01018	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  0101d	f3 0f 58 c1	 addss	 xmm0, xmm1
  01021	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01026	d1 e2		 shl	 edx, 1
  01028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0102d	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  01031	ba 04 00 00 00	 mov	 edx, 4
  01036	d1 e2		 shl	 edx, 1
  01038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  0103d	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  01042	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  01047	f3 0f 58 c1	 addss	 xmm0, xmm1
  0104b	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _rel$6[ebp+8], xmm0

; 1292 : 							visual_3d_vp->attitude[1][2] * current_object_3d_relative_position->y +
; 1293 : 							visual_3d_vp->attitude[2][2] * current_object_3d_relative_position->z;
; 1294 : 
; 1295 : 				matrix[3][0] = rel.x;

  01053	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01058	6b c8 03	 imul	 ecx, eax, 3
  0105b	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  01062	b8 04 00 00 00	 mov	 eax, 4
  01067	6b c8 00	 imul	 ecx, eax, 0
  0106a	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _rel$6[ebp]
  01072	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1296 : 				matrix[3][1] = rel.y;

  01077	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0107c	6b c8 03	 imul	 ecx, eax, 3
  0107f	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  01086	b8 04 00 00 00	 mov	 eax, 4
  0108b	c1 e0 00	 shl	 eax, 0
  0108e	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _rel$6[ebp+4]
  01096	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1297 : 				matrix[3][2] = rel.z;

  0109b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  010a0	6b c8 03	 imul	 ecx, eax, 3
  010a3	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  010aa	b8 04 00 00 00	 mov	 eax, 4
  010af	d1 e0		 shl	 eax, 1
  010b1	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _rel$6[ebp+8]
  010b9	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1298 : 				matrix[3][3] = 1;

  010be	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  010c3	6b c8 03	 imul	 ecx, eax, 3
  010c6	8d 94 0d 34 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$7[ebp+ecx]
  010cd	b8 04 00 00 00	 mov	 eax, 4
  010d2	6b c8 03	 imul	 ecx, eax, 3
  010d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  010dd	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1299 : 			}
; 1300 : 
; 1301 : 			memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  010e2	6a 40		 push	 64			; 00000040H
  010e4	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _matrix$7[ebp]
  010ea	50		 push	 eax
  010eb	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  010f0	e8 00 00 00 00	 call	 _memcpy
  010f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1302 : 
; 1303 : 			f3d_set_transform ( D3DTRANSFORMSTATE_WORLD, &d3d_matrix );

  010f8	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  010fd	6a 01		 push	 1
  010ff	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 1304 : 		
; 1305 : 			if ( ( textured_object_rendering_enabled ) || ( infrared_override ) )

  01104	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?textured_object_rendering_enabled@@3HA, 0 ; textured_object_rendering_enabled
  0110b	75 06		 jne	 SHORT $LN17@draw_hardw
  0110d	83 7d 10 00	 cmp	 DWORD PTR _infrared_override$[ebp], 0
  01111	74 11		 je	 SHORT $LN15@draw_hardw
$LN17@draw_hardw:

; 1306 : 			{
; 1307 : 	
; 1308 : 				draw_3d_object_hardware_faces ( object_number, current_object_3d_object_base );

  01113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  01118	50		 push	 eax
  01119	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  0111c	51		 push	 ecx
  0111d	e8 00 00 00 00	 call	 ?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_hardware_faces

; 1309 : 			}
; 1310 : 			else

  01122	eb 0f		 jmp	 SHORT $LN16@draw_hardw
$LN15@draw_hardw:

; 1311 : 			{
; 1312 : 
; 1313 : 				draw_3d_object_untextured_hardware_faces ( object_number, current_object_3d_object_base );

  01124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  01129	50		 push	 eax
  0112a	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  0112d	51		 push	 ecx
  0112e	e8 00 00 00 00	 call	 ?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_untextured_hardware_faces
$LN16@draw_hardw:

; 1314 : 			}
; 1315 : 		}
; 1316 : 	}
; 1317 : 
; 1318 : 	//
; 1319 : 	// Recurse down any sub objects
; 1320 : 	//
; 1321 : 
; 1322 : 	if ( scene->number_of_sub_objects )

  01133	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  01136	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  0113d	0f 84 86 01 00
	00		 je	 $LN6@draw_hardw

; 1323 : 	{
; 1324 : 
; 1325 : 		int
; 1326 : 			count;
; 1327 : 
; 1328 : 		if ( obj->sub_objects )

  01143	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01146	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  0114a	0f 84 c0 00 00
	00		 je	 $LN19@draw_hardw

; 1329 : 		{
; 1330 : 	
; 1331 : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01150	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  01153	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  01159	83 e9 01	 sub	 ecx, 1
  0115c	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], ecx
  01162	eb 0f		 jmp	 SHORT $LN4@draw_hardw
$LN2@draw_hardw:
  01164	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _count$5[ebp]
  0116a	83 e8 01	 sub	 eax, 1
  0116d	89 85 24 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], eax
$LN4@draw_hardw:
  01173	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _count$5[ebp], 0
  0117a	0f 8c 8b 00 00
	00		 jl	 $LN3@draw_hardw

; 1332 : 			{
; 1333 : 	
; 1334 : 				if (	( obj->sub_objects[count].visible_object ) &&
; 1335 : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01180	6b 85 24 ff ff
	ff 30		 imul	 eax, DWORD PTR _count$5[ebp], 48
  01187	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0118a	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0118d	8b 44 02 08	 mov	 eax, DWORD PTR [edx+eax+8]
  01191	83 e0 01	 and	 eax, 1
  01194	74 70		 je	 SHORT $LN21@draw_hardw
  01196	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  0119d	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  011a0	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  011a6	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  011ab	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  011b1	7f 53		 jg	 SHORT $LN21@draw_hardw
  011b3	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  011ba	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  011bd	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  011c3	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  011c8	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  011ce	7c 36		 jl	 SHORT $LN21@draw_hardw

; 1336 : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 1337 : 				{
; 1338 : 	
; 1339 : 					draw_zbuffered_sub_object ( &obj->sub_objects[count], &scene->sub_objects[count], &obj->vp, current_object_3d_relative_position, infrared_override );

  011d0	8b 45 10	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  011d3	50		 push	 eax
  011d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  011da	51		 push	 ecx
  011db	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  011de	83 c2 08	 add	 edx, 8
  011e1	52		 push	 edx
  011e2	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  011e9	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  011ec	03 81 d8 00 00
	00		 add	 eax, DWORD PTR [ecx+216]
  011f2	50		 push	 eax
  011f3	6b 95 24 ff ff
	ff 30		 imul	 edx, DWORD PTR _count$5[ebp], 48
  011fa	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  011fd	03 50 58	 add	 edx, DWORD PTR [eax+88]
  01200	52		 push	 edx
  01201	e8 00 00 00 00	 call	 ?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_zbuffered_sub_object
$LN21@draw_hardw:

; 1340 : 				}
; 1341 : 			}

  01206	e9 59 ff ff ff	 jmp	 $LN2@draw_hardw
$LN3@draw_hardw:

; 1342 : 		}
; 1343 : 		else

  0120b	e9 b9 00 00 00	 jmp	 $LN6@draw_hardw
$LN19@draw_hardw:

; 1344 : 		{
; 1345 : 
; 1346 : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01210	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  01213	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  01219	83 e9 01	 sub	 ecx, 1
  0121c	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], ecx
  01222	eb 0f		 jmp	 SHORT $LN7@draw_hardw
$LN5@draw_hardw:
  01224	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _count$5[ebp]
  0122a	83 e8 01	 sub	 eax, 1
  0122d	89 85 24 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], eax
$LN7@draw_hardw:
  01233	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _count$5[ebp], 0
  0123a	0f 8c 89 00 00
	00		 jl	 $LN6@draw_hardw

; 1347 : 			{
; 1348 : 	
; 1349 : 				if (	( scene->sub_objects[count].default_visibility ) &&
; 1350 : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01240	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  01247	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  0124a	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  01250	8a 44 02 07	 mov	 al, BYTE PTR [edx+eax+7]
  01254	c0 e8 06	 shr	 al, 6
  01257	24 01		 and	 al, 1
  01259	0f b6 c8	 movzx	 ecx, al
  0125c	85 c9		 test	 ecx, ecx
  0125e	74 64		 je	 SHORT $LN22@draw_hardw
  01260	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  01267	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  0126a	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  01270	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  01275	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  0127b	7f 47		 jg	 SHORT $LN22@draw_hardw
  0127d	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  01284	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01287	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  0128d	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  01292	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01298	7c 2a		 jl	 SHORT $LN22@draw_hardw

; 1351 : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 1352 : 				{
; 1353 : 	
; 1354 : 					draw_zbuffered_sub_object ( NULL, &scene->sub_objects[count], &obj->vp, current_object_3d_relative_position, infrared_override );

  0129a	8b 45 10	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  0129d	50		 push	 eax
  0129e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  012a4	51		 push	 ecx
  012a5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  012a8	83 c2 08	 add	 edx, 8
  012ab	52		 push	 edx
  012ac	6b 85 24 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  012b3	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  012b6	03 81 d8 00 00
	00		 add	 eax, DWORD PTR [ecx+216]
  012bc	50		 push	 eax
  012bd	6a 00		 push	 0
  012bf	e8 00 00 00 00	 call	 ?draw_zbuffered_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_zbuffered_sub_object
$LN22@draw_hardw:

; 1355 : 				}
; 1356 : 			}

  012c4	e9 5b ff ff ff	 jmp	 $LN5@draw_hardw
$LN6@draw_hardw:

; 1357 : 		}
; 1358 : 	}
; 1359 : 
; 1360 : 	//
; 1361 : 	// If there are any temporary tranlucent polygons, draw them now
; 1362 : 	//
; 1363 : 
; 1364 : 	if ( get_number_of_temporary_translucent_polygons () )

  012c9	e8 00 00 00 00	 call	 ?get_number_of_temporary_translucent_polygons@@YGHXZ ; get_number_of_temporary_translucent_polygons
  012ce	85 c0		 test	 eax, eax
  012d0	74 38		 je	 SHORT $LN25@draw_hardw

; 1365 : 	{
; 1366 : 	
; 1367 : 		//
; 1368 : 		// Set the translucent rendering mode - and turn off specular highlighting
; 1369 : 		//
; 1370 : 		
; 1371 : 		set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  012d2	6a 00		 push	 0
  012d4	6a 1d		 push	 29			; 0000001dH
  012d6	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1372 : 
; 1373 : 		if ( d3d_transparency_enabled )

  012db	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_transparency_enabled@@3HA, 0 ; d3d_transparency_enabled
  012e2	74 07		 je	 SHORT $LN24@draw_hardw

; 1374 : 		{
; 1375 : 
; 1376 : 			draw_temporary_translucent_polygons ();

  012e4	e8 00 00 00 00	 call	 ?draw_temporary_translucent_polygons@@YGXXZ ; draw_temporary_translucent_polygons

; 1377 : 		}
; 1378 : 		else

  012e9	eb 1f		 jmp	 SHORT $LN25@draw_hardw
$LN24@draw_hardw:

; 1379 : 		{
; 1380 : 	
; 1381 : 			set_d3d_alpha_fog_zbuffer ( TRUE, FALSE, TRUE, FALSE );

  012eb	6a 00		 push	 0
  012ed	6a 01		 push	 1
  012ef	6a 00		 push	 0
  012f1	6a 01		 push	 1
  012f3	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer

; 1382 : 		
; 1383 : 			draw_temporary_translucent_polygons ();

  012f8	e8 00 00 00 00	 call	 ?draw_temporary_translucent_polygons@@YGXXZ ; draw_temporary_translucent_polygons

; 1384 : 	
; 1385 : 			set_d3d_alpha_fog_zbuffer ( FALSE, TRUE, TRUE, TRUE );

  012fd	6a 01		 push	 1
  012ff	6a 01		 push	 1
  01301	6a 01		 push	 1
  01303	6a 00		 push	 0
  01305	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer
$LN25@draw_hardw:

; 1386 : 		}
; 1387 : 	}
; 1388 : 
; 1389 : 	if ( current_object_3d_translucent_surfaces )

  0130a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A, 0 ; current_object_3d_translucent_surfaces
  01311	74 65		 je	 SHORT $LN29@draw_hardw

; 1390 : 	{
; 1391 : 
; 1392 : 		if ( obj->requires_immediate_render )

  01313	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01316	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01319	d1 e9		 shr	 ecx, 1
  0131b	83 e1 01	 and	 ecx, 1
  0131e	74 0d		 je	 SHORT $LN27@draw_hardw

; 1393 : 		{
; 1394 : 
; 1395 : 			draw_3d_translucent_object ( current_object_3d_translucent_surfaces );

  01320	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A ; current_object_3d_translucent_surfaces
  01325	50		 push	 eax
  01326	e8 00 00 00 00	 call	 ?draw_3d_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_translucent_object

; 1396 : 		}
; 1397 : 		else

  0132b	eb 4b		 jmp	 SHORT $LN29@draw_hardw
$LN27@draw_hardw:

; 1398 : 		{
; 1399 : 
; 1400 : 			scene_slot_drawing_list
; 1401 : 				*buffer;
; 1402 : 		
; 1403 : 			//
; 1404 : 			// Insert surface list into renderer
; 1405 : 			//
; 1406 : 
; 1407 : 			buffer = get_3d_scene_slot ();

  0132d	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  01332	89 85 20 ff ff
	ff		 mov	 DWORD PTR _buffer$4[ebp], eax

; 1408 : 	
; 1409 : 			if ( buffer )

  01338	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR _buffer$4[ebp], 0
  0133f	74 37		 je	 SHORT $LN29@draw_hardw

; 1410 : 			{
; 1411 : 
; 1412 : 				buffer->type = OBJECT_3D_DRAW_TYPE_ZBUFFERED_TRANSLUCENT_OBJECT;

  01341	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  01347	c7 40 08 16 00
	00 00		 mov	 DWORD PTR [eax+8], 22	; 00000016H

; 1413 : 	
; 1414 : 				buffer->z = *( ( int * ) &obj->view_position );

  0134e	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  01354	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01357	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0135a	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1415 : 	
; 1416 : 				buffer->translucent_surfaces = current_object_3d_translucent_surfaces;

  0135d	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  01363	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A ; current_object_3d_translucent_surfaces
  01369	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1417 : 	
; 1418 : 				insert_transparent_buffer_into_3d_scene ( buffer );

  0136c	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  01372	50		 push	 eax
  01373	e8 00 00 00 00	 call	 ?insert_transparent_buffer_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_transparent_buffer_into_3d_scene
$LN29@draw_hardw:

; 1419 : 			}
; 1420 : 		}
; 1421 : 	}
; 1422 : 
; 1423 : 	if ( ( obj->object_sprite_lights ) && ( scene->number_of_sprite_lights ) )

  01378	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0137b	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0137e	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  01381	83 e1 01	 and	 ecx, 1
  01384	0f 84 19 03 00
	00		 je	 $LN9@draw_hardw
  0138a	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  0138d	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  01391	0f 84 0c 03 00
	00		 je	 $LN9@draw_hardw

; 1424 : 	{
; 1425 : 
; 1426 : 		object_3d_sprite
; 1427 : 			sprite;
; 1428 : 
; 1429 : 		int
; 1430 : 			count;
; 1431 : 
; 1432 : 		for ( count = 0; count < scene->number_of_sprite_lights; count++ )

  01397	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _count$2[ebp], 0
  013a1	eb 0f		 jmp	 SHORT $LN10@draw_hardw
$LN8@draw_hardw:
  013a3	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _count$2[ebp]
  013a9	83 c0 01	 add	 eax, 1
  013ac	89 85 fc fe ff
	ff		 mov	 DWORD PTR _count$2[ebp], eax
$LN10@draw_hardw:
  013b2	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  013b5	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _count$2[ebp]
  013bb	3b 48 30	 cmp	 ecx, DWORD PTR [eax+48]
  013be	0f 8d df 02 00
	00		 jge	 $LN9@draw_hardw

; 1433 : 		{
; 1434 : 
; 1435 : 			vec3d
; 1436 : 				position;
; 1437 : 
; 1438 : 			position.x = scene->sprite_lights[count].position.x * obj->vp.attitude[0][0] +

  013c4	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  013cb	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  013ce	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  013d1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  013d6	6b c9 00	 imul	 ecx, ecx, 0
  013d9	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  013dc	8d 4c 0e 14	 lea	 ecx, DWORD PTR [esi+ecx+20]
  013e0	be 04 00 00 00	 mov	 esi, 4
  013e5	6b f6 00	 imul	 esi, esi, 0
  013e8	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  013ed	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  013f2	6b 95 fc fe ff
	ff 1c		 imul	 edx, DWORD PTR _count$2[ebp], 28
  013f9	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  013fc	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  013ff	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01404	c1 e0 00	 shl	 eax, 0
  01407	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  0140a	8d 44 06 14	 lea	 eax, DWORD PTR [esi+eax+20]
  0140e	be 04 00 00 00	 mov	 esi, 4
  01413	6b f6 00	 imul	 esi, esi, 0
  01416	f3 0f 10 4c 11
	04		 movss	 xmm1, DWORD PTR [ecx+edx+4]
  0141c	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  01421	f3 0f 58 c1	 addss	 xmm0, xmm1
  01425	6b 8d fc fe ff
	ff 1c		 imul	 ecx, DWORD PTR _count$2[ebp], 28
  0142c	8b 55 d4	 mov	 edx, DWORD PTR _scene$[ebp]
  0142f	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  01432	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01437	d1 e2		 shl	 edx, 1
  01439	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  0143c	8d 54 16 14	 lea	 edx, DWORD PTR [esi+edx+20]
  01440	be 04 00 00 00	 mov	 esi, 4
  01445	6b f6 00	 imul	 esi, esi, 0
  01448	f3 0f 10 4c 08
	08		 movss	 xmm1, DWORD PTR [eax+ecx+8]
  0144e	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  01453	f3 0f 58 c1	 addss	 xmm0, xmm1
  01457	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _position$1[ebp], xmm0

; 1439 : 								scene->sprite_lights[count].position.y * obj->vp.attitude[1][0] +
; 1440 : 								scene->sprite_lights[count].position.z * obj->vp.attitude[2][0];
; 1441 : 
; 1442 : 			position.y = scene->sprite_lights[count].position.x * obj->vp.attitude[0][1] +

  0145f	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01466	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01469	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0146c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01471	6b c9 00	 imul	 ecx, ecx, 0
  01474	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01477	8d 4c 0e 14	 lea	 ecx, DWORD PTR [esi+ecx+20]
  0147b	be 04 00 00 00	 mov	 esi, 4
  01480	c1 e6 00	 shl	 esi, 0
  01483	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01488	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0148d	6b 95 fc fe ff
	ff 1c		 imul	 edx, DWORD PTR _count$2[ebp], 28
  01494	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  01497	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0149a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0149f	c1 e0 00	 shl	 eax, 0
  014a2	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  014a5	8d 44 06 14	 lea	 eax, DWORD PTR [esi+eax+20]
  014a9	be 04 00 00 00	 mov	 esi, 4
  014ae	c1 e6 00	 shl	 esi, 0
  014b1	f3 0f 10 4c 11
	04		 movss	 xmm1, DWORD PTR [ecx+edx+4]
  014b7	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  014bc	f3 0f 58 c1	 addss	 xmm0, xmm1
  014c0	6b 8d fc fe ff
	ff 1c		 imul	 ecx, DWORD PTR _count$2[ebp], 28
  014c7	8b 55 d4	 mov	 edx, DWORD PTR _scene$[ebp]
  014ca	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  014cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  014d2	d1 e2		 shl	 edx, 1
  014d4	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  014d7	8d 54 16 14	 lea	 edx, DWORD PTR [esi+edx+20]
  014db	be 04 00 00 00	 mov	 esi, 4
  014e0	c1 e6 00	 shl	 esi, 0
  014e3	f3 0f 10 4c 08
	08		 movss	 xmm1, DWORD PTR [eax+ecx+8]
  014e9	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  014ee	f3 0f 58 c1	 addss	 xmm0, xmm1
  014f2	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _position$1[ebp+4], xmm0

; 1443 : 								scene->sprite_lights[count].position.y * obj->vp.attitude[1][1] +
; 1444 : 								scene->sprite_lights[count].position.z * obj->vp.attitude[2][1];
; 1445 : 
; 1446 : 			position.z = scene->sprite_lights[count].position.x * obj->vp.attitude[0][2] +

  014fa	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01501	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01504	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  01507	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0150c	6b c9 00	 imul	 ecx, ecx, 0
  0150f	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01512	8d 4c 0e 14	 lea	 ecx, DWORD PTR [esi+ecx+20]
  01516	be 04 00 00 00	 mov	 esi, 4
  0151b	d1 e6		 shl	 esi, 1
  0151d	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01522	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  01527	6b 95 fc fe ff
	ff 1c		 imul	 edx, DWORD PTR _count$2[ebp], 28
  0152e	8b 45 d4	 mov	 eax, DWORD PTR _scene$[ebp]
  01531	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  01534	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01539	c1 e0 00	 shl	 eax, 0
  0153c	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  0153f	8d 44 06 14	 lea	 eax, DWORD PTR [esi+eax+20]
  01543	be 04 00 00 00	 mov	 esi, 4
  01548	d1 e6		 shl	 esi, 1
  0154a	f3 0f 10 4c 11
	04		 movss	 xmm1, DWORD PTR [ecx+edx+4]
  01550	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  01555	f3 0f 58 c1	 addss	 xmm0, xmm1
  01559	6b 8d fc fe ff
	ff 1c		 imul	 ecx, DWORD PTR _count$2[ebp], 28
  01560	8b 55 d4	 mov	 edx, DWORD PTR _scene$[ebp]
  01563	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  01566	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0156b	d1 e2		 shl	 edx, 1
  0156d	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01570	8d 54 16 14	 lea	 edx, DWORD PTR [esi+edx+20]
  01574	be 04 00 00 00	 mov	 esi, 4
  01579	d1 e6		 shl	 esi, 1
  0157b	f3 0f 10 4c 08
	08		 movss	 xmm1, DWORD PTR [eax+ecx+8]
  01581	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  01586	f3 0f 58 c1	 addss	 xmm0, xmm1
  0158a	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _position$1[ebp+8], xmm0

; 1447 : 								scene->sprite_lights[count].position.y * obj->vp.attitude[1][2] +
; 1448 : 								scene->sprite_lights[count].position.z * obj->vp.attitude[2][2];
; 1449 : 
; 1450 : 			position.x += obj->vp.position.x;

  01592	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01595	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _position$1[ebp]
  0159d	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  015a2	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _position$1[ebp], xmm0

; 1451 : 			position.y += obj->vp.position.y;

  015aa	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  015ad	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _position$1[ebp+4]
  015b5	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  015ba	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _position$1[ebp+4], xmm0

; 1452 : 			position.z += obj->vp.position.z;

  015c2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  015c5	f3 0f 10 85 f8
	fe ff ff	 movss	 xmm0, DWORD PTR _position$1[ebp+8]
  015cd	f3 0f 58 40 10	 addss	 xmm0, DWORD PTR [eax+16]
  015d2	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _position$1[ebp+8], xmm0

; 1453 : 
; 1454 : 			sprite.position = position;

  015da	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _position$1[ebp]
  015e0	89 85 00 ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp], eax
  015e6	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _position$1[ebp+4]
  015ec	89 8d 04 ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp+4], ecx
  015f2	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _position$1[ebp+8]
  015f8	89 95 08 ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp+8], edx

; 1455 : 			sprite.radius = scene->sprite_lights[count].scale.x * 4;

  015fe	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01605	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01608	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0160b	f3 0f 10 44 02
	0c		 movss	 xmm0, DWORD PTR [edx+eax+12]
  01611	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  01619	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _sprite$3[ebp+16], xmm0

; 1456 : 			sprite.red = scene->sprite_lights[count].colour.red;

  01621	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01628	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  0162b	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0162e	8a 44 02 1a	 mov	 al, BYTE PTR [edx+eax+26]
  01632	88 85 0e ff ff
	ff		 mov	 BYTE PTR _sprite$3[ebp+14], al

; 1457 : 			sprite.green = scene->sprite_lights[count].colour.green;

  01638	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  0163f	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01642	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  01645	8a 44 02 19	 mov	 al, BYTE PTR [edx+eax+25]
  01649	88 85 0d ff ff
	ff		 mov	 BYTE PTR _sprite$3[ebp+13], al

; 1458 : 			sprite.blue = scene->sprite_lights[count].colour.blue;

  0164f	6b 85 fc fe ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01656	8b 4d d4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01659	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0165c	8a 44 02 18	 mov	 al, BYTE PTR [edx+eax+24]
  01660	88 85 0c ff ff
	ff		 mov	 BYTE PTR _sprite$3[ebp+12], al

; 1459 : 			sprite.additive = TRUE;

  01666	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _sprite$3[ebp+24], 1

; 1460 : 			sprite.texture = system_textures[TEXTURE_INDEX_FLARE001];

  01670	b8 04 00 00 00	 mov	 eax, 4
  01675	69 c8 6e 06 00
	00		 imul	 ecx, eax, 1646
  0167b	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx]
  01681	89 95 1c ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp+28], edx

; 1461 : 
; 1462 : 			insert_zbiased_object_into_3d_scene ( OBJECT_3D_DRAW_TYPE_SPRITE, &sprite, 0 );

  01687	51		 push	 ecx
  01688	0f 57 c0	 xorps	 xmm0, xmm0
  0168b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01690	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _sprite$3[ebp]
  01696	50		 push	 eax
  01697	6a 10		 push	 16			; 00000010H
  01699	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene

; 1463 : 		}

  0169e	e9 00 fd ff ff	 jmp	 $LN8@draw_hardw
$LN9@draw_hardw:

; 1464 : 	}
; 1465 : 
; 1466 : 	obj->vp.position = old_object_vp.position;

  016a3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  016a6	83 c0 08	 add	 eax, 8
  016a9	8b 4d a4	 mov	 ecx, DWORD PTR _old_object_vp$[ebp]
  016ac	89 08		 mov	 DWORD PTR [eax], ecx
  016ae	8b 55 a8	 mov	 edx, DWORD PTR _old_object_vp$[ebp+4]
  016b1	89 50 04	 mov	 DWORD PTR [eax+4], edx
  016b4	8b 4d ac	 mov	 ecx, DWORD PTR _old_object_vp$[ebp+8]
  016b7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1467 : }

  016ba	5f		 pop	 edi
  016bb	5e		 pop	 esi
  016bc	5b		 pop	 ebx
  016bd	8b e5		 mov	 esp, ebp
  016bf	5d		 pop	 ebp
  016c0	c2 0c 00	 ret	 12			; 0000000cH
?draw_hardware_zbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z ENDP ; draw_hardware_zbuffered_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dobjdrh.c
;	COMDAT ?draw_hardware_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@H@Z
_TEXT	SEGMENT
_position$1 = -240					; size = 12
_count$2 = -228						; size = 4
_sprite$3 = -224					; size = 32
_buffer$4 = -192					; size = 4
_count$5 = -188						; size = 4
_rel$6 = -184						; size = 12
_posn$7 = -172						; size = 12
_matrix$8 = -160					; size = 64
_object_outcode$9 = -96					; size = 4
_rel_pos$10 = -92					; size = 12
_z$11 = -80						; size = 4
_y$12 = -76						; size = 4
_x$13 = -72						; size = 4
_ifog_intensity$14 = -68				; size = 4
_fog_intensity$15 = -64					; size = 4
_scene$ = -60						; size = 4
_object_unit_pos$ = -56					; size = 12
_object_pos$ = -44					; size = 12
_object_camera_direction$ = -32				; size = 12
_object_camera_position$ = -20				; size = 12
_light$ = -8						; size = 4
_object_number$ = -4					; size = 4
_obj$ = 8						; size = 4
_infrared_override$ = 12				; size = 4
?draw_hardware_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@H@Z PROC ; draw_hardware_3d_object, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 109  : 
; 110  : 	int
; 111  : 		object_number;
; 112  : 
; 113  : 	light_3d_source
; 114  : 		*light;
; 115  : 
; 116  : 	vec3d
; 117  : 		object_camera_position,
; 118  : 		object_camera_direction,
; 119  : 		object_pos,
; 120  : 		object_unit_pos;
; 121  : 
; 122  : 	object_3d_scene_database_entry
; 123  : 		*scene;
; 124  : 
; 125  : 	// DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG
; 126  : 	//
; 127  : 	// Turn fogging OFF for now
; 128  : 	//
; 129  : 	// DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG
; 130  : 
; 131  : 	set_d3d_int_state ( D3DRENDERSTATE_FOGVERTEXMODE, D3DFOG_LINEAR );

  0000c	6a 03		 push	 3
  0000e	68 8c 00 00 00	 push	 140			; 0000008cH
  00013	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 132  : 
; 133  : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  00018	6a 03		 push	 3
  0001a	6a 16		 push	 22			; 00000016H
  0001c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 134  : 
; 135  : 	//
; 136  : 	// Set the scene pointer
; 137  : 	//
; 138  : 
; 139  : 	scene = &objects_3d_scene_database[obj->object_number];

  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	69 48 04 e0 00
	00 00		 imul	 ecx, DWORD PTR [eax+4], 224
  0002b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?objects_3d_scene_database@@3PAUOBJECT_3D_SCENE_DATABASE_ENTRY@@A ; objects_3d_scene_database
  00031	89 4d c4	 mov	 DWORD PTR _scene$[ebp], ecx

; 140  : 
; 141  : 	//
; 142  : 	// Set up the texture animations for this object.
; 143  : 	//
; 144  : 
; 145  : 	initialise_object_texture_animations ( obj );

  00034	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?initialise_object_texture_animations@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; initialise_object_texture_animations

; 146  : 
; 147  : 	//
; 148  : 	// Set up the object drawing global variables
; 149  : 	//
; 150  : 
; 151  : 	object_3d_points_current_base = 0;

  0003d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_points_current_base@@3HA, 0 ; object_3d_points_current_base

; 152  : 	object_3d_object_current_base = 0;

  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_object_current_base@@3HA, 0 ; object_3d_object_current_base

; 153  : 	object_3d_light_3d_current_base = 0;

  00051	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_light_3d_current_base@@3HA, 0 ; object_3d_light_3d_current_base

; 154  : 
; 155  : 	current_3d_object_is_flat = FALSE;

  0005b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_3d_object_is_flat@@3HA, 0 ; current_3d_object_is_flat

; 156  : 
; 157  : 	current_object_3d_light_maps_enabled = obj->object_internal_lighting;

  00065	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00068	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0006b	c1 e9 03	 shr	 ecx, 3
  0006e	83 e1 01	 and	 ecx, 1
  00071	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, ecx ; current_object_3d_light_maps_enabled

; 158  : 
; 159  : 	//
; 160  : 	// Get the object's position relative to the camera
; 161  : 	//
; 162  : 
; 163  : 	current_object_3d_relative_position = &obj->view_position;	//rel_vp.position;

  00077	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0007a	83 c0 38	 add	 eax, 56			; 00000038H
  0007d	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A, eax ; current_object_3d_relative_position

; 164  : 
; 165  : 	{
; 166  : 
; 167  : 		float
; 168  : 			fog_intensity;
; 169  : 
; 170  : 		int
; 171  : 			ifog_intensity;
; 172  : 
; 173  : 		fog_intensity = get_fog_distance_value ( current_object_3d_relative_position->z );

  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00087	51		 push	 ecx
  00088	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	e8 00 00 00 00	 call	 ?get_fog_distance_value@@YGMM@Z ; get_fog_distance_value
  00097	d9 5d c0	 fstp	 DWORD PTR _fog_intensity$15[ebp]

; 174  : 
; 175  : 		asm_convert_float_to_int ( fog_intensity, &ifog_intensity );

  0009a	8d 45 bc	 lea	 eax, DWORD PTR _ifog_intensity$14[ebp]
  0009d	50		 push	 eax
  0009e	51		 push	 ecx
  0009f	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _fog_intensity$15[ebp]
  000a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a9	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 176  : 
; 177  : 		set_d3d_fog_face_intensity ( ifog_intensity );

  000ae	8b 45 bc	 mov	 eax, DWORD PTR _ifog_intensity$14[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?set_d3d_fog_face_intensity@@YGXH@Z ; set_d3d_fog_face_intensity

; 178  : 	}
; 179  : 
; 180  : 	//
; 181  : 	// Set the main objects' scaling values
; 182  : 	//
; 183  : 
; 184  : 	object_3d_scale.x = obj->relative_scale.x;

  000b7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ba	f3 0f 10 40 44	 movss	 xmm0, DWORD PTR [eax+68]
  000bf	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A, xmm0

; 185  : 	object_3d_scale.y = obj->relative_scale.y;

  000c7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ca	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
  000cf	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4, xmm0

; 186  : 	object_3d_scale.z = obj->relative_scale.z;

  000d7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000da	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  000df	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8, xmm0

; 187  : 
; 188  : 	//
; 189  : 	// Set the object dissolve variables
; 190  : 	//
; 191  : 
; 192  : 	current_object_3d_dissolve_value = obj->object_dissolve_value;

  000e7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ea	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  000ed	c1 e9 04	 shr	 ecx, 4
  000f0	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000f6	88 0d 00 00 00
	00		 mov	 BYTE PTR ?current_object_3d_dissolve_value@@3EA, cl ; current_object_3d_dissolve_value

; 193  : 	current_object_3d_dissolve_factor = current_object_3d_dissolve_value;

  000fc	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00103	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00107	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 194  : 	current_object_3d_dissolve_factor /= 255.0;

  0010f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00117	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0011f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00123	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?current_object_3d_dissolve_factor@@3MA, xmm0

; 195  : 
; 196  : 	//
; 197  : 	// Calculate the object's rotation matrix, to transform its 3d points relative to the view.
; 198  : 	//
; 199  : 
; 200  : 	rotation_3d[0][0] = ( obj->vp.xv.x * visual_3d_vp->xv.x + obj->vp.xv.y * visual_3d_vp->xv.y + obj->vp.xv.z * visual_3d_vp->xv.z );

  0012b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0012e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00134	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00139	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  0013e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00141	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00146	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  0014b	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  00150	f3 0f 58 c1	 addss	 xmm0, xmm1
  00154	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00157	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0015d	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  00162	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00167	f3 0f 58 c1	 addss	 xmm0, xmm1
  0016b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00170	6b c8 00	 imul	 ecx, eax, 0
  00173	ba 04 00 00 00	 mov	 edx, 4
  00178	6b c2 00	 imul	 eax, edx, 0
  0017b	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 201  : 	rotation_3d[0][1] = ( obj->vp.xv.x * visual_3d_vp->yv.x + obj->vp.xv.y * visual_3d_vp->yv.y + obj->vp.xv.z * visual_3d_vp->yv.z );

  00184	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00187	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0018d	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00192	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  00197	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0019a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0019f	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  001a4	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  001a9	f3 0f 58 c1	 addss	 xmm0, xmm1
  001ad	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001b6	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  001bb	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  001c0	f3 0f 58 c1	 addss	 xmm0, xmm1
  001c4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001c9	6b c8 00	 imul	 ecx, eax, 0
  001cc	ba 04 00 00 00	 mov	 edx, 4
  001d1	c1 e2 00	 shl	 edx, 0
  001d4	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 202  : 	rotation_3d[0][2] = ( obj->vp.xv.x * visual_3d_vp->zv.x + obj->vp.xv.y * visual_3d_vp->zv.y + obj->vp.xv.z * visual_3d_vp->zv.z );

  001dd	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001e6	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  001eb	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  001f0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001f8	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  001fd	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00202	f3 0f 58 c1	 addss	 xmm0, xmm1
  00206	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00209	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0020f	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  00214	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00219	f3 0f 58 c1	 addss	 xmm0, xmm1
  0021d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00222	6b c8 00	 imul	 ecx, eax, 0
  00225	ba 04 00 00 00	 mov	 edx, 4
  0022a	d1 e2		 shl	 edx, 1
  0022c	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 203  : 
; 204  : 	rotation_3d[1][0] = ( obj->vp.yv.x * visual_3d_vp->xv.x + obj->vp.yv.y * visual_3d_vp->xv.y + obj->vp.yv.z * visual_3d_vp->xv.z );

  00235	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00238	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0023e	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00243	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  00248	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0024b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00250	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  00255	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  0025a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0025e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00261	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00267	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  0026c	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00271	f3 0f 58 c1	 addss	 xmm0, xmm1
  00275	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0027a	c1 e0 00	 shl	 eax, 0
  0027d	b9 04 00 00 00	 mov	 ecx, 4
  00282	6b d1 00	 imul	 edx, ecx, 0
  00285	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 205  : 	rotation_3d[1][1] = ( obj->vp.yv.x * visual_3d_vp->yv.x + obj->vp.yv.y * visual_3d_vp->yv.y + obj->vp.yv.z * visual_3d_vp->yv.z );

  0028e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00291	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00297	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0029c	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  002a1	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  002a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002a9	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  002ae	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  002b3	f3 0f 58 c1	 addss	 xmm0, xmm1
  002b7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002c0	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  002c5	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  002ca	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ce	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002d3	c1 e0 00	 shl	 eax, 0
  002d6	b9 04 00 00 00	 mov	 ecx, 4
  002db	c1 e1 00	 shl	 ecx, 0
  002de	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 206  : 	rotation_3d[1][2] = ( obj->vp.yv.x * visual_3d_vp->zv.x + obj->vp.yv.y * visual_3d_vp->zv.y + obj->vp.yv.z * visual_3d_vp->zv.z );

  002e7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f0	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  002f5	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  002fa	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  002fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00302	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  00307	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  0030c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00310	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00313	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00319	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  0031e	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00323	f3 0f 58 c1	 addss	 xmm0, xmm1
  00327	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0032c	c1 e0 00	 shl	 eax, 0
  0032f	b9 04 00 00 00	 mov	 ecx, 4
  00334	d1 e1		 shl	 ecx, 1
  00336	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 207  : 
; 208  : 	rotation_3d[2][0] = ( obj->vp.zv.x * visual_3d_vp->xv.x + obj->vp.zv.y * visual_3d_vp->xv.y + obj->vp.zv.z * visual_3d_vp->xv.z );

  0033f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00342	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00348	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0034d	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  00352	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00355	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0035a	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  0035f	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  00364	f3 0f 58 c1	 addss	 xmm0, xmm1
  00368	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0036b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00371	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  00376	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  0037b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0037f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00384	d1 e0		 shl	 eax, 1
  00386	b9 04 00 00 00	 mov	 ecx, 4
  0038b	6b d1 00	 imul	 edx, ecx, 0
  0038e	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 209  : 	rotation_3d[2][1] = ( obj->vp.zv.x * visual_3d_vp->yv.x + obj->vp.zv.y * visual_3d_vp->yv.y + obj->vp.zv.z * visual_3d_vp->yv.z );

  00397	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0039a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003a0	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  003a5	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  003aa	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003b2	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  003b7	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  003bc	f3 0f 58 c1	 addss	 xmm0, xmm1
  003c0	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003c9	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  003ce	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  003d3	f3 0f 58 c1	 addss	 xmm0, xmm1
  003d7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003dc	d1 e0		 shl	 eax, 1
  003de	b9 04 00 00 00	 mov	 ecx, 4
  003e3	c1 e1 00	 shl	 ecx, 0
  003e6	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 210  : 	rotation_3d[2][2] = ( obj->vp.zv.x * visual_3d_vp->zv.x + obj->vp.zv.y * visual_3d_vp->zv.y + obj->vp.zv.z * visual_3d_vp->zv.z );

  003ef	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003f8	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  003fd	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  00402	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00405	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0040a	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  0040f	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00414	f3 0f 58 c1	 addss	 xmm0, xmm1
  00418	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0041b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00421	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  00426	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0042b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0042f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00434	d1 e0		 shl	 eax, 1
  00436	b9 04 00 00 00	 mov	 ecx, 4
  0043b	d1 e1		 shl	 ecx, 1
  0043d	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 211  : 
; 212  : 	rotation_3d[0][0] *= object_3d_scale.x;

  00446	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0044b	6b c8 00	 imul	 ecx, eax, 0
  0044e	ba 04 00 00 00	 mov	 edx, 4
  00453	6b c2 00	 imul	 eax, edx, 0
  00456	f3 0f 10 84 01
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  0045f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00467	b9 04 00 00 00	 mov	 ecx, 4
  0046c	6b d1 00	 imul	 edx, ecx, 0
  0046f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00474	6b c8 00	 imul	 ecx, eax, 0
  00477	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 213  : 	rotation_3d[1][0] *= object_3d_scale.y;

  00480	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00485	c1 e0 00	 shl	 eax, 0
  00488	b9 04 00 00 00	 mov	 ecx, 4
  0048d	6b d1 00	 imul	 edx, ecx, 0
  00490	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  00499	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  004a1	b8 04 00 00 00	 mov	 eax, 4
  004a6	6b c8 00	 imul	 ecx, eax, 0
  004a9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004ae	c1 e2 00	 shl	 edx, 0
  004b1	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 214  : 	rotation_3d[2][0] *= object_3d_scale.z;

  004ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004bf	d1 e0		 shl	 eax, 1
  004c1	b9 04 00 00 00	 mov	 ecx, 4
  004c6	6b d1 00	 imul	 edx, ecx, 0
  004c9	f3 0f 10 84 10
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  004d2	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  004da	b8 04 00 00 00	 mov	 eax, 4
  004df	6b c8 00	 imul	 ecx, eax, 0
  004e2	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004e7	d1 e2		 shl	 edx, 1
  004e9	f3 0f 11 84 0a
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx], xmm0

; 215  : 
; 216  : 	rotation_3d[0][1] *= object_3d_scale.x;

  004f2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004f7	6b c8 00	 imul	 ecx, eax, 0
  004fa	ba 04 00 00 00	 mov	 edx, 4
  004ff	c1 e2 00	 shl	 edx, 0
  00502	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  0050b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00513	b8 04 00 00 00	 mov	 eax, 4
  00518	c1 e0 00	 shl	 eax, 0
  0051b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00520	6b d1 00	 imul	 edx, ecx, 0
  00523	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 217  : 	rotation_3d[1][1] *= object_3d_scale.y;

  0052c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00531	c1 e0 00	 shl	 eax, 0
  00534	b9 04 00 00 00	 mov	 ecx, 4
  00539	c1 e1 00	 shl	 ecx, 0
  0053c	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00545	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  0054d	ba 04 00 00 00	 mov	 edx, 4
  00552	c1 e2 00	 shl	 edx, 0
  00555	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0055a	c1 e0 00	 shl	 eax, 0
  0055d	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 218  : 	rotation_3d[2][1] *= object_3d_scale.z;

  00566	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0056b	d1 e0		 shl	 eax, 1
  0056d	b9 04 00 00 00	 mov	 ecx, 4
  00572	c1 e1 00	 shl	 ecx, 0
  00575	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  0057e	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00586	ba 04 00 00 00	 mov	 edx, 4
  0058b	c1 e2 00	 shl	 edx, 0
  0058e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00593	d1 e0		 shl	 eax, 1
  00595	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 219  : 
; 220  : 	rotation_3d[0][2] *= object_3d_scale.x;

  0059e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005a3	6b c8 00	 imul	 ecx, eax, 0
  005a6	ba 04 00 00 00	 mov	 edx, 4
  005ab	d1 e2		 shl	 edx, 1
  005ad	f3 0f 10 84 11
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  005b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  005be	b8 04 00 00 00	 mov	 eax, 4
  005c3	d1 e0		 shl	 eax, 1
  005c5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005ca	6b d1 00	 imul	 edx, ecx, 0
  005cd	f3 0f 11 84 02
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax], xmm0

; 221  : 	rotation_3d[1][2] *= object_3d_scale.y;

  005d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005db	c1 e0 00	 shl	 eax, 0
  005de	b9 04 00 00 00	 mov	 ecx, 4
  005e3	d1 e1		 shl	 ecx, 1
  005e5	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  005ee	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  005f6	ba 04 00 00 00	 mov	 edx, 4
  005fb	d1 e2		 shl	 edx, 1
  005fd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00602	c1 e0 00	 shl	 eax, 0
  00605	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 222  : 	rotation_3d[2][2] *= object_3d_scale.z;

  0060e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00613	d1 e0		 shl	 eax, 1
  00615	b9 04 00 00 00	 mov	 ecx, 4
  0061a	d1 e1		 shl	 ecx, 1
  0061c	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00625	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  0062d	ba 04 00 00 00	 mov	 edx, 4
  00632	d1 e2		 shl	 edx, 1
  00634	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00639	d1 e0		 shl	 eax, 1
  0063b	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 223  : 
; 224  : 	//
; 225  : 	// Calculate the vector from the object to the viewpoint, in the object's view system
; 226  : 	//
; 227  : 
; 228  : 	{
; 229  : 
; 230  : 		float
; 231  : 			x,
; 232  : 			y,
; 233  : 			z;
; 234  : 
; 235  : 		x = ( ( visual_3d_vp->x - obj->vp.x ) * obj->vp.xv.x );

  00644	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00649	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0064c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00650	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00655	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00658	f3 0f 59 42 14	 mulss	 xmm0, DWORD PTR [edx+20]
  0065d	f3 0f 11 45 b8	 movss	 DWORD PTR _x$13[ebp], xmm0

; 236  : 		x += ( ( visual_3d_vp->y - obj->vp.y ) *  obj->vp.xv.y );

  00662	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00667	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0066a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0066f	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00674	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00677	f3 0f 59 42 18	 mulss	 xmm0, DWORD PTR [edx+24]
  0067c	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _x$13[ebp]
  00681	f3 0f 11 45 b8	 movss	 DWORD PTR _x$13[ebp], xmm0

; 237  : 		x += ( ( visual_3d_vp->z - obj->vp.z ) *  obj->vp.xv.z );

  00686	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0068b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0068e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00693	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00698	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0069b	f3 0f 59 42 1c	 mulss	 xmm0, DWORD PTR [edx+28]
  006a0	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _x$13[ebp]
  006a5	f3 0f 11 45 b8	 movss	 DWORD PTR _x$13[ebp], xmm0

; 238  : 
; 239  : 		y = ( ( visual_3d_vp->x - obj->vp.x ) * obj->vp.yv.x );

  006aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  006af	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006b2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006b6	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  006bb	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  006be	f3 0f 59 42 20	 mulss	 xmm0, DWORD PTR [edx+32]
  006c3	f3 0f 11 45 b4	 movss	 DWORD PTR _y$12[ebp], xmm0

; 240  : 		y += ( ( visual_3d_vp->y - obj->vp.y ) *  obj->vp.yv.y );

  006c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  006cd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006d0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006d5	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  006da	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  006dd	f3 0f 59 42 24	 mulss	 xmm0, DWORD PTR [edx+36]
  006e2	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _y$12[ebp]
  006e7	f3 0f 11 45 b4	 movss	 DWORD PTR _y$12[ebp], xmm0

; 241  : 		y += ( ( visual_3d_vp->z - obj->vp.z ) *  obj->vp.yv.z );

  006ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  006f1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006f4	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  006f9	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  006fe	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00701	f3 0f 59 42 28	 mulss	 xmm0, DWORD PTR [edx+40]
  00706	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _y$12[ebp]
  0070b	f3 0f 11 45 b4	 movss	 DWORD PTR _y$12[ebp], xmm0

; 242  : 
; 243  : 		z = ( ( visual_3d_vp->x - obj->vp.x ) * obj->vp.zv.x );

  00710	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00715	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00718	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0071c	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00721	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00724	f3 0f 59 42 2c	 mulss	 xmm0, DWORD PTR [edx+44]
  00729	f3 0f 11 45 b0	 movss	 DWORD PTR _z$11[ebp], xmm0

; 244  : 		z += ( ( visual_3d_vp->y - obj->vp.y ) *  obj->vp.zv.y );

  0072e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00733	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00736	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0073b	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00740	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00743	f3 0f 59 42 30	 mulss	 xmm0, DWORD PTR [edx+48]
  00748	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _z$11[ebp]
  0074d	f3 0f 11 45 b0	 movss	 DWORD PTR _z$11[ebp], xmm0

; 245  : 		z += ( ( visual_3d_vp->z - obj->vp.z ) *  obj->vp.zv.z );

  00752	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00757	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0075a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0075f	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00764	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00767	f3 0f 59 42 34	 mulss	 xmm0, DWORD PTR [edx+52]
  0076c	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _z$11[ebp]
  00771	f3 0f 11 45 b0	 movss	 DWORD PTR _z$11[ebp], xmm0

; 246  : 
; 247  : 		object_pos.x = x;

  00776	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _x$13[ebp]
  0077b	f3 0f 11 45 d4	 movss	 DWORD PTR _object_pos$[ebp], xmm0

; 248  : 		object_pos.y = y;

  00780	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _y$12[ebp]
  00785	f3 0f 11 45 d8	 movss	 DWORD PTR _object_pos$[ebp+4], xmm0

; 249  : 		object_pos.z = z;

  0078a	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _z$11[ebp]
  0078f	f3 0f 11 45 dc	 movss	 DWORD PTR _object_pos$[ebp+8], xmm0

; 250  : 
; 251  : 		object_unit_pos.x = -object_pos.x;

  00794	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _object_pos$[ebp]
  00799	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007a0	f3 0f 11 45 c8	 movss	 DWORD PTR _object_unit_pos$[ebp], xmm0

; 252  : 		object_unit_pos.y = -object_pos.y;

  007a5	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _object_pos$[ebp+4]
  007aa	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007b1	f3 0f 11 45 cc	 movss	 DWORD PTR _object_unit_pos$[ebp+4], xmm0

; 253  : 		object_unit_pos.z = -object_pos.z;

  007b6	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _object_pos$[ebp+8]
  007bb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007c2	f3 0f 11 45 d0	 movss	 DWORD PTR _object_unit_pos$[ebp+8], xmm0

; 254  : 
; 255  : 		normalise_any_3d_vector ( &object_unit_pos );

  007c7	8d 45 c8	 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  007ca	50		 push	 eax
  007cb	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  007d0	dd d8		 fstp	 ST(0)

; 256  : 
; 257  : 		current_object_3d_unit_position = &object_unit_pos;

  007d2	8d 45 c8	 lea	 eax, DWORD PTR _object_unit_pos$[ebp]
  007d5	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A, eax ; current_object_3d_unit_position

; 258  : 	}
; 259  : 
; 260  : 	//
; 261  : 	// Get the object number
; 262  : 	//
; 263  : 
; 264  : #if DEBUG_MANUAL_VIEWS
; 265  : 
; 266  : 	object_number = get_object_approximation_number ( obj->object_number, 0, &object_3d_approximation_level );
; 267  : 
; 268  : #else
; 269  : 
; 270  : 	if ( object_3d_perform_lod_calculations )

  007da	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?object_3d_perform_lod_calculations@@3HA, 0 ; object_3d_perform_lod_calculations
  007e1	74 26		 je	 SHORT $LN11@draw_hardw

; 271  : 	{
; 272  : 
; 273  : 		object_number = get_object_approximation_number ( obj->object_number, current_object_3d_relative_position->z, &object_3d_approximation_level );

  007e3	68 00 00 00 00	 push	 OFFSET ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  007e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  007ed	51		 push	 ecx
  007ee	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  007f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  007fb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  007fe	52		 push	 edx
  007ff	e8 00 00 00 00	 call	 ?get_object_approximation_number@@YGHHMPAH@Z ; get_object_approximation_number
  00804	89 45 fc	 mov	 DWORD PTR _object_number$[ebp], eax

; 274  : 	}
; 275  : 	else

  00807	eb 1d		 jmp	 SHORT $LN12@draw_hardw
$LN11@draw_hardw:

; 276  : 	{
; 277  : 
; 278  : 		object_number = get_object_approximation_number ( obj->object_number, 0, &object_3d_approximation_level );

  00809	68 00 00 00 00	 push	 OFFSET ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  0080e	51		 push	 ecx
  0080f	0f 57 c0	 xorps	 xmm0, xmm0
  00812	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00817	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0081a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0081d	51		 push	 ecx
  0081e	e8 00 00 00 00	 call	 ?get_object_approximation_number@@YGHHMPAH@Z ; get_object_approximation_number
  00823	89 45 fc	 mov	 DWORD PTR _object_number$[ebp], eax
$LN12@draw_hardw:

; 279  : 	}
; 280  : 
; 281  : #endif
; 282  : 
; 283  : 	//
; 284  : 	// Rotate the light source vector to be relative to the object.
; 285  : 	//
; 286  : 
; 287  : 	light = generate_relative_lights ( &obj->vp, current_object_3d_unit_position, current_3d_lights );

  00826	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A ; current_3d_lights
  0082b	50		 push	 eax
  0082c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_unit_position@@3PAUVEC3D@@A ; current_object_3d_unit_position
  00832	51		 push	 ecx
  00833	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00836	83 c2 08	 add	 edx, 8
  00839	52		 push	 edx
  0083a	e8 00 00 00 00	 call	 ?generate_relative_lights@@YGPAULIGHT_3D_SOURCE@@PAUVIEWPOINT@@PAUVEC3D@@PAU1@@Z ; generate_relative_lights
  0083f	89 45 f8	 mov	 DWORD PTR _light$[ebp], eax

; 288  : 
; 289  : 	{
; 290  : 
; 291  : 		vec3d
; 292  : 			rel_pos;
; 293  : 
; 294  : 		//
; 295  : 		// Calculate the relative camera position in the object viewspace
; 296  : 		//
; 297  : 
; 298  : 		rel_pos.x = visual_3d_vp->x - obj->vp.x;

  00842	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00847	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0084a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0084e	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00853	f3 0f 11 45 a4	 movss	 DWORD PTR _rel_pos$10[ebp], xmm0

; 299  : 		rel_pos.y = visual_3d_vp->y - obj->vp.y;

  00858	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0085d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00860	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00865	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  0086a	f3 0f 11 45 a8	 movss	 DWORD PTR _rel_pos$10[ebp+4], xmm0

; 300  : 		rel_pos.z = visual_3d_vp->z - obj->vp.z;

  0086f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00874	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00877	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0087c	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00881	f3 0f 11 45 ac	 movss	 DWORD PTR _rel_pos$10[ebp+8], xmm0

; 301  : 
; 302  : 		object_camera_position.x = ( rel_pos.x * obj->vp.attitude[0][0] + rel_pos.y * obj->vp.attitude[0][1] + rel_pos.z * obj->vp.attitude[0][2] );

  00886	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0088b	6b c8 00	 imul	 ecx, eax, 0
  0088e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00891	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00895	b9 04 00 00 00	 mov	 ecx, 4
  0089a	6b d1 00	 imul	 edx, ecx, 0
  0089d	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _rel_pos$10[ebp]
  008a2	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  008a7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008ac	6b c8 00	 imul	 ecx, eax, 0
  008af	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  008b2	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  008b6	b9 04 00 00 00	 mov	 ecx, 4
  008bb	c1 e1 00	 shl	 ecx, 0
  008be	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _rel_pos$10[ebp+4]
  008c3	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  008c8	f3 0f 58 c1	 addss	 xmm0, xmm1
  008cc	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  008d1	6b c2 00	 imul	 eax, edx, 0
  008d4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  008d7	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  008db	b8 04 00 00 00	 mov	 eax, 4
  008e0	d1 e0		 shl	 eax, 1
  008e2	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR _rel_pos$10[ebp+8]
  008e7	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  008ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  008f0	f3 0f 11 45 ec	 movss	 DWORD PTR _object_camera_position$[ebp], xmm0

; 303  : 		object_camera_position.y = ( rel_pos.x * obj->vp.attitude[1][0] + rel_pos.y * obj->vp.attitude[1][1] + rel_pos.z * obj->vp.attitude[1][2] );

  008f5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  008fa	c1 e0 00	 shl	 eax, 0
  008fd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00900	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00904	b8 04 00 00 00	 mov	 eax, 4
  00909	6b c8 00	 imul	 ecx, eax, 0
  0090c	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _rel_pos$10[ebp]
  00911	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00916	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0091b	c1 e2 00	 shl	 edx, 0
  0091e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00921	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00925	ba 04 00 00 00	 mov	 edx, 4
  0092a	c1 e2 00	 shl	 edx, 0
  0092d	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _rel_pos$10[ebp+4]
  00932	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00937	f3 0f 58 c1	 addss	 xmm0, xmm1
  0093b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00940	c1 e0 00	 shl	 eax, 0
  00943	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00946	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  0094a	b8 04 00 00 00	 mov	 eax, 4
  0094f	d1 e0		 shl	 eax, 1
  00951	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR _rel_pos$10[ebp+8]
  00956	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0095b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0095f	f3 0f 11 45 f0	 movss	 DWORD PTR _object_camera_position$[ebp+4], xmm0

; 304  : 		object_camera_position.z = ( rel_pos.x * obj->vp.attitude[2][0] + rel_pos.y * obj->vp.attitude[2][1] + rel_pos.z * obj->vp.attitude[2][2] );

  00964	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00969	d1 e0		 shl	 eax, 1
  0096b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0096e	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00972	b8 04 00 00 00	 mov	 eax, 4
  00977	6b c8 00	 imul	 ecx, eax, 0
  0097a	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _rel_pos$10[ebp]
  0097f	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00984	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00989	d1 e2		 shl	 edx, 1
  0098b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0098e	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00992	ba 04 00 00 00	 mov	 edx, 4
  00997	c1 e2 00	 shl	 edx, 0
  0099a	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _rel_pos$10[ebp+4]
  0099f	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  009a4	f3 0f 58 c1	 addss	 xmm0, xmm1
  009a8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009ad	d1 e0		 shl	 eax, 1
  009af	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  009b2	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  009b6	b8 04 00 00 00	 mov	 eax, 4
  009bb	d1 e0		 shl	 eax, 1
  009bd	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR _rel_pos$10[ebp+8]
  009c2	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  009c7	f3 0f 58 c1	 addss	 xmm0, xmm1
  009cb	f3 0f 11 45 f4	 movss	 DWORD PTR _object_camera_position$[ebp+8], xmm0

; 305  : 
; 306  : 		object_camera_direction.x = ( visual_3d_vp->zv.x * obj->vp.attitude[0][0] + visual_3d_vp->zv.y * obj->vp.attitude[1][0] + visual_3d_vp->zv.z * obj->vp.attitude[2][0] );

  009d0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  009d5	6b c8 00	 imul	 ecx, eax, 0
  009d8	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  009db	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  009df	b9 04 00 00 00	 mov	 ecx, 4
  009e4	6b d1 00	 imul	 edx, ecx, 0
  009e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  009ed	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  009f2	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  009f7	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  009fc	c1 e2 00	 shl	 edx, 0
  009ff	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00a02	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00a06	ba 04 00 00 00	 mov	 edx, 4
  00a0b	6b c2 00	 imul	 eax, edx, 0
  00a0e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a14	f3 0f 10 4a 28	 movss	 xmm1, DWORD PTR [edx+40]
  00a19	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  00a1e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a22	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a27	d1 e0		 shl	 eax, 1
  00a29	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00a2c	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00a30	b8 04 00 00 00	 mov	 eax, 4
  00a35	6b c8 00	 imul	 ecx, eax, 0
  00a38	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a3d	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00a42	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  00a47	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a4b	f3 0f 11 45 e0	 movss	 DWORD PTR _object_camera_direction$[ebp], xmm0

; 307  : 		object_camera_direction.y = ( visual_3d_vp->zv.x * obj->vp.attitude[0][1] + visual_3d_vp->zv.y * obj->vp.attitude[1][1] + visual_3d_vp->zv.z * obj->vp.attitude[2][1] );

  00a50	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a55	6b c8 00	 imul	 ecx, eax, 0
  00a58	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00a5b	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00a5f	b9 04 00 00 00	 mov	 ecx, 4
  00a64	c1 e1 00	 shl	 ecx, 0
  00a67	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a6d	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00a72	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00a77	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a7c	c1 e0 00	 shl	 eax, 0
  00a7f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00a82	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00a86	b8 04 00 00 00	 mov	 eax, 4
  00a8b	c1 e0 00	 shl	 eax, 0
  00a8e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00a94	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00a99	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00a9e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00aa2	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00aa7	d1 e2		 shl	 edx, 1
  00aa9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00aac	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00ab0	ba 04 00 00 00	 mov	 edx, 4
  00ab5	c1 e2 00	 shl	 edx, 0
  00ab8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00abd	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00ac2	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00ac7	f3 0f 58 c1	 addss	 xmm0, xmm1
  00acb	f3 0f 11 45 e4	 movss	 DWORD PTR _object_camera_direction$[ebp+4], xmm0

; 308  : 		object_camera_direction.z = ( visual_3d_vp->zv.x * obj->vp.attitude[0][2] + visual_3d_vp->zv.y * obj->vp.attitude[1][2] + visual_3d_vp->zv.z * obj->vp.attitude[2][2] );

  00ad0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ad5	6b c8 00	 imul	 ecx, eax, 0
  00ad8	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00adb	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00adf	b9 04 00 00 00	 mov	 ecx, 4
  00ae4	d1 e1		 shl	 ecx, 1
  00ae6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00aec	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00af1	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00af6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00afb	c1 e0 00	 shl	 eax, 0
  00afe	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00b01	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00b05	b8 04 00 00 00	 mov	 eax, 4
  00b0a	d1 e0		 shl	 eax, 1
  00b0c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b12	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00b17	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00b1c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b20	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00b25	d1 e2		 shl	 edx, 1
  00b27	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00b2a	8d 4c 10 14	 lea	 ecx, DWORD PTR [eax+edx+20]
  00b2e	ba 04 00 00 00	 mov	 edx, 4
  00b33	d1 e2		 shl	 edx, 1
  00b35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00b3a	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00b3f	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00b44	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b48	f3 0f 11 45 e8	 movss	 DWORD PTR _object_camera_direction$[ebp+8], xmm0

; 309  : 	}
; 310  : 
; 311  : 
; 312  : 	//
; 313  : 	//	Set up this objects' object info structure
; 314  : 	//
; 315  : 
; 316  : 	object_3d_object_base[object_3d_object_current_base].lights = light;

  00b4d	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b54	8b 4d f8	 mov	 ecx, DWORD PTR _light$[ebp]
  00b57	89 88 04 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+4], ecx

; 317  : 	object_3d_object_base[object_3d_object_current_base].camera_position = object_camera_position;

  00b5d	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b64	05 08 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+8
  00b69	8b 4d ec	 mov	 ecx, DWORD PTR _object_camera_position$[ebp]
  00b6c	89 08		 mov	 DWORD PTR [eax], ecx
  00b6e	8b 55 f0	 mov	 edx, DWORD PTR _object_camera_position$[ebp+4]
  00b71	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00b74	8b 4d f4	 mov	 ecx, DWORD PTR _object_camera_position$[ebp+8]
  00b77	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 318  : 	object_3d_object_base[object_3d_object_current_base].camera_direction = object_camera_direction;

  00b7a	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b81	05 14 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A+20
  00b86	8b 4d e0	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp]
  00b89	89 08		 mov	 DWORD PTR [eax], ecx
  00b8b	8b 55 e4	 mov	 edx, DWORD PTR _object_camera_direction$[ebp+4]
  00b8e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00b91	8b 4d e8	 mov	 ecx, DWORD PTR _object_camera_direction$[ebp+8]
  00b94	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 319  : 	object_3d_object_base[object_3d_object_current_base].points_base = object_3d_points_current_base;

  00b97	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00b9e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?object_3d_points_current_base@@3HA ; object_3d_points_current_base
  00ba4	89 88 24 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+36], ecx

; 320  : 	object_3d_object_base[object_3d_object_current_base].object_number = object_number;

  00baa	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00bb1	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  00bb4	89 88 20 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[eax+32], ecx

; 321  : 	object_3d_object_base[object_3d_object_current_base].object_vp = &obj->vp;

  00bba	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00bbd	83 c0 08	 add	 eax, 8
  00bc0	6b 0d 00 00 00
	00 2c		 imul	 ecx, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00bc7	89 81 28 00 00
	00		 mov	 DWORD PTR ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A[ecx+40], eax

; 322  : 
; 323  : 	current_object_3d_object_base = &object_3d_object_base[object_3d_object_current_base];

  00bcd	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?object_3d_object_current_base@@3HA, 44 ; object_3d_object_current_base
  00bd4	05 00 00 00 00	 add	 eax, OFFSET ?object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; object_3d_object_base
  00bd9	a3 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A, eax ; current_object_3d_object_base

; 324  : 
; 325  : 	//
; 326  : 	// Set up the face sorting variables
; 327  : 	//
; 328  : 
; 329  : 	current_object_3d_translucent_surfaces = NULL;

  00bde	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A, 0 ; current_object_3d_translucent_surfaces

; 330  : 
; 331  : 	//
; 332  : 	// Reset the temporary buffered faces
; 333  : 	//
; 334  : 
; 335  : 	reset_temporary_buffered_translucent_polygons ();

  00be8	e8 00 00 00 00	 call	 ?reset_temporary_buffered_translucent_polygons@@YGXXZ ; reset_temporary_buffered_translucent_polygons

; 336  : 
; 337  : 	//
; 338  : 	// Now start transforming etc
; 339  : 	//
; 340  : 
; 341  : 	if ( objects_3d_data[object_number].number_of_points )

  00bed	6b 45 fc 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00bf1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00bf7	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00bfb	85 d2		 test	 edx, edx
  00bfd	0f 84 47 05 00
	00		 je	 $LN16@draw_hardw

; 342  : 	{
; 343  : 
; 344  : 		int
; 345  : 			object_outcode;
; 346  : 
; 347  : 		if ( !get_object_3d_outcode ( object_number, current_object_3d_relative_position, &object_outcode ) )

  00c03	8d 45 a0	 lea	 eax, DWORD PTR _object_outcode$9[ebp]
  00c06	50		 push	 eax
  00c07	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c0d	51		 push	 ecx
  00c0e	8b 55 fc	 mov	 edx, DWORD PTR _object_number$[ebp]
  00c11	52		 push	 edx
  00c12	e8 00 00 00 00	 call	 ?get_object_3d_outcode@@YGHHPAUVEC3D@@PAH@Z ; get_object_3d_outcode
  00c17	85 c0		 test	 eax, eax
  00c19	0f 85 2b 05 00
	00		 jne	 $LN16@draw_hardw

; 348  : 		{
; 349  : 
; 350  : 			matrix4x4
; 351  : 				matrix;
; 352  : 
; 353  : 			vec3d
; 354  : 				posn,
; 355  : 				rel;
; 356  : 
; 357  : 			rel.x = current_object_3d_relative_position->x;

  00c1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c24	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c28	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _rel$6[ebp], xmm0

; 358  : 			rel.y = current_object_3d_relative_position->y;

  00c30	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c35	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00c3a	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _rel$6[ebp+4], xmm0

; 359  : 			rel.z = current_object_3d_relative_position->z;

  00c42	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  00c47	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00c4c	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _rel$6[ebp+8], xmm0

; 360  : 
; 361  : 			posn.x = visual_3d_vp->attitude[0][0] * rel.x + visual_3d_vp->attitude[1][0] * rel.y + visual_3d_vp->attitude[2][0] * rel.z;

  00c54	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c59	6b c8 00	 imul	 ecx, eax, 0
  00c5c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c62	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00c66	b9 04 00 00 00	 mov	 ecx, 4
  00c6b	6b d1 00	 imul	 edx, ecx, 0
  00c6e	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00c73	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _rel$6[ebp]
  00c7b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c80	c1 e0 00	 shl	 eax, 0
  00c83	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00c89	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00c8d	b8 04 00 00 00	 mov	 eax, 4
  00c92	6b c8 00	 imul	 ecx, eax, 0
  00c95	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00c9a	f3 0f 59 8d 4c
	ff ff ff	 mulss	 xmm1, DWORD PTR _rel$6[ebp+4]
  00ca2	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ca6	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00cab	d1 e2		 shl	 edx, 1
  00cad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00cb2	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00cb6	ba 04 00 00 00	 mov	 edx, 4
  00cbb	6b c2 00	 imul	 eax, edx, 0
  00cbe	f3 0f 10 0c 01	 movss	 xmm1, DWORD PTR [ecx+eax]
  00cc3	f3 0f 59 8d 50
	ff ff ff	 mulss	 xmm1, DWORD PTR _rel$6[ebp+8]
  00ccb	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ccf	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _posn$7[ebp], xmm0

; 362  : 			posn.y = visual_3d_vp->attitude[0][1] * rel.x + visual_3d_vp->attitude[1][1] * rel.y + visual_3d_vp->attitude[2][1] * rel.z;

  00cd7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00cdc	6b c8 00	 imul	 ecx, eax, 0
  00cdf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ce5	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00ce9	b9 04 00 00 00	 mov	 ecx, 4
  00cee	c1 e1 00	 shl	 ecx, 0
  00cf1	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00cf6	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _rel$6[ebp]
  00cfe	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00d03	c1 e2 00	 shl	 edx, 0
  00d06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d0b	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00d0f	ba 04 00 00 00	 mov	 edx, 4
  00d14	c1 e2 00	 shl	 edx, 0
  00d17	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00d1c	f3 0f 59 8d 4c
	ff ff ff	 mulss	 xmm1, DWORD PTR _rel$6[ebp+4]
  00d24	f3 0f 58 c1	 addss	 xmm0, xmm1
  00d28	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d2d	d1 e0		 shl	 eax, 1
  00d2f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d35	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00d39	b8 04 00 00 00	 mov	 eax, 4
  00d3e	c1 e0 00	 shl	 eax, 0
  00d41	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00d46	f3 0f 59 8d 50
	ff ff ff	 mulss	 xmm1, DWORD PTR _rel$6[ebp+8]
  00d4e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00d52	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _posn$7[ebp+4], xmm0

; 363  : 			posn.z = visual_3d_vp->attitude[0][2] * rel.x + visual_3d_vp->attitude[1][2] * rel.y + visual_3d_vp->attitude[2][2] * rel.z;

  00d5a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00d5f	6b c8 00	 imul	 ecx, eax, 0
  00d62	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d68	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00d6c	b9 04 00 00 00	 mov	 ecx, 4
  00d71	d1 e1		 shl	 ecx, 1
  00d73	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00d78	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _rel$6[ebp]
  00d80	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00d85	c1 e2 00	 shl	 edx, 0
  00d88	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00d8d	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  00d91	ba 04 00 00 00	 mov	 edx, 4
  00d96	d1 e2		 shl	 edx, 1
  00d98	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00d9d	f3 0f 59 8d 4c
	ff ff ff	 mulss	 xmm1, DWORD PTR _rel$6[ebp+4]
  00da5	f3 0f 58 c1	 addss	 xmm0, xmm1
  00da9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00dae	d1 e0		 shl	 eax, 1
  00db0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00db6	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00dba	b8 04 00 00 00	 mov	 eax, 4
  00dbf	d1 e0		 shl	 eax, 1
  00dc1	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00dc6	f3 0f 59 8d 50
	ff ff ff	 mulss	 xmm1, DWORD PTR _rel$6[ebp+8]
  00dce	f3 0f 58 c1	 addss	 xmm0, xmm1
  00dd2	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _posn$7[ebp+8], xmm0

; 364  : 
; 365  : 			//
; 366  : 			// Set the world transformation matrix
; 367  : 			//
; 368  : 
; 369  : 			matrix[0][0] = obj->vp.attitude[0][0] * object_3d_scale.x;

  00dda	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ddf	6b c8 00	 imul	 ecx, eax, 0
  00de2	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00de5	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00de9	b9 04 00 00 00	 mov	 ecx, 4
  00dee	6b d1 00	 imul	 edx, ecx, 0
  00df1	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00df6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00dfe	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00e03	6b c8 00	 imul	 ecx, eax, 0
  00e06	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  00e0d	b8 04 00 00 00	 mov	 eax, 4
  00e12	6b c8 00	 imul	 ecx, eax, 0
  00e15	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 370  : 			matrix[0][1] = obj->vp.attitude[0][1] * object_3d_scale.x;

  00e1a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e1f	6b c8 00	 imul	 ecx, eax, 0
  00e22	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00e25	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00e29	b9 04 00 00 00	 mov	 ecx, 4
  00e2e	c1 e1 00	 shl	 ecx, 0
  00e31	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00e36	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00e3e	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00e43	6b c2 00	 imul	 eax, edx, 0
  00e46	8d 8c 05 60 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$8[ebp+eax]
  00e4d	ba 04 00 00 00	 mov	 edx, 4
  00e52	c1 e2 00	 shl	 edx, 0
  00e55	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 371  : 			matrix[0][2] = obj->vp.attitude[0][2] * object_3d_scale.x;

  00e5a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00e5f	6b c8 00	 imul	 ecx, eax, 0
  00e62	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00e65	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  00e69	b9 04 00 00 00	 mov	 ecx, 4
  00e6e	d1 e1		 shl	 ecx, 1
  00e70	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00e75	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A
  00e7d	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00e82	6b c2 00	 imul	 eax, edx, 0
  00e85	8d 8c 05 60 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$8[ebp+eax]
  00e8c	ba 04 00 00 00	 mov	 edx, 4
  00e91	d1 e2		 shl	 edx, 1
  00e93	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 372  : 			matrix[0][3] = 0;

  00e98	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00e9d	6b c8 00	 imul	 ecx, eax, 0
  00ea0	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  00ea7	b8 04 00 00 00	 mov	 eax, 4
  00eac	6b c8 03	 imul	 ecx, eax, 3
  00eaf	0f 57 c0	 xorps	 xmm0, xmm0
  00eb2	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 373  : 
; 374  : 			matrix[1][0] = obj->vp.attitude[1][0] * object_3d_scale.y;

  00eb7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00ebc	c1 e0 00	 shl	 eax, 0
  00ebf	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00ec2	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00ec6	b8 04 00 00 00	 mov	 eax, 4
  00ecb	6b c8 00	 imul	 ecx, eax, 0
  00ece	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00ed3	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00edb	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00ee0	c1 e2 00	 shl	 edx, 0
  00ee3	8d 84 15 60 ff
	ff ff		 lea	 eax, DWORD PTR _matrix$8[ebp+edx]
  00eea	b9 04 00 00 00	 mov	 ecx, 4
  00eef	6b d1 00	 imul	 edx, ecx, 0
  00ef2	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 375  : 			matrix[1][1] = obj->vp.attitude[1][1] * object_3d_scale.y;

  00ef7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00efc	c1 e0 00	 shl	 eax, 0
  00eff	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00f02	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00f06	b8 04 00 00 00	 mov	 eax, 4
  00f0b	c1 e0 00	 shl	 eax, 0
  00f0e	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00f13	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00f1b	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00f20	c1 e1 00	 shl	 ecx, 0
  00f23	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  00f2a	b8 04 00 00 00	 mov	 eax, 4
  00f2f	c1 e0 00	 shl	 eax, 0
  00f32	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 376  : 			matrix[1][2] = obj->vp.attitude[1][2] * object_3d_scale.y;

  00f37	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f3c	c1 e0 00	 shl	 eax, 0
  00f3f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00f42	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00f46	b8 04 00 00 00	 mov	 eax, 4
  00f4b	d1 e0		 shl	 eax, 1
  00f4d	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00f52	f3 0f 59 05 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+4
  00f5a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00f5f	c1 e1 00	 shl	 ecx, 0
  00f62	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  00f69	b8 04 00 00 00	 mov	 eax, 4
  00f6e	d1 e0		 shl	 eax, 1
  00f70	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 377  : 			matrix[1][3] = 0;

  00f75	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00f7a	c1 e0 00	 shl	 eax, 0
  00f7d	8d 8c 05 60 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$8[ebp+eax]
  00f84	ba 04 00 00 00	 mov	 edx, 4
  00f89	6b c2 03	 imul	 eax, edx, 3
  00f8c	0f 57 c0	 xorps	 xmm0, xmm0
  00f8f	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 378  : 
; 379  : 			matrix[2][0] = obj->vp.attitude[2][0] * object_3d_scale.z;

  00f94	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00f99	d1 e0		 shl	 eax, 1
  00f9b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00f9e	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00fa2	b8 04 00 00 00	 mov	 eax, 4
  00fa7	6b c8 00	 imul	 ecx, eax, 0
  00faa	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00faf	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00fb7	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00fbc	d1 e2		 shl	 edx, 1
  00fbe	8d 84 15 60 ff
	ff ff		 lea	 eax, DWORD PTR _matrix$8[ebp+edx]
  00fc5	b9 04 00 00 00	 mov	 ecx, 4
  00fca	6b d1 00	 imul	 edx, ecx, 0
  00fcd	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 380  : 			matrix[2][1] = obj->vp.attitude[2][1] * object_3d_scale.z;

  00fd2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00fd7	d1 e0		 shl	 eax, 1
  00fd9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00fdc	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  00fe0	b8 04 00 00 00	 mov	 eax, 4
  00fe5	c1 e0 00	 shl	 eax, 0
  00fe8	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00fed	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  00ff5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ffa	d1 e1		 shl	 ecx, 1
  00ffc	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  01003	b8 04 00 00 00	 mov	 eax, 4
  01008	c1 e0 00	 shl	 eax, 0
  0100b	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 381  : 			matrix[2][2] = obj->vp.attitude[2][2] * object_3d_scale.z;

  01010	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01015	d1 e0		 shl	 eax, 1
  01017	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0101a	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  0101e	b8 04 00 00 00	 mov	 eax, 4
  01023	d1 e0		 shl	 eax, 1
  01025	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0102a	f3 0f 59 05 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?object_3d_scale@@3UVEC3D@@A+8
  01032	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  01037	d1 e1		 shl	 ecx, 1
  01039	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  01040	b8 04 00 00 00	 mov	 eax, 4
  01045	d1 e0		 shl	 eax, 1
  01047	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 382  : 			matrix[2][3] = 0;

  0104c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01051	d1 e0		 shl	 eax, 1
  01053	8d 8c 05 60 ff
	ff ff		 lea	 ecx, DWORD PTR _matrix$8[ebp+eax]
  0105a	ba 04 00 00 00	 mov	 edx, 4
  0105f	6b c2 03	 imul	 eax, edx, 3
  01062	0f 57 c0	 xorps	 xmm0, xmm0
  01065	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 383  : 
; 384  : 			matrix[3][0] = posn.x;	//obj->vp.position.x;

  0106a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0106f	6b c8 03	 imul	 ecx, eax, 3
  01072	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  01079	b8 04 00 00 00	 mov	 eax, 4
  0107e	6b c8 00	 imul	 ecx, eax, 0
  01081	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posn$7[ebp]
  01089	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 385  : 			matrix[3][1] = posn.y;	//obj->vp.position.y;

  0108e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  01093	6b c8 03	 imul	 ecx, eax, 3
  01096	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  0109d	b8 04 00 00 00	 mov	 eax, 4
  010a2	c1 e0 00	 shl	 eax, 0
  010a5	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _posn$7[ebp+4]
  010ad	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 386  : 			matrix[3][2] = posn.z;	//obj->vp.position.z;

  010b2	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  010b7	6b c8 03	 imul	 ecx, eax, 3
  010ba	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  010c1	b8 04 00 00 00	 mov	 eax, 4
  010c6	d1 e0		 shl	 eax, 1
  010c8	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR _posn$7[ebp+8]
  010d0	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 387  : 			matrix[3][3] = 1;

  010d5	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  010da	6b c8 03	 imul	 ecx, eax, 3
  010dd	8d 94 0d 60 ff
	ff ff		 lea	 edx, DWORD PTR _matrix$8[ebp+ecx]
  010e4	b8 04 00 00 00	 mov	 eax, 4
  010e9	6b c8 03	 imul	 ecx, eax, 3
  010ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  010f4	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 388  : 
; 389  : 			memcpy ( &d3d_matrix, matrix, sizeof ( matrix ) );

  010f9	6a 40		 push	 64			; 00000040H
  010fb	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _matrix$8[ebp]
  01101	50		 push	 eax
  01102	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  01107	e8 00 00 00 00	 call	 _memcpy
  0110c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 390  : 
; 391  : 			f3d_set_transform ( D3DTRANSFORMSTATE_WORLD, &d3d_matrix );

  0110f	68 00 00 00 00	 push	 OFFSET ?d3d_matrix@@3U_D3DMATRIX@@A
  01114	6a 01		 push	 1
  01116	e8 00 00 00 00	 call	 ?f3d_set_transform@@YGXIPAU_D3DMATRIX@@@Z ; f3d_set_transform

; 392  : 		
; 393  : 			if ( ( textured_object_rendering_enabled ) || ( infrared_override ) )

  0111b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?textured_object_rendering_enabled@@3HA, 0 ; textured_object_rendering_enabled
  01122	75 06		 jne	 SHORT $LN17@draw_hardw
  01124	83 7d 0c 00	 cmp	 DWORD PTR _infrared_override$[ebp], 0
  01128	74 11		 je	 SHORT $LN15@draw_hardw
$LN17@draw_hardw:

; 394  : 			{
; 395  : 	
; 396  : 				draw_3d_object_hardware_faces ( object_number, current_object_3d_object_base );

  0112a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0112f	50		 push	 eax
  01130	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  01133	51		 push	 ecx
  01134	e8 00 00 00 00	 call	 ?draw_3d_object_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_hardware_faces

; 397  : 			}
; 398  : 			else

  01139	eb 0f		 jmp	 SHORT $LN16@draw_hardw
$LN15@draw_hardw:

; 399  : 			{
; 400  : 
; 401  : 				draw_3d_object_untextured_hardware_faces ( object_number, current_object_3d_object_base );

  0113b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  01140	50		 push	 eax
  01141	8b 4d fc	 mov	 ecx, DWORD PTR _object_number$[ebp]
  01144	51		 push	 ecx
  01145	e8 00 00 00 00	 call	 ?draw_3d_object_untextured_hardware_faces@@YGXHPAUOBJECT_3D_INFO@@@Z ; draw_3d_object_untextured_hardware_faces
$LN16@draw_hardw:

; 402  : 			}
; 403  : 		}
; 404  : 	}
; 405  : 
; 406  : 	//
; 407  : 	// Recurse down any sub objects
; 408  : 	//
; 409  : 
; 410  : 	if ( scene->number_of_sub_objects )

  0114a	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  0114d	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  01154	0f 84 86 01 00
	00		 je	 $LN6@draw_hardw

; 411  : 	{
; 412  : 
; 413  : 		int
; 414  : 			count;
; 415  : 
; 416  : 		if ( obj->sub_objects )

  0115a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0115d	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  01161	0f 84 c0 00 00
	00		 je	 $LN19@draw_hardw

; 417  : 		{
; 418  : 	
; 419  : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01167	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  0116a	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  01170	83 e9 01	 sub	 ecx, 1
  01173	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], ecx
  01179	eb 0f		 jmp	 SHORT $LN4@draw_hardw
$LN2@draw_hardw:
  0117b	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _count$5[ebp]
  01181	83 e8 01	 sub	 eax, 1
  01184	89 85 44 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], eax
$LN4@draw_hardw:
  0118a	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _count$5[ebp], 0
  01191	0f 8c 8b 00 00
	00		 jl	 $LN3@draw_hardw

; 420  : 			{
; 421  : 	
; 422  : 				if (	( obj->sub_objects[count].visible_object ) &&
; 423  : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01197	6b 85 44 ff ff
	ff 30		 imul	 eax, DWORD PTR _count$5[ebp], 48
  0119e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  011a1	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  011a4	8b 44 02 08	 mov	 eax, DWORD PTR [edx+eax+8]
  011a8	83 e0 01	 and	 eax, 1
  011ab	74 70		 je	 SHORT $LN21@draw_hardw
  011ad	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  011b4	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  011b7	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  011bd	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  011c2	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  011c8	7f 53		 jg	 SHORT $LN21@draw_hardw
  011ca	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  011d1	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  011d4	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  011da	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  011df	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  011e5	7c 36		 jl	 SHORT $LN21@draw_hardw

; 424  : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 425  : 				{
; 426  : 	
; 427  : 					draw_sub_object ( &obj->sub_objects[count], &scene->sub_objects[count], &obj->vp, current_object_3d_relative_position, infrared_override );

  011e7	8b 45 0c	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  011ea	50		 push	 eax
  011eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  011f1	51		 push	 ecx
  011f2	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  011f5	83 c2 08	 add	 edx, 8
  011f8	52		 push	 edx
  011f9	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  01200	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01203	03 81 d8 00 00
	00		 add	 eax, DWORD PTR [ecx+216]
  01209	50		 push	 eax
  0120a	6b 95 44 ff ff
	ff 30		 imul	 edx, DWORD PTR _count$5[ebp], 48
  01211	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01214	03 50 58	 add	 edx, DWORD PTR [eax+88]
  01217	52		 push	 edx
  01218	e8 00 00 00 00	 call	 ?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_sub_object
$LN21@draw_hardw:

; 428  : 				}
; 429  : 			}

  0121d	e9 59 ff ff ff	 jmp	 $LN2@draw_hardw
$LN3@draw_hardw:

; 430  : 		}
; 431  : 		else

  01222	e9 b9 00 00 00	 jmp	 $LN6@draw_hardw
$LN19@draw_hardw:

; 432  : 		{
; 433  : 
; 434  : 			for ( count = ( scene->number_of_sub_objects -1 ); count >= 0; count-- )

  01227	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  0122a	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  01230	83 e9 01	 sub	 ecx, 1
  01233	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], ecx
  01239	eb 0f		 jmp	 SHORT $LN7@draw_hardw
$LN5@draw_hardw:
  0123b	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _count$5[ebp]
  01241	83 e8 01	 sub	 eax, 1
  01244	89 85 44 ff ff
	ff		 mov	 DWORD PTR _count$5[ebp], eax
$LN7@draw_hardw:
  0124a	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _count$5[ebp], 0
  01251	0f 8c 89 00 00
	00		 jl	 $LN6@draw_hardw

; 435  : 			{
; 436  : 	
; 437  : 				if (	( scene->sub_objects[count].default_visibility ) &&
; 438  : 						( scene->sub_objects[count].sub_object_approximation_in_level <= object_3d_approximation_level ) &&

  01257	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  0125e	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01261	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  01267	8a 44 02 07	 mov	 al, BYTE PTR [edx+eax+7]
  0126b	c0 e8 06	 shr	 al, 6
  0126e	24 01		 and	 al, 1
  01270	0f b6 c8	 movzx	 ecx, al
  01273	85 c9		 test	 ecx, ecx
  01275	74 64		 je	 SHORT $LN22@draw_hardw
  01277	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  0127e	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01281	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  01287	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  0128c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  01292	7f 47		 jg	 SHORT $LN22@draw_hardw
  01294	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  0129b	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  0129e	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  012a4	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  012a9	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?object_3d_approximation_level@@3HA ; object_3d_approximation_level
  012af	7c 2a		 jl	 SHORT $LN22@draw_hardw

; 439  : 						( scene->sub_objects[count].sub_object_approximation_out_level >= object_3d_approximation_level ) )
; 440  : 				{
; 441  : 	
; 442  : 					draw_sub_object ( NULL, &scene->sub_objects[count], &obj->vp, current_object_3d_relative_position, infrared_override );

  012b1	8b 45 0c	 mov	 eax, DWORD PTR _infrared_override$[ebp]
  012b4	50		 push	 eax
  012b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_relative_position@@3PAUVEC3D@@A ; current_object_3d_relative_position
  012bb	51		 push	 ecx
  012bc	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  012bf	83 c2 08	 add	 edx, 8
  012c2	52		 push	 edx
  012c3	6b 85 44 ff ff
	ff 38		 imul	 eax, DWORD PTR _count$5[ebp], 56
  012ca	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  012cd	03 81 d8 00 00
	00		 add	 eax, DWORD PTR [ecx+216]
  012d3	50		 push	 eax
  012d4	6a 00		 push	 0
  012d6	e8 00 00 00 00	 call	 ?draw_sub_object@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@PAUVIEWPOINT@@PAUVEC3D@@H@Z ; draw_sub_object
$LN22@draw_hardw:

; 443  : 				}
; 444  : 			}

  012db	e9 5b ff ff ff	 jmp	 $LN5@draw_hardw
$LN6@draw_hardw:

; 445  : 		}
; 446  : 	}
; 447  : 
; 448  : 	//
; 449  : 	// If there are any temporary tranlucent polygons, draw them now
; 450  : 	//
; 451  : 
; 452  : 	if ( get_number_of_temporary_translucent_polygons () )

  012e0	e8 00 00 00 00	 call	 ?get_number_of_temporary_translucent_polygons@@YGHXZ ; get_number_of_temporary_translucent_polygons
  012e5	85 c0		 test	 eax, eax
  012e7	74 38		 je	 SHORT $LN25@draw_hardw

; 453  : 	{
; 454  : 	
; 455  : 		//
; 456  : 		// Set the translucent rendering mode - and turn off specular highlighting
; 457  : 		//
; 458  : 		
; 459  : 		set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  012e9	6a 00		 push	 0
  012eb	6a 1d		 push	 29			; 0000001dH
  012ed	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 460  : 
; 461  : 		if ( d3d_transparency_enabled )

  012f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_transparency_enabled@@3HA, 0 ; d3d_transparency_enabled
  012f9	74 07		 je	 SHORT $LN24@draw_hardw

; 462  : 		{
; 463  : 
; 464  : 			draw_temporary_translucent_polygons ();

  012fb	e8 00 00 00 00	 call	 ?draw_temporary_translucent_polygons@@YGXXZ ; draw_temporary_translucent_polygons

; 465  : 		}
; 466  : 		else

  01300	eb 1f		 jmp	 SHORT $LN25@draw_hardw
$LN24@draw_hardw:

; 467  : 		{
; 468  : 	
; 469  : 			set_d3d_alpha_fog_zbuffer ( TRUE, FALSE, TRUE, FALSE );

  01302	6a 00		 push	 0
  01304	6a 01		 push	 1
  01306	6a 00		 push	 0
  01308	6a 01		 push	 1
  0130a	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer

; 470  : 		
; 471  : 			draw_temporary_translucent_polygons ();

  0130f	e8 00 00 00 00	 call	 ?draw_temporary_translucent_polygons@@YGXXZ ; draw_temporary_translucent_polygons

; 472  : 	
; 473  : 			set_d3d_alpha_fog_zbuffer ( FALSE, TRUE, TRUE, TRUE );

  01314	6a 01		 push	 1
  01316	6a 01		 push	 1
  01318	6a 01		 push	 1
  0131a	6a 00		 push	 0
  0131c	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer
$LN25@draw_hardw:

; 474  : 		}
; 475  : 	}
; 476  : 
; 477  : 	if ( current_object_3d_translucent_surfaces )

  01321	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A, 0 ; current_object_3d_translucent_surfaces
  01328	74 65		 je	 SHORT $LN29@draw_hardw

; 478  : 	{
; 479  : 
; 480  : 		if ( obj->requires_immediate_render )

  0132a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0132d	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01330	d1 e9		 shr	 ecx, 1
  01332	83 e1 01	 and	 ecx, 1
  01335	74 0d		 je	 SHORT $LN27@draw_hardw

; 481  : 		{
; 482  : 
; 483  : 			draw_3d_hardware_translucent_object ( current_object_3d_translucent_surfaces );

  01337	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A ; current_object_3d_translucent_surfaces
  0133c	50		 push	 eax
  0133d	e8 00 00 00 00	 call	 ?draw_3d_hardware_translucent_object@@YGXPAUTRANSLUCENT_OBJECT_SURFACE@@@Z ; draw_3d_hardware_translucent_object

; 484  : 		}
; 485  : 		else

  01342	eb 4b		 jmp	 SHORT $LN29@draw_hardw
$LN27@draw_hardw:

; 486  : 		{
; 487  : 
; 488  : 			scene_slot_drawing_list
; 489  : 				*buffer;
; 490  : 		
; 491  : 			//
; 492  : 			// Insert surface list into renderer
; 493  : 			//
; 494  : 
; 495  : 			buffer = get_3d_scene_slot ();

  01344	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  01349	89 85 40 ff ff
	ff		 mov	 DWORD PTR _buffer$4[ebp], eax

; 496  : 	
; 497  : 			if ( buffer )

  0134f	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR _buffer$4[ebp], 0
  01356	74 37		 je	 SHORT $LN29@draw_hardw

; 498  : 			{
; 499  : 
; 500  : 				buffer->type = OBJECT_3D_DRAW_TYPE_ZBUFFERED_TRANSLUCENT_OBJECT;

  01358	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  0135e	c7 40 08 16 00
	00 00		 mov	 DWORD PTR [eax+8], 22	; 00000016H

; 501  : 	
; 502  : 				buffer->z = *( ( int * ) &obj->view_position );

  01365	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  0136b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0136e	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  01371	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 503  : 	
; 504  : 				buffer->translucent_surfaces = current_object_3d_translucent_surfaces;

  01374	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  0137a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_translucent_surfaces@@3PAUTRANSLUCENT_OBJECT_SURFACE@@A ; current_object_3d_translucent_surfaces
  01380	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 505  : 	
; 506  : 				insert_transparent_buffer_into_3d_scene ( buffer );

  01383	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _buffer$4[ebp]
  01389	50		 push	 eax
  0138a	e8 00 00 00 00	 call	 ?insert_transparent_buffer_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_transparent_buffer_into_3d_scene
$LN29@draw_hardw:

; 507  : 			}
; 508  : 		}
; 509  : 	}
; 510  : 
; 511  : 
; 512  : 	//
; 513  : 	// Now finish sorting the translucent polygons.
; 514  : 	//
; 515  : 
; 516  : 	if ( ( obj->object_sprite_lights ) && ( scene->number_of_sprite_lights ) )

  0138f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01392	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  01395	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  01398	83 e1 01	 and	 ecx, 1
  0139b	0f 84 19 03 00
	00		 je	 $LN9@draw_hardw
  013a1	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  013a4	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  013a8	0f 84 0c 03 00
	00		 je	 $LN9@draw_hardw

; 517  : 	{
; 518  : 
; 519  : 		object_3d_sprite
; 520  : 			sprite;
; 521  : 
; 522  : 		int
; 523  : 			count;
; 524  : 
; 525  : 		for ( count = 0; count < scene->number_of_sprite_lights; count++ )

  013ae	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _count$2[ebp], 0
  013b8	eb 0f		 jmp	 SHORT $LN10@draw_hardw
$LN8@draw_hardw:
  013ba	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _count$2[ebp]
  013c0	83 c0 01	 add	 eax, 1
  013c3	89 85 1c ff ff
	ff		 mov	 DWORD PTR _count$2[ebp], eax
$LN10@draw_hardw:
  013c9	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  013cc	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _count$2[ebp]
  013d2	3b 48 30	 cmp	 ecx, DWORD PTR [eax+48]
  013d5	0f 8d df 02 00
	00		 jge	 $LN9@draw_hardw

; 526  : 		{
; 527  : 
; 528  : 			vec3d
; 529  : 				position;
; 530  : 
; 531  : 			position.x = scene->sprite_lights[count].position.x * obj->vp.attitude[0][0] +

  013db	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  013e2	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  013e5	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  013e8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  013ed	6b c9 00	 imul	 ecx, ecx, 0
  013f0	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  013f3	8d 4c 0e 14	 lea	 ecx, DWORD PTR [esi+ecx+20]
  013f7	be 04 00 00 00	 mov	 esi, 4
  013fc	6b f6 00	 imul	 esi, esi, 0
  013ff	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01404	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  01409	6b 95 1c ff ff
	ff 1c		 imul	 edx, DWORD PTR _count$2[ebp], 28
  01410	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  01413	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  01416	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0141b	c1 e0 00	 shl	 eax, 0
  0141e	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01421	8d 44 06 14	 lea	 eax, DWORD PTR [esi+eax+20]
  01425	be 04 00 00 00	 mov	 esi, 4
  0142a	6b f6 00	 imul	 esi, esi, 0
  0142d	f3 0f 10 4c 11
	04		 movss	 xmm1, DWORD PTR [ecx+edx+4]
  01433	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  01438	f3 0f 58 c1	 addss	 xmm0, xmm1
  0143c	6b 8d 1c ff ff
	ff 1c		 imul	 ecx, DWORD PTR _count$2[ebp], 28
  01443	8b 55 c4	 mov	 edx, DWORD PTR _scene$[ebp]
  01446	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  01449	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0144e	d1 e2		 shl	 edx, 1
  01450	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01453	8d 54 16 14	 lea	 edx, DWORD PTR [esi+edx+20]
  01457	be 04 00 00 00	 mov	 esi, 4
  0145c	6b f6 00	 imul	 esi, esi, 0
  0145f	f3 0f 10 4c 08
	08		 movss	 xmm1, DWORD PTR [eax+ecx+8]
  01465	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  0146a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0146e	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _position$1[ebp], xmm0

; 532  : 								scene->sprite_lights[count].position.y * obj->vp.attitude[1][0] +
; 533  : 								scene->sprite_lights[count].position.z * obj->vp.attitude[2][0];
; 534  : 
; 535  : 			position.y = scene->sprite_lights[count].position.x * obj->vp.attitude[0][1] +

  01476	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  0147d	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01480	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  01483	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01488	6b c9 00	 imul	 ecx, ecx, 0
  0148b	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  0148e	8d 4c 0e 14	 lea	 ecx, DWORD PTR [esi+ecx+20]
  01492	be 04 00 00 00	 mov	 esi, 4
  01497	c1 e6 00	 shl	 esi, 0
  0149a	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0149f	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  014a4	6b 95 1c ff ff
	ff 1c		 imul	 edx, DWORD PTR _count$2[ebp], 28
  014ab	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  014ae	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  014b1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  014b6	c1 e0 00	 shl	 eax, 0
  014b9	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  014bc	8d 44 06 14	 lea	 eax, DWORD PTR [esi+eax+20]
  014c0	be 04 00 00 00	 mov	 esi, 4
  014c5	c1 e6 00	 shl	 esi, 0
  014c8	f3 0f 10 4c 11
	04		 movss	 xmm1, DWORD PTR [ecx+edx+4]
  014ce	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  014d3	f3 0f 58 c1	 addss	 xmm0, xmm1
  014d7	6b 8d 1c ff ff
	ff 1c		 imul	 ecx, DWORD PTR _count$2[ebp], 28
  014de	8b 55 c4	 mov	 edx, DWORD PTR _scene$[ebp]
  014e1	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  014e4	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  014e9	d1 e2		 shl	 edx, 1
  014eb	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  014ee	8d 54 16 14	 lea	 edx, DWORD PTR [esi+edx+20]
  014f2	be 04 00 00 00	 mov	 esi, 4
  014f7	c1 e6 00	 shl	 esi, 0
  014fa	f3 0f 10 4c 08
	08		 movss	 xmm1, DWORD PTR [eax+ecx+8]
  01500	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  01505	f3 0f 58 c1	 addss	 xmm0, xmm1
  01509	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _position$1[ebp+4], xmm0

; 536  : 								scene->sprite_lights[count].position.y * obj->vp.attitude[1][1] +
; 537  : 								scene->sprite_lights[count].position.z * obj->vp.attitude[2][1];
; 538  : 
; 539  : 			position.z = scene->sprite_lights[count].position.x * obj->vp.attitude[0][2] +

  01511	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01518	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  0151b	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0151e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01523	6b c9 00	 imul	 ecx, ecx, 0
  01526	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01529	8d 4c 0e 14	 lea	 ecx, DWORD PTR [esi+ecx+20]
  0152d	be 04 00 00 00	 mov	 esi, 4
  01532	d1 e6		 shl	 esi, 1
  01534	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  01539	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0153e	6b 95 1c ff ff
	ff 1c		 imul	 edx, DWORD PTR _count$2[ebp], 28
  01545	8b 45 c4	 mov	 eax, DWORD PTR _scene$[ebp]
  01548	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0154b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01550	c1 e0 00	 shl	 eax, 0
  01553	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01556	8d 44 06 14	 lea	 eax, DWORD PTR [esi+eax+20]
  0155a	be 04 00 00 00	 mov	 esi, 4
  0155f	d1 e6		 shl	 esi, 1
  01561	f3 0f 10 4c 11
	04		 movss	 xmm1, DWORD PTR [ecx+edx+4]
  01567	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0156c	f3 0f 58 c1	 addss	 xmm0, xmm1
  01570	6b 8d 1c ff ff
	ff 1c		 imul	 ecx, DWORD PTR _count$2[ebp], 28
  01577	8b 55 c4	 mov	 edx, DWORD PTR _scene$[ebp]
  0157a	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0157d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  01582	d1 e2		 shl	 edx, 1
  01584	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  01587	8d 54 16 14	 lea	 edx, DWORD PTR [esi+edx+20]
  0158b	be 04 00 00 00	 mov	 esi, 4
  01590	d1 e6		 shl	 esi, 1
  01592	f3 0f 10 4c 08
	08		 movss	 xmm1, DWORD PTR [eax+ecx+8]
  01598	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  0159d	f3 0f 58 c1	 addss	 xmm0, xmm1
  015a1	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _position$1[ebp+8], xmm0

; 540  : 								scene->sprite_lights[count].position.y * obj->vp.attitude[1][2] +
; 541  : 								scene->sprite_lights[count].position.z * obj->vp.attitude[2][2];
; 542  : 
; 543  : 			position.x += obj->vp.position.x;

  015a9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  015ac	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _position$1[ebp]
  015b4	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  015b9	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _position$1[ebp], xmm0

; 544  : 			position.y += obj->vp.position.y;

  015c1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  015c4	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _position$1[ebp+4]
  015cc	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  015d1	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _position$1[ebp+4], xmm0

; 545  : 			position.z += obj->vp.position.z;

  015d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  015dc	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _position$1[ebp+8]
  015e4	f3 0f 58 40 10	 addss	 xmm0, DWORD PTR [eax+16]
  015e9	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _position$1[ebp+8], xmm0

; 546  : 
; 547  : 			sprite.position = position;

  015f1	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _position$1[ebp]
  015f7	89 85 20 ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp], eax
  015fd	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _position$1[ebp+4]
  01603	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp+4], ecx
  01609	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR _position$1[ebp+8]
  0160f	89 95 28 ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp+8], edx

; 548  : 			sprite.radius = scene->sprite_lights[count].scale.x * 4;

  01615	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  0161c	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  0161f	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  01622	f3 0f 10 44 02
	0c		 movss	 xmm0, DWORD PTR [edx+eax+12]
  01628	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  01630	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _sprite$3[ebp+16], xmm0

; 549  : 			sprite.red = scene->sprite_lights[count].colour.red;

  01638	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  0163f	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01642	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  01645	8a 44 02 1a	 mov	 al, BYTE PTR [edx+eax+26]
  01649	88 85 2e ff ff
	ff		 mov	 BYTE PTR _sprite$3[ebp+14], al

; 550  : 			sprite.green = scene->sprite_lights[count].colour.green;

  0164f	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  01656	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01659	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0165c	8a 44 02 19	 mov	 al, BYTE PTR [edx+eax+25]
  01660	88 85 2d ff ff
	ff		 mov	 BYTE PTR _sprite$3[ebp+13], al

; 551  : 			sprite.blue = scene->sprite_lights[count].colour.blue;

  01666	6b 85 1c ff ff
	ff 1c		 imul	 eax, DWORD PTR _count$2[ebp], 28
  0166d	8b 4d c4	 mov	 ecx, DWORD PTR _scene$[ebp]
  01670	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  01673	8a 44 02 18	 mov	 al, BYTE PTR [edx+eax+24]
  01677	88 85 2c ff ff
	ff		 mov	 BYTE PTR _sprite$3[ebp+12], al

; 552  : 			sprite.additive = TRUE;

  0167d	c7 85 38 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _sprite$3[ebp+24], 1

; 553  : 			sprite.texture = system_textures[TEXTURE_INDEX_FLARE001];

  01687	b8 04 00 00 00	 mov	 eax, 4
  0168c	69 c8 6e 06 00
	00		 imul	 ecx, eax, 1646
  01692	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx]
  01698	89 95 3c ff ff
	ff		 mov	 DWORD PTR _sprite$3[ebp+28], edx

; 554  : 
; 555  : 			insert_zbiased_object_into_3d_scene ( OBJECT_3D_DRAW_TYPE_SPRITE, &sprite, 0 );

  0169e	51		 push	 ecx
  0169f	0f 57 c0	 xorps	 xmm0, xmm0
  016a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  016a7	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _sprite$3[ebp]
  016ad	50		 push	 eax
  016ae	6a 10		 push	 16			; 00000010H
  016b0	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene

; 556  : 		}

  016b5	e9 00 fd ff ff	 jmp	 $LN8@draw_hardw
$LN9@draw_hardw:

; 557  : 	}
; 558  : 
; 559  : 	set_d3d_int_state ( D3DRENDERSTATE_FOGVERTEXMODE, D3DFOG_NONE );

  016ba	6a 00		 push	 0
  016bc	68 8c 00 00 00	 push	 140			; 0000008cH
  016c1	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 560  : 	set_d3d_int_state ( D3DRENDERSTATE_ZBIAS, 0 );

  016c6	6a 00		 push	 0
  016c8	6a 2f		 push	 47			; 0000002fH
  016ca	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 561  : }

  016cf	5f		 pop	 edi
  016d0	5e		 pop	 esi
  016d1	5b		 pop	 ebx
  016d2	8b e5		 mov	 esp, ebp
  016d4	5d		 pop	 ebp
  016d5	c2 08 00	 ret	 8
?draw_hardware_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@H@Z ENDP ; draw_hardware_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
END
