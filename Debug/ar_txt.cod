; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_txt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_area_ui_object_text_functions@@YGXH@Z	; overload_area_ui_object_text_functions
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?get_ui_object_bounded_t_value@@YGMPAUUI_OBJECT@@@Z:PROC ; get_ui_object_bounded_t_value
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_set_ui_object_add_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_add_text
EXTRN	?fn_set_ui_object_text_justify@@3PAP6GXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@ZA:BYTE ; fn_set_ui_object_text_justify
EXTRN	?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text_justify
EXTRN	?fn_set_ui_object_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_font_type
EXTRN	?fn_get_ui_object_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_font_type
EXTRN	?fn_set_ui_object_font_colour@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_font_colour
EXTRN	?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_font_colour_end
EXTRN	?fn_set_ui_object_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_font_colour_start
EXTRN	?fn_get_ui_object_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_font_colour
EXTRN	?fn_get_ui_object_font_colour_end@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_font_colour_end
EXTRN	?fn_get_ui_object_font_colour_start@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_font_colour_start
EXTRN	?fn_set_ui_object_highlighted_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_highlighted_font_type
EXTRN	?fn_get_ui_object_highlighted_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_font_type
EXTRN	?fn_set_ui_object_highlighted_font_colour@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_highlighted_font_colour
EXTRN	?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_highlighted_font_colour_end
EXTRN	?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_highlighted_font_colour_start
EXTRN	?fn_get_ui_object_highlighted_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_font_colour
EXTRN	?fn_get_ui_object_highlighted_font_colour_end@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_font_colour_end
EXTRN	?fn_get_ui_object_highlighted_font_colour_start@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_font_colour_start
EXTRN	?fn_set_ui_object_selected_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_selected_font_type
EXTRN	?fn_get_ui_object_selected_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_selected_font_type
EXTRN	?fn_set_ui_object_selected_font_colour@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_selected_font_colour
EXTRN	?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_selected_font_colour_end
EXTRN	?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_selected_font_colour_start
EXTRN	?fn_get_ui_object_selected_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_selected_font_colour
EXTRN	?fn_get_ui_object_selected_font_colour_end@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_selected_font_colour_end
EXTRN	?fn_get_ui_object_selected_font_colour_start@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_selected_font_colour_start
EXTRN	?fn_set_ui_object_tool_tips@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_tool_tips
EXTRN	?fn_get_ui_object_tool_tips@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_tool_tips
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_tool_tips@@YGPBDPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_tool_tips@@YGPBDPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_tool_tips, COMDAT

; 762  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 763  : 	
; 764  : 	area_ui_object
; 765  : 		*area;
; 766  : 
; 767  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 768  : 
; 769  : 	return (area->tool_tips);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 6c	 mov	 eax, DWORD PTR [eax+108]

; 770  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_tool_tips@@YGPBDPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_tool_tips
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_tool_tips@@YGXPAUUI_OBJECT@@PBD@Z
_TEXT	SEGMENT
_parent$ = -12						; size = 4
_area$ = -8						; size = 4
_length$ = -4						; size = 4
_obj$ = 8						; size = 4
_tool_tips$ = 12					; size = 4
?set_area_ui_object_tool_tips@@YGXPAUUI_OBJECT@@PBD@Z PROC ; set_area_ui_object_tool_tips, COMDAT

; 700  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 701  : 
; 702  : 	int
; 703  : 		length;
; 704  : 
; 705  : 	area_ui_object
; 706  : 		*area;
; 707  : 
; 708  : 	ui_object
; 709  : 		*parent;
; 710  : 
; 711  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _area$[ebp], ecx

; 712  : 
; 713  : 	if (area->tool_tips)

  00012	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00015	83 78 6c 00	 cmp	 DWORD PTR [eax+108], 0
  00019	74 0c		 je	 SHORT $LN4@set_area_u

; 714  : 	{
; 715  : 
; 716  : 		safe_free (area->tool_tips);

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0001e	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN4@set_area_u:

; 717  : 	}
; 718  : 
; 719  : 	area->tool_tips = NULL;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0002a	c7 40 6c 00 00
	00 00		 mov	 DWORD PTR [eax+108], 0

; 720  : 
; 721  : 	if (tool_tips)

  00031	83 7d 0c 00	 cmp	 DWORD PTR _tool_tips$[ebp], 0
  00035	74 34		 je	 SHORT $LN5@set_area_u

; 722  : 	{
; 723  : 
; 724  : 		length = strlen (tool_tips);

  00037	8b 45 0c	 mov	 eax, DWORD PTR _tool_tips$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _strlen
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 725  : 	
; 726  : 		area->tool_tips = (char *) safe_malloc ((sizeof (char) * length) + 1);

  00046	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  00049	83 c0 01	 add	 eax, 1
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00055	89 41 6c	 mov	 DWORD PTR [ecx+108], eax

; 727  : 	
; 728  : 		strcpy (area->tool_tips, tool_tips);

  00058	8b 45 0c	 mov	 eax, DWORD PTR _tool_tips$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  0005f	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 _strcpy
  00068	83 c4 08	 add	 esp, 8
$LN5@set_area_u:

; 729  : 	}
; 730  : 			
; 731  : 	parent = get_ui_object_parent (obj);

  0006b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0007b	ff d0		 call	 eax
  0007d	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 732  : 
; 733  : 	if (parent)

  00080	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00084	74 63		 je	 SHORT $LN6@set_area_u

; 734  : 	{
; 735  : 
; 736  : 		set_ui_object_redraw (parent, TRUE);

  00086	6a 01		 push	 1
  00088	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00098	ff d0		 call	 eax
$LN2@set_area_u:

; 737  : 
; 738  : 		while ((parent) && (get_ui_object_clear (parent)))

  0009a	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0009e	74 47		 je	 SHORT $LN3@set_area_u
  000a0	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000b0	ff d0		 call	 eax
  000b2	85 c0		 test	 eax, eax
  000b4	74 31		 je	 SHORT $LN3@set_area_u

; 739  : 		{
; 740  : 
; 741  : 			parent = get_ui_object_parent (parent);

  000b6	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000b9	50		 push	 eax
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000bd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000c6	ff d0		 call	 eax
  000c8	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 742  : 
; 743  : 			if (parent)

  000cb	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000cf	74 14		 je	 SHORT $LN8@set_area_u

; 744  : 			{
; 745  : 
; 746  : 				set_ui_object_redraw (parent, TRUE);

  000d1	6a 01		 push	 1
  000d3	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000e3	ff d0		 call	 eax
$LN8@set_area_u:

; 747  : 			}
; 748  : 		}

  000e5	eb b3		 jmp	 SHORT $LN2@set_area_u
$LN3@set_area_u:

; 749  : 	}
; 750  : 	else

  000e7	eb 14		 jmp	 SHORT $LN1@set_area_u
$LN6@set_area_u:

; 751  : 	{
; 752  : 
; 753  : 		set_ui_object_redraw (obj, TRUE);

  000e9	6a 01		 push	 1
  000eb	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000fb	ff d0		 call	 eax
$LN1@set_area_u:

; 754  : 	}
; 755  : }

  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c2 08 00	 ret	 8
?set_area_ui_object_tool_tips@@YGXPAUUI_OBJECT@@PBD@Z ENDP ; set_area_ui_object_tool_tips
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_selected_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_selected_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_selected_font_colour_start, COMDAT

; 685  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 686  : 
; 687  : 	area_ui_object
; 688  : 		*area;
; 689  : 
; 690  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 691  : 
; 692  : 	return (area->selected_font_colour_start);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]

; 693  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_selected_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_selected_font_colour_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_selected_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_selected_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_selected_font_colour_end, COMDAT

; 670  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 671  : 
; 672  : 	area_ui_object
; 673  : 		*area;
; 674  : 
; 675  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 676  : 
; 677  : 	return (area->selected_font_colour_end);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]

; 678  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_selected_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_selected_font_colour_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_selected_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_selected_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_selected_font_colour, COMDAT

; 655  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 656  : 
; 657  : 	area_ui_object
; 658  : 		*area;
; 659  : 
; 660  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 661  : 
; 662  : 	return (area->selected_font_colour_start);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]

; 663  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_selected_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_selected_font_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_selected_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_selected_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_selected_font_colour_start, COMDAT

; 637  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 638  : 
; 639  : 	area_ui_object
; 640  : 		*area;
; 641  : 
; 642  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 643  : 
; 644  : 	area->selected_font_colour_start.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 aa 00 00
	00		 mov	 BYTE PTR [eax+170], cl

; 645  : 	area->selected_font_colour_start.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 a9 00 00
	00		 mov	 BYTE PTR [eax+169], cl

; 646  : 	area->selected_font_colour_start.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 a8 00 00
	00		 mov	 BYTE PTR [eax+168], cl

; 647  : 	area->selected_font_colour_start.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 ab 00 00
	00		 mov	 BYTE PTR [eax+171], cl

; 648  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_selected_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_selected_font_colour_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_selected_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_selected_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_selected_font_colour_end, COMDAT

; 619  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 620  : 
; 621  : 	area_ui_object
; 622  : 		*area;
; 623  : 
; 624  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 625  : 
; 626  : 	area->selected_font_colour_end.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 a6 00 00
	00		 mov	 BYTE PTR [eax+166], cl

; 627  : 	area->selected_font_colour_end.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 a5 00 00
	00		 mov	 BYTE PTR [eax+165], cl

; 628  : 	area->selected_font_colour_end.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 a4 00 00
	00		 mov	 BYTE PTR [eax+164], cl

; 629  : 	area->selected_font_colour_end.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 a7 00 00
	00		 mov	 BYTE PTR [eax+167], cl

; 630  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_selected_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_selected_font_colour_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_selected_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_selected_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_selected_font_colour, COMDAT

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 597  : 
; 598  : 	area_ui_object
; 599  : 		*area;
; 600  : 
; 601  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 602  : 
; 603  : 	area->selected_font_colour_end.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 a6 00 00
	00		 mov	 BYTE PTR [eax+166], cl

; 604  : 	area->selected_font_colour_end.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 a5 00 00
	00		 mov	 BYTE PTR [eax+165], cl

; 605  : 	area->selected_font_colour_end.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 a4 00 00
	00		 mov	 BYTE PTR [eax+164], cl

; 606  : 	area->selected_font_colour_end.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 a7 00 00
	00		 mov	 BYTE PTR [eax+167], cl

; 607  : 
; 608  : 	area->selected_font_colour_start.r = red;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00045	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00048	88 88 aa 00 00
	00		 mov	 BYTE PTR [eax+170], cl

; 609  : 	area->selected_font_colour_start.g = green;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00051	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00054	88 88 a9 00 00
	00		 mov	 BYTE PTR [eax+169], cl

; 610  : 	area->selected_font_colour_start.b = blue;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0005d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00060	88 88 a8 00 00
	00		 mov	 BYTE PTR [eax+168], cl

; 611  : 	area->selected_font_colour_start.a = alpha;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00069	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0006c	88 88 ab 00 00
	00		 mov	 BYTE PTR [eax+171], cl

; 612  : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_selected_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_selected_font_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_selected_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_selected_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_selected_font_type, COMDAT

; 581  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 582  : 	
; 583  : 	area_ui_object
; 584  : 		*area;
; 585  : 
; 586  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 587  : 
; 588  : 	return (font_types) (area->selected_font_type);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]

; 589  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_selected_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_selected_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_selected_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_font_id$ = 12						; size = 4
?set_area_ui_object_selected_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z PROC ; set_area_ui_object_selected_font_type, COMDAT

; 566  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 567  : 
; 568  : 	area_ui_object
; 569  : 		*area;
; 570  : 
; 571  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 572  : 
; 573  : 	area->selected_font_type = font_id;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _font_id$[ebp]
  00018	89 48 5c	 mov	 DWORD PTR [eax+92], ecx

; 574  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_selected_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ENDP ; set_area_ui_object_selected_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_highlighted_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_highlighted_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_highlighted_font_colour_start, COMDAT

; 551  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 552  : 
; 553  : 	area_ui_object
; 554  : 		*area;
; 555  : 
; 556  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 557  : 
; 558  : 	return (area->highlighted_font_colour_start);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [eax+160]

; 559  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_highlighted_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_highlighted_font_colour_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_highlighted_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_highlighted_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_highlighted_font_colour_end, COMDAT

; 536  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 537  : 
; 538  : 	area_ui_object
; 539  : 		*area;
; 540  : 
; 541  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 542  : 
; 543  : 	return (area->highlighted_font_colour_end);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]

; 544  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_highlighted_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_highlighted_font_colour_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_highlighted_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_t$ = -28						; size = 4
_da$ = -24						; size = 4
_db$ = -20						; size = 4
_dg$ = -16						; size = 4
_dr$ = -12						; size = 4
_col$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_highlighted_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_highlighted_font_colour, COMDAT

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 481  : 
; 482  : 	area_ui_object
; 483  : 		*area;
; 484  : 
; 485  : 	rgb_colour
; 486  : 		col;
; 487  : 
; 488  : 	int
; 489  : 		dr,
; 490  : 		dg,
; 491  : 		db,
; 492  : 		da;
; 493  : 
; 494  : 	float
; 495  : 		t;
; 496  : 
; 497  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 498  : 
; 499  : 	t = get_ui_object_bounded_t_value (obj);

  00012	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?get_ui_object_bounded_t_value@@YGMPAUUI_OBJECT@@@Z ; get_ui_object_bounded_t_value
  0001b	d9 5d e4	 fstp	 DWORD PTR _t$[ebp]

; 500  : 
; 501  : 	//
; 502  : 	// Interpolate the colour values
; 503  : 	//
; 504  : 
; 505  : 	dr = ( int ) area->highlighted_font_colour_end.r - ( int ) area->highlighted_font_colour_start.r;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	0f b6 88 9e 00
	00 00		 movzx	 ecx, BYTE PTR [eax+158]
  00028	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0002b	0f b6 82 a2 00
	00 00		 movzx	 eax, BYTE PTR [edx+162]
  00032	2b c8		 sub	 ecx, eax
  00034	89 4d f4	 mov	 DWORD PTR _dr$[ebp], ecx

; 506  : 	dg = ( int ) area->highlighted_font_colour_end.g - ( int ) area->highlighted_font_colour_start.g;

  00037	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0003a	0f b6 88 9d 00
	00 00		 movzx	 ecx, BYTE PTR [eax+157]
  00041	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00044	0f b6 82 a1 00
	00 00		 movzx	 eax, BYTE PTR [edx+161]
  0004b	2b c8		 sub	 ecx, eax
  0004d	89 4d f0	 mov	 DWORD PTR _dg$[ebp], ecx

; 507  : 	db = ( int ) area->highlighted_font_colour_end.b - ( int ) area->highlighted_font_colour_start.b;

  00050	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00053	0f b6 88 9c 00
	00 00		 movzx	 ecx, BYTE PTR [eax+156]
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0005d	0f b6 82 a0 00
	00 00		 movzx	 eax, BYTE PTR [edx+160]
  00064	2b c8		 sub	 ecx, eax
  00066	89 4d ec	 mov	 DWORD PTR _db$[ebp], ecx

; 508  : 	da = ( int ) area->highlighted_font_colour_end.a - ( int ) area->highlighted_font_colour_start.a;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0006c	0f b6 88 9f 00
	00 00		 movzx	 ecx, BYTE PTR [eax+159]
  00073	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00076	0f b6 82 a3 00
	00 00		 movzx	 eax, BYTE PTR [edx+163]
  0007d	2b c8		 sub	 ecx, eax
  0007f	89 4d e8	 mov	 DWORD PTR _da$[ebp], ecx

; 509  : 
; 510  : 	dr *= t;

  00082	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _dr$[ebp]
  00087	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  0008c	f3 0f 2c c0	 cvttss2si eax, xmm0
  00090	89 45 f4	 mov	 DWORD PTR _dr$[ebp], eax

; 511  : 	dg *= t;

  00093	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _dg$[ebp]
  00098	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  0009d	f3 0f 2c c0	 cvttss2si eax, xmm0
  000a1	89 45 f0	 mov	 DWORD PTR _dg$[ebp], eax

; 512  : 	db *= t;

  000a4	f3 0f 2a 45 ec	 cvtsi2ss xmm0, DWORD PTR _db$[ebp]
  000a9	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  000ae	f3 0f 2c c0	 cvttss2si eax, xmm0
  000b2	89 45 ec	 mov	 DWORD PTR _db$[ebp], eax

; 513  : 	da *= t;

  000b5	f3 0f 2a 45 e8	 cvtsi2ss xmm0, DWORD PTR _da$[ebp]
  000ba	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  000bf	f3 0f 2c c0	 cvttss2si eax, xmm0
  000c3	89 45 e8	 mov	 DWORD PTR _da$[ebp], eax

; 514  : 
; 515  : 	col.r = ( ( int ) area->highlighted_font_colour_start.r + dr );

  000c6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000c9	0f b6 88 a2 00
	00 00		 movzx	 ecx, BYTE PTR [eax+162]
  000d0	03 4d f4	 add	 ecx, DWORD PTR _dr$[ebp]
  000d3	88 4d fa	 mov	 BYTE PTR _col$[ebp+2], cl

; 516  : 	col.g = ( ( int ) area->highlighted_font_colour_start.g + dg );

  000d6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000d9	0f b6 88 a1 00
	00 00		 movzx	 ecx, BYTE PTR [eax+161]
  000e0	03 4d f0	 add	 ecx, DWORD PTR _dg$[ebp]
  000e3	88 4d f9	 mov	 BYTE PTR _col$[ebp+1], cl

; 517  : 	col.b = ( ( int ) area->highlighted_font_colour_start.b + db );

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000e9	0f b6 88 a0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+160]
  000f0	03 4d ec	 add	 ecx, DWORD PTR _db$[ebp]
  000f3	88 4d f8	 mov	 BYTE PTR _col$[ebp], cl

; 518  : 	col.a = ( ( int ) area->highlighted_font_colour_start.a + da );

  000f6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000f9	0f b6 88 a3 00
	00 00		 movzx	 ecx, BYTE PTR [eax+163]
  00100	03 4d e8	 add	 ecx, DWORD PTR _da$[ebp]
  00103	88 4d fb	 mov	 BYTE PTR _col$[ebp+3], cl

; 519  : 
; 520  : 	return (col);

  00106	8b 45 f8	 mov	 eax, DWORD PTR _col$[ebp]

; 521  : 	/*(
; 522  : 	area_ui_object
; 523  : 		*area;
; 524  : 
; 525  : 	area = (area_ui_object *) obj->data;
; 526  : 
; 527  : 	return (area->highlighted_font_colour_start);
; 528  : 	*/
; 529  : }

  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
?get_area_ui_object_highlighted_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_highlighted_font_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_highlighted_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_highlighted_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_highlighted_font_colour_start, COMDAT

; 462  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 463  : 
; 464  : 	area_ui_object
; 465  : 		*area;
; 466  : 
; 467  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 468  : 
; 469  : 	area->highlighted_font_colour_start.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 a2 00 00
	00		 mov	 BYTE PTR [eax+162], cl

; 470  : 	area->highlighted_font_colour_start.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 a1 00 00
	00		 mov	 BYTE PTR [eax+161], cl

; 471  : 	area->highlighted_font_colour_start.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 a0 00 00
	00		 mov	 BYTE PTR [eax+160], cl

; 472  : 	area->highlighted_font_colour_start.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 a3 00 00
	00		 mov	 BYTE PTR [eax+163], cl

; 473  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_highlighted_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_highlighted_font_colour_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_highlighted_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_highlighted_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_highlighted_font_colour_end, COMDAT

; 444  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 445  : 
; 446  : 	area_ui_object
; 447  : 		*area;
; 448  : 
; 449  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 450  : 
; 451  : 	area->highlighted_font_colour_end.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 9e 00 00
	00		 mov	 BYTE PTR [eax+158], cl

; 452  : 	area->highlighted_font_colour_end.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 9d 00 00
	00		 mov	 BYTE PTR [eax+157], cl

; 453  : 	area->highlighted_font_colour_end.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 9c 00 00
	00		 mov	 BYTE PTR [eax+156], cl

; 454  : 	area->highlighted_font_colour_end.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 9f 00 00
	00		 mov	 BYTE PTR [eax+159], cl

; 455  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_highlighted_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_highlighted_font_colour_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_highlighted_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_highlighted_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_highlighted_font_colour, COMDAT

; 421  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 422  : 
; 423  : 	area_ui_object
; 424  : 		*area;
; 425  : 
; 426  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 427  : 
; 428  : 	area->highlighted_font_colour_end.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 9e 00 00
	00		 mov	 BYTE PTR [eax+158], cl

; 429  : 	area->highlighted_font_colour_end.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 9d 00 00
	00		 mov	 BYTE PTR [eax+157], cl

; 430  : 	area->highlighted_font_colour_end.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 9c 00 00
	00		 mov	 BYTE PTR [eax+156], cl

; 431  : 	area->highlighted_font_colour_end.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 9f 00 00
	00		 mov	 BYTE PTR [eax+159], cl

; 432  : 
; 433  : 	area->highlighted_font_colour_start.r = red;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00045	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00048	88 88 a2 00 00
	00		 mov	 BYTE PTR [eax+162], cl

; 434  : 	area->highlighted_font_colour_start.g = green;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00051	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00054	88 88 a1 00 00
	00		 mov	 BYTE PTR [eax+161], cl

; 435  : 	area->highlighted_font_colour_start.b = blue;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0005d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00060	88 88 a0 00 00
	00		 mov	 BYTE PTR [eax+160], cl

; 436  : 	area->highlighted_font_colour_start.a = alpha;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00069	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0006c	88 88 a3 00 00
	00		 mov	 BYTE PTR [eax+163], cl

; 437  : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_highlighted_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_highlighted_font_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_highlighted_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_highlighted_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_highlighted_font_type, COMDAT

; 406  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 407  : 	
; 408  : 	area_ui_object
; 409  : 		*area;
; 410  : 
; 411  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 412  : 
; 413  : 	return (font_types) (area->highlighted_font_type);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 60	 mov	 eax, DWORD PTR [eax+96]

; 414  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_highlighted_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_highlighted_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_highlighted_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_font_id$ = 12						; size = 4
?set_area_ui_object_highlighted_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z PROC ; set_area_ui_object_highlighted_font_type, COMDAT

; 391  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 392  : 
; 393  : 	area_ui_object
; 394  : 		*area;
; 395  : 
; 396  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 397  : 
; 398  : 	area->highlighted_font_type = font_id;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _font_id$[ebp]
  00018	89 48 60	 mov	 DWORD PTR [eax+96], ecx

; 399  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_highlighted_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ENDP ; set_area_ui_object_highlighted_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_font_colour_start, COMDAT

; 376  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 377  : 
; 378  : 	area_ui_object
; 379  : 		*area;
; 380  : 
; 381  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 382  : 
; 383  : 	return (area->font_colour_start);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 98 00 00
	00		 mov	 eax, DWORD PTR [eax+152]

; 384  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_font_colour_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_font_colour_end, COMDAT

; 361  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 362  : 
; 363  : 	area_ui_object
; 364  : 		*area;
; 365  : 
; 366  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 367  : 
; 368  : 	return (area->font_colour_end);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 80 94 00 00
	00		 mov	 eax, DWORD PTR [eax+148]

; 369  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_font_colour_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_t$ = -28						; size = 4
_da$ = -24						; size = 4
_db$ = -20						; size = 4
_dg$ = -16						; size = 4
_dr$ = -12						; size = 4
_col$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_font_colour, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 
; 314  : 	area_ui_object
; 315  : 		*area;
; 316  : 
; 317  : 	rgb_colour
; 318  : 		col;
; 319  : 
; 320  : 	int
; 321  : 		dr,
; 322  : 		dg,
; 323  : 		db,
; 324  : 		da;
; 325  : 
; 326  : 	float
; 327  : 		t;
; 328  : 
; 329  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 330  : 
; 331  : 	t = get_ui_object_bounded_t_value (obj);

  00012	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?get_ui_object_bounded_t_value@@YGMPAUUI_OBJECT@@@Z ; get_ui_object_bounded_t_value
  0001b	d9 5d e4	 fstp	 DWORD PTR _t$[ebp]

; 332  : 
; 333  : 	//
; 334  : 	// Interpolate the colour values
; 335  : 	//
; 336  : 
; 337  : 	dr = ( int ) area->font_colour_end.r - ( int ) area->font_colour_start.r;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	0f b6 88 96 00
	00 00		 movzx	 ecx, BYTE PTR [eax+150]
  00028	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0002b	0f b6 82 9a 00
	00 00		 movzx	 eax, BYTE PTR [edx+154]
  00032	2b c8		 sub	 ecx, eax
  00034	89 4d f4	 mov	 DWORD PTR _dr$[ebp], ecx

; 338  : 	dg = ( int ) area->font_colour_end.g - ( int ) area->font_colour_start.g;

  00037	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0003a	0f b6 88 95 00
	00 00		 movzx	 ecx, BYTE PTR [eax+149]
  00041	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00044	0f b6 82 99 00
	00 00		 movzx	 eax, BYTE PTR [edx+153]
  0004b	2b c8		 sub	 ecx, eax
  0004d	89 4d f0	 mov	 DWORD PTR _dg$[ebp], ecx

; 339  : 	db = ( int ) area->font_colour_end.b - ( int ) area->font_colour_start.b;

  00050	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00053	0f b6 88 94 00
	00 00		 movzx	 ecx, BYTE PTR [eax+148]
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0005d	0f b6 82 98 00
	00 00		 movzx	 eax, BYTE PTR [edx+152]
  00064	2b c8		 sub	 ecx, eax
  00066	89 4d ec	 mov	 DWORD PTR _db$[ebp], ecx

; 340  : 	da = ( int ) area->font_colour_end.a - ( int ) area->font_colour_start.a;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0006c	0f b6 88 97 00
	00 00		 movzx	 ecx, BYTE PTR [eax+151]
  00073	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00076	0f b6 82 9b 00
	00 00		 movzx	 eax, BYTE PTR [edx+155]
  0007d	2b c8		 sub	 ecx, eax
  0007f	89 4d e8	 mov	 DWORD PTR _da$[ebp], ecx

; 341  : 
; 342  : 	dr *= t;

  00082	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _dr$[ebp]
  00087	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  0008c	f3 0f 2c c0	 cvttss2si eax, xmm0
  00090	89 45 f4	 mov	 DWORD PTR _dr$[ebp], eax

; 343  : 	dg *= t;

  00093	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _dg$[ebp]
  00098	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  0009d	f3 0f 2c c0	 cvttss2si eax, xmm0
  000a1	89 45 f0	 mov	 DWORD PTR _dg$[ebp], eax

; 344  : 	db *= t;

  000a4	f3 0f 2a 45 ec	 cvtsi2ss xmm0, DWORD PTR _db$[ebp]
  000a9	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  000ae	f3 0f 2c c0	 cvttss2si eax, xmm0
  000b2	89 45 ec	 mov	 DWORD PTR _db$[ebp], eax

; 345  : 	da *= t;

  000b5	f3 0f 2a 45 e8	 cvtsi2ss xmm0, DWORD PTR _da$[ebp]
  000ba	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _t$[ebp]
  000bf	f3 0f 2c c0	 cvttss2si eax, xmm0
  000c3	89 45 e8	 mov	 DWORD PTR _da$[ebp], eax

; 346  : 
; 347  : 	col.r = ( ( int ) area->font_colour_start.r + dr );

  000c6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000c9	0f b6 88 9a 00
	00 00		 movzx	 ecx, BYTE PTR [eax+154]
  000d0	03 4d f4	 add	 ecx, DWORD PTR _dr$[ebp]
  000d3	88 4d fa	 mov	 BYTE PTR _col$[ebp+2], cl

; 348  : 	col.g = ( ( int ) area->font_colour_start.g + dg );

  000d6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000d9	0f b6 88 99 00
	00 00		 movzx	 ecx, BYTE PTR [eax+153]
  000e0	03 4d f0	 add	 ecx, DWORD PTR _dg$[ebp]
  000e3	88 4d f9	 mov	 BYTE PTR _col$[ebp+1], cl

; 349  : 	col.b = ( ( int ) area->font_colour_start.b + db );

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000e9	0f b6 88 98 00
	00 00		 movzx	 ecx, BYTE PTR [eax+152]
  000f0	03 4d ec	 add	 ecx, DWORD PTR _db$[ebp]
  000f3	88 4d f8	 mov	 BYTE PTR _col$[ebp], cl

; 350  : 	col.a = ( ( int ) area->font_colour_start.a + da );

  000f6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  000f9	0f b6 88 9b 00
	00 00		 movzx	 ecx, BYTE PTR [eax+155]
  00100	03 4d e8	 add	 ecx, DWORD PTR _da$[ebp]
  00103	88 4d fb	 mov	 BYTE PTR _col$[ebp+3], cl

; 351  : 
; 352  : 	return (col);

  00106	8b 45 f8	 mov	 eax, DWORD PTR _col$[ebp]

; 353  : //	return (&(area->font_colour_start));
; 354  : }

  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
?get_area_ui_object_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_font_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_font_colour_start, COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 
; 296  : 	area_ui_object
; 297  : 		*area;
; 298  : 
; 299  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 300  : 
; 301  : 	area->font_colour_start.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 9a 00 00
	00		 mov	 BYTE PTR [eax+154], cl

; 302  : 	area->font_colour_start.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 99 00 00
	00		 mov	 BYTE PTR [eax+153], cl

; 303  : 	area->font_colour_start.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 98 00 00
	00		 mov	 BYTE PTR [eax+152], cl

; 304  : 	area->font_colour_start.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 9b 00 00
	00		 mov	 BYTE PTR [eax+155], cl

; 305  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_font_colour_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_font_colour_end, COMDAT

; 276  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 277  : 
; 278  : 	area_ui_object
; 279  : 		*area;
; 280  : 
; 281  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 282  : 
; 283  : 	area->font_colour_end.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 96 00 00
	00		 mov	 BYTE PTR [eax+150], cl

; 284  : 	area->font_colour_end.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 95 00 00
	00		 mov	 BYTE PTR [eax+149], cl

; 285  : 	area->font_colour_end.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 94 00 00
	00		 mov	 BYTE PTR [eax+148], cl

; 286  : 	area->font_colour_end.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 97 00 00
	00		 mov	 BYTE PTR [eax+151], cl

; 287  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_font_colour_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_red$ = 12						; size = 1
_green$ = 16						; size = 1
_blue$ = 20						; size = 1
_alpha$ = 24						; size = 1
?set_area_ui_object_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z PROC ; set_area_ui_object_font_colour, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 254  : 
; 255  : 	area_ui_object
; 256  : 		*area;
; 257  : 
; 258  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 259  : 
; 260  : 	area->font_colour_end.r = red;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00018	88 88 96 00 00
	00		 mov	 BYTE PTR [eax+150], cl

; 261  : 	area->font_colour_end.g = green;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00024	88 88 95 00 00
	00		 mov	 BYTE PTR [eax+149], cl

; 262  : 	area->font_colour_end.b = blue;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0002d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00030	88 88 94 00 00
	00		 mov	 BYTE PTR [eax+148], cl

; 263  : 	area->font_colour_end.a = alpha;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00039	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0003c	88 88 97 00 00
	00		 mov	 BYTE PTR [eax+151], cl

; 264  : 
; 265  : 	area->font_colour_start.r = red;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00045	8a 4d 0c	 mov	 cl, BYTE PTR _red$[ebp]
  00048	88 88 9a 00 00
	00		 mov	 BYTE PTR [eax+154], cl

; 266  : 	area->font_colour_start.g = green;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00051	8a 4d 10	 mov	 cl, BYTE PTR _green$[ebp]
  00054	88 88 99 00 00
	00		 mov	 BYTE PTR [eax+153], cl

; 267  : 	area->font_colour_start.b = blue;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0005d	8a 4d 14	 mov	 cl, BYTE PTR _blue$[ebp]
  00060	88 88 98 00 00
	00		 mov	 BYTE PTR [eax+152], cl

; 268  : 	area->font_colour_start.a = alpha;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00069	8a 4d 18	 mov	 cl, BYTE PTR _alpha$[ebp]
  0006c	88 88 9b 00 00
	00		 mov	 BYTE PTR [eax+155], cl

; 269  : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 14 00	 ret	 20			; 00000014H
?set_area_ui_object_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z ENDP ; set_area_ui_object_font_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_font_type, COMDAT

; 238  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 239  : 	
; 240  : 	area_ui_object
; 241  : 		*area;
; 242  : 
; 243  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 244  : 
; 245  : 	return (font_types) (area->font_type);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 64	 mov	 eax, DWORD PTR [eax+100]

; 246  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_font_id$ = 12						; size = 4
?set_area_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z PROC ; set_area_ui_object_font_type, COMDAT

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 224  : 
; 225  : 	area_ui_object
; 226  : 		*area;
; 227  : 
; 228  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 229  : 
; 230  : 	area->font_type = font_id;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _font_id$[ebp]
  00018	89 48 64	 mov	 DWORD PTR [eax+100], ecx

; 231  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ENDP ; set_area_ui_object_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_text_justify@@YG?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_text_justify@@YG?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@Z PROC ; get_area_ui_object_text_justify, COMDAT

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 209  : 	
; 210  : 	area_ui_object
; 211  : 		*area;
; 212  : 
; 213  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 214  : 
; 215  : 	return (text_justify_types) (area->text_justify);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  00018	83 e0 0f	 and	 eax, 15			; 0000000fH

; 216  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_area_ui_object_text_justify@@YG?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_text_justify
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_text_justify@@YGXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_justify$ = 12						; size = 4
?set_area_ui_object_text_justify@@YGXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@Z PROC ; set_area_ui_object_text_justify, COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  : 
; 195  : 	area_ui_object
; 196  : 		*area;
; 197  : 
; 198  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 199  : 
; 200  : 	area->text_justify = justify;

  00012	8b 45 0c	 mov	 eax, DWORD PTR _justify$[ebp]
  00015	83 e0 0f	 and	 eax, 15			; 0000000fH
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  0001b	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  0001e	83 e2 f0	 and	 edx, -16		; fffffff0H
  00021	0b d0		 or	 edx, eax
  00023	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00026	89 50 50	 mov	 DWORD PTR [eax+80], edx

; 201  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?set_area_ui_object_text_justify@@YGXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@Z ENDP ; set_area_ui_object_text_justify
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_add_text@@YGXPAUUI_OBJECT@@PBD@Z
_TEXT	SEGMENT
_area$ = -16						; size = 4
_old_length$ = -12					; size = 4
_new_length$ = -8					; size = 4
_temp_text$ = -4					; size = 4
_obj$ = 8						; size = 4
_text$ = 12						; size = 4
?set_area_ui_object_add_text@@YGXPAUUI_OBJECT@@PBD@Z PROC ; set_area_ui_object_add_text, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 152  : 
; 153  : 	char
; 154  : 		*temp_text;
; 155  : 
; 156  : 	int
; 157  : 		new_length,
; 158  : 		old_length;
; 159  : 
; 160  : 	area_ui_object
; 161  : 		*area;
; 162  : 
; 163  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f0	 mov	 DWORD PTR _area$[ebp], ecx

; 164  : 
; 165  : 	if ((!area->text) || (strlen (area->text) == 0))

  00012	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  00015	83 78 68 00	 cmp	 DWORD PTR [eax+104], 0
  00019	74 13		 je	 SHORT $LN3@set_area_u
  0001b	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  0001e	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 _strlen
  00027	83 c4 04	 add	 esp, 4
  0002a	85 c0		 test	 eax, eax
  0002c	75 18		 jne	 SHORT $LN2@set_area_u
$LN3@set_area_u:

; 166  : 	{
; 167  : 
; 168  : 		set_ui_object_text (obj, text);

  0002e	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00035	51		 push	 ecx
  00036	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00039	8b 02		 mov	 eax, DWORD PTR [edx]
  0003b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  00042	ff d1		 call	 ecx

; 169  : 
; 170  : 		return;

  00044	eb 76		 jmp	 SHORT $LN1@set_area_u
$LN2@set_area_u:

; 171  : 	}
; 172  : 
; 173  : 	new_length = strlen (text);

  00046	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _strlen
  0004f	83 c4 04	 add	 esp, 4
  00052	89 45 f8	 mov	 DWORD PTR _new_length$[ebp], eax

; 174  : 
; 175  : 	old_length = strlen (area->text);

  00055	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  00058	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0005b	51		 push	 ecx
  0005c	e8 00 00 00 00	 call	 _strlen
  00061	83 c4 04	 add	 esp, 4
  00064	89 45 f4	 mov	 DWORD PTR _old_length$[ebp], eax

; 176  : 
; 177  : 	temp_text = (char *) safe_malloc (old_length + new_length + 1);

  00067	8b 45 f8	 mov	 eax, DWORD PTR _new_length$[ebp]
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR _old_length$[ebp]
  0006d	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00077	89 45 fc	 mov	 DWORD PTR _temp_text$[ebp], eax

; 178  : 
; 179  : 	strcpy (temp_text, area->text);

  0007a	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  0007d	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00080	51		 push	 ecx
  00081	8b 55 fc	 mov	 edx, DWORD PTR _temp_text$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 _strcpy
  0008a	83 c4 08	 add	 esp, 8

; 180  : 
; 181  : 	strcat (temp_text, text);

  0008d	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _temp_text$[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 _strcat
  0009a	83 c4 08	 add	 esp, 8

; 182  : 
; 183  : 	set_ui_object_text (obj, temp_text);

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _temp_text$[ebp]
  000a0	50		 push	 eax
  000a1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000a4	51		 push	 ecx
  000a5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  000a8	8b 02		 mov	 eax, DWORD PTR [edx]
  000aa	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  000b1	ff d1		 call	 ecx

; 184  : 
; 185  : 	safe_free (temp_text);

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _temp_text$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN1@set_area_u:

; 186  : }

  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 08 00	 ret	 8
?set_area_ui_object_add_text@@YGXPAUUI_OBJECT@@PBD@Z ENDP ; set_area_ui_object_add_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?get_area_ui_object_text@@YGPBDPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_text@@YGPBDPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_text, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 137  : 	
; 138  : 	area_ui_object
; 139  : 		*area;
; 140  : 
; 141  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 142  : 
; 143  : 	return (area->text);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 68	 mov	 eax, DWORD PTR [eax+104]

; 144  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_text@@YGPBDPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?set_area_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z
_TEXT	SEGMENT
_parent$ = -12						; size = 4
_area$ = -8						; size = 4
_length$ = -4						; size = 4
_obj$ = 8						; size = 4
_text$ = 12						; size = 4
?set_area_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z PROC	; set_area_ui_object_text, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	int
; 77   : 		length;
; 78   : 
; 79   : 	area_ui_object
; 80   : 		*area;
; 81   : 
; 82   : 	ui_object
; 83   : 		*parent;
; 84   : 
; 85   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _area$[ebp], ecx

; 86   : 
; 87   : 	if (area->text)

  00012	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00015	83 78 68 00	 cmp	 DWORD PTR [eax+104], 0
  00019	74 0c		 je	 SHORT $LN4@set_area_u

; 88   : 	{
; 89   : 
; 90   : 		safe_free (area->text);

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0001e	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN4@set_area_u:

; 91   : 	}
; 92   : 
; 93   : 	area->text = NULL;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0002a	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [eax+104], 0

; 94   : 
; 95   : 	if (text)

  00031	83 7d 0c 00	 cmp	 DWORD PTR _text$[ebp], 0
  00035	74 34		 je	 SHORT $LN5@set_area_u

; 96   : 	{
; 97   : 
; 98   : 		length = strlen (text);

  00037	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _strlen
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 99   : 	
; 100  : 		area->text = (char *) safe_malloc ((sizeof (char) * length) + 1);

  00046	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  00049	83 c0 01	 add	 eax, 1
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00055	89 41 68	 mov	 DWORD PTR [ecx+104], eax

; 101  : 	
; 102  : 		strcpy (area->text, text);

  00058	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  0005f	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  00062	52		 push	 edx
  00063	e8 00 00 00 00	 call	 _strcpy
  00068	83 c4 08	 add	 esp, 8
$LN5@set_area_u:

; 103  : 	}
; 104  : 			
; 105  : 	parent = get_ui_object_parent (obj);

  0006b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0007b	ff d0		 call	 eax
  0007d	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 106  : 
; 107  : 	if (parent)

  00080	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00084	74 63		 je	 SHORT $LN6@set_area_u

; 108  : 	{
; 109  : 
; 110  : 		set_ui_object_redraw (parent, TRUE);

  00086	6a 01		 push	 1
  00088	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00098	ff d0		 call	 eax
$LN2@set_area_u:

; 111  : 
; 112  : 		while ((parent) && (get_ui_object_clear (parent)))

  0009a	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0009e	74 47		 je	 SHORT $LN3@set_area_u
  000a0	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000b0	ff d0		 call	 eax
  000b2	85 c0		 test	 eax, eax
  000b4	74 31		 je	 SHORT $LN3@set_area_u

; 113  : 		{
; 114  : 
; 115  : 			parent = get_ui_object_parent (parent);

  000b6	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000b9	50		 push	 eax
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000bd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000c6	ff d0		 call	 eax
  000c8	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 116  : 
; 117  : 			if (parent)

  000cb	83 7d f4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000cf	74 14		 je	 SHORT $LN8@set_area_u

; 118  : 			{
; 119  : 
; 120  : 				set_ui_object_redraw (parent, TRUE);

  000d1	6a 01		 push	 1
  000d3	8b 45 f4	 mov	 eax, DWORD PTR _parent$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000e3	ff d0		 call	 eax
$LN8@set_area_u:

; 121  : 			}
; 122  : 		}

  000e5	eb b3		 jmp	 SHORT $LN2@set_area_u
$LN3@set_area_u:

; 123  : 	}
; 124  : 	else

  000e7	eb 14		 jmp	 SHORT $LN1@set_area_u
$LN6@set_area_u:

; 125  : 	{
; 126  : 
; 127  : 		set_ui_object_redraw (obj, TRUE);

  000e9	6a 01		 push	 1
  000eb	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000fb	ff d0		 call	 eax
$LN1@set_area_u:

; 128  : 	}
; 129  : }

  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c2 08 00	 ret	 8
?set_area_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z ENDP	; set_area_ui_object_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_txt.c
;	COMDAT ?overload_area_ui_object_text_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_text_functions@@YGXH@Z PROC	; overload_area_ui_object_text_functions, COMDAT

; 777  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 778  : 
; 779  : 	fn_set_ui_object_text [type] 				= set_area_ui_object_text;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4], OFFSET ?set_area_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z ; set_area_ui_object_text

; 780  : 
; 781  : 	fn_get_ui_object_text [type] 				= get_area_ui_object_text;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_text@@YGPBDPAUUI_OBJECT@@@Z ; get_area_ui_object_text

; 782  : 
; 783  : 	fn_set_ui_object_add_text [type] 		= set_area_ui_object_add_text;

  00025	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00028	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_add_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4], OFFSET ?set_area_ui_object_add_text@@YGXPAUUI_OBJECT@@PBD@Z ; set_area_ui_object_add_text

; 784  : 
; 785  : 	fn_set_ui_object_text_justify [type] 	= set_area_ui_object_text_justify;

  00033	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00036	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_text_justify@@3PAP6GXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@ZA[eax*4], OFFSET ?set_area_ui_object_text_justify@@YGXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@Z ; set_area_ui_object_text_justify

; 786  : 
; 787  : 	fn_get_ui_object_text_justify [type] 	= get_area_ui_object_text_justify;

  00041	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00044	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_text_justify@@YG?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@Z ; get_area_ui_object_text_justify

; 788  : 
; 789  : 	fn_set_ui_object_font_type [type] 		= set_area_ui_object_font_type;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00052	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4], OFFSET ?set_area_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ; set_area_ui_object_font_type

; 790  : 
; 791  : 	fn_get_ui_object_font_type [type] 		= get_area_ui_object_font_type;

  0005d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00060	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z ; get_area_ui_object_font_type

; 792  : 
; 793  : 	fn_set_ui_object_font_colour [type] 	= set_area_ui_object_font_colour;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0006e	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_font_colour@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_font_colour

; 794  : 	fn_set_ui_object_font_colour_end [type] 	= set_area_ui_object_font_colour_end;

  00079	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0007c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_font_colour_end

; 795  : 	fn_set_ui_object_font_colour_start [type] 	= set_area_ui_object_font_colour_start;

  00087	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0008a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_font_colour_start

; 796  : 
; 797  : 	fn_get_ui_object_font_colour [type] 	= get_area_ui_object_font_colour;

  00095	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00098	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_font_colour

; 798  : 	fn_get_ui_object_font_colour_end [type] 	= get_area_ui_object_font_colour_end;

  000a3	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000a6	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_font_colour_end@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_font_colour_end

; 799  : 	fn_get_ui_object_font_colour_start [type] 	= get_area_ui_object_font_colour_start;

  000b1	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000b4	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_font_colour_start@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_font_colour_start

; 800  : 
; 801  : 	fn_set_ui_object_highlighted_font_type [type] 	= set_area_ui_object_highlighted_font_type;

  000bf	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000c2	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_highlighted_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4], OFFSET ?set_area_ui_object_highlighted_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ; set_area_ui_object_highlighted_font_type

; 802  : 
; 803  : 	fn_get_ui_object_highlighted_font_type [type] 	= get_area_ui_object_highlighted_font_type;

  000cd	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000d0	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_highlighted_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_highlighted_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z ; get_area_ui_object_highlighted_font_type

; 804  : 
; 805  : 	fn_set_ui_object_highlighted_font_colour [type] 	= set_area_ui_object_highlighted_font_colour;

  000db	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000de	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_highlighted_font_colour@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_highlighted_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_highlighted_font_colour

; 806  : 	fn_set_ui_object_highlighted_font_colour_end [type] 	= set_area_ui_object_highlighted_font_colour_end;

  000e9	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000ec	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_highlighted_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_highlighted_font_colour_end

; 807  : 	fn_set_ui_object_highlighted_font_colour_start [type] 	= set_area_ui_object_highlighted_font_colour_start;

  000f7	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000fa	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_highlighted_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_highlighted_font_colour_start

; 808  : 
; 809  : 	fn_get_ui_object_highlighted_font_colour[type] 	= get_area_ui_object_highlighted_font_colour;

  00105	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00108	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_highlighted_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_highlighted_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_highlighted_font_colour

; 810  : 	fn_get_ui_object_highlighted_font_colour_end [type] 	= get_area_ui_object_highlighted_font_colour_end;

  00113	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00116	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_highlighted_font_colour_end@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_highlighted_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_highlighted_font_colour_end

; 811  : 	fn_get_ui_object_highlighted_font_colour_start [type] 	= get_area_ui_object_highlighted_font_colour_start;

  00121	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00124	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_highlighted_font_colour_start@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_highlighted_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_highlighted_font_colour_start

; 812  : 
; 813  : 	fn_set_ui_object_selected_font_type [type] 	= set_area_ui_object_selected_font_type;

  0012f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00132	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_selected_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4], OFFSET ?set_area_ui_object_selected_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ; set_area_ui_object_selected_font_type

; 814  : 
; 815  : 	fn_get_ui_object_selected_font_type [type] 	= get_area_ui_object_selected_font_type;

  0013d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00140	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_selected_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_selected_font_type@@YG?AW4FONT_TYPES@@PAUUI_OBJECT@@@Z ; get_area_ui_object_selected_font_type

; 816  : 
; 817  : 	fn_set_ui_object_selected_font_colour [type] 	= set_area_ui_object_selected_font_colour;

  0014b	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0014e	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_selected_font_colour@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_selected_font_colour@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_selected_font_colour

; 818  : 	fn_set_ui_object_selected_font_colour_end [type] 	= set_area_ui_object_selected_font_colour_end;

  00159	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0015c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_selected_font_colour_end@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_selected_font_colour_end

; 819  : 	fn_set_ui_object_selected_font_colour_start [type] 	= set_area_ui_object_selected_font_colour_start;

  00167	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0016a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4], OFFSET ?set_area_ui_object_selected_font_colour_start@@YGXPAUUI_OBJECT@@DDDD@Z ; set_area_ui_object_selected_font_colour_start

; 820  : 
; 821  : 	fn_get_ui_object_selected_font_colour [type] 	= get_area_ui_object_selected_font_colour;

  00175	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00178	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_selected_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_selected_font_colour@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_selected_font_colour

; 822  : 	fn_get_ui_object_selected_font_colour_end [type] 	= get_area_ui_object_selected_font_colour_end;

  00183	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00186	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_selected_font_colour_end@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_selected_font_colour_end@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_selected_font_colour_end

; 823  : 	fn_get_ui_object_selected_font_colour_start [type] 	= get_area_ui_object_selected_font_colour_start;

  00191	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00194	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_selected_font_colour_start@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_selected_font_colour_start@@YG?AUREAL_COLOUR@@PAUUI_OBJECT@@@Z ; get_area_ui_object_selected_font_colour_start

; 824  : 
; 825  : 	fn_set_ui_object_tool_tips [type] 				= set_area_ui_object_tool_tips;

  0019f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  001a2	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_tool_tips@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4], OFFSET ?set_area_ui_object_tool_tips@@YGXPAUUI_OBJECT@@PBD@Z ; set_area_ui_object_tool_tips

; 826  : 
; 827  : 	fn_get_ui_object_tool_tips [type] 				= get_area_ui_object_tool_tips;

  001ad	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  001b0	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_tool_tips@@3PAP6GPBDPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_tool_tips@@YGPBDPAUUI_OBJECT@@@Z ; get_area_ui_object_tool_tips

; 828  : }

  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	5b		 pop	 ebx
  001be	8b e5		 mov	 esp, ebp
  001c0	5d		 pop	 ebp
  001c1	c2 04 00	 ret	 4
?overload_area_ui_object_text_functions@@YGXH@Z ENDP	; overload_area_ui_object_text_functions
_TEXT	ENDS
END
